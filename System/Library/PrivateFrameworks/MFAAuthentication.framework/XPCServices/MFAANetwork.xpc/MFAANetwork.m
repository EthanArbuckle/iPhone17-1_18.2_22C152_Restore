int main(int argc, const char **argv, const char **envp)
{
  void *v3;
  void *v4;

  v3 = objc_opt_new();
  v4 = +[NSXPCListener serviceListener];
  [v4 setDelegate:v3];
  [v4 resume];

  return 0;
}

void init_logging_modules(uint64_t a1, char a2, uint64_t a3)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 0x40000000;
  block[2] = __init_logging_modules_block_invoke;
  block[3] = &__block_descriptor_tmp;
  char v4 = a2;
  block[4] = a3;
  block[5] = a1;
  if (init_logging_modules_onceToken != -1) {
    dispatch_once(&init_logging_modules_onceToken, block);
  }
}

void __init_logging_modules_block_invoke(uint64_t a1)
{
  v2 = "eue:";
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v3 = 0;
    unint64_t v4 = 0;
    int v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(a1 + 32);
      v7 = *(const char **)(v6 + v3);
      if (!v7)
      {
        v7 = "<Undefined>";
        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 67109120;
          LODWORD(v12) = v4;
          _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Subsystem missing for logging module %d!\n(Check LoggingModuleEntry_t table)", buf, 8u);
          uint64_t v6 = *(void *)(a1 + 32);
          v7 = "<Undefined>";
        }
      }
      v8 = *(const char **)(v6 + v3 + 8);
      if (!v8)
      {
        v8 = "<Undefined>";
        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          __init_logging_modules_block_invoke_cold_1(v15, v4, &v16);
          v8 = "<Undefined>";
        }
      }
      os_log_t v9 = os_log_create(v7, v8);
      *(void *)(*(void *)(a1 + 40) + 8 * v4) = v9;
      if (v9)
      {
        ++v5;
        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 136315394;
          v12 = v7;
          __int16 v13 = 2080;
          v14 = v8;
          _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "Created log object %s: %s", buf, 0x16u);
        }
      }
      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315394;
        v12 = v7;
        __int16 v13 = 2080;
        v14 = v8;
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Failed to create os_log_t object %s: %s!", buf, 0x16u);
      }
      ++v4;
      unint64_t v10 = *(unsigned __int8 *)(a1 + 48);
      v3 += 16;
    }
    while (v4 < v10);
    v2 = "setDelegateQueue:" + 13;
  }
  else
  {
    LODWORD(v10) = 0;
    int v5 = 0;
  }
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = *((void *)v2 + 333);
    LODWORD(v12) = v5;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "Created %d log object(s)!", buf, 8u);
    LODWORD(v10) = *(unsigned __int8 *)(a1 + 48);
  }
  gLogObjects = *(void *)(a1 + 40);
  gNumLogObjects = v10;
}

uint64_t ascii_to_hex(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (a3 >= 2)
  {
    uint64_t v3 = 0;
    unint64_t v4 = a3 >> 1;
    do
    {
      uint64_t v5 = 0;
      __int16 v13 = -21846;
      char v6 = 1;
      do
      {
        char v7 = v6;
        int v8 = *(unsigned __int8 *)(a2 + (v5 | (2 * v3)));
        unsigned int v9 = v8 - 48;
        unsigned int v10 = v8 - 65;
        if ((v8 - 97) >= 6) {
          char v11 = 0;
        }
        else {
          char v11 = v8 - 87;
        }
        char v12 = v8 - 55;
        if (v10 > 5) {
          char v12 = v11;
        }
        if (v9 < 0xA) {
          char v12 = v9;
        }
        *((unsigned char *)&v13 + v5) = v12;
        uint64_t v5 = 1;
        char v6 = 0;
      }
      while ((v7 & 1) != 0);
      *(unsigned char *)(result + v3++) = HIBYTE(v13) | (16 * v13);
    }
    while (v3 != v4);
  }
  return result;
}

unsigned __int8 *printBytes(unsigned __int8 *result, uint64_t a2, char *a3, int a4)
{
  if (result)
  {
    uint64_t v4 = a2;
    if (a2)
    {
      char v7 = result;
      do
      {
        unsigned int v8 = *v7++;
        result = (unsigned __int8 *)printf(a3, v8);
        --v4;
      }
      while (v4);
      if (a4)
      {
        return (unsigned __int8 *)putchar(10);
      }
    }
  }
  return result;
}

const char *removeNewline(const char *a1)
{
  size_t v2 = strlen(a1);
  if (v2 && a1[v2 - 1] == 10) {
    a1[v2 - 1] = 0;
  }
  return a1;
}

char *createHexString(uint64_t a1, unint64_t a2, int a3)
{
  if (a1 && a2)
  {
    if ((a2 & 0x8000000000000000) == 0)
    {
      if (!a3)
      {
        size_t v5 = (2 * a2) | 1;
LABEL_10:
        char v7 = (char *)malloc_type_malloc(v5, 0xA799D077uLL);
        if (v7)
        {
          unint64_t v8 = 0;
          unsigned int v9 = v7;
          v14 = v7;
          unsigned int v10 = v7;
          size_t v11 = v5;
          while (a3)
          {
            if (v8 >= a2 - 1)
            {
              char v12 = v10;
              size_t v13 = v11;
              goto LABEL_17;
            }
            snprintf(v10, v11, "%02X ");
LABEL_18:
            ++v8;
            v11 -= 3;
            v10 += 3;
            v9 += 2;
            v5 -= 2;
            if (a2 == v8) {
              return v14;
            }
          }
          char v12 = v9;
          size_t v13 = v5;
LABEL_17:
          snprintf(v12, v13, "%02X");
          goto LABEL_18;
        }
        goto LABEL_21;
      }
      if (is_mul_ok(a2, 3uLL))
      {
        size_t v5 = 3 * a2;
        goto LABEL_10;
      }
    }
    do
LABEL_21:
      result = (char *)malloc_type_malloc(0xEuLL, 0xD85E358FuLL);
    while (!result);
    strcpy(result, "<print error>");
    return result;
  }
  result = (char *)malloc_type_malloc(7uLL, 0x55AA73BCuLL);
  if (result) {
    strcpy(result, "(null)");
  }
  return result;
}

uint64_t obfuscatedPointer(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = obfuscatedPointer_salt;
    if (!obfuscatedPointer_salt)
    {
      uint64_t v2 = random();
      obfuscatedPointer_salt = v2;
    }
    return v1 + v2;
  }
  return result;
}

BOOL getMemoryUse(void *a1, void *a2, void *a3)
{
  kern_return_t v7;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[4];
  long long v11;
  long long v12;
  long long v13;
  long long v14;
  long long v15;
  long long v16;
  long long v17;
  long long v18;
  long long v19;
  long long v20;
  long long v21;
  long long v22;
  long long v23;
  long long v24;
  long long v25;
  long long v26;
  long long v27;
  long long v28;
  long long v29;
  long long v30;
  long long v31;
  long long v32;
  int v33;

  v33 = -1431655766;
  *(void *)&long long v6 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v31 = v6;
  v32 = v6;
  v29 = v6;
  v30 = v6;
  v27 = v6;
  v28 = v6;
  v25 = v6;
  v26 = v6;
  v23 = v6;
  v24 = v6;
  v21 = v6;
  v22 = v6;
  v19 = v6;
  v20 = v6;
  v18 = v6;
  int v16 = v6;
  v17 = v6;
  v14 = v6;
  v15 = v6;
  char v12 = v6;
  size_t v13 = v6;
  *(_OWORD *)task_info_out = v6;
  size_t v11 = v6;
  task_info_outCnt = 93;
  char v7 = task_info(mach_task_self_, 0x16u, task_info_out, &task_info_outCnt);
  if (!v7)
  {
    if (a1) {
      *a1 = v11;
    }
    if (a2) {
      *a2 = *(void *)task_info_out;
    }
    if (a3) {
      *a3 = v19;
    }
  }
  return v7 == 0;
}

void init_logging()
{
  init_logging_modules((uint64_t)&_gLogObjects, 5, (uint64_t)_kLoggingModuleEntries);
  init_logging_signposts();
}

CFStringRef errorDescription(void *a1, unint64_t a2)
{
  id v3 = a1;
  if (![v3 isEqualToString:@"MFAACertificateManagerErrorDomain"]
    && ![v3 isEqualToString:@"MFAATokenManagerErrorDomain"])
  {
    if (![v3 isEqualToString:@"MFAAPairingManagerErrorDomain"])
    {
      CFStringRef v5 = @"An unknown error has occurred.";
      goto LABEL_11;
    }
    if (a2 > 0xFFFFFFFFFFFFFFFBLL)
    {
      uint64_t v4 = &off_100078600 + a2 + 4;
      goto LABEL_5;
    }
LABEL_9:
    CFStringRef v5 = 0;
    goto LABEL_11;
  }
  if (a2 <= 0xFFFFFFFFFFFFFFF9) {
    goto LABEL_9;
  }
  uint64_t v4 = &off_1000785D0 + a2 + 6;
LABEL_5:
  CFStringRef v5 = *v4;
LABEL_11:

  return v5;
}

unint64_t systemInfo_getCurrentUnixTime()
{
  v0 = +[NSDate date];
  [v0 timeIntervalSince1970];
  double v2 = v1;

  unint64_t v3 = vcvtad_u64_f64(v2);
  if (v2 <= 0.0) {
    return 0;
  }
  else {
    return v3;
  }
}

unint64_t systemInfo_getCurrentUnixTimeMS()
{
  v0 = +[NSDate date];
  [v0 timeIntervalSince1970];
  double v2 = v1;

  unint64_t v3 = vcvtad_u64_f64(v2 * 1000.0);
  if (v2 <= 0.0) {
    return 0;
  }
  else {
    return v3;
  }
}

uint64_t systemInfo_isInternalBuild()
{
  if (systemInfo_isInternalBuild_onceToken != -1) {
    dispatch_once(&systemInfo_isInternalBuild_onceToken, &__block_literal_global);
  }
  return systemInfo_isInternalBuild_internalBuild;
}

void __systemInfo_isInternalBuild_block_invoke(id a1)
{
  systemInfo_isInternalBuild_internalBuild = MGGetBoolAnswer();
}

uint64_t systemInfo_isDeveloperBuild()
{
  if (systemInfo_isDeveloperBuild_onceToken != -1) {
    dispatch_once(&systemInfo_isDeveloperBuild_onceToken, &__block_literal_global_3);
  }
  return systemInfo_isDeveloperBuild_developerBuild;
}

void __systemInfo_isDeveloperBuild_block_invoke(id a1)
{
  double v1 = (const void *)MGCopyAnswer();
  if (v1)
  {
    double v2 = v1;
    systemInfo_isDeveloperBuild_developerBuild = CFEqual(v1, @"Beta") != 0;
    CFRelease(v2);
  }
  else
  {
    systemInfo_isDeveloperBuild_developerBuild = 0;
  }
}

uint64_t systemInfo_systemSupportsPearl()
{
  if (systemInfo_systemSupportsPearl_onceToken != -1) {
    dispatch_once(&systemInfo_systemSupportsPearl_onceToken, &__block_literal_global_11);
  }
  return systemInfo_systemSupportsPearl_supportsPearl;
}

void __systemInfo_systemSupportsPearl_block_invoke(id a1)
{
  systemInfo_systemSupportsPearl_supportsPearl = MGGetBoolAnswer();
}

uint64_t systemInfo_systemSupportsWAPI()
{
  if (systemInfo_systemSupportsWAPI_onceToken != -1) {
    dispatch_once(&systemInfo_systemSupportsWAPI_onceToken, &__block_literal_global_16);
  }
  return systemInfo_systemSupportsWAPI_supportsWAPI;
}

void __systemInfo_systemSupportsWAPI_block_invoke(id a1)
{
  systemInfo_systemSupportsWAPI_supportsWAPI = MGGetBoolAnswer();
}

uint64_t systemInfo_copyDeviceClass()
{
  return MGCopyAnswer();
}

id systemInfo_isHomePod()
{
  v0 = (void *)MGCopyAnswer();
  id v1 = [v0 isEqualToString:@"AudioAccessory"];

  return v1;
}

uint64_t systemInfo_copyRegionCode()
{
  if (systemInfo_copyRegionCode_onceToken != -1) {
    dispatch_once(&systemInfo_copyRegionCode_onceToken, &__block_literal_global_24);
  }
  if (systemInfo_copyRegionCode_regionCode)
  {
    CFTypeID v0 = CFGetTypeID((CFTypeRef)systemInfo_copyRegionCode_regionCode);
    if (v0 == CFStringGetTypeID()) {
      return systemInfo_copyRegionCode_regionCode;
    }
  }
  uint64_t result = 0;
  systemInfo_copyRegionCode_regionCode = 0;
  return result;
}

void __systemInfo_copyRegionCode_block_invoke(id a1)
{
  systemInfo_copyRegionCode_regionCode = MGCopyAnswer();
}

const void *systemInfo_copyProductType()
{
  uint64_t result = (const void *)MGCopyAnswer();
  if (result)
  {
    id v1 = result;
    CFTypeID v2 = CFGetTypeID(result);
    if (v2 == CFStringGetTypeID()) {
      return v1;
    }
    else {
      return 0;
    }
  }
  return result;
}

const void *systemInfo_copyProductVersion()
{
  uint64_t result = (const void *)MGCopyAnswer();
  if (result)
  {
    id v1 = result;
    CFTypeID v2 = CFGetTypeID(result);
    if (v2 == CFStringGetTypeID()) {
      return v1;
    }
    else {
      return 0;
    }
  }
  return result;
}

id convertNSDataToNSString(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    id v5 = v3;
    long long v6 = (unsigned __int8 *)[v5 bytes];
    id v7 = objc_alloc_init((Class)NSMutableString);
    if ([v5 length])
    {
      unint64_t v8 = 0;
      do
        objc_msgSend(v7, "appendFormat:", v4, v6[v8++]);
      while (v8 < (unint64_t)[v5 length]);
    }
    unsigned int v9 = +[NSString stringWithString:v7];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id trimBidirectionalUnicodeCharacters(void *a1)
{
  id v1 = a1;
  CFTypeID v2 = +[NSCharacterSet characterSetWithCharactersInString:@"\u202A\u202B\u202C\u202D"];
  id v3 = [v1 stringByTrimmingCharactersInSet:v2];

  return v3;
}

id removeBidirectionalUnicodeCharacters(void *a1)
{
  id v1 = a1;
  CFTypeID v2 = +[NSCharacterSet characterSetWithCharactersInString:@"\u202A\u202B\u202C\u202D"];
  id v3 = [v1 componentsSeparatedByCharactersInSet:v2];

  id v4 = [v3 componentsJoinedByString:&stru_10007E9F8];

  return v4;
}

id convertNSStringToNSData(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    CFTypeID v2 = +[NSCharacterSet hexadecimalCharacterSet];
    id v3 = [v2 invertedSet];
    id v4 = [v1 componentsSeparatedByCharactersInSet:v3];
    id v5 = [v4 componentsJoinedByString:&stru_10007E9F8];

    id v1 = v5;
    long long v6 = (const char *)[v1 UTF8String];
    size_t v7 = strlen(v6) >> 1;
    unint64_t v8 = malloc_type_malloc(v7, 0x71BB6ACDuLL);
    if (v6 && (unint64_t)[v1 length] >= 2)
    {
      unint64_t v9 = 0;
      int v10 = 0;
      do
      {
        uint64_t v11 = 0;
        __int16 v22 = -21846;
        char v12 = 1;
        do
        {
          char v13 = v12;
          int v14 = v6[v11 | (2 * v10)];
          unsigned int v15 = v14 - 48;
          unsigned int v16 = v14 - 65;
          if ((v14 - 97) >= 6) {
            char v17 = 0;
          }
          else {
            char v17 = v14 - 87;
          }
          char v18 = v14 - 55;
          if (v16 > 5) {
            char v18 = v17;
          }
          if (v15 < 0xA) {
            char v18 = v15;
          }
          *((unsigned char *)&v22 + v11) = v18;
          uint64_t v11 = 1;
          char v12 = 0;
        }
        while ((v13 & 1) != 0);
        v8[v9] = HIBYTE(v22) | (16 * v22);
        unint64_t v9 = (v10 + 1);
        unint64_t v19 = (unint64_t)[v1 length];
        int v10 = v9;
      }
      while (v9 < v19 >> 1);
    }
    v20 = +[NSData dataWithBytes:v8 length:v7];
    if (v8) {
      free(v8);
    }
  }
  else
  {
    v20 = 0;
  }

  return v20;
}

uint64_t classImplementsMethodsInProtocol(void *a1, void *a2, BOOL a3, BOOL a4, void *a5)
{
  unint64_t v9 = a2;
  int v10 = +[NSMutableSet set];
  unsigned int outCount = 0;
  uint64_t v11 = protocol_copyMethodDescriptionList(v9, a3, a4, &outCount);
  char v12 = v11;
  if (outCount)
  {
    unint64_t v13 = 0;
    p_name = &v11->name;
    do
    {
      if (([a1 instancesRespondToSelector:*p_name] & 1) == 0)
      {
        unsigned int v15 = NSStringFromSelector(*p_name);
        [v10 addObject:v15];
      }
      ++v13;
      p_name += 2;
    }
    while (v13 < outCount);
  }
  free(v12);
  if (outCount && [v10 count])
  {
    uint64_t v16 = 0;
    if (!a5) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  uint64_t v16 = 1;
  if (a5)
  {
LABEL_11:
    *a5 = +[NSSet setWithSet:v10];
  }
LABEL_12:

  return v16;
}

uint64_t isNSObjectNull(void *a1)
{
  if (!a1) {
    return 1;
  }
  id v1 = a1;
  CFTypeID v2 = +[NSNull null];
  id v3 = [v1 isEqual:v2];

  return (uint64_t)v3;
}

id NSObjectIfNotNull(void *a1)
{
  id v1 = a1;
  if (isNSObjectNull(v1)) {
    id v2 = 0;
  }
  else {
    id v2 = v1;
  }

  return v2;
}

uint64_t isNSObjectEqual(unint64_t a1, uint64_t a2)
{
  if (a1 | a2) {
    return (uint64_t)[(id)a1 isEqual:a2];
  }
  else {
    return 1;
  }
}

id castNSObjectToType(void *a1)
{
  id v1 = a1;
  if (v1 && (objc_opt_isKindOfClass() & 1) != 0) {
    id v2 = v1;
  }
  else {
    id v2 = 0;
  }

  return v2;
}

id readJSONFile(uint64_t a1)
{
  if (a1)
  {
    id v1 = +[NSData dataWithContentsOfFile:a1];
    if (v1)
    {
      uint64_t v5 = 0;
      id v2 = +[NSJSONSerialization JSONObjectWithData:v1 options:0 error:&v5];
      id v3 = v2;
      if (!v5)
      {
LABEL_6:

        goto LABEL_8;
      }
    }
    id v3 = 0;
    goto LABEL_6;
  }
  id v3 = 0;
LABEL_8:
  return v3;
}

id writeJSONFile(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (!v4) {
    goto LABEL_7;
  }
  if (!v3) {
    id v3 = &__NSDictionary0__struct;
  }
  if (+[NSJSONSerialization isValidJSONObject:v3])
  {
    uint64_t v9 = 0;
    uint64_t v5 = +[NSJSONSerialization dataWithJSONObject:v3 options:1 error:&v9];
    long long v6 = v5;
    if (v9) {
      id v7 = 0;
    }
    else {
      id v7 = [v5 writeToFile:v4 atomically:1];
    }
  }
  else
  {
LABEL_7:
    id v7 = 0;
  }

  return v7;
}

id base64EncodeArray(void *a1)
{
  id v1 = a1;
  id v2 = +[NSMutableArray array];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  id v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        unint64_t v8 = objc_msgSend(*(id *)(*((void *)&v10 + 1) + 8 * i), "base64EncodedStringWithOptions:", 0, (void)v10);
        if (v8) {
          [v2 addObject:v8];
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

id base64DecodeArray(void *a1)
{
  id v1 = a1;
  id v2 = +[NSMutableArray array];
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v3 = v1;
  id v4 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v13;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v13 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void *)(*((void *)&v12 + 1) + 8 * i);
        id v9 = objc_alloc((Class)NSData);
        id v10 = objc_msgSend(v9, "initWithBase64EncodedString:options:", v8, 0, (void)v12);
        if (v10) {
          [v2 addObject:v10];
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v5);
  }

  return v2;
}

id logObjectForModule(int a1)
{
  if (gLogObjects) {
    BOOL v1 = gNumLogObjects <= a1;
  }
  else {
    BOOL v1 = 1;
  }
  if (v1)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      logObjectForModule_cold_1();
    }
    id v3 = &_os_log_default;
    id v2 = &_os_log_default;
  }
  else
  {
    id v3 = *(id *)(gLogObjects + 8 * a1);
  }
  return v3;
}

void sub_1000040F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void sub_100004538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_10000484C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

id _splitASN1Tokens(void *a1)
{
  id v1 = a1;
  if (gLogObjects) {
    BOOL v2 = gNumLogObjects < 3;
  }
  else {
    BOOL v2 = 1;
  }
  if (v2)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      -[MFAANetwork _init]();
    }
    id v4 = &_os_log_default;
    id v3 = &_os_log_default;
  }
  else
  {
    id v4 = *(id *)(gLogObjects + 16);
  }
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    _splitASN1Tokens_cold_13();
  }

  if (gLogObjects && gNumLogObjects >= 3)
  {
    id v5 = *(id *)(gLogObjects + 16);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      -[MFAANetwork _init]();
    }
    id v5 = &_os_log_default;
    id v6 = &_os_log_default;
  }
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
    _splitASN1Tokens_cold_11(v1);
  }

  id v52 = +[NSMutableArray array];
  id v7 = v1;
  uint64_t v8 = [v7 bytes];
  id v9 = v7;
  id v10 = [v9 bytes];
  id v51 = v9;
  long long v11 = (char *)[v9 length];
  if (gLogObjects && gNumLogObjects >= 3)
  {
    uint64_t v12 = *(id *)(gLogObjects + 16);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      -[MFAANetwork _init]();
    }
    uint64_t v12 = &_os_log_default;
    id v13 = &_os_log_default;
  }
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
    _splitASN1Tokens_cold_9((uint64_t)v8);
  }
  uint64_t v14 = &v11[(void)v10];

  if (gLogObjects && gNumLogObjects >= 3)
  {
    uint64_t v15 = *(id *)(gLogObjects + 16);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      -[MFAANetwork _init]();
    }
    uint64_t v15 = &_os_log_default;
    id v16 = &_os_log_default;
  }
  unint64_t v17 = (unint64_t)(v14 - 1);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG)) {
    _splitASN1Tokens_cold_7((uint64_t)(v14 - 1));
  }

  if ((unint64_t)v8 < v17)
  {
    char v18 = v14;
    while (1)
    {
      uint64_t v19 = gLogObjects;
      int v20 = gNumLogObjects;
      if (!gLogObjects || gNumLogObjects < 3)
      {
        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)v58 = 134218240;
          *(void *)&v58[4] = v19;
          *(_WORD *)&v58[12] = 1024;
          *(_DWORD *)&v58[14] = v20;
          _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Make sure you have called init_logging()!\ngLogObjects: %p, gNumLogObjects: %d", v58, 0x12u);
        }
        id v22 = &_os_log_default;
        v23 = &_os_log_default;
      }
      else
      {
        v23 = *(id *)(gLogObjects + 16);
      }
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG)) {
        _splitASN1Tokens_cold_3((uint64_t)v59, (uint64_t)v8);
      }

      v53[0] = v8;
      v53[1] = v18 - v8;
      memset(v58, 0, 24);
      if (DERDecodeItem((uint64_t)v53, (unint64_t *)v58)) {
        break;
      }
      uint64_t v24 = gLogObjects;
      int v25 = gNumLogObjects;
      if (gLogObjects && gNumLogObjects >= 3)
      {
        v26 = *(id *)(gLogObjects + 16);
      }
      else
      {
        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 134218240;
          uint64_t v61 = v24;
          __int16 v62 = 1024;
          int v63 = v25;
          _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Make sure you have called init_logging()!\ngLogObjects: %p, gNumLogObjects: %d", buf, 0x12u);
        }
        id v27 = &_os_log_default;
        v26 = &_os_log_default;
      }
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEBUG)) {
        _splitASN1Tokens_cold_5(v56, v57, v26);
      }

      uint64_t v29 = *(void *)&v58[8];
      uint64_t v28 = *(void *)&v58[16];
      uint64_t v30 = gLogObjects;
      int v31 = gNumLogObjects;
      if (gLogObjects && gNumLogObjects >= 3)
      {
        v32 = *(id *)(gLogObjects + 16);
      }
      else
      {
        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 134218240;
          uint64_t v61 = v30;
          __int16 v62 = 1024;
          int v63 = v31;
          _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Make sure you have called init_logging()!\ngLogObjects: %p, gNumLogObjects: %d", buf, 0x12u);
        }
        id v33 = &_os_log_default;
        v32 = &_os_log_default;
      }
      uint64_t v34 = v29 + v28 - 1;
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEBUG)) {
        _splitASN1Tokens_cold_4((uint64_t)v55, v34);
      }

      uint64_t v35 = gLogObjects;
      int v36 = gNumLogObjects;
      if (gLogObjects && gNumLogObjects >= 3)
      {
        v37 = *(id *)(gLogObjects + 16);
      }
      else
      {
        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 134218240;
          uint64_t v61 = v35;
          __int16 v62 = 1024;
          int v63 = v36;
          _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Make sure you have called init_logging()!\ngLogObjects: %p, gNumLogObjects: %d", buf, 0x12u);
        }
        id v38 = &_os_log_default;
        v37 = &_os_log_default;
      }
      uint64_t v39 = v34 - (void)v8 + 1;
      if (os_log_type_enabled(v37, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 134217984;
        uint64_t v61 = v39;
        _os_log_debug_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEBUG, "itemLength: %zu", buf, 0xCu);
      }

      v40 = +[NSData dataWithBytes:v8 length:v39];
      [v52 addObject:v40];

      uint64_t v42 = *(void *)&v58[8];
      uint64_t v41 = *(void *)&v58[16];
      uint64_t v43 = gLogObjects;
      int v44 = gNumLogObjects;
      if (gLogObjects && gNumLogObjects >= 3)
      {
        v45 = *(id *)(gLogObjects + 16);
      }
      else
      {
        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 134218240;
          uint64_t v61 = v43;
          __int16 v62 = 1024;
          int v63 = v44;
          _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Make sure you have called init_logging()!\ngLogObjects: %p, gNumLogObjects: %d", buf, 0x12u);
        }
        id v46 = &_os_log_default;
        v45 = &_os_log_default;
      }
      uint64_t v8 = (unsigned char *)(v42 + v41);
      if (os_log_type_enabled(v45, OS_LOG_TYPE_DEBUG)) {
        _splitASN1Tokens_cold_3((uint64_t)v54, (uint64_t)v8);
      }

      if ((unint64_t)v8 >= v17) {
        goto LABEL_83;
      }
    }

    id v52 = 0;
  }
LABEL_83:
  if (gLogObjects && gNumLogObjects >= 3)
  {
    v47 = *(id *)(gLogObjects + 16);
    v48 = v51;
  }
  else
  {
    v48 = v51;
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      -[MFAANetwork _init]();
    }
    v47 = &_os_log_default;
    id v49 = &_os_log_default;
  }
  if (os_log_type_enabled(v47, OS_LOG_TYPE_DEBUG)) {
    _splitASN1Tokens_cold_1();
  }

  return v52;
}

void sub_10000E9A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10000F124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10000FD70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100010850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100011314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x12u);
}

void OUTLINED_FUNCTION_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_4(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_5(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_6(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_7(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

id OUTLINED_FUNCTION_10(void *a1, const char *a2)
{
  return [a1 initWithData:v2 encoding:4];
}

void OUTLINED_FUNCTION_11(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

uint64_t OUTLINED_FUNCTION_15(uint64_t a1, uint64_t a2)
{
  return obfuscatedPointer(a2);
}

void OUTLINED_FUNCTION_16(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_debug_impl(a1, v4, OS_LOG_TYPE_DEBUG, a4, v5, 0xCu);
}

id OUTLINED_FUNCTION_17(void *a1, const char *a2)
{
  return [a1 initWithData:v2 encoding:4];
}

void OUTLINED_FUNCTION_18(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void init_logging_signposts()
{
}

void init_logging_signpost_modules(uint64_t a1, char a2, uint64_t a3)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 0x40000000;
  block[2] = __init_logging_signpost_modules_block_invoke;
  block[3] = &__block_descriptor_tmp_0;
  char v4 = a2;
  block[4] = a3;
  block[5] = a1;
  if (init_logging_signpost_modules_onceToken != -1) {
    dispatch_once(&init_logging_signpost_modules_onceToken, block);
  }
}

void __init_logging_signpost_modules_block_invoke(uint64_t a1)
{
  uint64_t v2 = "eue:";
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v3 = 0;
    unint64_t v4 = 0;
    int v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(a1 + 32);
      id v7 = *(const char **)(v6 + v3);
      if (!v7)
      {
        id v7 = "<Undefined>";
        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 67109120;
          LODWORD(v12) = v4;
          _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Subsystem missing for logging module %d!\n(Check LoggingSignpostModuleEntry_t table)", buf, 8u);
          uint64_t v6 = *(void *)(a1 + 32);
          id v7 = "<Undefined>";
        }
      }
      uint64_t v8 = *(const char **)(v6 + v3 + 8);
      if (!v8)
      {
        uint64_t v8 = "<Undefined>";
        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          __init_logging_signpost_modules_block_invoke_cold_1(v15, v4, &v16);
          uint64_t v8 = "<Undefined>";
        }
      }
      os_log_t v9 = os_log_create(v7, v8);
      *(void *)(*(void *)(a1 + 40) + 8 * v4) = v9;
      if (v9)
      {
        ++v5;
        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 136315394;
          uint64_t v12 = v7;
          __int16 v13 = 2080;
          uint64_t v14 = v8;
          _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "Created log object %s: %s", buf, 0x16u);
        }
      }
      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315394;
        uint64_t v12 = v7;
        __int16 v13 = 2080;
        uint64_t v14 = v8;
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Failed to create os_log_t object %s: %s!", buf, 0x16u);
      }
      ++v4;
      unint64_t v10 = *(unsigned __int8 *)(a1 + 48);
      v3 += 16;
    }
    while (v4 < v10);
    uint64_t v2 = "setDelegateQueue:" + 13;
  }
  else
  {
    LODWORD(v10) = 0;
    int v5 = 0;
  }
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = *((void *)v2 + 333);
    LODWORD(v12) = v5;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "Created %d log object(s)!", buf, 8u);
    LODWORD(v10) = *(unsigned __int8 *)(a1 + 48);
  }
  gLogSignpostObjects = *(void *)(a1 + 40);
  gNumLogSignpostObjects = v10;
}

void sub_100016320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100016454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

void *sub_1000169F8(void *result)
{
  const void *result = ++qword_1000828C8;
  return result;
}

uint64_t sub_100016A14(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, void *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v30 = 1;
  uint64_t v31 = a4;
  int v32 = 16777472;
  int v33 = a5;
  NDR_record_t v34 = NDR_record;
  int v17 = *a3;
  int v35 = a2;
  int v36 = v17;
  int v37 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  uint64_t v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v19)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            int v21 = v33;
            if (v33 == v47)
            {
              uint64_t v20 = 0;
              int v22 = *(_DWORD *)&v34.mig_vers;
              *a3 = v38;
              long long v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              long long v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              long long v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              long long v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              int v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port) {
              uint64_t v20 = 4294966996;
            }
            else {
              uint64_t v20 = HIDWORD(v31);
            }
          }
        }
        else
        {
          uint64_t v20 = 4294966996;
        }
      }
      else
      {
        uint64_t v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_100016C70(mach_port_t a1, unsigned int a2, long long *a3)
{
  long long v4 = a3[5];
  long long v19 = a3[4];
  long long v20 = v4;
  long long v5 = a3[7];
  long long v21 = a3[6];
  long long v22 = v5;
  long long v6 = a3[1];
  long long v15 = *a3;
  long long v16 = v6;
  long long v7 = a3[3];
  long long v17 = a3[2];
  NDR_record_t v13 = NDR_record;
  unsigned int v14 = a2;
  long long v18 = v7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    uint64_t v10 = 4294966995;
    goto LABEL_17;
  }
  uint64_t v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v10 = v14;
  if (v14) {
    goto LABEL_17;
  }
  return v10;
}

uint64_t sub_100016E00(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, void *a9, _DWORD *a10)
{
  int v18 = 1;
  uint64_t v19 = a6;
  int v20 = 16777472;
  int v21 = a7;
  NDR_record_t v22 = NDR_record;
  *(_DWORD *)long long v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  int v24 = a7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  uint64_t v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v13)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            int v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              uint64_t v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port) {
              uint64_t v14 = 4294966996;
            }
            else {
              uint64_t v14 = HIDWORD(v19);
            }
          }
        }
        else
        {
          uint64_t v14 = 4294966996;
        }
      }
      else
      {
        uint64_t v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_100016FF0(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if (v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      uint64_t v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            uint64_t v12 = v18;
            if (!v18)
            {
              int v15 = v20;
              *a2 = v19;
              *a3 = v15;
              int v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port) {
            BOOL v13 = 1;
          }
          else {
            BOOL v13 = v18 == 0;
          }
          if (v13) {
            uint64_t v12 = 4294966996;
          }
          else {
            uint64_t v12 = v18;
          }
          goto LABEL_23;
        }
      }
      uint64_t v12 = 4294966996;
    }
    else
    {
      uint64_t v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t sub_10001716C(uint64_t a1)
{
  uint64_t v1 = (uint64_t)*(&off_10007DD80
                + ((-35 * (dword_1000827E0 ^ 0xD8 ^ qword_100081B78)) ^ byte_100073C90[byte_10006F140[(-35 * (dword_1000827E0 ^ 0xD8 ^ qword_100081B78))] ^ 0x3B])
                + 37);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = *(&off_10007DD80
       + (byte_100068C50[byte_100073D94[(-35 * (v2 ^ qword_100081B78 ^ 0xD8)) - 4] ^ 0xD6] ^ (-35 * (v2 ^ qword_100081B78 ^ 0xD8)))
       - 11);
  uint64_t v4 = (*v3 ^ v2) - (void)&v6;
  *(void *)(v1 - 4) = 1226760413 * v4 + 0x6CBF210706C72F78;
  *uint64_t v3 = 1226760413 * (v4 ^ 0x5B705F9A26A579D8);
  unsigned int v8 = 724 - 1759421093 * ((&v7 + 137599165 - 2 * (&v7 & 0x83398BD)) ^ 0xBB4E28E9);
  uint64_t v7 = a1;
  LOBYTE(v3) = -35 * ((*(_DWORD *)v3 - *(_DWORD *)(v1 - 4)) ^ 0xD8);
  (*(void (**)(uint64_t *))((char *)*(&off_10007DD80
                                              + ((-35
                                                                               * ((qword_100081B78 + dword_1000827E0) ^ 0xD8)) ^ byte_100073C90[byte_10006F140[(-35 * ((qword_100081B78 + dword_1000827E0) ^ 0xD8))] ^ 0x3B])
                                              + 43)
                                    + 8
                                    * (byte_100073C90[byte_10006F14C[v3 - 12] ^ 0x3B] ^ v3)
                                    + 17196))(&v7);
  return v9;
}

uint64_t sub_100017350(char a1, unsigned int a2)
{
  return byte_100068B54[(byte_100073B90[a2] ^ a1) - 4] ^ a2;
}

uint64_t sub_10001737C(unsigned int a1)
{
  return byte_100073C90[byte_10006F14C[a1 - 12] ^ 0x8C] ^ a1;
}

uint64_t sub_1000173A8(char a1, unsigned int a2)
{
  return byte_100073E94[(byte_10006F24C[a2 - 12] ^ a1) - 4] ^ a2;
}

uint64_t sub_1000173D4(unsigned int a1)
{
  return byte_100073F98[(byte_10006F340[a1] ^ 0x8B) - 8] ^ a1;
}

uint64_t sub_100017404(unsigned int a1)
{
  return byte_100068C50[byte_100073D94[a1 - 4] ^ 0xD9] ^ a1;
}

uint64_t sub_100017430(unsigned int a1)
{
  return byte_100073C90[byte_10006F14C[a1 - 12] ^ 0x3B] ^ a1;
}

uint64_t sub_10001745C(unsigned int a1)
{
  return byte_100073F98[(byte_10006F340[a1] ^ 0xAB) - 8] ^ a1;
}

uint64_t sub_10001748C(uint64_t a1)
{
  uint64_t v1 = (uint64_t *)*(&off_10007DD80
                  + ((-35 * ((qword_100081B78 - dword_1000827D8) ^ 0xD8)) ^ byte_100068B50[byte_100073B90[(-35 * ((qword_100081B78 - dword_1000827D8) ^ 0xD8))] ^ 0x92])
                  - 104);
  unsigned __int8 v2 = -35 * ((qword_100081B78 - *v1) ^ 0xD8);
  uint64_t v3 = *(&off_10007DD80 + (byte_100073C90[byte_10006F14C[v2 - 12] ^ 0x8C] ^ v2) + 54);
  unint64_t v4 = (unint64_t)&v6[*v1 + *v3];
  *uint64_t v1 = (1226760413 * v4) ^ 0x5B705F9A26A579D8;
  *uint64_t v3 = 1226760413 * (v4 ^ 0x5B705F9A26A579D8);
  uint64_t v7 = a1;
  unsigned int v8 = (3804331 * ((&v7 & 0xB40B85C6 | ~(&v7 | 0xB40B85C6)) ^ 0x35215FCF)) ^ 0x62F;
  LOBYTE(v3) = -35 * ((*(_DWORD *)v3 + *(_DWORD *)v1) ^ 0xD8);
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_10007DD80
                                                        + ((-35
                                                                                         * (dword_1000827D8 ^ 0xD8 ^ qword_100081B78)) ^ byte_100068C50[byte_100073D90[(-35 * (dword_1000827D8 ^ 0xD8 ^ qword_100081B78))] ^ 0xD6])
                                                        + 51)
                                              + 8
                                              * (byte_100073F98[(byte_10006F340[v3] ^ 0x68)
                                                                                             - 8] ^ v3)
                                              + 16612))(&v7);
}

uint64_t sub_10001768C(char a1, unsigned int a2)
{
  return byte_100073A94[(byte_10006F04C[a2 - 12] ^ a1) - 4] ^ a2;
}

uint64_t sub_1000176B8(unsigned int a1)
{
  return byte_100068B54[(byte_100073B90[a1] ^ 0xF1) - 4] ^ a1;
}

uint64_t sub_1000176E8(char a1, unsigned int a2)
{
  return byte_100068C50[(byte_100073D94[a2 - 4] ^ a1)] ^ a2;
}

uint64_t sub_100017714(unsigned int a1)
{
  return byte_100073E94[(byte_10006F24C[a1 - 12] ^ 0xA9) - 4] ^ a1;
}

uint64_t sub_100017744(unsigned int a1)
{
  return byte_100068C50[byte_100073D94[a1 - 4] ^ 0xCA] ^ a1;
}

uint64_t sub_100017770(unsigned int a1)
{
  return byte_100073F98[(byte_10006F340[a1] ^ 0x68) - 8] ^ a1;
}

uint64_t sub_1000177A0(unsigned int a1)
{
  return byte_100068B54[(byte_100073B90[a1] ^ 0x92) - 4] ^ a1;
}

uint64_t sub_1000177D0(unsigned int a1)
{
  return byte_100073F98[(byte_10006F340[a1] ^ 0x50) - 8] ^ a1;
}

uint64_t sub_100017800(uint64_t a1)
{
  uint64_t v1 = (unint64_t *)*(&off_10007DD80
                           + ((-35 * ((qword_100081B78 + dword_100081B90) ^ 0xD8)) ^ byte_100073E90[byte_10006F240[(-35 * ((qword_100081B78 + dword_100081B90) ^ 0xD8))] ^ 0x27])
                           - 15);
  unsigned __int8 v2 = -35 * ((qword_100081B78 - *v1) ^ 0xD8);
  uint64_t v3 = (unint64_t *)*(&off_10007DD80
                           + (byte_100068C50[byte_100073D94[v2 - 4] ^ 0xCA] ^ v2)
                           + 50);
  unint64_t v4 = 1226760413 * ((*v3 - *v1) ^ (unint64_t)&v6 ^ 0x5B705F9A26A579D8);
  *uint64_t v1 = v4;
  *uint64_t v3 = v4;
  uint64_t v7 = a1;
  unsigned int v8 = 1755732067 * (((&v7 | 0xF9EE60DF) + (~&v7 | 0x6119F20)) ^ 0x2728DD05) + 645;
  LOBYTE(v3) = -35 * ((*(_DWORD *)v3 + *(_DWORD *)v1) ^ 0xD8);
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_10007DD80
                                                        + ((-35
                                                                                         * ((qword_100081B78
                                                                                           + dword_100081B90) ^ 0xD8)) ^ byte_100073C90[byte_10006F140[(-35 * ((qword_100081B78 + dword_100081B90) ^ 0xD8))] ^ 0x8C])
                                                        + 116)
                                              + 8
                                              * (byte_100073F98[(byte_10006F340[v3] ^ 0x8B)
                                                                                             - 8] ^ v3)
                                              + 16756))(&v7);
}

uint64_t sub_1000179F4(unsigned int a1)
{
  return byte_100073A94[(byte_10006F04C[a1 - 12] ^ 0x83) - 4] ^ a1;
}

uint64_t sub_100017A24(char a1, unsigned int a2)
{
  return byte_100073C90[(byte_10006F14C[a2 - 12] ^ a1)] ^ a2;
}

uint64_t sub_100017A50(unsigned int a1)
{
  return byte_100068C50[byte_100073D94[a1 - 4] ^ 0xD6] ^ a1;
}

uint64_t sub_100017A7C(char a1, unsigned int a2)
{
  return byte_100073F98[(byte_10006F340[a2] ^ a1) - 8] ^ a2;
}

uint64_t sub_100017AA8(unsigned int a1)
{
  return byte_100073F98[(byte_10006F340[a1] ^ 0x11) - 8] ^ a1;
}

uint64_t sub_100017AD8(unsigned int a1)
{
  return byte_100073E94[(byte_10006F24C[a1 - 12] ^ 0x27) - 4] ^ a1;
}

uint64_t sub_100017B08(unsigned int a1)
{
  return byte_100068B54[(byte_100073B90[a1] ^ 0x83) - 4] ^ a1;
}

uint64_t sub_100017B38(unsigned int a1)
{
  return byte_100068B54[(byte_100073B90[a1] ^ 0x4D) - 4] ^ a1;
}

uint64_t sub_100017B68(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1374699841 * ((((2 * a1) | 0x340440B2) - a1 + 1711136679) ^ 0xF7F63850);
  return (*(uint64_t (**)(void))((char *)*(&off_10007DD80 + v1 - 1666)
                              + 8 * (((*(void *)a1 != *(void *)(a1 + 8)) * (v1 - 1761)) ^ v1)
                              - 4))();
}

uint64_t sub_100017BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15, int a16)
{
  BOOL v18 = a14 > 0x4FBDA167;
  if (v18 == a6 + 769635598 < -1337827688) {
    BOOL v18 = a6 + 769635598 < a16;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17
                                                                       + 8 * ((v18 * ((v16 ^ 0x5B5) - 1769)) ^ v16)))(a1, 3103670704, 2152148850, 0x25362CBF80472F72);
}

uint64_t sub_100017C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t a17, int32x4_t a18, int8x16_t a19, int8x16_t a20,int8x16_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v38 = v34 + 40561067;
  *(_DWORD *)uint64_t v37 = 2103820122;
  (*(void (**)(uint64_t))(v36 + 8 * (v34 ^ 0x888)))(a34);
  int v39 = 2 * (v38 ^ 0x26AEA7C);
  int8x16_t v40 = (int8x16_t)vld1q_dup_f32((const float *)v37);
  v41.i64[0] = 0x8000000080000000;
  v41.i64[1] = 0x8000000080000000;
  uint64_t v42 = 257 * (v39 ^ 0xB0u);
  v43.i32[0] = *(_DWORD *)(v37 + 4);
  v43.i32[1] = *(_DWORD *)(v37 + 4 * (v42 ^ 0x200));
  v43.i32[2] = *(_DWORD *)(v37 + 12);
  int8x16_t v44 = vextq_s8(v40, v43, 0xCuLL);
  int8x16_t v45 = v43;
  v45.i32[3] = *(_DWORD *)(v37 + 16);
  int32x4_t v46 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v45, a21), vandq_s8(v44, v41)), 1uLL), a20);
  v47.i32[0] = *(_DWORD *)(v35 + 4 * (*(_DWORD *)(v37 + 4) & 1));
  v47.i32[1] = *(_DWORD *)(v35 + 4 * (*(_DWORD *)(v37 + 4 * (v42 ^ 0x200)) & 1));
  v47.i32[2] = *(_DWORD *)(v35 + 4 * (*(_DWORD *)(v37 + 12) & 1));
  v47.i32[3] = *(_DWORD *)(v35 + 4 * (v45.i8[12] & 1));
  *(int8x16_t *)uint64_t v37 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v37 + 1588), v47), a17), (int8x16_t)vaddq_s32(vsubq_s32(v46, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v46, v46), a19)), a18));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * v39))(4251303770, 4207640244, 2125651885, 40561189, a29, 50, 2289935841, 176);
}

uint64_t sub_100017E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1926 * (v5 == ((a5 + 302) ^ (v7 + 647)))) ^ (a5 - 1037))))();
}

uint64_t sub_100017E48(double a1, int8x16_t a2)
{
  int v4 = STACK[0x420] - 91;
  int8x16_t v5 = (int8x16_t)vld1q_dup_f32((const float *)v2);
  v6.i64[0] = 0x8000000080000000;
  v6.i64[1] = 0x8000000080000000;
  a2.i32[0] = *(_DWORD *)(v2 + 4 * ((STACK[0x420] - 247) ^ 0x365));
  a2.i32[1] = *(_DWORD *)(v2 + 8);
  a2.i32[2] = *(_DWORD *)(v2 + 12);
  int8x16_t v7 = vextq_s8(v5, a2, 0xCuLL);
  int8x16_t v8 = a2;
  v8.i32[3] = *(_DWORD *)(v2 + 16);
  int32x4_t v9 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v8, *(int8x16_t *)&STACK[0x350]), vandq_s8(v7, v6)), 1uLL), *(int8x16_t *)&STACK[0x330]);
  v10.i32[0] = *((_DWORD *)&STACK[0x678] + (*(_DWORD *)(v2 + 4 * ((STACK[0x420] - 247) ^ 0x365)) & 1));
  v10.i32[1] = *((_DWORD *)&STACK[0x678] + (*(_DWORD *)(v2 + 8) & 1));
  v10.i32[2] = *((_DWORD *)&STACK[0x678] + (*(_DWORD *)(v2 + 12) & 1));
  v10.i32[3] = *((_DWORD *)&STACK[0x678] + (v8.i8[12] & 1));
  *(int8x16_t *)uint64_t v2 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v2 + 1588), v10), *(int8x16_t *)&STACK[0x300]), (int8x16_t)vaddq_s32(vsubq_s32(v9, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v9, v9), *(int8x16_t *)&STACK[0x320])), *(int32x4_t *)&STACK[0x310]));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t *))(v3 + 8 * v4))(4251303770, 1519013783, 869, &STACK[0x678]);
}

uint64_t sub_100017E74@<X0>(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, int a5@<W8>, int8x16_t a6@<Q0>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int8x16_t v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8 * ((int)a3 + a5 + 24));
  uint64_t v46 = LODWORD(STACK[0x2F8]);
  uint64_t v47 = LODWORD(STACK[0x2F4]);
  int v48 = STACK[0x2F8];
  uint64_t v49 = LODWORD(STACK[0x2FC]);
  int v50 = STACK[0x300];
  int v51 = STACK[0x2FC];
  uint64_t v52 = LODWORD(STACK[0x300]);
  int v53 = LOBYTE(STACK[0x30C]) ^ 0xDD;
  if (v53 == 2)
  {
    int8x16x4_t v73 = vld4q_s8(v36);
    uint8x16_t v63 = (uint8x16_t)veorq_s8(v73.val[1], a6);
    _Q23 = vmovl_u8(*(uint8x8_t *)v63.i8);
    _Q22 = vmovl_high_u8(v63);
    __asm
    {
      SHLL2           V24.4S, V22.8H, #0x10
      SHLL2           V25.4S, V23.8H, #0x10
    }
    v68 = (_DWORD *)(v39 + 4 * (v40 + 283323323));
    int v69 = *(v68 - 8) ^ *(v68 - 3);
    int v70 = *(v68 - 16) ^ *(v68 - 14) ^ (v69 + ((v38 + 1053) ^ 0x423) - ((2 * v69) & 0x3EBED70E));
    HIDWORD(v71) = v70 ^ v38;
    LODWORD(v71) = v70;
    _DWORD *v68 = (v71 >> 31) + v38 - ((2 * (v71 >> 31)) & 0x3EBED70E);
    return (*(uint64_t (**)(uint64_t))(v41 + 8 * ((61 * (v44 == 283323260)) ^ 0x41Eu)))(v52);
  }
  else if (v53 == 1)
  {
    HIDWORD(a21) = STACK[0x2F4];
    LODWORD(a23) = STACK[0x300];
    int8x16x4_t v72 = vld4q_s8(v36);
    uint64_t v54 = 80 * (a2 ^ (a2 + 6));
    uint8x16_t v55 = (uint8x16_t)veorq_s8(v72.val[2], a6);
    _Q27 = vmovl_high_u8(v55);
    _Q26 = vmovl_u8(*(uint8x8_t *)v55.i8);
    __asm
    {
      SHLL2           V26.4S, V26.8H, #0x10
      SHLL2           V27.4S, V27.8H, #0x10
    }
    HIDWORD(a20) = LOBYTE(STACK[0x30C]) ^ 0xFFFFFFDD;
    return (*(uint64_t (**)(uint64_t, uint64_t, void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8 * (int)((1307 * (a25 + 1 == v44)) ^ v54)))(a25 + v40, a1, *(void *)(v37 + 8 * ((int)v54 - 411)), *(void *)(v37 + 8 * ((int)v54 - 446)), *(void *)(v37 + 8 * ((int)v54 - 414)), v54, a25 + 1, v52, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
             a18,
             a19,
             a20,
             a21,
             __PAIR64__(v49, v46),
             a23,
             v45,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36);
  }
  else
  {
    LODWORD(STACK[0x2F4]) = 2 * (LODWORD(STACK[0x2F4]) ^ v42) + v42 - (v43 & (4 * (LODWORD(STACK[0x2F4]) ^ v42)));
    LODWORD(STACK[0x2F8]) = (v48 ^ v42) + (v46 ^ v42) + v42 - (v43 & (2 * ((v48 ^ v42) + (v46 ^ v42))));
    LODWORD(STACK[0x2FC]) = (v51 ^ v42) + (v49 ^ v42) + v42 - (v43 & (2 * ((v51 ^ v42) + (v49 ^ v42))));
    LODWORD(STACK[0x300]) = (v52 ^ v42) + (v50 ^ v42) + v42 - (v43 & (2 * ((v52 ^ v42) + (v50 ^ v42))));
    return v45(v52, a1, v49, v46, a2, a3, a4, v47, a7, a8, a9, a10, a11, a12);
  }
}

void sub_1000183B4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) + 108757529 * (((a1 | 0xFA9FB8B3) - (a1 & 0xFA9FB8B3)) ^ 0x1A03DA98);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100018490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  int v13 = *(unsigned __int8 *)(v8 + (v11 + v10 + 2));
  return (*(uint64_t (**)(uint64_t, void, void, void))(v9 + 8 * (v12 ^ (31 * (a8 != 131585752)))))(a1, (a5 + v10 + 1), (v12 + 1328), (v13 ^ (v12 - 823858)) + ((2 * v13) & 0xFFFFFFFB) + ((v12 + 339438973) & 0xEBC49377 ^ 0x7BFDF8DF));
}

uint64_t sub_100018524(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((((unint64_t)(v4 - a1) < 0x20) ^ ((a4 ^ 0xAD) + 1)) & 1)
                                * ((226 * (a4 ^ 0x29C)) ^ 0x613)) ^ a4)))();
}

uint64_t sub_100018574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((a11 != ((31 * (v13 ^ 0x49D)) ^ (v11 - 375))) * ((482 * (v13 ^ 0x492)) ^ 0x3CD)) | v13)))();
}

uint64_t sub_1000185C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,unsigned int a45,uint64_t a46,uint64_t a47)
{
  int v52 = v47 - 651;
  int v53 = (char *)*(&off_10007DD80 + v47 - 1529) - 12;
  int v54 = v53[*(unsigned __int8 *)(v48 - 0x7785963AF3444771) ^ 0x85];
  HIDWORD(v55) = v54 ^ 0x16;
  LODWORD(v55) = v54 << 24;
  int v56 = ((v55 >> 30) ^ 0x9F) << 16;
  v57 = (char *)*(&off_10007DD80 + (int)(v52 & 0xE4D6187B)) - 8;
  int v58 = v57[(v52 - 8) ^ 0x76 ^ *(unsigned char *)(v48 - 0x7785963AF3444767)];
  HIDWORD(v55) = v58 ^ 8;
  LODWORD(v55) = (v58 ^ 0xFFFFFF9F) << 24;
  unsigned __int8 v59 = v55 >> 28;
  int v60 = v53[*(unsigned __int8 *)(v48 - 0x7785963AF344476DLL) ^ 0x6FLL];
  HIDWORD(v55) = v60 ^ 0x16;
  LODWORD(v55) = v60 << 24;
  uint64_t v61 = (char *)*(&off_10007DD80 + (v52 ^ 0x3DC)) - 8;
  __int16 v62 = (char *)*(&off_10007DD80 + v52 - 799) - 12;
  char v63 = v62[*(unsigned __int8 *)(v48 - 0x7785963AF3444766) ^ 0xD8];
  int v64 = (((v55 >> 30) ^ 0x68) << 16) | ((v61[*(unsigned __int8 *)(v48
                                                                                                  - 0x7785963AF344476CLL) ^ 0xDFLL] ^ 0x18) << 8);
  int v65 = v57[*(unsigned __int8 *)(v48 - 0x7785963AF3444763) ^ 0xBCLL];
  HIDWORD(v55) = v65 ^ 8;
  LODWORD(v55) = (v65 ^ 0xFFFFFF9F) << 24;
  LOBYTE(v65) = v55 >> 28;
  uint64_t v66 = v65 ^ 0x68;
  int v67 = v64 | ((v62[*(unsigned __int8 *)(v48 - 0x7785963AF344476ELL) ^ 0xAFLL] ^ 0x8C) << 24);
  int v68 = v57[*(unsigned __int8 *)(v48 - 0x7785963AF344476BLL) ^ 0x98];
  HIDWORD(v55) = v68 ^ 8;
  LODWORD(v55) = (v68 ^ 0xFFFFFF9F) << 24;
  unsigned int v69 = v67 & 0xFFFFFF00 | (v55 >> 28);
  int v70 = v56 | ((v61[*(unsigned __int8 *)(v48 - 0x7785963AF3444770) ^ 0x49] ^ 0x92) << 8) | ((v62[*v49 ^ 0xFELL] ^ 0x55555555) << 24);
  LODWORD(v57) = v57[*(unsigned __int8 *)(v48 - 0x7785963AF344476FLL) ^ 0xD0];
  HIDWORD(v55) = v57 ^ 8;
  LODWORD(v55) = (v57 ^ 0xFFFFFF9F) << 24;
  int v71 = v53[*(unsigned __int8 *)(v48 - 0x7785963AF3444765) ^ 0xB6];
  LOBYTE(v57) = (v55 >> 28) ^ 0x3C;
  HIDWORD(v55) = v71 ^ 0x16;
  LODWORD(v55) = v71 << 24;
  unsigned int v72 = v70 & 0xFFFFFF00 | v57;
  uint64_t v73 = (v55 >> 30) ^ 0x21;
  LODWORD(v53) = v53[*(unsigned __int8 *)(v48 - 0x7785963AF3444769) ^ 0xC8];
  HIDWORD(v55) = v53 ^ 0x16;
  LODWORD(v55) = v53 << 24;
  unint64_t v74 = (((v61[*(unsigned __int8 *)(v48 - 0x7785963AF3444764) ^ 0xC7] ^ 0xD9) << 8) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(v63 ^ 0x5Cu) << 24) | (v73 << 16) | v66) ^ 0x75F49EF4;
  uint64_t v75 = ((unsigned __int16)((((v61[*(unsigned __int8 *)(v48 - 0x7785963AF3444764) ^ 0xC7] ^ 0xD9) << 8) | v66) ^ 0x9EF4) >> 8);
  unsigned int v76 = v59 | ((v61[*(unsigned __int8 *)(v48 - 0x7785963AF3444768) ^ 0xB7] ^ 0x39) << 8) & 0xFF00FFFF | (((v55 >> 30) ^ 0x37) << 16) | ((v62[*(unsigned __int8 *)(v48 - 0x7785963AF344476ALL) ^ 0x18] ^ 0x13) << 24);
  int v77 = v75 - ((2 * (v74 >> 8)) & 0x5E);
  v78 = (char *)*(&off_10007DD80 + (v52 ^ 0x38D)) - 12;
  uint64_t v79 = (uint64_t)*(&off_10007DD80 + v52 - 925);
  LODWORD(v61) = *(_DWORD *)(v79 + 4 * (v63 ^ 0x43u));
  LODWORD(v66) = ((v77 + 1871712559) ^ *(_DWORD *)&v78[4 * (v75 ^ 0xF5)])
               - ((2 * ((v77 + 1871712559) ^ *(_DWORD *)&v78[4 * (v75 ^ 0xF5)])) & 0x9AFD019C);
  HIDWORD(v55) = ~v61;
  LODWORD(v55) = v61 ^ 0x25749864;
  v80 = (char *)*(&off_10007DD80 + (v52 ^ 0x3D8)) - 4;
  LODWORD(v66) = (v55 >> 2) ^ *(_DWORD *)&v80[4 * (v73 ^ 0xDD)] ^ (v66 + 1300136142);
  int v81 = v66 - ((2 * v66) & 0xAF3E77C0);
  v82 = (char *)*(&off_10007DD80 + v52 - 840) - 12;
  int v83 = *(_DWORD *)&v82[4 * (v65 ^ 0xD9)] ^ v72 ^ (v81 - 677430304);
  unsigned int v273 = v69;
  HIDWORD(v271) = v76;
  HIDWORD(v270) = v83 ^ v69 ^ 0x2789BBD4;
  int v84 = v76 ^ 0xE6 ^ HIDWORD(v270);
  int v85 = *(_DWORD *)(v79 + 4 * (((v84 ^ v74) >> 24) ^ 0x21));
  HIDWORD(v55) = ~v85;
  LODWORD(v55) = v85 ^ 0x25749864;
  int v86 = ((v55 >> 2) - ((2 * (v55 >> 2)) & 0xAF3E77C0) - 677430304) ^ *(_DWORD *)&v82[4
                                                                                   * ((v84 ^ v74) ^ 0xDE)];
  HIDWORD(v269) = v84 ^ v74;
  LODWORD(v271) = v83;
  LODWORD(v269) = *(_DWORD *)&v78[4 * (((unsigned __int16)(v84 ^ v74) >> 8) ^ 0x1E)] ^ *(_DWORD *)&v80[4 * (((v84 ^ v74) >> 16) ^ 0x8F)] ^ v83 ^ ((((unsigned __int16)(v84 ^ v74) >> 8) ^ 0xEB) - ((2 * (((v84 ^ v74) >> 8) ^ 0x4BA6EB)) & 0x5E) + 1871712559) ^ (v86 - ((2 * v86) & 0x9AFD019C) + 1300136142);
  int v87 = v269 ^ 0x76E748E2 ^ v83 ^ v69;
  int v272 = v74;
  int v88 = *(_DWORD *)(v79 + 4 * (((v87 ^ v74) >> 24) ^ 0xA2));
  HIDWORD(v55) = ~v88;
  LODWORD(v55) = v88 ^ 0x25749864;
  unsigned int v89 = v87 ^ v74 ^ 0xC84590C6;
  int v90 = *(_DWORD *)&v78[4 * (BYTE1(v89) ^ 0xF5)] ^ *(_DWORD *)&v80[4
                                                                 * (((v87 ^ v74) >> 16) ^ 0x6C)] ^ (BYTE1(v89) - (((v87 ^ v74) >> 7) & 0x5E) + 1871712559) ^ ((v55 >> 2) - ((2 * (v55 >> 2)) & 0x9AFD019C) + 1300136142);
  LODWORD(v268) = v87 ^ v74;
  HIDWORD(v268) = v87;
  HIDWORD(v267) = v269 ^ 0x76E748E2 ^ *(_DWORD *)&v82[4 * ((v87 ^ v74) ^ 0x83)] ^ (v90
                                                                                                  - ((2 * v90) & 0xAF3E77C0)
                                                                                                  - 677430304);
  LODWORD(v74) = HIDWORD(v267) ^ 0x2789BBD4 ^ v87 ^ 0x8EDEEA78;
  LODWORD(v270) = v84;
  HIDWORD(v266) = v87 ^ v84;
  LODWORD(v267) = HIDWORD(v267) ^ 0x2789BBD4 ^ v87;
  int v91 = v74 ^ v87 ^ v84;
  unsigned int v92 = v91 ^ v89;
  int v93 = *(_DWORD *)(v79 + 4 * (((v91 ^ v89) >> 24) ^ 0x67));
  HIDWORD(v55) = ~v93;
  LODWORD(v55) = v93 ^ 0x25749864;
  int v94 = (v55 >> 2) ^ *(_DWORD *)&v78[4 * (BYTE1(v92) ^ 0x97)] ^ ((BYTE1(v92) ^ 0x62)
                                                               - ((2 * ((v92 >> 8) ^ 0xD8B62)) & 0x5E)
                                                               + 1871712559);
  unsigned int v95 = (v94 - ((2 * v94) & 0xAF3E77C0) - 677430304) ^ *(_DWORD *)&v82[4 * ((v91 ^ v89) ^ 0xE1)];
  unsigned int v96 = HIDWORD(v267) ^ 0x2789BBD4 ^ *(_DWORD *)&v80[4 * (((v91 ^ v89 ^ 0x2142BA5) >> 16) ^ 0xB6)] ^ (v95 - ((2 * v95) & 0x9AFD019C) + 1300136142);
  HIDWORD(v265) = v91 ^ v89;
  LODWORD(v266) = v91;
  v91 ^= 0x5EF1BA37u;
  HIDWORD(v264) = v96 ^ v74;
  int v97 = v96 ^ v74 ^ 0x307C325C;
  LODWORD(v264) = v97 ^ v91;
  unsigned int v98 = v97 ^ v91 ^ v92;
  int v99 = *(_DWORD *)(v79 + 4 * (HIBYTE(v98) ^ 0xA4));
  HIDWORD(v55) = ~v99;
  LODWORD(v55) = v99 ^ 0x25749864;
  int v100 = ((v55 >> 2) - ((2 * (v55 >> 2)) & 0xAF3E77C0) - 677430304) ^ *(_DWORD *)&v82[4 * (v98 ^ 0x18)];
  LODWORD(v265) = v96;
  unsigned int v101 = *(_DWORD *)&v80[4 * (BYTE2(v98) ^ 0xCA)] ^ *(_DWORD *)&v78[4
                                                                  * (((unsigned __int16)(v98 ^ 0x7B5D) >> 8) ^ 0xF5)] ^ v96 ^ (((unsigned __int16)(v98 ^ 0x7B5D) >> 8) - (((v98 ^ 0xCEE37B5D) >> 7) & 0x5E) + 1871712559) ^ 0x6AA69E2 ^ (v100 - ((2 * v100) & 0x9AFD019C) + 1300136142);
  int v102 = v101 ^ (v91 - ((2 * v91) & 0xD54D3C4) + 111831522);
  int v103 = *(_DWORD *)(v79 + 4 * (((v102 ^ v98 ^ 0xCEE37B5D) >> 24) ^ 0x70));
  HIDWORD(v55) = ~v103;
  LODWORD(v55) = v103 ^ 0x25749864;
  int v104 = ((v55 >> 2) - ((2 * (v55 >> 2)) & 0x9AFD019C) + 1300136142) ^ *(_DWORD *)&v80[4
                                                                                     * (((v102 ^ v98 ^ 0xCEE37B5D ^ 0xF3443494) >> 16) ^ 0xE4)];
  unsigned int v105 = (v104 - ((2 * v104) & 0xAF3E77C0) - 677430304) ^ *(_DWORD *)&v82[4
                                                                        * ((v102 ^ v98 ^ 0x5D) ^ 0x91)];
  LODWORD(v262) = v102 ^ v98 ^ 0xCEE37B5D;
  unsigned int v106 = (v105 - ((2 * v105) & 0xDF20225E) + 1871712559) ^ *(_DWORD *)&v78[4
                                                                         * (((unsigned __int16)(v262 ^ 0xBBD4) >> 8) ^ 0xF5)];
  LODWORD(v74) = v101 ^ ((unsigned __int16)(v262 ^ 0xBBD4) >> 8) ^ (v106
                                                                                   - ((2 * v106) & 0xD54D3C4)
                                                                                   + 111831522);
  HIDWORD(v262) = v102;
  unint64_t v263 = __PAIR64__(v98, v101);
  LODWORD(v261) = v101 ^ (v97 - ((2 * v97) & 0xD54D3C4) + 111831522);
  HIDWORD(v260) = v74 ^ v261;
  int v107 = v74 ^ v261 ^ 0xE6F58988;
  int v108 = v107 ^ v102;
  int v109 = *(_DWORD *)(v79 + 4 * (((v108 ^ v262 ^ 0x1A89BBD4) >> 24) ^ 0x43));
  HIDWORD(v55) = ~v109;
  LODWORD(v55) = v109 ^ 0x25749864;
  HIDWORD(v259) = v108 ^ v262 ^ 0x1A89BBD4;
  int v110 = *(_DWORD *)&v78[4 * (((unsigned __int16)(WORD2(v259) ^ 0x7ABE) >> 8) ^ 0xF5)] ^ *(_DWORD *)&v80[4 * (((HIDWORD(v259) ^ 0x4D501F31u) >> 16) ^ 0xE2)] ^ (((unsigned __int16)(WORD2(v259) ^ 0x7ABE) >> 8) - (((HIDWORD(v259) ^ 0x299B7ABEu) >> 7) & 0x5E) + 1871712559) ^ ((v55 >> 2) - ((2 * (v55 >> 2)) & 0x9AFD019C) + 1300136142);
  HIDWORD(v261) = v74;
  int v111 = v74 ^ *(_DWORD *)&v82[4 * ((v108 ^ v262 ^ 0xD4) ^ 0xFB)] ^ (v110
                                                                                    - ((2 * v110) & 0xAF3E77C0)
                                                                                    - 677430304);
  int v112 = v111 ^ v107 ^ 0x5BF36347;
  LODWORD(v260) = v108;
  LODWORD(v258) = v112 ^ v108;
  HIDWORD(v258) = v111 ^ v107;
  int v113 = v112 ^ v108 ^ 0x2745D0FF;
  unsigned int v114 = v113 ^ HIDWORD(v259) ^ 0x299B7ABE ^ 0x3DCC6B2B;
  unsigned int v115 = (BYTE1(v114) + 1871712559 + (~(v114 >> 7) | 0xFFFFFFA1) + 1) ^ *(_DWORD *)&v78[4 * (BYTE1(v114) ^ 0xF5)];
  unsigned int v116 = (v115 - ((2 * v115) & 0xAF3E77C0) - 677430304) ^ *(_DWORD *)&v82[4
                                                                        * ((~(v112 ^ v108) ^ BYTE4(v259) ^ 0xBE) ^ 0x6E)];
  HIDWORD(v257) = v113 ^ HIDWORD(v259) ^ 0x299B7ABE;
  int v117 = *(_DWORD *)(v79 + 4 * (HIBYTE(HIDWORD(v257)) ^ 0x57u));
  HIDWORD(v55) = ~v117;
  LODWORD(v55) = v117 ^ 0x25749864;
  LODWORD(v259) = v111;
  LODWORD(v257) = (v55 >> 2) ^ *(_DWORD *)&v80[4 * (((HIDWORD(v257) ^ 0x516EF336u) >> 16) ^ 0x8B)] ^ v111 ^ (v116 - ((2 * v116) & 0x9AFD019C) + 1300136142);
  HIDWORD(v256) = v257 ^ 0x930000ED ^ v112;
  LODWORD(v256) = HIDWORD(v256) ^ 0x8D06EA22 ^ v113;
  unsigned int v118 = v256 ^ v114;
  int v119 = v256 ^ v114 ^ 0x9289BB39;
  int v120 = v256 ^ v114 ^ 0x53DEAA41;
  int v121 = *(_DWORD *)&v82[4 * ((v256 ^ v114) ^ 4)];
  LODWORD(v74) = *(_DWORD *)&v78[4 * (BYTE1(v120) ^ 0xF5)];
  int v122 = *(_DWORD *)(v79 + 4 * (HIBYTE(v118) ^ 0x39));
  HIDWORD(v55) = ~v122;
  LODWORD(v55) = v122 ^ 0x25749864;
  unsigned int v123 = *(_DWORD *)&v80[4 * (BYTE2(v119) ^ 0x7E)] ^ v257 ^ 0x930000ED ^ BYTE1(v120) ^ 0x98AF5C70 ^ ((v74 ^ v121 ^ (v55 >> 2) ^ 0xB80F2ACF) - 2 * ((v74 ^ v121 ^ (v55 >> 2) ^ 0xB80F2ACF) & 0x4D7E80EE ^ (v74 ^ v121 ^ (v55 >> 2)) & 0x20) + 1300136142);
  unsigned int v124 = v123 ^ (v113 - 1733338000 + (~(2 * v113) | 0xCEA1471F) + 1);
  unsigned int v125 = v124 ^ v120;
  LODWORD(v79) = *(_DWORD *)(v79 + 4 * (((v124 ^ v120) >> 24) ^ 0x44));
  HIDWORD(v55) = ~v79;
  LODWORD(v55) = v79 ^ 0x25749864;
  LODWORD(v75) = *(_DWORD *)&v78[4 * (BYTE1(v125) ^ 0xFD)] ^ *(_DWORD *)&v82[4 * ((v124 ^ v120) ^ 0xC4)] ^ ((BYTE1(v125) ^ 8) - 2 * (((v125 >> 8) ^ 0x2E3F08) & 0x3F ^ (v125 >> 8) & 0x10) + 1871712559) ^ ((v55 >> 2) - ((2 * (v55 >> 2)) & 0xAF3E77C0) - 677430304);
  HIDWORD(v254) = v124 ^ v120 ^ 0xB8432478;
  LODWORD(v75) = (v75 - ((2 * v75) & 0x9AFD019C) + 1300136142) ^ *(_DWORD *)&v80[4
                                                                               * (((v124 ^ v120) >> 16) ^ 0x16)];
  LODWORD(v78) = v75 - ((2 * v75) & 0x315EB8E0);
  LODWORD(v80) = v124 ^ 0x626A2240;
  v126 = (char *)*(&off_10007DD80 + v52 - 854) - 12;
  int v127 = v126[*(unsigned __int8 *)(v51 - 109) ^ 0xA5];
  HIDWORD(v55) = v127 ^ 0x2E;
  LODWORD(v55) = (v127 ^ 0x80) << 24;
  v251 = v126;
  v253 = (char *)*(&off_10007DD80 + (v52 ^ 0x3CD)) - 4;
  uint64_t v250 = (uint64_t)*(&off_10007DD80 + v52 - 862);
  uint64_t v252 = (uint64_t)*(&off_10007DD80 + v52 - 974);
  int v128 = (((((v55 >> 30) ^ 0xDB) >> 2) | (((v55 >> 30) ^ 0xDB) << 6)) | ((*(unsigned __int8 *)(v252 + (*(unsigned __int8 *)(v51 - 111) ^ 0x7ALL)) ^ 0xCA) << 16) | ((*(unsigned __int8 *)(v250 + (*(unsigned __int8 *)(v51 - 112) ^ 0x78)) ^ 0x37) << 24) | (((v253[*(unsigned __int8 *)(v51 - 110) ^ 0x5DLL] + (*(unsigned char *)(v51 - 110) ^ 0x52) + 75) ^ 0x5D) << 8)) ^ 0x644C427B;
  unsigned int v129 = ((v126[*(unsigned __int8 *)(v51 - 101) ^ 0x60] ^ 0x65) & 0xFFFF00FF | ((*(unsigned __int8 *)(v252 + (*(unsigned __int8 *)(v51 - 103) ^ 5)) ^ 0x9B) << 16) | (((v253[*(unsigned __int8 *)(v51 - 102) ^ 4] + (*(unsigned char *)(v51 - 102) ^ 0xB) + 75) ^ 0x33) << 8) | ((*(unsigned __int8 *)(v250 + (*(unsigned __int8 *)(v51 - 104) ^ 0x1CLL)) ^ 0xC2) << 24)) ^ 0x959E548F;
  unsigned int v130 = ((v126[*(unsigned __int8 *)(v51 - 105) ^ 0x28] ^ 0xA4) & 0xFFFF00FF | ((((*(unsigned char *)(v51 - 106) ^ 0xAC) + v253[*(unsigned __int8 *)(v51 - 106) ^ 0xA3] + 75) ^ 0xF6) << 8) | ((*(unsigned __int8 *)(v250 + (*(unsigned __int8 *)(v51 - 108) ^ 0xB2)) ^ 0x35) << 24) | ((*(unsigned __int8 *)(v252 + (*(unsigned __int8 *)(v51 - 107) ^ 0x27)) ^ 0xFF) << 16)) ^ 0xB47F1174;
  LODWORD(v74) = ((v126[*(unsigned __int8 *)(v51 - 97) ^ 0x7BLL] ^ 0xD1) & 0xFFFF00FF | ((((*(unsigned char *)(v51 - 98) ^ 0xD0) + v253[*(unsigned __int8 *)(v51 - 98) ^ 0xDFLL] + 75) ^ 0xE4) << 8) | ((*(unsigned __int8 *)(v252 + (*(unsigned __int8 *)(v51 - 99) ^ 0xAALL)) ^ 0xA9) << 16) | ((*(unsigned __int8 *)(v250 + (*(unsigned __int8 *)(v51 - 100) ^ 0x45)) ^ 0xD) << 24)) ^ 0xBD445121;
  unsigned int v131 = (HIDWORD(v256) ^ 0x8D06EA22) - ((2 * (HIDWORD(v256) ^ 0x8D06EA22)) & 0x315EB8E0) - 1733338000;
  LODWORD(v249) = (v52 + 1016) ^ 0x7EE;
  HIDWORD(v248) = (v52 + 1016) ^ 0x74D;
  LODWORD(v248) = (v52 + 1016) ^ 0x7A2;
  HIDWORD(v247) = v123 ^ v131;
  LODWORD(v247) = (v52 + 1016) ^ 0x7DB;
  HIDWORD(v246) = (v52 + 1016) ^ 0x794;
  LODWORD(v246) = (v52 + 1016) ^ 0x79F;
  HIDWORD(v245) = (v52 + 1016) & 0x46328873;
  unint64_t v255 = __PAIR64__(v118, v123);
  LODWORD(v245) = (v78 - 1733338000) ^ v123;
  HIDWORD(v244) = (v52 + 1016) ^ 0x799;
  LODWORD(v244) = (v52 + 1016) ^ 0x75D;
  HIDWORD(v243) = (v52 + 1016) & 0xF1F6481E;
  *(_DWORD *)(v51 - 120) = v52 + 1016;
  LODWORD(v243) = (v52 + 1016) ^ 0x79C;
  LODWORD(v254) = v80;
  HIDWORD(v249) = v131 ^ 0x3DC8BA5D ^ (v78 - 1733338000);
  HIDWORD(a11) = HIDWORD(v249) ^ v80;
  *(void *)(v51 - 216) = 7;
  int v132 = v126[v50[7] ^ 0x41];
  uint64_t v133 = (2 * (v52 + 1016)) ^ 0xF9Eu;
  uint64_t v134 = v50[v133] ^ 0x60;
  *(void *)(v51 - 152) = v133;
  *(void *)(v51 - 144) = 8;
  LODWORD(v134) = *(unsigned __int8 *)(v250 + v134);
  uint64_t v135 = v50[8];
  *(void *)(v51 - 128) = 1;
  LODWORD(v62) = *(unsigned __int8 *)(v250 + (v135 ^ 0xC1)) ^ 2;
  int v136 = *(unsigned __int8 *)(v252 + (v50[1] ^ 0x66)) ^ 0x26;
  *(void *)(v51 - 136) = 15;
  uint64_t v137 = v50[15] ^ 0xE9;
  *(void *)(v51 - 168) = 11;
  LODWORD(v137) = v126[v137] ^ 0x73 | ((v134 ^ 0xB6) << 24);
  LODWORD(v134) = v126[v50[11] ^ 0xC3];
  *(void *)(v51 - 176) = 0;
  LODWORD(v61) = (v136 << 16) | ((*(unsigned __int8 *)(v250 + (*v50 ^ 0x30)) ^ 0x86) << 24);
  int v138 = v134 ^ 0xB9;
  *(void *)(v51 - 160) = 2;
  LODWORD(v61) = v61 & 0xFFFF00FF | (((v253[v50[2] ^ 0xC0] + (v50[2] ^ 0xCF) + 75) ^ 0xF9) << 8);
  *(_DWORD *)(v51 - 196) = 328348218;
  *(void *)(v51 - 224) = 4;
  v132 ^= 0xA3u;
  LODWORD(v134) = v132 | ((*(unsigned __int8 *)(v250 + (v50[4] ^ 0xFCLL)) ^ 0x38) << 24);
  *(_DWORD *)(v51 - 180) = 328348223;
  *(void *)(v51 - 248) = 5;
  *(void *)(v51 - 240) = 9;
  int v139 = (*(unsigned __int8 *)(v252 + (v50[9] ^ 0x5DLL)) ^ 0xF5) << 16;
  *(void *)(v51 - 208) = 10;
  unsigned int v140 = v139 & 0xFFFF00FF | (((v253[v50[10] ^ 0xD5] + (v50[10] ^ 0xDA) + 75) ^ 0xCF) << 8) | v138 | (v62 << 24);
  *(void *)(v51 - 192) = 14;
  LODWORD(v137) = v137 & 0xFFFF00FF | ((v253[v50[14] ^ 0xE4] + (v50[14] ^ 0xEB) - 53) << 8);
  *(void *)(v51 - 232) = 3;
  int v141 = v126[v50[3] ^ 0xDCLL] ^ 0x67;
  *(void *)(v51 - 256) = 13;
  LODWORD(v137) = v137 | ((*(unsigned __int8 *)(v252 + (v50[13] ^ 0x92)) ^ 0xC8) << 16);
  LODWORD(v134) = ((*(unsigned __int8 *)(v252 + (v50[5] ^ 0xA9)) ^ 0x1B) << 16) | (((v253[v50[6] ^ 0x4FLL] + (v50[6] ^ 0x40) + 75) ^ 0xB7) << 8) | v134;
  unsigned int v142 = v128 ^ v72 ^ ((v141 | v61)
                     - 2 * ((v141 | v61) & 0x5DF5FB5B ^ v141 & 0x19)
                     - 571081918);
  LODWORD(v134) = v130 ^ v273 ^ (v134 + 231123149 - 2 * (v134 & 0xDC6A8CF ^ v132 & 2));
  unsigned int v143 = v74 ^ v272 ^ (v137 - ((2 * v137) & 0x9FBD130) + 83749016);
  LODWORD(v62) = v129 ^ HIDWORD(v271) ^ (v140 + 740814134 - 2 * (v140 & 0x2C27ED37 ^ v138 & 1));
  v144 = (char *)*(&off_10007DD80 + (int)v248) - 8;
  int v145 = *(_DWORD *)&v144[4 * ((v62 >> 24) ^ 0x3F)];
  HIDWORD(v55) = ~v145;
  LODWORD(v55) = v145 ^ 0xEF74699C;
  v146 = (char *)*(&off_10007DD80 + (int)v249) - 4;
  LODWORD(v137) = (v55 >> 1) ^ ((BYTE2(v143) ^ 0x68) + 1755584905 - ((2 * (HIWORD(v143) ^ 0xB768)) & 0x112)) ^ *(_DWORD *)&v146[4 * (BYTE2(v143) ^ 0x34)];
  v147 = (char *)*(&off_10007DD80 + SHIDWORD(v248)) - 12;
  LODWORD(v61) = *(_DWORD *)&v147[4 * (v62 ^ 0xC6)] ^ ((BYTE2(v142) ^ 0xD5)
                                                                      + 1755584905
                                                                      - ((2 * (HIWORD(v142) ^ 0x6CD5)) & 0x112)) ^ ((v62 ^ 0xAB) + 310545904 + ((2 * (v62 ^ 0xAB) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ *(_DWORD *)&v146[4 * (BYTE2(v142) ^ 0x89)];
  unsigned int v148 = *(_DWORD *)&v146[4 * (BYTE2(v134) ^ 0x8C)] ^ *(_DWORD *)&v147[4 * (v143 ^ 0xB6)] ^ ((v143 ^ 0xDB) + 310545904 + ((2 * (v143 ^ 0xDB) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ ((BYTE2(v134) ^ 0xD0) + 1755584905 - 2 * ((WORD1(v134) ^ 0xC8D0) & 0x8F ^ WORD1(v134) & 6));
  int v149 = *(_DWORD *)&v144[4 * (BYTE3(v134) ^ 0xC8)];
  HIDWORD(v55) = ~v149;
  LODWORD(v55) = v149 ^ 0xEF74699C;
  int v150 = (v55 >> 1) ^ *(_DWORD *)&v146[4 * (BYTE2(v62) ^ 0xF1)];
  int v151 = *(_DWORD *)&v144[4 * (HIBYTE(v142) ^ 0x6C)];
  HIDWORD(v55) = ~v151;
  LODWORD(v55) = v151 ^ 0xEF74699C;
  int v152 = v55 >> 1;
  unsigned int v153 = ((BYTE2(v62) ^ 0xAD) + 1755584905 - ((2 * ((v62 >> 16) ^ 0x3FAD)) & 0x112)) ^ *(_DWORD *)&v147[4 * (v142 ^ 0x1C)] ^ ((v142 ^ 0x71) + 310545904 + ((2 * (v142 ^ 0x71) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ v150;
  int v154 = *(_DWORD *)&v144[4 * (HIBYTE(v143) ^ 0xB7)];
  int v155 = v153 - 1499549486 - ((2 * v153) & 0x4D3D61A4);
  HIDWORD(v55) = ~v154;
  LODWORD(v55) = v154 ^ 0xEF74699C;
  unsigned int v156 = (v134 ^ 0x10) + 310545904 + ((2 * (v134 ^ 0x10) + 254) & 0x2E0 ^ 0xCDFA7BFF);
  uint64_t v157 = (uint64_t)*(&off_10007DD80 + *(_DWORD *)(v51 - 120) - 1982);
  int v158 = *(_DWORD *)(v157 + 4 * (BYTE1(v142) ^ 0xDEu)) ^ v270 ^ *(_DWORD *)&v147[4 * (v134 ^ 0x7D)] ^ (v137 - 1499549486 - ((2 * v137) & 0x4D3D61A4));
  LODWORD(v134) = (v61 - 1499549486 - ((2 * v61) & 0x4D3D61A4)) ^ *(_DWORD *)(v157
                                                                                            + 4
                                                                                            * (BYTE1(v134) ^ 0x2Fu)) ^ (v55 >> 1);
  LODWORD(v137) = v134 - ((2 * v134) & 0x3F659592);
  LODWORD(v134) = *(_DWORD *)(v157 + 4 * (BYTE1(v62) ^ 0x29u));
  LODWORD(v62) = *(_DWORD *)(v157 + 4 * (BYTE1(v143) ^ 0x66u));
  LOWORD(v153) = v158 ^ v156;
  unsigned int v159 = v134 ^ v271 ^ v152 ^ (v148 - 1499549486 - ((2 * v148) & 0x4D3D61A4));
  LODWORD(v134) = v62 ^ HIDWORD(v270) ^ v155;
  LODWORD(v62) = *(_DWORD *)&v144[4 * ((v158 ^ ~v156) >> 24)];
  HIDWORD(v55) = ~v62;
  LODWORD(v55) = v62 ^ 0xEF74699C;
  LODWORD(v62) = v55 >> 1;
  LODWORD(v61) = (v158 ^ v156) >> 16;
  int v160 = *(_DWORD *)&v144[4 * (HIBYTE(v159) ^ 0x91)];
  HIDWORD(v55) = ~v160;
  LODWORD(v55) = v160 ^ 0xEF74699C;
  int v161 = v55 >> 1;
  int v162 = *(_DWORD *)&v144[4 * (BYTE3(v134) ^ 0xA3)];
  HIDWORD(v55) = ~v162;
  LODWORD(v55) = v162 ^ 0xEF74699C;
  LODWORD(v78) = v161 ^ *(_DWORD *)&v146[4 * (BYTE2(v134) ^ 0xF0)] ^ ((BYTE2(v134) ^ 0xAC)
                                                                    + 1755584905
                                                                    - 2
                                                                    * ((WORD1(v134) ^ 0xA3AC) & 0x99 ^ WORD1(v134) & 0x10));
  int v163 = (v55 >> 1) ^ *(_DWORD *)&v147[4 * (v159 ^ 0x7B)] ^ *(_DWORD *)&v146[4
                                                                                            * (v61 ^ 0x15)] ^ ((v61 ^ 0x49) + 1755584905 - 2 * ((v61 ^ 0xFF49) & 0x8D ^ v61 & 4)) ^ ((v159 ^ 0x16) + 310545904 + ((2 * (v159 ^ 0x16) + 254) & 0x2E0 ^ 0xCDFA7BFF));
  int v164 = v163 - 1499549486 - ((2 * v163) & 0x4D3D61A4);
  LODWORD(v137) = (v137 + 531811017) ^ HIDWORD(v269);
  LODWORD(v78) = (v78 - 1499549486 - ((2 * v78) & 0x4D3D61A4)) ^ *(_DWORD *)(v157
                                                                                           + 4 * (BYTE1(v153) ^ 0x2Cu));
  LODWORD(v62) = v62 ^ *(_DWORD *)&v147[4 * (v134 ^ 3)] ^ ((v134 ^ 0x6E)
                                                                                        + 310545904
                                                                                        + ((2
                                                                                          * (v134 ^ 0x6E)
                                                                                          + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ ((BYTE2(v137) ^ 0x8B) + 1755584905 - 2 * ((WORD1(v137) ^ 0x718B) & 0xA9 ^ WORD1(v137) & 0x20)) ^ *(_DWORD *)&v146[4 * (BYTE2(v137) ^ 0xD7)];
  int v165 = *(_DWORD *)&v146[4 * (BYTE2(v159) ^ 0x2E)] ^ ((BYTE2(v159) ^ 0x72) + 1755584905 - ((v159 >> 15) & 0x112));
  int v166 = *(_DWORD *)&v144[4 * (BYTE3(v137) ^ 0x71)];
  HIDWORD(v55) = ~v166;
  LODWORD(v55) = v166 ^ 0xEF74699C;
  LODWORD(v61) = *(_DWORD *)(v157 + 4 * (BYTE1(v137) ^ 0x51u));
  int v167 = ((v153 ^ 0xFC) + 310545904 + ((2 * (v153 ^ 0xFC) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ *(_DWORD *)(v157 + 4 * (BYTE1(v134) ^ 0xBDu)) ^ *(_DWORD *)&v147[4 * (v153 ^ 0x91)] ^ (v165 - 1499549486 - ((2 * v165) & 0x4D3D61A4)) ^ (v55 >> 1);
  LODWORD(v137) = ((v137 ^ 0x84) - 1726037377) ^ v269 ^ *(_DWORD *)&v147[4
                                                                                        * (v137 ^ 0xE9)] ^ (v78 + 2036583280 - ((2 * v78) & 0xF2C796E0));
  LODWORD(v134) = *(_DWORD *)(v157 + 4 * (BYTE1(v159) ^ 0x57u)) ^ HIDWORD(v266) ^ (v62
                                                                                   - 1499549486
                                                                                   - ((2 * v62) & 0x4D3D61A4));
  unsigned int v168 = (v167 - ((2 * v167) & 0xB4C2F650) - 631145688) ^ v268;
  unsigned int v169 = v61 ^ HIDWORD(v268) ^ v164;
  int v170 = *(_DWORD *)&v144[4 * (HIBYTE(v168) ^ 0x37)];
  HIDWORD(v55) = ~v170;
  LODWORD(v55) = v170 ^ 0xEF74699C;
  LODWORD(v62) = (((v61 ^ BYTE4(v268) ^ v164) ^ 0xA1)
                + 310545903
                - ((2 * ((v61 ^ BYTE4(v268) ^ v164) ^ 0xA1) + 842892542) & 0x320586E0)) ^ *(_DWORD *)&v147[4 * ((v61 ^ BYTE4(v268) ^ v164) ^ 0xCC)];
  LODWORD(v78) = *(_DWORD *)&v146[4 * (BYTE2(v137) ^ 0xDB)] ^ ((BYTE2(v137) ^ 0x87)
                                                             + 1755584905
                                                             - ((2 * (WORD1(v137) ^ 0x3A87)) & 0x112)) ^ (v55 >> 1);
  LODWORD(v62) = (v62 - 1499549486 - ((2 * v62) & 0x4D3D61A4)) ^ *(_DWORD *)(v157
                                                                                           + 4 * (BYTE1(v137) ^ 0xDEu));
  unsigned int v171 = ((v137 ^ 0x9E) + 310545904 + ((2 * (v137 ^ 0x9E) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ *(_DWORD *)&v147[4 * (v137 ^ 0xF3)];
  int v172 = v171 - 1499549486 - ((2 * v171) & 0x4D3D61A4);
  unsigned int v173 = v62 + 1755584905 - ((2 * v62) & 0xD1483312);
  LODWORD(v78) = (v78 - 1499549486 - ((2 * v78) & 0x4D3D61A4)) ^ *(_DWORD *)(v157
                                                                                           + 4 * (BYTE1(v169) ^ 0x57u));
  int v174 = ((v134 ^ 0x740CBC3A) >> 16);
  unsigned int v175 = v174 + 1755584905 - (((v134 ^ 0x740CBC3A) >> 15) & 0x112);
  LODWORD(v62) = *(_DWORD *)&v144[4 * (BYTE3(v134) ^ 0x37)];
  HIDWORD(v55) = ~v62;
  LODWORD(v55) = v62 ^ 0xEF74699C;
  int v176 = v55 >> 1;
  LODWORD(v137) = *(_DWORD *)&v144[4 * (BYTE3(v137) ^ 0x3A)];
  HIDWORD(v55) = ~v137;
  LODWORD(v55) = v137 ^ 0xEF74699C;
  LODWORD(v137) = BYTE2(v169) ^ *(_DWORD *)&v146[4 * (BYTE2(v169) ^ 0xF6)] ^ *(_DWORD *)(v157
                                                                                       + 4
                                                                                       * ((unsigned __int16)(v134 ^ 0xBC3A) >> 8)) ^ 0xCE3AA9F1 ^ (v55 >> 1);
  LODWORD(v62) = ((v168 ^ 0x38) - 1726037377) ^ HIDWORD(v267) ^ *(_DWORD *)&v147[4
                                                                                                * (v168 ^ 0x55)] ^ (v137 + 2036583280 - ((2 * v137) & 0xF2C796E0));
  LODWORD(v134) = ((v134 ^ 0x3A) - 1726037377) ^ HIDWORD(v265) ^ *(_DWORD *)&v147[4
                                                                                                 * (v134 ^ 0x57)] ^ (v78 + 2036583280 - ((2 * v78) & 0xF2C796E0));
  LODWORD(v137) = *(_DWORD *)&v144[4 * (HIBYTE(v169) ^ 0x7C)];
  HIDWORD(v55) = ~v137;
  LODWORD(v55) = v137 ^ 0xEF74699C;
  unsigned int v177 = *(_DWORD *)&v146[4 * (BYTE2(v168) ^ 0xE7)] ^ v266 ^ BYTE2(v168) ^ v176 ^ v173;
  unsigned int v178 = *(_DWORD *)(v157 + 4 * (BYTE1(v168) ^ 0x9Bu)) ^ v267 ^ v175 ^ *(_DWORD *)&v146[4 * (v174 ^ 0x5C)] ^ (v55 >> 1) ^ v172;
  LODWORD(v137) = ((v177 ^ 0x78)
                 + 310545904
                 + ((2 * (v177 ^ 0x78) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ *(_DWORD *)&v147[4 * (v177 ^ 0x15)];
  int v179 = v137 - 1499549486 - ((2 * v137) & 0x4D3D61A4);
  LODWORD(v137) = *(_DWORD *)&v144[4 * ((v62 >> 24) ^ 0x5B)];
  HIDWORD(v55) = ~v137;
  LODWORD(v55) = v137 ^ 0xEF74699C;
  LODWORD(v61) = *(_DWORD *)&v144[4 * (BYTE3(v134) ^ 0x28)];
  LODWORD(v78) = (v55 >> 1) ^ *(_DWORD *)&v147[4 * (v134 ^ 0x1F)];
  HIDWORD(v55) = ~v61;
  LODWORD(v55) = v61 ^ 0xEF74699C;
  LODWORD(v137) = v55 >> 1;
  LODWORD(v61) = *(_DWORD *)&v144[4 * (HIBYTE(v177) ^ 0xB9)];
  HIDWORD(v55) = ~v61;
  LODWORD(v55) = v61 ^ 0xEF74699C;
  int v180 = v55 >> 1;
  LODWORD(v78) = v78 ^ ((v134 ^ 0x72)
                                    + 310545904
                                    + ((2 * (v134 ^ 0x72) + 254) & 0x2E0 ^ 0xCDFA7BFF));
  int v181 = *(_DWORD *)&v144[4 * (HIBYTE(v178) ^ 0xB4)];
  HIDWORD(v55) = ~v181;
  LODWORD(v55) = v181 ^ 0xEF74699C;
  unsigned int v182 = v180 ^ *(_DWORD *)&v147[4 * (v178 ^ 0x8B)] ^ ((v178 ^ 0xE6)
                                                                      + 310545904
                                                                      + ((2 * (v178 ^ 0xE6) + 254) & 0x2E0 ^ 0xCDFA7BFF));
  LODWORD(v73) = ((v62 >> 16) ^ 0x5B95) & 0xA9 ^ (v62 >> 16) & 0x20;
  int v183 = BYTE2(v62) ^ 0x95;
  int v184 = v62;
  unsigned int v185 = (v62 ^ 0xF4) + 310545904 + ((2 * (v62 ^ 0xF4) + 254) & 0x2E0 ^ 0xCDFA7BFF);
  unsigned int v186 = ((BYTE2(v134) ^ 0x14) + 1755584905 - ((v134 >> 15) & 0x112)) ^ v264 ^ *(_DWORD *)(v157 + 4 * (BYTE1(v62) ^ 0x1Fu)) ^ *(_DWORD *)&v146[4 * (BYTE2(v134) ^ 0x48)] ^ (v182 - 1499549486 - ((2 * v182) & 0x4D3D61A4));
  LODWORD(v62) = *(_DWORD *)(v157 + 4 * ((unsigned __int16)(v177 ^ 0xA578) >> 8)) ^ v265 ^ *(_DWORD *)&v146[4 * (BYTE2(v178) ^ 5)] ^ ((BYTE2(v178) ^ 0x59) + 1755584905 - 2 * ((HIWORD(v178) ^ 0xB459) & 0x8D ^ HIWORD(v178) & 4)) ^ (v78 - 1499549486 - ((2 * v78) & 0x4D3D61A4));
  unsigned int v187 = (((v177 ^ 0xFA64A578) >> 16) + 1755584905 - ((v177 >> 15) & 0x112)) ^ HIDWORD(v264) ^ *(_DWORD *)&v147[4 * (v184 ^ 0x99)] ^ v185 ^ ((v55 >> 1) - 1499549486 - ((2 * (v55 >> 1)) & 0x4D3D61A4)) ^ *(_DWORD *)&v146[4 * (((v177 ^ 0xFA64A578) >> 16) ^ 0x5C)] ^ *(_DWORD *)(v157 + 4 * (BYTE1(v134) ^ 0x12u));
  unsigned int v188 = *(_DWORD *)(v157 + 4 * (BYTE1(v178) ^ 0x34u)) ^ HIDWORD(v263) ^ *(_DWORD *)&v146[4 * (v183 ^ 0x5C)] ^ (v183 + 1755584905 - 2 * v73) ^ v179 ^ v137;
  int v189 = *(_DWORD *)&v144[4 * (HIBYTE(v188) ^ 0xEB)];
  HIDWORD(v55) = ~v189;
  LODWORD(v55) = v189 ^ 0xEF74699C;
  LODWORD(v82) = (v55 >> 1) - 1499549486 - ((2 * (v55 >> 1)) & 0x4D3D61A4);
  LODWORD(v133) = ((BYTE2(v187) ^ 0x81) + 1755584905 - 2 * ((HIWORD(v187) ^ 0x1481) & 0x99 ^ HIWORD(v187) & 0x10)) ^ *(_DWORD *)&v146[4 * (BYTE2(v187) ^ 0xDD)];
  int v190 = ((v187 ^ 0x51) + 310545903 - ((2 * (v187 ^ 0x51) + 842892542) & 0x320586E0)) ^ *(_DWORD *)&v147[4 * (v187 ^ 0x3C)];
  LODWORD(v61) = *(_DWORD *)&v146[4 * (BYTE2(v186) ^ 0xDB)] ^ ((BYTE2(v186) ^ 0x87)
                                                             + 1755584905
                                                             - ((2 * (HIWORD(v186) ^ 0x7787)) & 0x112));
  int v191 = *(_DWORD *)&v144[4 * (HIBYTE(v187) ^ 0x14)];
  LODWORD(v78) = *(_DWORD *)&v146[4 * (((v188 ^ 0xA87CE98B) >> 16) ^ 0x5C)] ^ ((v188 ^ 0xA87CE98B) >> 16) ^ (v190 + 1755584905 - ((2 * v190) & 0xD1483312));
  HIDWORD(v55) = ~v191;
  LODWORD(v55) = v191 ^ 0xEF74699C;
  int v192 = v55 >> 1;
  int v193 = *(_DWORD *)&v144[4 * ((v62 >> 24) ^ 0x9A)];
  HIDWORD(v55) = ~v193;
  LODWORD(v55) = v193 ^ 0xEF74699C;
  LODWORD(v133) = *(_DWORD *)&v147[4 * (v188 ^ 0xE6)] ^ *(_DWORD *)(v157 + 4 * (BYTE1(v186) ^ 0xDEu)) ^ ((v188 ^ 0x8B) + 310545904 + ((2 * (v188 ^ 0x8B) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ (v133 - 1499549486 - ((2 * v133) & 0x4D3D61A4)) ^ (v55 >> 1);
  int v194 = *(_DWORD *)&v144[4 * (HIBYTE(v186) ^ 0x77)];
  HIDWORD(v55) = ~v194;
  LODWORD(v55) = v194 ^ 0xEF74699C;
  int v195 = *(_DWORD *)(v157 + 4 * (BYTE1(v187) ^ 0x34u)) ^ v262 ^ ((BYTE2(v62) ^ 0xE9)
                                                                 + 1755584905
                                                                 - 2
                                                                 * (((v62 >> 16) ^ 0x9AE9) & 0x8F ^ (v62 >> 16) & 6)) ^ *(_DWORD *)&v146[4 * (BYTE2(v62) ^ 0xB5)] ^ ((v186 ^ 0x9E) + 310545904 + ((2 * (v186 ^ 0x9E) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ v82 ^ *(_DWORD *)&v147[4 * (v186 ^ 0xF3)];
  LODWORD(v137) = *(_DWORD *)(v157 + 4 * (BYTE1(v188) ^ 0xBu)) ^ v261 ^ ((v62 ^ 0xA8)
                                                                         + 310545903
                                                                         - ((2 * (v62 ^ 0xA8)
                                                                           + 842892542) & 0x320586E0)) ^ *(_DWORD *)&v147[4 * (v62 ^ 0xC5)] ^ v192 ^ (v61 - 1499549486 - ((2 * v61) & 0x4D3D61A4));
  LODWORD(v134) = *(_DWORD *)(v157 + 4 * (BYTE1(v62) ^ 0x2Du)) ^ HIDWORD(v262) ^ (v55 >> 1) ^ (v78
                                                                                               - 1499549486
                                                                                               - ((2 * v78) & 0x4D3D61A4));
  BYTE1(v189) = ((unsigned __int16)(*(_WORD *)(v157 + 4 * (BYTE1(v188) ^ 0xBu)) ^ v261 ^ ((v62 ^ 0xA8)
                                                                                          - 29201
                                                                                          - ((2
                                                                                            * (v62 ^ 0xA8)
                                                                                            - 31490) & 0x86E0)) ^ *(_WORD *)&v147[4 * (v62 ^ 0xC5)] ^ v192 ^ ((_WORD)v61 - 20270 - ((2 * (_WORD)v61) & 0x61A4))) >> 8) ^ 0x65;
  LODWORD(v78) = ((v137 ^ 0x2E0E654A) >> 16);
  LODWORD(v73) = v78 + 1755584905 - (((v137 ^ 0x2E0E654A) >> 15) & 0x112);
  LODWORD(v62) = *(_DWORD *)&v144[4 * (BYTE3(v137) ^ 0x6D)];
  HIDWORD(v55) = ~v62;
  LODWORD(v55) = v62 ^ 0xEF74699C;
  LODWORD(v61) = v55 >> 1;
  LODWORD(v62) = (v133 + 111831522 - ((2 * v133) & 0xD54D3C4)) ^ v263;
  LODWORD(v133) = *(_DWORD *)&v146[4 * (v78 ^ 0x5C)];
  LODWORD(v78) = *(_DWORD *)&v144[4 * ((v62 >> 24) ^ 0xFD)];
  LODWORD(v133) = v133 ^ (~v78 << 31) ^ (v78 >> 1) ^ v73 ^ 0x77BA34CE;
  LODWORD(v137) = ((v137 ^ 0x4A)
                 + 310545904
                 + ((2 * (v137 ^ 0x4A) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ *(_DWORD *)&v147[4 * (v137 ^ 0x27)];
  LODWORD(v78) = v137 - 1499549486 - ((2 * v137) & 0x4D3D61A4);
  LODWORD(v137) = *(_DWORD *)&v144[4 * (BYTE3(v134) ^ 0xAE)];
  HIDWORD(v55) = ~v137;
  LODWORD(v55) = v137 ^ 0xEF74699C;
  LODWORD(v137) = v133 - 1499549486 - ((2 * v133) & 0x4D3D61A4);
  LODWORD(v133) = (v55 >> 1) ^ *(_DWORD *)(v157 + 4 * (BYTE1(v62) ^ 0xA4u)) ^ v78;
  int v196 = v133 + 1755584905 - ((2 * v133) & 0xD1483312);
  LODWORD(v133) = *(_DWORD *)&v146[4 * (BYTE2(v134) ^ 0x3A)] ^ ((BYTE2(v134) ^ 0x66)
                                                              + 1755584905
                                                              - ((v134 >> 15) & 0x112)) ^ v61 ^ *(_DWORD *)&v147[4 * (v62 ^ 0x4D)] ^ ((v62 ^ 0x20) + 310545904 + ((2 * (v62 ^ 0x20) + 254) & 0x2E0 ^ 0xCDFA7BFF));
  unsigned int v197 = ((v134 ^ 0xB3) + 1069380434 + ((2 * (v134 ^ 0xB3) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)(v157 + 4 * BYTE1(v189));
  unsigned int v198 = (v197 + 2036583280 - ((2 * v197) & 0xF2C796E0)) ^ *(_DWORD *)&v147[4 * (v134 ^ 0xDE)];
  LODWORD(v62) = *(_DWORD *)&v146[4 * (BYTE2(v62) ^ 0x40)] ^ ((BYTE2(v62) ^ 0x1C)
                                                            + 1755584905
                                                            - ((2 * ((v62 >> 16) ^ 0xFD1C)) & 0x112));
  unsigned int v199 = v62 ^ v198 ^ 0x431D28D3;
  v198 ^= 0x6500C283u;
  LODWORD(v62) = v62 ^ 0xD9E215AF ^ -(v62 ^ 0xD9E215AF) ^ (v199 + v198 + 1);
  int v200 = *(_DWORD *)&v144[4 * ((v195 ^ 0x3F162902u) >> 24)];
  HIDWORD(v55) = ~v200;
  LODWORD(v55) = v200 ^ 0xEF74699C;
  unsigned int v201 = v62 + v198;
  LODWORD(v62) = ((v195 ^ 0x3F162902u) >> 16) ^ v260 ^ *(_DWORD *)&v146[4 * (((v195 ^ 0x3F162902u) >> 16) ^ 0x5C)] ^ v196;
  unsigned int v202 = (v55 >> 1) ^ HIDWORD(v259) ^ v201;
  unsigned int v203 = *(_DWORD *)(v157 + 4 * (BYTE1(v195) ^ 0xCBu)) ^ HIDWORD(v260) ^ (v133 - 1499549486 - ((2 * v133) & 0x4D3D61A4));
  LODWORD(v134) = *(_DWORD *)(v157 + 4 * (BYTE1(v134) ^ 0x7Cu)) ^ HIDWORD(v261) ^ ((v195 ^ 2)
                                                                                   + 310545904
                                                                                   + ((2 * (v195 ^ 2)
                                                                                     + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ *(_DWORD *)&v147[4 * (v195 ^ 0x6F)] ^ v137;
  LODWORD(v133) = ((BYTE2(v134) ^ 0xE9) + 1755584905 - 2 * ((WORD1(v134) ^ 0xB8E9) & 0x8B ^ WORD1(v134) & 2)) ^ *(_DWORD *)&v146[4 * (BYTE2(v134) ^ 0xB5)];
  int v204 = v133 - 1499549486 - ((2 * v133) & 0x4D3D61A4);
  LODWORD(v61) = *(_DWORD *)&v144[4 * ((v62 >> 24) ^ 0x9D)];
  HIDWORD(v55) = ~v61;
  LODWORD(v55) = v61 ^ 0xEF74699C;
  LODWORD(v61) = v55 >> 1;
  int v205 = *(_DWORD *)&v144[4 * (HIBYTE(v203) ^ 0x61)];
  HIDWORD(v55) = ~v205;
  LODWORD(v55) = v205 ^ 0xEF74699C;
  LODWORD(v133) = *(_DWORD *)&v147[4 * (v134 ^ 0xC5)] ^ *(_DWORD *)&v146[4 * (BYTE2(v62) ^ 0x28)] ^ ((v134 ^ 0xA8) + 310545904 + ((2 * (v134 ^ 0xA8) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ ((BYTE2(v62) ^ 0x74) + 1755584905 - ((v62 >> 15) & 0x112)) ^ (v55 >> 1);
  LODWORD(v78) = v61 ^ ((BYTE2(v202) ^ 0xE6) + 1755584905 - ((2 * (HIWORD(v202) ^ 0xB0E6)) & 0x112)) ^ *(_DWORD *)&v146[4 * (BYTE2(v202) ^ 0xBA)];
  LODWORD(v61) = (((v195 ^ 0x3F162902u) >> 16) ^ v260 ^ v146[4
                                                                            * (((v195 ^ 0x3F162902u) >> 16) ^ 0x5C)] ^ v196);
  LODWORD(v73) = (v62 ^ 0xD9)
               + 310545904
               + ((2 * (v62 ^ 0xD9) + 254) & 0x2E0 ^ 0xCDFA7BFF);
  int v206 = *(_DWORD *)&v144[4 * (BYTE3(v134) ^ 0xB8)];
  HIDWORD(v55) = ~v206;
  LODWORD(v55) = v206 ^ 0xEF74699C;
  LODWORD(v137) = ((BYTE2(v203) ^ 8) + 1755584905 - ((2 * (HIWORD(v203) ^ 0x6108)) & 0x112)) ^ *(_DWORD *)&v146[4 * (BYTE2(v203) ^ 0x54)] ^ *(_DWORD *)&v147[4 * (v202 ^ 0x29)] ^ ((v202 ^ 0x44) + 310545904 + ((2 * (v202 ^ 0x44) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ (v55 >> 1);
  unsigned int v207 = *(_DWORD *)(v157 + 4 * (BYTE1(v202) ^ 0xDDu)) ^ HIDWORD(v258) ^ (v133 - 1499549486 - ((2 * v133) & 0x4D3D61A4));
  LODWORD(v133) = v137 - 1499549486 - ((2 * v137) & 0x4D3D61A4);
  LODWORD(v137) = *(_DWORD *)&v144[4 * (HIBYTE(v202) ^ 0xB0)];
  HIDWORD(v55) = ~v137;
  LODWORD(v55) = v137 ^ 0xEF74699C;
  LODWORD(v62) = *(_DWORD *)(v157 + 4 * (BYTE1(v62) ^ 0xBDu)) ^ v259 ^ v133;
  unsigned int v208 = *(_DWORD *)(v157 + 4 * (BYTE1(v203) ^ 0x8Fu)) ^ HIDWORD(v257) ^ *(_DWORD *)&v147[4
                                                                                          * (v61 ^ 0xB4)] ^ v73 ^ (v55 >> 1) ^ v204;
  unsigned int v209 = ((v203 ^ 0x85) + 310545904 + ((2 * (v203 ^ 0x85) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ v258 ^ *(_DWORD *)&v147[4 * (v203 ^ 0xE8)] ^ *(_DWORD *)(v157 + 4 * (BYTE1(v134) ^ 0x2Du)) ^ (v78 - 1499549486 - ((2 * v78) & 0x4D3D61A4));
  LODWORD(v133) = *(_DWORD *)&v144[4 * (HIBYTE(v208) ^ 0x18)];
  HIDWORD(v55) = ~v133;
  LODWORD(v55) = v133 ^ 0xEF74699C;
  LODWORD(v137) = ((BYTE2(v209) ^ 0x66) + 1755584905 - ((v209 >> 15) & 0x112)) ^ *(_DWORD *)&v146[4
                                                                                                * (BYTE2(v209) ^ 0x3A)];
  LODWORD(v134) = ((v55 >> 1) + 1755584905 - ((2 * (v55 >> 1)) & 0xD1483312)) ^ *(_DWORD *)&v146[4 * (BYTE2(v62) ^ 0x40)];
  int v210 = *(_DWORD *)&v144[4 * ((v62 >> 24) ^ 0xEF)];
  HIDWORD(v55) = ~v210;
  LODWORD(v55) = v210 ^ 0xEF74699C;
  LODWORD(v133) = (v55 >> 1) ^ *(_DWORD *)&v147[4 * (v208 ^ 0x90)] ^ ((v208 ^ 0xFD)
                                                                                     + 310545904
                                                                                     + ((2
                                                                                       * (v208 ^ 0xFD)
                                                                                       + 254) & 0x2E0 ^ 0xCDFA7BFF));
  LODWORD(v78) = *(_DWORD *)&v147[4 * (v207 ^ 0x27)] ^ ((v207 ^ 0x4A)
                                                                       + 310545904
                                                                       + ((2 * (v207 ^ 0x4A) + 254) & 0x2E0 ^ 0xCDFA7BFF));
  LODWORD(v73) = *(_DWORD *)&v144[4 * (HIBYTE(v209) ^ 0xAE)];
  HIDWORD(v55) = ~v73;
  LODWORD(v55) = v73 ^ 0xEF74699C;
  LODWORD(v78) = (v55 >> 1) ^ *(_DWORD *)&v146[4 * (BYTE2(v208) ^ 0xF)] ^ (v78
                                                                         + 1755584905
                                                                         - ((2 * v78) & 0xD1483312));
  int v211 = *(_DWORD *)&v144[4 * (HIBYTE(v207) ^ 0xDC)];
  HIDWORD(v55) = ~v211;
  LODWORD(v55) = v211 ^ 0xEF74699C;
  int v212 = v134 - 1499549486 - ((2 * v134) & 0x4D3D61A4);
  LODWORD(v134) = ((BYTE2(v207) ^ 0xE) + 1755584905 - ((2 * (HIWORD(v207) ^ 0xDC0E)) & 0x112)) ^ v257 ^ *(_DWORD *)(v157 + 4 * (BYTE1(v209) ^ 0x7Cu)) ^ *(_DWORD *)&v146[4 * (BYTE2(v207) ^ 0x52)] ^ (v133 - 1499549486 - ((2 * v133) & 0x4D3D61A4));
  unsigned int v213 = *(_DWORD *)(v157 + 4 * (BYTE1(v208) ^ 0x1Bu)) ^ HIDWORD(v256) ^ *(_DWORD *)&v147[4
                                                                                          * (v62 ^ 0x4D)] ^ ((v62 ^ 0x20) + 310545904 + ((2 * (v62 ^ 0x20) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ (v137 - 1499549486 - ((2 * v137) & 0x4D3D61A4)) ^ (v55 >> 1);
  LODWORD(v80) = ((v209 ^ 0xB3)
                + 310545904
                + ((2 * (v209 ^ 0xB3) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ HIDWORD(v255) ^ *(_DWORD *)(v157 + 4 * (BYTE1(v207) ^ 0x65u)) ^ *(_DWORD *)&v147[4 * (v209 ^ 0xDE)] ^ v212;
  LODWORD(v133) = *(_DWORD *)(v157 + 4 * (BYTE1(v62) ^ 0xA4u));
  LODWORD(v62) = v80 ^ BYTE2(v62);
  unsigned int v214 = v133 ^ v256 ^ (v78 - 1499549486 - ((2 * v78) & 0x4D3D61A4));
  LODWORD(v73) = *(_DWORD *)&v144[4 * ((v62 ^ 0x7641388B) >> 24)];
  HIDWORD(v55) = ~v73;
  LODWORD(v55) = v73 ^ 0xEF74699C;
  LODWORD(v73) = v55 >> 1;
  LODWORD(v137) = *(_DWORD *)&v144[4 * ((v134 ^ 0xF7E9CFA8) >> 24)];
  HIDWORD(v55) = ~v137;
  LODWORD(v55) = v137 ^ 0xEF74699C;
  int v215 = v55 >> 1;
  LODWORD(v137) = (((v62 ^ 0x7641388B) >> 16)
                 + 1755584905
                 - (((v62 ^ 0x7641388B) >> 15) & 0x112)) ^ *(_DWORD *)&v146[4
                                                                                        * (((v62 ^ 0x7641388B) >> 16) ^ 0x5C)];
  int v216 = *(_DWORD *)&v144[4 * (HIBYTE(v214) ^ 0xE7)];
  HIDWORD(v55) = ~v216;
  LODWORD(v55) = v216 ^ 0xEF74699C;
  int v217 = v55 >> 1;
  LODWORD(v133) = v73 ^ *(_DWORD *)&v147[4 * ((v214 ^ BYTE2(v208)) ^ 0x18)] ^ (((v134 ^ 0xF7E9CFA8) >> 16)
                                                                                              + 1755584905
                                                                                              - (((v134 ^ 0xF7E9CFA8) >> 15) & 0x112)) ^ *(_DWORD *)&v146[4 * (((v134 ^ 0xF7E9CFA8) >> 16) ^ 0x5C)] ^ (((v214 ^ BYTE2(v208)) ^ 0x75) + 310545904 + ((2 * ((v214 ^ BYTE2(v208)) ^ 0x75) + 254) & 0x2E0 ^ 0xCDFA7BFF));
  LODWORD(v133) = (v133 - 1499549486 - ((2 * v133) & 0x4D3D61A4)) ^ *(_DWORD *)(v157 + 4 * (BYTE1(v213) ^ 0xECu));
  LODWORD(v144) = *(_DWORD *)&v144[4 * (HIBYTE(v213) ^ 0x57)];
  LODWORD(v78) = v215 ^ *(_DWORD *)&v146[4 * (BYTE2(v213) ^ 0xA7)] ^ ((BYTE2(v213) ^ 0xFB)
                                                                    + 1755584905
                                                                    - ((2 * (HIWORD(v213) ^ 0x57FB)) & 0x112)) ^ ((v62 ^ 0x8B) + 310545904 + ((2 * (v62 ^ 0x8B) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ *(_DWORD *)&v147[4 * (v62 ^ 0xE6)];
  HIDWORD(v55) = ~v144;
  LODWORD(v55) = v144 ^ 0xEF74699C;
  LODWORD(v73) = HIWORD(v214);
  LODWORD(v62) = HIWORD(v214) ^ 0xE731;
  int v218 = BYTE2(v214) ^ 0x31;
  LODWORD(v61) = *(_DWORD *)&v146[4 * (BYTE2(v214) ^ 0x6D)];
  int v219 = (v78 - 1499549486 - ((2 * v78) & 0x4D3D61A4)) ^ *(_DWORD *)(v157 + 4 * (BYTE1(v214) ^ 0x6Du));
  LODWORD(v78) = ((v134 ^ 0xA8)
                + 310545904
                + ((2 * (v134 ^ 0xA8) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ *(_DWORD *)&v147[4 * (v134 ^ 0xC5)] ^ (v218 + 1755584905 - 2 * (v62 & 0x8F ^ v73 & 6));
  LODWORD(v73) = *(_DWORD *)(v157 + 4 * (BYTE1(v134) ^ 0x2Du));
  int v220 = *(_DWORD *)&v147[4 * (v213 ^ 0x42)];
  LODWORD(v134) = HIDWORD(v247) ^ *(_DWORD *)(v157 + 4 * (BYTE1(v80) ^ 0xDAu)) ^ ((v78 ^ v61 ^ (v55 >> 1))
                                                                                  - 1499549486
                                                                                  - ((2
                                                                                    * (v78 ^ v61 ^ (v55 >> 1))) & 0x4D3D61A4));
  unsigned int v221 = (v219 - 1733338000 - ((2 * v219) & 0x315EB8E0)) ^ v255;
  LODWORD(v144) = (v133 - 1770246919 - ((2 * v133) & 0x2CF859F2)) ^ HIDWORD(v254);
  LODWORD(v157) = v73 ^ v254 ^ ((v213 ^ 0x2F)
                              + 310545904
                              + ((2 * (v213 ^ 0x2F) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ v217 ^ v220 ^ (v137 - 1499549486 - ((2 * v137) & 0x4D3D61A4));
  BYTE2(v219) = BYTE2(v134) ^ 0x8C;
  LODWORD(v137) = (v73 ^ v254 ^ ((v213 ^ 0x2F) - 16 + ~((2 * (v213 ^ 0x2F) - 2) & 0xE0)) ^ v217 ^ v220 ^ (v137 - 46 - ((2 * v137) & 0xA4))) ^ 0xC9;
  uint64_t v222 = (uint64_t)*(&off_10007DD80 + SHIDWORD(v246));
  v223 = (char *)*(&off_10007DD80 + (int)v246) - 12;
  int v224 = *(_DWORD *)(v222 + 4 * (v221 ^ 0xA2u));
  v225 = (char *)*(&off_10007DD80 + HIDWORD(v245)) - 8;
  LODWORD(v137) = (*(_DWORD *)&v225[4 * (BYTE2(v221) ^ 0x9E)] - 706985666) ^ (*(_DWORD *)(v222 + 4
                                                                                               * v137)
                                                                            + 1370156948);
  int v226 = v137 - 40208883 - ((2 * v137) & 0xFB34EC1A);
  uint64_t v227 = *(unsigned int *)(v222 + 4 * (v134 ^ 0xC8u));
  unsigned int v228 = v144 ^ 0x351D74B9;
  LODWORD(v137) = *(_DWORD *)(v222 + 4 * (v144 ^ 0xB9u));
  LODWORD(v62) = *(_DWORD *)&v223[4 * (HIBYTE(v221) ^ 0xE7)];
  LODWORD(v222) = *(_DWORD *)&v223[4 * (BYTE3(v157) ^ 0xB8)];
  LODWORD(v144) = *(_DWORD *)&v223[4 * ((v144 >> 24) ^ 0x65)];
  LODWORD(v133) = (*(_DWORD *)&v225[4 * (BYTE2(v157) ^ 0x38)] - 706985666) ^ (*(_DWORD *)&v223[4
                                                                                             * ((v134 ^ 0x898C5DC8) >> 24)]
                                                                            - 992035984) ^ (v224 + 1370156948);
  v229 = (char *)*(&off_10007DD80 + (int)v247) - 8;
  LODWORD(v134) = v226 ^ *(_DWORD *)&v229[4 * (BYTE1(v134) ^ 0x61)] ^ (v144 - 992035984);
  int v230 = *(_DWORD *)&v229[4 * (BYTE1(v221) ^ 0xA0)];
  int v231 = *(_DWORD *)&v229[4 * (BYTE1(v157) ^ 0xE9)];
  int v232 = *(_DWORD *)&v225[4 * BYTE2(v219)];
  int v233 = *(_DWORD *)&v225[4 * BYTE2(v228)];
  unsigned int v234 = *(_DWORD *)&v229[4 * BYTE1(v228)] ^ HIDWORD(v249) ^ (v133 - 40208883 - ((2 * v133) & 0xFB34EC1A));
  v235 = (char *)*(&off_10007DD80 + SHIDWORD(v244)) - 4;
  LODWORD(v134) = HIDWORD(a11) ^ HIDWORD(v254) ^ (v134 - 1770246919 - ((2 * v134) & 0x2CF859F2));
  *(unsigned char *)(a43 + 6) = v235[((unsigned __int16)(*(_WORD *)&v229[4 * BYTE1(v228)] ^ WORD2(v249) ^ (v133 + 30221 - ((2 * v133) & 0xEC1A))) >> 8) ^ 0x99] ^ 0xB6;
  v236 = (char *)*(&off_10007DD80 + (int)v244) - 4;
  *(unsigned char *)(a43 + *(void *)(v51 - 256)) = (v236[BYTE2(v134) ^ 0xADLL] - 49) ^ 0xC5;
  unsigned int v237 = v230 ^ HIDWORD(a11) ^ (v227 - ((2 * v227 - 1554653400) & 0xFB34EC1A) + 1329948065) ^ (v222 - 992035984) ^ (v233 - 706985666);
  v238 = (char *)*(&off_10007DD80 + SHIDWORD(v243)) - 8;
  *(unsigned char *)(a43 + *(void *)(v51 - 216)) = v238[v234 ^ 0xFCLL] ^ 0xAB;
  *(unsigned char *)(a43 + *(void *)(v51 - 240)) = (v236[BYTE2(v237) ^ 0x8CLL] - 49) ^ 0x47;
  v239 = (char *)*(&off_10007DD80 + (int)v243) - 4;
  *(unsigned char *)(a43 + *(void *)(v51 - 224)) = (v239[HIBYTE(v234) ^ 0xDELL] - 44) ^ 0x1B;
  LODWORD(v229) = v236[BYTE2(v234) ^ 0x15];
  *(unsigned char *)(a43 + *(void *)(v51 - 248)) = (((_BYTE)v229 + (((_BYTE)v229 - 49) ^ 0xDA) - 48) ^ 0xFE)
                                           + (_BYTE)v229
                                           - 49;
  uint64_t v240 = v245 ^ v231;
  LODWORD(v137) = v240 ^ (v232 - 706985666) ^ (v137 + 1370156948) ^ (v62
                                                                   - ((2 * v62 - 1984071968) & 0xFB34EC1A)
                                                                   - 1032244867);
  *(unsigned char *)(a43 + *(void *)(v51 - 232)) = v238[v137 ^ 5] ^ 0x59;
  *(unsigned char *)(a43 + *(void *)(v51 - 152)) = (v239[BYTE3(v134) ^ 0x4ELL] - 44) ^ 0xE6;
  *(unsigned char *)(a43 + *(void *)(v51 - 144)) = (v239[HIBYTE(v237) ^ 0x9CLL] - 44) ^ 0xB8;
  uint64_t v241 = *(void *)(v51 - 176);
  *(unsigned char *)(a43 + v241) = (v239[BYTE3(v137) ^ 0x67] - 44) ^ 0x91;
  *(unsigned char *)(a43 + *(void *)(v51 - 168)) = v238[v237 ^ 0xF2] ^ 0x53;
  *(unsigned char *)(a43 + *(void *)(v51 - 208)) = v235[BYTE1(v237) ^ 0x1ELL] ^ 0x15;
  *(unsigned char *)(a43 + *(void *)(v51 - 160)) = v235[BYTE1(v137) ^ 0x33] ^ 0xC;
  *(unsigned char *)(a43 + *(void *)(v51 - 192)) = v235[BYTE1(v134) ^ 0xBCLL] ^ 0xC2;
  *(unsigned char *)(a43 + *(void *)(v51 - 136)) = v238[v134 ^ 0x9FLL] ^ 0xAB;
  *(unsigned char *)(a43 + *(void *)(v51 - 128)) = (v236[BYTE2(v137) ^ 0xDLL] - 49) ^ 0x8E;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a47 + 8 * ((22 * (((v241 + 328348234 - 2 * ((v241 + 16) & *(_DWORD *)(v51 - 180) ^ *(_DWORD *)(v51 - 196) & 5)) ^ 0x1392323Au) >= a45)) | (*(_DWORD *)(v51 - 120) - 609))))(21, 5, v241, v240, (v229 - 49) ^ 0xDAu, 171, 2524720377, v227, a9, a10, a11, v243, v244, v245, v246, v247, v248, v249, v250,
           v251,
           v252,
           v253,
           v254,
           v255,
           v256,
           v257,
           v258,
           v259,
           v260,
           v261,
           v262,
           v263,
           v264,
           v265,
           v266,
           v267,
           v268,
           v269,
           v270,
           v271);
}

uint64_t sub_10001B770@<X0>(int a1@<W3>, int a2@<W8>)
{
  *v4 ^= v3;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((4067 * (((223 * ((a2 - 454554227) & 0x1B17F7FF ^ 0x7EB)) ^ a1) + v2 != 1666313860)) ^ (a2 - 454554227) & 0x1B17F7FF)))();
}

uint64_t sub_10001B7E8@<X0>(int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3 + 8 * (((v4 == ((v5 - 58) ^ a1) + v3) * a2) ^ v5)))();
}

uint64_t sub_10001B810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((*(_DWORD *)(*v10 + 4 * v12) != v8) * (((a8 + a6) & (v9 + 1040)) - 1021)) ^ a8)))();
}

void sub_10001B84C(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  int v9 = 5 * (v7 ^ 0x73E);
  a5 = v7 + 1374699841 * (((&a3 | 0x24434647) + (~&a3 | 0xDBBCB9B8)) ^ 0x49B75E4F) + 175;
  a3 = a1;
  a4 = v6;
  (*(void (**)(uint64_t *))(v5 + 8 * (v7 + 640)))(&a3);
  _DWORD *v8 = (v9 ^ 0xCF7B7BDB) - *v8;
  sub_100021FB0();
}

uint64_t sub_10001B8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * ((241 * (a5 + ((v9 - 161) | 0x18) == 526347423)) ^ ((v9 - 161) | 0x18))))(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_10001B91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((55 * ((((a6 - 444) ^ 0x413) & v6) == (a6 ^ 0x4E5) - 290)) ^ a6)))();
}

uint64_t sub_10001B95C(int8x8_t a1, int8x8_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  unsigned int v11 = v6 - 8;
  int8x8_t v12 = vrev64_s8(*(int8x8_t *)(v8 + v11));
  *(int8x8_t *)(a6 + v11) = vrev64_s8(vadd_s8(vsub_s8(v12, vand_s8(vadd_s8(v12, v12), a1)), a2));
  return (*(uint64_t (**)(void))(v10 + 8 * (((v7 == -8) * v9) ^ a5)))();
}

uint64_t sub_10001B968(uint64_t result)
{
  *(_DWORD *)(result + 4) = v1;
  return result;
}

uint64_t sub_10001B970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v28 = (v24 - 1227219730) & 0x4925E1E7;
  *(_DWORD *)(v27 - 112) = v24
                         + 1224239923 * (((v27 - 144) & 0x2D9ACFFC | ~((v27 - 144) | 0x2D9ACFFC)) ^ 0x20D6CDD4)
                         + 625;
  *(void *)(v27 - 104) = a24;
  *(void *)(v27 - 144) = a22;
  *(void *)(v27 - 136) = a13;
  *(void *)(v27 - 128) = a24;
  *(void *)(v27 - 120) = a23;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v24 + 1763)))(v27 - 144);
  BOOL v30 = v26 + a20 + 2 >= (((v28 + 362) | 0x104) ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((2 * v30) | (8 * v30) | (v28 + 974))))(v29);
}

uint64_t sub_10001BA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v18 - 112) = v17
                         + 1374699841 * (((~(v18 - 128) & 0x2D3D96EC) - (~(v18 - 128) | 0x2D3D96ED)) ^ 0x40C98EE4)
                         + 1660;
  *(void *)(v18 - 128) = a14;
  *(void *)(v18 - 120) = &STACK[0x139154EEB432830];
  (*(void (**)(uint64_t))(v14 + 8 * (v17 + 2125)))(v18 - 128);
  *(void *)(v18 - 120) = a14;
  *(_DWORD *)(v18 - 112) = v17
                         + ((((v18 - 128) ^ 0x5F497C76) & 0x2F4F9D48 | ~((v18 - 128) ^ 0x5F497C76 | 0x2F4F9D48)) ^ 0x356D66A3)
                         * v16
                         + 1574;
  *(void *)(v18 - 104) = v15;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v17 ^ 0x86E)))(v18 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v18 - 128) > ((v17 + 1581) ^ 0x4B4B6D80u))
                                              * (458 * (v17 ^ 0x9C) - 861)) ^ v17)))(v19);
}

uint64_t sub_10001BB70()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((23 * (v1 + v2 - 1 < (v0 ^ 0x407u) + 2147482362)) ^ v0)))();
}

uint64_t sub_10001BBB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, int a16, unsigned int a17)
{
  unsigned int v18 = a14 + 84993300 + ((a6 + a5) ^ 0x717);
  BOOL v19 = v18 < 0x2C5908E5;
  BOOL v20 = v18 > a17;
  if (a17 < 0x2C5908E5 != v19) {
    unsigned __int8 v21 = v19;
  }
  else {
    unsigned __int8 v21 = v20;
  }
  return (*(uint64_t (**)(void))(v17 + 8 * ((113 * (((a6 + a5 + 1) ^ v21) & 1)) ^ (a6 + a5 + 1461))))();
}

uint64_t sub_10001BBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v29 = v27 | 0x194;
  *(_DWORD *)(v28 - 144) = (v29 - 751) ^ (1225351577
                                        * ((((v28 - 144) | 0x20BD77BF) + (~(v28 - 144) | 0xDF428840)) ^ 0x327AFA8));
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 112) = a22;
  *(void *)(v28 - 136) = a23;
  *(void *)(v28 - 128) = a24;
  (*(void (**)(uint64_t))(v26 + 8 * (v29 ^ 0xADE)))(v28 - 144);
  *(void *)(v28 - 136) = a23;
  *(void *)(v28 - 128) = a24;
  *(_DWORD *)(v28 - 144) = (v29 - 751) ^ (1225351577 * ((v28 - 1717821674 - 2 * ((v28 - 144) & 0x999C1FA6)) ^ 0xBA06C7B0));
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 112) = a22;
  (*(void (**)(uint64_t))(v26 + 8 * (v29 ^ 0xADE)))(v28 - 144);
  int v30 = 1374699841 * ((((v28 - 144) | 0x4996AB21) - (v28 - 144) + ((v28 - 144) & 0xB66954D8)) ^ 0x2462B328);
  *(_DWORD *)(v28 - 144) = (v29 + 454) ^ v30;
  *(_DWORD *)(v28 - 128) = v25 - v30 + (((v29 - 975) | 0x201) ^ 0xF8585D97);
  *(void *)(v28 - 136) = a25;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v29 + 1284)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * ((44 * (*(_DWORD *)(v28 - 140) == (((v29 - 478) | 0x10) ^ 0x5F2A471))) ^ v29)))(v31);
}

uint64_t sub_10001BD70@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  int v7 = 4 * (v3 ^ 0x58D);
  (*(void (**)(void, void, void))(v5 + 8 * (v3 ^ 0xD94)))(**(unsigned int **)(a1 + 8 * (int)(v3 & 0xB690EABB)), *v4, *(_DWORD *)(v6 - 0x2C138C8FAF40FC1ALL) + (v7 ^ (v2 + 1257)));
  unint64_t v8 = ((unint64_t)&a2 ^ 0x7FDF97FF8BFD7FE9)
     - 0x1A13167009307428
     + ((2 * (void)&a2) & 0xFFBF2FFF17FAFFD0);
  *(unsigned char *)(v6 - 0x2C138C8FAF40FC03) = ((v8 + (v7 ^ 0xF7)) ^ 0xBA) * (v8 + 80);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * v7))(v6 - 0x2C138C8FAF40FC22);
}

uint64_t sub_10001BE80@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  unsigned int v10 = *(_DWORD *)(*(void *)(v9 - 0x139154EEB4327E8) + 4 * (v6 + v7)) ^ v3;
  *(_DWORD *)(*(void *)(v9 - 0x139154EEB4327E8) + 4 * (a3 + v4)) = ((v10 >> (32 - v5)) | a2 ^ v3)
                                                                       + v3
                                                                       - ((2 * ((v10 >> (32 - v5)) | a2 ^ v3)) & 0xB8FE41B0);
  return (*(uint64_t (**)(void))(v8 + 8 * (a1 ^ 0x4D7 ^ (4 * (v6 + v7 > 0)))))();
}

uint64_t sub_10001BF10()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)((15 * ((v3 ^ v0) >> 31)) ^ v1)))();
}

uint64_t sub_10001BF44@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v8 = ((v5 + 1580645245) & 0xFE9EC7EF ^ (v3 + 1642)) + v4;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(v2 + v8);
  return (*(uint64_t (**)(void))(v7 + 8 * ((31 * (v4 - 1 == a2)) ^ (v6 + v5 + 1948))))();
}

uint64_t sub_10001BF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_DWORD *a22)
{
  *a22 = -595648296;
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(v24
                                                             + 8
                                                             * (((v22 - 438978921 < -438978920) * ((v23 - 788) ^ 0x1E5)) ^ (v23 - 267))))(a1, (v23 - 267), 1);
}

void sub_10001C020(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(*(void *)(a1 + 8) - 0x2C138C8FAF40FC16) + 1178193093;
  unsigned int v2 = *(_DWORD *)a1 + 1759421093 * (a1 ^ 0xB37DB054) + 438556326;
  int v3 = (v2 < 0x819BD015) ^ (v1 < 0x819BD015);
  BOOL v4 = v1 < v2;
  if (v3) {
    BOOL v4 = v2 < 0x819BD015;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_10001C104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t *a22,uint64_t a23,int a24,int a25,int a26,int a27)
{
  if ((a12 - 20931516) >= 0xAF3931E) {
    int v30 = -1247212205;
  }
  else {
    int v30 = 1646191814;
  }
  int v31 = 460628867 * ((&a22 - 68604818 - 2 * ((unint64_t)&a22 & 0xFBE92C6E)) ^ 0xB77FAE13);
  a26 = v30 - v31;
  a24 = v31 - 101825754;
  a25 = v31 + v28 - 2024874190;
  a22 = &STACK[0x38223619C320A73];
  a23 = a17;
  uint64_t v32 = (*(uint64_t (**)(unint64_t **))(v29 + 8 * (v28 + 1192)))(&a22);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * (((a27 == (((v28 - 719) | 0x212) ^ (v27 - 886))) * (v28 + 1984)) ^ v28)))(v32);
}

uint64_t sub_10001C200@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6, uint64_t a7, int a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  *a6 = a9 ^ 0x87;
  return (*(uint64_t (**)(void))(v15 + 8 * (((a14 != v14) * ((3 * (a1 ^ 0x46) - 551828131) & 0x20E43D57 ^ 0x440)) | a1)))();
}

void sub_10001C264()
{
  int *v0 = v1 | 1;
}

uint64_t sub_10001C2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  return sub_10004799C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, v28, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_10001C2A8()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((v1 - 40561137) * (v2 <= 0x2290703D)) ^ (v1 - 40560973))))();
}

uint64_t sub_10001C2F0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x288] = v67;
  *(void *)(v66 + 1516) = v64;
  *(void *)(v66 + 1524) = v64;
  *(_DWORD *)(v66 + 1532) = v65;
  *(void *)(a1 + 96) = v66;
  STACK[0x258] = v66;
  *(_DWORD *)(v66 + 476) = 2115178075;
  unint64_t v70 = v63[38];
  int v71 = (char *)&STACK[0x680] + v70 + (a9 + 1823) - 0x74CFFF0833D7937CLL;
  STACK[0x3F0] = (unint64_t)(v71 + 1447);
  STACK[0x380] = v70;
  STACK[0x378] = v70 + 432;
  STACK[0x260] = (unint64_t)(v71 + 1839);
  STACK[0x3E8] = v63[15];
  STACK[0x388] = a1;
  int v72 = (a9 - 26) | 0x281;
  STACK[0x3D0] = *(void *)(v69 + 8 * a9);
  v63[38] = STACK[0x378];
  LODWORD(STACK[0x624]) = 2029314993;
  LODWORD(STACK[0x4E8]) = 2079419384;
  v63[45] = 0;
  LODWORD(STACK[0x58C]) = 2119813987;
  uint64_t v73 = (_DWORD *)STACK[0x3F0];
  *uint64_t v73 = 659196916;
  LODWORD(STACK[0x3C8]) = -248854377;
  LODWORD(STACK[0x3F8]) = (v72 ^ 0xF8731C1D) + 201353439;
  LODWORD(STACK[0x3B0]) = 553152386;
  LODWORD(STACK[0x3B8]) = 24464185;
  LODWORD(v73) = *v73;
  LODWORD(STACK[0x3E0]) = 659196261;
  int v75 = v73 != (v72 ^ 0x274A8965) || a6 + 1 != a6 + ((v72 - 144) | 0x182) - 899;
  unsigned int v76 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8 * (((v75 << 7) | (v75 << 8)) ^ v72));
  LODWORD(STACK[0x3D8]) = v68;
  return v76(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

void sub_10001C494(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x139154EEB4327ECLL) = (((v3 + v2) * (v1 - 674146141)) ^ 0xF7BFBFBD)
                                        + 1878916860
                                        + ((2 * (v3 + v2) * (v1 - 674146141)) & 0xEF7F7F7A);
}

uint64_t sub_10001C520()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((489 * (v0 + 1 == v3 + 16)) ^ v1)))();
}

uint64_t sub_10001C60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v8 = v6 + 562855979;
  if (v8 <= 0x40) {
    int v9 = 64;
  }
  else {
    int v9 = v8;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                       + 8
                                                                       * ((((((-v3 - 562855979 - v5 + v9) < 0xF) ^ (v4 + 5)) & 1)
                                                                         * ((v4 + 1283) ^ 0x761)) ^ v4)))(a1, a2, a3, 2710471100);
}

uint64_t sub_10001C690@<X0>(int a1@<W1>, int a2@<W2>, char a3@<W4>, uint64_t a4@<X8>)
{
  uint64_t v13 = (v8 + a2);
  *(unsigned char *)(v11 + v13 + 36) = *(unsigned char *)(v10 + v13) ^ *(unsigned char *)(v5 + ((v7 ^ 0x10) & v13)) ^ *(unsigned char *)(((v7 ^ 0x10) & v13) + v4 + 1) ^ *(unsigned char *)(a4 + ((v7 ^ 0x10) & v13)) ^ (((v7 ^ 0x10) & v13) * v9) ^ a3;
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((15 * (((v8 - 1 == v6) ^ ((v7 ^ a1) - 60)) & 1)) ^ ((v7 ^ a1) - 517))))();
}

uint64_t sub_10001C708()
{
  return sub_10001C710();
}

uint64_t sub_10001C710(const char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, int8x16_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v41 = *(uint64_t (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * v32);
  uint64_t v42 = *(unsigned int *)(v40 - 148);
  int v43 = *(_DWORD *)(v40 - 144);
  HIDWORD(a22) = *(_DWORD *)(v40 - 148);
  LODWORD(a23) = v43;
  unsigned int v45 = *(_DWORD *)(v40 - 140);
  unsigned int v44 = *(_DWORD *)(v40 - 136);
  int v46 = *(unsigned char *)(v40 - 124) ^ 0xDD;
  if (v46 == 2)
  {
    int8x16x4_t v68 = vld4q_s8(a1);
    uint64_t v57 = *(unsigned int *)(v40 - 132);
    uint8x16_t v58 = (uint8x16_t)veorq_s8(v68.val[1], a10);
    _Q23 = vmovl_u8(*(uint8x8_t *)v58.i8);
    _Q22 = vmovl_high_u8(v58);
    __asm
    {
      SHLL2           V24.4S, V22.8H, #0x10
      SHLL2           V25.4S, V23.8H, #0x10
    }
    char v63 = (_DWORD *)(v31 + 4 * (v37 + 596678619));
    int v64 = *(_DWORD *)(v31 + 4 * ((v33 ^ (v37 + 314)) + 596678619)) ^ *(v63 - 3);
    int v65 = *(v63 - 16) ^ *(v63 - 14) ^ (v64 + v36 - ((2 * v64) & 0x3EBED70E));
    HIDWORD(v66) = v65 ^ v36;
    LODWORD(v66) = v65;
    *char v63 = (v66 >> 31) + v36 - ((2 * (v66 >> 31)) & 0x3EBED70E);
    return (*(uint64_t (**)(uint64_t))(v35
                                              + 8
                                              * (((v39 != 596678556) | (2 * (v39 != 596678556))) ^ HIDWORD(a23))))(v57);
  }
  else if (v46 == 1)
  {
    int8x16x4_t v67 = vld4q_s8(a1);
    uint64_t v47 = 433 * (a6 ^ (a6 - 2));
    uint8x16_t v48 = (uint8x16_t)veorq_s8(v67.val[2], a10);
    _Q27 = vmovl_high_u8(v48);
    _Q26 = vmovl_u8(*(uint8x8_t *)v48.i8);
    __asm
    {
      SHLL2           V26.4S, V26.8H, #0x10
      SHLL2           V27.4S, V27.8H, #0x10
    }
    uint64_t v55 = *(void *)(a7 + 8 * (int)(v47 ^ 0x340));
    LODWORD(a19) = *(unsigned __int8 *)(v40 - 124) ^ 0xFFFFFFDD;
    return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * (int)((133 * (a24 + 1 != v39)) | v47)))(*(void *)(a7 + 8 * ((int)v47 - 797)), a2, v47, v55, *(void *)(a7 + 8 * (int)(v47 ^ 0x320)), *(unsigned int *)(v55 + 4 * (a24 + v37)), a7, v42, a12, a13, a14, a15, a16, a17, a18, a19, __PAIR64__(v44, v45), v41, a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31);
  }
  else
  {
    *(_DWORD *)(v40 - 148) = (v42 ^ v38)
                           + (HIDWORD(a22) ^ v38)
                           + v38
                           - (v34 & (2 * ((v42 ^ v38) + (HIDWORD(a22) ^ v38))));
    *(_DWORD *)(v40 - 144) = 2 * (v43 ^ v38) + v38 - (v34 & (4 * (v43 ^ v38)));
    *(_DWORD *)(v40 - 140) = 2 * (v45 ^ v38) + v38 - (v34 & (4 * (v45 ^ v38)));
    *(_DWORD *)(v40 - 136) = 2 * (v44 ^ v38) + v38 - (v34 & (4 * (v44 ^ v38)));
    return v41(a1, a2, a3, a4, a5, a6, a7, v42, a12, a13, a14);
  }
}

void sub_10001CB14(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  *(_DWORD *)(v18 - 132) = (a3 ^ v17)
                         + (a16 ^ v17)
                         + v17
                         - ((((v16 - 245657213) | 0xA804003) - 1144593267) & (2 * ((a3 ^ v17) + (a16 ^ v17))));
  JUMPOUT(0x10001CB7CLL);
}

#error "10001D354: call analysis failed (funcsize=314)"

uint64_t sub_10001D358()
{
  *(_DWORD *)(v5 - 120) = v3
                        + ((-738313505 - ((v5 - 136) | 0xD3FE3ADF) + ((v5 - 136) | 0x2C01C520)) ^ 0x9695BD42) * v0
                        + 1382;
  *(void *)(v5 - 128) = v4;
  *(void *)(v5 - 112) = v1;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 + 1938)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)((((*(_DWORD *)(v5 - 136) - 1263233868) < 0xBD19A08E)
                                                   * ((v3 + 1188607638) & 0xB9274B7F ^ 0x3B3)) ^ v3)))(v6);
}

uint64_t sub_10001D418(int a1, int a2, int a3, int a4)
{
  unsigned int v10 = a4 - 34;
  int v11 = (a4 - 406) | 0x5A2;
  uint64_t v12 = (a2 + a1 + a3);
  uint64_t v13 = v12 + v4;
  uint64_t v14 = v12 + v8;
  uint64_t v15 = (a2 + a1) & 0xF;
  uint64_t v16 = v15 - v14;
  uint64_t v17 = (v7 | v15) - v14;
  BOOL v19 = (unint64_t)(v13 - v14) >= 0x10
     && (unint64_t)(v16 + v5) >= 0x10
     && (unint64_t)(v16 + v6) >= 0x10;
  unint64_t v20 = v17 + 4;
  int v22 = !v19 || v20 < (v10 ^ 0x368uLL);
  return (*(uint64_t (**)(void))(v9 + 8 * (int)((v22 * (v11 - 1732)) ^ v10)))();
}

uint64_t sub_10001D498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v75 = ((((2 * v70) | 0xDFD9FE) - v70 - 7335167) ^ 0x94C2A5A6) * v68;
  v72[3] = a68;
  *(_DWORD *)(v74 - 200) = v75 ^ 0xC1674A5D;
  *(_DWORD *)(v74 - 164) = v71 - v75 - 525;
  v72[1] = v69;
  v72[2] = a67;
  uint64_t v76 = (*(uint64_t (**)(uint64_t))(v73 + 8 * (v71 + 1403)))(v74 - 200);
  return (*(uint64_t (**)(uint64_t))(v73
                                            + 8
                                            * (int)(((*(_DWORD *)(v74 - 168) != 526347143)
                                                   * ((v71 + 1046505424) & 0xC19F94FF ^ 0xB5)) ^ v71)))(v76);
}

uint64_t sub_10001D56C@<X0>(int a1@<W8>)
{
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8 * ((98 * (a1 + 8 == (((v1 ^ 0x75) + 720) ^ 0x70B))) ^ v1));
  STACK[0x3F8] = *(void *)(v2 + 8 * (v1 - 887)) - 4;
  STACK[0x3F0] = *(void *)(v2 + 8 * (v1 ^ 0x46D));
  return v4();
}

uint64_t sub_10001D574@<X0>(int a1@<W3>, int a2@<W5>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (a1 - 1605072734)) = *(unsigned char *)(v5 + (a1 - 1605072734));
  return (*(uint64_t (**)(void))(v3
                                           + 8
                                           * (int)(((a1 - 1 != v4)
                                                  * (v6 + (((a2 ^ 0x1B2) + 873463090) | 0x830D2413) + 2106)) ^ a2 ^ 0x1B2)))(0);
}

uint64_t sub_10001D5D4(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  unsigned int v12 = a4 + a3 + a6;
  uint64_t v13 = v8 + v12;
  long long v14 = *(_OWORD *)(v13 - 31);
  uint64_t v15 = a1 + v12;
  *(_OWORD *)(v15 - 15) = *(_OWORD *)(v13 - 15);
  *(_OWORD *)(v15 - 31) = v14;
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((((v9 & 0xFFFFFFE0) == 32) * ((209 * ((v10 + 1784) ^ (v6 + 2026))) ^ 0x7F4)) ^ (v7 + v10 + 1784 + 793))))();
}

uint64_t sub_10001D640@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v11 = a1 - 1656;
  unsigned int v12 = (a1 + 1444223239) & 0xA9EAE4FE;
  unsigned int v14 = 1755732067 * (((&a4 | 0xA509F51) - (&a4 & 0xA509F51)) ^ 0xD496228A);
  a7 = &STACK[0x5E89E940DF8E90E9];
  a4 = &STACK[0x3F70C0CAD4126774];
  a5 = v10;
  a8 = v14 ^ 0x5191942E;
  a6 = (a1 - 1364) ^ v14;
  uint64_t v15 = (*(uint64_t (**)(unint64_t **))(v9 + 8 * (a1 + 587)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (int)(((*(_DWORD *)(v10 - 0x2C138C8FAF40FC0ALL) == v8)
                                                   * (v12 + (a1 ^ 0x4F2))) | v11)))(v15);
}

uint64_t sub_10001D744@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  int v55 = *(_DWORD *)(&a39 + ((v53 + v51) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v53 + v51)) = v55 ^ 0x25;
  *(unsigned char *)(a1 + (v53 + v51 + 2)) = (BYTE2(v55) ^ 0xD1)
                                                 - 2 * ((BYTE2(v55) ^ 0xD1) & 0xEF ^ BYTE2(v55) & 4)
                                                 - 21;
  *(unsigned char *)(a1 + (v53 + v51 + 1)) = ((v52 - 38) ^ 0x4B ^ BYTE1(v55))
                                                 + ~(2 * (((v52 - 38) ^ 0x4B ^ BYTE1(v55)) & 0xEF ^ BYTE1(v55) & 4))
                                                 - 20;
  *(unsigned char *)(a1 + (v53 + v51 + 3)) = (HIBYTE(v55) ^ 0xDB)
                                                 - 2 * ((HIBYTE(v55) ^ 0xDB) & 0xEF ^ HIBYTE(v55) & 4)
                                                 - 21;
  BOOL v56 = v53 - 1365032998 < (a51 - 1977280246);
  if (v53 - 1365032998 < a2 != a51 - 1977280246 < a2) {
    BOOL v56 = a51 - 1977280246 < a2;
  }
  return (*(uint64_t (**)(void))(v54 + 8 * (((2 * v56) | (8 * v56)) ^ v52)))();
}

uint64_t sub_10001D848@<X0>(int a1@<W2>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  return sub_100053588(a22, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           a21,
           a22);
}

uint64_t sub_10001D860(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((2432
                                * ((v2 & (2 * (**(unsigned __int8 **)(a2 + 8) - 42)))
                                 + ((**(unsigned __int8 **)(a2 + 8) - 42) ^ v3) == (((v4 - 356) | 0x105) ^ (v3 - 442))
                                                                                 + ((v4 + 1339737921) & 0xB02537F7))) ^ v4)))();
}

uint64_t sub_10001D8C8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * (int)((((STACK[0x420] - 506) ^ 0x269)
                                                                              * (v2 < v3)) | (STACK[0x420] + 523))))(a1, a2, 4251303770, 4294966180);
}

uint64_t sub_10001D908@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((a1 == 99788384) ^ (77 * (v1 ^ 0x1E))) & 1)
                                * (((v1 ^ 0x41E) + 526) ^ 0x23C)) ^ v1)))();
}

uint64_t sub_10001D950()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 != (v1 ^ 0x8C9u) + 242 + 0x5E18B9DD4E8C077) * ((22 * (v1 ^ 0x8C9)) ^ 0x5DF)) ^ v1)))();
}

void sub_10001D9A0(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (1225351577
            * ((-1431559688 - (a1 ^ 0x637B64C4 | 0xAAAC21F8) + (a1 ^ 0x637B64C4 | 0x5553DE07)) ^ 0x15B262D5));
  __asm { BRAA            X15, X17 }
}

uint64_t sub_10001DAC4(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 ^ 0xCCD)))(a1);
  _DWORD *v2 = 295258426;
  return result;
}

uint64_t sub_10001DAFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v12 = v9 + 883188498;
  if (v12 <= 0x40) {
    unsigned int v12 = 64;
  }
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((a3 - v8 - v10 + v12 >= ((a8 + 522726097) & 0xE0D7D73F) - 1784)
                                * ((a8 + 522726097) ^ 0x1F282E16)) ^ a8)))();
}

uint64_t sub_10001DB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unint64_t a33,uint64_t a34,_DWORD *a35)
{
  if (v36 <= 0x3D847029) {
    int v41 = a16 + *a35;
  }
  else {
    int v41 = v38;
  }
  *a35 = v41;
  int v42 = (((v35 >> 11) ^ 0x1FACB7) - 43663526 - ((2 * ((v35 >> 11) ^ 0x1FACB7)) & 0xB7EB4)) ^ v35;
  unsigned int v43 = (((v42 << 7) & 0x9D2C5680 ^ v42) << 15) & 0xEFC60000 ^ (v42 << 7) & 0x9D2C5680 ^ v42;
  *(_DWORD *)(*v40 + a33) ^= v43 ^ (v43 >> 18);
  return (*(uint64_t (**)(void))(v37 + 8 * ((v39 + 40561541) ^ (234 * (a33 > 0x1FB)))))();
}

uint64_t sub_10001DC48@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((v2 - 1 + ((a1 | 0x80) ^ 0x26B) >= 0) * (((a1 | 0x80) ^ 0x3F) + 2126)) ^ (a1 | 0x80))))();
}

uint64_t sub_10001DC88@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v12 = v5 - 1307;
  uint64_t v13 = 4 * (v8 + ((v12 - 150) ^ (v6 - 195)));
  int v14 = v9
      - 722943572
      + (*(_DWORD *)(*(void *)(a3 - 0x139154EEB4327E8) + v13) ^ v10)
      + (*(_DWORD *)(*(void *)(a4 - 0x139154EEB4327E8) + v13) ^ v10);
  *(_DWORD *)(*(void *)(a1 - 0x139154EEB4327E8) + v13) = v14 + v10 - (v7 & (2 * v14));
  BOOL v15 = v4 > 0x96A162A;
  if (v15 == v8 + 1796525228 < -157947435) {
    BOOL v15 = v8 + 1796525228 < (int)(v4 + 1989536213);
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((1837 * v15) ^ v12)))();
}

uint64_t sub_10001DDB0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 < 0x7FFFFFFF) * ((((v1 - 827) | 0x500) - 767) ^ 0x463)) ^ (((v1 - 827) | 0x500)
                                                                                               - 649))))();
}

uint64_t sub_10001DDFC()
{
  unsigned int v6 = 535753261 * (((v2 | 0x9FEF1DFC) - v2 + (v2 & 0x6010E200)) ^ 0x951B13D3);
  *uint64_t v3 = STACK[0x248];
  v3[5] = STACK[0x2B8];
  *(_DWORD *)(v5 - 168) = v1 - v6 + ((v0 - 866326915) & 0x33A31FD7 ^ 0xDD503891);
  v3[2] = STACK[0x250];
  int v7 = v0 - v6 + 2053;
  int v8 = LODWORD(STACK[0x244]) ^ v6;
  *(_DWORD *)(v5 - 192) = v7;
  *(_DWORD *)(v5 - 176) = v8;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v0 | 0x8B1)))(v5 - 200);
  int v10 = *(_DWORD *)(v5 - 172);
  LODWORD(STACK[0x5D8]) = v10;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((1039 * (v10 == v0 + 526347077)) ^ v0)))(v9);
}

uint64_t sub_10001DEF4(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = v5 + (v6 ^ 0x105 ^ (v3 + 809));
  long long v9 = *(_OWORD *)(a2 + v8 - 15);
  long long v10 = *(_OWORD *)(a2 + v8 - 31);
  uint64_t v11 = v2 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * ((38 * ((v4 & 0xFFFFFFE0) != 32)) ^ (v6 + 1176))))();
}

uint64_t sub_10001DF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,unsigned int a21,uint64_t a22)
{
  unsigned int v27 = 1178560073
      * (((&a18 | 0x2DEBD9B6) - &a18 + (&a18 & 0xD2142648)) ^ 0x977FA1D4);
  a21 = (v22 + 881) ^ v27;
  a20 = a14;
  a19 = v27 + 762105055 * v25 + 296806364;
  (*(void (**)(int *))(v26 + 8 * (v22 ^ 0xA65)))(&a18);
  unsigned int v28 = 1178560073
      * (((&a18 | 0xA44E095A) - &a18 + (&a18 & 0x5BB1F6A0)) ^ 0x1EDA7138);
  a21 = (((2 * v24) & 0xD4F5F5A2) + (v24 ^ 0x6A7AFAD1) + ((v22 - 953879728) & 0x5F6 ^ 0xFFADF344)) ^ v28;
  a19 = v22 + 885 + v28;
  a20 = a14;
  a22 = v23;
  (*(void (**)(int *))(v26 + 8 * (v22 ^ 0xA73)))(&a18);
  unsigned int v29 = 1178560073 * ((&a18 - 791991911 - 2 * (&a18 & 0xD0CB2999)) ^ 0x6A5F51FB);
  a20 = a14;
  a22 = a11;
  a21 = v29 ^ ((a10 ^ 0x6AFCF6D3) - 13894786 + ((2 * a10) & 0xD5F9EDA6));
  a19 = v22 + 885 + v29;
  uint64_t v30 = (*(uint64_t (**)(int *))(v26 + 8 * (v22 ^ 0xA73)))(&a18);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * ((1630 * (a18 == 526347143)) ^ v22)))(v30);
}

uint64_t sub_10001E130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, unint64_t a10, unint64_t a11, unint64_t a12)
{
  int v18 = 628203409 * ((((v17 - 160) | 0x36F0807) - ((v17 - 160) & 0x36F0807)) ^ 0x81E70434);
  STACK[0x318] = a9;
  *(_DWORD *)(v17 - 144) = v16 - v18 + 1745;
  *(_DWORD *)(v17 - 140) = v13 - v18 - 1178884814 + ((v16 + 1398754151) & 0xACA0B49E);
  STACK[0x338] = a7;
  STACK[0x328] = a12;
  STACK[0x340] = a10;
  STACK[0x310] = a11;
  uint64_t v20 = v12;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 + 2189)))(v17 - 160);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15
                                                                       + 8
                                                                       * (((*(_DWORD *)(v17 - 128) == v14)
                                                                         * (((v16 + 33849979) | 0x50407C20) ^ 0x5244FD4F)) ^ v16)))(3689027270, 1048539665, v20, 605940025);
}

uint64_t sub_10001E254@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unint64_t v5 = ((unint64_t)&STACK[0x4C8] ^ 0xBD20EF73ABE79BF7)
     + 0x66FFFECD57FA8009
     + ((2 * (void)&STACK[0x4C8]) & 0x7A41DEE757CF37E0);
  uint64_t v6 = v2 + (a2 - 433) - 138;
  *(void *)(v3 + 24) = v6;
  *(unsigned char *)(a1 + v6) = (v5 ^ 0xBA) * (v5 + 17);
  return (*(uint64_t (**)(void))(v4 + 8 * ((83 * (*(void *)(v3 + 24) == 0)) ^ a2)))();
}

uint64_t sub_10001E2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v11 + 8 * (((((v6 + v8) ^ (a6 == (v6 ^ v7 ^ v9))) & 1) * v10) ^ v6)))();
}

uint64_t sub_10001E2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v7 = v7[623];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((49
                                                                         * (v6
                                                                          - 40560652
                                                                          + ((((v3 + 599) | 0xC8) - 1574431841) & 0x5DD7E6DD)
                                                                          - v4
                                                                          + 465
                                                                          - 538 != v8)) ^ ((v3 + 599) | 0xC8))))(a1, a2, a3, 4251303770);
}

uint64_t sub_10001E360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21,uint64_t a22,uint64_t a23)
{
  a21 = (v23 + 739) ^ (((&a21 & 0x80170750 | ~(&a21 | 0x80170750)) ^ 0x121CE0A6) * v25);
  a22 = v26;
  a23 = a18;
  (*(void (**)(unsigned int *))(v27 + 8 * (v23 ^ 0x82E)))(&a21);
  a22 = v24;
  a23 = a18;
  a21 = (v23 + 739) ^ (((&a21 - 1703598249 - 2 * (&a21 & 0x9A752757)) ^ 0xF7813F5E) * v25);
  (*(void (**)(unsigned int *))(v27 + 8 * (v23 ^ 0x82E)))(&a21);
  a22 = a18;
  a21 = (v23 + 1224) ^ (1755732067
                      * ((2 * (&a21 & 0x6B25E860) - &a21 + 349837213) ^ 0xCA1CAA46));
  uint64_t v28 = (*(uint64_t (**)(unsigned int *))(v27 + 8 * (v23 + 2075)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * ((579 * (a23 == ((((v23 + 80) | 0x82) + 693) ^ 0x1F5F6FD4))) ^ v23)))(v28);
}

uint64_t sub_10001E4B0(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v4 == a3) ^ (a4 + 12)) & 1) * ((3 * (a4 ^ 0x6C)) ^ 0x723)) ^ a4)))();
}

uint64_t sub_10001E4EC@<X0>(uint64_t a1@<X0>, int a2@<W4>, uint64_t a3@<X5>, int a4@<W8>)
{
  *(unsigned char *)(a3 + (v4 + 1 + v7)) = *(unsigned char *)(a1 + (v5 - 713989072));
  return (*(uint64_t (**)(void))(v8 + 8 * ((425 * ((((a2 ^ (8 * a4) ^ 0x11) + v5) & 0xFFFFFFFC) == v6)) ^ a4)))();
}

uint64_t sub_10001E540()
{
  int v3 = v1 - (((v1 << ((v2 + 32) ^ 0xD2)) + 136128528) & ((v2 - 1052822201) & 0x3EC0CA7F ^ 0x3A8184A4)) - 1588635017;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((99
                                * (((2 * v3) & 0x5E7BB9FE ^ 0x1A0188DE) + (v3 ^ 0x327D1A90) - 203789313 == 588794110)) ^ v2)))();
}

uint64_t sub_10001E5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29)
{
  BOOL v32 = a29 - 607101020 < (v30 - 566706417);
  if (a29 - 607101020 < (((v29 + 408) | 0x102) ^ 0x5A2A2E05u) != v30 - 566706417 < ((71 * ((v29 + 45) ^ 0x297)) ^ 0x5A2A2B89u)) {
    BOOL v32 = v30 - 566706417 < ((71 * ((v29 + 45) ^ 0x297)) ^ 0x5A2A2B89u);
  }
  return (*(uint64_t (**)(void))(v31 + 8 * (((4 * v32) | (8 * v32)) ^ (v29 + 45))))();
}

uint64_t sub_10001E604(int a1, int a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = (a5 - 32 + a3);
  long long v11 = *(_OWORD *)(v8 + v10 - 15);
  long long v12 = *(_OWORD *)(v8 + v10 - 31);
  uint64_t v13 = a8 + v10;
  *(_OWORD *)(v13 - 15) = v11;
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a1 == 32) * a4) ^ (a2 + 492))))();
}

uint64_t sub_10001E610()
{
  *(void *)(v3 + v2 - 0x72E93EC13A593D8FLL) = v5;
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((52 * ((v1 & 0xFFFFFFFFFFFFFFF8) - (v0 + 1400) == -1737)) ^ v0)))((v0 + 1400) - 1737);
}

void sub_10001E66C(uint64_t a1@<X8>)
{
  *(void *)(a1 - 0x335EB1051722DFECLL) = v2;
  *(_DWORD *)(v1 + 32) = 526347143;
}

uint64_t sub_10001E6C4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 481) ^ 0xFFFFFC3C) + a1 + v1 < 0x7FFFFF7D) * (v2 - 1203)) ^ v2)))();
}

uint64_t sub_10001E704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int a23)
{
  if (a23 < 0x30CC5AB5 != (v24 - 799581894) < 0x30CC5AB5) {
    BOOL v26 = (v24 - 799581894) < 0x30CC5AB5;
  }
  else {
    BOOL v26 = v24 - 799581894 > a23;
  }
  return (*(uint64_t (**)(void))(v23 + 8 * ((!v26 * ((38 * (a5 ^ (a5 + 10)) + 2728) ^ v25)) ^ (a6 + a5 + 2017))))();
}

uint64_t sub_10001E78C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v27 = v17 ^ 0x607;
  int v28 = ((((v26 - 144) | 0xA1543A50) - (v26 - 144) + ((v26 - 144) & 0x5EABC5A8)) ^ 0x1BC04232) * v19;
  *(_DWORD *)(v26 - 116) = v28 + v18 + 309955180 + (v17 ^ 0x607);
  *(_DWORD *)(v26 - 144) = v28 + v17 + 130;
  *(void *)(v26 - 136) = a1;
  *(void *)(v26 - 128) = v22;
  (*(void (**)(uint64_t))(v21 + 8 * (v17 + 1788)))(v26 - 144);
  *(_DWORD *)(v26 - 128) = (v27 - 141) ^ (628203409
                                        * ((2 * ((v26 - 144) & 0x54E47578) - (v26 - 144) + 723225217) ^ 0xA99386B2));
  *(void *)(v26 - 144) = v25;
  *(void *)(v26 - 136) = a17;
  uint64_t v31 = 8 * (v27 + 1284);
  (*(void (**)(uint64_t))(v21 + v31))(v26 - 144);
  *(void *)(v26 - 120) = v25;
  *(void *)(v26 - 112) = v24;
  *(_DWORD *)(v26 - 128) = (v27 + 5) ^ (1178560073
                                      * ((((v26 - 144) | 0x680F62BB) - ((v26 - 144) & 0x680F62BB)) ^ 0xD29B1AD9));
  *(void *)(v26 - 144) = a17;
  *(void *)(v26 - 136) = v22;
  (*(void (**)(uint64_t))(v21 + 8 * (v27 + 1266)))(v26 - 144);
  *(_DWORD *)(v26 - 112) = v27
                         + 117
                         + 1224239923
                         * ((((v26 - 144) ^ 0xF9BB0CB1 | 0x15437DFD) - (((v26 - 144) ^ 0xF9BB0CB1) & 0x15437DFD)) ^ 0x1E4B8C9B);
  *(void *)(v26 - 104) = v20;
  *(void *)(v26 - 128) = v24;
  *(void *)(v26 - 120) = v25;
  *(void *)(v26 - 144) = a17;
  *(void *)(v26 - 136) = v24;
  (*(void (**)(uint64_t))(v21 + 8 * (v27 ^ 0xCF9)))(v26 - 144);
  *(_DWORD *)(v26 - 120) = v27 - 806 + 1225351577 * ((v26 - 144) ^ 0x239AD816);
  *(void *)(v26 - 112) = a8;
  *(void *)(v26 - 104) = v25;
  *(void *)(v26 - 144) = a17;
  *(void *)(v26 - 136) = v24;
  *(void *)(v26 - 128) = v24;
  (*(void (**)(uint64_t))(v21 + 8 * (v27 ^ 0xD3B)))(v26 - 144);
  *(void *)(v26 - 144) = a12;
  *(void *)(v26 - 136) = a17;
  *(_DWORD *)(v26 - 128) = (v27 - 141) ^ (628203409
                                        * ((((v26 - 144) | 0xDED8722D) - ((v26 - 144) & 0xDED8722D)) ^ 0x5C507E1E));
  (*(void (**)(uint64_t))(v21 + v31))(v26 - 144);
  *(void *)(v26 - 120) = a12;
  *(void *)(v26 - 112) = v23;
  *(_DWORD *)(v26 - 128) = (v27 + 5) ^ (1178560073
                                      * ((989915423 - ((v26 - 144) | 0x3B00E91F) + ((v26 - 144) | 0xC4FF16E0)) ^ 0x7E6B6E82));
  *(void *)(v26 - 144) = a17;
  *(void *)(v26 - 136) = v22;
  (*(void (**)(uint64_t))(v21 + 8 * (v27 ^ 0xCF2)))(v26 - 144);
  *(_DWORD *)(v26 - 112) = v27
                         + 117
                         + 1224239923 * ((((v26 - 144) | 0x639614A3) + (~(v26 - 144) | 0x9C69EB5C)) ^ 0x9125E975);
  *(void *)(v26 - 104) = v20;
  *(void *)(v26 - 144) = a17;
  *(void *)(v26 - 136) = v23;
  *(void *)(v26 - 128) = v23;
  *(void *)(v26 - 120) = a12;
  (*(void (**)(uint64_t))(v21 + 8 * (v27 ^ 0xCF9)))(v26 - 144);
  *(void *)(v26 - 136) = v23;
  *(void *)(v26 - 128) = v23;
  *(void *)(v26 - 112) = a10;
  *(void *)(v26 - 104) = a12;
  *(_DWORD *)(v26 - 120) = v27
                         - 806
                         + 1225351577 * ((((v26 - 144) | 0x59480BB8) - ((v26 - 144) & 0x59480BB8)) ^ 0x7AD2D3AE);
  *(void *)(v26 - 144) = a17;
  (*(void (**)(uint64_t))(v21 + 8 * (v27 ^ 0xD3B)))(v26 - 144);
  *(_DWORD *)(v26 - 144) = v27
                         - 108757529
                         * (((((v26 - 144) | 0xF475AFFA) ^ 0xFFFFFFFE) - (~(v26 - 144) | 0xB8A5005)) ^ 0xEB16322E)
                         + 668;
  *(void *)(v26 - 136) = v23;
  *(void *)(v26 - 128) = v24;
  (*(void (**)(uint64_t))(v21 + 8 * (v27 + 1263)))(v26 - 144);
  *(_DWORD *)(v26 - 140) = (v27 + 7) ^ (460628867 * ((v26 - 144) ^ 0x4C96827D));
  *(void *)(v26 - 136) = v23;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v27 ^ 0xD02)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * (((*(_DWORD *)(v26 - 144) == ((v27 + 1992532974) & 0x893C5ECC) + 674144404)
                                              * (((4 * v27) ^ 0x16FC) - 1306)) ^ v27)))(v29);
}

uint64_t sub_10001EC38(_DWORD *a1)
{
  unsigned int v1 = 1224239923 * (((a1 | 0x8C9528F6) - a1 + (a1 & 0x736AD709)) ^ 0x7E26D521);
  unsigned int v2 = a1[4] - v1;
  int v3 = *a1 ^ v1;
  unsigned int v5 = v3 - 1126802573;
  BOOL v4 = v3 - 1126802573 < 0;
  LODWORD(v6) = 1126802573 - v3;
  if (v4) {
    uint64_t v6 = v6;
  }
  else {
    uint64_t v6 = v5;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_10007DD80 + (int)(v2 ^ 0x8C4))
                              + 8 * (int)(((v6 == ((2 * v6) & 0x7F9534EC)) * (((v2 - 346) | 0x10) - 1762)) ^ v2)
                              - 4))();
}

uint64_t sub_10001ECF8(void *a1)
{
  return sub_100028960(560, 1849659500, 3103670246, **(_DWORD **)(*a1 - 0x139154EEB4327E8));
}

uint64_t sub_10001EE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v12 = v6 == v10 && v8 != (v7 ^ 0x2A7 ^ (a6 - 1011) ^ (v7 + 1788118598) & 0x956B7F2B);
  return (*(uint64_t (**)(void))(v9 + 8 * ((1468 * v12) ^ v7)))();
}

uint64_t sub_10001EEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16)
{
  int v22 = (a5 - 1072588593) & 0x3FEE6776;
  int v18 = 628203409 * ((((v17 - 120) | 0xE8E27941) - (v17 - 120) + ((v17 - 120) & 0x171D86B8)) ^ 0x6A6A7572);
  *(void *)(v17 - 120) = a11;
  *(_DWORD *)(v17 - 112) = v18 + a5 + 572;
  *(_DWORD *)(v17 - 108) = a14 - v18 + 623924053;
  (*(void (**)(uint64_t))(v16 + 8 * (a5 ^ 0x8E4)))(v17 - 120);
  uint64_t v19 = *(_DWORD *)(v17 - 152) & 0x3F;
  *(unsigned char *)(v17 - 220 + (v19 ^ 0x24)) = 107;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16
                                                     + 8 * ((((v19 ^ 0x24) > 0x37) * (v22 + 379)) ^ a5)))(3299963166, a16);
}

uint64_t sub_10001EFEC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(v6 + 304) = v4 - 16;
  return (*(uint64_t (**)(void))(v7 + 8 * (((a4 == v8) * ((v5 - 366) ^ 0xA6F)) ^ v5)))();
}

uint64_t sub_10001F024()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(_DWORD *)(v2 - 128)
                                 + 1493
                                 + ((*(_DWORD *)(v2 - 128) - 967191047) & 0x39A62FDB)
                                 - 3097)
                                * (v0 == *(_DWORD *)(v2 - 120))) ^ *(_DWORD *)(v2 - 128))))();
}

uint64_t sub_10001F070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  LODWORD(STACK[0x3F8]) = 911095922;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * ((((*(unsigned char *)(v9 + v7) + ((a3 + v3) & v5) - *(unsigned char *)(*(void *)(v4 + 8 * (a3 ^ 0x455)) - 4)) != 235) * (((a3 - 1067) | v6) - 275)) ^ (a3 - 621))))(a1, a2, 1339085737, 3175002011, 1119964591, 1533, 3191475289, 1103492823);
}

uint64_t sub_10001F104()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)((((v0 + 514) ^ 0x28B) * ((v1 >> 1) & 1)) ^ v0)))();
}

uint64_t sub_10001F130(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((224
                                * (a2 + v3 + (((v2 ^ 0x3AB) - 560946317) & 0x216F5E7C ^ 0xA0540445) < (((v2 ^ 0x3AB) + 2068011327) & 0x84BCA76C) - 792)) ^ v2 ^ 0x3AB)))();
}

uint64_t sub_10001F1B8@<X0>(uint64_t a1@<X0>, int a2@<W5>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * (int)((((a3 - 182238939) < 0x38)
                                                            * ((v3 - 214409674) & 0xBA82AAFE ^ 0x84A)) ^ (a2 + v3 + 100))))(a1, -182238939);
}

uint64_t sub_10001F210(int a1, int a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  *(_DWORD *)(v64 - 140) = v61;
  unsigned int v65 = v61 & 0xFFFFFFF8;
  *(void *)(v64 - 128) = v56 - 7;
  *(void *)(v64 - 136) = v63 - 7;
  *(_DWORD *)(v64 - 144) = v65;
  int v66 = -a4;
  char v67 = v62 + a2 + a1;
  uint64_t v68 = (a2 + a1 + a3 + v66);
  v70.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3 + (_BYTE)v66) & 0xF;
  v70.val[0].i64[1] = (v67 + 15 + (_BYTE)v66) & 0xF;
  v70.val[1].i64[0] = (v67 + 14 + (_BYTE)v66) & 0xF;
  v70.val[1].i64[1] = (v67 + 13 + (_BYTE)v66) & 0xF;
  v70.val[2].i64[0] = (v67 + 12 + (_BYTE)v66) & 0xF;
  v70.val[2].i64[1] = (v60 + (_BYTE)v66 + ((a5 + 103) ^ 1)) & 0xF;
  v70.val[3].i64[0] = (v67 + 10 + (_BYTE)v66) & 0xF;
  v70.val[3].i64[1] = (v67 + 9 + (_BYTE)v66) & 0xF;
  *(int8x8_t *)(*(void *)(v64 - 136) + v68) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v57 + (v68 & 0xF) - 7), *(int8x8_t *)(*(void *)(v64 - 128) + v68)), veor_s8(*(int8x8_t *)(v58 + (v68 & 0xF) - 7), *(int8x8_t *)((v68 & 0xF) + v59 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v70, (int8x16_t)xmmword_1000740B0), (int8x8_t)0x2929292929292929)));
  return (*(uint64_t (**)(__n128))(a56 + 8 * ((1329 * (8 - v65 == v66)) ^ a5)))((__n128)xmmword_1000740B0);
}

uint64_t sub_10001F34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x578] = *(void *)(v64 + 8 * v63);
  return sub_1000565FC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_10001F380@<X0>(int a1@<W8>)
{
  BOOL v3 = (a1 ^ 0x1Bu) >= (((v1 ^ 0x72B) + 34) ^ 0x6F5u);
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v3) | (8 * v3)) ^ v1)))();
}

uint64_t sub_10001F3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(_DWORD *)(*(void *)(a1 + 96) + 1424) = *(_DWORD *)(a2 + 4) + ((((a8 - 365) | 0x4B8) - v8 - 1083) ^ 0x86A53C2D);
  *(void *)(*(void *)(a1 + 96) + 520) = *(void *)(a2 + 8) + 1;
  return 0;
}

uint64_t sub_10001F410()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((*v2 == 0) * (((v0 - 517) ^ 0x21F) - 765)) ^ v0)))();
}

uint64_t sub_10001F440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  return (*(uint64_t (**)(void))(v24
                              + 8
                              * ((936
                                * (((v23 + 528) ^ 0xB3912BE9)
                                 + a23
                                 + ((v23 - 2091754591) & 0x7CADA43F)
                                 - *(_DWORD *)(a19 + 4) == -1241935543)) ^ v23)))();
}

uint64_t sub_10001F4B0(uint64_t a1, uint64_t a2, int a3)
{
  BOOL v7 = v4 < v3;
  unint64_t v8 = ((a3 + 1310074422) & 0xB1E9DB6B) + v5 + ((a3 - 847746571) & 0x328797AF ^ 0xE9E26F9D243D8B96);
  int v9 = v7 ^ (v8 < v3);
  BOOL v10 = v8 < v4;
  if (!v9) {
    BOOL v7 = v10;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((30 * !v7) ^ a3)))();
}

void sub_10001F540(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + v3) = v2;
  sub_100023B68();
}

uint64_t sub_10001F548()
{
  *(unsigned char *)(*(void *)(v3 + 96) + 1568) = 1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2187
                                * (*(_DWORD *)(v3 + 72) == (((v0 - 2004598808) | 0xA0861) ^ 0x7BED6BFC) + (v0 ^ v1))) ^ v0)))();
}

_DWORD *sub_10001F5A4(_DWORD *result)
{
  if (v2 + 207 >= ((v5 + 926) ^ 0x7FFFFA9Eu)) {
    int v6 = -v1;
  }
  else {
    int v6 = v3;
  }
  *unint64_t v4 = v6;
  const void *result = 725983426;
  return result;
}

uint64_t sub_10001F5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, unsigned int a19)
{
  unint64_t v20 = STACK[0x510];
  STACK[0x628] -= 32;
  *(unsigned char *)(v20 + 335) = *((unsigned char *)*(&off_10007DD80 + (a19 ^ 0x63E)) + 15) ^ *(unsigned char *)(a14 + 335) ^ (((a19 + 100) & 0xFB) + 115) ^ 0xCD ^ *((unsigned char *)*(&off_10007DD80 + (int)(a19 - 1386)) + 17) ^ *((unsigned char *)*(&off_10007DD80 + (int)(a19 - 1485)) + 10);
  return (*(uint64_t (**)(_UNKNOWN **, uint64_t))(v19 + 8 * a19))(&off_10007DD80, 3768594526);
}

uint64_t sub_10001F698()
{
  STACK[0x3D0] = v0;
  unint64_t v4 = STACK[0x420];
  int v5 = STACK[0x420] + 140;
  (*(void (**)(unint64_t))(v3 + 8 * SLODWORD(STACK[0x2AC])))(STACK[0x2B0]);
  int v6 = (*(uint64_t (**)(void))(v3 + 8 * ((int)v4 + 1183)))();
  int v7 = v6 - 43663526 - ((v6 << (v5 ^ 0xE6)) & v1);
  int *v2 = v7;
  unsigned int v8 = ((~v7 >> 30) - 43663526 - ((~v7 >> 30 << ((v5 + 38) ^ 0xC)) & 4)) ^ v7;
  v2[1] = 1812433253 * v8 - ((2 - 670100790 * v8) & v1) - 43663525;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 8 * v5))(2060, 1812433253, 3624866506, 4251303771);
}

void sub_10001F780()
{
  uint64_t v0 = (uint64_t)*(&off_10007DD80
                + ((-35 * ((qword_100081B78 + dword_100082748) ^ 0xD8)) ^ byte_100068B50[byte_100073B90[(-35 * ((qword_100081B78 + dword_100082748) ^ 0xD8))] ^ 0x4D])
                + 6);
  uint64_t v1 = *(void *)(v0 - 4);
  int v2 = (uint64_t *)*(&off_10007DD80
                  + (byte_100073F90[byte_10006F340[(-35
                                                                                                  * ((qword_100081B78 + v1) ^ 0xD8))] ^ 0xAB] ^ (-35 * ((qword_100081B78 + v1) ^ 0xD8)))
                  + 42);
  unint64_t v3 = (unint64_t)&v8[*v2 ^ v1];
  uint64_t v4 = 1226760413 * v3 - 0x5B705F9A26A579D8;
  uint64_t v5 = 1226760413 * (v3 ^ 0x5B705F9A26A579D8);
  *(void *)(v0 - 4) = v4;
  uint64_t *v2 = v5;
  LOBYTE(v5) = -35 * ((v5 - *(_DWORD *)(v0 - 4)) ^ 0xD8);
  *(_DWORD *)*(&off_10007DD80
             + (byte_100068B50[byte_100073B90[v5] ^ 0x4D] ^ v5)
             - 13) = 526347143;
  int v6 = (char *)*(&off_10007DD80
               + ((-35 * ((qword_100081B78 + dword_100082748) ^ 0xD8)) ^ byte_100073C90[byte_10006F140[(-35 * ((qword_100081B78 + dword_100082748) ^ 0xD8))] ^ 0x8C])
               + 116)
     - 4;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))&v6[8
                                             * ((-35 * (*(_DWORD *)(v0 - 4) ^ 0xD8 ^ *(_DWORD *)v2)) ^ byte_100073F90[byte_10006F340[(-35 * (*(_DWORD *)(v0 - 4) ^ 0xD8 ^ *(_DWORD *)v2))] ^ 0x11])
                                             + 17696])(512);
  *(void *)((char *)*(&off_10007DD80
                      + ((-35 * (*(_DWORD *)(v0 - 4) ^ 0xD8 ^ *(_DWORD *)v2)) ^ byte_100068B50[byte_100073B90[(-35 * (*(_DWORD *)(v0 - 4) ^ 0xD8 ^ *(_DWORD *)v2))] ^ 0x4D])
                      - 19)
            - 4) = v7;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10001F9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _DWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,unsigned int a22)
{
  *a6 = 0;
  *a7 = 0;
  a22 = 108757529 * (((~&a21 & 0x37AB7138) - (~&a21 | 0x37AB7139)) ^ 0xD7371312) - 504207030;
  uint64_t v24 = (*(uint64_t (**)(int *))(v23 + 17848))(&a21);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((1653 * (a21 == v22)) ^ 0x160)))(v24);
}

uint64_t sub_10001FA90(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12, uint64_t a13, int a14)
{
  int v20 = ((v19 - 270) | 0x4A8) + *a1 - v18 + *(_DWORD *)(v14 - 0x2C138C8FAF40FC12) - 483383190;
  unsigned int v21 = 1759421093 * (&a11 ^ 0xB37DB054);
  a14 = v19 - v21 + 94;
  a13 = v14;
  a11 = v20 - v21 + 1509852572;
  a12 = v21 + 1752598896;
  uint64_t v22 = (*(uint64_t (**)(int *))(v17 + 8 * (v19 ^ 0xAD6)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((1612 * (*v16 == v15)) ^ v19)))(v22);
}

void sub_10001FB60()
{
}

uint64_t sub_10001FBB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v10 = v7 + a3 > (v8 ^ 0x777) + 1263549681 || v7 + a3 < a6;
  return (*(uint64_t (**)(void))(v6 + 8 * ((14 * v10) ^ v8)))();
}

uint64_t sub_10001FBFC@<X0>(uint64_t a1@<X8>)
{
  int v5 = v3 - (((((v2 - 620) | 2) ^ 0x432986) + v4) & 0xF9F4F0) + 2132709394;
  unsigned int v6 = 1755732067 * ((v8 & 0x9095DB2C | ~(v8 | 0x9095DB2C)) ^ 0xB1AC9908);
  uint64_t v9 = a1;
  v8[0] = v5 ^ v6;
  v8[1] = (v2 - 1) ^ v6;
  return (*(uint64_t (**)(_DWORD *))(v1 + 8 * (v2 ^ 0xDAC)))(v8);
}

uint64_t sub_10001FC98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = v4 - 1605109252 + v3 + 262 * (v5 ^ 0x45Du);
  long long v8 = *(_OWORD *)(v1 + v7 - 15);
  long long v9 = *(_OWORD *)(v1 + v7 - 31);
  uint64_t v10 = a1 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * ((89 * ((v2 & 0xFFFFFFE0) != 32)) ^ (v5 - 31))))();
}

uint64_t sub_10001FD00@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 1268));
  return v3(v1);
}

uint64_t sub_10001FD30(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(v5 - 220 + v2 + a2) = -21;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v3 - 2) ^ (2 * ((unint64_t)(v2 + a2 + 1) < 0x40)))))();
}

uint64_t sub_10001FD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((((a6 - 270952346) & 0x102662CE) - 647) * (v6 == v7)) ^ a6)))();
}

uint64_t sub_10001FDB0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((492 * ((((STACK[0x420] - 340) ^ 0x306) & a1) == 0)) ^ (STACK[0x420] + 673))))();
}

uint64_t sub_10001FDE4@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((22 * (a2 - 1340507626 >= (((a1 + v3 + 212) | 1) ^ 0xEDu))) | (a1 + v3 + 544))))();
}

uint64_t sub_10001FE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  unint64_t v50 = STACK[0x4F0];
  int v51 = LODWORD(STACK[0x5B4]) ^ 0x7EF5EFAF;
  unsigned int v52 = (2 * LODWORD(STACK[0x5B4])) & 0xFDEBDF5E;
  int v53 = 235795823 * ((((2 * (v49 - 200)) | 0x7ACDC568) - (v49 - 200) - 1030152884) ^ 0xA9CBABED);
  *(void *)(v47 + 8) = v43;
  *(void *)(v47 + 16) = a42;
  *(void *)(v47 + 32) = v45;
  *(_DWORD *)(v49 - 136) = (v46 ^ 0xFDFEB9FB) + v51 + v52 + v53;
  *(unsigned char *)(v47 + 24) = 111 * ((((2 * (v49 + 56)) | 0x68) - (v49 + 56) + 76) ^ 0xED) - 67;
  *(void *)(v47 + 56) = v50;
  *(void *)(v47 + 48) = a43;
  *(_DWORD *)(v49 - 160) = (v46 - 613) ^ v53;
  *(_DWORD *)(v49 - 200) = (v44 + ((v46 + 441712373) & 0xE5ABFF7A) - 1082863669) ^ v53;
  uint64_t v54 = (*(uint64_t (**)(uint64_t))(v48 + 8 * (v46 ^ 0xA39)))(v49 - 200);
  int v55 = *(_DWORD *)(v49 - 132);
  LODWORD(STACK[0x5D8]) = v55;
  return (*(uint64_t (**)(uint64_t))(v48 + 8 * (((2 * (v55 != 526347143)) | (32 * (v55 != 526347143))) ^ v46)))(v54);
}

uint64_t sub_10001FF4C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((((v1 - 2177) ^ 0x38D) - 944) * (v0 + v2 + 63 >= (v0 + v2))) ^ v1)))();
}

uint64_t sub_10001FFA0()
{
  *(_DWORD *)(*(void *)(v4 - 0x139154EEB4327E8) + 4 * (((v2 - 1025) ^ (v1 + 202)) + v0)) = -595648296;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1534 * ((v0 + v1) < 0x7FFFFFFF)) ^ (v2 - 373))))();
}

uint64_t sub_100020004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10)
{
  unint64_t v11 = STACK[0x380];
  BOOL v12 = (char *)&STACK[0x680] + STACK[0x380] - 0x74CFFF0833D7937CLL;
  STACK[0x568] = (unint64_t)(v12 + 1488);
  STACK[0x3E8] = (unint64_t)(v12 + 1716);
  LODWORD(STACK[0x468]) = 837403461;
  STACK[0x5E0] = v11 - 192;
  STACK[0x488] = 0;
  LODWORD(STACK[0x5B0]) = 2079419384;
  STACK[0x3F0] = (unint64_t)(v12 + 1488);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * ((a9 - 5) ^ ((4 * (v12 + 1488 == (char *)-248)) | (32 * (v12 + 1488 == (char *)-248))))))(a1, a2, a3, a4, a5, a6, a7, a8, a10);
}

uint64_t sub_100020010()
{
  LODWORD(STACK[0x42C]) = v1 - 1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 + 265062587) ^ (((v1 - 1) & 0xFFFFFFFC) == 2079419384)) & 1) == 0)
                                * (((v0 - 1700) | 0x440) - 991)) ^ v0)))();
}

uint64_t sub_100020074@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  unsigned int v3 = *(_DWORD *)(v2 - 0x2C138C8FAF40FC12) - 272911807;
  unsigned int v4 = *(_DWORD *)(v2 - 0x2C138C8FAF40FC16) - 1043127620;
  BOOL v5 = v3 < 0xFD35260C;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0xFD35260C) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(a2 + 8 * ((251 * (((a1 + 47) ^ v6) & 1)) ^ a1)))();
}

uint64_t sub_100020120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,int a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60)
{
  unsigned int v61 = a25 - (((((a60 + 1348018224) & 0xAFA6DE57) + 1022) ^ 0xF87597AC) & (2 * a22)) + 1137704974;
  return (*(uint64_t (**)(void))(v60
                              + 8
                              * ((986
                                * (((2 * v61) & 0xCBD6F376 ^ 0xC8549376) + (v61 ^ 0x19D1B644) - 82316257 == 1627614682)) ^ a60)))();
}

uint64_t sub_1000201F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((47 * (~a18 + v19 - a1 < (v18 ^ (a5 - 378) ^ 0xFFFFFFFFFFFFFFCELL) + (v18 ^ (a5 - 378)))) ^ v18)))();
}

uint64_t sub_10002023C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t))(v11
                                            + 8
                                            * ((((v10 + 348) ^ (v10 + 196))
                                              * (*(_DWORD *)(v12 - 144) == *(_DWORD *)(v12 - 152))) ^ v10)))(a10);
}

void sub_100020278()
{
}

uint64_t sub_100020288(int a1, uint64_t a2, int a3)
{
  if ((v4 + v3 - 1522488794) > 0x40) {
    int v6 = v4 + v3 - 1522488794;
  }
  else {
    int v6 = 64;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((47 * (a3 - v4 - v3 + v6 < ((a1 - 730) | 0x140u) - 355)) ^ a1)))();
}

uint64_t sub_100020330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, int a4@<W8>, int8x16_t a5@<Q1>, int8x16_t a6@<Q4>, int8x16_t a7@<Q5>, int8x16_t a8@<Q6>, int32x4_t a9@<Q7>)
{
  uint64_t v13 = (const float *)(v9 + 908);
  int8x16_t v14 = (int8x16_t)vld1q_dup_f32(v13);
  a5.i64[0] = *(void *)(v9 + 912);
  a5.i32[2] = *(_DWORD *)(v9 + 920);
  int8x16_t v15 = vextq_s8(v14, a5, 0xCuLL);
  int8x16_t v16 = a5;
  v16.i32[3] = *(_DWORD *)(v9 + 924);
  int32x4_t v17 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v16, a6), vandq_s8(v15, v12)), 1uLL), a7);
  v18.i32[0] = *(_DWORD *)(a3 + 4 * (*(_DWORD *)(v9 + 912) & 1));
  v18.i32[1] = *(_DWORD *)(a3 + 4 * (*(_DWORD *)(v9 + 916) & 1));
  v18.i32[2] = *(_DWORD *)(a3 + 4 * (*(_DWORD *)(v9 + 920) & ((a4 ^ 0x70Cu) - 708)));
  v18.i32[3] = *(_DWORD *)(a3 + 4 * (v16.i8[12] & 1));
  *(int8x16_t *)(v9 + 908) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)v9, v18), v11), (int8x16_t)vaddq_s32(vsubq_s32(v17, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v17, v17), a8)), a9));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8 * a4))(a1, a2, 1804);
}

uint64_t sub_1000203F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                               + 8
                                                                               * ((((v9 - 1046) ^ 0x224)
                                                                                 * ((v8 & 0x18) == 0)) ^ v9)))(a1, a2, a3, a4, (a4 - a7));
}

uint64_t sub_10002042C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((23
                                * (a14 + v17 - 220 + (unint64_t)(v15 + v14 - 1) >= ((a1 + 138) ^ 0x7C7uLL))) ^ a1)))();
}

uint64_t sub_100020478(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((a4 - 938) & a5) == 2139086816) * (a4 + 802)) ^ a4)))();
}

uint64_t sub_1000204AC@<X0>(int a1@<W8>)
{
  *(void *)(v2 - 0x1244BACB8843828DLL) = (v1 ^ 0x3B6u) + a1 + *v3 + *(void *)(v4 - 0x2C138C8FAF40FC22) + 8;
  return (*(uint64_t (**)(void))(v7 + 8 * ((950 * (*v6 != ((v1 + 86) ^ (v5 - 510)))) ^ v1)))();
}

uint64_t sub_10002051C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 ^ (8 * ((v1 ^ 0x302u) * v2 + 4 == v0 - 2079419384)))))();
}

uint64_t sub_100020560@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v2 + a2 + a1) = v4;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((13 * (a2 + a1 + (unint64_t)(7 * ((17 * (v3 ^ 0x61D)) ^ 0x672u)) - 20 < 0x40)) ^ (17 * (v3 ^ 0x61D)))))();
}

uint64_t sub_1000205B0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 + v1 + ((v2 - 1732) ^ 0x89400568) < 0xC) * (v2 ^ 0x85B)) ^ v2)))();
}

uint64_t sub_1000205F8()
{
  int v5 = 35 * (v2 ^ 0x1BB) + *(unsigned __int8 *)(v3 + 2) - 317;
  return (*(uint64_t (**)(void))(v4 + 8 * ((963 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_10002064C@<X0>(int a1@<W8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 8 * (a1 ^ 0xA05)))(*v4);
  *uint64_t v3 = 0;
  *(_DWORD *)uint64_t v1 = 0;
  *(void *)(v1 + 344) = 0;
  *(void *)(v1 + 352) = 0;
  *(_DWORD *)(v1 + 360) = 1667755604;
  *(_DWORD *)(v1 + 56) = 651598691;
  return result;
}

uint64_t sub_10002069C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((127 * ((((v6 + 1688) ^ 0x1FD ^ (v5 == a5)) & 1) == 0)) ^ v6)))();
}

uint64_t sub_1000206D4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((30 * (v3 + 1 == v2 + 44)) ^ v0)))();
}

uint64_t sub_1000207C0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((50 * (v1 > 0x82)) ^ (v0 + 594))))();
}

uint64_t sub_100020800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((489 * ((v6 ^ (a6 + 5) ^ (((v7 + 928608668) & 0xC8A68ECF) - a5 - 207)) > 7)) ^ (v7 + 1159))))();
}

uint64_t sub_100020850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((((v5 + a5 - 1598 + 191472129) & 0x6695D123) - 270) * (v6 < 0x20)) ^ (a5 - 1598))))();
}

uint64_t sub_100020894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,unint64_t *a23,unint64_t *a24,unsigned int a25)
{
  a23 = &STACK[0x237357D135FF6929];
  a24 = &STACK[0x3EA9131FAE910FF8];
  a22 = a18;
  a25 = (v27 - 824) ^ (1225351577
                     * ((((2 * &a21) | 0xE5132B40) - &a21 + 225864288) ^ 0xD1134DB6));
  uint64_t v29 = (*(uint64_t (**)(char *))(v28 + 8 * (v27 + 1174)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v28 + 8 * ((((v27 - 903) ^ 0x322) * (v25 < v26)) ^ (v27 + 246))))(v29);
}

uint64_t sub_10002097C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2251
                                * ((v0 & (2 * (*(unsigned __int8 *)(v3 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 6) - 1) ^ (v1 + v2 + 575 - 820)) == v1)) ^ v2)))();
}

uint64_t sub_1000209BC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((748
                                * ((v6 & (2 * (*(unsigned __int8 *)(a2 + 6) - 44)))
                                 + ((*(unsigned __int8 *)(a2 + 6) - 44) ^ ((a3 ^ (v4 - 163)) + a4)) == v7)) ^ a3)))();
}

uint64_t sub_100020A00(_DWORD *a1)
{
  int v5 = *a1 ^ v1;
  unsigned int v6 = *(_DWORD *)(v3 + 352);
  if (v6 > 0x404B9DC4 != v5 - 1511209020 < ((v4 - 836) ^ 0xBFB466FC)) {
    BOOL v7 = v6 > 0x404B9DC4;
  }
  else {
    BOOL v7 = v6 + (v4 ^ 0xBFB46A30) > v5 - 1511209020;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((30 * v7) ^ v4)))();
}

uint64_t sub_100020A7C@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v1 + (v4 + v2)) = *(unsigned char *)(v5 + (v4 + v2))
                                           - ((2 * *(unsigned char *)(v5 + (v4 + v2))) & 0xD6)
                                           - 21;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 - 1 == a1) * (((v3 + 791) | 0x2F0) ^ 0x712)) ^ v3)))();
}

uint64_t sub_100020ACC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 ^ 0x788) - 143) ^ 0x3C5) * ((v1 + v0 - 268107771) > 7)) ^ v2)))();
}

uint64_t sub_100020B14(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((79 * (v3 + 8 == 31 * (a2 ^ 0x507) - 1115)) ^ a2)))();
}

uint64_t sub_100020B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v21 = v18 - 1900653136;
  unsigned int v22 = v21 + (a18 ^ 0x324) - 587;
  if (v22 <= 0x40) {
    unsigned int v22 = 64;
  }
  BOOL v23 = !__CFADD__(v21 + 631, v19 + v22);
  return (*(uint64_t (**)(void))(v20 + 8 * ((4011 * v23) ^ a18)))();
}

uint64_t sub_100020BB0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((867
                                * (((v0 + ((5 * (v2 ^ 0x118) - 724) | 0x95) - 245) & (2
                                                                                    * (*(unsigned __int8 *)(v3 + 8) - 5)))
                                 + ((*(unsigned __int8 *)(v3 + 8) - 5) ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_100020C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  HIDWORD(v27) = HIDWORD(a13) + 2122408021;
  v25.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v25.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  LODWORD(v27) = v22 + 741233922;
  HIDWORD(a22) = (v22 + 541807691) & 0x34538EED ^ 0x4A9;
  LODWORD(a17) = (v22 - 1765173040) & 0x3DD547FE;
  return sub_100039248(3299963166, a2, *(double *)vdupq_n_s32(0x3EBED70Eu).i64, *(double *)vdupq_n_s32(0x1F5F6B87u).i64, v25, a3, a4, a5, a17, a7, a8, a9, a10, a11, a12, a13, a14, a2, a16,
           a17,
           v27,
           a19,
           a20,
           a21,
           a22,
           v23 - 293,
           v24 - 16);
}

uint64_t sub_100020CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(_DWORD *)(v17 - 112) = v12 + 1224239923 * ((v17 + 1260386870 - 2 * ((v17 - 144) & 0x4B1FFAC6)) ^ 0xB9AC0711) - 32;
  *(void *)(v17 - 144) = v14;
  *(void *)(v17 - 136) = a11;
  *(void *)(v17 - 104) = v13;
  *(void *)(v17 - 128) = v13;
  *(void *)(v17 - 120) = v15;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v12 + 1106)))(v17 - 144);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((110 * ((((v12 + 124) | 0x200) ^ 0xF8585898) + v11 > 0x7FFFFFFE)) ^ (v12 - 872))))(v18);
}

uint64_t sub_100020D80(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,unsigned int a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42)
{
  if (a38 < 0xDC9AD618 != (a37 + a42) < 0xDC9AD618) {
    BOOL v43 = (a37 + a42) < 0xDC9AD618;
  }
  else {
    BOOL v43 = a37 + a42 > a38;
  }
  return (*(uint64_t (**)(void))(v42 + 8 * ((!v43 * ((a3 + 1349) ^ 0x553)) ^ (a3 + 1370))))();
}

uint64_t sub_100020D8C()
{
  int v5 = 1178560073 * ((2 * ((v4 - 120) & 0x128615B8) - (v4 - 120) - 310777277) ^ 0x57ED9221);
  *(void *)(v4 - 112) = v4 + 0x72E93EC0CCAF56A6;
  *(_DWORD *)(v4 - 120) = (v0 ^ 0x5E4C3EC8) - v5;
  *(_DWORD *)(v4 - 104) = v3 - v5 - 1882358660;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v3 + 1080)))(v4 - 120);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((*v2
                                              - 386070185
                                              + ((*(_DWORD *)(v4 - 152) << ((v3 ^ 0x1F) + (v3 ^ 0xE4) + 6)) & 0x64 ^ 0x40)
                                              + (*(_DWORD *)(v4 - 152) & 0x3F ^ 0xFDDFDFD6) < 0xFFFFFFC0) ^ v3)))(v6);
}

uint64_t sub_100020F08()
{
  int v5 = (v2 ^ 0x149) + *(unsigned __int8 *)(v3 + 5) - 258;
  return (*(uint64_t (**)(void))(v4 + 8 * ((698 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_100020F48@<X0>(int a1@<W0>, const char *a2@<X3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int8x16_t a20,uint64_t a21,int a22,int a23)
{
  int8x16x4_t v62 = vld4q_s8(a2);
  uint8x16_t v35 = (uint8x16_t)veorq_s8(v62.val[0], v33);
  int8x16_t v36 = (int8x16_t)vmovl_high_u16(vmovl_u8(*(uint8x8_t *)v35.i8));
  uint16x8_t v37 = vmovl_high_u8(v35);
  int8x16_t v38 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v37.i8);
  int8x16_t v39 = (int8x16_t)vmovl_high_u16(v37);
  uint8x16_t v40 = (uint8x16_t)veorq_s8(v62.val[1], v33);
  uint16x8_t v41 = vmovl_high_u8(v40);
  uint8x16_t v42 = (uint8x16_t)veorq_s8(v62.val[2], v33);
  _Q21 = (int8x16_t)vmovl_high_u8(v42);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v42.i8);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  int8x16_t v49 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v62.val[0] = veorq_s8(v62.val[3], v33);
  v62.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v62.val[0]);
  v62.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v62.val[1]);
  v62.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(vmovl_u8(*(uint8x8_t *)v62.val[0].i8)), 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(vmovl_u8(*(uint8x8_t *)v40.i8), 8uLL), v36));
  v62.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v62.val[1].i8), 0x18uLL), v49), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v41.i8, 8uLL), v38));
  v62.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v62.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v41, 8uLL), v39));
  int32x4_t v50 = (int32x4_t)veorq_s8(vandq_s8(v62.val[3], a20), (int8x16_t)(*(_OWORD *)&v36 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
  int32x4_t v51 = (int32x4_t)veorq_s8(vandq_s8(v62.val[1], a20), (int8x16_t)(*(_OWORD *)&v38 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
  int32x4_t v52 = (int32x4_t)veorq_s8(vandq_s8(v62.val[2], a20), (int8x16_t)(*(_OWORD *)&v39 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
  v27[2] = vaddq_s32(vsubq_s32((int32x4_t)v62.val[1], vaddq_s32(v51, v51)), v34);
  v27[3] = vaddq_s32(vsubq_s32((int32x4_t)v62.val[2], vaddq_s32(v52, v52)), v34);
  v27[1] = vaddq_s32(vsubq_s32((int32x4_t)v62.val[3], vaddq_s32(v50, v50)), v34);
  int v53 = v23;
  int v54 = v24;
  int v56 = a1 ^ v32;
  int v57 = ((a23 + 199) ^ (v32 - 181) ^ v25)
      + a3
      + ((v53 ^ v32) & (a1 ^ 0x242EA431) | (v54 ^ v32) & v56)
      + *((_DWORD *)*(&off_10007DD80 + (a23 ^ 0x32)) + v29 + 290758882)
      + (v27->i32[(*((unsigned char *)*(&off_10007DD80 + (a23 ^ 0x55)) + v29 + 290758882) - 72)] ^ v26);
  uint64_t v58 = (uint64_t)*(&off_10007DD80 + a23 + 50);
  unsigned int v59 = (v57 + v32 - (v30 & (2 * v57))) ^ v32;
  unsigned int v60 = ((v59 << (*(unsigned char *)(v58 + v29 + 290758882) - 76)) | (v59 >> (76 - *(unsigned char *)(v58 + v29 + 290758882)))) + v56;
  return (*(uint64_t (**)(void))(v28
                                           + 8 * ((4 * (v31 != 290758867)) | ((v31 != 290758867) << 7) | (a23 + 1827))))(v60 + v32 - (v30 & (2 * v60)));
}

uint64_t sub_100021178@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, char a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v23 = 4 * a1;
  unint64_t v24 = ((0xF41BD8C901F2D9AFLL >> (((-66 * (v22 ^ 0x19)) ^ a4) + 72)) ^ v18)
      + (v16 ^ (v13 + 1290) ^ (446 * (v22 ^ 0x319))) * (unint64_t)(**v21 ^ v13)
      + (*(_DWORD *)(a12 + v23) ^ v13);
  *(_DWORD *)(a12 + v23) = (v24 + a2 - (v15 & (2 * v24))) ^ v12;
  BOOL v26 = a3 + 1 < v17 && a3 + 1 >= v20;
  return (*(uint64_t (**)(void))(v19 + 8 * ((v26 * v14) ^ (446 * (v22 ^ 0x319)))))();
}

uint64_t sub_100021224(uint64_t a1, int a2)
{
  if (a1) {
    BOOL v3 = a2 == 0;
  }
  else {
    BOOL v3 = 0;
  }
  int v4 = v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((182 * v4) ^ 0x260u)))();
}

uint64_t sub_100021268(uint64_t a1)
{
  unsigned int v5 = *(_DWORD *)(v3 + 336);
  unsigned int v6 = (*(_DWORD *)(a1 + 4) ^ v1) - 1008027242;
  if (v5 > 0x17FAD589 != v6 < 0xE8052A76) {
    BOOL v7 = v5 > 0x17FAD589;
  }
  else {
    BOOL v7 = v5 - 402314634 > v6;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((2 * (((v4 - 44) ^ v7) & 1)) & 0xF7 | (8
                                                                                        * (((v4 - 44) ^ v7) & 1))) ^ v4)))();
}

uint64_t sub_1000212E4()
{
  int v4 = (_DWORD *)STACK[0x3E0];
  int v5 = LODWORD(STACK[0x454])++;
  *int v4 = v5 + 405273881;
  unint64_t v6 = STACK[0x2F8];
  int v7 = STACK[0x2F8] + 1;
  int v8 = ((v0 ^ 0x69E) - 1518279842) & 0xE5E6FF82 ^ STACK[0x2F8];
  int v9 = ((v0 ^ 0x69E) - 1518279807) ^ STACK[0x2F8];
  uint64_t v10 = v3 - 200;
  *(void *)(v10 + 16) = (*v1 - 1518389094) ^ STACK[0x2F8];
  *(_DWORD *)(v3 - 176) = (v0 ^ 0x69E) - v6 + 2104631275;
  *(_DWORD *)(v3 - 172) = v7;
  *(_DWORD *)(v3 - 200) = v8;
  *(_DWORD *)(v3 - 196) = (v0 ^ 0x69E) - 1518279842 - v6;
  *(_DWORD *)(v3 - 192) = v9;
  *(void *)(v10 + 32) = STACK[0x2F0];
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0xA33)))(v3 - 200);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 160)))(v11);
}

uint64_t sub_1000213B4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  HIDWORD(a35) = v50;
  unsigned int v60 = (const char *)(a4 + ((7 * (a7 ^ 0x3E)) ^ (a2 + 4)) + v49);
  unsigned int v61 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8 * a7);
  int v62 = STACK[0x338];
  int v63 = STACK[0x338];
  int v64 = STACK[0x33C];
  uint64_t v65 = LODWORD(STACK[0x340]);
  int v66 = STACK[0x33C];
  int v67 = STACK[0x340];
  LODWORD(v91) = LOBYTE(STACK[0x34C]) ^ 0xFFFFFFDD;
  int v68 = LOBYTE(STACK[0x34C]) ^ 0xDD;
  if (v68 == 2)
  {
    HIDWORD(v91) = STACK[0x340];
    uint64_t v92 = *(void *)(v53 + 8 * a7);
    uint64_t v79 = LODWORD(STACK[0x344]);
    int8x16x4_t v94 = vld4q_s8(v60);
    LODWORD(a30) = STACK[0x344];
    uint8x16_t v80 = (uint8x16_t)veorq_s8(v94.val[1], v59);
    _Q17 = vmovl_u8(*(uint8x8_t *)v80.i8);
    _Q16 = vmovl_high_u8(v80);
    __asm
    {
      SHLL2           V18.4S, V16.8H, #0x10
      SHLL2           V19.4S, V17.8H, #0x10
    }
    int v85 = (_DWORD *)(v56 + 4 * (v55 + 1974069450));
    int v86 = *(v85 - 8) ^ *(v85 - 3);
    uint64_t v87 = *(v85 - 16);
    int v88 = v87 ^ *(v85 - 14) ^ (v86 + v54 - ((v86 << ((v52 + 90) ^ 0x6F)) & 0x3EBED70E));
    HIDWORD(v89) = v88 ^ v54;
    LODWORD(v89) = v88;
    *int v85 = (v89 >> 31) + v54 - ((2 * (v89 >> 31)) & 0x3EBED70E);
    int v90 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8 * ((175 * (v58 == 1974069387)) ^ v52));
    return v90(v90, 3623878656, v87, v79, a3, a4, (v52 - 934), a6, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             v91,
             v92,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49);
  }
  else if (v68 == 1)
  {
    HIDWORD(v91) = STACK[0x340];
    int8x16x4_t v93 = vld4q_s8(v60);
    uint64_t v69 = (a1 + 1267);
    uint8x16_t v70 = (uint8x16_t)veorq_s8(v93.val[2], v59);
    _Q21 = vmovl_high_u8(v70);
    _Q20 = vmovl_u8(*(uint8x8_t *)v70.i8);
    __asm
    {
      SHLL2           V20.4S, V20.8H, #0x10
      SHLL2           V21.4S, V21.8H, #0x10
    }
    uint64_t v77 = (uint64_t)*(&off_10007DD80 + (int)(v69 & 0xC45BC2A2));
    return (*(uint64_t (**)(void, void, void, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8 * (int)v69))(*(void *)(v53 + 8 * (int)v69), *(unsigned int *)(v77 + 4 * (v58 - 16 + v55)), *(&off_10007DD80 + (int)(v69 ^ 0x577)), v77, *(&off_10007DD80 + (int)(v69 ^ 0x570)), v69, (a1 + 577) | 0x64u, v58 - 15, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             v91,
             v61,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49);
  }
  else
  {
    LODWORD(STACK[0x334]) = 2 * (LODWORD(STACK[0x334]) ^ v51) + v51 - (v57 & (4 * (LODWORD(STACK[0x334]) ^ v51)));
    LODWORD(STACK[0x338]) = (v63 ^ v51) + (v62 ^ v51) + v51 - (v57 & (2 * ((v63 ^ v51) + (v62 ^ v51))));
    LODWORD(STACK[0x33C]) = (v66 ^ v51) + (v64 ^ v51) + v51 - (v57 & (2 * ((v66 ^ v51) + (v64 ^ v51))));
    LODWORD(STACK[0x340]) = (v67 ^ v51) + (v65 ^ v51) + v51 - (v57 & (2 * ((v67 ^ v51) + (v65 ^ v51))));
    return v61(v61, a1, v65, a2, a3, a4, a5, a6, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27);
  }
}

uint64_t sub_1000218D0()
{
  *(unsigned char *)(*(void *)(v3 - 0x2C138C8FAF40FC22) + (v5 - 1978662212 + v2)) = *(unsigned char *)(*(void *)(v3 - 0x2C138C8FAF40FC22) + (v2 - 226063316));
  return (*(uint64_t (**)(void))(v4 + 8 * ((76 * (v2 - 1 == v0 + 1790 + v1)) ^ (v0 + 1790))))();
}

uint64_t sub_100021938(uint64_t a1, uint64_t a2, char a3)
{
  int v9 = v7 + 4;
  int v10 = *(_DWORD *)(v6 + ((v9 - 1587210567) & 0xFFFFFFFC));
  *(unsigned char *)(v5 + (v9 - 1587210567)) = (HIBYTE(v10) ^ 0xDB)
                                                   + ((v4 - 52) ^ 0xB0)
                                                   - ((2 * (HIBYTE(v10) ^ 0xDB)) & 0xD6);
  *(unsigned char *)(v5 + (v9 - 1587210566)) = (BYTE2(v10) ^ 0xD1)
                                                   - 2 * ((BYTE2(v10) ^ 0xD1) & 0xEF ^ BYTE2(v10) & 4)
                                                   - 21;
  *(unsigned char *)(v5 + (v9 - 1587210565)) = (BYTE1(v10) ^ 0x5B)
                                                   - 2 * ((BYTE1(v10) ^ 0x5B) & 0xEF ^ BYTE1(v10) & 4)
                                                   - 21;
  *(unsigned char *)(v5 + (v9 - 1587210564)) = v10 ^ a3;
  unsigned int v11 = *v3 + 504427789;
  BOOL v12 = v11 < 0x6DAC00FF;
  BOOL v13 = v9 + 252778428 < v11;
  if ((v9 + 252778428) < 0x6DAC00FF != v12) {
    BOOL v13 = v12;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((1321 * v13) ^ v4)))();
}

void sub_100021940()
{
  LODWORD(STACK[0x53C]) = v0;
  LODWORD(STACK[0x504]) = v1;
  LODWORD(STACK[0x458]) = v2;
  LODWORD(STACK[0x5D4]) = v3;
  LODWORD(STACK[0x45C]) = v4 + 64;
  JUMPOUT(0x1000567ECLL);
}

uint64_t sub_10002197C@<X0>(uint64_t a1@<X2>, int a2@<W5>, unsigned int a3@<W8>)
{
  unsigned int v9 = a2 + v4 - 552 + v6 - 1226009850;
  int v10 = *(_DWORD *)(v8 - 220 + (v9 & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + v9) = v10 ^ 0x25;
  unsigned int v11 = v6 + v3;
  *(unsigned char *)(a1 + v11 + 1) = (BYTE2(v10) ^ 0xD1) - 2 * ((BYTE2(v10) ^ 0xD1) & 0xEF ^ BYTE2(v10) & 4) - 21;
  *(unsigned char *)(a1 + v11) = (BYTE1(v10) ^ 0x5B) + ~(2 * ((BYTE1(v10) ^ 0x5B) & 0xEF ^ BYTE1(v10) & 4)) - 20;
  *(unsigned char *)(a1 + v11 + 2) = (HIBYTE(v10) ^ 0xDB) - 2 * ((HIBYTE(v10) ^ 0xDB) & 0xEF ^ HIBYTE(v10) & 4) - 21;
  unsigned int v12 = *(_DWORD *)(v8 - 128) - 1931248329;
  BOOL v13 = v12 < a3;
  BOOL v14 = v6 - 1891176638 < v12;
  if (v6 - 1891176638 < a3 != v13) {
    BOOL v14 = v13;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v14 * v5) ^ v4)))();
}

uint64_t sub_100021A88@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unsigned int v7 = (((v3 + 692132353) | 0x2200131) ^ 0xA6520145) + v4;
  int v8 = *(_DWORD *)(v6 - 220 + (v7 & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + v7) = v8 ^ 0x25;
  unsigned int v9 = v4 + a2;
  *(unsigned char *)(a1 + v9 + 1) = (BYTE2(v8) ^ 0xD1) - 2 * ((BYTE2(v8) ^ 0xD1) & 0xEF ^ BYTE2(v8) & 4) - 21;
  *(unsigned char *)(a1 + v9) = (BYTE1(v8) ^ 0x5B) + ~(2 * ((BYTE1(v8) ^ 0x5B) & 0xEF ^ BYTE1(v8) & 4)) - 20;
  *(unsigned char *)(a1 + v9 + 2) = (HIBYTE(v8) ^ 0xDB) - 2 * ((HIBYTE(v8) ^ 0xDB) & 0xEF ^ HIBYTE(v8) & 4) - 21;
  unsigned int v10 = *(_DWORD *)(v6 - 128) - 678963966;
  BOOL v11 = v10 < v2;
  BOOL v12 = v4 - 1269431826 < v10;
  if (v4 - 1269431826 < v2 != v11) {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((v12 | (8 * v12)) ^ v3)))();
}

uint64_t sub_100021BA4@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W8>)
{
  int v6 = (a2 - 81) | 0x40;
  *(unsigned char *)(v3 + (a1 - 951018787)) = ((79 * (v6 ^ 0x47)) ^ 0x36)
                                                  + *(unsigned char *)(v4 + (a1 - 951018787))
                                                  - ((2 * *(unsigned char *)(v4 + (a1 - 951018787))) & 0xD6);
  return (*(uint64_t (**)(void))(v5 + 8 * ((49 * (a1 - 1 != a3)) ^ v6)))();
}

uint64_t sub_100021C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unint64_t *a11, char a12, int a13, uint64_t a14, int a15)
{
  char v22 = (v18 + 36) * (*(unsigned char *)(v15 + 24) - v21) - 100;
  unsigned int v23 = 1759421093 * (&a10 ^ 0xB37DB054);
  a11 = &STACK[0x335F4D7B17DD4E17];
  a14 = v20;
  a12 = ((v22 ^ 0x51) + ((2 * v22) & 0xA2) - 16) ^ (-91 * (&a10 ^ 0x54));
  a13 = v23 - 1100130128 + v19;
  a15 = v18 - v23 + 1439;
  uint64_t v24 = (*(uint64_t (**)(int *))(v17 + 8 * (v18 + 2198)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((344 * (a10 == v16)) ^ v18)))(v24);
}

uint64_t sub_100021CD4@<X0>(int a1@<W8>, uint64_t a2, int a3, int a4, unint64_t *a5, uint64_t a6, unsigned int a7)
{
  int v10 = a1 - 24;
  unsigned int v11 = 3804331 * (&a3 ^ 0x7ED525F6);
  a7 = v11 + 1608052035;
  a5 = &STACK[0x1244BACB8843828D];
  a6 = v7;
  a3 = v11 + (v9 ^ 0x3FEFD5FE) - 589300744 + ((v9 << ((a1 + 120) ^ 0x7C)) & 0x7FDFABFC);
  a4 = v11 + a1 - 24 + 289;
  uint64_t v12 = (*(uint64_t (**)(int *))(v8 + 8 * (a1 + 2024)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((505 * (*(_DWORD *)(v7 - 0x2C138C8FAF40FC0ALL) == 526347143)) ^ v10)))(v12);
}

uint64_t sub_100021DB8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 239) ^ 0x58A ^ ((v2 + 106) | 0x410)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_100021DF4@<X0>(int a1@<W8>)
{
  uint64_t v8 = v2 - 1;
  *(unsigned char *)(v4 + v8) = ((v5 + v1 + 34) ^ v3) * (v5 + v1 + 51);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 != 0) * v6) ^ a1)))();
}

uint64_t sub_100021E00(uint64_t a1, uint64_t a2, int a3)
{
  int v7 = v3 - 655;
  BOOL v9 = v5 - 856691106 > (int)(((v7 + 393) | a3) ^ 0x87B74EE7) && v5 - 856691106 < v4;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1188 * v9) ^ v7)))();
}

uint64_t sub_100021E48()
{
  return sub_1000427D4();
}

void sub_100021E64(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 24) - 0x139154EEB4327ECLL) + 110452459;
  int v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0x139154EEB4327ECLL) + 110452459;
  int v4 = (v2 < -296542812) ^ (v3 < -296542812);
  BOOL v5 = v2 > v3;
  if (v4) {
    BOOL v6 = v2 < -296542812;
  }
  else {
    BOOL v6 = v5;
  }
  int v1 = *(_DWORD *)(a1 + 16) - 1178560073 * ((-2 - ((a1 | 0x5930FF1B) + (~a1 | 0xA6CF00E4))) ^ 0x1C5B7886);
  __asm { BRAA            X15, X17 }
}

uint64_t sub_100021F54@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  a4 = v7;
  a5 = a1;
  a3 = v7;
  a6 = v8 + 1225351577 * (((~&a3 & 0xC516940) - (~&a3 | 0xC516941)) ^ 0x2FCBB157) - 358;
  uint64_t v9 = (*(uint64_t (**)(uint64_t *))(v6 + 8 * (v8 + 665)))(&a3);
  return sub_100021FB0(v9);
}

uint64_t sub_100021FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v29 - 104) = a24;
  *(_DWORD *)(v29 - 112) = v26
                         + 1224239923 * ((2 * ((v29 - 144) & 0x2E58740) - (v29 - 144) + 2098886841) ^ 0x8FA9856E)
                         + 290;
  *(void *)(v29 - 144) = v24;
  *(void *)(v29 - 136) = a21;
  *(void *)(v29 - 128) = a24;
  *(void *)(v29 - 120) = a23;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v26 + 1428)))(v29 - 144);
  BOOL v31 = v27 + v28 + 2 >= (((v26 - 271) | 0x104) ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((2 * v31) | (8 * v31) | (v26 + 341))))(v30);
}

uint64_t sub_1000220AC()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1078)))(1576);
  STACK[0x570] = v2;
  STACK[0x258] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 != 0) * (v0 - 124 + v0 + 292 - 2183)) ^ v0)))();
}

uint64_t sub_10002211C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((7 * ((((v1 - 1347) ^ ((v2 + v0) < 0x7FFFFFFF)) & 1) == 0)) ^ v1)))();
}

void sub_100022160()
{
  *(_DWORD *)(v0 + 8) = -526372781;
}

uint64_t sub_10002216C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((79 * (31 * (((v1 - 859) | 0x402) ^ 0x507) == 1147)) ^ ((v1 - 859) | 0x402))))();
}

uint64_t sub_1000221F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  return (*(uint64_t (**)(void))(v15 + 8 * ((617 * (a14 == (((v14 - 6) | 0x22D) ^ v16))) ^ v14)))();
}

uint64_t sub_100022228@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((((a1 - 1420) | 2) ^ 0x9A) * (v3 == v2)) ^ a1)))();
}

uint64_t sub_100022254(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 ^ 0x34C) + 1285) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_10002228C(uint64_t a1)
{
  int v1 = 1759421093 * ((~a1 & 0xA201450D | a1 & 0x5DFEBAF2) ^ 0x117CF559);
  int v2 = *(_DWORD *)(a1 + 8) - v1;
  unsigned int v3 = *((_DWORD *)*(&off_10007DD80 + (v2 ^ 0x51B)) + 83);
  unsigned int v4 = (*(_DWORD *)(a1 + 16) ^ v1) + 321837373;
  BOOL v5 = v3 + 1470627956 > v4;
  if (v4 < 0x57A80074 != v3 > 0xA857FF8B) {
    BOOL v5 = v3 > 0xA857FF8B;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_10007DD80 + v2 - 1272) + 8 * ((v5 * ((v2 - 268) ^ 0x4DC)) ^ v2) - 4))();
}

uint64_t sub_100022370@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  *(_DWORD *)(a19 + 4 * a2) = a5;
  int v22 = a2 + 1 + v19;
  BOOL v24 = v22 < a3 && v22 > v20;
  return (*(uint64_t (**)(void))(v21 + 8 * ((v24 * a4) ^ a1)))();
}

uint64_t sub_1000223A0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((*(unsigned char *)(v1 - 0x2C138C8FAF40FC0ELL) & 1) == 0) * (((v0 ^ 0x10A) + 325) ^ 0x6E6)) ^ v0)))();
}

uint64_t sub_1000223E4@<X0>(int a1@<W3>, int a2@<W5>, uint64_t a3@<X6>, int a4@<W8>, int8x16_t a5@<Q3>, int8x16_t a6@<Q5>)
{
  int8x16_t *v7 = vaddq_s8(vaddq_s8(*(int8x16_t *)(a3 + (v6 + a1)), a6), vmvnq_s8(vandq_s8(vaddq_s8(*(int8x16_t *)(a3 + (v6 + a1)), *(int8x16_t *)(a3 + (v6 + a1))), a5)));
  return (*(uint64_t (**)(void))(v8 + 8 * (a2 + a4 + 1524)))();
}

uint64_t sub_100022438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  if (a16 == 2)
  {
    BOOL v25 = *(_DWORD *)(v23 - 128) != ((184 * (a6 ^ (a6 - 3))) ^ 0x4F9B09DA);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 8 * (v25 | (16 * v25) | (a5 + a6 + 552))))(a1, a2, a9);
  }
  else if (a16 == 1)
  {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22
                                                                + 8
                                                                * ((309
                                                                  * (((*(_DWORD *)(v23 - 128) == 1335561202) ^ (a6 + a5 - 1)) & 1)) ^ (a6 + a5 + 552))))(a1, a2, a9);
  }
  else
  {
    uint64_t v26 = (a5 - 69478993) | 0x4Au;
    unint64_t v27 = ((2 * (void)&a22) & 0xFAFA3FFFCF7ADFB0)
        + ((unint64_t)&a22 ^ 0x7D7D1FFFE7BD6FDBLL)
        + (v26 ^ 0xF6FEFAF37DFBF514);
    *(unsigned char *)(v23 - 129) = ((v27 + 24 + ((((a5 - 81) | 0x4A) + 34) | 3)) ^ 0xBA) * (v27 + 56);
    return (*(uint64_t (**)(void))(v22 + 8 * (int)v26))(0);
  }
}

uint64_t sub_1000225E0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 312) = *(void *)(v3 + 8 * (int)(STACK[0x420] - 1110));
  return sub_100043838(a1, a2, 1522488794);
}

uint64_t sub_100022608()
{
  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_100022640@<X0>(uint64_t a1@<X1>, char a2@<W4>, int a3@<W8>)
{
  unsigned int v9 = *(_DWORD *)(v8 - 220 + ((v6 + a3) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v6 + a3)) = (HIBYTE(v9) ^ 0xDB) - ((2 * (HIBYTE(v9) ^ 0xDB)) & 0xD6) - 21;
  *(unsigned char *)(a1 + (v6 + a3 + 1)) = ((v9 >> (a2 + (v5 ^ v4) + 109)) ^ 0xD1)
                                               - 2
                                               * (((v9 >> (a2 + (v5 ^ v4) + 109)) ^ 0xD1) & 0xEF ^ (v9 >> (a2 + (v5 ^ v4) + 109)) & 4)
                                               - 21;
  *(unsigned char *)(a1 + (v6 + a3 + 2)) = (BYTE1(v9) ^ 0x5B)
                                               - 2 * ((BYTE1(v9) ^ 0x5B) & 0xEF ^ BYTE1(v9) & 4)
                                               - 21;
  *(unsigned char *)(a1 + (v6 + a3 + 3)) = v9 ^ 0x25;
  unsigned int v10 = *(_DWORD *)(v8 - 128) - 980422760;
  BOOL v11 = v6 - 827128215 < v10;
  if (v6 - 827128215 < v3 != v10 < v3) {
    BOOL v11 = v10 < v3;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * (v5 ^ (4 * v11))))();
}

uint64_t sub_100022730(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,char a43)
{
  *(unsigned char *)(a6 + (a4 + v43 + 1567)) = *(&a43 + v46 - 713989072);
  return (*(uint64_t (**)(void))(v45
                              + 8
                              * ((49 * (a5 + v43 + 1 < (((4 * (v44 ^ 0x3DC) - 1220) | 0x38) ^ 0x7Cu))) ^ (4 * (v44 ^ 0x3DC)))))();
}

uint64_t sub_100022798()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((227 * (v2 + v0 - 1605107679 >= (v1 ^ 0x3E2u) - 662)) ^ v1)))();
}

uint64_t sub_1000227FC(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))*(&off_100079300 + ((217 * (*(_DWORD *)(a2 + 4) != 2079419397)) ^ 0x15Fu)))(4294925278);
}

uint64_t sub_100022844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((((v8 - 75) ^ (v9 == (((v8 + a7) & a8) + 56))) & 1)
                                * v10) ^ v8)))();
}

uint64_t sub_100022878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38)
{
  return (*(uint64_t (**)(void))(v40
                              + 8
                              * (v39 ^ 0x6E8 | (4
                                              * ((v39 ^ 0x15F ^ (v38 + 514) ^ LODWORD(STACK[0x550]) ^ (((v39 ^ 0x6E8) - 1423) | 0x408)) != a38 - 24759838)))))();
}

uint64_t sub_1000228D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  *(_DWORD *)(v39 - 224) ^= a39;
  return sub_10003A158();
}

uint64_t sub_1000228FC()
{
  uint64_t v7 = (void *)STACK[0x3F0];
  unint64_t v8 = STACK[0x3F0] + 264;
  v7[31] = 0x67BDBEB93F075306;
  v7[32] = v8;
  int v9 = v7 + 0x2722A9DD68651DLL;
  v7[65] = 0x67BDBEB93F075306;
  v7[66] = v7 + 67;
  STACK[0x3B0] = (unint64_t)(v7 + 0x2722A9DD68653FLL);
  v7[99] = 0x67BDBEB93F075306;
  v7[100] = v7 + 101;
  STACK[0x3D0] = (unint64_t)(v7 + 0x2722A9DD686561);
  v7[133] = 0x67BDBEB93F075306;
  v7[134] = v7 + 135;
  STACK[0x3D8] = (unint64_t)(v7 + 0x2722A9DD686583);
  v7[167] = 0x67BDBEB93F075306;
  v7[168] = v7 + 169;
  STACK[0x3E0] = (unint64_t)(v7 + 0x2722A9DD6865A5);
  unint64_t v10 = STACK[0x488] + 4;
  int v11 = v0 << (((v2 + 76) | 8) - 90);
  LODWORD(STACK[0x3F8]) = v2 + 602;
  unsigned int v12 = 1178560073 * (v4 ^ 0xBA947862);
  uint64_t v13 = v6 - 200;
  *(void *)(v13 + 16) = v10;
  *(void *)(v13 + 24) = v9;
  LODWORD(STACK[0x3C8]) = v12;
  LODWORD(v13) = v2 + 602 - v12;
  LODWORD(STACK[0x3B8]) = v13;
  *(_DWORD *)(v6 - 196) = v13;
  *(_DWORD *)(v6 - 192) = v12 + (v0 ^ 0x42A69A7E) - 17309849 + (v11 & 0xBBF3E3F2 ^ 0x3AB2C302);
  (*(void (**)(uint64_t))(v5 + 8 * (v2 ^ 0xA1E)))(v6 - 200);
  uint64_t v14 = v10 + v3;
  unsigned int v15 = 1178560073 * (((v4 | 0xAF7A9D5D) - (v4 & 0xAF7A9D5D)) ^ 0x15EEE53F);
  int v16 = STACK[0x3F8];
  unsigned int v17 = LODWORD(STACK[0x3F8]) - v15;
  uint64_t v18 = v6 - 200;
  unint64_t v19 = STACK[0x3B0];
  *(void *)(v18 + 16) = v14;
  *(void *)(v18 + 24) = v19;
  *(_DWORD *)(v6 - 196) = v17;
  *(_DWORD *)(v6 - 192) = v15 + (v0 ^ 0x42AE9E60) - 16786567 + (v11 & 0xBBE3EBCE ^ 0x3AA2C30E);
  (*(void (**)(uint64_t))(v5 + 8 * (v2 ^ 0xA1E)))(v6 - 200);
  uint64_t v20 = v14 + v3;
  int v21 = 1178560073 * (((v6 - 200) & 0xCF040D76 | ~((v6 - 200) | 0xCF040D76)) ^ 0x8A6F8AEB);
  *(_DWORD *)(v6 - 196) = v16 - v21;
  *(_DWORD *)(v6 - 192) = v21 + (v0 ^ 0x60AC9869) - 587342478 + (v11 & 0xFFE7E7DC ^ 0x3EA6C70C);
  uint64_t v22 = v6 - 200;
  unint64_t v23 = STACK[0x3D0];
  *(void *)(v22 + 16) = v20;
  *(void *)(v22 + 24) = v23;
  (*(void (**)(uint64_t))(v5 + 8 * (v2 ^ 0xA1E)))(v6 - 200);
  uint64_t v24 = v20 + v3;
  uint64_t v25 = v6 - 200;
  unint64_t v26 = STACK[0x3D8];
  *(void *)(v25 + 16) = v24;
  *(void *)(v25 + 24) = v26;
  unsigned int v27 = LODWORD(STACK[0x3C8]) + (v0 ^ 0xC3A490EE) + 2146817527 + (v11 & 0xB9F7F6D2 ^ 0x38B6D602);
  *(_DWORD *)(v6 - 196) = STACK[0x3B8];
  *(_DWORD *)(v6 - 192) = v27;
  (*(void (**)(uint64_t))(v5 + 8 * (v2 + 1554)))(v6 - 200);
  int v28 = 1178560073 * ((v6 - 437410645 - 2 * ((v6 - 200) & 0xE5EDA573)) ^ 0x5F79DD11);
  *(_DWORD *)(v6 - 196) = LODWORD(STACK[0x3F8]) - v28;
  *(_DWORD *)(v6 - 192) = v28 + (v0 ^ 0xE0A0BA7A) + 1559363427 + (v11 & 0xFFFFA3FA ^ 0x3EBE830A);
  *(void *)(v6 - 184) = v24 + v3;
  *(void *)(v6 - 176) = STACK[0x3E0];
  (*(void (**)(uint64_t))(v5 + 8 * (v2 + 1554)))(v6 - 200);
  int v29 = ((v2 + 332) | 8) - 314;
  unint64_t v30 = STACK[0x488];
  STACK[0x598] = (v29 ^ 0x840E9729) + v1;
  return (*(uint64_t (**)(unint64_t))(v5 + 8 * ((127 * ((v29 ^ 0x840E9729) + v1 == 0)) ^ v29)))(v30);
}

void sub_100022CF0(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100022D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unsigned int v13 = v11 - 688;
  unint64_t v14 = ((unint64_t)&a10 ^ 0x5EFDF9DEDF77FFE7)
      - 0x60CC118804488E7
      + ((2 * (void)&a10) & 0xBDFBF3BDBEEFFFC0);
  a10 = (v13 ^ 0xFFFFFFFFFFFFFC34) + v10;
  *(unsigned char *)(a2 + a10) = (v14 ^ 0xBA) * (v14 + 17);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8 * (int)((1118 * (a10 == 0)) ^ v13)))(1118, a2);
}

uint64_t sub_100022E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2
                                                                                + 8
                                                                                * ((386
                                                                                  * (23 * ((v3 - 205) ^ 0x6FB) == 1885)) ^ (v3 - 205))))(a1, v2 - 0x139154EEB4327E8, 1787, 23, 3103670704);
}

uint64_t sub_100022E54(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  *(void *)(a5 + (v7 - v8)) = *(void *)(v9 + (v7 - v8));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a6 + v8 == a3) * a7) ^ a2)))();
}

uint64_t sub_100022E80@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((237 * (v1 + 1 != v3 + 48)) ^ a1)))();
}

uint64_t sub_100022F5C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v4 & (2 * (*(unsigned __int8 *)(a2 + 7) - 100)))
                                 + ((*(unsigned __int8 *)(a2 + 7) - 100) ^ v5) == v5)
                                * (a3 + 1176)) ^ a3)))();
}

uint64_t sub_100022F94()
{
  int v5 = v0 ^ (v1 - 232);
  int v6 = v0 + 552400906;
  BOOL v7 = v2 - 1339579022 < (v3 - 1299184419);
  if (v2 - 1339579022 < (v5 + 780234685) != (v3 - 1299184419) < 0x2E8170D5) {
    BOOL v7 = (v3 - 1299184419) < 0x2E8170D5;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * (((4 * v7) | (8 * v7)) ^ v6)))();
}

uint64_t sub_100023018@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v1;
  uint64_t v6 = v2;
  unsigned int v7 = v3 + 1374699841 * ((2 * (&v5 & 0x37738180) - &v5 - 930316676) ^ 0xA5786675) + 1336;
  return (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v3 ^ 0x909)))(&v5);
}

uint64_t sub_10002307C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v21 = (v18 + a7) & a8;
  unint64_t v22 = a1 + v9 + (*(_DWORD *)(v19 + 4 * v20) ^ v11);
  *(_DWORD *)(v19 + 4 * v20) = v22 + v11 - ((((v21 - 1362) | 4) ^ (v12 + 669)) & (2 * v22));
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((((v21 - 1830) | v13) ^ HIDWORD(v22) ^ v14) + (v15 & (v22 >> 31)) + v16 == v10) * v17) ^ v21)))();
}

uint64_t sub_10002308C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 - 100 < (((v1 ^ 0xA4A) + 1462) ^ 0x828u)) * ((23 * (v1 ^ 0x891)) ^ 0x2FE)) ^ v1 ^ 0xA4A)))();
}

uint64_t sub_1000230E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8 * ((149 * ((a3 + 1 + v5) < 0x3C)) ^ v4)))(a4, a4);
}

uint64_t sub_1000231AC@<X0>(int a1@<W3>, int a2@<W8>)
{
  uint64_t v3 = (a2 + 477) | 0x50u;
  STACK[0x5E0] += v3 ^ 0xFFFFFFFFFFFFFDEBLL;
  LODWORD(STACK[0x46C]) = a1 + 82;
  return (*(uint64_t (**)(void))(v2
                              + 8 * (int)(((STACK[0x600] == 0) * ((((v3 - 597) | 0x400) - 822) ^ 0x2BA)) ^ (v3 + 483))))();
}

uint64_t sub_100023218()
{
  *(_DWORD *)(*v2 + 4 * (((v3 - 1096) ^ (v1 + 180)) + v4)) = v0;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((2 * ((v1 + v4 - 2) >> 31)) | (8
                                                                                  * ((v1 + v4 - 2) >> 31))) ^ v3)))();
}

uint64_t sub_100023258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(void, uint64_t, void))(v3 + 8 * (v2 + 713)))(*(unsigned int *)STACK[0x2D0], a2, 0);
  return sub_10004D300(v4);
}

void sub_100023260()
{
  unsigned int v12 = (v7 + 1535915660) & 0xA473CD9B;
  uint64_t v13 = *(void *)(v10 - 0x139154EEB4327E8);
  unsigned int v14 = (*(_DWORD *)(v13 + 4 * (v11 - 1)) ^ v3) >> v1;
  uint64_t v15 = 4 * (v6 + v0 + 1308);
  *(_DWORD *)(v13 + v15) = v3 + v14 + (v12 ^ 0xFFFFFAE4 ^ v5 & (2 * v14)) + 1;
  int v16 = v2 - (*(_DWORD *)(*(void *)(v10 - 0x139154EEB4327E8) + v15) == v3);
  if (*v8 + v9 >= v4) {
    int v16 = -813990542 - v16;
  }
  _DWORD *v8 = v16;
}

uint64_t sub_100023338(int a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v12 = v8 - 2144134811 + v7 - a1 + 1967;
  int8x8_t v13 = vrev64_s8(*(int8x8_t *)(v5 - 7 + v12));
  *(int8x8_t *)(v4 - 7 + v12) = vrev64_s8(vadd_s8(vsub_s8(v13, vand_s8(vadd_s8(v13, v13), v10)), v11));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a1 - (v6 & 0xFFFFFFF8) == -8) * (((a4 - 762) | 0x22C) ^ 0x1B1)) ^ a4)))();
}

uint64_t sub_1000233BC(uint64_t a1, uint64_t a2)
{
  if (**(unsigned char **)(a2 + 8)) {
    char v2 = -4;
  }
  else {
    char v2 = -6;
  }
  *(unsigned char *)(a1 + 88) = ((**(unsigned char **)(a2 + 8) != 0) ^ 0x3F) + v2;
  return 0;
}

uint64_t sub_1000233F0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v0 + 8) != 0x1244BACB8843828DLL)
                                * ((v1 - 1008) ^ 0x7BA ^ (549 * (v1 ^ 0x5AB)))) ^ v1)))();
}

uint64_t sub_100023450@<X0>(int a1@<W5>, unsigned int a2@<W8>)
{
  BOOL v4 = v2 + 1484150212 < (int)(a2 + (a1 ^ 0x16B) + ((a1 - 983387235) & 0x3A9D4CF3) + 1940435760);
  if (a2 > 0xC5742D3 != v2 + 1484150212 < -207045332) {
    BOOL v4 = a2 > 0xC5742D3;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((252 * v4) ^ a1)))();
}

uint64_t sub_1000234E4()
{
  *int v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_100023508@<X0>(int a1@<W5>, unsigned int a2@<W7>, int a3@<W8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q1>, int8x16_t a6@<Q4>, int8x16_t a7@<Q5>, int8x16_t a8@<Q6>, int8x16_t a9@<Q7>)
{
  a5.i64[0] = *(void *)(v10 + 4);
  a5.i32[2] = *(_DWORD *)(v10 + 12);
  int8x16_t v15 = vextq_s8(a4, a5, 0xCuLL);
  int8x16_t v16 = a5;
  v16.i32[3] = *(_DWORD *)(v10 + 16);
  int32x4_t v17 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v16, a7), vandq_s8(v15, a6)), 1uLL), a8);
  v18.i32[0] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v10 + 4) & ((a3 ^ a2) - 788)));
  v18.i32[1] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v10 + 8) & 1));
  v18.i32[2] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v10 + 12) & 1));
  v18.i32[3] = *(_DWORD *)(v11 + 4 * (v16.i8[12] & 1));
  *(int8x16_t *)uint64_t v10 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v10 - 908), v18), v14), (int8x16_t)vaddq_s32(vsubq_s32(v17, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v17, v17), a9)), v13));
  return (*(uint64_t (**)(void))(v12 + 8 * (((v9 != 4) * a1) ^ a3)))();
}

uint64_t sub_100023514@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 + v2 + (a1 ^ 0x9E9u) - 322 < 2) * (a1 - 2199)) ^ a1)))();
}

void sub_100023548()
{
  _DWORD *v0 = *(_DWORD *)(v1 - 0x2C138C8FAF40FC0ALL);
}

uint64_t sub_100023598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v8
                                                                      + 8
                                                                      * ((v7 < (((a7 - 1026) | 0x888) ^ 0x89Cu)) | a7)))(a1, a2, a3, 0);
}

uint64_t sub_1000235C8@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((a1 + 993848508) & 0x3C34CAFA ^ 0x8AD) * (a2 == v4)) ^ (v3 + a1 - 143))))();
}

uint64_t sub_10002360C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,unint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,int a53,int a54,int a55,unsigned int a56,int a57,int a58,int a59,int a60,unsigned __int8 a61)
{
  int v67 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 8 * (v61 + 34));
  uint64_t v68 = a56;
  int v69 = a61 ^ 0xDD;
  if (v69 == 2)
  {
    BOOL v76 = (unint64_t)&a44 + 4 >= a35 || v62 >= (unint64_t)&a53;
    return (*(uint64_t (**)(void, uint64_t))(v63 + 8 * (int)((a34 * v76) ^ (a3 + 777))))(a56, 64052174);
  }
  else if (v69 == 1)
  {
    int v70 = a3 + 1414;
    int v71 = a3 + 1248;
    BOOL v73 = (unint64_t)&a44 + 4 < a35 && v62 < (unint64_t)&a53;
    return (*(uint64_t (**)(void))(v63 + 8 * (((HIDWORD(a33) + v70) * v73) ^ v71)))(a56);
  }
  else
  {
    a55 = 2 * (a55 ^ v65) + v65 - (v64 & (4 * (a55 ^ v65)));
    a56 = 2 * (a56 ^ v65) + v65 - (v64 & (4 * (a56 ^ v65)));
    a57 = 2 * (a57 ^ v65) + v65 - (v64 & (4 * (a57 ^ v65)));
    a58 = 2 * (a58 ^ v65) + v65 - (v64 & (4 * (a58 ^ v65)));
    HIDWORD(a39) = a61 ^ 0xFFFFFFDD;
    return v67(v68, a2, a3, (char *)&a44 + 4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, v66 - 188, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46);
  }
}

void sub_1000237B8()
{
}

uint64_t sub_1000237C8()
{
  unint64_t v3 = STACK[0x548];
  int v4 = 1178560073 * ((((v2 - 200) | 0x33FBA1D0) - (v2 - 200) + ((v2 - 200) & 0xCC045E28)) ^ 0x896FD9B2);
  *(_DWORD *)(v2 - 200) = 1184294775 - v4;
  *(_DWORD *)(v2 - 184) = -1882357475 - v4 + v0;
  *(void *)(v2 - 192) = v3;
  (*(void (**)(uint64_t))(v1 + 8 * ((int)v0 + 2265)))(v2 - 200);
  STACK[0x5E8] = *(void *)(v1 + 8 * v0);
  return sub_100043838(1522488794, STACK[0x3F8]);
}

uint64_t sub_1000238B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, int a13)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13
                                                     + 8
                                                     * ((387 * (((a13 > a12) ^ ((v14 ^ 0x75) + 74)) & 1)) ^ v14)))(a1, a2);
}

uint64_t sub_10002391C()
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((15 * (v1 + 1 != v4 + 4)) ^ v2)))(v0);
}

uint64_t sub_1000239E0()
{
  BOOL v5 = v0 < v4;
  if (v5 == v1 - 0x7AC82A11D32549D5 < v4) {
    LOBYTE(v5) = v1 - 0x7AC82A11D32549D5 < v0;
  }
  return (*(uint64_t (**)(void))(v3
                                           + 8
                                           * (((16 * ((((v2 + 42) ^ v5) & 1) == 0)) & 0xDF | (32 * (((v2 + 42) ^ ~v5) & 1))) ^ v2)))((v2 - 690));
}

uint64_t sub_100023A54(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((((((a7 - 370) | 0x84) - v7 - 302) ^ (a2 + 339)) * ((v8 & 0x18) == 0)) ^ a7)))();
}

uint64_t sub_100023A90()
{
  BOOL v5 = v1 - 1504566318 > 1169184023 || v1 - 1504566318 < (int)(((v2 - 1826503446) & 0x6CDE3F3E ^ 0xC5B0532C) + v0);
  return (*(uint64_t (**)(void))(v3 + 8 * ((31 * v5) ^ v2)))();
}

uint64_t sub_100023AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 < a5 - 1335) * (((a5 - 340) | 8) - 891)) ^ a5)))(0);
}

uint64_t sub_100023B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(_DWORD *)(v14 - 112) = v13 + 1374699841 * ((v14 - 128) ^ 0x6DF41809) + 695;
  *(void *)(v14 - 128) = v12;
  *(void *)(v14 - 120) = a11;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v11 + 8 * (v13 + 1160)))(v14 - 128);
  return sub_100023B68(v15);
}

uint64_t sub_100023BA4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42)
{
  uint64_t v50 = (*(uint64_t (**)(void, void, void, void, unint64_t *, uint64_t, void, unint64_t *))(v48 + 8 * (a1 + 245)))(*v47, v42 + v43 + ((a1 + 1579853163) & 0x21D556DBu) - 1113, LODWORD(STACK[0x240]), v47[13] - 604525873, &STACK[0x1980], v44, (LODWORD(STACK[0x2EC]) - 604952942), &STACK[0x1970]);
  unint64_t v52 = STACK[0x420];
  int v53 = (v50 ^ 0xFF69CFB1) + 2025323776 + ((2 * v50) & 0xFED39F62);
  if (v53 == -2011050828) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v48
  }
                                                       + 8
                                                       * ((49
                                                         * (LODWORD(STACK[0x2C8])
                                                          - 913371510
                                                          + ((v52 + 1103) ^ 0x8E8u) < 3)) ^ ((int)v52 - 974))))(v50, v51);
  if (v53 == 2015481009)
  {
    LODWORD(STACK[0x418]) = v52 - 518;
    (*(void (**)(void, uint64_t, void))(v48 + 8 * (int)(v52 ^ 0xCF0)))(*(unsigned int *)STACK[0x2D0], v44, ((v52 - 527) ^ 0xDBF124DE) + LODWORD(STACK[0x2EC]));
    STACK[0x2C0] = (unint64_t)v47;
    unint64_t v57 = STACK[0x4F0];
    int v58 = LODWORD(STACK[0x5B4]) ^ 0x75996DFF;
    unsigned int v59 = (2 * LODWORD(STACK[0x5B4])) & 0xEB32DBFE;
    int v60 = 1755732067 * ((((v49 - 200) | 0x77060834) - (v49 - 200) + ((v49 - 200) & 0x88F9F7C8)) ^ 0xA9C0B5EF);
    *(_DWORD *)(v49 - 160) = v47[13] - v60 + 521743872;
    *(_DWORD *)(v49 - 156) = v60 + v52 - 1052;
    *(_DWORD *)(v49 - 184) = (a42 & 0x7FFFFFFF ^ 0xA89A5370) - v60 + (a41 & 0x9E4F6F76 ^ 0x8E4B4916) - 201733258;
    *(_DWORD *)(v49 - 164) = v58 - v60 + v59 - 8481860;
    int v61 = (unint64_t *)(v49 - 200);
    *int v61 = v57;
    v61[1] = (unint64_t)&STACK[0x1970];
    v61[3] = v45;
    uint64_t v62 = (*(uint64_t (**)(uint64_t))(v48 + 8 * ((int)v52 + 1232)))(v49 - 200);
    int v63 = *(_DWORD *)(v49 - 168);
    LODWORD(STACK[0x5D8]) = v63;
    return (*(uint64_t (**)(uint64_t))(v48 + 8 * ((14 * (v63 == 526347143)) ^ LODWORD(STACK[0x418]))))(v62);
  }
  else
  {
    int v54 = 3 * LODWORD(STACK[0x234]);
    unsigned int v55 = 1178560073 * ((2 * (v46 & 0x36413638) - v46 + 1237240260) ^ 0xF32AB1A6);
    LODWORD(STACK[0x2CC]) = v53;
    *(_DWORD *)(v49 - 200) = v55 + v53 - ((v54 + 2 * v53 + 264005212) & 0x3EBED70E) - 1489133866;
    *(_DWORD *)(v49 - 196) = v52 - v55 + 1113;
    *(void *)(v49 - 192) = STACK[0x238];
    (*(void (**)(uint64_t))(v48 + 8 * ((int)v52 + 1192)))(v49 - 200);
    return sub_1000449B8();
  }
}

uint64_t sub_100023C60()
{
  *(_DWORD *)(*(void *)(v0 + 96) + 1428) = 642161888;
  return sub_100020D8C();
}

uint64_t sub_100023C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v19 = 1759421093 * ((-1949523746 - ((v18 - 136) | 0x8BCCA0DE) + ((v18 - 136) | 0x74335F21)) ^ 0xC74EEF75);
  *(_DWORD *)(v18 - 120) = v17 - v19 + 286;
  *(_DWORD *)(v18 - 136) = v14 - v19 + (v17 ^ 0x81E5512);
  *(void *)(v18 - 128) = v16;
  (*(void (**)(uint64_t))(v15 + 8 * (v17 + 1473)))(v18 - 136);
  *(void *)(v18 - 128) = a14;
  *(_DWORD *)(v18 - 120) = (v17 ^ 0x3C2) + 1178560073 * ((v18 - 136) ^ 0xBA947862) + 1579;
  *(void *)(v18 - 112) = a13;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v17 ^ 0xBAB)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v18 - 136) > 0x4B4B6B4Bu)
                                              * (((((v17 ^ 0x3C2) - 1935766684) & 0x736177F3) + 94) ^ 0x463)) ^ v17 ^ 0x3C2)))(v20);
}

uint64_t sub_100023DAC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 - 553 + v2 + 1285 - 565) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_100023DE4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((4 * (v0 != ((v1 - 475) ^ 0x274A8877))) | (32 * (v0 != ((v1 - 475) ^ 0x274A8877)))) ^ v1)))();
}

uint64_t sub_100023E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int8x16_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *a5 = vaddq_s8(vsubq_s8(*(int8x16_t *)(a8 + (v23 + v24)), vandq_s8(vaddq_s8(*(int8x16_t *)(a8 + (v23 + v24)), *(int8x16_t *)(a8 + (v23 + v24))), v26)), v27);
  BOOL v28 = (v22 ^ 0x70) == 127;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, int8x16_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * ((4 * v28) | (8 * v28) | (v22 + 865))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_100023E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  STACK[0x438] = *(void *)(v5 + 176);
  return sub_10003F5B4(a1, a2, a3, a4, a5);
}

uint64_t sub_100023E94()
{
  BOOL v6 = (*(_DWORD *)(v2 + 16) ^ v0) - 1781068434 > 0xFFFFFFBE
    || (*(_DWORD *)(v3 - 0x2C138C8FAF40FC0ELL) & 1) != 89 * (((v1 - 458) | 0x101) ^ 0x108) - 267;
  return (*(uint64_t (**)(void))(v4 + 8 * ((961 * v6) ^ v1)))();
}

void sub_100023F1C(_DWORD *a1@<X8>)
{
  *a1 = v1;
  sub_100041BBC();
}

uint64_t sub_100023F2C(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((a5 - 893) | 0x648) - 1524) * ((a3 + a2 - 1287251399) < 8)) ^ a5)))();
}

uint64_t sub_100023F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v76 = ((((2 * v70) | 0x989D4EA2) - v70 + 867260591) ^ 0x58E3EE08) * v68;
  *(_DWORD *)(v75 - 164) = v71 - v76 - 525;
  *(_DWORD *)(v75 - 200) = v76 ^ 0xC1674A5F;
  v73[1] = v69;
  v73[2] = a67;
  v73[3] = a68;
  uint64_t v77 = (*(uint64_t (**)(uint64_t))(v74 + 8 * (v71 + 1403)))(v75 - 200);
  return (*(uint64_t (**)(uint64_t))(v74 + 8 * (((*(_DWORD *)(v75 - 168) != v72) * (v71 ^ 0x385)) ^ v71)))(v77);
}

uint64_t sub_100024020@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(*(void *)(result + 8) - 0x5224DE3D6C39C413) = (a2 ^ 0xE0A09478)
                                                              - ((2 * (a2 ^ 0xE0A09478) + 1073656626) & 0x3EBED70E)
                                                              + 2 * (((v2 - 1652) | 0x113) ^ 0x709)
                                                              + 526302316;
  return result;
}

uint64_t sub_100024070()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((58
                                * ((((((v0 ^ 0xF) - 2079421449) ^ (v0 + 13)) + v1) & 0xFFFFFFFC) - LODWORD(STACK[0x3D8]) == -2079419384)) ^ v0)))();
}

uint64_t sub_1000240BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3
                                                                       + 8
                                                                       * (int)(((v4 <= (((v5 + 40561166) | 0x594) ^ 0xEEB004D6))
                                                                              * ((v5 + 218945450) & 0xF55E17F7 ^ 0x670)) ^ (v5 + 40561906))))(a1, a2, a3, 4251303770);
}

uint64_t sub_10002412C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  uint64_t v59 = (*(uint64_t (**)(void, void, uint64_t))(v57 + 8 * (((v53 - 633) | 0x48) ^ 0xD76)))(LODWORD(STACK[0x4EC]), (v55 + v54 + 2), a46);
  int v66 = ((2 * v59) & 0xBFDFFCFC) + (v59 ^ 0xDFEFFE7E);
  unint64_t v67 = STACK[0x420];
  unint64_t v68 = STACK[0x420];
  if (v66 == -537919874)
  {
    unint64_t v70 = STACK[0x380];
    int v71 = (char *)&STACK[0x680] + STACK[0x380] - 0x74CFFF0833D7937CLL;
    STACK[0x568] = (unint64_t)(v71 + 1488);
    STACK[0x3E8] = (unint64_t)(v71 + 1716);
    LODWORD(STACK[0x468]) = 837403461;
    STACK[0x5E0] = v70 - 192;
    STACK[0x488] = 0;
    LODWORD(STACK[0x5B0]) = 2079419384;
    STACK[0x3F0] = (unint64_t)(v71 + 1488);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8 * (int)((v68 - 5) ^ ((4 * (v71 + 1488 == (char *)-248)) | (32 * (v71 + 1488 == (char *)-248))))))(v59, v60, v61, 3768594526, v62, v63, v64, v65, a9);
  }
  else if (v66 == -269484415)
  {
    LODWORD(STACK[0x46C]) = -526372673;
    return (*(uint64_t (**)(void))(v57
                                + 8
                                * (int)(((STACK[0x600] == 0) * ((((v67 - 597) | 0x400) - 822) ^ 0x2BA)) ^ (v67 + 483))))();
  }
  else
  {
    unsigned int v72 = 1178560073 * ((v56 & 0xE6D2436E | ~(v56 | 0xE6D2436E)) ^ 0xA3B9C4F3);
    *(void *)(v58 - 192) = a53;
    *(_DWORD *)(v58 - 200) = v72 + v66 - ((2 * v66 + 2097924) & 0x3EBED70E) + 1064267017;
    *(_DWORD *)(v58 - 196) = v67 - v72 + 1113;
    int v73 = v67;
    uint64_t v74 = (*(uint64_t (**)(uint64_t))(v57 + 8 * ((int)v67 + 1192)))(v58 - 200);
    return (*(uint64_t (**)(uint64_t))(v57
                                              + 8
                                              * (((STACK[0x600] == 0) * ((((v73 - 597) | 0x400) - 822) ^ 0x2BA)) ^ (v73 + 483))))(v74);
  }
}

uint64_t sub_100024378()
{
  *(void *)(v0 + 48) = *(void *)(v1 + 8 * (int)(STACK[0x420] - 1066));
  return sub_10005A044();
}

uint64_t sub_100024394()
{
  return 0;
}

uint64_t sub_1000243D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,unsigned int a33)
{
  unsigned int v35 = (a6 + 447467373) & 0xE554307F;
  int v36 = 628203409 * ((((v34 - 160) | 0x8BCD2C81) + (~(v34 - 160) | 0x7432D37E)) ^ 0x94520B3);
  *(_DWORD *)(v34 - 152) = v36 + a6 + 536;
  *(_DWORD *)(v34 - 148) = a12 - v36;
  *(void *)(v34 - 160) = a28;
  uint64_t v37 = (*(uint64_t (**)(uint64_t))(v33 + 8 * (a6 ^ 0x898)))(v34 - 160);
  unsigned int v38 = STACK[0x330] & 0x3F ^ (v35 - 27);
  *((unsigned char *)&STACK[0x2EC] + v38) = 107;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 8 * ((501 * (v38 > 0x37)) ^ a6)))(v37, a33, 141, 4013838779);
}

void sub_1000244F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v18 = 535753261 * ((((v17 - 144) | 0xBD960BE0) - (v17 - 144) + ((v17 - 144) & 0x4269F418)) ^ 0xB76205CF);
  *(_DWORD *)(v17 - 120) = v18 + v13 + (v16 ^ 0x31C37950);
  *(void *)(v17 - 144) = a13;
  *(_DWORD *)(v17 - 136) = (v16 + 361) ^ v18;
  *(void *)(v17 - 128) = v15;
  (*(void (**)(uint64_t))(v14 + 8 * (v16 ^ 0xAF5)))(v17 - 144);
  sub_100053EEC();
}

uint64_t sub_100024578()
{
  _DWORD *v2 = STACK[0x4EC];
  v2[85] = STACK[0x4A4];
  v2[86] = STACK[0x5DC];
  v2[87] = STACK[0x5CC];
  v2[88] = STACK[0x4AC];
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(void *)(v1 + 336) == 0) * (((((v0 ^ 0x49B) - 597) | 0x400) - 822) ^ 0x2BA)) ^ ((v0 ^ 0x49B) + 483))))();
}

uint64_t sub_1000245E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, unsigned int a19)
{
  a17 = &STACK[0x4313E3591B4C289];
  a19 = 1410 - 460628867 * ((&a17 & 0xA1039BA5 | ~(&a17 | 0xA1039BA5)) ^ 0x126AE627);
  uint64_t v21 = (*(uint64_t (**)(unint64_t **))(v20 + 18432))(&a17);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * (((2 * (a18 == 526347143)) | (16 * (a18 == 526347143))) ^ v19)))(v21);
}

void sub_10002467C(uint64_t a1)
{
  int v1 = 628203409 * (((a1 | 0x89B748DF) - a1 + (a1 & 0x7648B720)) ^ 0xB3F44EC);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 24) - 0x19A1466F6B3326CLL) - 2139852653;
  unsigned int v3 = *(_DWORD *)(a1 + 20) + v1 - 920573385;
  BOOL v4 = v2 < 0xFECE3BF5;
  BOOL v5 = v2 > v3;
  if (v3 < 0xFECE3BF5 != v4) {
    BOOL v5 = v4;
  }
  __asm { BRAA            X9, X17 }
}

void sub_100024760(uint64_t a1)
{
  int v1 = 1374699841 * ((a1 - 1542394297 - 2 * (a1 & 0xA410EE47)) ^ 0xC9E4F64E);
  __asm { BRAA            X14, X17 }
}

void IPaI1oem5iL(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

void sub_100024890(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x8DE5192BDC53166) = v1 - 1;
  sub_100024E64();
}

uint64_t sub_1000248AC@<X0>(uint64_t a1@<X6>, int a2@<W7>, int a3@<W8>)
{
  *((unsigned char *)&STACK[0x2AC] + (a3 + v3)) = *(unsigned char *)(v5 + a1 - 1618280891)
                                                      - ((2 * *(unsigned char *)(v5 + a1 - 1618280891)) & 0xD6)
                                                      - 21;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1793 * ((a2 + a3 + 1) < 0x40)) ^ (5 * (v4 ^ 0x72E)))))();
}

uint64_t sub_10002491C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 ^ 0x7D7) - 243) * (v1 == 483381750)) ^ v0)))();
}

uint64_t sub_10002494C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * ((105 * (v8 + 1 != v10 + 44)) ^ a3)))(a8);
}

void sub_100024A08(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)*(&off_10007DD80
                  + ((-35 * (dword_100081B80 ^ 0xD8 ^ qword_100081B78)) ^ byte_100073C90[byte_10006F140[(-35 * (dword_100081B80 ^ 0xD8 ^ qword_100081B78))] ^ 0x8C])
                  + 141);
  unsigned __int8 v3 = -35 * (*v2 ^ qword_100081B78 ^ 0xD8);
  int v4 = (uint64_t *)*(&off_10007DD80
                  + (byte_100073E94[(byte_10006F24C[v3 - 12] ^ 0x27) - 4] ^ v3)
                  + 46);
  unint64_t v5 = (unint64_t)&v9[*v4 ^ *v2];
  uint64_t v6 = 1226760413 * v5 + 0x5B705F9A26A579D8;
  uint64_t v7 = 1226760413 * (v5 ^ 0x5B705F9A26A579D8);
  uint64_t *v2 = v6;
  *int v4 = v7;
  LODWORD(v4) = *(_DWORD *)v2;
  uint64_t v8 = (char *)*(&off_10007DD80
               + ((-35 * ((qword_100081B78 - dword_100081B80) ^ 0xD8)) ^ byte_100073F90[byte_10006F340[(-35 * ((qword_100081B78 - dword_100081B80) ^ 0xD8))] ^ 0x8B])
               - 79)
     - 4;
  (*(void (**)(char *, uint64_t (*)()))&v8[8
                                                   * (byte_100073C90[byte_10006F14C[(-35 * ((v7 - (_BYTE)v4) ^ 0xD8)) - 12] ^ 0x8C] ^ (-35 * ((v7 - (_BYTE)v4) ^ 0xD8)))
                                                   + 17952])((char *)*(&off_10007DD80+ (byte_100073F98[(byte_10006F340[(-35* (v4 ^ 0xD8 ^ v7))] ^ 0xAB)- 8] ^ (-35 * (v4 ^ 0xD8 ^ v7)))+ 115)- 8, sub_100054614);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_100024BF0@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  int v7 = a1 - 1027;
  int v8 = (**(_DWORD **)(a2 - 0x139154EEB4327E8) ^ 0x2380DF27) + 1;
  **(_DWORD **)(a2 - 0x139154EEB4327E8) = v8 + v3 - (v6 & (2 * v8));
  BOOL v9 = v4 - 1314620802 > 763311293;
  if (v4 - 1314620802 < (int)(v2 ^ 0xAD7F37FC)) {
    BOOL v9 = 1;
  }
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((1417 * v9) ^ v7)))(615976035);
}

void sub_100024CC0()
{
  STACK[0x3F8] = v0;
  *(_DWORD *)(STACK[0x670] + ((LODWORD(STACK[0x45C]) + v1) & 0xFFFFFFFC)) = v2;
  JUMPOUT(0x100056778);
}

uint64_t sub_100024D00(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((v1 - 1140) ^ (*(_DWORD *)(v2 + 48 * (v4 + a1) + 36) == v4)) & 1) == 0)
                                * ((v1 - 1140) ^ 0x8B)) ^ v1)))();
}

void sub_100024D4C()
{
}

uint64_t sub_100024DCC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((a1 ^ 0x21F) + a1 - 754 - 259) * (v5 == a5)) ^ a1)))();
}

uint64_t sub_100024E08@<X0>(uint64_t a1@<X8>, uint64_t a2, char a3, unsigned int a4, uint64_t a5)
{
  a5 = a1;
  a4 = v6
     - 426
     + 535753261 * ((((2 * &a3) | 0x550EA4F0) - &a3 + 1433972104) ^ 0xA0735C57)
     + 1178;
  uint64_t v7 = (*(uint64_t (**)(char *))(v5 + 8 * (v6 + 1702)))(&a3);
  return sub_100024E64(v7);
}

void sub_100024E64()
{
  *(_DWORD *)(v0 + 68) = v1;
}

uint64_t sub_100024EA4()
{
  LODWORD(STACK[0x640]) = v0;
  return sub_100045688();
}

uint64_t sub_100024EC8(uint64_t a1)
{
  int v1 = 535753261 * ((a1 - 1922189914 - 2 * (a1 & 0x8D6DB5A6)) ^ 0x8799BB89);
  int v2 = *(_DWORD *)(a1 + 16) + v1;
  int v3 = *(_DWORD *)a1 ^ v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 24) - 0x139154EEB4327ECLL);
  unsigned int v6 = v4 - 1740488377;
  BOOL v5 = v4 - 1740488377 < 0;
  unsigned int v7 = 1740488377 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_10007DD80 + (v2 ^ 0x5AF))
                              + 8
                              * ((((v3 - 313536509) >= 4 * (unint64_t)v7)
                                * (((v2 - 1335) | 0x896) ^ 0x8F7)) ^ v2)
                              - 4))();
}

void sub_100024FA0(uint64_t a1@<X8>, int a2, uint64_t a3, int a4)
{
  unsigned int v8 = ((v5 - 652) | 0x22) - (((45929676 - v7) & 0xF4DA0A2A) + v6) + 2076929225;
  int v9 = 108757529 * ((&a2 - 141626625 - 2 * ((unint64_t)&a2 & 0xF78EF2FF)) ^ 0x171290D4);
  a4 = v8 ^ v9;
  a3 = a1;
  a2 = v9 + v5 + 48;
  (*(void (**)(int *))(v4 + 8 * (v5 ^ 0xDF9)))(&a2);
  JUMPOUT(0x100025040);
}

uint64_t sub_100025068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20
                                                                                         + 8
                                                                                         * (((*(_DWORD *)(a19 - 0x2C138C8FAF40FC0ALL) == (((v19 | 0x28) + 551) | 0xA4) + 526345875)
                                                                                           * (((v19 | 0x28) + 1566) ^ 0xC5E)) ^ (v19 | 0x28))))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1000250D4(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (int)((((((a1 + 1355388342) & 0xAF366FFF) - 995) ^ (a1 - 81)) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_100025114(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, char a6)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((v6 ^ 0x69 ^ a6)
                                                   + *(unsigned char *)(v10 + v8)
                                                   - *(unsigned char *)(*(void *)(v7 + 8 * ((v6 ^ 0x569) - 934)) - 8)) == 95)
                                * ((((v6 ^ 0x569) + a4) & a5) - 324)) ^ ((v6 ^ 0x569) + 86))))();
}

void sub_100025164(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 3804331 * ((a1 - 2 * (a1 & 0xF3A65B02) - 207201534) ^ 0x8D737EF4);
  int v2 = (char *)*(&off_10007DD80 + (v1 ^ 0x652)) - 4;
  int v3 = (*(unsigned char *)a1 ^ (-85 * ((a1 - 2 * (a1 & 2) + 2) ^ 0xF4)));
  (*(void (**)(char *, uint64_t (*)()))&v2[8 * v1 + 4336])((char *)*(&off_10007DD80 + (v1 ^ 0x6E2)) - 12, sub_10005316C);
  uint64_t v4 = *(void *)((char *)*(&off_10007DD80 + (v1 ^ 0x6DC)) - 4);
  unsigned int v6 = v1 + 1755732067 * (((&v5 | 0x1283C73D) - (&v5 & 0x1283C73D)) ^ 0xCC457AE6) - 1093;
  uint64_t v5 = v4;
  (*(void (**)(uint64_t *))&v2[8 * v1 + 4704])(&v5);
  __asm { BRAA            X9, X17 }
}

void sub_1000252D0()
{
  *(_DWORD *)(v0 - 0x2C138C8FAF40FC0ALL) = -526372781;
  sub_10003A2F4();
}

uint64_t sub_1000252F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int v13 = (_DWORD *)(v9 + 4 * (a7 + v11));
  int v14 = *(v13 - 8) ^ *(v13 - 3);
  int v15 = *(v13 - 16) ^ *(v13 - 14) ^ (v14 + v8 - (v7 & (2 * v14)));
  HIDWORD(v16) = v15 ^ (v8 + ((a5 - 16) | 0x2C0) - 704);
  LODWORD(v16) = v15;
  *int v13 = (v16 >> 31) + v8 - (v7 & (2 * (v16 >> 31)));
  return (*(uint64_t (**)(void))(v10 + 8 * ((1128 * (a7 + 1 == v12 + 80)) ^ (a5 + 204))))();
}

uint64_t sub_100025380@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X6>, unsigned int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  unint64_t v25 = (*(_DWORD *)(a1 + v23) ^ a4) + HIDWORD(v20);
  *(_DWORD *)(a1 + 4 * a3) = v25 + a4 - ((v18 + v19 + 1348 - 1588) & (2 * v25));
  *(_DWORD *)(a18 + v23) = HIDWORD(v25) | a4;
  BOOL v27 = v21 - 1504566317 > 1169184023 || v21 - 1504566317 < a2;
  return (*(uint64_t (**)(void))(v22 + 8 * ((v19 + 283) ^ (v27 * v24))))();
}

uint64_t sub_1000253F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  int v13 = (_DWORD *)STACK[0x3F0];
  *int v13 = v8 - 1;
  int v14 = &v13[6 * (v8 - 659196917)];
  int v15 = v14[2];
  STACK[0x3E8] = *((void *)v14 + 2);
  LODWORD(STACK[0x58C]) = v14[6];
  unsigned int v12 = (v9 + 476299861) & 0xE39C3BCF;
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (int)(((*(_DWORD *)(v10 + (int)((v12 ^ (a7 + 1026)) + v15) * (uint64_t)a8 + 36) == a6)
                                     * ((v12 - 2093457294) & 0x7CC79DDB ^ 0x2E8 ^ (3 * (v12 ^ 0x291)))) ^ v12)))();
}

void sub_1000254DC(uint64_t a1)
{
  int v1 = 1225351577 * (((a1 | 0xD0007703) - a1 + (a1 & 0x2FFF88FC)) ^ 0xF39AAF15);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1000255A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  a14 = 108757529 * ((-1250741474 - (&a13 | 0xB573331E) + (&a13 | 0x4A8CCCE1)) ^ 0xAA10AECA)
      - 504207030;
  uint64_t v15 = (*(uint64_t (**)(int *))(v14 + 17848))(&a13);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((1702 * (a13 == 526347143)) ^ 0x2D6u)))(v15);
}

uint64_t sub_100025664@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, uint64_t a5@<X5>, int a6@<W6>, uint64_t a7@<X8>)
{
  uint64_t v15 = (v9 + a4);
  *(unsigned char *)(v12 + v15 + 4) = ((v15 & 0xF) * v11) ^ *(unsigned char *)(a5 + v15) ^ *(unsigned char *)(v8 + (v15 & 0xF)) ^ *(unsigned char *)((v15 & 0xF) + v7 + 1) ^ *(unsigned char *)(a7 + (v15 & 0xF)) ^ v13;
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * (((((v10 + 1066) ^ a1) + v9 == (((v10 - 33) | a2) ^ (a6 + 2) ^ ((v10 - 48) | 2))) * a3) ^ (v10 + 968))))();
}

uint64_t sub_1000256B0(uint64_t result)
{
  if (v1 + v2 - 1 >= ((2 * (v5 ^ 0xC5)) ^ 0x7FFFFD73u)) {
    int v6 = -813990542 - v4;
  }
  else {
    int v6 = v4;
  }
  *int v3 = v6;
  *(_DWORD *)(result + 24) = 1310800152;
  return result;
}

uint64_t sub_1000256F0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 819) ^ 0x3A1) + (v2 ^ 0x61D)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_100025728@<X0>(uint64_t a1@<X4>, int a2@<W6>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + v4 + a1 - 1) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(a3 + v4) < 0x38) * a2) ^ (v3 - 484))))();
}

uint64_t sub_100025754(uint64_t a1)
{
  int v2 = 628203409 * (((a1 | 0xBB8CAEEC) - (a1 & 0xBB8CAEEC)) ^ 0x3904A2DF);
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  int v6 = *(_DWORD *)(a1 + 20) + v2;
  int v7 = *(_DWORD *)a1 - 368400025 + v2;
  unsigned int v8 = 235795823
     * (((&v10 | 0xDE5284D5) - &v10 + (&v10 & 0x21AD7B28)) ^ 0x4AFFCD8C);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = v4;
  uint64_t v16 = v3;
  unsigned int v11 = v8 + (v6 ^ 0xA7444C8) + 511336312 + ((2 * v6) & 0xE7AFCBFC ^ 0xE307426C);
  uint64_t v10 = v5;
  int v15 = v8 ^ (v7 + 1841);
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_10007DD80 + v7) + 8 * v7 + 16516))(&v10);
  *(_DWORD *)(a1 + 40) = v14;
  return result;
}

uint64_t sub_1000258C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unsigned int a18, unsigned int a19, int a20)
{
  unsigned int v23 = 1759421093 * ((&a17 - 826825291 - 2 * (&a17 & 0xCEB7A5B5)) ^ 0x7DCA15E1);
  HIDWORD(a17) = v23 ^ 0x241A7128;
  a18 = v23 + 1424;
  a20 = v23 ^ 0x4479276D;
  LODWORD(a17) = v23 ^ 0x19C79A77;
  (*(void (**)(unint64_t **))(v21 + 17696))(&a17);
  a17 = &STACK[0x4313E3591B4C2A1];
  a19 = 1410 - 460628867 * ((((2 * &a17) | 0x9D678C32) - &a17 + 827079143) ^ 0x82254464);
  uint64_t v24 = (*(uint64_t (**)(unint64_t **))(v21 + 18432))(&a17);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((63 * (a18 == (v20 ^ 0x915FFF71))) ^ v22)))(v24);
}

void sub_1000259E4()
{
  _DWORD *v0 = -526372781;
  sub_100059E34();
}

void sub_1000259F8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 3804331 * (((a1 | 0x51A664) - (a1 & 0x51A664)) ^ 0x7E848392);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100025ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * (v6 ^ (32 * (((((v6 - 1281) | 0x22) ^ ((v6 ^ 0x662) - 953)) & v7) == 281128576)))))(1313, a2, 4013838720, a4, a5, a6, 782);
}

void sub_100025B34()
{
  *(_DWORD *)(v0 + 32) = 526347143;
}

uint64_t sub_100025B80()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((55 * (qword_100082808 != 0)) ^ 0x3D4u)))();
}

uint64_t sub_100025BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  LODWORD(STACK[0x42C]) = 2079419384;
  return sub_10003D50C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100025BCC()
{
  STACK[0x290] = v0;
  STACK[0x2C0] = v2;
  STACK[0x498] = 0;
  int v6 = 235795823 * ((565679011 - ((v5 - 200) | 0x21B793A3) + ((v5 - 200) | 0xDE486C5C)) ^ 0x4AE52505);
  v3[1] = 0x6AF2A8617E594F5;
  unint64_t v7 = STACK[0x278];
  *(_DWORD *)(v5 - 200) = v6 ^ 0xC1674A5A;
  *(_DWORD *)(v5 - 164) = v1 - v6 - 1256;
  unint64_t v8 = STACK[0x280];
  v3[2] = v7;
  v3[3] = v8;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v1 ^ 0xEA0)))(v5 - 200);
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * (((*(_DWORD *)(v5 - 168) == ((v1 + 893794130) & 0xCAB9C35E) + 526346877)
                                              * (((v1 - 1495920606) & 0x5929EDDF) - 890)) ^ v1)))(v9);
}

uint64_t sub_100025CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (int)(((a5 + ((v6 + 1780187811) | 0x91C05009) + 161) * (v5 == 63)) ^ v6)))();
}

uint64_t sub_100025D24@<X0>(int a1@<W8>)
{
  int v4 = a1 - 1592;
  int v5 = (v4 - 412) | 0x301;
  uint64_t v6 = (*(uint64_t (**)(void))(v1 + 8 * (v4 ^ 0x8BA)))(*v3);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (((*v2 == 0) * (((v5 - 517) ^ 0x21F) - 765)) ^ v5)))(v6);
}

uint64_t sub_100025D7C()
{
  *uint64_t v3 = v3[623];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((((v0 - 690377574) & 0x292656BD) + 695657) | 0x2604800) ^ (v1 + 363))
                                 + ((((v0 - 690377574) & 0x292656BD) - 1186) | 0x60))
                                * (v4 == 1906244676)) ^ (v0 - 690377574) & 0x292656BD)))();
}

uint64_t sub_100025E08(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v1 = *(void *)(a1 + 16);
  int v3 = (*(_DWORD *)a1 ^ (235795823 * ((2 * (a1 & 0x5AD4AFC8) - a1 + 623595575) ^ 0xB186196E))) - 426522865;
  unsigned int v5 = v3
     + 1225351577
     * ((2 * ((&v5 ^ 0x618AC2C7) & 0x400DFC4D) - (&v5 ^ 0x618AC2C7) - 1074658382) ^ 0xFDE21963)
     + 1837;
  uint64_t v6 = v1;
  uint64_t v7 = v2;
  return (*(uint64_t (**)(unsigned int *))((char *)*(&off_10007DD80 + v3) + 8 * v3 + 17460))(&v5);
}

uint64_t sub_100025F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((((v11 + ((v13 - 1093410309) & 0x412C1FFE) - 1780) ^ a11) > 0x14)
                                * (((v13 + 776) | 0x84) ^ 0x9F3)) ^ v13)))();
}

void sub_100025F70(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)*(&off_10007DD80
                  + (byte_100073F90[byte_10006F340[(-35
                                                                                                  * ((qword_100081B78 + dword_100082738) ^ 0xD8))] ^ 0xAB] ^ (-35 * ((qword_100081B78 + dword_100082738) ^ 0xD8)))
                  + 85);
  unsigned __int8 v3 = -35 * ((qword_100081B78 + *v2) ^ 0xD8);
  int v4 = (uint64_t *)*(&off_10007DD80
                  + (byte_100073E94[(byte_10006F24C[v3 - 12] ^ 0xA9) - 4] ^ v3)
                  - 76);
  unint64_t v5 = (*v4 + *v2) ^ (unint64_t)&v9;
  uint64_t v6 = (1226760413 * v5) ^ 0x5B705F9A26A579D8;
  uint64_t v7 = 1226760413 * (v5 ^ 0x5B705F9A26A579D8);
  uint64_t *v2 = v6;
  *int v4 = v7;
  LODWORD(v4) = *(_DWORD *)v2;
  unint64_t v8 = (char *)*(&off_10007DD80
               + ((-35 * (dword_100082738 ^ 0xD8 ^ qword_100081B78)) ^ byte_100068B50[byte_100073B90[(-35 * (dword_100082738 ^ 0xD8 ^ qword_100081B78))] ^ 0xF1])
               - 75)
     - 4;
  (*(void (**)(char *, uint64_t (*)()))&v8[8
                                                   * (byte_100068B54[(byte_100073B90[(-35 * ((v7 - (_BYTE)v4) ^ 0xD8))] ^ 0xF1)
                                                                                    - 4] ^ (-35
                                                                                          * ((v7 - (_BYTE)v4) ^ 0xD8)))
                                                   + 16424])((char *)*(&off_10007DD80+ ((-35 * (v4 ^ 0xD8 ^ v7)) ^ byte_100073F90[byte_10006F340[(-35 * (v4 ^ 0xD8 ^ v7))] ^ 0x50])+ 50)- 8, sub_100054614);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100026158(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5
                              + 8 * (int)((((v2 + ((v4 + 1874713167) & 0xFD6BBE6D) - 174) ^ 0x4D3) * (v3 == a2)) ^ v4)))();
}

uint64_t sub_10002619C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((856 * (v0 < 0xE4D5C22F)) ^ 0x164)))();
}

uint64_t sub_100026208(uint64_t a1, int a2)
{
  uint64_t v9 = (v4 + v3 - v6);
  int8x8_t v10 = vrev64_s8(*(int8x8_t *)(v7 - 7 + v9));
  *(int8x8_t *)(v2 - 7 + v9) = vrev64_s8(vadd_s8(vsub_s8(v10, vand_s8(vadd_s8(v10, v10), (int8x8_t)0xD6D6D6D6D6D6D6D6)), (int8x8_t)0xEBEBEBEBEBEBEBEBLL));
  LODWORD(v9) = ((a2 - 636) ^ 0x134) + v6 == (v5 & 0xFFFFFFF8);
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((2 * v9) | (4 * v9) | a2)))();
}

uint64_t sub_100026278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39)
{
  return sub_100042874(a29, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (uint64_t)&a39, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_10002628C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * (((*(_DWORD *)(a16 + 4 * (v19 + v18 + 1990)) == v16 + v17 - 1682 - 307)
                                * (v17 ^ 0x2A1)) ^ (v17 - 1682))))();
}

uint64_t sub_1000262D8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  __int16 v2 = *(_DWORD *)result + 26185 * ((2 * (result & 0x1A68) - result - 6761) ^ 0x9DF5);
  *(_DWORD *)(v1 - 0x72E93EC0CCAF5722) = (((2 * (v2 & 0x1FF ^ 0x62890305)) & 0xC01006F2)
                                          - (v2 & 0x1FF ^ 0x62890305)
                                          + 384929926) ^ 0x9768242B;
  *(void *)(v1 - 0x72E93EC0CCAF5742) = 0xAA8110E443B50625;
  *(_DWORD *)(v1 - 0x72E93EC0CCAF5726) = 1335561202;
  int v3 = v2 ^ 0x75;
  if (v3 == 1)
  {
    int v4 = 1335561218;
    goto LABEL_5;
  }
  if (v3 == 2)
  {
    *(_DWORD *)(v1 - 0x72E93EC0CCAF572ALL) = 402897470;
    int v4 = 1335561222;
LABEL_5:
    *(void *)(v1 - 0x72E93EC0CCAF573ALL) = 0x341CF047BC9478CFLL;
    *(void *)(v1 - 0x72E93EC0CCAF5732) = 0xCBE30FB8436B8730;
    *(_DWORD *)(v1 - 0x72E93EC0CCAF5726) = v4;
  }
  *(_DWORD *)(result + 4) = 261852838;
  return result;
}

uint64_t sub_100026448(uint64_t result)
{
  *(_DWORD *)(result + 4) = 99788384;
  return result;
}

void sub_100026458(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10002657C@<X0>(unsigned int a1@<W3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((174 * (a2 + 1 == v3 + 24)) ^ a1)))();
}

uint64_t sub_100026644()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((57 * (v1 - 1667755606 < ((v0 + 2002) ^ 0xFFFFF7EA))) ^ (v0 + 2002))))();
}

uint64_t sub_10002667C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = v2 + a2;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((22 * (v5 - v2 + (((v3 - 1035) | 0x401u) ^ 0x26A80733) > 7)) ^ v3)))();
}

uint64_t sub_1000266D4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(a8 - 7 + (v11 + v9 - v12)) = *(void *)(v8 - 7 + (v11 + v9 - v12));
  return (*(uint64_t (**)(void))(v13 + 8 * ((1294 * (v12 + ((a2 - 729) | 0x403) - 1223 == (v10 & 0xFFFFFFF8))) ^ a2)))();
}

uint64_t sub_100026728()
{
  int v3 = v0;
  uint64_t v4 = (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ 0xCA9)))();
  STACK[0x5E0] -= 16;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((v3 == 526347143) * ((((v1 - 1830195628) & 0x6D168F7E) - 366) ^ 0xA6F)) ^ (v1 - 1830195628) & 0x6D168F7E)))(v4);
}

uint64_t sub_1000267A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * (int)((((((v17 - 1023) ^ (v16 == 0)) & 1) == 0) * (((v17 + 1245419505) & 0xB5C4660F) - 476)) ^ v17)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a1, a11, a12, a13, a14, v19 - 0x3768F75C95423C39, a16, v19 - 0x3768F75C95423D49);
}

uint64_t sub_1000268C8@<X0>(unsigned int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  if (!a3) {
    return (*(uint64_t (**)(void))(v60
  }
                                + 8
                                * ((963 * ((a14 & 0xFFFFFFF0) == a2 + 56 * (v59 ^ (v59 - 5)) + 964)) ^ (v58 + v59 + 910))))();
  if (a3 != 3) {
    return (*(uint64_t (**)(void))(v60 + 8 * ((185 * (*(_DWORD *)(v61 + 48 * v62 + 36) + v63 < a1)) ^ 0x118)))();
  }
  uint64_t v64 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 48 * v62 + 8))(a5, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * ((905 * (v64 + 526347143 - ((2 * v64) & 0x3EBED70E) == 526347143)) ^ (v59 + 552401151))))(v64, v65, v66, v67, 526347143, 3452455880, 2147483652, 1883609044, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_100026A38(double a1, double a2, double a3, double a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  uint64_t v17 = v15 - 2144134811 + v14 + 1481 + ((a11 - 947) | 0x42u);
  int8x16_t v18 = vrev64q_s8(*(int8x16_t *)(v12 + v17 - 15));
  int8x16_t v19 = vextq_s8(v18, v18, 8uLL);
  int8x16_t v20 = vrev64q_s8(*(int8x16_t *)(v12 + v17 - 31));
  int8x16_t v21 = vextq_s8(v20, v20, 8uLL);
  uint64_t v22 = v11 + v17;
  int8x16_t v23 = vrev64q_s8(vaddq_s8(vsubq_s8(v19, vandq_s8(vaddq_s8(v19, v19), a5)), a6));
  *(int8x16_t *)(v22 - 15) = vextq_s8(v23, v23, 8uLL);
  int8x16_t v24 = vrev64q_s8(vaddq_s8(vsubq_s8(v21, vandq_s8(vaddq_s8(v21, v21), a5)), a6));
  *(int8x16_t *)(v22 - 31) = vextq_s8(v24, v24, 8uLL);
  return (*(uint64_t (**)(void))(v16 + 8 * ((75 * ((v13 & 0xFFFFFFE0) == 32)) ^ (a11 + 452))))();
}

uint64_t sub_100026AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(unsigned char *)(a5 + (v7 ^ v6) + v8) = v11;
  return (*(uint64_t (**)(void))(v12 + 8 * ((((unint64_t)(v8 + v10) < 0x40) * v9) ^ v5)))();
}

uint64_t sub_100026B10@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 448) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 2312))(0);
}

uint64_t sub_100026B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  BOOL v22 = (unint64_t)&STACK[0x2AC] + ~a18 + v18 + ((v20 + 1483904863) & 0xA78D67CF ^ (v19 + 2268)) < (unint64_t)((v20 + 159107108) & 0xF684335F) - 844;
  return (*(uint64_t (**)(void))(v21 + 8 * ((2 * v22) | (32 * v22) | v20)))();
}

uint64_t sub_100026BE4()
{
  *(_DWORD *)(v2 + 52) += ((v0 - 1683) | 0x88) ^ 0x8D;
  uint64_t v5 = v1 + (v0 ^ 0x6D5u) - 2498;
  STACK[0x3F8] = v5;
  STACK[0x5E0] = v5;
  LODWORD(STACK[0x5D8]) = v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((303 * (STACK[0x460] == 0)) ^ v0)))();
}

uint64_t sub_100026C4C@<X0>(uint64_t a1@<X8>, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v11 = 3804331 * (&a3 ^ 0x7ED525F6);
  a5 = a1;
  a6 = v7;
  a7 = v11 + 1594874511;
  a3 = v11 + v9 - 1297688397 + ((v10 - 905232660) & 0x35F4C6FA);
  a4 = v11 + v10 + 259;
  uint64_t v12 = (*(uint64_t (**)(int *))(v8 + 8 * (v10 + 2018)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((1799 * (*(_DWORD *)(v7 - 0x2C138C8FAF40FC0ALL) == 526347143)) ^ v10)))(v12);
}

uint64_t sub_100026D08()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((STACK[0x420] - 1019) * (v1 > v0 + 623)) ^ (STACK[0x420] - 687))))();
}

uint64_t sub_100026D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v7
                                                                      + 8
                                                                      * (((((v5 == a5) ^ (v6 - 5)) & 1)
                                                                        * (((v6 - 72893933) & 0x45847DF) - 1473)) ^ v6)))(a1, a2, a3, (v6 + 1617728251) & 0x9F936B7F);
}

uint64_t sub_100026D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, int a11, unint64_t *a12, uint64_t a13, unsigned int a14)
{
  unsigned int v17 = 3804331 * (((&a10 | 0x81ADAAE9) + (~&a10 | 0x7E525516)) ^ 0xFF788F1E);
  a12 = &STACK[0x1244BACB8843828D];
  a13 = v15;
  a14 = v17 + 1605043039;
  a10 = v17 + 483381754;
  a11 = v17 + v14 - 550;
  uint64_t v18 = (*(uint64_t (**)(unsigned int *))(v16 + 8 * (v14 ^ 0xCD9)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v15 - 0x2C138C8FAF40FC0ALL) == 526347143)
                                              * (((v14 - 937260341) & 0x37DD77EE) + 1313)) ^ v14)))(v18);
}

uint64_t sub_100026E7C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((4 * (*v2 < 0x15u)) | ((*v2 < 0x15u) << 6)) ^ (a1 - 1240))))();
}

uint64_t sub_100026EA4()
{
  uint64_t v6 = *(void *)(v9 + 24);
  int v7 = 1224239923 * ((((v5 - 144) | 0x5ECCF06D) + (~(v5 - 144) | 0xA1330F92)) ^ 0xAC7F0DBB);
  *(_DWORD *)(v5 - 144) = v7 ^ 0x4329A48E;
  *(void *)(v5 - 136) = v10;
  *(_DWORD *)(v5 - 128) = v7 + v3 + 1826;
  (*(void (**)(uint64_t))(v4 + 8 * (v3 ^ 0x9D0)))(v5 - 144);
  *(void *)(v5 - 144) = v1;
  *(void *)(v5 - 136) = v10;
  *(void *)(v5 - 104) = v0;
  *(void *)(v5 - 128) = v0;
  *(void *)(v5 - 120) = v2;
  *(_DWORD *)(v5 - 112) = v3
                        + 1224239923 * ((2 * ((v5 - 144) & 0x10151408) - (v5 - 144) - 269816843) ^ 0x1D591622)
                        + 840;
  (*(void (**)(uint64_t))(v4 + 8 * (v3 + 1978)))(v5 - 144);
  *(_DWORD *)(v5 - 128) = v3 + 1374699841 * ((v5 - 144) ^ 0x6DF41809) + 1504;
  *(void *)(v5 - 144) = v0;
  *(void *)(v5 - 136) = v6;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v3 ^ 0x9D1)))(v5 - 144);
}

uint64_t sub_100026FEC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((110 * (((((v1 ^ 0xF06) + 996) | 0x200) ^ 0xF8585898) + v0 > 0x7FFFFFFE)) ^ v1 ^ 0xF06)))();
}

uint64_t sub_100027038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v5 = v4 + 173;
  *(unsigned char *)(a1 + (v3 - 633261842) + 4) = (2 * (**(unsigned char **)(a2 + 8) & 0xF) + (**(unsigned char **)(a2 + 8) ^ 0x8F)) ^ 0x80;
  unsigned int v6 = *(_DWORD *)(a2 + 4) + 703128494;
  BOOL v7 = v6 < 0xA5DA4FA6;
  BOOL v8 = v6 > 0xA5DA4FA7;
  if (v7) {
    BOOL v8 = v7;
  }
  return (*(uint64_t (**)(void))(a3 + 8 * ((735 * v8) ^ v5)))();
}

uint64_t sub_1000270EC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (2030 * (v1 != 0x7FE9FC69)))))();
}

uint64_t sub_100027144(int a1)
{
  unsigned int v5 = (((a1 + 39) | 0x38) ^ 0xFFFFFEC6) + *(unsigned __int8 *)(v3 + 1);
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v1 & (2 * v5)) + (v5 ^ v2) != v2) * (49 * (a1 ^ 0x158) - 20)) ^ a1)))();
}

uint64_t sub_100027198(int8x16_t a1, int8x8_t a2, uint64_t a3, char a4, int a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  char v58 = v51 - 8;
  uint64_t v59 = (a6 + a5 - 8);
  v61.val[0].i64[0] = ((_BYTE)a6 + (_BYTE)a5 - 8) & 0xF;
  v61.val[0].i64[1] = ((_BYTE)a6 + v56 - 8) & 0xF;
  v61.val[1].i64[0] = ((_BYTE)a6 + v55 - 8) & 0xF;
  v61.val[1].i64[1] = ((_BYTE)a6 + v58) & 0xF;
  v61.val[2].i64[0] = ((_BYTE)a6 + v58 + (a8 ^ 1)) & 0xF;
  v61.val[2].i64[1] = ((_BYTE)a6 + v54 - 8) & 0xF;
  v61.val[3].i64[0] = ((_BYTE)a6 + a4 - 8) & 0xF;
  v61.val[3].i64[1] = ((_BYTE)a6 + v52 - 8) & 0xF;
  *(int8x8_t *)(a10 + v59) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v49 + (v59 & 0xF) - 7), *(int8x8_t *)(a10 + v59)), veor_s8(*(int8x8_t *)((v59 & 0xF) + v48 - 5), *(int8x8_t *)((v59 & 0xF) + v50 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v61, a1), a2)));
  return (*(uint64_t (**)(void))(a48 + 8 * (((a6 != v53 + 8) * v57) ^ a8)))();
}

uint64_t sub_1000271BC(double a1)
{
  double *v2 = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v3) ^ v1)))();
}

uint64_t sub_1000271E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  LODWORD(STACK[0x5D8]) = a4 + 10;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6
                                                     + 8
                                                     * (((v5 != 0)
                                                       * ((((5 * (v4 ^ 0x9D)) ^ 0x6E7) - 75) ^ (5 * (v4 ^ 0x9D) - 603))) ^ (5 * (v4 ^ 0x9D) - 415))))(a1, v5);
}

uint64_t sub_1000271F8@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  LODWORD(STACK[0x5D8]) = a2;
  return (*(uint64_t (**)(uint64_t, unint64_t))(v3
                                                              + 8
                                                              * (((STACK[0x370] != 0)
                                                                * ((((v2 - 1720521059) & 0x668D157B ^ 0x6E7) - 75) ^ (((v2 - 1720521059) & 0x668D157B) - 603))) ^ (((v2 - 1720521059) & 0x668D157B) - 415))))(a1, STACK[0x370]);
}

uint64_t sub_10002721C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((79 * (v1 != 2079419384)) ^ 0x5BAu)))();
}

uint64_t sub_100027250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = v3 - (**(unsigned char **)(a2 + 8) == 0);
  *(_DWORD *)(*(void *)(a1 + 96) + 800) = 1057444614;
  *(_DWORD *)(*(void *)(a1 + 96) + 804) = 1740488377;
  *(void *)(*(void *)(a1 + 96) + 808) = *(void *)(a1 + 96) + 816;
  uint64_t v5 = *(void *)(a1 + 96) + 0x139154EEB432B10;
  unsigned int v6 = 1178560073
     * (((&v8 ^ 0xF4D518DC | 0xA372392C)
       - (&v8 ^ 0xF4D518DC)
       + ((&v8 ^ 0xF4D518DC) & 0x5C8DC6D0)) ^ 0xED335992);
  uint64_t v9 = *(void *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v4);
  uint64_t v10 = v5;
  unsigned int v12 = v6 + v4 - 932059834;
  unsigned int v8 = v6 + 652;
  (*(void (**)(unsigned int *))(a3 + 18480))(&v8);
  return (v11 - 1310800152);
}

uint64_t sub_100027278@<X0>(int a1@<W1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((63
                                * (((*(_DWORD *)(*v4 + 4 * a2) == v3) ^ ((a1 - 111) ^ (41 * (a1 ^ 0x9C)))) & 1)) ^ a1)))();
}

uint64_t sub_1000272C0()
{
  int v5 = (v2 ^ 0x3C1) + *(unsigned __int8 *)(v3 + 7) - 821;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1561 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v2)))();
}

void sub_100027300(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x139154EEB4327ECLL);
  int v4 = v2 - 1740488377;
  BOOL v3 = v2 - 1740488377 < 0;
  int v5 = 1740488377 - v2;
  if (!v3) {
    int v5 = v4;
  }
  int v1 = *(_DWORD *)a1 - 235795823 * ((a1 + 1658036232 - 2 * (a1 & 0x62D3A008)) ^ 0xF67EE951);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_100027430(int a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v4 + 96) + 1428) = 642161872;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(_DWORD *)(a2 + 4) == v2 + 1441)
                                * (((a1 - 820) | 0x4AC) ^ ((a1 - 660) | 0x11C) ^ 0x1DC)) ^ a1)))();
}

uint64_t sub_100027490()
{
  STACK[0x380] = v1;
  *(void *)(v2 + 304) = v1 - 112;
  return v0();
}

uint64_t sub_1000274AC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((242 * ((v0 ^ 0x81 ^ (11 * ((v1 - 1726880331) & 0x66EE1555 ^ 0x5F))) > 7)) ^ v1)))();
}

uint64_t sub_100027504()
{
  (*(void (**)(void))(v2 + 8 * (v1 + 1175)))();
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((2 * (*(void *)(v0 + 128) == 0)) | (8 * (*(void *)(v0 + 128) == 0))) ^ (v1 + 423))))();
}

uint64_t sub_10002753C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (int)(((((a2 + 606949179) & 0xDBD2AEFB) - 1113) * (v2 == v3)) | a2)))();
}

uint64_t sub_10002757C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1048 * (v5 + 1 == v7 + 64)) ^ a5)))();
}

uint64_t sub_100027638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,uint64_t a32,_DWORD *a33,_DWORD *a34)
{
  *a33 = 405273881;
  uint64_t v37 = (*a34 + 1853291894);
  uint64_t v38 = 1374699841
      * ((((2 * (v36 - 144)) | 0x57CB64B05A500F2) - (v36 - 144) - 0x2BE5B2582D28079) ^ 0xCB2C529EF269870);
  int v39 = (v34 + 948342127) ^ (1374699841 * ((((2 * (v36 - 144)) | 0x5A500F2) - (v36 - 144) + 2100133767) ^ 0xEF269870));
  *(_DWORD *)(v36 - 104) = v39 ^ 0x3D;
  *(_DWORD *)(v36 - 116) = v39;
  *(_DWORD *)(v36 - 112) = (v34 + 948342189) ^ (1374699841
                                              * ((((2 * (v36 - 144)) | 0x5A500F2) - (v36 - 144) + 2100133767) ^ 0xEF269870));
  *(_DWORD *)(v36 - 144) = 1374699841 * ((((2 * (v36 - 144)) | 0x5A500F2) - (v36 - 144) + 2100133767) ^ 0xEF269870)
                         + v34
                         - 1542247033;
  *(_DWORD *)(v36 - 120) = -1374699841 * ((((2 * (v36 - 144)) | 0x5A500F2) - (v36 - 144) + 2100133767) ^ 0xEF269870);
  *(void *)(v36 - 136) = v38 + 2222530445;
  *(void *)(v36 - 128) = v37 ^ v38;
  uint64_t v40 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (v34 ^ a31)))(v36 - 144);
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * *(int *)(v36 - 108)))(v40);
}

void sub_100027640(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((a1 - 2 * (a1 & 0x7A08EF3) + 127962867) ^ 0xD9663328));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000276D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((62 * (((-338938380 << (3 * (a6 ^ 0xA6) - 106)) & 0xBF57FFBE) == 0x97106BA8)) ^ a6)))();
}

uint64_t sub_1000276DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((((v8 & 8) == ((a8 + 1852080519) & 0x919B7C77) - 1109) * (((a8 - 1334) | 0x83) ^ 0x169)) ^ a8)))();
}

uint64_t sub_100027730@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, int a5, uint64_t a6, unint64_t *a7, int a8, unint64_t *a9, char a10, int a11)
{
  uint64_t v14 = *(void *)(v11 + 8);
  unsigned int v15 = 1755732067
      * (((&a4 | 0xA5876138) - &a4 + (&a4 & 0x5A789EC0)) ^ 0x7B41DCE3);
  a8 = v15 + 1172345066 + v13;
  a9 = &STACK[0x53A673BF11B47F2B];
  a6 = v14;
  a7 = &STACK[0x6F16120776D4F6DF];
  a10 = (99 * (((&a4 | 0x38) - &a4 + (&a4 & 0xC0)) ^ 0xE3)) ^ 0xDF;
  a5 = ((a1 ^ 0x7ABCAEBD) + 1744142240 + ((a1 << ((v13 + 116) ^ 0xE4)) & 0x75B7C9C2 ^ 0x868080)) ^ v15;
  a4 = &STACK[0x708F6A420CBDE15B];
  uint64_t v16 = (*(uint64_t (**)(unint64_t **))(v12 + 8 * (v13 ^ 0x857)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * ((1677 * (a11 == 526347143)) ^ v13)))(v16);
}

uint64_t sub_100027870(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return sub_1000278FC(a1, ((a4 - 1749) ^ 0xDB75D9FC) + a2, 2603874049, 1691094995, 1941443190, 1534449920, 643790582, 3651178462);
}

uint64_t sub_1000278FC(uint64_t a1, int a2, int a3, int a4, int a5, int a6)
{
  int v9 = v6 + a5 + ((v8 + a3) & a4);
  BOOL v11 = v9 > a6 || v9 < a2;
  return (*(uint64_t (**)(void))(v7 + 8 * (v8 | (2 * v11))))();
}

uint64_t sub_100027934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v71 = 235795823 * (((v70 - 200) & 0x502C1621 | ~((v70 - 200) | 0x502C1621)) ^ 0x3B7EA087);
  unsigned int v72 = (void *)(v70 - 200);
  v72[1] = 0x6AF2A8617E594F5;
  v72[2] = a67;
  v72[3] = a68;
  *(_DWORD *)(v70 - 200) = v71 ^ 0xC1674A5F;
  *(_DWORD *)(v70 - 164) = v68 - v71 - 525;
  uint64_t v73 = (*(uint64_t (**)(uint64_t))(v69 + 8 * (v68 + 1403)))(v70 - 200);
  return (*(uint64_t (**)(uint64_t))(v69
                                            + 8
                                            * (((*(_DWORD *)(v70 - 168) != ((v68 - 547373455) & 0x20A03E5E ^ 0x1F5F6BC9))
                                              * ((v68 ^ 0x330) + 173)) ^ v68)))(v73);
}

uint64_t sub_100027A18()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v0 + 336) == 0) * ((((v1 - 597) | 0x400) - 822) ^ 0x2BA)) ^ (v1 + 483))))();
}

uint64_t sub_100027A54()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 + 484) * (v0 == v1)) ^ v2)))();
}

void sub_100027A78()
{
  int v7 = ((v6 - 1244544018 - 2 * ((v6 - 144) & 0xB5D1C47E)) ^ 0xF45BC1C) * v3;
  *(void *)(v6 - 128) = v0;
  *(void *)(v6 - 120) = v5;
  *(_DWORD *)(v6 - 140) = (v1 | 0x200) - v7 + 855;
  *(_DWORD *)(v6 - 136) = v2 + v7 + ((61 * ((v1 | 0x200) ^ 0x21B)) ^ 0x2B080A96);
  (*(void (**)(uint64_t))(v4 + 8 * ((v1 | 0x200) ^ 0xB13)))(v6 - 144);
  JUMPOUT(0x10001E804);
}

uint64_t sub_100027AFC@<X0>(uint64_t a1@<X8>)
{
  int v4 = *(_DWORD *)(v3 - 0x139154EEB4327ECLL);
  int v5 = v4 - 1740488377;
  if (v4 - 1740488377 < 0) {
    int v5 = 1740488377 - v4;
  }
  *(_DWORD *)(v2 - 0x139154EEB4327ECLL) = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((111
                                * ((v5 ^ 0xEFADFBFA)
                                 + 1020526464
                                 + ((v5 << (v1 - 67 + ((v1 - 10) | 0xA) + 16)) & 0xDF5BF7F4) != 746716026)) ^ (v1 - 619))))();
}

void gLg1CWr7p()
{
  uint64_t v0 = (uint64_t)*(&off_10007DD80
                + ((-35 * ((qword_100081B78 + dword_100082750) ^ 0xD8)) ^ byte_100073F90[byte_10006F340[(-35 * ((qword_100081B78 + dword_100082750) ^ 0xD8))] ^ 0x68])
                - 99);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = *(&off_10007DD80
       + (byte_100073F98[(byte_10006F340[(-35 * ((qword_100081B78 + v1) ^ 0xD8))] ^ 0x8B)
                                        - 8] ^ (-35 * ((qword_100081B78 + v1) ^ 0xD8)))
       - 141);
  uint64_t v3 = *v2 - v1 - (void)&v5;
  *(void *)(v0 - 4) = (1226760413 * v3) ^ 0x5B705F9A26A579D8;
  void *v2 = 1226760413 * (v3 ^ 0x5B705F9A26A579D8);
  v6[1] = 108757529 * ((v6 + 70320331 - 2 * (v6 & 0x43100CB)) ^ 0xE4AD62E0) - 504207030;
  LOBYTE(v2) = -35 * ((*(_DWORD *)v2 - *(_DWORD *)(v0 - 4)) ^ 0xD8);
  int v4 = (char *)*(&off_10007DD80
               + ((-35 * ((qword_100081B78 + dword_100082750) ^ 0xD8)) ^ byte_100068C50[byte_100073D90[(-35 * ((qword_100081B78 + dword_100082750) ^ 0xD8))] ^ 0xCA])
               + 112)
     - 4;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_100073E94[(byte_10006F24C[v2 - 12] ^ 0x27)
                                                                       - 4] ^ v2)
                                      + 17496])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100027DE8@<X0>(uint64_t a1@<X5>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _DWORD *a16)
{
  unint64_t v20 = (*a16 ^ (a2 + (v17 ^ 0x6B8) + 728 - 921))
      + (**(_DWORD **)(v16 - 0x139154EEB4327E8) ^ a2)
      * (unint64_t)(**(_DWORD **)(v16 - 0x139154EEB4327E8) ^ a2);
  uint64_t v21 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v18 + 8 * (((v17 ^ 0x6B8) + 1918) ^ (103 * (v19 > 1))));
  return v21(v20 + 0x30530205DD195846 - ((2 * v20) & 0x60A6040BBA32B08CLL), 3103670704, 810745870, v16 - 0x139154EEB4327E8, v21, a1, 2446764576, v19 - 1555464716, a3, a4, a5);
}

uint64_t sub_100027FE4@<X0>(unint64_t a1@<X0>, int a2@<W1>, unint64_t a3@<X2>, int a4@<W6>, int a5@<W7>, unsigned int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  BOOL v33 = v20 > v30;
  int v34 = v27 + a4;
  int v35 = v27 + 1;
  uint64_t v36 = 4 * (v35 + a4);
  uint64_t v37 = (*(_DWORD *)(a20 + v36) ^ a6) + ((v21 + 503) ^ HIDWORD(a1));
  unint64_t v38 = HIDWORD(v23)
      + v31 * (unint64_t)(*(_DWORD *)(*v29 + v36) ^ a6)
      + ((v37 + (v24 ^ (a2 + 184)) - (v26 & (2 * v37))) ^ a3);
  *(_DWORD *)(a20 + 4 * v34) = v38 + a6 - (v22 & (2 * v38));
  if (v33 == v35 + v32 < -1175863809) {
    BOOL v33 = v35 + v32 < a5;
  }
  return (*(uint64_t (**)(void))(v28 + 8 * (v25 | (4 * v33))))();
}

uint64_t sub_100028090@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(_DWORD *)(v1 - 0x2C138C8FAF40FC12) == ((2 * (a1 ^ 0x456)) ^ 0xD7971BF))
                                * ((a1 ^ 0x456) - 65)) ^ a1)))();
}

uint64_t sub_1000280E0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1020
                                * (((LODWORD(STACK[0x4E8]) - 2079419384) ^ 0xBCE8FFFFB7F7F5F2)
                                 + 0x4317000127EE6504
                                 + (((unint64_t)(LODWORD(STACK[0x4E8]) - 2079419384) << (3 * (v0 ^ 0x23u) + 112)) & 0x16FEFEBE4) != 3756415734)) ^ v0)))();
}

uint64_t sub_100028174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(a5 + (v6 + v9)) = *(unsigned char *)(v11 + a6 - 281128576);
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((207 * (v9 + v6 + 1 < (v8 ^ (4 * ((v7 - 1219) | 0x513u))) + 56)) ^ ((v7 - 1219) | 0x513))))();
}

uint64_t sub_1000281D0@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v7 + v5)) = *(unsigned char *)(v4 + (v7 + v5));
  return (*(uint64_t (**)(void))(v1 + 8 * ((v6 ^ (v7 - 1 == v2)) & 1 | v3)))(0);
}

uint64_t sub_100028204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v28 = 628203409 * ((~((v27 - 168) | 0x9F6F2C5F) + ((v27 - 168) & 0x9F6F2C5F)) ^ 0xE218DF93);
  *(_DWORD *)(v27 - 160) = v28 + v24 + 602;
  *(_DWORD *)(v27 - 156) = 1045653968 - v28;
  *(void *)(v25 + 392) = a24;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v24 + 2234)))(v27 - 168);
  return a20(v29);
}

uint64_t sub_100028280()
{
  *(void *)(v5 - 120) = v1;
  *(void *)(v5 - 112) = v2;
  *(_DWORD *)(v5 - 128) = v3
                        - 108757529 * ((2 * ((v5 - 128) & 0x2474F870) - (v5 - 128) - 611645560) ^ 0x3B1765A3)
                        + 1067;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v3 + 1662)))(v5 - 128);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * (((v4 != ((v3 + 725) ^ 0x56B25506)) * (7 * (v3 ^ 0x2C1) - 1092)) ^ v3)))(v6);
}

uint64_t sub_10002832C(uint64_t result)
{
  unint64_t v1 = 1374699841 * ((result - 2 * (result & 0xA8F7ECC532399345) - 0x5708133ACDC66CBBLL) ^ 0xA6FB72C95FCD8B4CLL);
  unint64_t v2 = *(void *)(result + 16) ^ v1;
  unint64_t v3 = *(void *)(result + 8) - v1;
  BOOL v4 = v2 >= v3;
  BOOL v5 = (uint64_t)v2 < (uint64_t)v3;
  int v6 = !v4;
  if (((*(_DWORD *)(result + 24) + 1374699841 * ((result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C)) & 1) == 0) {
    BOOL v5 = v6;
  }
  BOOL v7 = !v5;
  uint64_t v8 = 32;
  if (!v7) {
    uint64_t v8 = 28;
  }
  *(_DWORD *)(result + 36) = *(_DWORD *)(result + 40) ^ (1374699841
                                                       * ((result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C)) ^ *(_DWORD *)(result + v8) ^ (1374699841 * ((result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C));
  return result;
}

uint64_t sub_1000283BC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((28
                                * ((((unint64_t)(v4 - v5 - 4) < 0x20) ^ (53 * ((2 * a4) ^ 0xB8)
                                                                                               + 1)) & 1)) | (2 * a4))))();
}

uint64_t sub_100028408@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  uint64_t v11 = (v5 + a1);
  *(unsigned char *)(v10 + v11) = *(unsigned char *)(v7 + v11) ^ *(unsigned char *)(v2 + (v11 & 0xF)) ^ *(unsigned char *)(a2 + (v11 & 0xF)) ^ *(unsigned char *)((v11 & 0xF) + v3 + 2) ^ (((v5 + a1) & 0xF) * v6) ^ v8;
  return (*(uint64_t (**)(void))(v9 + 8 * ((54 * ((v11 + 1) < 0x150)) ^ v4)))();
}

uint64_t sub_100028474(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53)
{
  int v53 = *a1 ^ (3804331 * (((a1 | 0xD29CC998) - (a1 | 0x2D633667) + 761476711) ^ 0xAC49EC6E));
  unsigned int v54 = 1178560073
      * ((((&v60 | 0x135B03A) ^ 0xFFFFFFFE) - (~&v60 | 0xFECA4FC5)) ^ 0x445E37A7);
  int8x16x4_t v61 = &STACK[0x72E93EC0CCAF589E];
  unsigned int v60 = 1184294775 - v54;
  int v62 = v53 - v54 - 1882357480;
  (*(void (**)(unsigned int *))((char *)*(&off_10007DD80 + v53 + 136) + 8 * v53 + 18076))(&v60);
  return sub_10004A3E8((uint64_t)&v58, v55, v53, v56, 14040, (uint64_t)v59, 214, 20, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_100028754@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(v1 + 96) + 528) = 1057444614;
  *(_DWORD *)(*(void *)(v1 + 96) + 532) = 1740488377;
  *(void *)(*(void *)(v1 + 96) + 536) = *(void *)(v1 + 96) + 544;
  uint64_t v4 = *(void *)(v1 + 96) + 0x139154EEB432A00;
  unsigned int v5 = 1178560073 * (((&v8 | 0x314D4C0E) - (&v8 & 0x314D4C0E)) ^ 0x8BD9346C);
  uint64_t v9 = *(void *)(v2 + 8) + (*(_DWORD *)(v2 + 4) - v3);
  uint64_t v10 = v4;
  unsigned int v8 = v5 + 652;
  unsigned int v12 = v5 + v3 - 932059834;
  (*(void (**)(unsigned int *))(a1 + 18480))(&v8);
  int v6 = v11;
  *(void *)(*(void *)(v1 + 96) + 512) = *(void *)(v2 + 8) + (*(_DWORD *)(v2 + 4) - v3);
  return (v6 - 1310800152);
}

uint64_t sub_100028894@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((*(_DWORD *)(a1 + 532) - 1740488378) < 0x7FFFFFFF)
                                * (223 * (v1 ^ 0x2D0) + 657)) ^ v1)))();
}

uint64_t sub_1000288E0@<X0>(unsigned int a1@<W1>, int a2@<W2>, unsigned int a3@<W3>, int a4@<W8>)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((a4 + v4 + 1485 < (a3 ^ a1)) * a2) ^ a3)))();
}

uint64_t sub_10002891C()
{
  return sub_1000427D4();
}

void sub_10002893C()
{
  *(void *)(v0 + 312) = *(void *)(v1 + 8 * (int)(STACK[0x420] - 1098));
  JUMPOUT(0x100043830);
}

uint64_t sub_100028960(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(void))(*(void *)(v7 + 8 * (v4 ^ v6)) - 4 + 8 * ((((a4 & 2) == 0) * v5) ^ v4)))();
}

uint64_t sub_100028998()
{
  BOOL v5 = v1 + 838228837 > 768677282 || v1 + 838228837 < v3 + v0 + 786 + ((v0 - 209) | 0xC8) - 1378808656;
  return (*(uint64_t (**)(void))(v2 + 8 * ((1091 * v5) ^ v0)))();
}

uint64_t sub_1000289F4()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1221
                                * (((v0 + ((v3 + 271428864) & 0xEFD253BD) - 444) & (2
                                                                                  * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                 + ((*(unsigned __int8 *)(v2 + 3) - 134) ^ v1) == v1)) ^ v3)))();
}

uint64_t sub_100028A54@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((2768 * (((a1 + 458) ^ 0xD8B57057) + *(_DWORD *)STACK[0x3F0] < 0x10)) ^ a1)))();
}

void sub_100028A98()
{
}

uint64_t sub_100028AAC()
{
  return 4294925273;
}

uint64_t sub_100028AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39)
{
  uint64_t v43 = *(void *)(a20 + 24);
  *(void *)(v42 - 176) = 0xEBEBEBEBEBEBEBEBLL;
  *(void *)(v42 - 168) = 0xEBEBEBEBEBEBEBEBLL;
  int v44 = 235795823 * (((v42 - 160) & 0xA61497F7 | ~((v42 - 160) | 0xA61497F7)) ^ 0xCD462151);
  *(_DWORD *)(v42 - 152) = v44 + 307381638;
  *(void *)(v42 - 160) = v42 - 192;
  *(_DWORD *)(v42 - 124) = (v39 + 1928) ^ v44;
  *(void *)(v42 - 144) = &a39;
  *(void *)(v42 - 136) = v43;
  *(void *)(v42 - 120) = v42 + 0xC8F4093922907B7;
  uint64_t v45 = (*(uint64_t (**)(uint64_t))(v40 + 8 * (v39 ^ 0x8E8)))(v42 - 160);
  return (*(uint64_t (**)(uint64_t))(v40
                                            + 8
                                            * ((1921
                                              * (*(_DWORD *)(v42 - 128) == (((v39 - 6) | 4) ^ (v41 + 433) ^ ((v39 + 1471) | 0x80)))) ^ v39)))(v45);
}

uint64_t sub_100028BDC@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W5>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,unsigned int a41)
{
  unsigned int v43 = ((a3 + a5 - 4377252) | 0x42CA05) ^ ((*v42 & 0x7FFFFFFE | v42[623] & 0x80000000) >> 1) ^ 0x7CD83588;
  v42[623] = v42[396] ^ a4 ^ *((_DWORD *)&STACK[0x530] + (*v42 & 1)) ^ (v43 + a1 - (a2 & (2 * v43)));
  return (*(uint64_t (**)(void))(v41 + 8 * ((1767 * (a41 > 0x26F)) ^ a5)))();
}

uint64_t sub_100028C68@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  int v9 = *(_DWORD *)(a2 + 4 * (v6 + v4 - 8)) ^ *(_DWORD *)(a2 + 4 * (v6 + v4 - 3));
  HIDWORD(v10) = *(_DWORD *)(a2 + 4 * (v6 + v4 - 16)) ^ *(_DWORD *)(a2
                                                                                  + 4 * (v6 + v4 - 14)) ^ (v9 + v8 - ((v9 << (v2 + 118)) & a1)) ^ v8;
  LODWORD(v10) = *(_DWORD *)(a2 + 4 * (v6 + v4 - 16)) ^ *(_DWORD *)(a2
                                                                                  + 4 * (v6 + v4 - 14)) ^ (v9 + v8 - ((v9 << (v2 + 118)) & a1));
  *(_DWORD *)(a2 + 4 * (v3 + v6)) = (v10 >> 31) + v8 - (a1 & (2 * (v10 >> 31)));
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v3 + 1 + v6) < 0x50) * v5) ^ v2)))();
}

uint64_t sub_100028CF0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(a3 + (v4 - 8)) = *(void *)(v5 + (v4 - 8));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 == -8) * v7) ^ a4)))();
}

void sub_100028CFC()
{
}

uint64_t sub_100028D04()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((63 * (STACK[0x498] == 0)) ^ (v0 + 434))))();
}

uint64_t sub_100028D3C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((v0 <= ((STACK[0x420] - 590) | 0x4B0) + 1952422574)
                                     * ((STACK[0x420] + 643) ^ 0x6E5)) ^ (STACK[0x420] + 555))))();
}

uint64_t sub_100028D88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((110
                                * (((*(unsigned __int8 *)(*(void *)(a1 + 40) + (v2 - 2119813987))
                                   + (((v3 - 672) | 0x70) ^ 0x78F4E5C2)
                                   - ((*(unsigned __int8 *)(*(void *)(a1 + 40) + (v2 - 2119813987)) << (v3 + 94)) & 0x162)) & 0x1F) != 14)) ^ v3)))();
}

uint64_t sub_100028DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * ((75 * (v7 + 1 == v9 + 4)) ^ a6)))(v6);
}

uint64_t sub_100028EC4@<X0>(int a1@<W2>, unsigned int a2@<W5>, uint64_t a3@<X8>)
{
  int v12 = (v3 - 928) | 0x84;
  int v13 = (char)(v4 - 15) - (char)(v5 + v12 + 77);
  uint64_t v14 = (v13 ^ 0xFC9FBFFF) + 268363596 + ((2 * v13) & 0xF93F7FFE);
  int v15 = v12 - 19;
  int v16 = (*(unsigned __int8 *)(a3 + 1128 + v8 + 0x3DD4ED798559EACCLL) ^ v6)
      - *(unsigned __int8 *)(v10 + 1148 + v8 + 0x3DD4ED798559EACCLL);
  BOOL v18 = (v16 ^ v9) + 1878695675 + ((2 * v16) & 0xB59ED37E) == 1254754490
     && ((5 * ((v12 - 19) ^ a2)) ^ 0x45ALL) + 0x3DD4ED798559EACCLL != v7 + 20;
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * ((v18 * a1) ^ v15)))(v14);
}

uint64_t sub_100028F10@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 + v5)) = *(unsigned char *)(v4 + (a2 + v5));
  return (*(uint64_t (**)(void))(v6 + 8 * (int)(((a2 - 1 == a4) * (((a3 + 640272837) & 0xD9D637DF) - 1715)) ^ a3)))();
}

uint64_t sub_100028F58(uint64_t result, uint64_t a2, int a3)
{
  *(_DWORD *)(result + 28) = a3;
  return result;
}

uint64_t sub_100028F60()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((50 * (v2 > 0x82)) ^ (v0 + 594))))();
}

uint64_t sub_100028F84(uint64_t a1, int a2)
{
  return sub_10004FD14(a1, a2);
}

uint64_t sub_100028F94(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((50 * (((((a2 ^ 0x2FC) - 826) ^ (v2 < 0x20)) & 1) == 0)) ^ a2 ^ 0x508)))();
}

uint64_t sub_100028FD8()
{
  *(void *)(v6 - 120) = v2;
  *(void *)(v6 - 104) = v1;
  *(_DWORD *)(v6 - 112) = v4 + (((~(v6 - 128) & 0x9AB77AE2) - (~(v6 - 128) | 0x9AB77AE3)) ^ 0x20230281) * v5 + 1434;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v4 + 1990)))(v6 - 128);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * (((*(_DWORD *)(v6 - 128) > v3) * (((v4 + 318) | 0x591) ^ 0x7AA)) ^ v4)))(v7);
}

uint64_t sub_10002906C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  LODWORD(v19) = a3 + *(_DWORD *)(a10 + 32) - 1085811804;
  if (v19 >= v14 - 1270) {
    uint64_t v17 = 1719390788;
  }
  else {
    uint64_t v17 = 1719390800;
  }
  HIDWORD(v19) = *(_DWORD *)(a14 - 0x2C138C8FAF40FC12);
  LODWORD(a11) = (((2 * v15) ^ 0x1080) - 204628499) & 0xC3266BE;
  *(_DWORD *)(v16 - 140) = a11 ^ 0x4A5;
  HIDWORD(a7) = v14 - 1270;
  return sub_10003B7F8(2801639823, v17, 1236666695, a1, a2, 2959569291, 11, 2777665302, a14 - 0x2C138C8FAF40FC12, a5, a6, a7, v19, a9, a10, a11, a12, v15 + 1464782760, HIDWORD(v19) + 1339439294);
}

uint64_t sub_1000291D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v8
                                                                               + 8
                                                                               * ((((a7 + 238) ^ (a7 + 508) ^ 0x2F1)
                                                                                 * (v7 > 0xF)) ^ a7)))(a1, a2, a3, a4, 0);
}

uint64_t sub_100029204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((LODWORD(STACK[0x3D8]) == 642161856) ^ (5 * (v8 ^ 0x8F))) & 1) * a8) ^ v8)))();
}

void sub_100029250(uint64_t a1, int a2)
{
  LODWORD(STACK[0x53C]) = v2;
  LODWORD(STACK[0x458]) = v4;
  LODWORD(STACK[0x504]) = v3;
  LODWORD(STACK[0x5D4]) = v5;
  LODWORD(STACK[0x588]) = v6;
  unint64_t v10 = STACK[0x660];
  int v11 = *(_DWORD *)(STACK[0x660] - 0x72E93EC0CCAF572ALL);
  LODWORD(STACK[0x45C]) = v9 + 80;
  *(_DWORD *)(v10 - 0x72E93EC0CCAF572ALL) = (v11 ^ v8)
                                          + (v6 ^ v8)
                                          + (a2 ^ (v8 + 536))
                                          - (v7 & (2 * ((v11 ^ v8) + (v6 ^ v8))));
  JUMPOUT(0x1000292C8);
}

uint64_t sub_1000292D0()
{
  BOOL v4 = v1 - 106275087 < (int)((((v0 - 572) | 0xC0) ^ 0x75851BDA) + v3);
  if (v3 > 0xA7AE6D0 != v1 - 106275087 < -175826641) {
    BOOL v4 = v3 > 0xA7AE6D0;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * (v0 - 532)) ^ v0)))();
}

uint64_t sub_100029340@<X0>(int a1@<W4>, int a2@<W8>)
{
  *(unsigned char *)(v3 + (a1 + v5)) = *(unsigned char *)(v4 + (a1 + v5));
  return (*(uint64_t (**)(void))(v2 + 8 * ((15 * (a1 - 1 == ((v6 + 2047008956) & 0x85FD1FBE ^ (a2 + 944)))) ^ v6)))();
}

uint64_t sub_100029394@<X0>(int a1@<W0>, int a2@<W4>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31,uint64_t a32)
{
  LODWORD(STACK[0x3E0]) = a1;
  LODWORD(STACK[0x3D8]) = v32;
  if (v32 == 642161876)
  {
    int v38 = 15;
  }
  else
  {
    if (v32 != 642161872)
    {
      LODWORD(STACK[0x3C8]) = 0;
      LODWORD(STACK[0x3D0]) = 0;
      goto LABEL_7;
    }
    int v38 = 18;
  }
  LODWORD(STACK[0x3D0]) = v38;
  LODWORD(STACK[0x3C8]) = 1;
LABEL_7:
  int v39 = (a2 - 986) | 0x46;
  int v40 = 1178560073 * ((2 * ((v37 - 200) & 0x70168B28) - (v37 - 200) - 1880525616) ^ 0x357D0CB2);
  uint64_t v41 = (void *)(v37 - 200);
  v41[4] = STACK[0x3E8];
  v41[2] = a3 + 0x139154EEB432A00;
  v41[1] = a32;
  v41[6] = 0;
  v41[7] = 0;
  *(_DWORD *)(v37 - 176) = v33 - v40 - 619482852;
  *(_DWORD *)(v37 - 160) = (a2 + 787) ^ v40;
  v41[8] = v35 + 1168;
  v41[9] = a3 + 0x139154EEB432B10;
  (*(void (**)(uint64_t))(v36 + 8 * a31))(v37 - 200);
  return (*(uint64_t (**)(void))(v36 + 8 * ((2813 * (*(_DWORD *)(v37 - 200) == (v39 ^ 0x1F5F6B40))) ^ v34)))(LODWORD(STACK[0x3E0]));
}

uint64_t sub_100029518(int a1, int a2, uint64_t a3, uint64_t a4)
{
  unsigned int v9 = v5 ^ ((*v7 & (v4 ^ 0x7FFFFD3B) | v7[623] & 0x80000000) >> 1);
  v7[623] = v7[396] ^ a2 ^ *(_DWORD *)(a4 + 4 * (*v7 & 1)) ^ (a1
                                                              + ((v4 - 1998105290) & 0x7718AC5F)
                                                              + v9
                                                              - (v6 & (2 * v9))
                                                              - 1115);
  return (*(uint64_t (**)(void))(v8 + 8 * ((2799 * (LODWORD(STACK[0x454]) > 0x26F)) ^ v4)))();
}

uint64_t sub_1000295A8()
{
  int v3 = v1 - ((2 * v1 + 136128526) & 0x9FC9B8C) + v2 + 151837928;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (v2 | (16
                                     * (((v2 - 465321450) & 0x1BBC3FFF ^ 0x9D40F77 ^ (2 * v3) & 0xFDD749DE)
                                      + (v3 ^ 0xFA15E929)
                                      - 1390642336 != 738730063)))))();
}

uint64_t sub_100029654()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v1 + 1175)))();
  BOOL v4 = v0 == ((v1 + 1988889500) & 0x8973F38C ^ 0x1F5F6803);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((v4 | (2 * v4)) ^ (v1 - 215))))(v3);
}

uint64_t sub_1000296B8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (a1 - v4);
  int8x16_t v9 = vrev64q_s8(*(int8x16_t *)(a4 + v8 - 15));
  int8x16_t v10 = vextq_s8(v9, v9, 8uLL);
  int8x16_t v11 = vrev64q_s8(*(int8x16_t *)(a4 + v8 - 31));
  int8x16_t v12 = vextq_s8(v11, v11, 8uLL);
  uint64_t v13 = v6 + v8;
  v14.i64[0] = 0xD6D6D6D6D6D6D6D6;
  v14.i64[1] = 0xD6D6D6D6D6D6D6D6;
  v15.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v15.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  int8x16_t v16 = vrev64q_s8(vaddq_s8(vsubq_s8(v10, vandq_s8(vaddq_s8(v10, v10), v14)), v15));
  *(int8x16_t *)(v13 - 15) = vextq_s8(v16, v16, 8uLL);
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v12, vandq_s8(vaddq_s8(v12, v12), v14)), v15));
  *(int8x16_t *)(v13 - 31) = vextq_s8(v17, v17, 8uLL);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v4 + 32 == ((v5 + 370) ^ a2)) * a3) ^ v5)))();
}

uint64_t sub_100029744(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((180 * ((a7 + 1 + v7) < 0x20)) ^ a3)))();
}

uint64_t sub_100029824(int a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v4 + 96) + 1428) = 642161876;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1107 * (*(_DWORD *)(a2 + 4) == a1 + 376 + v2 + 5 * (a1 ^ 0x305))) ^ a1)))();
}

uint64_t sub_10002987C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  return (*(uint64_t (**)(void))(v24 + 8 * (((a23 == ((v23 + 1191) ^ 0x78F4E5DB)) * (v23 + 756)) ^ v23)))();
}

uint64_t sub_1000298BC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((59
                                     * (((v0 < (STACK[0x420] ^ 0x745F9AA7)) ^ (STACK[0x420] + 94)) & 1)) ^ (STACK[0x420] + 555))))();
}

uint64_t sub_10002990C(int a1, int a2, int a3, int a4)
{
  uint64_t v9 = (a1 + a2 + a3);
  unint64_t v10 = v9 + v8 + 1;
  uint64_t v11 = ((_BYTE)a1 + (_BYTE)a2 + (_BYTE)a3) & 0xF;
  uint64_t v12 = v11 - v9;
  unint64_t v13 = v5 + v11 - v9;
  unint64_t v14 = v11 + v5 + 1;
  unint64_t v15 = v11 + v4 - v9 + 2;
  unint64_t v16 = v11 + v4 + 3;
  unint64_t v17 = v12 + v6 + 4;
  unint64_t v18 = v6 + v11 + ((((a4 + 57692409) & 0xFC8FAFEB) - 966) ^ (a4 - 734));
  BOOL v20 = v14 > v8 && v13 < v10;
  int v22 = v16 > v8 && v15 < v10 || v20;
  if (v17 < v10 && v18 > v8) {
    int v22 = 1;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((508 * v22) ^ a4)))();
}

uint64_t sub_1000299B4()
{
  return 4294925278;
}

uint64_t sub_1000299BC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((41 * (*(void *)(v1 + 264) != 0)) ^ (v0 + 1028))))();
}

uint64_t sub_1000299F0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,uint64_t a29,int a30)
{
  STACK[0x538] = 0xEC10AA6475181ABBLL;
  uint64_t v34 = *(unsigned int *)*(&off_10007DD80 + v32 + a1 - 453);
  *(void *)(v33 - 136) = a29 + v31;
  *(_DWORD *)(v33 - 128) = a30 + a29;
  *(void *)(v33 - 120) = v34 + a29;
  *(_DWORD *)(v33 - 140) = a29;
  *(_DWORD *)(v33 - 108) = a29 + a1 + 1980802588;
  *(_DWORD *)(v33 - 104) = a30 - a29 - 48;
  *(_DWORD *)(v33 - 112) = a29 ^ a28;
  uint64_t v35 = (*(uint64_t (**)(uint64_t))(v30 + 8 * (v32 + a1 + 1725)))(v33 - 144);
  return (*(uint64_t (**)(uint64_t))(v30 + 8 * *(int *)(v33 - 144)))(v35);
}

uint64_t sub_1000299FC@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  unsigned int v60 = (unsigned __int8 *)&STACK[0x1990] + a2;
  *unsigned int v60 = *v59;
  *(void *)(v60 + 1) = *(void *)(v59 + 1);
  *(_DWORD *)(v60 + 9) = *(_DWORD *)(v59 + 9);
  *(_WORD *)(v60 + 13) = *(_WORD *)(v59 + 13);
  v60[15] = v59[15];
  uint64_t v61 = *((void *)v59 + 1);
  *((void *)v60 + 2) = *(void *)v59;
  *((void *)v60 + 3) = v61;
  int v62 = (v55 - 671) | 0x649;
  uint64_t v63 = *(void *)(v56 + 8 * (v55 ^ 0x3AE));
  uint64_t v64 = *(void *)(v56 + 8 * (v55 & 0x8776C86)) - 4;
  uint64_t v65 = *(void *)(v56 + 8 * (v55 - 883));
  char v66 = *(unsigned char *)(v65 + (*((unsigned __int8 *)&STACK[0x1990] + a2 + 14) ^ 0x86));
  char v67 = *(unsigned char *)(v65 + (*((unsigned __int8 *)&STACK[0x1990] + a2 + 10) ^ 0xCBLL));
  uint64_t v68 = *(void *)(v56 + 8 * (v55 ^ 0x3E5)) - 8;
  unsigned int v69 = *(unsigned __int8 *)(v68 + (*((unsigned __int8 *)&STACK[0x1990] + a2 + 1) ^ 0x1ALL));
  int v70 = (v69 >> 1) ^ (((((v69 ^ 0xE2) + (v69 & 0xD5 ^ 0x3F) + 1) ^ v69 & 0xDF) & 0xF0) >> 4) ^ 0x1A;
  int v71 = ((v60[3] ^ 0xB8) + *(unsigned char *)(v63 + (v60[3] ^ 0x54)) - 68) | ((v69 ^ 0xED ^ (v70 + (~(2 * v70) | 0x67) - 51)) << 16);
  LODWORD(v61) = (((*(unsigned __int8 *)(v64 + (v60[8] ^ 0x65)) + (v60[8] ^ 0x34) - 73) ^ 0xF5) << 24) | (((v67 ^ (16 * v67)) ^ 0xA1) << 8) | ((v60[11] ^ 0x3E) + *(unsigned char *)(v63 + (v60[11] ^ 0xD2)) - 68);
  LOBYTE(v69) = *(unsigned char *)(v65 + (*((unsigned __int8 *)&STACK[0x1990] + a2 + 6) ^ 0x2ELL));
  unsigned int v72 = *(unsigned char *)(v68 + (*((unsigned __int8 *)&STACK[0x1990] + a2 + 13) ^ 0x5BLL)) ^ 0x37;
  unsigned int v73 = ((v60[7] ^ 0x90) + *(unsigned char *)(v63 + (v60[7] ^ 0x7CLL)) - 68) | ((((v62 ^ v60[4] ^ 0x78)
                                                                                         + *(unsigned __int8 *)(v64 + (v60[4] ^ 0x42))
                                                                                         - 73) ^ v57) << 24) | (((v69 ^ (16 * v69)) ^ 0xBD) << 8);
  int v74 = *(unsigned __int8 *)(v68 + (*((unsigned __int8 *)&STACK[0x1990] + a2 + 13) ^ 0x5BLL)) ^ 0x37 ^ (v72 >> 4) ^ (v72 >> 1);
  int v75 = (((v66 ^ (16 * v66)) ^ 0x6D) << 8) | ((v74 - ((2 * v74) & 0x2E) + 23) << 16);
  LOBYTE(v70) = *(unsigned char *)(v68 + (*((unsigned __int8 *)&STACK[0x1990] + a2 + 5) ^ 0xEDLL));
  int v76 = v71 | (((*(unsigned __int8 *)(v64 + (*v60 ^ 0x81)) + (*v60 ^ 0xD0) - 73) ^ 0x3C) << 24);
  int v77 = ((v70 ^ 0x37) >> 4) ^ ((v70 ^ 0x37) >> 1);
  uint64_t v341 = v68;
  uint64_t v343 = v64;
  uint64_t v344 = v63;
  LODWORD(v61) = v61 & 0xFF00FFFF | (((*(unsigned char *)(v68 + (v60[9] ^ 0x38)) ^ ((*(unsigned char *)(v68 + (v60[9] ^ 0x38)) ^ 0x37) >> 4) ^ ((*(unsigned char *)(v68 + (v60[9] ^ 0x38)) ^ 0x37) >> 1)) ^ 0x9C) << 16);
  uint64_t v342 = v65;
  unsigned int v78 = v76 & 0xFFFF00FF | (((*(unsigned char *)(v65 + (v60[2] ^ 0x22)) ^ (16
                                                                                    * *(unsigned char *)(v65 + (v60[2] ^ 0x22)))) ^ 0x93) << 8);
  LODWORD(STACK[0x3D8]) = (v75 & 0xFFFFFF00 | ((((v60[12] ^ 0x13) + *(unsigned __int8 *)(v64 + (v60[12] ^ 0x42)) - 73) ^ v57) << 24) | (*(unsigned char *)(v63 + (v60[15] ^ 0x38)) + (v60[15] ^ 0xD4) - 68)) ^ 0x4C86028B;
  LODWORD(STACK[0x388]) = v78 ^ 0x6BEABF59;
  LODWORD(STACK[0x288]) = (v73 & 0xFF00FFFF | ((v70 ^ 0x6C ^ (v77
                                                                                              - ((2 * v77) & 0xE8)
                                                                                              + 116)) << 16)) ^ 0xEA041E2B;
  LODWORD(STACK[0x3B8]) = v61 ^ 0xE8E28C89;
  v339 = *(unsigned char **)(a1 + 384);
  v340 = *(unsigned __int8 **)(a1 + 392);
  STACK[0x3D0] = 14;
  HIDWORD(v350) = v62 ^ 0x4AA;
  uint64_t v79 = v65;
  LODWORD(v61) = *(unsigned __int8 *)(v65 + (v62 ^ 0xAA ^ v340[14] ^ 0x18u));
  STACK[0x2D8] = 4;
  HIDWORD(a12) = (v62 - 1152253904) & 0x44ADFE7C;
  uint64_t v80 = v340[4];
  LODWORD(STACK[0x3F8]) = (-((HIDWORD(a12) - 56) ^ (16 * v61)) - 2) ^ v61;
  LOBYTE(v61) = v80 ^ 0xB7;
  LOBYTE(v75) = *(unsigned char *)(v64 + (v80 ^ v57));
  STACK[0x3E0] = 15;
  int v81 = v340[15];
  unsigned __int8 v82 = v75 + v61 - 73;
  if ((v81 & 0x20) != 0) {
    int v83 = -32;
  }
  else {
    int v83 = 32;
  }
  uint64_t v84 = (v83 + v81);
  int v85 = *(unsigned __int8 *)(v344 + (v84 ^ 0xDD));
  STACK[0x3C8] = 6;
  int v354 = v85 + (v84 ^ 0x31);
  int v86 = *(unsigned __int8 *)(v65 + (v340[6] ^ 0x51));
  STACK[0x378] = 12;
  HIDWORD(v87) = v86 ^ (((32 * v86) ^ 0x3F) + ((16 * v86) ^ 0xFFFFFFE0) - 1) ^ 0x3F;
  LODWORD(v87) = BYTE4(v87) & 0xF8;
  STACK[0x260] = 0;
  unint64_t v88 = ((v87 >> 3) | ((unint64_t)(v82 ^ 0xE5u) << 13)) ^ 0x58F620A6;
  int v89 = (v88 >> 21) | (v88 << 11);
  int v353 = *(unsigned __int8 *)(v64 + (v340[12] ^ 0xF7) - 2 * ((v340[12] ^ 0xF7) & 0xAEu) + 174) - (v340[12] ^ 0xF7);
  uint64_t v90 = *v340;
  STACK[0x380] = 3;
  uint64_t v91 = v340[3];
  int v92 = *(unsigned __int8 *)(v64 + (v90 ^ 0xD8)) + (v90 ^ 0x76) - 2 * (v90 ^ 0x76);
  int v93 = *(unsigned __int8 *)(v344 + (v91 ^ 0x57));
  STACK[0x3B0] = 8;
  int v351 = (v91 ^ 0xFFFFFFBB) + v93;
  LOBYTE(v86) = (v340[8] ^ 0xA7) + *(unsigned char *)(v64 + (v340[8] ^ 0xF6));
  char v94 = v86 - ((2 * v86 + 110) & 0x4E);
  STACK[0x2E0] = 7;
  LOBYTE(v91) = (v340[7] ^ 0xE9) + *(unsigned char *)(v344 + (v340[7] ^ 5));
  STACK[0x258] = 13;
  int v95 = *(unsigned __int8 *)(v68 + (v340[13] ^ 0x12));
  int v96 = v62;
  unsigned int v97 = v95 ^ ((((v95 ^ 0x37u) >> 3) & 4 ^ v95 & 0xA4 | ((v95 ^ 0x37u) >> 3) & 0xFFFFFFFB ^ (v95 ^ 0x37) & 0x5A) >> 1);
  LOBYTE(v95) = *(unsigned char *)(v68 + (v340[5] ^ 0x9CLL));
  int v98 = ((v95 ^ 0x37) >> 4) ^ ((v95 ^ 0x37) >> 1);
  int v99 = (v91 - 68) | ((v95 ^ 0xE6 ^ (v98 - ((2 * v98) & 0xE8) + 116)) << 16);
  STACK[0x228] = 9;
  int v100 = *(unsigned __int8 *)(v68 + (v340[9] ^ 0x76));
  unsigned int v101 = (v100 & 8 ^ 0xFFFFFFDE) + 2 * (v100 & 8);
  unsigned int v102 = (v100 ^ 0x37u) >> 3;
  BOOL v103 = ((v101 + 2) & v102) == 0;
  char v104 = v101 + 124;
  char v105 = 56 - v101;
  if (v103) {
    char v105 = v104;
  }
  int v106 = v100 ^ ((((v102 + v105 - 90) ^ (v100 ^ 0x37) & 0xF7) & 0xFE) >> 1);
  int v107 = *(unsigned __int8 *)(v68 + (v340[1] ^ 0xCFLL));
  unsigned int v108 = v107 & 0xFFFFFFBF ^ 0x34 ^ ((v107 | 0xFFFFFFBF) + 68);
  int v109 = v96;
  uint64_t v110 = *(void *)(v56 + 8 * (v96 ^ 0x758)) - 4;
  LODWORD(v350) = v97;
  int v111 = *(_DWORD *)(v110 + 4 * (v97 ^ 0x50));
  int v112 = v108 ^ (v108 >> 4) ^ (v108 >> 1);
  char v113 = *(unsigned char *)(v79 + (v340[10] ^ 0xFBLL));
  uint64_t v114 = *(void *)(v56 + 8 * (v96 ^ 0x730)) - 8;
  HIDWORD(v348) = (v113 ^ (16 * v113)) ^ 0xA7;
  int v115 = *(_DWORD *)(v114 + 4 * ((v113 ^ (16 * v113)) ^ 0x28u));
  HIDWORD(v116) = v115 ^ 0x6EE0;
  LODWORD(v116) = v115 ^ 0x95150000;
  LODWORD(v348) = v92 - 74;
  HIDWORD(v355) = v109;
  uint64_t v117 = *(void *)(v56 + 8 * (v109 ^ 0x77E)) - 4;
  int v118 = (v116 >> 16) ^ *(_DWORD *)(v117 + 4 * ((v92 - 74) ^ 0xF9u)) ^ (16 * (v111 ^ 0x5DE1E96F)
                                                                                         + 1346595302
                                                                                         - ((32 * (v111 ^ 0x5DE1E96F)) & 0xA086D3C0));
  int v119 = *(_DWORD *)(v114 + 4 * (LODWORD(STACK[0x3F8]) ^ 0x71u));
  int v120 = v111 ^ (v118 - 1442159438 - ((2 * v118) & 0x5414C964));
  HIDWORD(v116) = v119 ^ 0x6EE0;
  LODWORD(v116) = v119 ^ 0x95150000;
  HIDWORD(v347) = v99 ^ v89;
  unsigned int v121 = v99 ^ v89 ^ 0xDD03A24B;
  unsigned int v122 = (v99 ^ v89) ^ 0x78;
  uint64_t v123 = *(void *)(v56 + 8 * (v109 - 1738));
  unint64_t v349 = __PAIR64__(v106, v112);
  unsigned int v124 = *(_DWORD *)(v123 + 4 * v122) ^ v120;
  int v125 = *(_DWORD *)(v110 + 4 * (v112 ^ 0xBFu)) ^ 0x5DE1E96F;
  int v126 = (v116 >> 16) ^ (16 * v125 + 1346595302 - ((32 * v125) & 0xA086D3C0)) ^ *(_DWORD *)(v117 + 4 * HIBYTE(v121));
  HIDWORD(v346) = (*(unsigned char *)(v344 + (v340[11] ^ 0x12)) + (v340[11] ^ 0xFE) - 68);
  int v127 = *(_DWORD *)(v123 + 4 * (HIDWORD(v346) ^ 0xB9u)) ^ v125;
  int v128 = *(unsigned __int8 *)(v79 + (v340[2] ^ 0x26)) ^ 0x46;
  LODWORD(v347) = v128 ^ (16 * v128);
  int v129 = *(_DWORD *)(v114 + 4 * (v347 ^ 0xFBu));
  HIDWORD(v116) = v129 ^ 0x6EE0;
  LODWORD(v116) = v129 ^ 0x95150000;
  int v130 = v127 ^ (v126 - 1442159438 - ((2 * v126) & 0x5414C964));
  HIDWORD(v345) = (v94 - 34);
  int v131 = *(_DWORD *)(v110 + 4 * BYTE2(v121)) ^ 0x5DE1E96F;
  int v132 = (v116 >> 16) ^ *(_DWORD *)(v117 + 4 * (HIDWORD(v345) ^ 0x40u)) ^ (16 * v131
                                                                           + 1346595302
                                                                           - ((32 * v131) & 0xA086D3C0));
  LODWORD(v346) = v354 - 68;
  unsigned int v133 = *(_DWORD *)(v123 + 4 * ((v354 - 68) ^ 0xEBu)) ^ v131 ^ (v132
                                                                                  - 1442159438
                                                                                  - ((2 * v132) & 0x5414C964));
  int v134 = *(_DWORD *)(v110 + 4 * (v106 ^ 0x4Bu)) ^ 0x5DE1E96F;
  int v135 = *(_DWORD *)(v114 + 4 * (BYTE1(v89) ^ 0x31u));
  HIDWORD(v116) = v135 ^ 0x6EE0;
  LODWORD(v116) = v135 ^ 0x95150000;
  LODWORD(v345) = v353 - 74;
  int v136 = (v116 >> 16) ^ *(_DWORD *)(v117 + 4 * ((v353 - 74) ^ 0xF7u)) ^ (16 * v134
                                                                                          + 1346595302
                                                                                          - ((32 * v134) & 0xA086D3C0));
  HIDWORD(a19) = v351 - 68;
  int v137 = *(_DWORD *)(v114 + 4 * (BYTE1(v133) ^ 0xF4u));
  unsigned int v138 = *(_DWORD *)(v123 + 4 * ((v351 - 68) ^ 0x33u)) ^ v134 ^ (v136
                                                                                  - 1442159438
                                                                                  - ((2 * v136) & 0x5414C964));
  HIDWORD(v116) = v137 ^ 0x6EE0;
  LODWORD(v116) = v137 ^ 0x95150000;
  int v139 = *(_DWORD *)(v110 + 4 * (BYTE2(v138) ^ 0xBBu)) ^ 0x5DE1E96F;
  unsigned __int8 v140 = BYTE1(v130) ^ 0xAD;
  unsigned int v141 = v139 ^ *(_DWORD *)(v117 + 4 * (HIBYTE(v124) ^ 0xA)) ^ *(_DWORD *)(v123 + 4
                                                                                  * (v130 ^ 0xDBu)) ^ (16 * v139 + 1346595302 - ((32 * v139) & 0xA086D3C0)) ^ (v116 >> 16);
  int v142 = *(_DWORD *)(v110 + 4 * (BYTE2(v124) ^ 0xDu));
  int v143 = *(_DWORD *)(v114 + 4 * ((unsigned __int16)(v138 ^ 0x22E) >> 8));
  HIDWORD(v116) = v143 ^ 0x6EE0;
  LODWORD(v116) = v143 ^ 0x95150000;
  int v144 = (16 * (v142 ^ 0x5DE1E96F) + 1346595302 - ((32 * (v142 ^ 0x5DE1E96F)) & 0xA086D3C0)) ^ *(_DWORD *)(v117 + 4 * ((v130 ^ 0xF15ADDBu) >> 24)) ^ (v116 >> 16);
  unsigned int v145 = *(_DWORD *)(v123 + 4 * (v133 ^ 0x80u)) ^ v142 ^ (v144
                                                                           - 1442159438
                                                                           - ((2 * v144) & 0x5414C964));
  int v146 = *(_DWORD *)(v110 + 4 * (BYTE2(v130) ^ 0xD6u)) ^ 0x5DE1E96F;
  unsigned int v147 = (16 * v146 + 1346595302 - ((32 * v146) & 0xA086D3C0)) ^ *(_DWORD *)(v117 + 4 * (HIBYTE(v133) ^ 0x19));
  int v148 = *(_DWORD *)(v114 + 4 * (BYTE1(v124) ^ 0xFu));
  HIDWORD(v116) = v148 ^ 0x6EE0;
  LODWORD(v116) = v148 ^ 0x95150000;
  unsigned int v149 = *(_DWORD *)(v123 + 4 * (v138 ^ 0x2Eu)) ^ v146 ^ (v116 >> 16) ^ (v147
                                                                                          - 1442159438
                                                                                          - ((2 * v147) & 0x5414C964));
  int v150 = *(_DWORD *)(v110 + 4 * (BYTE2(v133) ^ 0x32u));
  int v151 = *(_DWORD *)(v114 + 4 * v140);
  HIDWORD(v116) = v151 ^ 0x6EE0;
  LODWORD(v116) = v151 ^ 0x95150000;
  int v152 = (v116 >> 16) ^ *(_DWORD *)(v117 + 4 * (HIBYTE(v138) ^ 0xBD)) ^ (16 * (v150 ^ 0x5DE1E96F)
                                                                         + 1346595302
                                                                         - ((32 * (v150 ^ 0x5DE1E96F)) & 0xA086D3C0));
  int v153 = v150 ^ *(_DWORD *)(v123 + 4 * (v124 ^ 0xCFu)) ^ 0x2C283FAB ^ (v152
                                                                                        - 1442159438
                                                                                        - ((2 * v152) & 0x5414C964));
  unsigned int v154 = v153
       - ((2 * v153) & 0x5F186BF6)
       + 797718011
       - ((2 * (v153 - ((2 * v153) & 0x5F186BF6) + 797718011)) & 0x405CEBE2)
       + 539915761;
  int v155 = *(_DWORD *)(v110 + 4 * (BYTE2(v154) ^ 0xEDu));
  BYTE2(v147) = BYTE2(v149) ^ 0xEB;
  int v156 = *(_DWORD *)(v114 + 4 * ((unsigned __int16)(v149 ^ 0xDFF9) >> 8));
  unsigned int v157 = (16 * (v155 ^ 0x5DE1E96F) + 1346595302 - ((32 * (v155 ^ 0x5DE1E96F)) & 0xA086D3C0)) ^ *(_DWORD *)(v117 + 4 * (HIBYTE(v141) ^ 0x3C)) ^ (((v156 ^ 0x95156EE0) >> (v141 & 0x10 ^ 0x10) >> (v141 & 0x10)) + ((v156 << 16) ^ 0x6EE00000));
  int v158 = v157 - 1442159438 - ((2 * v157) & 0x5414C964);
  LOWORD(v157) = v141 ^ 0xB092;
  unsigned int v159 = *(_DWORD *)(v123 + 4 * (v145 ^ 0xB6u)) ^ v155 ^ v158;
  int v160 = *(_DWORD *)(v110 + 4 * ((v141 ^ 0xD550B092) >> 16)) ^ 0x5DE1E96F;
  int v161 = *(_DWORD *)(v114 + 4 * (BYTE1(v154) ^ 0xE6u));
  HIDWORD(v116) = v161 ^ 0x6EE0;
  LODWORD(v116) = v161 ^ 0x95150000;
  int v162 = (16 * v160 + 1346595302 - ((32 * v160) & 0xA086D3C0)) ^ *(_DWORD *)(v117 + 4 * (HIBYTE(v145) ^ 0x16)) ^ (v116 >> 16);
  int v163 = *(_DWORD *)(v123 + 4 * (v149 ^ 0xF9u)) ^ v160;
  int v164 = *(_DWORD *)(v117 + 4 * (HIBYTE(v149) ^ 5));
  HIDWORD(v116) = v164 ^ 0x1E6;
  LODWORD(v116) = v164 ^ 0x50436800;
  int v165 = v116 >> 10;
  int v166 = *(_DWORD *)(v114 + 4 * BYTE1(v157));
  unsigned int v167 = v163 ^ (v162 - 1442159438 - ((2 * v162) & 0x5414C964));
  HIDWORD(v116) = v166 ^ 0x6EE0;
  LODWORD(v116) = v166 ^ 0x95150000;
  int v168 = *(_DWORD *)(v110 + 4 * (BYTE2(v145) ^ 0xD4u)) ^ 0x5DE1E96F;
  unint64_t v169 = (unint64_t)(v165 ^ 0x25EB099Cu) << 10;
  int v170 = *(_DWORD *)(v114 + 4 * (BYTE1(v145) ^ 0x24u));
  int v171 = *(_DWORD *)(v123 + 4 * (v154 ^ 0xC2u)) ^ v168 ^ (v116 >> 16);
  HIDWORD(v116) = v170 ^ 0x6EE0;
  LODWORD(v116) = v170 ^ 0x95150000;
  int v172 = *(_DWORD *)(v110 + 4 * BYTE2(v147)) ^ 0x5DE1E96F;
  int v173 = (v116 >> 16) ^ (16 * v172 + 1346595302 - ((32 * v172) & 0xA086D3C0)) ^ *(_DWORD *)(v117
                                                                                          + 4 * (HIBYTE(v154) ^ 0xC9));
  unsigned int v174 = *(_DWORD *)(v123 + 4 * (v157 ^ 0x33u)) ^ v172 ^ (v173
                                                                           - 1442159438
                                                                           - ((2 * v173) & 0x5414C964));
  int v175 = v171 ^ ((v169 ^ (16 * v168) ^ HIDWORD(v169))
               - 1442159438
               - 2 * ((v169 ^ (16 * v168) ^ HIDWORD(v169)) & 0x2A0A64BE ^ BYTE4(v169) & 0xC));
  int v176 = *(_DWORD *)(v110 + 4 * (BYTE2(v174) ^ 0x62u)) ^ 0x5DE1E96F;
  unsigned int v177 = (16 * v176 + 1346595302 - ((32 * v176) & 0xA086D3C0)) ^ *(_DWORD *)(v117 + 4 * (HIBYTE(v159) ^ 0x80));
  unsigned int v178 = v175 ^ 0xF1F7E4A6;
  int v179 = *(_DWORD *)(v114 + 4 * ((unsigned __int16)(v175 ^ 0xE4A6) >> 8));
  HIDWORD(v116) = v179 ^ 0x6EE0;
  LODWORD(v116) = v179 ^ 0x95150000;
  unsigned int v180 = *(_DWORD *)(v123 + 4 * (v167 ^ 0x68u)) ^ v176 ^ (v116 >> 16) ^ (v177
                                                                                          - 1442159438
                                                                                          - ((2 * v177) & 0x5414C964));
  int v181 = *(_DWORD *)(v110 + 4 * (BYTE2(v159) ^ 0xBAu)) ^ 0x5DE1E96F;
  int v182 = *(_DWORD *)(v114 + 4 * ((unsigned __int16)(v174 ^ 0x2957) >> 8));
  HIDWORD(v116) = v182 ^ 0x6EE0;
  LODWORD(v116) = v182 ^ 0x95150000;
  int v183 = (16 * v181 + 1346595302 - ((32 * v181) & 0xA086D3C0)) ^ *(_DWORD *)(v117 + 4 * (HIBYTE(v167) ^ 0xCE)) ^ (v116 >> 16);
  unsigned int v184 = *(_DWORD *)(v123 + 4 * (v175 ^ 0x15u)) ^ v181 ^ (v183
                                                                           - 1442159438
                                                                           - ((2 * v183) & 0x5414C964));
  int v185 = *(_DWORD *)(v110 + 4 * (BYTE2(v167) ^ 0x60u)) ^ 0x5DE1E96F;
  int v186 = *(_DWORD *)(v114 + 4 * (BYTE1(v159) ^ 0x72u));
  HIDWORD(v116) = v186 ^ 0x6EE0;
  LODWORD(v116) = v186 ^ 0x95150000;
  int v187 = (16 * v185 + 1346595302 - ((32 * v185) & 0xA086D3C0)) ^ *(_DWORD *)(v117 + 4 * HIBYTE(v178)) ^ (v116 >> 16);
  int v188 = *(_DWORD *)(v123 + 4 * (v174 ^ 0x57u)) ^ v185 ^ (v187
                                                                           - 1442159438
                                                                           - ((2 * v187) & 0x5414C964));
  BOOL v103 = (v167 & 0x1000) == 0;
  int v189 = BYTE1(v167) ^ 0xC;
  if (v103) {
    int v190 = 16;
  }
  else {
    int v190 = -16;
  }
  int v191 = *(_DWORD *)(v110 + 4 * BYTE2(v178)) ^ 0x5DE1E96F;
  unsigned int v192 = *(_DWORD *)(v114 + 4 * ((v189 + v190) ^ 0x83u));
  unsigned int v193 = *(_DWORD *)(v117 + 4 * (HIBYTE(v174) ^ 0xA1)) ^ HIWORD(v192) ^ (v192 << 16) ^ (16 * v191
                                                                                        + 1346595303
                                                                                        + ~((32 * v191) & 0xA086D3C0)) ^ 0x6EE09515;
  int v194 = *(_DWORD *)(v123 + 4 * (v159 ^ 0xCu)) ^ v191 ^ (v193 - 1442159438 - ((2 * v193) & 0x5414C964));
  int v195 = *(_DWORD *)(v114 + 4 * ((unsigned __int16)(v188 ^ 0x8D48) >> 8));
  HIDWORD(v196) = v195 ^ 0x6EE0;
  LODWORD(v196) = v195 ^ 0x95150000;
  unsigned int v197 = v194 ^ 0xEFBC3B44;
  int v198 = *(_DWORD *)(v110 + 4 * ((v194 ^ 0xEFBC3B44) >> 16)) ^ 0x5DE1E96F;
  int v199 = (v196 >> 16) ^ *(_DWORD *)(v117 + 4 * (HIBYTE(v180) ^ 0xCC)) ^ (16 * v198
                                                                         + 1346595302
                                                                         - ((32 * v198) & 0xA086D3C0));
  int v200 = *(_DWORD *)(v123 + 4 * (v184 ^ 0xA9u)) ^ v198;
  int v201 = *(_DWORD *)(v114 + 4 * ((unsigned __int16)(v194 ^ 0x3B44) >> 8));
  HIDWORD(v196) = v201 ^ 0x6EE0;
  LODWORD(v196) = v201 ^ 0x95150000;
  int v202 = v200 ^ (v199 - 1442159438 - ((2 * v199) & 0x5414C964));
  __int16 v203 = v180 ^ 0xD583;
  int v204 = *(_DWORD *)(v110 + 4 * (((v180 ^ 0x255FD583) >> 16) ^ 0xC3u)) ^ 0x5DE1E96F;
  int v205 = (v196 >> 16) ^ *(_DWORD *)(v117 + 4 * HIBYTE(v184)) ^ (16 * v204 + 1346595302 - ((32 * v204) & 0xA086D3C0));
  unsigned int v206 = *(_DWORD *)(v123 + 4 * (v188 ^ 0x48u)) ^ v204 ^ (v205
                                                                           - 1442159438
                                                                           - ((2 * v205) & 0x5414C964));
  int v207 = *(_DWORD *)(v110 + 4 * ((v184 ^ 0xE93411A9) >> 16)) ^ 0x5DE1E96F;
  int v208 = *(_DWORD *)(v114 + 4 * HIBYTE(v203));
  HIDWORD(v196) = v208 ^ 0x6EE0;
  LODWORD(v196) = v208 ^ 0x95150000;
  int v209 = (16 * v207 + 1346595303 + ~((32 * v207) & 0xA086D3C0)) ^ *(_DWORD *)(v117 + 4 * ((v188 ^ 0x807D8D48) >> 24)) ^ (v196 >> 16);
  unsigned int v210 = *(_DWORD *)(v123 + 4 * (v194 ^ 0x77u)) ^ v207 ^ (v209
                                                                           - 1442159438
                                                                           - ((2 * v209) & 0x5414C964));
  int v211 = *(_DWORD *)(v110 + 4 * (BYTE2(v188) ^ 0xBEu)) ^ 0x5DE1E96F;
  int v212 = *(_DWORD *)(v114 + 4 * (BYTE1(v184) ^ 0x82u));
  HIDWORD(v196) = v212 ^ 0x6EE0;
  LODWORD(v196) = v212 ^ 0x95150000;
  int v213 = (v196 >> 16) ^ *(_DWORD *)(v117 + 4 * HIBYTE(v197)) ^ (16 * v211 + 1346595302 - ((32 * v211) & 0xA086D3C0));
  int v214 = *(_DWORD *)(v114 + 4 * (BYTE1(v210) ^ 0x89u));
  unsigned int v215 = *(_DWORD *)(v123 + 4 * v203) ^ v211 ^ (v213 - 1442159438 - ((2 * v213) & 0x5414C964));
  HIDWORD(v196) = v214 ^ 0x6EE0;
  LODWORD(v196) = v214 ^ 0x95150000;
  int v216 = *(_DWORD *)(v110 + 4 * ((v215 ^ 0x950DA39D) >> 16)) ^ 0x5DE1E96F;
  unsigned int v217 = (16 * v216 + 1346595302 - ((32 * v216) & 0xA086D3C0)) ^ *(_DWORD *)(v117 + 4 * ((v202 ^ 0x11521BCAu) >> 24));
  int v218 = v217 - 1442159438 - 2 * (v217 & 0x2A0A64B3 ^ *(_DWORD *)(v117 + 4 * ((v202 ^ 0x11521BCAu) >> 24)) & 1);
  BYTE1(v217) = BYTE1(v206) ^ 0xD1;
  int v219 = v216 ^ *(_DWORD *)(v123 + 4 * (v206 ^ 0x88u)) ^ (v196 >> 16) ^ v218;
  int v220 = *(_DWORD *)(v110 + 4 * ((v202 ^ 0x11521BCAu) >> 16));
  int v221 = *(_DWORD *)(v114 + 4 * (BYTE1(v215) ^ 0x30u));
  HIDWORD(v196) = v221 ^ 0x6EE0;
  LODWORD(v196) = v221 ^ 0x95150000;
  int v222 = (16 * (v220 ^ 0x5DE1E96F) + 1346595302 - ((32 * (v220 ^ 0x5DE1E96F)) & 0xA086D3C0)) ^ *(_DWORD *)(v117 + 4 * (HIBYTE(v206) ^ 0xDF)) ^ (v196 >> 16);
  v210 ^= 0x7A851A70u;
  unsigned int v223 = *(_DWORD *)(v123 + 4 * (v210 ^ 0x33u)) ^ v220 ^ (v222
                                                                           - 1442159438
                                                                           - ((2 * v222) & 0x5414C964));
  int v224 = *(_DWORD *)(v110 + 4 * (BYTE2(v206) ^ 0xA7u)) ^ 0x5DE1E96F;
  int v225 = *(_DWORD *)(v114 + 4 * (BYTE1(v202) ^ 0x88u));
  HIDWORD(v196) = v225 ^ 0x6EE0;
  LODWORD(v196) = v225 ^ 0x95150000;
  int v226 = (16 * v224 + 1346595302 - ((32 * v224) & 0xA086D3C0)) ^ (v196 >> 16) ^ *(_DWORD *)(v117
                                                                                          + 4
                                                                                          * ((HIBYTE(v210) ^ -HIBYTE(v210) ^ ((HIBYTE(v210) ^ 0xFFFFFF16) + 234))
                                                                                           + 233));
  int v227 = *(_DWORD *)(v110 + 4 * BYTE2(v210));
  int v228 = *(_DWORD *)(v123 + 4 * (v215 ^ 0x9Du)) ^ v224 ^ (v226
                                                                           - 1442159438
                                                                           - ((2 * v226) & 0x5414C964));
  int v229 = *(_DWORD *)(v114 + 4 * BYTE1(v217));
  HIDWORD(v196) = v229 ^ 0x6EE0;
  LODWORD(v196) = v229 ^ 0x95150000;
  int v230 = (v196 >> 16) ^ *(_DWORD *)(v117 + 4 * (HIBYTE(v215) ^ 0x7C)) ^ (16 * (v227 ^ 0x5DE1E96F)
                                                                         + 1346595302
                                                                         - ((32 * (v227 ^ 0x5DE1E96F)) & 0xA086D3C0));
  int v231 = *(_DWORD *)(v123 + 4 * (v202 ^ 0xF9u)) ^ v227 ^ (v230
                                                                           - 1442159438
                                                                           - ((2 * v230) & 0x5414C964));
  int v232 = *(_DWORD *)(v110 + 4 * (BYTE2(v231) ^ 0x66u));
  int v233 = *(_DWORD *)(v114 + 4 * ((unsigned __int16)(v228 ^ 0xDE69) >> 8));
  HIDWORD(v196) = v233 ^ 0x6EE0;
  LODWORD(v196) = v233 ^ 0x95150000;
  unsigned int v234 = (v219 ^ 0x71C9D6C4) - 2 * ((v219 ^ 0x71C9D6C4) & 0x284F693F ^ v219 & 0x10) - 1471190737;
  int v235 = (v196 >> 16) ^ (16 * (v232 ^ 0x5DE1E96F) + 1346595302 - ((32 * (v232 ^ 0x5DE1E96F)) & 0xA086D3C0)) ^ *(_DWORD *)(v117 + 4 * (HIBYTE(v234) ^ 0xC1));
  int v236 = *(_DWORD *)(v114 + 4 * (BYTE1(v231) ^ 0xD6u));
  unsigned int v237 = *(_DWORD *)(v123 + 4 * (v223 ^ 0xBCu)) ^ v232 ^ (v235
                                                                           - 1442159438
                                                                           - ((2 * v235) & 0x5414C964));
  HIDWORD(v196) = v236 ^ 0x6EE0;
  LODWORD(v196) = v236 ^ 0x95150000;
  int v238 = *(_DWORD *)(v110 + 4 * (BYTE2(v234) ^ 0x25u)) ^ 0x5DE1E96F;
  unsigned int v239 = v238 ^ *(_DWORD *)(v117 + 4 * (HIBYTE(v223) ^ 0x80)) ^ *(_DWORD *)(v123
                                                                            + 4 * (v228 ^ 0x69u)) ^ ((v196 >> 16) - 1442159438 - ((2 * (v196 >> 16)) & 0x5414C964)) ^ (16 * v238 + 1346595302 - ((32 * v238) & 0xA086D3C0));
  int v240 = *(_DWORD *)(v110 + 4 * (BYTE2(v223) ^ 0x1Bu)) ^ 0x5DE1E96F;
  int v241 = *(_DWORD *)(v114 + 4 * (BYTE1(v234) ^ 2u));
  HIDWORD(v196) = v241 ^ 0x6EE0;
  LODWORD(v196) = v241 ^ 0x95150000;
  int v242 = (16 * v240 + 1346595302 - ((32 * v240) & 0xA086D3C0)) ^ *(_DWORD *)(v117 + 4 * ((v228 ^ 0x5FEEDE69u) >> 24)) ^ (v196 >> 16);
  LOBYTE(v215) = HIBYTE(v231) & 0x90 ^ 0x86 ^ (~(2 * (HIBYTE(v231) & 0x6F ^ 0xD8)) + (HIBYTE(v231) & 0x6F ^ 0xD8));
  int v243 = *(_DWORD *)(v123
                   + 4
                   * ((((v231 ^ 0x20) + (v231 ^ 0xFFFFFFEC) + 1) ^ 0xFFFFFFFE)
                    + (v231 ^ 0x20))) ^ v240 ^ (v242 - 1442159438 - ((2 * v242) & 0x5414C964));
  int v244 = *(_DWORD *)(v110 + 4 * (BYTE2(v228) ^ 0x2Du)) ^ 0x5DE1E96F;
  int v245 = *(_DWORD *)(v114 + 4 * (BYTE1(v223) ^ 0x36u));
  HIDWORD(v196) = v245 ^ 0x6EE0;
  LODWORD(v196) = v245 ^ 0x95150000;
  int v246 = (v196 >> 16) ^ (16 * v244 + 1346595302 - ((32 * v244) & 0xA086D3C0)) ^ *(_DWORD *)(v117
                                                                                          + 4 * v215);
  unsigned int v247 = *(_DWORD *)(v123 + 4 * (v234 ^ 0x74u)) ^ v244 ^ (v246
                                                                           - 1442159438
                                                                           - ((2 * v246) & 0x5414C964));
  int v248 = *(_DWORD *)(v110 + 4 * ((v247 ^ 0x59A5F4B7) >> 16)) ^ 0x5DE1E96F;
  int v249 = *(_DWORD *)(v114 + 4 * ((unsigned __int16)(v243 ^ 0x872B) >> 8));
  HIDWORD(v196) = v249 ^ 0x6EE0;
  LODWORD(v196) = v249 ^ 0x95150000;
  int v250 = (16 * v248 + 1346595302 - ((32 * v248) & 0xA086D3C0)) ^ *(_DWORD *)(v117 + 4 * (HIBYTE(v237) ^ 0x8F)) ^ (v196 >> 16);
  int v251 = *(_DWORD *)(v123 + 4 * (v239 ^ 0xEEu)) ^ v248 ^ (v250
                                                                           - 1442159438
                                                                           - ((2 * v250) & 0x5414C964));
  int v252 = *(_DWORD *)(v110 + 4 * (BYTE2(v237) ^ 0xC4u)) ^ 0x5DE1E96F;
  int v253 = *(_DWORD *)(v114 + 4 * (BYTE1(v247) ^ 0x67u));
  HIDWORD(v196) = v253 ^ 0x6EE0;
  LODWORD(v196) = v253 ^ 0x95150000;
  int v254 = (v196 >> 16) - 1442159438 - ((2 * (v196 >> 16)) & 0x5414C964);
  int v255 = *(_DWORD *)(v114 + 4 * (BYTE1(v237) ^ 0x52u));
  HIDWORD(v196) = v255 ^ 0x6EE0;
  LODWORD(v196) = v255 ^ 0x95150000;
  unsigned int v356 = v252 ^ *(_DWORD *)(v117 + 4 * (HIBYTE(v239) ^ 0xD6)) ^ *(_DWORD *)(v123
                                                                            + 4 * (v243 ^ 0x18u)) ^ (16 * v252 + 1346595302 - ((32 * v252) & 0xA086D3C0)) ^ v254;
  int v256 = *(_DWORD *)(v110 + 4 * (BYTE2(v239) ^ 0x56u)) ^ 0x5DE1E96F;
  int v257 = *(_DWORD *)(v117 + 4 * ((v243 ^ 0x911B872B) >> 24)) ^ *(_DWORD *)(v110 + 4 * (BYTE2(v239) ^ 0x56u)) ^ 0x30A09B11 ^ (v196 >> 16) ^ (16 * v256 + 1346595303 + ~((32 * v256) & 0xA086D3C0));
  HIDWORD(v196) = *(_DWORD *)(v123 + 4 * (v247 ^ 0xB7u)) ^ 0xB682C008;
  LODWORD(v196) = HIDWORD(v196);
  int v258 = (v196 >> 21) ^ __ROR4__(v257, 21);
  int v259 = *(_DWORD *)(v114 + 4 * (BYTE1(v239) ^ 0xE4u));
  HIDWORD(v196) = v259 ^ 0x6EE0;
  LODWORD(v196) = v259 ^ 0x95150000;
  int v260 = *(_DWORD *)(v110 + 4 * (BYTE2(v243) ^ 0xD8u)) ^ 0x5DE1E96F;
  int v261 = (v196 >> 16) ^ *(_DWORD *)(v117 + 4 * (HIBYTE(v247) ^ 0xB0)) ^ (16 * v260
                                                                         + 1346595302
                                                                         - ((32 * v260) & 0xA086D3C0));
  unsigned int v262 = *(_DWORD *)(v123 + 4 * (v237 ^ 0xC9u)) ^ v260 ^ (v261
                                                                           - 1442159438
                                                                           - ((2 * v261) & 0x5414C964));
  int v263 = *(_DWORD *)(v110 + 4 * (BYTE2(v251) ^ 0x74u)) ^ 0x5DE1E96F;
  int v264 = *(_DWORD *)(v114 + 4 * (BYTE1(v262) ^ 0x66u));
  HIDWORD(v196) = v264 ^ 0x6EE0;
  LODWORD(v196) = v264 ^ 0x95150000;
  int v265 = v356 ^ 0x177CD9D9;
  int v266 = *(_DWORD *)(v117 + 4 * ((v356 ^ 0x177CD9D9) >> 24)) ^ 0x6D41727E ^ v263 ^ (16 * v263
                                                                                    + 1346595302
                                                                                    - ((32 * v263) & 0xA086D3C0)) ^ (v196 >> 16);
  int v267 = (v266 & 0x200 ^ 0x3FDF3EF5) + 2 * (v266 & 0x200);
  HIDWORD(v196) = v258 ^ 0x549BF9D9;
  LODWORD(v196) = v258 ^ 0x549BF9D9;
  int v268 = v196 >> 11;
  int v269 = *(_DWORD *)(v123 + 4 * ((v196 >> 11) ^ 0xEFu));
  BOOL v103 = ((v267 - 1071595253) & (v269 ^ 0xAA0A64B2)) == 0;
  int v270 = v267 - 293876404;
  int v271 = 1849314102 - v267;
  if (v103) {
    int v271 = v270;
  }
  unsigned int v272 = ((v269 ^ 0xB682C008) - 777718849 + v271) ^ v266 & 0xFFFFFDFF;
  int v273 = *(_DWORD *)(v110 + 4 * BYTE2(v265)) ^ 0x5DE1E96F;
  int v274 = *(_DWORD *)(v114 + 4 * (((unsigned __int16)(v251 ^ 0x3D47) >> 8) ^ 0x93u));
  unsigned int v275 = (16 * v273 + 1346595302 - ((32 * v273) & 0xA086D3C0)) ^ *(_DWORD *)(v117 + 4 * ((v268 ^ 0x1EA133EFu) >> 24));
  HIDWORD(v276) = v274 ^ 0x6EE0;
  LODWORD(v276) = v274 ^ 0x95150000;
  unsigned int v277 = *(_DWORD *)(v123 + 4 * (v262 ^ 0xDu)) ^ v273 ^ (v276 >> 16) ^ (v275
                                                                                         - 1442159438
                                                                                         - ((2 * v275) & 0x5414C964));
  int v278 = *(_DWORD *)(v110 + 4 * (BYTE2(v268) ^ 0x62u)) ^ 0x5DE1E96F;
  int v279 = *(_DWORD *)(v114 + 4 * BYTE1(v265));
  HIDWORD(v276) = v279 ^ 0x6EE0;
  LODWORD(v276) = v279 ^ 0x95150000;
  int v280 = (16 * v278 + 1346595302 - ((32 * v278) & 0xA086D3C0)) ^ *(_DWORD *)(v117 + 4 * (HIBYTE(v262) ^ 0x32)) ^ (v276 >> 16);
  int v281 = *(_DWORD *)(v123 + 4 * (v251 ^ 0x74u)) ^ v278 ^ (v280
                                                                           - 1442159438
                                                                           - ((2 * v280) & 0x5414C964));
  v282 = (char *)*(&off_10007DD80 + (v109 ^ 0x7F2)) - 4;
  uint64_t v283 = (uint64_t)*(&off_10007DD80 + v109 - 1758);
  LOBYTE(v279) = v272 ^ 0x9F;
  unsigned int v284 = *(_DWORD *)(v283 + 4 * ((v272 ^ 0xF137909F) >> 16)) ^ 0x3C2D551C;
  unsigned int v285 = v284 ^ ((HIBYTE(v277) ^ 0x9FD52929) - 1071466683 + *(_DWORD *)&v282[4 * (HIBYTE(v277) ^ 0xB4)]) ^ (v284 >> 2) ^ (v284 >> 4);
  int v286 = (v285 & 0x1000000 ^ 0x7FBBCEEF) + 2 * (v285 & 0x1000000);
  uint64_t v287 = (uint64_t)*(&off_10007DD80 + (v109 ^ 0x727));
  int v288 = *(_DWORD *)(v287 + 4 * (v281 ^ 0x9Eu));
  BOOL v103 = ((v286 - 2143014639) & (v288 ^ 0xB0000000)) == 0;
  int v289 = *(_DWORD *)(v117 + 4 * ((v251 ^ 0xD4B73D47) >> 24));
  int v290 = *(_DWORD *)(v114 + 4 * (BYTE1(v268) ^ 0xA0u));
  int v291 = *(_DWORD *)(v110 + 4 * (BYTE2(v262) ^ 0x72u)) ^ 0x5DE1E96F;
  HIDWORD(v276) = v290 ^ 0x6EE0;
  LODWORD(v276) = v290 ^ 0x95150000;
  int v292 = (v276 >> 16) ^ v289 ^ (16 * v291 + 1346595302 - ((32 * v291) & 0xA086D3C0));
  int v293 = *(_DWORD *)(v123 + 4 * (v356 ^ 0xEAu)) ^ v291 ^ (v292
                                                                           - 1442159438
                                                                           - ((2 * v292) & 0x5414C964));
  int v294 = v277 ^ 0xBC37B;
  unsigned int v295 = *(_DWORD *)(v283 + 4 * (BYTE2(v293) ^ 0x99u)) ^ 0x3C2D551C;
  unsigned int v296 = (*(_DWORD *)&v282[4 * (((v272 ^ 0xF137909F) >> 24) ^ 0xB4)]
        + (((v272 ^ 0xF137909F) >> 24) ^ 0x9FD52929)
        - 1071466683) ^ ((v277 ^ 0x7B)
                       + 766150735
                       - ((2 * (v277 ^ 0x7B) + 2044928224) & 0x616123BE)) ^ v295 ^ (v295 >> 2) ^ *(_DWORD *)(v287 + 4 * (v277 ^ 0x79u)) ^ (v295 >> 4);
  int v297 = *(_DWORD *)&v282[4 * (((v293 ^ 0x6792B6A6u) >> 24) ^ 0xB4)];
  v298 = (char *)*(&off_10007DD80 + v109 - 1864) - 4;
  unsigned __int8 v299 = v281 ^ 0x9C;
  int v300 = *(_DWORD *)&v298[4 * ((unsigned __int16)(v281 ^ 0x7C9C) >> 8)] ^ 0x4E89B31C;
  int v301 = v300 ^ (1515496080 * v300);
  unsigned int v302 = (v281 ^ 0x250E7C9Cu) >> 24;
  int v303 = *(_DWORD *)&v282[4 * (v302 ^ 0xB4)];
  LODWORD(v282) = *(_DWORD *)(v283 + 4 * (BYTE2(v281) ^ 5u));
  HIDWORD(v352) = v303;
  LODWORD(v355) = *(_DWORD *)(v283 + 4 * BYTE2(v294));
  LODWORD(v283) = *(_DWORD *)&v298[4 * BYTE1(v294)];
  int v304 = *(_DWORD *)&v298[4 * ((unsigned __int16)(v293 ^ 0xB6A6) >> 8)];
  int v305 = *(_DWORD *)&v298[4 * (BYTE1(v272) ^ 0x5E)];
  int v306 = *(_DWORD *)(v287 + 4 * (v272 ^ 0x9Du));
  LODWORD(v352) = *(_DWORD *)(v287 + 4 * (v293 ^ 0xA4u));
  unsigned int v307 = ((v296 ^ v301) - 368828925 - ((2 * (v296 ^ v301)) & 0xD4083C06)) ^ LODWORD(STACK[0x288]);
  uint64_t v308 = v307 ^ 0x5244C6B3;
  uint64_t v309 = (uint64_t)*(&off_10007DD80 + v109 - 1780);
  v339[5] = *(unsigned char *)(v309 + (BYTE2(v308) ^ 0x5ELL)) ^ BYTE2(v308) ^ 0x8A ^ ((BYTE2(v308) ^ 0x8A)
                                                                            + (~(2 * (BYTE2(v308) ^ 0x8A) - 18) | 0x2B)
                                                                            + 98) ^ 0xB9;
  LODWORD(v282) = v282 ^ 0x3C2D551C ^ ((((v293 ^ 0x6792B6A6u) >> 24) ^ 0x9FD52929) - 1071466683 + v297) ^ ((v282 ^ 0x3C2D551C) >> 2) ^ ((v282 ^ 0x3C2D551C) >> 4) ^ v283 ^ 0x4E89B31C ^ v306 ^ (1515496080 * (v283 ^ 0x4E89B31C)) ^ (v279 + 766150735 - ((2 * v279 + 2044928224) & 0x616123BE));
  uint64_t v310 = (v282 + 1810546521 - ((2 * v282) & 0xD7D57FC4) + 137) ^ LODWORD(STACK[0x388]);
  unsigned int v311 = v310 ^ 0x22A932A6;
  uint64_t v312 = (BYTE1(v311) | 0x88) ^ (v311 >> 8) & 0x88;
  v313 = (char *)*(&off_10007DD80 + (v109 ^ 0x7D2)) - 8;
  v339[2] = (((unsigned __int16)(v310 ^ 0x32A6) >> 8) | 0x88) ^ ((unsigned __int16)(v310 ^ 0x32A6) >> 8) & 0x88 ^ 0x35 ^ ((v313[v312 ^ 0x14] ^ 0x3F) + ((2 * v313[v312 ^ 0x14]) | 0xDF) - 111);
  v314 = (char *)*(&off_10007DD80 + (v109 ^ 0x7FC)) - 12;
  LODWORD(v312) = v314[HIBYTE(v307) ^ 0xEFLL];
  HIDWORD(v276) = ~v312;
  LODWORD(v276) = (v312 ^ 0x80) << 24;
  v339[STACK[0x2D8]] = (v276 >> 29) ^ 0x83;
  int v315 = v286 - 687996993;
  int v316 = -696935011 - v286;
  if (!v103) {
    int v315 = v316;
  }
  unsigned int v317 = v285 & 0xFEFFFFFF ^ (1515496080 * (v304 ^ 0x4E89B31C)) ^ ((v288 ^ (v299
                                                                          + 766150735
                                                                          - ((2 * v299 + 2044928224) & 0x616123BE)))
                                                                 - 1455017646
                                                                 + v315);
  uint64_t v318 = v304 ^ 0x4E89B31C ^ LODWORD(STACK[0x3B8]) ^ (v317 - 387806071 - ((2 * v317) & 0xD1C5199E) + 70);
  uint64_t v319 = v304 ^ 0x1Cu ^ LOBYTE(STACK[0x3B8]) ^ (v317 - 119 - ((2 * v317) & 0x9E) + 70) ^ 0x28;
  int v320 = v109;
  v321 = (char *)*(&off_10007DD80 + (v109 ^ 0x7E1)) - 12;
  v339[11] = v321[v319] ^ 0xB6;
  LODWORD(v319) = v314[BYTE3(v310) ^ 0xF9];
  HIDWORD(v322) = ~v319;
  LODWORD(v322) = (v319 ^ 0x80) << 24;
  unint64_t v323 = STACK[0x260];
  v339[STACK[0x260]] = (v322 >> 29) ^ 0xFB;
  v339[1] = BYTE2(v311) ^ 0x61 ^ ((BYTE2(v311) ^ 0x61) - ((2 * (BYTE2(v311) ^ 0x61) - 18) & 0xD4) + 97) ^ 0xB8 ^ *(unsigned char *)(v309 + (BYTE2(v311) ^ 0xB5));
  unsigned int v324 = (v302 ^ 0x9FD52929) - 1071466683 + HIDWORD(v352);
  int v325 = v355 ^ 0x3C2D551C ^ ((v355 ^ 0x3C2D551C) >> 4) ^ ((v355 ^ 0x3C2D551C) >> 2);
  unsigned int v326 = (v325 & 0x80000 | ((((v325 & 0x80000u) >> 19) & 1) << 20)) ^ 0xF7ACBDB5;
  BOOL v103 = ((v326 + 139674187) & v324) == 0;
  uint64_t v327 = v326 + 2136439808;
  unsigned int v328 = 1857091434 - v326;
  if (v103) {
    unsigned int v328 = v327;
  }
  unsigned int v329 = v325 & 0xFFF7FFFF ^ (v324 - 1996765621 + v328) ^ (1515496080 * (v305 ^ 0x4E89B31C));
  int v330 = v352 ^ ((v293 ^ 0xA6) + 2096205936) ^ (v329 - ((2 * v329) & 0x6171EFBE) - 1330055201);
  unsigned int v331 = v305 ^ LODWORD(STACK[0x3D8]) ^ (v330 + 1283850891 - ((2 * v330) & 0x990C0576) + 48);
  v339[STACK[0x258]] = *(unsigned char *)(v309 + (BYTE2(v331) ^ 0x12) + ((v331 >> 15) & 0x1A8 ^ 0xFFFFFFDF) + 213) ^ BYTE2(v331) ^ ((BYTE2(v331) ^ 0x12) - ((2 * (BYTE2(v331) ^ 0x12) - 18) & 0xD4) + 97) ^ 0x94;
  int v332 = v314[HIBYTE(v331) ^ 0xB4];
  HIDWORD(v333) = ~v332;
  LODWORD(v333) = (v332 ^ 0x80) << 24;
  v339[STACK[0x378]] = (v333 >> 29) ^ 0x50;
  v339[STACK[0x228]] = ((v318 ^ 0xCFDDD967) >> 16) ^ 0x94 ^ ((((v318 ^ 0xCFDDD967) >> 16) ^ 0x94)
                                                                         - ((2
                                                                           * (((v318 ^ 0xCFDDD967) >> 16) ^ 0x94)
                                                                           - 18) & 0xD4)
                                                                         + 97) ^ *(unsigned char *)(v309
                                                                                          + (((v318 ^ 0xCFDDD967) >> 16) ^ 0x40)) ^ 0xC;
  unsigned int v334 = (((v331 ^ 0x11BC2133) >> 4) & 0xF0 | ((unsigned __int16)(v331 ^ 0x2133) >> 12)) ^ 0xE6;
  uint64_t v335 = (v334 >> 4) & 0xFFFFFF0F | (16 * (v334 & 0xF));
  v339[STACK[0x3D0]] = v313[v335 ^ 0xAE] ^ (v335 - 2 * (v335 & 0x3F) + 63) ^ 0x2B;
  v339[10] = (((unsigned __int16)(v318 ^ 0xD967) >> 8) - (((v318 ^ 0xCFDDD967) >> 7) & 0x7E) + 63) ^ 0xDB ^ v313[((unsigned __int16)(v318 ^ 0xD967) >> 8) ^ 0xA0];
  v339[STACK[0x3C8]] = (BYTE1(v308) + (~(v308 >> 7) | 0x81) + 64) ^ v313[BYTE1(v308) ^ 0x75] ^ 0x80;
  v339[STACK[0x380]] = v321[v310 ^ 0x95] ^ 0x1B;
  v339[STACK[0x2E0]] = v321[v307 ^ 0x7FLL] ^ 0x8A;
  v339[STACK[0x3E0]] = v321[v331 ^ 0x9CLL] ^ 0x25;
  int v336 = v314[BYTE3(v318) ^ 0x49];
  HIDWORD(v333) = ~v336;
  LODWORD(v333) = (v336 ^ 0x80) << 24;
  v339[STACK[0x3B0]] = (v333 >> 29) ^ 0x2E;
  uint64_t v337 = v323 - 1606927625 - 2 * ((v323 + 16) & 0x20383AEFu);
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * ((232 * ((v337 ^ 0xA0383AE0) > 0x14F)) ^ v320)))(v318, v337, ~(v308 >> 7) | 0xFFFFFF81, v308, 219, 2 * ((v334 >> 4) | (16 * (v334 & 0xF)) & 0x3F), v327, v310, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, v339,
           v340,
           v341,
           v342,
           v343,
           v344,
           a19,
           v345,
           v346,
           v347,
           v348,
           v349,
           v350,
           v352,
           v355,
           2,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           11,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           5,
           1);
}

uint64_t sub_10002BDA4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  unsigned int v66 = 235795823 * ((1707451106 - (v59 | 0x65C5A2E2) + (v59 | 0x9A3A5D1D)) ^ 0xE971444);
  v63[1] = 0x6AF2A8617E594F5;
  v63[2] = a58;
  *(_DWORD *)(v65 - 164) = v60 - v66 + 291;
  *(_DWORD *)(v65 - 200) = a1 ^ v66;
  v63[3] = a59;
  (*(void (**)(uint64_t))(v64 + 8 * (v60 ^ 0x8B7)))(v65 - 200);
  int v67 = *(_DWORD *)(v65 - 168);
  STACK[0x558] = v62;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, __n128))(v64 + 8 * ((1929 * (v67 == v61 + ((v60 - 1662945519) & 0x631E8CFB) - 1115)) ^ v60)))(440, 1420, 2591436230, 3768594526, STACK[0x420], 1703529726, 922, 9, (__n128)0);
}

uint64_t sub_10002BED0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v11 = v8 - a8 < ((a2 - v9 + 445) ^ 0x81166A61uLL);
  return (*(uint64_t (**)(void))(v10 + 8 * (((2 * v11) | (4 * v11)) ^ a2)))();
}

uint64_t sub_10002BF0C(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((118 * ((a1 + a2 + v2 + 1563 + v2 + 1060 - 2126155127) > 7)) ^ v2)))();
}

uint64_t sub_10002BF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x288] = v72;
  return (*(uint64_t (**)(void))(v74 + 8 * ((a72 * (v73 == v75)) ^ (a5 - 215))))();
}

uint64_t sub_10002BFB4@<X0>(uint64_t a1@<X2>, char a2@<W5>, int a3@<W8>)
{
  int v8 = *(_DWORD *)(v7 - 220 + ((v5 + a3) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v5 + a3)) = (HIBYTE(v8) ^ 0xDB) - ((a2 + v4 - 97) & (2 * (HIBYTE(v8) ^ 0xDB))) - 21;
  *(unsigned char *)(a1 + (v5 + a3 + 1)) = (BYTE2(v8) ^ 0xD1)
                                               - 2 * ((BYTE2(v8) ^ 0xD1) & 0xEF ^ BYTE2(v8) & 4)
                                               - 21;
  *(unsigned char *)(a1 + (v5 + a3 + 2)) = (BYTE1(v8) ^ 0x5B)
                                               - 2 * ((BYTE1(v8) ^ 0x5B) & 0xEF ^ BYTE1(v8) & 4)
                                               - 21;
  *(unsigned char *)(a1 + (v5 + a3 + 3)) = v8 ^ 0x25;
  unsigned int v9 = *(_DWORD *)(v7 - 128) + 292474036;
  BOOL v10 = v9 < v3;
  if (v5 + 1471744649 < v3 == v10) {
    BOOL v10 = v5 + 1471744649 < v9;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * (v10 | (16 * v10) | v4)))();
}

uint64_t sub_10002C0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 != a7) * ((a6 ^ 0x742) - 1358)) ^ a6)))();
}

uint64_t sub_10002C0E4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int32x4_t *a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int32x4_t a52,int8x16_t a53)
{
  int8x16x4_t v80 = vld4q_s8(v53);
  v55.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v55.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  uint8x16_t v56 = (uint8x16_t)veorq_s8(v80.val[0], v55);
  uint16x8_t v57 = vmovl_u8(*(uint8x8_t *)v56.i8);
  int8x16_t v58 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v57.i8);
  int8x16_t v59 = (int8x16_t)vmovl_high_u16(v57);
  uint16x8_t v60 = vmovl_high_u8(v56);
  int8x16_t v61 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v60.i8);
  int8x16_t v62 = (int8x16_t)vmovl_high_u16(v60);
  uint8x16_t v63 = (uint8x16_t)veorq_s8(v80.val[1], v55);
  uint16x8_t v64 = vmovl_high_u8(v63);
  uint16x8_t v65 = vmovl_u8(*(uint8x8_t *)v63.i8);
  uint8x16_t v66 = (uint8x16_t)veorq_s8(v80.val[2], v55);
  _Q21 = (int8x16_t)vmovl_high_u8(v66);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v66.i8);
  int8x16_t v69 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  int8x16_t v74 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v80.val[0] = veorq_s8(v80.val[3], v55);
  v80.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v80.val[0]);
  v80.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v80.val[1]);
  v80.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v80.val[0].i8);
  v80.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v80.val[0]);
  v80.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v80.val[0].i8), 0x18uLL), v69), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v65.i8, 8uLL), v58));
  v80.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v80.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v65, 8uLL), v59));
  v80.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v80.val[1].i8), 0x18uLL), v74), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v64.i8, 8uLL), v61));
  v80.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v80.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v64, 8uLL), v62));
  int32x4_t v75 = (int32x4_t)veorq_s8(vandq_s8(v80.val[0], a53), (int8x16_t)(*(_OWORD *)&v58 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
  int32x4_t v76 = (int32x4_t)veorq_s8(vandq_s8(v80.val[3], a53), (int8x16_t)(*(_OWORD *)&v59 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
  int32x4_t v77 = (int32x4_t)veorq_s8(vandq_s8(v80.val[1], a53), (int8x16_t)(*(_OWORD *)&v61 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
  int32x4_t v78 = (int32x4_t)veorq_s8(vandq_s8(v80.val[2], a53), (int8x16_t)(*(_OWORD *)&v62 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
  a5[2] = vaddq_s32(vsubq_s32((int32x4_t)v80.val[1], vaddq_s32(v77, v77)), a52);
  a5[3] = vaddq_s32(vsubq_s32((int32x4_t)v80.val[2], vaddq_s32(v78, v78)), a52);
  *a5 = vaddq_s32(vsubq_s32((int32x4_t)v80.val[0], vaddq_s32(v75, v75)), a52);
  a5[1] = vaddq_s32(vsubq_s32((int32x4_t)v80.val[3], vaddq_s32(v76, v76)), a52);
  return sub_10005B3BC(v54 ^ 0x4AAu, a1, a2, a3, a4, 351843406);
}

uint64_t sub_10002C220()
{
  BOOL v6 = v1 < v4;
  if (v6 == v5 + v0 < v4) {
    BOOL v6 = v1 > v5 + v0;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 - 941) | 0x8F) ^ (60 * v6))))();
}

uint64_t sub_10002C26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v17 - 128) = a13;
  *(void *)(v17 - 120) = v14;
  *(_DWORD *)(v17 - 136) = v16
                         - 108757529
                         * ((((v17 - 136) | 0x80490B75) - (v17 - 136) + ((v17 - 136) & 0x7FB6F488)) ^ 0x60D5695E)
                         + 994;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v16 ^ 0xA3B)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * (((109 * ((v16 - 2062198034) & 0x7AEAA3FE ^ 0x1B0) + 608)
                                              * (v15 == 1236742231)) ^ v16)))(v18);
}

uint64_t sub_10002C32C(double a1, double a2, double a3, double a4, double a5, double a6, double a7, int8x16_t a8)
{
  uint64_t v12 = (const float *)&v11[56].i32[3];
  int8x16_t v13 = (int8x16_t)vld1q_dup_f32(v12);
  int v14 = (v9 - 319) | 0x122;
  v15.i64[0] = 0x8000000080000000;
  v15.i64[1] = 0x8000000080000000;
  a8.i64[0] = v11[57].i64[0];
  a8.i32[2] = v11[57].i32[2];
  int8x16_t v16 = vextq_s8(v13, a8, 0xCuLL);
  int8x16_t v17 = a8;
  v17.i32[3] = v11[57].i32[3];
  int32x4_t v18 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v17, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v16, v15)), 1uLL), (int8x16_t)vdupq_n_s32(0x7EB2DFADu));
  v19.i32[0] = *(_DWORD *)(v8 + 4 * (v11[57].i32[0] & 1));
  v19.i32[1] = *(_DWORD *)(v8 + 4 * (v11[57].i32[1] & 1));
  v19.i32[2] = *(_DWORD *)(v8 + 4 * (v11[57].i32[2] & 1));
  v19.i32[3] = *(_DWORD *)(v8 + 4 * (v17.i8[12] & 1));
  *(int8x16_t *)((char *)v11 + 4 * ((v14 + 120465017) & 0xF8D1D2FF ^ 0x7CLL)) = veorq_s8(veorq_s8(veorq_s8(*v11, v19), (int8x16_t)vdupq_n_s32(0xFB404419)), (int8x16_t)vaddq_s32(vsubq_s32(v18, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v18, v18), (int8x16_t)vdupq_n_s32(0xFACB7EB4))), vdupq_n_s32(0xFD65BF5A)));
  return (*(uint64_t (**)(void))(v10 + 8 * (v14 ^ 0x65)))();
}

uint64_t sub_10002C45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  LODWORD(STACK[0x4A4]) = 1899470963;
  LODWORD(STACK[0x554]) = 128;
  unsigned int v59 = 1178560073 * (((v56 | 0x8CBEB393) - v56 + (v56 & 0x73414C68)) ^ 0x362ACBF1);
  uint16x8_t v60 = (void *)(v58 - 200);
  v60[4] = 0;
  v60[8] = v54;
  v60[9] = v54 + 0x139154EEB432B90;
  *(_DWORD *)(v58 - 160) = (v55 + 1002) ^ v59;
  *(_DWORD *)(v58 - 176) = 1243141148 - v59;
  v60[2] = v54 + 0x139154EEB432A80;
  v60[1] = a54;
  v60[6] = 0;
  v60[7] = a46;
  uint64_t v61 = (*(uint64_t (**)(uint64_t))(v57 + 8 * (v55 + 1361)))(v58 - 200);
  return (*(uint64_t (**)(uint64_t))(v57
                                            + 8
                                            * ((1894 * (*(_DWORD *)(v58 - 200) == (v55 ^ 0x1F5F6C58 ^ (v55 + 215)))) ^ v55)))(v61);
}

uint64_t sub_10002C570()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0xCF6)))(1576);
  STACK[0x5F8] = v3;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((2 * (((v3 == 0) ^ ((v0 - 75) ^ v1)) & 1)) & 0xFB | (4 * (((v3 == 0) ^ ((v0 - 75) ^ v1)) & 1))) ^ v0)))();
}

uint64_t sub_10002C5C8(uint64_t a1)
{
  return sub_100032814(a1, v1 & 0x20000000, (v2 ^ 0xBFBu) - 956);
}

uint64_t sub_10002C5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  *(_DWORD *)(v37 - 144) = (v34 - 1101) ^ (235795823 * ((v37 - 101333398 - 2 * ((v37 - 144) & 0xF9F5C6FA)) ^ 0x6D588FA3));
  *(void *)(v37 - 136) = v35;
  *(void *)(v37 - 128) = v36;
  (*(void (**)(uint64_t))(v33 + 8 * (v34 ^ 0xFDC)))(v37 - 144);
  *(void *)(v37 - 144) = a24;
  *(void *)(v37 - 136) = v35;
  *(_DWORD *)(v37 - 112) = v34
                         - 582
                         + 1224239923
                         * ((2 * (((v37 - 144) ^ 0xA8FDC33E) & 0x7EE300AA) - ((v37 - 144) ^ 0xA8FDC33E) + 18677589) ^ 0x5B52C1BC);
  *(void *)(v37 - 128) = v35;
  *(void *)(v37 - 120) = v36;
  *(void *)(v37 - 104) = a33;
  (*(void (**)(uint64_t))(v33 + 8 * (v34 ^ 0xE3C)))(v37 - 144);
  *(_DWORD *)(v37 - 112) = v34
                         - 582
                         + 1224239923
                         * ((((v37 - 144) | 0x595B079F) - (v37 - 144) + ((v37 - 144) & 0xA6A4F860)) ^ 0xABE8FA48);
  *(void *)(v37 - 144) = a24;
  *(void *)(v37 - 136) = a18;
  *(void *)(v37 - 128) = v35;
  *(void *)(v37 - 120) = v36;
  *(void *)(v37 - 104) = v35;
  (*(void (**)(uint64_t))(v33 + 8 * (v34 ^ 0xE3C)))(v37 - 144);
  *(void *)(v37 - 136) = v35;
  *(void *)(v37 - 128) = a20;
  *(_DWORD *)(v37 - 144) = (v34 + 426521281) ^ (235795823
                                              * ((((v37 - 144) | 0xEC38560C) - ((v37 - 144) & 0xEC38560C)) ^ 0x78951F55));
  (*(void (**)(uint64_t))(v33 + 8 * (v34 + 570)))(v37 - 144);
  *(_DWORD *)(v37 - 144) = (v34 - 1101) ^ (235795823
                                         * ((-2026376004 - ((v37 - 144) | 0x8737F4BC) + ((v37 - 144) | 0x78C80B43)) ^ 0xEC65421A));
  *(void *)(v37 - 136) = v35;
  *(void *)(v37 - 128) = a25;
  (*(void (**)(uint64_t))(v33 + 8 * (v34 ^ 0xFDC)))(v37 - 144);
  *(void *)(v37 - 144) = v35;
  *(void *)(v37 - 136) = a25;
  *(_DWORD *)(v37 - 128) = v34 + 1374699841 * ((v37 - 144) ^ 0x6DF41809) + 82;
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(v33 + 8 * (v34 ^ 0xE23)))(v37 - 144);
  return (*(uint64_t (**)(uint64_t))(v33
                                            + 8
                                            * (((((a23 == 0) ^ (v34 + 23)) & 1)
                                              * (((v34 - 61) | 0x54) ^ 0x6CA)) | (v34 + 66))))(v38);
}

uint64_t sub_10002C644(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((283 * (a3 ^ 0x36E) - 1344) ^ (a3 - 171)) * (v3 == a1)) ^ a3)))();
}

void cp2g1b9ro(uint64_t a1, uint64_t a2)
{
  if (a1) {
    BOOL v2 = a2 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = !v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10002C6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v44 = v41 ^ 0x473;
  unint64_t v45 = STACK[0x570];
  unint64_t v46 = STACK[0x5F8];
  unint64_t v47 = STACK[0x380];
  STACK[0x3E8] = (unint64_t)&STACK[0x680] + STACK[0x380] + (v41 ^ 0x473) - 0x74CFFF0833D78B57;
  STACK[0x3F0] = a41 + v47 + (v41 ^ 0x473);
  STACK[0x288] = v42;
  STACK[0x3F8] = v46;
  int v48 = (v41 ^ 0x473) + 1033;
  if (v45) {
    BOOL v49 = v46 == 0;
  }
  else {
    BOOL v49 = 1;
  }
  int v50 = !v49;
  return (*(uint64_t (**)(void))(v43 + 8 * ((v50 * (v44 - 1100)) ^ v48)))();
}

uint64_t sub_10002C79C()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v1 + 1954)))();
  LODWORD(STACK[0x648]) = v0;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((v0 == (((v1 - 272) | 0x41B) ^ 0x1F5F6FDC)) * (((v1 + 753) | 0x1A) - 364)) ^ v1)))(v3);
}

uint64_t sub_10002C7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,unsigned int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
  int v60 = 628203409 * ((-671978737 - ((v59 - 168) | 0xD7F26B0F) + ((v59 - 168) | 0x280D94F0)) ^ 0xAA8598C3);
  *(_DWORD *)(v59 - 160) = v60 + v58 + 568;
  *(_DWORD *)(v59 - 156) = a16 - v60;
  *(void *)(v56 + 392) = a25;
  uint64_t v61 = (*(uint64_t (**)(uint64_t))(v57 + 8 * (v58 + 2200)))(v59 - 168);
  unsigned int v62 = (v58 - 1433233793) & 0x556D695E ^ 0x34 ^ a56 & 0x3F;
  *(&a47 + v62) = 107;
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v57 + 8 * ((1405 * (v62 > 0x37)) ^ v58)))(v61, -648545233, a38);
}

uint64_t sub_10002C904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v11 = (v8 + v9 + a3 - a4);
  *(void *)(a5 - 7 + v11) = *(void *)(v6 - 7 + v11);
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void, void))(v5
                                                                             + 8
                                                                             * (int)(((a4 - (v7 & 0xFFFFFFF8) == -8)
                                                                                    * (a1 ^ 0x6F5)) ^ a1)))(a1, a2, (v11 - 8), v10 - (v7 & 0xFFFFFFF8), a4 - (v7 & 0xFFFFFFF8) + 16);
}

uint64_t sub_10002C960(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * (a2 ^ (15 * (v2 != 0x2A3F22C2)))))(a1, 834203508);
}

uint64_t sub_10002C9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(unsigned char *)(v14 + (a6 + v11)) = *(unsigned char *)(v8 + ((a6 + v11) & 0xFLL)) ^ *(unsigned char *)(v6
                                                                                                + (a6 + v11)) ^ (v12 + 34) ^ *(unsigned char *)(v9 + (((_BYTE)a6 + (_BYTE)v11) & 0xF)) ^ *(unsigned char *)(v7 + (((_BYTE)a6 + (_BYTE)v11) & 0xF)) ^ (97 * ((a6 + v11) & 0xF));
  return (*(uint64_t (**)(void))(v13 + 8 * ((1611 * (a6 - 1 == v10)) ^ (v12 - 1734))))();
}

uint64_t sub_10002CA24()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((887
                                * ((v0 & (2 * (*(unsigned __int8 *)(v2 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 7) - 1) ^ v1) == v1
                                                                              + ((v3 - 1348858176) & 0x5065F1FD)
                                                                              - 444)) ^ v3)))();
}

uint64_t sub_10002CA84()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 658) ^ 0x2FA) + ((v2 - 658) | 0x24) - 370) * (v1 == v0)) ^ v2)))();
}

void sub_10002CACC()
{
  unint64_t v3 = STACK[0x548];
  int v4 = 1178560073 * ((2 * ((v2 - 200) & 0x698F3550) - (v2 - 200) - 1770992982) ^ 0x2CE4B2C8);
  *(_DWORD *)(v2 - 184) = -1882357475 - v4 + v0 + 8;
  *(_DWORD *)(v2 - 200) = 1184294775 - v4;
  *(void *)(v2 - 192) = v3;
  (*(void (**)(uint64_t))(v1 + 8 * ((int)v0 + 2273)))(v2 - 200);
  STACK[0x5E8] = *(void *)(v1 + 8 * v0);
  JUMPOUT(0x10002CB74);
}

uint64_t sub_10002CB88@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W6>, int a7@<W8>)
{
  int v17 = a1 ^ v16;
  int v18 = (v7 ^ v16) & (a1 ^ v16) | (v7 ^ 0x242EA431) & (v8 ^ v16);
  int v19 = a6 ^ v16;
  int v20 = *(_DWORD *)(v10 + 4 * (*(unsigned char *)(a2 + v15 + v12) - 72)) ^ v9;
  int v21 = v19
      + a7
      + v18
      + *(_DWORD *)(a3 + 4 * (v15 + v12))
      + v20
      + v16
      - (v13 & (2 * (v19 + a7 + v18 + *(_DWORD *)(a3 + 4 * (v15 + v12)) + v20)));
  unsigned int v22 = (((v21 ^ v16) << (*(unsigned char *)(a4 + v15 + v12) - 76)) | ((v21 ^ v16) >> (76 - *(unsigned char *)(a4 + v15 + v12)))) + v17;
  return (*(uint64_t (**)(void))(v11 + 8 * ((56 * (v15 + 1 != v14 + 32)) ^ a5)))(v22 + v16 - (v13 & (2 * v22)));
}

uint64_t sub_10002CC50()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((v3 + v2) ^ 0x25D) * (v1 < 0x392B2605)) | (v3 + v2))))();
}

uint64_t sub_10002CC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * (((a13 + v16 - 220 + (unint64_t)(v13 + v14 - a5 + 105138578) < 0x10)
                                * (17 * (v14 ^ 0x34C) - 535)) ^ v14)))();
}

uint64_t sub_10002CCDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29 = LOBYTE(STACK[0x34C]) ^ 0xDD;
  if (v29 == 1)
  {
    unsigned int v36 = STACK[0x330];
    unsigned int v37 = STACK[0x32C];
    int v38 = LODWORD(STACK[0x330]) >> 5;
    LOBYTE(STACK[0x324]) = ((8 * LOBYTE(STACK[0x330])) ^ 0x20)
                         + a11
                         - ((2 * ((8 * LOBYTE(STACK[0x330])) ^ 0x20)) & 0xDF);
    char v35 = -42;
    LOBYTE(STACK[0x325]) = (v38 ^ 0x87) - ((2 * (v38 ^ 0x87)) & 0xD6) - 21;
    LOBYTE(STACK[0x326]) = ((v36 >> 13) ^ 8) - ((2 * ((v36 >> 13) ^ 8)) & 0xD6) - 21;
    char v32 = a2 ^ 0xA0;
    LOBYTE(STACK[0x327]) = ((v36 >> 21) ^ 0x54) - ((2 * ((v36 >> 21) ^ 0x54)) & 0xD6) - 21;
    HIDWORD(v39) = v37 ^ 5;
    LODWORD(v39) = v36 ^ 0xA0000000;
    LOBYTE(STACK[0x328]) = (v39 >> 29) - ((2 * (v39 >> 29)) & 0xD6) - 21;
    LOBYTE(STACK[0x329]) = ((v37 >> 5) ^ 0x31) - ((2 * ((v37 >> 5) ^ 0x31)) & 0xD6) - 21;
    LOBYTE(STACK[0x32A]) = ((v37 >> 13) ^ 0xA8) - ((2 * ((v37 >> 13) ^ 0xA8)) & 0xD6) - 21;
    unsigned int v34 = (v37 >> 21) ^ 0x1D;
    uint64_t v30 = a29;
    goto LABEL_5;
  }
  uint64_t v30 = a29;
  if (v29 == 2)
  {
    unsigned int v31 = STACK[0x32C];
    unsigned int v34 = STACK[0x330];
    LOBYTE(STACK[0x324]) = ((LODWORD(STACK[0x32C]) >> (a2 - 42)) ^ 0x1D)
                         - ((2 * ((LODWORD(STACK[0x32C]) >> (a2 - 42)) ^ 0x1D)) & 0xD6)
                         - 21;
    LOBYTE(STACK[0x325]) = ((v31 >> 13) ^ 0xA8) + (~(2 * ((v31 >> 13) ^ 0xA8)) | 0x29) - 20;
    char v32 = a2 + 96;
    LOBYTE(STACK[0x326]) = ((v31 >> 5) ^ 0x31) + (~(2 * ((v31 >> 5) ^ 0x31)) | 0x29) - 20;
    HIDWORD(v33) = v31 ^ 5;
    LODWORD(v33) = v34 ^ 0xA0000000;
    LOBYTE(STACK[0x327]) = (v33 >> 29) - ((2 * (v33 >> 29)) & 0xD6) - 21;
    LOBYTE(STACK[0x328]) = ((v34 >> 21) ^ 0x54) - ((2 * ((v34 >> 21) ^ 0x54)) & 0xD6) - 21;
    LOBYTE(STACK[0x329]) = ((v34 >> 13) ^ 8) - ((2 * ((v34 >> 13) ^ 8)) & 0xD6) - 21;
    LOBYTE(STACK[0x32A]) = ((v34 >> 5) ^ 0x87) - ((2 * ((v34 >> 5) ^ 0x87)) & 0xD6) - 21;
    LOBYTE(v34) = (8 * v34) ^ 0x20;
    char v35 = -48;
LABEL_5:
    LOBYTE(STACK[0x32B]) = v34 + v32 - 96 - (v35 & (2 * v34)) - 84;
  }
  return sub_100042874(v30, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_10002CEDC()
{
  BOOL v4 = v0 < 0xDFE65AF6;
  uint64_t v5 = (v2 + 153);
  unint64_t v6 = v1 - 0x16DF25238DD159A5 + v5;
  int v7 = v4 ^ (v6 < v5 + 3756415077);
  BOOL v8 = v6 < v0;
  if (!v7) {
    BOOL v4 = v8;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((1044 * v4) ^ v2)))();
}

uint64_t sub_10002CF44()
{
  int v8 = ((v7 + 1172267476 - 2 * ((v7 - 144) & 0x45DF6264)) ^ 0x282B7A6D) * v0;
  *(void *)(v7 - 136) = v5;
  *(_DWORD *)(v7 - 128) = v1 + v4 - v8;
  *(_DWORD *)(v7 - 144) = (v3 + 1214) ^ v8;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 ^ 0x804)))(v7 - 144);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((2 * (((v3 + 100) ^ (*(_DWORD *)(v7 - 140) == v6)) & 1)) & 0xFB | (4 * (((v3 + 100) ^ (*(_DWORD *)(v7 - 140) == v6)) & 1))) ^ (v3 + 835))))(v9);
}

uint64_t sub_10002CF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(v28 - 112) = v24
                         + ((((v28 - 128) ^ 0xD80A7276 | 0x3A86F137)
                           - ((v28 - 128) ^ 0xD80A7276)
                           + (((v28 - 128) ^ 0xD80A7276) & 0xC5790EC8)) ^ 0x5818FB23)
                         * v27
                         + 395;
  *(void *)(v28 - 104) = v26;
  *(void *)(v28 - 120) = a24;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v24 + 951)))(v28 - 128);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * ((106
                                              * (((((v24 - 102) & 0x7F) + 124) ^ ((*(_DWORD *)(v28 - 128) - 1263233869) < 0xBEAB8916)) & 1)) ^ v24)))(v29);
}

uint64_t sub_10002D014@<X0>(int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  *(_DWORD *)(v53 - 128) = (a1 - 197) | 0x444;
  uint64_t v54 = *(void *)(v52 + 8 * (a1 - 184)) - 4;
  int v55 = *(unsigned __int8 *)(v54 + (*(unsigned __int8 *)(v50 - 0x7785963AF3444770) ^ 0xD7));
  *(_DWORD *)(v53 - 192) = a2;
  uint64_t v56 = *v51 ^ 0xB1;
  uint64_t v57 = *(void *)(v52 + 8 * (a1 - 69)) - 4;
  uint64_t v58 = *(void *)(v52 + 8 * (a1 ^ 0xAB)) - 12;
  int v59 = *(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v50 - 0x7785963AF3444765) ^ 0x49));
  int v60 = ((*(unsigned __int8 *)(v57 + v56) ^ 0xDF) << (((a1 + 59) | 0x44) - 61)) | ((v55 ^ 0x95) << 8);
  HIDWORD(v61) = ~v59;
  LODWORD(v61) = (v59 ^ 0xFFFFFFE7) << 24;
  LOBYTE(v56) = v61 >> 26;
  uint64_t v62 = *(void *)(v52 + 8 * (a1 ^ 0xB4)) - 8;
  int v63 = *(unsigned __int8 *)(v57 + (*(unsigned __int8 *)(v50 - 0x7785963AF3444766) ^ 0xB8));
  int v64 = *(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v50 - 0x7785963AF3444769) ^ 0x6BLL));
  HIDWORD(v61) = ~v64;
  LODWORD(v61) = (v64 ^ 0xFFFFFFE7) << 24;
  LOBYTE(v59) = *(unsigned char *)(v54 + (*(unsigned __int8 *)(v50 - 0x7785963AF3444764) ^ 0x2ELL));
  int v65 = ((v61 >> 26) ^ 0x53) << 16;
  int v66 = *(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v50 - 0x7785963AF3444771) ^ 0x47));
  HIDWORD(v61) = ~v66;
  LODWORD(v61) = (v66 ^ 0xFFFFFFE7) << 24;
  int v67 = v60 | (*(unsigned char *)(v62 + (*(unsigned __int8 *)(v50 - 0x7785963AF344476FLL) ^ 0xECLL)) - 101) ^ 9 | (((v61 >> 26) ^ 0x1E) << 16);
  int v68 = v65 | ((*(unsigned __int8 *)(v54 + (*(unsigned __int8 *)(v50 - 0x7785963AF3444768) ^ 0x77)) ^ 0x5A) << 8);
  LODWORD(v58) = *(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v50 - 0x7785963AF344476DLL) ^ 0xCBLL));
  HIDWORD(v61) = ~v58;
  LODWORD(v61) = (v58 ^ 0xFFFFFFE7) << 24;
  int v69 = *(unsigned __int8 *)(v62 + (*(unsigned __int8 *)(v50 - 0x7785963AF3444763) ^ 0x36));
  LOBYTE(v65) = *(unsigned char *)(v62 + (*(unsigned __int8 *)(v50 - 0x7785963AF3444767) ^ 0xB5));
  int v70 = ((v56 ^ 0xFB) << 16) | ((v63 ^ 0x67) << 24) | ((v59 ^ 0x50) << 8);
  LODWORD(v54) = ((*(unsigned char *)(v62 + (*(unsigned __int8 *)(v50 - 0x7785963AF344476BLL) ^ 0xA9)) - 101) | ((*(unsigned __int8 *)(v54 + (*(unsigned __int8 *)(v50 - 0x7785963AF344476CLL) ^ 0x30)) ^ 0xA0) << 8)) & 0xFF00FFFF | (((v61 >> 26) ^ 0xBA) << 16) | ((*(unsigned __int8 *)(v57 + (*(unsigned __int8 *)(v50 - 0x7785963AF344476ELL) ^ 0x35)) ^ 0x10) << 24);
  int v71 = v68 | ((*(unsigned __int8 *)(v57 + (*(unsigned __int8 *)(v50 - 0x7785963AF344476ALL) ^ 0xBFLL)) ^ 9) << 24);
  int v72 = v69 - 101;
  uint64_t v73 = *(void *)(v52 + 8 * (a1 ^ 0xC5)) - 8;
  uint64_t v74 = *(void *)(v52 + 8 * (a1 - 98)) - 4;
  int v75 = *(_DWORD *)(v74 + 4 * (v56 ^ 0x61u)) ^ *(_DWORD *)(v73
                                                                            + 4
                                                                            * ((v69 - 101) ^ 0xFDu));
  uint64_t v76 = *(void *)(v52 + 8 * (a1 ^ 0x7C));
  unsigned int v77 = ((v75 ^ 0xD50F15E2) - 2 * ((v75 ^ 0xD50F15E2) & 0x57AAE03F ^ v75 & 8) + 1470816311) ^ *(_DWORD *)(v76 + 4 * (v63 ^ 0xF2u));
  uint64_t v78 = *(void *)(v52 + 8 * (a1 - 126)) - 4;
  unsigned int v79 = *(_DWORD *)(v78 + 4 * (v59 ^ 0x68u)) ^ v67 ^ (v77 - ((2 * v77) & 0xF6830054) + 2067890218);
  LODWORD(v506) = v70 & 0xFFFFFF00 | v72 ^ 0x2A;
  unsigned int v80 = v71 & 0xFFFFFF00 | (v65 - 101) ^ 0xA8;
  unint64_t v505 = __PAIR64__(v67, v54);
  int v81 = v79 ^ v54;
  unsigned int v400 = v79;
  LODWORD(v54) = v79 ^ v54 ^ 0x4D;
  *(_DWORD *)(v53 - 184) = v81;
  *(_DWORD *)(v53 - 136) = v54 ^ v80;
  LODWORD(v57) = v54;
  unsigned __int8 v394 = v54;
  int v82 = v54 ^ v80 ^ (v506
                   - 2 * ((v70 & 0x78CE300 | (v72 ^ 0x2A) & 0xFD) ^ (v72 ^ 0x2A) & 0x14)
                   - 2020809751);
  int v437 = BYTE2(v82);
  int v83 = *(_DWORD *)(v74 + 4 * (BYTE2(v82) ^ 0x32u)) ^ *(_DWORD *)(v78 + 4 * (BYTE1(v82) ^ 0x19u));
  char v419 = BYTE2(v82);
  int v445 = v82;
  unsigned int v84 = ((v83 ^ 0xD2905607) - 2 * ((v83 ^ 0xD2905607) & 0x7CDEC3DF ^ v83 & 0x10) + 2094973903) ^ *(_DWORD *)(v73 + 4 * (v82 ^ 0xC0u));
  unsigned int v85 = (v82 ^ 0x3D7BCE40u) >> 24;
  *(_DWORD *)(v53 - 200) = v85;
  LODWORD(v54) = v79 ^ *(_DWORD *)(v76 + 4 * (v85 ^ 0x65)) ^ (v84 - ((2 * v84) & 0xAF55C06E) + 1470816311);
  HIDWORD(v504) = v80;
  int v526 = v54 ^ 0x90DA3F3;
  int v86 = v54;
  *(_DWORD *)(v53 - 168) = v54;
  LODWORD(v54) = v54 ^ 0x90DA3F3 ^ (v80 - 2 * (v80 & 0x90DA3F7 ^ ((v65 - 101) ^ 0xA8) & 4) + 151888883);
  unsigned int v87 = v54 ^ v82 ^ 0x3D7BCE40;
  *(_DWORD *)(v53 - 140) = v54;
  int v512 = BYTE2(v87);
  int v455 = ((unsigned __int16)(v54 ^ v82 ^ 0xCE40) >> 8);
  unsigned int v88 = *(_DWORD *)(v74 + 4 * (BYTE2(v87) ^ 0x2Eu)) ^ *(_DWORD *)(v78 + 4 * (v455 ^ 0x9Bu)) ^ 0xD2905607;
  int v530 = (v54 ^ v82 ^ 0x40);
  unsigned int v89 = (v88 - ((2 * v88) & 0xF9BD879E) + 2094973903) ^ *(_DWORD *)(v73 + 4 * (v530 ^ 0xD2u));
  unsigned int v90 = v87 ^ 0xF2522EE3;
  *(_DWORD *)(v53 - 208) = HIBYTE(v87);
  unsigned int v91 = (v89 - ((2 * v89) & 0xAF55C06E) + 1470816311) ^ *(_DWORD *)(v76 + 4 * (HIBYTE(v87) ^ 0x69));
  int v92 = v91 ^ v57 ^ 0x78C5B39B;
  int v479 = v91 ^ v57;
  int v93 = v92 ^ v54;
  int v484 = v92 ^ v54;
  int v94 = ((v92 ^ v54 ^ 0xE243BE71) - ((2 * (v92 ^ v54 ^ 0xE243BE71)) & 0xDEB1F54) - 2030727254) ^ v90;
  unsigned int v95 = v94 ^ 0x9547167F;
  int v491 = ((v94 ^ 0x9547167F) >> 16);
  HIDWORD(v506) = ((unsigned __int16)(v94 ^ 0x167F) >> 8);
  unsigned int v96 = *(_DWORD *)(v74 + 4 * (v491 ^ 0x89u)) ^ *(_DWORD *)(v78 + 4 * (HIDWORD(v506) ^ 0x3Au)) ^ 0xD2905607;
  int v496 = (((v92 ^ v54 ^ 0x71) - ((2 * (v92 ^ v54 ^ 0x71)) & 0x54) - 86) ^ v90);
  unsigned int v97 = (v96 - ((2 * v96) & 0xF9BD879E) + 2094973903) ^ *(_DWORD *)(v73 + 4 * (v496 ^ 0xE4u));
  unsigned int v508 = HIBYTE(v95);
  unsigned int v98 = (v97 - ((2 * v97) & 0xAF55C06E) + 1470816311) ^ *(_DWORD *)(v76 + 4 * (HIBYTE(v95) ^ 0x1D));
  unsigned int v463 = v91 ^ v86;
  unsigned int v522 = (v98 - ((2 * v98) & 0xE6627422) + 1932605969) ^ v91 ^ v86;
  *(_DWORD *)(v53 - 240) = v522 ^ 0x73313A11;
  unsigned int v528 = v522 ^ 0x73313A11 ^ v91 ^ v57;
  unsigned int v99 = ((v528 ^ 0xFE25CD6D) - ((2 * (v528 ^ 0xFE25CD6D)) & 0xDEB1F54) - 2030727254) ^ v90;
  *(_DWORD *)(v53 - 216) = BYTE1(v99);
  int v100 = *(_DWORD *)(v78 + 4 * (BYTE1(v99) ^ 0x6Fu));
  *(_DWORD *)(v53 - 224) = BYTE2(v99);
  int v101 = *(_DWORD *)(v74 + 4 * (BYTE2(v99) ^ 0xA8u)) ^ v100;
  *(_DWORD *)(v53 - 248) = HIBYTE(v99);
  unsigned int v102 = ((v101 ^ 0xD2905607) - 2 * ((v101 ^ 0xD2905607) & 0x57AAE03F ^ v101 & 8) + 1470816311) ^ *(_DWORD *)(v76 + 4 * (HIBYTE(v99) ^ 0x85));
  int v518 = (((v528 ^ 0x6D) - ((2 * (v528 ^ 0x6D)) & 0x54) - 86) ^ v90);
  unsigned int v103 = (v102 - ((2 * v102) & 0xF9BD879E) + 2094973903) ^ *(_DWORD *)(v73 + 4 * (v518 ^ 0x25u));
  LODWORD(v54) = (v103 - ((2 * v103) & 0x84653C64) - 1036870094) ^ v92;
  unsigned int v520 = v528 ^ v93;
  unsigned int v392 = v54;
  unsigned int v411 = v54 ^ v528 ^ v93;
  LODWORD(v58) = v411 ^ 0x2FDFEF05 ^ v99;
  *(_DWORD *)(v53 - 256) = v99;
  unsigned int v431 = (v58 ^ 0xDAE8E677) >> 24;
  int v420 = ((v58 ^ 0xDAE8E677) >> 16);
  int v104 = *(_DWORD *)(v74 + 4 * (v420 ^ 0x89u)) ^ *(_DWORD *)(v76 + 4 * (v431 ^ 0x1D));
  int v425 = ((unsigned __int16)(v58 ^ 0xE677) >> 8);
  unsigned int v105 = ((v104 ^ 0xFE7B361A) - 2 * ((v104 ^ 0xFE7B361A) & 0x7B41802B ^ v104 & 1) + 2067890218) ^ *(_DWORD *)(v78 + 4 * (v425 ^ 0x3Au));
  *(_DWORD *)(v53 - 176) = v103 ^ v522 ^ 0x73313A11;
  int v414 = v411 ^ 5 ^ v99;
  unsigned __int8 v430 = BYTE2(v54) ^ 0x16;
  int v106 = v103 ^ v522 ^ 0x73313A11 ^ *(_DWORD *)(v73 + 4 * (v414 ^ 0xECu)) ^ (v105
                                                                             + 2094973903
                                                                             + (~(2 * v105) | 0x6427861)
                                                                             + 1) ^ v54 ^ 0x7C166C11;
  int v107 = v103 ^ v522 ^ 0x73313A11 ^ *(_DWORD *)(v73 + 4 * (v414 ^ 0xECu)) ^ (v105
                                                                             + 2094973903
                                                                             + (~(2 * v105) | 0x6427861)
                                                                             + 1);
  int v501 = v107;
  LODWORD(v58) = (v106 ^ v99) >> 24;
  *(_DWORD *)(v53 - 228) = v58;
  int v493 = (v106 ^ v99);
  LODWORD(v58) = *(_DWORD *)(v76 + 4 * (v58 ^ 0x9B)) ^ *(_DWORD *)(v73 + 4 * (v493 ^ 0x31u)) ^ 0x2B7423F8;
  unsigned int v472 = ((v106 ^ v99) >> 8) ^ 0x86839A;
  int v475 = ((unsigned __int16)(v106 ^ v99) >> 8) ^ 0x9A;
  int v108 = (v58 - ((2 * v58) & 0xF6830054) + 2067890218) ^ *(_DWORD *)(v78
                                                                   + 4
                                                                   * (((unsigned __int16)(v106 ^ v99) >> 8) ^ 0xA0u));
  unsigned int v109 = v106 ^ v99 ^ 0x8FFC16CA;
  int v467 = ((v106 ^ v99) >> 16);
  int v110 = (v108 - ((2 * v108) & 0x53A3AC5A) - 1445865939) ^ *(_DWORD *)(v74 + 4 * (v467 ^ 0xAu));
  unsigned int v443 = (v110 - ((2 * v110) & 0xAA800EC6) - 717224093) ^ v107;
  unsigned __int8 v111 = (v110 - ((2 * v110) & 0xC6) + 99) ^ v107 ^ 0xC9;
  int v439 = v443 ^ 0x28C39DC9 ^ v106;
  unsigned int v482 = v106 ^ v411 ^ 0x2FDFEF05;
  int v112 = v106;
  int v459 = v106;
  *(_DWORD *)(v53 - 148) = v482 ^ 0xC737CFE7;
  LODWORD(v54) = ((v439 ^ 0x5A137D54) - ((2 * (v439 ^ 0x5A137D54)) & 0x886042E0) + 1144004976) ^ v482 ^ 0xC737CFE7;
  *(_DWORD *)(v53 - 144) = v54;
  int v113 = v54 ^ 0x9DBE0BFA;
  int v114 = ((v54 ^ 0x1A21D3FA) - 2 * ((v54 ^ 0x9DBE0BFA) & 0xF ^ (v54 ^ 0x1A21D3FA) & 0x97F8C6F) + 159353952) ^ v109;
  int v524 = ((unsigned __int16)(((v54 ^ 0xD3FA)
                                             - 2 * ((v54 ^ 0xBFA) & 0xF ^ (v54 ^ 0xD3FA) & 0x8C6F)
                                             - 29600) ^ v109 ^ 0xB031) >> 8);
  int v115 = *(_DWORD *)(v78 + 4 * (v524 ^ 0x3Au));
  int v510 = (((v54 ^ 0xFA) - 2 * ((v54 ^ 0xFA) & 0xF ^ (v54 ^ 0xFA) & 0x6F) + 96) ^ v109);
  int v116 = *(_DWORD *)(v73 + 4 * (v510 ^ 0xAAu));
  int v117 = BYTE2(v114) ^ 0x9A;
  int v118 = ((v116 ^ v115 ^ 0x79F43E5) - 2 * ((v116 ^ v115 ^ 0x79F43E5) & 0x29D1D62F ^ (v116 ^ v115) & 2) - 1445865939) ^ *(_DWORD *)(v74 + 4 * (((v114 ^ 0x479AB031u) >> 16) ^ 0x89u));
  unsigned int v433 = (v114 ^ 0x479AB031u) >> 24;
  LODWORD(v57) = (v118 - ((2 * v118) & 0xAF55C06E) + 1470816311) ^ *(_DWORD *)(v76 + 4 * (v433 ^ 0x1D));
  unsigned int v119 = v57 ^ v112;
  LODWORD(v54) = ((v57 ^ v112 ^ 0xA6C48CD5) - ((2 * (v57 ^ v112 ^ 0xA6C48CD5)) & 0x12FF18C0) + 159353952) ^ v109;
  unsigned int v120 = BYTE3(v54);
  int v121 = ((unsigned __int16)(((v57 ^ v112 ^ 0x8CD5) - ((2 * (v57 ^ v112 ^ 0x8CD5)) & 0x18C0) - 29600) ^ v109) >> 8);
  int v122 = *(_DWORD *)(v76 + 4 * (BYTE3(v54) ^ 5)) ^ *(_DWORD *)(v78 + 4 * (BYTE1(v54) ^ 0x6Fu)) ^ 0x2CEB601D;
  int v487 = (((v57 ^ v112 ^ 0xD5) - ((2 * (v57 ^ v112 ^ 0xD5)) & 0xC0) + 96) ^ v109);
  unsigned int v123 = (v122 - ((2 * v122) & 0xF9BD879E) + 2094973903) ^ *(_DWORD *)(v73 + 4 * (v487 ^ 0x25u));
  unsigned int v124 = v123 - ((2 * v123) & 0x53A3AC5A);
  LOBYTE(v109) = v57 ^ v443 ^ 0xC9;
  int v125 = BYTE2(v54);
  unsigned int v126 = (v124 - 1445865939) ^ *(_DWORD *)(v74 + 4 * (BYTE2(v54) ^ 0xA8u)) ^ v57 ^ v443 ^ 0x28C39DC9;
  LODWORD(v54) = v113 ^ v126 ^ v54;
  *(_DWORD *)(v53 - 160) = v113 ^ v126;
  int v516 = BYTE1(v54);
  unsigned int v386 = BYTE3(v54);
  LODWORD(v58) = v526 ^ ((v81 ^ 0xBAF72DE4) - ((2 * (v81 ^ 0xBAF72DE4)) & 0x121B47E6) + 151888883);
  int v127 = *(_DWORD *)(v78 + 4 * (BYTE1(v54) ^ 0x44u)) ^ *(_DWORD *)(v76 + 4 * (BYTE3(v54) ^ 0x47)) ^ 0x2CEB601D;
  int v398 = v54;
  unsigned int v128 = (v127 - ((2 * v127) & 0xF9BD879E) + 2094973903) ^ *(_DWORD *)(v73 + 4 * (v54 ^ 0xD5u));
  int v376 = BYTE2(v54);
  int v129 = (v128 - ((2 * v128) & 0x53A3AC5A) - 1445865939) ^ *(_DWORD *)(v74 + 4 * (BYTE2(v54) ^ 0xCBu));
  unsigned int v130 = (v129 - ((2 * v129) & 0xFBECD266) - 34182861) ^ v126;
  LODWORD(v504) = v130 ^ 0x7D01449A;
  int v380 = v126 ^ v119;
  HIDWORD(v503) = v126 ^ v119 ^ 0x5200ED29 ^ ((v130 ^ 0x7D01449A)
                                            + 1990337086
                                            + ((2 * ((v130 ^ 0x7D01449A) & 0x76A2223F ^ v130 & 2)) ^ 0xFFFFFFFB));
  LODWORD(v503) = v113 ^ v126 ^ 0x4018996 ^ HIDWORD(v503);
  HIDWORD(a44) = (v503 - ((2 * v503) & 0xFD785302) - 21223039) ^ v54;
  unsigned int v131 = v57 ^ v443 ^ 0x28C39DC9 ^ 0x1B9155BD;
  int v132 = (char *)*(&off_10007DD80 + a1 - 105) - 8;
  LODWORD(v54) = (BYTE2(v131) + 115737709 + ((2 * BYTE2(v131) + 88) & 0x80 ^ 0xFFF3EBFF)) ^ *(_DWORD *)&v132[4 * (BYTE2(v131) ^ 0x2D)];
  unsigned int v133 = ((v125 ^ 0x89) + 115737709 + ((2 * (v125 ^ 0x89) + 88) & 0x80 ^ 0xFFF3EBFF)) ^ *(_DWORD *)&v132[4 * (v125 ^ 0xA4)];
  uint64_t v134 = (uint64_t)*(&off_10007DD80 + a1 - 142);
  LODWORD(v57) = (v54 - ((2 * v54) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134
                                                                           + 4
                                                                           * (((unsigned __int16)(v57 ^ v443 ^ 0x9DC9) >> 8) ^ 0x47u));
  int v135 = (char *)*(&off_10007DD80 + a1 - 132) - 4;
  unsigned int v136 = (v133 - ((2 * v133) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)&v135[4 * (v120 ^ 0xCC)];
  int v137 = (char *)*(&off_10007DD80 + (a1 ^ 0xE0)) - 4;
  int v138 = *(_DWORD *)&v137[4 * ((v113 ^ v119) ^ 0x53)];
  unsigned int v139 = 181304767 * v138 - ((362609534 * v138 + 1167171854) & 0xFE99652A);
  int v140 = ((v113 ^ v119) >> 16);
  LODWORD(v54) = *(_DWORD *)&v132[4 * (v140 ^ 0xAA)] ^ *(_DWORD *)&v135[4 * (((v113 ^ v119) >> 24) ^ 0x3E)] ^ ((v140 ^ 0x87) + 115737709 + ((2 * (((v140 ^ 0x87) + 44) & 0x43 ^ (v140 ^ 0x87 | 0x7FFFFFFC))) ^ 0xC1407)) ^ (v139 - 1575648484);
  int v141 = *(_DWORD *)&v137[4 * (v119 ^ 0x74)];
  unsigned int v142 = ((~(362609534 * v141 + 93430030) | 0xE631BB35) + 181304767 * v141 - 1347423507) ^ *(_DWORD *)(v134 + 4 * (BYTE1(v119) ^ 0x5Au));
  unsigned int v499 = v142 - ((2 * v142) & 0xFE99652A);
  unsigned int v527 = (BYTE2(v119) ^ 0x4C) + 115737709 + ((2 * (BYTE2(v119) ^ 0x4C) + 88) & 0x80 ^ 0xFFF3EBFF);
  unsigned int v477 = v136 - ((2 * v136) & 0x19CE44CA);
  int v469 = v54 - ((2 * v54) & 0x19CE44CA);
  unsigned int v507 = (v57 - ((2 * v57) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)&v135[4 * HIBYTE(v131)] ^ (181304767
                                                                                             * *(_DWORD *)&v137[4 * (v109 ^ 0x7D)]
                                                                                             + 583585927);
  unsigned __int8 v383 = v58;
  unsigned int v143 = *(_DWORD *)&v132[4 * (((v58 ^ 0xE9B45E6C) >> 16) ^ 0xF5)] ^ ((((v58 ^ 0xE9B45E6C) >> 16) ^ 0xD8) + 115737709 + ((2 * (((v58 ^ 0xE9B45E6C) >> 16) ^ 0xD8) + 88) & 0x80 ^ 0xFFF3EBFF));
  unsigned int v144 = *(_DWORD *)(v53 - 140) ^ 0x31676F78;
  LODWORD(v57) = *(_DWORD *)&v132[4 * (BYTE2(v144) ^ 0x7B)] ^ ((BYTE2(v144) ^ 0x56)
                                                             + 115737709
                                                             + ((2 * (BYTE2(v144) ^ 0x56) + 88) & 0x80 ^ 0xFFF3EBFF));
  int v145 = (v57 - ((2 * v57) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)&v135[4 * HIBYTE(v144)];
  LODWORD(v57) = *(_DWORD *)&v132[4 * (v512 ^ 0x34)] ^ ((v512 ^ 0x19)
                                                      + 115737709
                                                      + ((2 * (v512 ^ 0x19) + 88) & 0x80 ^ 0xFFF3EBFF));
  LODWORD(v54) = (v57 - ((2 * v57) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134 + 4 * (v455 ^ 5u));
  int v456 = v145 - ((2 * v145) & 0x19CE44CA);
  int v513 = v54 + 2135732885 + (~(2 * v54) | 0x1669AD5);
  LODWORD(v54) = *(_DWORD *)&v137[4 * (*(_DWORD *)(v53 - 168) ^ 0xDF)];
  unsigned int v146 = *(_DWORD *)(v53 - 168) ^ 0x5A18571F;
  LODWORD(v54) = *(_DWORD *)&v135[4 * HIBYTE(v146)] ^ ((BYTE2(v146) ^ 0xC1)
                                                     + 115737709
                                                     + ((2 * (BYTE2(v146) ^ 0xC1) + 88) & 0x80 ^ 0xFFF3EBFF)) ^ *(_DWORD *)&v132[4 * (BYTE2(v146) ^ 0xEC)] ^ (181304767 * v54 - ((362609534 * v54 + 1167171854) & 0xFE99652A) - 1575648484);
  int v453 = v54 - ((2 * v54) & 0x19CE44CA);
  LODWORD(v54) = *(_DWORD *)&v135[4 * ((v58 ^ 0xE9B45E6C) >> 24)] ^ (v143
                                                                                 - ((2 * v143) & 0xFE99652A)
                                                                                 + 2135732885);
  unsigned int v448 = BYTE1(v58) ^ 0xB4;
  int v450 = v54 - ((2 * v54) & 0x19CE44CA);
  LOWORD(v131) = v439 ^ 0x8EA4;
  LODWORD(v58) = v439 ^ 0x35C48CD5;
  unsigned int v147 = *(_DWORD *)&v132[4 * (v117 ^ 0xDE)] ^ ((v117 ^ 0xF3)
                                              + 115737709
                                              + ((2 * (v117 ^ 0xF3) + 88) & 0x80 ^ 0xFFF3EBFF));
  LODWORD(v54) = *(_DWORD *)&v132[4 * (((v439 ^ 0x35C48CD5u) >> 16) ^ 0xFE)] ^ ((((v439 ^ 0x35C48CD5u) >> 16) ^ 0xD3)
                                                                                               + 115737709
                                                                                               + ((2
                                                                                                 * (((v439 ^ 0x35C48CD5u) >> 16) ^ 0xD3)
                                                                                                 + 88) & 0x80 ^ 0xFFF3EBFF));
  int v148 = *(_DWORD *)&v137[4 * (v113 ^ 0xC5)];
  LODWORD(v57) = (v147 - ((2 * v147) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)&v135[4 * (v433 ^ 0x36)];
  unsigned int v149 = *(_DWORD *)&v132[4 * (BYTE2(v443) ^ 0xEF)] ^ ((BYTE2(v443) ^ 0xC2)
                                                     + 115737709
                                                     + ((2 * (BYTE2(v443) ^ 0xC2) + 88) & 0x80 ^ 0xFFF3EBFF));
  LODWORD(v73) = (v149 - ((2 * v149) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134
                                                                             + 4
                                                                             * (((unsigned __int16)(v443 ^ 0x9DC9) >> 8) ^ 0x8Bu));
  int v434 = v57 - ((2 * v57) & 0x19CE44CA);
  unsigned int v440 = HIBYTE(v443) ^ 0xC4;
  int v444 = v73 - ((2 * v73) & 0xFE99652A);
  LODWORD(v57) = *(_DWORD *)(v53 - 144) ^ 0xFF21D3FA;
  LODWORD(v57) = *(_DWORD *)(v134 + 4 * (BYTE1(v57) ^ 0x20u)) ^ ((BYTE2(v57) ^ 0xD7)
                                                                 + 115737709
                                                                 + ((2 * (BYTE2(v57) ^ 0xD7) + 88) & 0x80 ^ 0xFFF3EBFF)) ^ *(_DWORD *)&v132[4 * (BYTE2(v57) ^ 0xFA)] ^ ((~(362609534 * v148 + 93430030) | 0xE631BB35) + 181304767 * v148 - 1347423507);
  LODWORD(v54) = (v54 - ((2 * v54) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)&v135[4 * BYTE3(v58)] ^ (181304767 * *(_DWORD *)&v137[4 * (v131 ^ 0x99)] + 583585927);
  unsigned int v404 = BYTE1(v131) ^ 0x14;
  unsigned int v373 = v111 ^ 0xA3;
  int v406 = v54 - ((2 * v54) & 0x19CE44CA);
  int v423 = v57 - ((2 * v57) & 0xFE99652A);
  LODWORD(v54) = BYTE1(v82) ^ 0x73;
  int v150 = *(_DWORD *)(v53 - 136);
  unsigned int v389 = BYTE1(v150) ^ 0xF5;
  unsigned int v409 = v400 ^ 0x2BEAE26B;
  LODWORD(v57) = ((v400 ^ 0x2BEAE26B) >> 16);
  LODWORD(v57) = *(_DWORD *)&v132[4 * (v57 ^ 0xEC)] ^ ((v57 ^ 0xC1)
                                                                   + 115737709
                                                                   + ((2
                                                                     * (((v57 ^ 0xC1) + 44) & 0x41 ^ (v57 ^ 0xC1 | 0x7FFFFFFE))) ^ 0xC1403)) ^ (181304767 * *(_DWORD *)&v137[4 * (v400 ^ 0x1E)] + 583585927);
  LODWORD(v57) = (v57 - ((2 * v57) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134 + 4 * (BYTE1(v400) ^ 8u));
  unsigned int v151 = *(_DWORD *)&v132[4 * (v437 ^ 0xAC)] ^ ((v437 ^ 0x81) + 115737709 + ((2 * v419 + 88) & 0x80 ^ 0xFFF3EBFF));
  LODWORD(v58) = *(_DWORD *)&v137[4 * (v394 ^ 0x55)];
  int v438 = v57 - ((2 * v57) & 0xFE99652A);
  int v401 = BYTE2(v150);
  unsigned int v417 = (BYTE2(v150) ^ 0xA7) + 115737709 + ((2 * (BYTE2(v150) ^ 0xA7) + 88) & 0x80 ^ 0xFFF3EBFF);
  LODWORD(v54) = (v151 - ((2 * v151) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134 + 4 * v54) ^ (181304767 * *(_DWORD *)&v137[4 * (v445 ^ 0xB3)] + 583585927);
  int v446 = v54 - ((2 * v54) & 0xFE99652A);
  unsigned int v152 = *(_DWORD *)(v53 - 184);
  LODWORD(v54) = (181304767 * v58 - ((362609534 * v58 + 1167171854) & 0xFE99652A) - 1575648484) ^ ((BYTE2(v152) ^ 0xBA)
                                                                                                 + 115737709
                                                                                                 + ((2 * (BYTE2(v152) ^ 0xBA) + 88) & 0x80 ^ 0xFFF3EBFF)) ^ *(_DWORD *)&v135[4 * (HIBYTE(v152) ^ 0x2F)] ^ *(_DWORD *)&v132[4 * (BYTE2(v152) ^ 0x97)];
  int v395 = v54 - ((2 * v54) & 0x19CE44CA);
  LODWORD(v54) = *(_DWORD *)&v132[4 * (((v411 ^ 0x2FDFEF05) >> 16) ^ 0x1F)] ^ ((((v411 ^ 0x2FDFEF05) >> 16) ^ 0x32)
                                                                                              + 115737709
                                                                                              + ((2
                                                                                                * (((((v411 ^ 0x2FDFEF05) >> 16) ^ 0x32)
                                                                                                  + 44) & 0x41 ^ (((v411 ^ 0x2FDFEF05) >> 16) | 0x7FFFFFFE))) ^ 0xC1403));
  unsigned int v153 = *(_DWORD *)(v53 - 176);
  LODWORD(v57) = *(_DWORD *)&v132[4 * (BYTE2(v153) ^ 0x56)] ^ ((BYTE2(v153) ^ 0x7B)
                                                             + 115737709
                                                             + ((2
                                                               * (((BYTE2(v153) ^ 0x7B) + 44) & 0x41 ^ (HIWORD(v153) ^ 0xA0E5 | 0x7FFFFFFE))) ^ 0xC1403));
  int v154 = *(_DWORD *)&v137[4 * (v392 ^ 0xFB)];
  LODWORD(v54) = (v54 - ((2 * v54) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134
                                                                           + 4
                                                                           * (((unsigned __int16)(v411 ^ 0xEF05) >> 8) ^ 0xA6u)) ^ (181304767 * *(_DWORD *)&v137[4 * (v411 ^ 1)] + 583585927);
  LODWORD(v58) = ((~(362609534 * v154 + 93430030) | 0xE631BB35) + 181304767 * v154 - 1347423507) ^ *(_DWORD *)(v134 + 4 * (BYTE1(v392) ^ 0xEFu));
  int v155 = HIBYTE(v411) ^ 0xBA;
  int v412 = v54 - ((2 * v54) & 0xFE99652A);
  HIDWORD(v374) = v58 - ((2 * v58) & 0xFE99652A);
  int v375 = v155;
  LODWORD(v57) = (v57 - ((2 * v57) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)&v135[4 * (HIBYTE(v153) ^ 0xD9)] ^ (181304767 * *(_DWORD *)&v137[4 * (v153 ^ 0x79)] + 583585927);
  LODWORD(v58) = *(_DWORD *)&v132[4 * (v420 ^ 0x86)] ^ ((v420 ^ 0xAB)
                                                      + 115737709
                                                      + ((2 * (v420 ^ 0xAB) + 88) & 0x80 ^ 0xFFF3EBFF));
  LODWORD(v58) = (v58 - ((2 * v58) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)&v135[4 * v431];
  unsigned int v370 = v425 ^ 0xEE;
  unsigned int v366 = v414 ^ 0x4A;
  int v426 = v58 - ((2 * v58) & 0x19CE44CA);
  int v421 = v57 - ((2 * v57) & 0x19CE44CA);
  int v415 = v430;
  unsigned int v432 = (v430 ^ 0x65) + 115737709 + ((2 * (v430 ^ 0x65) + 88) & 0x80 ^ 0xFFF3EBFF);
  unsigned int v156 = *(_DWORD *)&v132[4 * (v376 ^ 0x8B)] ^ ((v376 ^ 0xA6)
                                              + 115737709
                                              + ((2 * (v376 ^ 0xA6) + 88) & 0x80 ^ 0xFFF3EBFF));
  int v377 = BYTE2(*(_DWORD *)(v53 - 160));
  unsigned int v428 = (v377 ^ 0x8F) + 115737709 + ((2 * (v377 ^ 0x8F) + 88) & 0x80 ^ 0xFFF3EBFF);
  LODWORD(v57) = v386 ^ 0x22;
  unsigned int v157 = *(_DWORD *)&v132[4 * (BYTE2(v126) ^ 0xE8)] ^ ((BYTE2(v126) ^ 0xC5)
                                                     + 115737709
                                                     + ((2 * (BYTE2(v126) ^ 0xC5) + 88) & 0x80 ^ 0xFFF3EBFF));
  unsigned int v369 = ((unsigned __int16)(v113 ^ v119) >> 8) ^ 0x8E;
  unsigned int v158 = (181304767 * *(_DWORD *)&v137[4 * (v126 ^ 0xCA)] + 583585927) ^ *(_DWORD *)&v135[4 * (HIBYTE(v126) ^ 0x8E)] ^ (v157 - ((2 * v157) & 0xFE99652A) + 2135732885);
  unsigned int v387 = v126 ^ v119 ^ 0x44039AAA;
  LODWORD(v58) = (181304767 * *(_DWORD *)&v137[4 * (v380 ^ 0xDB)] + 583585927) ^ (((v380 ^ 0x44039AAAu) >> 16)
                                                                                                 + 115737709
                                                                                                 + ((2 * ((v380 ^ 0x44039AAAu) >> 16) + 88) & 0x80 ^ 0xFFF3EBFF)) ^ *(_DWORD *)&v132[4 * (((v380 ^ 0x44039AAAu) >> 16) ^ 0x2D)];
  unsigned int v367 = BYTE1(v126) ^ 0x16;
  unsigned int v372 = v158 - ((2 * v158) & 0x19CE44CA);
  LODWORD(v56) = (v58 - ((2 * v58) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134
                                                                           + 4
                                                                           * (((unsigned __int16)(v126 ^ v119) >> 8) ^ 0xC0u));
  unsigned int v159 = *(_DWORD *)&v135[4 * v57] ^ (181304767 * *(_DWORD *)&v137[4 * (v398 ^ 0xFE)] + 583585927) ^ (v156 - ((2 * v156) & 0xFE99652A) + 2135732885);
  int v399 = v56 - ((2 * v56) & 0xFE99652A);
  LODWORD(v57) = *(_DWORD *)&v137[4 * (v463 ^ 0xEC)];
  unsigned int v381 = v159 - ((2 * v159) & 0x19CE44CA);
  int v160 = 181304767 * v57 - ((362609534 * v57 + 1167171854) & 0xFE99652A);
  LODWORD(v57) = *(_DWORD *)&v132[4 * (v491 ^ 0x32)] ^ ((v491 ^ 0x1F)
                                                      + 115737709
                                                      + ((2 * (v491 ^ 0x1F) + 88) & 0x80 ^ 0xFFF3EBFF));
  LODWORD(v56) = *(_DWORD *)&v137[4 * (v479 ^ 0xE6)];
  unsigned int v161 = *(_DWORD *)&v135[4 * (HIBYTE(v463) ^ 0xCA)] ^ ((BYTE2(v463) ^ 0x2F)
                                                      + 115737709
                                                      + ((2 * (BYTE2(v463) ^ 0x2F) + 88) & 0x80 ^ 0xFFF3EBFF)) ^ *(_DWORD *)&v132[4 * (BYTE2(v463) ^ 2)] ^ (v160 - 1575648484);
  LODWORD(v54) = (v57 - ((2 * v57) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134 + 4 * (HIDWORD(v506) ^ 0x8Cu)) ^ (181304767 * *(_DWORD *)&v137[4 * (v496 ^ 0xD9)] + 583585927);
  LODWORD(v57) = *(_DWORD *)&v135[4 * ((v479 ^ 0x49A657C7u) >> 24)] ^ ((((v479 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                                     + 115737709
                                                                     + ((2
                                                                       * (((v479 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                                       + 88) & 0x80 ^ 0xFFF3EBFF)) ^ *(_DWORD *)&v132[4 * (((v479 ^ 0x49A657C7u) >> 16) ^ 0x18)] ^ (181304767 * v56 - ((362609534 * v56 + 1167171854) & 0xFE99652A) - 1575648484);
  LODWORD(v56) = *(_DWORD *)&v132[4 * (((v484 ^ 0xDCBEA80E) >> 16) ^ 0x2D)] ^ (((v484 ^ 0xDCBEA80E) >> 16)
                                                                                              + 115737709
                                                                                              + ((2
                                                                                                * ((v484 ^ 0xDCBEA80E) >> 16)
                                                                                                + 88) & 0x80 ^ 0xFFF3EBFF));
  unsigned int v497 = v508 ^ 0xAA;
  HIDWORD(v506) = (v161 - ((2 * v161) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134 + 4 * (BYTE1(v463) ^ 0x2Eu));
  int v492 = v54 - ((2 * v54) & 0xFE99652A);
  unsigned int v464 = BYTE1(v479) ^ 0xB9;
  LODWORD(v54) = (v56 - ((2 * v56) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)&v135[4 * ((v484 ^ 0xDCBEA80E) >> 24)] ^ (181304767 * *(_DWORD *)&v137[4 * (v484 ^ 0x9E)] + 583585927);
  unsigned int v364 = BYTE1(v484) ^ 0x28;
  int v485 = v57 - ((2 * v57) & 0x19CE44CA);
  int v480 = v54 - ((2 * v54) & 0x19CE44CA);
  unsigned int v162 = *(_DWORD *)&v132[4 * (v467 ^ 0xC1)] ^ ((v467 ^ 0xEC)
                                              + 115737709
                                              + ((2 * (v467 ^ 0xEC) + 88) & 0x80 ^ 0xFFF3EBFF));
  LODWORD(v57) = *(_DWORD *)&v137[4 * (*(_DWORD *)(v53 - 148) ^ 0xDE)];
  LODWORD(v54) = (v162 - ((2 * v162) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134
                                                                             + 4
                                                                             * ((v475 - ((2 * v472) & 0x166) + 179) ^ 0x54)) ^ (181304767 * *(_DWORD *)&v137[4 * (v493 ^ 0xE2)] + 583585927);
  int v163 = (181304767 * v57 - ((362609534 * v57 + 1167171854) & 0xFE99652A) - 1575648484) ^ *(_DWORD *)&v135[4 * (HIBYTE(v482) ^ 0x89)];
  int v494 = v54 - ((2 * v54) & 0xFE99652A);
  int v473 = v163 - ((2 * v163) & 0x19CE44CA);
  LODWORD(v54) = *(_DWORD *)&v132[4 * (((v459 ^ 0xEEA2BFA8) >> 16) ^ 0x86)] ^ ((((v459 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                              + 115737709
                                                                                              + ((2
                                                                                                * (((v459 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                                + 88) & 0x80 ^ 0xFFF3EBFF));
  LODWORD(v54) = (181304767 * *(_DWORD *)&v137[4 * (v459 ^ 0x68)] + 583585927) ^ *(_DWORD *)(v134 + 4 * (BYTE1(v459) ^ 0x55u)) ^ (v54 - 1931009435 + (~(2 * v54) | 0xE631BB35) + 1);
  LODWORD(v57) = ((v501 ^ 0x231B9DB5u) >> 16);
  int v361 = v57 ^ 0xEC;
  int v509 = (v57 ^ 0xC1) + 115737709 + ((2 * (v57 ^ 0xC1) + 88) & 0x80 ^ 0xFFF3EBFF);
  HIDWORD(v363) = v54 - ((2 * v54) & 0xFE99652A);
  int v164 = BYTE2(v482);
  unsigned int v468 = (BYTE2(v482) ^ 0xAC) + 115737709 + ((2 * (BYTE2(v482) ^ 0xAC) + 88) & 0x80 ^ 0xFFF3EBFF);
  unsigned int v165 = v522 ^ 0xE293F505;
  int v166 = *(_DWORD *)&v137[4 * (v518 ^ 0x74)];
  int v167 = *(_DWORD *)&v137[4 * (v510 ^ 0xF0)];
  unsigned int v168 = *(_DWORD *)(v53 - 160);
  int v169 = *(_DWORD *)&v137[4 * (v522 ^ 0x3C)];
  int v483 = 181304767 * *(_DWORD *)&v137[4 * (v487 ^ 0x60)] + 583585927;
  int v523 = 181304767 * *(_DWORD *)&v137[4 * (v530 ^ 0xFB)] + 583585927;
  int v511 = 181304767 * *(_DWORD *)&v137[4 * (*(_DWORD *)(v53 - 140) ^ 0xB8)] + 583585927;
  int v519 = 181304767 * *(_DWORD *)&v137[4 * (v383 ^ 0xAC)] + 583585927;
  HIDWORD(v362) = 181304767 * v167 + 583585927;
  LODWORD(v363) = 181304767 * *(_DWORD *)&v137[4 * v373] + 583585927;
  int v531 = 181304767 * *(_DWORD *)&v137[4 * (*(_DWORD *)(v53 - 136) ^ 0x57)] + 583585927;
  int v384 = 181304767 * *(_DWORD *)&v137[4 * v366] + 583585927;
  int v488 = 181304767 * *(_DWORD *)&v137[4 * (v168 ^ 0x78)] + 583585927;
  HIDWORD(v365) = 181304767 * *(_DWORD *)&v137[4 * (v501 ^ 0x75)] + 583585927;
  LODWORD(v374) = 181304767 * v169 + 583585927;
  unsigned int v170 = (181304767 * v166 - ((362609534 * v166 + 1167171854) & 0xFE99652A) - 1575648484) ^ *(_DWORD *)&v135[4 * (*(_DWORD *)(v53 - 248) ^ 0x7B)];
  LODWORD(v54) = *(_DWORD *)&v132[4 * (BYTE2(v520) ^ 0x9E)] ^ ((BYTE2(v520) ^ 0xB3)
                                                             + 115737709
                                                             + ((2 * (BYTE2(v520) ^ 0xB3) + 88) & 0x80 ^ 0xFFF3EBFF)) ^ (181304767 * *(_DWORD *)&v137[4 * (v520 ^ 0x33)] + 583585927);
  LODWORD(v54) = (v54 - ((2 * v54) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134 + 4 * (BYTE1(v520) ^ 0x1Au));
  LODWORD(v58) = *(_DWORD *)&v132[4 * (BYTE2(v165) ^ 0x3C)] ^ ((BYTE2(v165) ^ 0x11)
                                                             + 115737709
                                                             + ((2 * (BYTE2(v165) ^ 0x11) + 88) & 0x80 ^ 0xFFF3EBFF));
  LODWORD(v57) = (181304767 * *(_DWORD *)&v137[4 * (v528 ^ 0x2A)] + 583585927) ^ ((BYTE2(v528) ^ 0x37)
                                                                                                 + 115737709
                                                                                                 + ((2 * (BYTE2(v528) ^ 0x37) + 88) & 0x80 ^ 0xFFF3EBFF)) ^ *(_DWORD *)&v132[4 * (BYTE2(v528) ^ 0x1A)];
  BYTE1(v152) = BYTE1(v528);
  LODWORD(v57) = (v57 - ((2 * v57) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)&v135[4 * (HIBYTE(v528) ^ 0xF9)];
  *(_DWORD *)(v53 - 248) = *(_DWORD *)&v132[4 * (BYTE2(v119) ^ 0x61)];
  unsigned int v171 = v524 ^ 0x1A;
  int v525 = *(_DWORD *)&v132[4 * (v401 ^ 0x8A)];
  LODWORD(v73) = *(_DWORD *)(v53 - 224);
  int v416 = *(_DWORD *)&v132[4 * (v415 ^ 0x48)];
  HIDWORD(v360) = *(_DWORD *)&v132[4 * (v377 ^ 0xA2)];
  LODWORD(v362) = *(_DWORD *)&v132[4 * v361];
  int v460 = *(_DWORD *)&v132[4 * (v164 ^ 0x81)];
  *(_DWORD *)(v53 - 224) = *(_DWORD *)&v132[4 * (v73 ^ 0x1A)];
  int v172 = ((*(_DWORD *)(v53 - 256) >> 15) & 0x58 ^ 0x48) + (v73 ^ 0x4C64A1B);
  unsigned int v402 = v172 + 35633729 + ((2 * v172) & 0x80 ^ 0xFFF3EBFF);
  int v173 = v54 - ((2 * v54) & 0xFE99652A);
  LODWORD(v360) = *(_DWORD *)(v134 + 4 * (v121 ^ 0xB0u));
  int v462 = *(_DWORD *)(v134 + 4 * v369);
  *(_DWORD *)(v53 - 256) = *(_DWORD *)(v134 + 4 * (BYTE1(*(_DWORD *)(v53 - 140)) ^ 0x85u));
  int v378 = *(_DWORD *)(v134 + 4 * (BYTE1(*(_DWORD *)(v53 - 168)) ^ 0xBDu));
  int v529 = *(_DWORD *)(v134 + 4 * v448);
  HIDWORD(v368) = *(_DWORD *)(v134 + 4 * v171);
  HIDWORD(v359) = *(_DWORD *)(v134 + 4 * v404);
  *(_DWORD *)(v53 - 168) = *(_DWORD *)(v134 + 4 * v389);
  *(_DWORD *)(v53 - 184) = *(_DWORD *)(v134 + 4 * (BYTE1(*(_DWORD *)(v53 - 184)) ^ 0xD6u));
  int v449 = *(_DWORD *)(v134 + 4 * v370);
  int v390 = *(_DWORD *)(v134 + 4 * (BYTE1(*(_DWORD *)(v53 - 176)) ^ 0xD7u));
  LODWORD(v358) = *(_DWORD *)(v134 + 4 * (BYTE1(v168) ^ 0x76u));
  LODWORD(v54) = *(_DWORD *)(v134 + 4 * v367);
  HIDWORD(v357) = *(_DWORD *)(v134 + 4 * (v516 ^ 0xBEu));
  int v517 = *(_DWORD *)(v134 + 4 * v464);
  int v405 = *(_DWORD *)(v134 + 4 * v364);
  HIDWORD(v358) = *(_DWORD *)(v134 + 4 * (BYTE1(v501) ^ 0x77u));
  int v465 = *(_DWORD *)(v134 + 4 * (BYTE1(*(_DWORD *)(v53 - 148)) ^ 0xFEu));
  *(_DWORD *)(v53 - 216) = *(_DWORD *)(v134 + 4 * (*(_DWORD *)(v53 - 216) ^ 0x84u));
  LODWORD(v365) = *(_DWORD *)(v134 + 4 * (BYTE1(v152) ^ 0x2Eu));
  int v174 = *(_DWORD *)(v134 + 4 * (BYTE1(*(_DWORD *)(v53 - 240)) ^ 0xC8u));
  *(_DWORD *)(v53 - 160) = *(_DWORD *)&v135[4 * (HIBYTE(v119) ^ 0xB2)];
  unsigned int v478 = v477 - 1931009435;
  int v470 = v469 - 1931009435;
  LODWORD(v371) = v456 - 1931009435;
  LODWORD(v359) = v453 - 1931009435;
  LODWORD(v368) = v450 - 1931009435;
  LODWORD(v357) = v434 - 1931009435;
  HIDWORD(a4) = v406 - 1931009435;
  *(_DWORD *)(v53 - 240) = v395 - 1931009435;
  int v454 = v426 - 1931009435;
  int v457 = v421 - 1931009435;
  unsigned int v175 = v372 - 1931009435;
  unsigned int v489 = v381 - 1931009435;
  int v435 = v485 - 1931009435;
  int v427 = v480 - 1931009435;
  int v451 = v473 - 1931009435;
  int v396 = v170 - ((2 * v170) & 0x19CE44CA) - 1931009435;
  int v382 = v57 - ((2 * v57) & 0x19CE44CA) - 1931009435;
  int v422 = *(_DWORD *)&v135[4 * (*(_DWORD *)(v53 - 208) ^ 7)];
  HIDWORD(v371) = *(_DWORD *)&v135[4 * v440];
  int v474 = *(_DWORD *)&v135[4 * (HIBYTE(*(_DWORD *)(v53 - 144)) ^ 0x88)];
  LODWORD(v57) = HIBYTE(v409);
  int v410 = *(_DWORD *)&v135[4 * (HIBYTE(*(_DWORD *)(v53 - 136)) ^ 0xB8)];
  *(_DWORD *)(v53 - 208) = *(_DWORD *)&v135[4 * v57];
  int v407 = *(_DWORD *)&v135[4 * (*(_DWORD *)(v53 - 200) ^ 0x4B)];
  LODWORD(a15) = *(_DWORD *)&v135[4 * v375];
  int v393 = *(_DWORD *)&v135[4 * (HIBYTE(v392) ^ 0xE8)];
  int v176 = v174 ^ (v58 - ((2 * v58) & 0x19CE44CA) - 1931009435);
  int v177 = *(_DWORD *)&v135[4 * (HIBYTE(v168) ^ 0xA6)];
  int v178 = *(_DWORD *)&v135[4 * HIBYTE(v387)];
  int v441 = *(_DWORD *)&v135[4 * v497];
  int v179 = *(_DWORD *)&v135[4 * ((v501 ^ 0x231B9DB5u) >> 24)];
  int v180 = *(_DWORD *)&v135[4 * (*(_DWORD *)(v53 - 228) ^ 0x38)];
  int v181 = *(_DWORD *)&v135[4 * ((v459 ^ 0xEEA2BFA8) >> 24)];
  *(_DWORD *)(v53 - 200) = *(_DWORD *)&v135[4 * (HIBYTE(v520) ^ 0x48)];
  int v388 = *(_DWORD *)&v135[4 * HIBYTE(v165)];
  *(_DWORD *)(v53 - 176) = v499 + 2135732885;
  *(_DWORD *)(v53 - 228) = v438 + 2135732885;
  int v521 = v446 + 2135732885;
  int v182 = v412 + 2135732885;
  int v183 = v492 + 2135732885;
  int v184 = v494 + 2135732885;
  int v185 = v173 + 2135732885;
  unsigned int v186 = v176 - ((2 * v176) & 0xFE99652A) + 2135732885;
  int v187 = v507 ^ HIDWORD(v506) ^ 0x6285F181;
  int v188 = v175 ^ v54 ^ v187;
  uint64_t v189 = (uint64_t)*(&off_10007DD80 + a1 - 26);
  int v190 = (char *)*(&off_10007DD80 + (a1 ^ 0xDA)) - 12;
  uint64_t v191 = (uint64_t)*(&off_10007DD80 + (a1 & 0x3C8E4BA2));
  unsigned int v192 = (char *)*(&off_10007DD80 + (a1 ^ 0x65)) - 8;
  LODWORD(v54) = (v192[*(unsigned __int8 *)(v53 - 105) ^ 0xE4] ^ 0xD5) & 0xFF00FFFF | ((*(unsigned __int8 *)(v189 + (*(unsigned __int8 *)(v53 - 108) ^ 0x3ELL)) ^ (*(unsigned __int8 *)(v53 - 108) - ((2 * *(unsigned char *)(v53 - 108)) & 0x88) + 68) ^ 0xFFFFFFE1) << 24) | (((*(unsigned char *)(v191 + (*(unsigned __int8 *)(v53 - 107) ^ 0x27)) + 103) ^ 0x96) << 16);
  int v193 = ((*(unsigned __int8 *)(v189 + (*(unsigned __int8 *)(v53 - 104) ^ 0xD3)) ^ (*(unsigned __int8 *)(v53 - 104)
                                                                                    - ((2 * *(unsigned char *)(v53 - 104)) & 0x88)
                                                                                    + 68) ^ 0xE0) << 24) | ((v190[*(unsigned __int8 *)(v53 - 102) ^ 0xBELL] ^ 0x96) << 8);
  unsigned int v194 = (v192[*(unsigned __int8 *)(v53 - 109) ^ 0x41] ^ 0xE3) & 0xFF00FFFF | (((*(unsigned char *)(v191 + (*(unsigned __int8 *)(v53 - 111) ^ 0x40)) + 103) ^ 0x5A) << 16) | ((v190[*(unsigned __int8 *)(v53 - 110) ^ 0xBBLL] ^ 0x34) << 8) | ((*(unsigned __int8 *)(v189 + (*(unsigned __int8 *)(v53 - 112) ^ 0x1ELL)) ^ (*(unsigned __int8 *)(v53 - 112) - ((2 * *(unsigned char *)(v53 - 112)) & 0x88) + 68) ^ 0x84) << 24);
  v500 = v190;
  uint64_t v502 = v189;
  int v195 = v192[*(unsigned __int8 *)(v53 - 97) ^ 0x74] ^ 0x44 | (((*(unsigned char *)(v191 + (*(unsigned __int8 *)(v53 - 99) ^ 0xF3)) + 103) ^ 2) << 16) | ((v190[*(unsigned __int8 *)(v53 - 98) ^ 0x20] ^ 0xDE) << 8) | ((*(unsigned __int8 *)(v189 + (*(unsigned __int8 *)(v53 - 100) ^ 0xF3)) ^ (*(unsigned __int8 *)(v53 - 100) - ((2 * *(unsigned char *)(v53 - 100)) & 0x88) + 68) ^ 0x85) << 24);
  v495 = v192;
  uint64_t v498 = v191;
  int v196 = v54 | ((v190[*(unsigned __int8 *)(v53 - 106) ^ 9] ^ 0x31) << 8);
  unsigned int v197 = (v192[*(unsigned __int8 *)(v53 - 101) ^ 0xF2] ^ 0x6C | v193) & 0xFF00FFFF | (((*(unsigned char *)(v191 + (*(unsigned __int8 *)(v53 - 103) ^ 0xE9)) + 103) ^ 0x8A) << 16);
  if ((v188 & 0x80) != 0) {
    int v198 = -128;
  }
  else {
    int v198 = 128;
  }
  *(_DWORD *)(v53 - 136) = v195 ^ 0xF23C31B4;
  *(_DWORD *)(v53 - 140) = v194 ^ 0xAEACFA9;
  *(_DWORD *)(v53 - 144) = v196 ^ 0x896B34EE;
  *(_DWORD *)(v53 - 148) = v197 ^ 0x4C48160;
  HIDWORD(v490) = v489 ^ HIDWORD(v357);
  LODWORD(v490) = v177 ^ v428 ^ v358 ^ HIDWORD(v360) ^ v488;
  HIDWORD(v486) = (v399 + 2135732885) ^ v178;
  LODWORD(v486) = v483 ^ v360 ^ v478;
  HIDWORD(v481) = v470 ^ v462;
  LODWORD(v481) = HIDWORD(a4) ^ HIDWORD(v359);
  HIDWORD(v476) = v357 ^ HIDWORD(v368) ^ HIDWORD(v362);
  LODWORD(v476) = (v444 + 2135732885) ^ HIDWORD(v371) ^ v363;
  HIDWORD(v471) = (v423 + 2135732885) ^ v474;
  LODWORD(v471) = HIDWORD(v358) ^ v179 ^ v509 ^ v362 ^ HIDWORD(v365);
  HIDWORD(v466) = v465 ^ v468 ^ v460 ^ v451;
  LODWORD(v466) = (HIDWORD(v363) + 2135732885) ^ v181;
  HIDWORD(v461) = v184 ^ v180;
  LODWORD(v461) = v457 ^ v390;
  HIDWORD(v458) = v393 ^ v432 ^ v416 ^ (HIDWORD(v374) + 2135732885);
  LODWORD(v458) = v182 ^ a15;
  HIDWORD(v452) = v384 ^ v449 ^ v454;
  LODWORD(v452) = v374 ^ v388 ^ v186;
  HIDWORD(v447) = v382 ^ v365;
  LODWORD(v447) = v185 ^ *(_DWORD *)(v53 - 200);
  int v199 = *(unsigned __int8 **)(v53 - 120);
  HIDWORD(v442) = *(_DWORD *)(v53 - 216) ^ v402 ^ *(_DWORD *)(v53 - 224) ^ v396;
  LODWORD(v442) = v183 ^ v441;
  HIDWORD(v436) = v517 ^ v435;
  LODWORD(v436) = v427 ^ v405;
  HIDWORD(v429) = v359 ^ v378;
  LODWORD(v429) = v371 ^ *(_DWORD *)(v53 - 256) ^ v511;
  HIDWORD(v424) = v519 ^ v529 ^ v368;
  LODWORD(v424) = v523 ^ v422 ^ (v513 + 1);
  HIDWORD(v418) = *(_DWORD *)(v53 - 240) ^ *(_DWORD *)(v53 - 184);
  LODWORD(v418) = *(_DWORD *)(v53 - 168) ^ v417 ^ v410 ^ v525 ^ v531;
  HIDWORD(v413) = v521 ^ v407;
  LODWORD(v413) = *(_DWORD *)(v53 - 228) ^ *(_DWORD *)(v53 - 208);
  HIDWORD(v408) = *(_DWORD *)(v53 - 192) + 16777393;
  LODWORD(v408) = (v198 + (v188 ^ 0x2497E332)) ^ v187;
  HIDWORD(v403) = *(_DWORD *)(v53 - 160) ^ v527 ^ *(_DWORD *)(v53 - 248) ^ *(_DWORD *)(v53 - 176);
  int v200 = *(_DWORD *)(v53 - 128);
  LODWORD(v403) = v200 - 1063363686;
  HIDWORD(v397) = v200 ^ 0x4D2;
  LODWORD(v397) = v200 ^ 0x44D;
  HIDWORD(v391) = v200 ^ 0x4D3;
  LODWORD(v391) = v200 ^ 0x4FE;
  HIDWORD(v385) = v200 ^ 0x4FC;
  HIDWORD(v379) = v200 ^ 0x42A;
  LODWORD(v385) = -762293124;
  LODWORD(v379) = v200 ^ 0x45F;
  uint64_t v201 = (v200 - 1063363686) & 0x3F61A5DD ^ 0x5C0u;
  *(void *)(v53 - 192) = v201;
  unsigned __int8 v202 = *(unsigned char *)(v191 + (v199[v201] ^ 0xF3)) + 103;
  *(void *)(v53 - 160) = 1;
  int v203 = (v202 ^ 2) << 16;
  uint64_t v204 = v199[1] ^ 0x57;
  *(void *)(v53 - 168) = 10;
  uint64_t v205 = v199[10] ^ 0xB6;
  int v206 = ((*(unsigned char *)(v191 + v204) + 103) ^ 0xF6) << 16;
  *(void *)(v53 - 200) = 4;
  LODWORD(v204) = v500[v205] ^ 0xBB;
  uint64_t v207 = v199[4];
  int v208 = *(unsigned __int8 *)(v502 + (v207 ^ 0x9A));
  *(void *)(v53 - 240) = 7;
  LODWORD(v207) = v208 ^ (v207 - ((2 * v207) & 0x88888888) + 68) ^ 0xFFFFFFCF;
  int v209 = v495[v199[7] ^ 0xD6];
  *(void *)(v53 - 224) = 2;
  int v210 = v209 ^ 0x86 | (v207 << 24);
  LODWORD(v207) = v500[v199[2]] ^ 0xA9;
  *(void *)(v53 - 184) = 3;
  LODWORD(v207) = v206 | (v207 << 8);
  int v211 = v495[v199[3] ^ 0x74];
  *(void *)(v53 - 176) = 12;
  LODWORD(v207) = v207 | v211 ^ 0x44;
  int v212 = *(unsigned __int8 *)(v502 + (v199[12] ^ 0x6ELL)) ^ (v199[12] - ((2 * v199[12]) & 0x88) + 68) ^ 0x51;
  *(void *)(v53 - 208) = 0;
  int v213 = v207 | ((*(unsigned __int8 *)(v502 + (*v199 ^ 0x15)) ^ (*v199 - ((2 * *v199) & 0x88) + 68) ^ 0xAE) << 24);
  LODWORD(v207) = *(unsigned __int8 *)(v502 + (v199[8] ^ 0x46)) ^ (v199[8] - ((2 * v199[8]) & 0x88) + 68) ^ 0xFFFFFFE7;
  *(void *)(v53 - 216) = 14;
  *(_DWORD *)(v53 - 228) = 274310079;
  LODWORD(v204) = (v204 << 8) | (v207 << 24);
  LODWORD(v207) = v500[v199[14] ^ 0xD5] ^ 0x21;
  *(void *)(v53 - 248) = 5;
  int v214 = v203 | (v212 << 24) | (v207 << 8);
  LOBYTE(v207) = (*(unsigned char *)(v191 + (v199[5] ^ 0x9DLL)) + 103) ^ 0xF7;
  int v215 = v495[v199[11] ^ 0xC2] ^ 0x61 | v204;
  LOBYTE(v204) = *(unsigned char *)(v191 + (v199[9] ^ 0x3ELL));
  uint64_t v216 = v199[6] ^ 0xA4;
  *(void *)(v53 - 256) = 15;
  unsigned int v217 = v215 & 0xFF00FFFF | (((v204 + 103) ^ 0xDF) << 16);
  int v218 = v495[v199[15] ^ 0x47] ^ 0x44 | v214;
  unsigned int v515 = v210 & 0xFF00FFFF | (v207 << 16) | ((v500[v216] ^ 0x71) << 8);
  int v219 = (char *)*(&off_10007DD80 + SHIDWORD(v397)) - 8;
  LODWORD(v204) = *(_DWORD *)&v219[4 * (((unsigned __int16)(v515 ^ WORD2(v503)) >> 8) ^ 0x21)] ^ ((((unsigned __int16)(v515 ^ WORD2(v503)) >> 8) ^ 0x4C) + 1115978535 - ((2 * (((v515 ^ HIDWORD(v503)) >> 8) ^ 0xB71C4C)) & 0x4E));
  int v220 = (char *)*(&off_10007DD80 + *(_DWORD *)(v53 - 128) - 952) - 8;
  unsigned int v221 = v213 ^ v504 ^ 0x730032AA;
  LODWORD(v204) = (v204 + 365380211 - ((2 * v204) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4
                                                                                  * ((v213 ^ v504) ^ 0xAA)];
  unsigned int v222 = HIDWORD(a44) ^ v218;
  unsigned int v223 = *(_DWORD *)&v219[4 * (((unsigned __int16)(WORD2(a44) ^ v218) >> 8) ^ 0x25)] ^ ((((unsigned __int16)(WORD2(a44) ^ v218) >> 8) ^ 0x48) + 1115978535 - (((HIDWORD(a44) ^ v218) >> 7) & 0x4E));
  unsigned int v224 = v223 + 1403600629 - ((2 * v223) & 0xA7527DEA);
  int v225 = v204 + 1403600629 - ((2 * v204) & 0xA7527DEA);
  LODWORD(v204) = v217 ^ v503;
  int v226 = (char *)*(&off_10007DD80 + SHIDWORD(v391)) - 8;
  int v227 = *(_DWORD *)&v226[4 * (((v217 ^ v503) >> 16) ^ 0x68)];
  HIDWORD(v229) = v227 ^ 0xA9B;
  LODWORD(v229) = v227 ^ 0xDB440000;
  int v228 = v229 >> 12;
  int v230 = *(_DWORD *)&v226[4 * ((v213 ^ v504) >> 16)];
  HIDWORD(v229) = v230 ^ 0xA9B;
  LODWORD(v229) = v230 ^ 0xDB440000;
  int v231 = (char *)*(&off_10007DD80 + (int)v397) - 4;
  int v232 = *(_DWORD *)&v231[4 * (((v515 ^ HIDWORD(v503)) >> 24) ^ 0xB7)] ^ (v229 >> 12);
  int v233 = *(_DWORD *)&v226[4 * (BYTE2(v222) ^ 0x4C)];
  HIDWORD(v229) = v233 ^ 0xA9B;
  LODWORD(v229) = v233 ^ 0xDB440000;
  int v234 = v224 ^ v232;
  int v235 = *(_DWORD *)&v220[4 * ((v515 ^ BYTE4(v503)) ^ 0xFB)] ^ BYTE1(v204) ^ *(_DWORD *)&v219[4 * (BYTE1(v204) ^ 0x23)] ^ 0x5743391A ^ (v229 >> 12);
  LODWORD(v216) = *(_DWORD *)&v226[4 * (((v515 ^ HIDWORD(v503)) >> 16) ^ 0x1C)];
  HIDWORD(v229) = v216 ^ 0xA9B;
  LODWORD(v229) = v216 ^ 0xDB440000;
  LODWORD(v216) = *(_DWORD *)&v231[4 * (BYTE3(v204) ^ 0xF6)] ^ (BYTE1(v221) + 1115978535 - ((v221 >> 7) & 0x4E)) ^ *(_DWORD *)&v219[4 * (BYTE1(v221) ^ 0x6D)] ^ ((v229 >> 12) + 1403600629 - ((2 * (v229 >> 12)) & 0xA7527DEA));
  int v236 = v216 + 365380211 - ((2 * v216) & 0x2B8E84E6);
  int v237 = *(_DWORD *)&v231[4 * HIBYTE(v221)];
  LODWORD(v216) = HIDWORD(v490) ^ v228 ^ *(_DWORD *)&v231[4 * (HIBYTE(v222) ^ 0xA8)] ^ v225;
  unsigned int v238 = v490 ^ *(_DWORD *)&v220[4 * (v222 ^ 0xCE)] ^ v236;
  unsigned int v239 = HIDWORD(v486) ^ *(_DWORD *)&v220[4 * (v204 ^ 0x5F)] ^ (v234
                                                                               + 365380211
                                                                               - ((2 * v234) & 0x2B8E84E6));
  unsigned int v240 = v408 ^ v237 ^ (v235 + 1403600629 - ((2 * v235) & 0xA7527DEA));
  unsigned int v241 = v216 ^ 0xF9388C2F;
  LODWORD(v204) = *(_DWORD *)&v226[4 * ((v216 ^ 0xF9388C2F) >> 16)];
  HIDWORD(v229) = v204 ^ 0xA9B;
  LODWORD(v229) = v204 ^ 0xDB440000;
  int v242 = v229 >> 12;
  LODWORD(v204) = *(_DWORD *)&v226[4 * (BYTE2(v238) ^ 0xD3)];
  HIDWORD(v229) = v204 ^ 0xA9B;
  LODWORD(v229) = v204 ^ 0xDB440000;
  LODWORD(v204) = v229 >> 12;
  int v243 = *(_DWORD *)&v226[4 * (BYTE2(v239) ^ 0x66)];
  HIDWORD(v229) = v243 ^ 0xA9B;
  LODWORD(v229) = v243 ^ 0xDB440000;
  int v244 = (v229 >> 12) ^ *(_DWORD *)&v219[4 * (BYTE1(v240) ^ 5)] ^ ((BYTE1(v240) ^ 0x68)
                                                                 + 1115978535
                                                                 - ((2 * ((v240 >> 8) ^ 0x42BD68)) & 0x4E));
  int v245 = (v242 + 365380211 - ((2 * v242) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v239 ^ 0xB6)];
  int v246 = (v244 + 365380211 - ((2 * v244) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v216 ^ 0x61)];
  LODWORD(v216) = (((unsigned __int16)(v216 ^ 0x8C2F) >> 8)
                 + 1115978535
                 - (((v216 ^ 0xF9388C2F) >> 7) & 0x4E)) ^ 0xD678EAEF ^ *(_DWORD *)&v219[4 * (((unsigned __int16)(v216 ^ 0x8C2F) >> 8) ^ 0x6D)];
  unsigned int v247 = *(_DWORD *)&v231[4 * (HIBYTE(v239) ^ 0x43)] ^ 0xF1B3654B;
  int v248 = v216 + v247;
  LODWORD(v216) = v216 & v247;
  int v249 = *(_DWORD *)&v226[4 * (BYTE2(v240) ^ 0xBD)];
  HIDWORD(v229) = v249 ^ 0xA9B;
  LODWORD(v229) = v249 ^ 0xDB440000;
  int v250 = (v248 - 2 * v216) ^ (v229 >> 12);
  LODWORD(v204) = *(_DWORD *)&v231[4 * HIBYTE(v241)] ^ (v204 + 1403600629 - ((2 * v204) & 0xA7527DEA));
  LODWORD(v204) = (v204 + 365380211 - ((2 * v204) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v240 ^ 0xAB)];
  unsigned int v251 = *(_DWORD *)&v231[4 * (HIBYTE(v240) ^ 0x42)] ^ v507 ^ *(_DWORD *)&v219[4 * (BYTE1(v238) ^ 0x66)] ^ ((BYTE1(v238) ^ 0xB) + 1115978535 - ((2 * ((v238 >> 8) ^ 0x26D30B)) & 0x4E)) ^ (v245 + 1403600629 - ((2 * v245) & 0xA7527DEA));
  LOBYTE(v248) = BYTE1(v239) ^ 0x54;
  unsigned int v252 = v486 ^ *(_DWORD *)&v219[4 * (BYTE1(v239) ^ 0x39)] ^ (v204 + 1115978535 - ((2 * v204) & 0x8508F64E));
  unsigned int v253 = HIDWORD(v481) ^ *(_DWORD *)&v231[4 * (HIBYTE(v238) ^ 0x26)] ^ (v246 + 1403600629 - ((2 * v246) & 0xA7527DEA));
  LODWORD(v204) = HIDWORD(v403) ^ *(_DWORD *)&v220[4 * (v238 ^ 0x98)] ^ (v250
                                                                                        + 365380212
                                                                                        + ~((2 * v250) & 0x2B8E84E6));
  int v254 = *(_DWORD *)&v226[4 * (BYTE2(v204) ^ 0x79)];
  HIDWORD(v229) = v254 ^ 0xA9B;
  LODWORD(v229) = v254 ^ 0xDB440000;
  BYTE1(v238) = BYTE1(v253) ^ 0x68;
  int v255 = ((v229 >> 12) + 1403600629 - ((2 * (v229 >> 12)) & 0xA7527DEA)) ^ *(_DWORD *)&v231[4
                                                                                          * ((v253 ^ 0x2261685E) >> 24)];
  unsigned int v256 = ((BYTE1(v204) ^ 0xD0) + 1115978535 - ((v204 >> 7) & 0x4E)) ^ *(_DWORD *)&v219[4 * (BYTE1(v204) ^ 0xBD)];
  int v257 = (v256 + 365380211 - ((2 * v256) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v251 ^ 0x76)];
  int v258 = ((BYTE1(v252) ^ 0xEC) + 1115978535 - ((2 * ((v252 >> 8) ^ 0xE5FEC)) & 0x4E)) ^ *(_DWORD *)&v219[4 * (BYTE1(v252) ^ 0x81)];
  int v259 = *(_DWORD *)&v226[4 * (BYTE2(v252) ^ 0x5F)];
  HIDWORD(v229) = v259 ^ 0xA9B;
  LODWORD(v229) = v259 ^ 0xDB440000;
  int v260 = v229 >> 12;
  HIDWORD(v229) = *(_DWORD *)&v220[4 * (v253 ^ 0x5E)] ^ 0xFCD065FB;
  LODWORD(v229) = HIDWORD(v229);
  int v261 = (v229 >> 28) ^ __ROR4__(*(_DWORD *)&v231[4 * (BYTE3(v204) ^ 6)] ^ 0x7462B151 ^ (v258+ 1403600629- ((2 * v258) & 0xA7527DEA)), 28);
  unsigned int v262 = (v260 + 1403600629 - ((2 * v260) & 0xA7527DEA)) ^ *(_DWORD *)&v231[4 * (HIBYTE(v251) ^ 0xD2)];
  LODWORD(v204) = (v262 + 365380211 - ((2 * v262) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v204 ^ 0x4C)];
  int v263 = *(_DWORD *)&v226[4 * (BYTE2(v253) ^ 0x1B)];
  HIDWORD(v229) = v263 ^ 0xA9B;
  LODWORD(v229) = v263 ^ 0xDB440000;
  int v264 = v229 >> 12;
  int v265 = BYTE1(v251);
  int v266 = (BYTE1(v251) ^ 0xC0) + 1115978535 - ((v251 >> 7) & 0x4E);
  int v267 = *(_DWORD *)&v226[4 * (BYTE2(v251) ^ 0xCC)];
  HIDWORD(v229) = v267 ^ 0xA9B;
  LODWORD(v229) = v267 ^ 0xDB440000;
  LOBYTE(v267) = v252 ^ v248;
  int v268 = HIDWORD(a4) ^ HIDWORD(v359) ^ (v229 >> 12) ^ __ROR4__(v261 ^ 0x78071371, 4);
  unsigned int v269 = HIDWORD(v476) ^ *(_DWORD *)&v231[4 * (HIBYTE(v252) ^ 0xE)] ^ v264 ^ (v257
                                                                            + 1403600629
                                                                            - ((2 * v257) & 0xA7527DEA));
  int v270 = BYTE1(v238);
  unsigned int v271 = v476 ^ *(_DWORD *)&v219[4 * (BYTE1(v238) ^ 0x6D)] ^ (v204 + 1115978535 - ((2 * v204) & 0x8508F64E));
  unsigned int v272 = HIDWORD(v471) ^ v266 ^ *(_DWORD *)&v220[4 * (v267 ^ 0xCA)] ^ *(_DWORD *)&v219[4 * (v265 ^ 0xAD)] ^ (v255 + 365380211 - ((2 * v255) & 0x2B8E84E6));
  unsigned int v273 = v270 ^ 0x4552953C ^ v271;
  LODWORD(v204) = *(_DWORD *)&v226[4 * BYTE2(v273)];
  HIDWORD(v229) = v204 ^ 0xA9B;
  LODWORD(v229) = v204 ^ 0xDB440000;
  LODWORD(v204) = v229 >> 12;
  BYTE1(v252) = BYTE1(v268) ^ 0xE7;
  int v274 = *(_DWORD *)&v226[4 * ((v268 ^ 0x99FEE750) >> 16)];
  HIDWORD(v229) = v274 ^ 0xA9B;
  LODWORD(v229) = v274 ^ 0xDB440000;
  int v275 = (v229 >> 12) + 365380211 - ((2 * (v229 >> 12)) & 0x2B8E84E6);
  int v276 = *(_DWORD *)&v226[4 * (BYTE2(v272) ^ 2)];
  HIDWORD(v229) = v276 ^ 0xA9B;
  LODWORD(v229) = v276 ^ 0xDB440000;
  int v277 = (BYTE1(v273) + 1115978535 - ((v273 >> 7) & 0x4E)) ^ *(_DWORD *)&v220[4 * (v269 ^ 0x72)] ^ *(_DWORD *)&v219[4 * (BYTE1(v273) ^ 0x6D)] ^ v275;
  int v278 = *(_DWORD *)&v226[4 * (BYTE2(v269) ^ 0x3B)];
  int v279 = *(_DWORD *)&v231[4 * (HIBYTE(v269) ^ 0xA7)] ^ (v229 >> 12) ^ *(_DWORD *)&v220[4 * v273];
  HIDWORD(v229) = v278 ^ 0xA9B;
  LODWORD(v229) = v278 ^ 0xDB440000;
  int v280 = v471 ^ ((BYTE1(v272) ^ 0xD9) + 1115978535 - ((2 * ((v272 >> 8) ^ 0x9802D9)) & 0x4E)) ^ *(_DWORD *)&v220[4 * (v268 ^ 0x1E)] ^ *(_DWORD *)&v219[4 * (BYTE1(v272) ^ 0xB4)] ^ (v229 >> 12) ^ *(_DWORD *)&v231[4 * (HIBYTE(v271) ^ 0x61)];
  unsigned int v281 = HIDWORD(v466) ^ *(_DWORD *)&v231[4 * (HIBYTE(v272) ^ 0x98)] ^ (v277 + 1403600629 - ((2 * v277) & 0xA7527DEA));
  unsigned int v282 = v466 ^ ((BYTE1(v269) ^ 0x29) + 1115978535 - ((2 * ((v269 >> 8) ^ 0xA73B29)) & 0x4E)) ^ *(_DWORD *)&v220[4 * (v272 ^ 0x3D)] ^ *(_DWORD *)&v231[4 * ((v268 ^ 0x99FEE750) >> 24)] ^ *(_DWORD *)&v219[4 * (BYTE1(v269) ^ 0x44)] ^ v204;
  unsigned int v283 = HIDWORD(v461) ^ *(_DWORD *)&v219[4 * (BYTE1(v252) ^ 0x6D)] ^ ((v279 ^ 0x466E7C86)
                                                                     + 1115978535
                                                                     - 2
                                                                     * ((v279 ^ 0x466E7C86) & 0x42847B37 ^ v279 & 0x10));
  LODWORD(v201) = *(_DWORD *)&v226[4 * (BYTE2(v280) ^ 0x23)];
  HIDWORD(v229) = v201 ^ 0xA9B;
  LODWORD(v229) = v201 ^ 0xDB440000;
  LODWORD(v201) = v229 >> 12;
  LODWORD(v204) = *(_DWORD *)&v226[4 * (BYTE2(v282) ^ 0x86)];
  HIDWORD(v229) = v204 ^ 0xA9B;
  LODWORD(v229) = v204 ^ 0xDB440000;
  int v284 = BYTE1(v282) ^ 0x83;
  int v285 = v284 + 1115978535 - ((2 * ((v282 >> 8) ^ 0x938683)) & 0x4E);
  LODWORD(v204) = v280 ^ 0x235974D6;
  int v286 = *(_DWORD *)&v220[4 * ((v283 ^ BYTE1(v252)) ^ 0x41)] ^ (((unsigned __int16)(v280 ^ 0x74D6) >> 8)
                                                                               + 1115978535
                                                                               - (((v280 ^ 0x235974D6u) >> 7) & 0x4E)) ^ *(_DWORD *)&v219[4 * (((unsigned __int16)(v280 ^ 0x74D6) >> 8) ^ 0x6D)] ^ ((v229 >> 12) + 365380212 + ~((2 * (v229 >> 12)) & 0x2B8E84E6));
  LODWORD(v216) = *(_DWORD *)&v226[4 * (BYTE2(v283) ^ 0x81)];
  HIDWORD(v229) = v216 ^ 0xA9B;
  LODWORD(v229) = v216 ^ 0xDB440000;
  LODWORD(v216) = ((v229 >> 12) + 1403600629 - ((2 * (v229 >> 12)) & 0xA7527DEA)) ^ *(_DWORD *)&v231[4 * BYTE3(v204)];
  LODWORD(v216) = (v216 + 365380211 - ((2 * v216) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v282 ^ 0x83)];
  LODWORD(v201) = *(_DWORD *)&v220[4 * (v281 ^ 0xFC)] ^ (v201 + 365380211 - ((2 * v201) & 0x2B8E84E6)) ^ *(_DWORD *)&v219[4 * (BYTE1(v283) ^ 0xCD)] ^ ((BYTE1(v283) ^ 0xA0) + 1115978535 - 2 * ((BYTE1(v283) ^ 0xA0) & 0x3F ^ (v283 >> 8) & 0x18));
  unsigned int v287 = *(_DWORD *)&v226[4 * (BYTE2(v281) ^ 0xC6)];
  LODWORD(v229) = __ROR4__((v287 >> 12) ^ 0x2606962, 17) ^ 0xEE910136;
  HIDWORD(v229) = v229;
  LODWORD(v216) = v461 ^ *(_DWORD *)&v219[4 * (BYTE1(v281) ^ 0x75)] ^ (v216 + 1115978535 - ((2 * v216) & 0x8508F64E));
  unsigned int v288 = HIDWORD(v458) ^ *(_DWORD *)&v231[4 * (HIBYTE(v282) ^ 0x93)] ^ (v201 + 1403600629 - ((2 * v201) & 0xA7527DEA));
  int v289 = v182 ^ a15 ^ *(_DWORD *)&v231[4 * (HIBYTE(v281) ^ 0x5A)] ^ (v286 + 1403600629 - ((2 * v286) & 0xA7527DEA));
  unsigned int v290 = HIDWORD(v452) ^ v285 ^ *(_DWORD *)&v220[4 * v204] ^ *(_DWORD *)&v219[4 * (v284 ^ 0x6D)] ^ *(_DWORD *)&v231[4 * (HIBYTE(v283) ^ 0x68)] ^ ((v229 >> 15) + (v287 << 20));
  LODWORD(v201) = ((BYTE1(v216) ^ 0x9D) + 1115978535 - ((2 * ((v216 >> 8) ^ 0xC2489D)) & 0x4E)) ^ *(_DWORD *)&v219[4 * (BYTE1(v216) ^ 0xF0)];
  unsigned int v291 = *(_DWORD *)&v226[4 * (BYTE2(v288) ^ 0x8F)];
  LODWORD(v204) = *(_DWORD *)&v220[4 * (v290 ^ 0xC)] ^ (v291 << 20) ^ (v291 >> 12);
  int v292 = *(_DWORD *)&v226[4 * ((v289 ^ 0xCFB8D782) >> 16)];
  LODWORD(v201) = v204 ^ (v201 + 365380211 - ((2 * v201) & 0x2B8E84E6));
  HIDWORD(v229) = v292 ^ 0xA9B;
  LODWORD(v229) = v292 ^ 0xDB440000;
  LODWORD(v204) = ((v229 >> 12) + 365380211 - ((2 * (v229 >> 12)) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * ((v216 ^ BYTE1(v281)) ^ 0x3F)];
  int v293 = *(_DWORD *)&v226[4 * (BYTE2(v216) ^ 0x48)];
  HIDWORD(v229) = v293 ^ 0xA9B;
  LODWORD(v229) = v293 ^ 0xDB440000;
  int v294 = ((BYTE1(v290) ^ 0x1C) + 1115978535 - ((2 * ((v290 >> 8) ^ 0xC9551C)) & 0x4E)) ^ *(_DWORD *)&v220[4 * (v289 ^ 0xCC)] ^ *(_DWORD *)&v219[4 * (BYTE1(v290) ^ 0x71)] ^ ((v229 >> 12) + 365380211 - ((2 * (v229 >> 12)) & 0x2B8E84E6));
  int v295 = *(_DWORD *)&v226[4 * (BYTE2(v290) ^ 0x55)];
  HIDWORD(v229) = v295 ^ 0xA9B;
  LODWORD(v229) = v295 ^ 0xDB440000;
  LODWORD(v216) = v452 ^ (((unsigned __int16)(v289 ^ 0xD782) >> 8)
                        + 1115978535
                        - (((v289 ^ 0xCFB8D782) >> 7) & 0x4E)) ^ *(_DWORD *)&v220[4 * (v288 ^ 0x50)] ^ *(_DWORD *)&v219[4 * (((unsigned __int16)(v289 ^ 0xD782) >> 8) ^ 0x6D)] ^ (v229 >> 12) ^ *(_DWORD *)&v231[4 * (BYTE3(v216) ^ 0xC2)];
  unsigned int v296 = HIDWORD(v447) ^ *(_DWORD *)&v231[4 * (HIBYTE(v288) ^ 0xC7)] ^ (v294 + 1403600629 - ((2 * v294) & 0xA7527DEA));
  unsigned int v297 = v447 ^ *(_DWORD *)&v231[4 * ((v289 ^ 0xCFB8D782) >> 24)] ^ ((v201 ^ 0xA9BDB440)
                                                                   + 1403600629
                                                                   - 2 * ((v201 ^ 0xA9BDB440) & 0x53A93EFF ^ v201 & 0xA));
  unsigned int v298 = HIDWORD(v442) ^ ((BYTE1(v288) ^ 0xD9) + 1115978535 - ((2 * ((v288 >> 8) ^ 0xC78FD9)) & 0x4E)) ^ *(_DWORD *)&v231[4 * (HIBYTE(v290) ^ 0xC9)] ^ *(_DWORD *)&v219[4 * (BYTE1(v288) ^ 0xB4)] ^ (v204 + 1403600629 - ((2 * v204) & 0xA7527DEA));
  int v299 = *(_DWORD *)&v226[4 * (BYTE2(v296) ^ 0xE6)];
  HIDWORD(v229) = v299 ^ 0xA9B;
  LODWORD(v229) = v299 ^ 0xDB440000;
  int v300 = v229 >> 12;
  int v301 = *(_DWORD *)&v226[4 * (BYTE2(v297) ^ 0x1C)];
  HIDWORD(v229) = v301 ^ 0xA9B;
  LODWORD(v229) = v301 ^ 0xDB440000;
  unsigned int v302 = (((unsigned __int16)(v298 ^ 0xCCA2) >> 8) + 1115978535 - (((v298 ^ 0x33C8CCA2) >> 7) & 0x4E)) ^ *(_DWORD *)&v219[4 * (((unsigned __int16)(v298 ^ 0xCCA2) >> 8) ^ 0x6D)];
  LODWORD(v201) = (v229 >> 12) ^ *(_DWORD *)&v219[4 * (BYTE1(v296) ^ 0xD9)] ^ ((BYTE1(v296) ^ 0xB4)
                                                                             + 1115978535
                                                                             - ((2 * ((v296 >> 8) ^ 0x4FE6B4)) & 0x4E));
  LODWORD(v201) = (v201 + 365380211 - ((2 * v201) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v216 ^ 0x6C)];
  int v303 = (v302 + 365380211 - ((2 * v302) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v297 ^ 0x3A)];
  unsigned int v304 = *(_DWORD *)&v220[4 * (v298 ^ 0xA2)] ^ (((unsigned __int16)(v216 ^ 0x686C) >> 8)
                                                               + 1115978535
                                                               - (((v216 ^ 0x5F5D686C) >> 7) & 0x4E)) ^ *(_DWORD *)&v219[4 * (((unsigned __int16)(v216 ^ 0x686C) >> 8) ^ 0x6D)] ^ (v300 + 365380211 - ((2 * v300) & 0x2B8E84E6));
  HIDWORD(v229) = *(_DWORD *)&v220[4 * (v296 ^ 0x96)] ^ 0x15C74273;
  LODWORD(v229) = *(_DWORD *)&v220[4 * (v296 ^ 0x96)];
  HIDWORD(v229) = (v229 >> 29) ^ 0x6615DA09;
  LODWORD(v229) = HIDWORD(v229);
  int v305 = (v229 >> 3) + 1115978535 - ((2 * (v229 >> 3)) & 0x8508F64E);
  int v306 = *(_DWORD *)&v226[4 * ((v216 ^ 0x5F5D686C) >> 16)];
  HIDWORD(v229) = v306 ^ 0xA9B;
  LODWORD(v229) = v306 ^ 0xDB440000;
  int v307 = v229 >> 12;
  LODWORD(v204) = *(_DWORD *)&v226[4 * ((v298 ^ 0x33C8CCA2) >> 16)];
  HIDWORD(v229) = v204 ^ 0xA9B;
  LODWORD(v229) = v204 ^ 0xDB440000;
  unsigned int v308 = v442 ^ *(_DWORD *)&v231[4 * (HIBYTE(v298) ^ 0x17)] ^ (v201 + 1403600629 - ((2 * v201) & 0xA7527DEA));
  LODWORD(v201) = v305 ^ *(_DWORD *)&v219[4 * (BYTE1(v297) ^ 0xD1)] ^ (v229 >> 12);
  unsigned int v309 = *(_DWORD *)&v231[4 * (BYTE3(v216) ^ 0x7B)] ^ HIDWORD(v506) ^ (v201 + 1403600629 - ((2 * v201) & 0xA7527DEA));
  LODWORD(v201) = HIDWORD(v436) ^ *(_DWORD *)&v231[4 * (HIBYTE(v296) ^ 0x4F)] ^ v307;
  LODWORD(v216) = v436 ^ *(_DWORD *)&v231[4 * (HIBYTE(v297) ^ 0x1B)] ^ (v304 + 1403600629 - ((2 * v304) & 0xA7527DEA));
  LODWORD(v204) = *(_DWORD *)&v226[4 * (BYTE2(v216) ^ 0x7E)];
  HIDWORD(v229) = v204 ^ 0xA9B;
  LODWORD(v229) = v204 ^ 0xDB440000;
  int v310 = v229 >> 12;
  LODWORD(v204) = v201 ^ (v303 + 1403600629 - ((2 * v303) & 0xA7527DEA));
  LODWORD(v201) = *(_DWORD *)&v226[4 * (BYTE2(v204) ^ 1)];
  HIDWORD(v229) = v201 ^ 0xA9B;
  LODWORD(v229) = v201 ^ 0xDB440000;
  LODWORD(v201) = ((v229 >> 12) + 365380211 - ((2 * (v229 >> 12)) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v308 ^ 0xC6)];
  int v311 = ((BYTE1(v308) ^ 0x71) + 1115978535 - ((2 * ((v308 >> 8) ^ 0xF25B71)) & 0x4E)) ^ *(_DWORD *)&v219[4 * (BYTE1(v308) ^ 0x1C)];
  unsigned int v312 = (v311 + 1403600629 - ((2 * v311) & 0xA7527DEA)) ^ *(_DWORD *)&v231[4 * (BYTE3(v204) ^ 0x1F)];
  int v313 = *(_DWORD *)&v226[4 * (BYTE2(v308) ^ 0x5B)];
  HIDWORD(v229) = v313 ^ 0xA9B;
  LODWORD(v229) = v313 ^ 0xDB440000;
  int v314 = v229 >> 12;
  unsigned int v315 = BYTE1(v297) ^ 0x73F4E0AF ^ v309;
  int v316 = *(_DWORD *)&v226[4 * BYTE2(v315)];
  HIDWORD(v229) = v316 ^ 0xA9B;
  LODWORD(v229) = v316 ^ 0xDB440000;
  int v317 = v229 >> 12;
  HIDWORD(v229) = v310 ^ ((BYTE1(v204) ^ 0x81) + 1115978535 - ((2 * ((v204 >> 8) ^ 0x1F0181)) & 0x4E)) ^ 0xD678EAEF ^ *(_DWORD *)&v219[4 * (BYTE1(v204) ^ 0xEC)];
  LODWORD(v229) = HIDWORD(v229);
  LODWORD(v229) = (v229 >> 11) ^ __ROR4__(*(_DWORD *)&v231[4 * (HIBYTE(v308) ^ 0xF2)] ^ 0xF1B3654B, 11) ^ 0xD490839A;
  HIDWORD(v229) = v229;
  unsigned int v318 = HIDWORD(v429) ^ *(_DWORD *)&v220[4 * (v204 ^ 0xB8)] ^ ((BYTE1(v216) ^ 0xAA)
                                                                               + 1115978535
                                                                               - 2
                                                                               * (((v216 >> 8) ^ 0x967EAA) & 0x37 ^ (v216 >> 8) & 0x10)) ^ *(_DWORD *)&v231[4 * (HIBYTE(v309) ^ 0x57)] ^ *(_DWORD *)&v219[4 * (BYTE1(v216) ^ 0xC7)] ^ v314;
  LODWORD(v204) = v429 ^ (BYTE1(v315) + 1115978535 - ((v315 >> 7) & 0x4E)) ^ *(_DWORD *)&v231[4 * (BYTE3(v216) ^ 0x96)] ^ *(_DWORD *)&v219[4 * (BYTE1(v315) ^ 0x6D)] ^ (v201 + 1403600629 - ((2 * v201) & 0xA7527DEA));
  LODWORD(v201) = HIDWORD(v424) ^ *(_DWORD *)&v220[4 * (v216 ^ 0x88)] ^ v317 ^ (v312
                                                                                               + 365380211
                                                                                               - ((2 * v312) & 0x2B8E84E6));
  unsigned int v319 = v424 ^ *(_DWORD *)&v220[4 * (BYTE1(v297) ^ 0xAF ^ v309)] ^ ((v229 >> 21)
                                                                                    + 365380211
                                                                                    - ((2 * (v229 >> 21)) & 0x2B8E84E6));
  LODWORD(v216) = *(_DWORD *)&v226[4 * (BYTE2(v318) ^ 0x85)];
  BYTE2(v315) = BYTE2(v201) ^ 0x4A;
  HIDWORD(v229) = v216 ^ 0xA9B;
  LODWORD(v229) = v216 ^ 0xDB440000;
  LODWORD(v216) = v229 >> 12;
  unsigned int v320 = *(_DWORD *)&v219[4 * (BYTE1(v204) ^ 0x96)] ^ ((BYTE1(v204) ^ 0xFB)
                                                     + 1115978535
                                                     - ((2 * ((v204 >> 8) ^ 0x3EA2FB)) & 0x4E));
  int v321 = *(_DWORD *)&v226[4 * (BYTE2(v204) ^ 0xA2)];
  int v322 = (v320 + 365380211 - ((2 * v320) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v201 ^ 0x75)];
  HIDWORD(v229) = v321 ^ 0xA9B;
  LODWORD(v229) = v321 ^ 0xDB440000;
  int v323 = (((unsigned __int16)(v201 ^ 0xF075) >> 8)
        + 1115978535
        - (((v201 ^ 0xB54AF075) >> 7) & 0x4E)) ^ (v229 >> 12) ^ *(_DWORD *)&v219[4
                                                                                             * (((unsigned __int16)(v201 ^ 0xF075) >> 8) ^ 0x6D)];
  unsigned int v324 = (v323 + 1403600629 - ((2 * v323) & 0xA7527DEA)) ^ *(_DWORD *)&v231[4 * (HIBYTE(v319) ^ 0xED)];
  LODWORD(v201) = *(_DWORD *)&v231[4 * (BYTE3(v201) ^ 0x91)];
  int v325 = *(_DWORD *)&v231[4 * (BYTE3(v204) ^ 0x3E)];
  LODWORD(v231) = *(_DWORD *)&v231[4 * (HIBYTE(v318) ^ 0x81)];
  v319 ^= 0xC9AF1D8F;
  int v326 = *(_DWORD *)&v220[4 * v319];
  LODWORD(v204) = *(_DWORD *)&v220[4 * (v204 ^ 0x9A)];
  int v327 = *(_DWORD *)&v220[4 * (v318 ^ 0xE9)];
  LODWORD(v220) = BYTE1(v319);
  int v328 = (v319 >> 7) & 0x4E;
  unsigned int v329 = *(_DWORD *)&v226[4 * BYTE2(v319)];
  LODWORD(v226) = *(_DWORD *)&v226[4 * BYTE2(v315)];
  HIDWORD(v229) = v226 ^ 0xA9B;
  LODWORD(v229) = v226 ^ 0xDB440000;
  LODWORD(v226) = (v318 >> 8) ^ 0x8185BC;
  int v330 = BYTE1(v318) ^ 0xBC;
  int v331 = *(_DWORD *)&v219[4 * (v330 ^ 0x6D)];
  int v332 = v330 + 1115978535 - ((2 * v226) & 0x4E);
  LODWORD(v226) = HIDWORD(v418) ^ v204 ^ v216 ^ (v220 + 1115978535 - v328) ^ v201 ^ *(_DWORD *)&v219[4 * (v220 ^ 0x6D)];
  LODWORD(v220) = v418 ^ v332 ^ v325 ^ v331 ^ v326 ^ (v229 >> 12);
  unsigned int v333 = HIDWORD(v413) ^ v327 ^ (v324 + 365380211 - ((2 * v324) & 0x2B8E84E6));
  LODWORD(v231) = v413 ^ v231 ^ (v329 >> 12) ^ (v329 << 20) ^ (v322
                                                                           + 1403600629
                                                                           - ((2 * v322) & 0xA7527DEA));
  uint64_t v334 = (uint64_t)*(&off_10007DD80 + (int)v391);
  LODWORD(v216) = *(_DWORD *)(v334 + 4 * (BYTE1(v226) ^ 0xDu));
  LODWORD(v201) = *(_DWORD *)(v334 + 4 * (BYTE1(v231) ^ 0x97u));
  LODWORD(v204) = *(_DWORD *)(v334 + 4 * ((unsigned __int16)(v333 ^ 0x6F07) >> 8));
  int v335 = *(_DWORD *)(v334 + 4 * (BYTE1(v220) ^ 0xA9u));
  int v336 = *(_DWORD *)(v53 - 128);
  uint64_t v337 = (uint64_t)*(&off_10007DD80 + v336 - 1108);
  v338 = (char *)*(&off_10007DD80 + SHIDWORD(v385)) - 8;
  uint64_t v339 = *(unsigned int *)&v338[4 * (HIBYTE(v333) ^ 0xEF)];
  int v340 = *(_DWORD *)&v338[4 * ((v220 >> 24) ^ 0x4B)];
  LODWORD(v201) = *(_DWORD *)(v337 + 4 * (v333 ^ 7u)) ^ v201 ^ 0x92720ADA;
  int v341 = *(_DWORD *)&v338[4 * ((v231 >> 24) ^ 0x34)];
  LODWORD(v338) = *(_DWORD *)&v338[4 * ((v226 >> 24) ^ 0x77)];
  uint64_t v342 = (char *)*(&off_10007DD80 + v336 - 1005) - 4;
  int v343 = *(_DWORD *)&v342[4 * (BYTE2(v231) ^ 1)];
  int v344 = *(_DWORD *)&v342[4 * (BYTE2(v333) ^ 0x2A)];
  int v345 = *(_DWORD *)&v342[4 * (BYTE2(v220) ^ 0x4F)];
  LODWORD(v201) = v340 ^ (v201 - 2139054021 - ((2 * v201) & 0x1014076));
  int v346 = *(_DWORD *)(v337 + 4 * (v226 ^ 0x5Au));
  LODWORD(v220) = *(_DWORD *)(v337 + 4 * (v220 ^ 0x51u));
  LODWORD(v201) = *(_DWORD *)&v342[4 * (BYTE2(v226) ^ 0xE5)] ^ (v201 - 977050521 - ((2 * v201) & 0x8B86C8CE));
  int v347 = *(_DWORD *)(v337 + 4 * (v231 ^ 0x9Bu));
  uint64_t v348 = *(_DWORD *)(v53 - 148) ^ HIDWORD(v504) ^ (v201 - ((2 * v201) & 0xC8C07C4) - 2042231838);
  unint64_t v349 = (char *)*(&off_10007DD80 + v336 - 1047) - 4;
  *(unsigned char *)(*(void *)(v53 - 120) + 8) = v349[BYTE3(v348) ^ 0xD7] ^ 0x7E;
  LODWORD(v201) = ((v343 ^ 0xAC8B4E59 ^ v204) - 2139054021 - ((2 * (v343 ^ 0xAC8B4E59 ^ v204)) & 0x1014076)) ^ v338;
  LODWORD(v201) = (v201 - 80076572 - ((2 * v201) & 0xF67441C8)) ^ v220;
  LODWORD(v201) = *(_DWORD *)(v53 - 144) ^ v505 ^ (v201 - ((2 * v201) & 0x17D36CD8) + 199865964);
  uint64_t v350 = (uint64_t)*(&off_10007DD80 + SHIDWORD(v379));
  *(unsigned char *)(*(void *)(v53 - 120) + *(void *)(v53 - 240)) = (*(unsigned char *)(v350 + (v201 ^ 0xC7))
                                                               + 109) ^ 0x5F;
  uint64_t v351 = (uint64_t)*(&off_10007DD80 + (int)v379);
  LODWORD(v204) = *(unsigned __int8 *)(v351 + (BYTE1(v201) ^ 0x13));
  HIDWORD(v229) = v204 ^ 0x24;
  LODWORD(v229) = v204 << 24;
  *(unsigned char *)(*(void *)(v53 - 120) + 6) = (v229 >> 30) ^ 0x40;
  LODWORD(v204) = ((v344 ^ v346 ^ 0x3EF94483)
                 - 2139054021
                 - 2 * ((v344 ^ v346 ^ 0x3EF94483) & 0x80A03F ^ (v344 ^ v346) & 4)) ^ v341;
  LODWORD(v204) = (v204 - ((2 * v204) & 0xD290547C) + 1766337086) ^ v335;
  int v352 = *(_DWORD *)(v53 - 140);
  LODWORD(v338) = v352 ^ HIDWORD(v505) ^ (v204 - ((2 * v204) & 0x10D09A56) - 2006430421);
  LODWORD(v204) = *(unsigned __int8 *)(v351
                                     + ((unsigned __int16)(v352 ^ WORD2(v505) ^ (v204
                                                                                                - ((2 * v204) & 0x9A56)
                                                                                                + 19755)) >> 8));
  HIDWORD(v229) = v204 ^ 0x24;
  LODWORD(v229) = v204 << 24;
  *(unsigned char *)(*(void *)(v53 - 120) + *(void *)(v53 - 224)) = (v229 >> 30) ^ 0x7E;
  int v353 = (char *)*(&off_10007DD80 + v336 - 1038) - 4;
  *(unsigned char *)(*(void *)(v53 - 120) + 9) = v353[BYTE2(v348) ^ 0xFBLL] ^ 0xE6;
  LODWORD(v204) = ((v339 ^ v216 ^ 0xE9C88A05)
                 - 977050521
                 - 2 * ((v339 ^ v216 ^ 0xE9C88A05) & 0x45C36477 ^ (v339 ^ v216) & 0x10)) ^ v345;
  LODWORD(v204) = (v204 - 80076572 - ((2 * v204) & 0xF67441C8)) ^ v347;
  LODWORD(v204) = *(_DWORD *)(v53 - 136) ^ v506 ^ (v204 - ((2 * v204) & 0xE17D672A) + 1891546005);
  *(unsigned char *)(*(void *)(v53 - 120) + *(void *)(v53 - 192)) = v353[BYTE2(v204) ^ 0xB8] ^ 0x35;
  *(unsigned char *)(*(void *)(v53 - 120) + 11) = (*(unsigned char *)(v350 + (v348 ^ 0x1BLL)) + 109) ^ 0x7D;
  *(unsigned char *)(*(void *)(v53 - 120) + *(void *)(v53 - 248)) = v353[BYTE2(v201) ^ 3] ^ 0x4B;
  *(unsigned char *)(*(void *)(v53 - 120) + *(void *)(v53 - 200)) = v349[BYTE3(v201) ^ 0x6DLL] ^ 0x86;
  LODWORD(v201) = *(unsigned __int8 *)(v351 + (BYTE1(v348) ^ 0x92));
  HIDWORD(v229) = v201 ^ 0x24;
  LODWORD(v229) = v201 << 24;
  *(unsigned char *)(*(void *)(v53 - 120) + *(void *)(v53 - 168)) = (v229 >> 30) ^ 0xD2;
  uint64_t v354 = *(void *)(v53 - 208);
  *(unsigned char *)(*(void *)(v53 - 120) + v354) = v349[(v338 >> 24) ^ 0x53] ^ 0x6A;
  *(unsigned char *)(*(void *)(v53 - 120) + *(void *)(v53 - 184)) = (*(unsigned char *)(v350 + (v338 ^ 0x95))
                                                               + 109) ^ 0xAF;
  LOBYTE(v201) = *(unsigned char *)(v350 + (v204 ^ 0x64));
  uint64_t v355 = *(void *)(v53 - 120);
  *(unsigned char *)(v355 + *(void *)(v53 - 256)) = (v201 + 109) ^ 0x27;
  *(unsigned char *)(v355 + *(void *)(v53 - 176)) = v349[BYTE3(v204) ^ 0x6ELL] ^ 0xFC;
  LODWORD(v201) = *(unsigned __int8 *)(v351 + (BYTE1(v204) ^ 0x1FLL));
  HIDWORD(v229) = v201 ^ 0x24;
  LODWORD(v229) = v201 << 24;
  *(unsigned char *)(v355 + *(void *)(v53 - 216)) = (v229 >> 30) ^ 0x58;
  *(unsigned char *)(v355 + *(void *)(v53 - 160)) = v353[BYTE2(v338) ^ 0xC8] ^ 0x64;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, void, uint64_t))(a50 + 8 * ((3388 * (((v354 + 274310083 - 2 * ((v354 + 16) & *(_DWORD *)(v53 - 228))) ^ 0x1059A3B3u) < HIDWORD(v408))) ^ (v336 + 331))))(75, v351, v339, v348, 36, v353, 365380211, 2807201258, a3, a4, v357, v358, v359, v360, v362, v363, v365, v368, v371,
           v374,
           a15,
           a16,
           a17,
           v379,
           v385,
           v391,
           v397,
           v403,
           v408,
           v413,
           v418,
           v424,
           v429,
           v436,
           v442,
           v447,
           v452,
           v458,
           v461,
           v466,
           v471,
           v476,
           v481,
           v486,
           v490,
           v495,
           v498,
           v500,
           v502,
           a44,
           v503,
           v504,
           v505,
           v506,
           v507,
           a50);
}

uint64_t sub_100031824@<X0>(int a1@<W8>)
{
  int v4 = a1 - 481;
  unsigned __int8 v5 = a1 - 96;
  *(_DWORD *)(v3 - 200) = a1 - 481 + 628203409 * ((v1 & 0x94278B86 | ~(v1 | 0x94278B86)) ^ 0xE950784A) - 231789424;
  (*(void (**)(uint64_t))(v2 + 8 * (a1 + 1223)))(v3 - 200);
  BOOL v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 + 1683)))(336) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v5 ^ v6) & 1) * (v4 - 394)) ^ v4)))();
}

uint64_t sub_1000318E8(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 628203409 * (a1 ^ 0x82880C33);
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x139154EEB4327ECLL);
  int v4 = v2 - 1740488377;
  BOOL v3 = v2 - 1740488377 < 0;
  int v5 = 1740488377 - v2;
  if (!v3) {
    int v5 = v4;
  }
  BOOL v6 = (v5 ^ (v1 + 2012201885)) - 2012202734 + ((2 * v5) & 0xEFDF8DDA) < 0x7FFFFFFF;
  return (*(uint64_t (**)(void))((char *)*(&off_10007DD80 + ((v1 - 665) ^ 0x2F))
                              + 8
                              * (((v6 ^ (v1 + 111)) & 1 | (8 * ((v6 ^ (v1 + 111)) & 1))) ^ (v1 - 665))
                              - 4))();
}

uint64_t sub_1000319D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x530] = 0;
  LODWORD(STACK[0x494]) = 2079419384;
  STACK[0x5C0] = 0;
  LODWORD(STACK[0x614]) = 2079419384;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 8 * (int)((((*(unsigned char *)(a63 - 0x6225D3E880D3092CLL) - **(unsigned char **)(v70 + 8 * (a70 ^ 0x1AA))) != 185) * (((((a70 ^ 0x15E) + 1890349754) & 0x8F538DFB) + 293) ^ 0x258)) | a70 ^ 0x15E)))(2955882367, 1073, 1228181076, 3066786037, 1106, 175, 1890349754, 2404617723);
}

uint64_t sub_100031AA8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((455 * (((v1 == 0x73B3F2CB) ^ (v0 - 32)) & 1)) ^ v0)))();
}

uint64_t sub_100031B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(v28 - 112) = v24
                         + 1374699841 * ((((v28 - 128) | 0xC69197A2) - ((v28 - 128) & 0xC69197A2)) ^ 0xAB658FAB)
                         + 331;
  *(void *)(v28 - 128) = a24;
  *(void *)(v28 - 120) = v27;
  (*(void (**)(uint64_t))(v25 + 8 * (v24 + 796)))(v28 - 128);
  *(void *)(v28 - 120) = a24;
  *(_DWORD *)(v28 - 112) = v24
                         + 1178560073 * (((~(v28 - 128) & 0xBE04A698) - (~(v28 - 128) | 0xBE04A699)) ^ 0x490DEFB)
                         + 245;
  *(void *)(v28 - 104) = v26;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v24 ^ 0xD3F)))(v28 - 128);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * ((25
                                              * (((121 * (v24 ^ 0xC2)) ^ (*(_DWORD *)(v28 - 128) > 0x4B4B6B4Bu)) & 1)) ^ v24)))(v29);
}

void sub_100031C38()
{
}

uint64_t sub_100031C54()
{
  *(void *)(v6 - 128) = v4;
  *(void *)(v6 - 112) = v0;
  *(_DWORD *)(v6 - 120) = v5
                        + ((((v6 - 136) | 0x64467E2E) - (v6 - 136) + ((v6 - 136) & 0x9BB981D0)) ^ 0xDED2064C) * v3
                        + 1021;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v5 ^ 0xA37)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((*(_DWORD *)(v6 - 136) > v1) * (v5 - 698)) ^ v5)))(v7);
}

uint64_t sub_100031CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, unsigned int a15)
{
  BOOL v19 = a15 > v18;
  if (v19 == v16 - 876582880 < -1175863809) {
    BOOL v19 = v16 - 876582880 < a13;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 8 * ((v19 * (v15 - 917)) ^ v15)))(a1, 0x30530205DD195846, 3709425734);
}

void sub_100031D84()
{
  uint64_t v0 = __chkstk_darwin();
  if (*(void *)(v0 + 24)) {
    BOOL v2 = *(void *)(v0 + 8) == 0x38223619C320A2BLL;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  int v1 = *(_DWORD *)(v0 + 16) ^ (1755732067 * ((2 * (v0 & 0x47DE7202) - v0 - 1205760515) ^ 0x66E73026));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100031EB4(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(result + 32) = a4;
  return result;
}

void sub_100031EBC(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  a4 = v7;
  a5 = v6;
  a3 = v7;
  a6 = v8
     + 69
     + 1225351577 * ((2 * (&a3 & 0x418703F0) - &a3 - 1099367411) ^ 0x9DE2241B)
     + 803;
  (*(void (**)(uint64_t *))(a1 + 8 * ((v8 + 69) ^ 0x8E6)))(&a3);
  JUMPOUT(0x100031F24);
}

uint64_t sub_100031F4C()
{
  int v5 = 535753261 * ((1097295581 - ((v4 - 144) | 0x416766DD) + ((v4 - 144) | 0xBE989922)) ^ 0xB46C970D);
  *(void *)(v4 - 136) = v7;
  *(void *)(v4 - 120) = v3;
  *(_DWORD *)(v4 - 128) = v0 - v5 - 424;
  *(_DWORD *)(v4 - 144) = (((v0 - 23) ^ 0xE0C66BF0) + v9) ^ v5;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 582)))(v4 - 144);
  *(_DWORD *)(v8 - 0x3BC303ACCBD26FD1) = v9;
  *(_DWORD *)(v1 + 64) = 526347143;
  return result;
}

uint64_t sub_10003203C(uint64_t a1, int a2, int a3, int a4, int a5)
{
  int v10 = a3 - 32;
  uint64_t v11 = v7 + v10 + (a2 ^ (v6 + 2159));
  long long v12 = *(_OWORD *)(v5 + v11 - 15);
  long long v13 = *(_OWORD *)(v5 + v11 - 31);
  uint64_t v14 = a1 + v11;
  *(_OWORD *)(v14 - 15) = v12;
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 + v10 != 32) * a5) ^ a4)))();
}

uint64_t sub_100032044(int a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((62 * (*(_DWORD *)(a3 + 48 * (v6 + a1)) == v3 + v4 + ((v4 + 398) ^ 0xE1B179AD) - 148)) ^ v4)))();
}

uint64_t sub_100032098@<X0>(int a1@<W1>, uint64_t a2@<X6>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return sub_100025380(a17, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

void sub_1000320A0(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  a3 = v7;
  a4 = v8 - 535753261 * ((&a3 & 0xF4826C3B | ~(&a3 | 0xF4826C3B)) ^ 0x1899DEB) - 1396;
  a5 = a1;
  a6 = v7;
  (*(void (**)(uint64_t *))(v6 + 8 * (v8 ^ 0xE46u)))(&a3);
  sub_100021FB0();
}

void sub_100032104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,int a60,int a61)
{
  *(_DWORD *)(v61 - 136) = a58 ^ 0xAB8CE8B9;
  *(_DWORD *)(v61 - 148) = a60 ^ 0x3D1F624D;
  *(_DWORD *)(v61 - 140) = a61 ^ 0xFC7E84D3;
  *(_DWORD *)(v61 - 144) = a59 ^ 0xF2B52970;
  JUMPOUT(0x10002FAECLL);
}

uint64_t sub_100032158@<X0>(int a1@<W2>, void *a2@<X4>, int a3@<W5>, int a4@<W7>, unsigned int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  unint64_t v27 = (*(_DWORD *)(a19 + 4 * (a4 + 1 + a1)) ^ a5)
      + HIDWORD(v21)
      + v22 * (unint64_t)(*(_DWORD *)(*a2 + 4 * (a4 + 1 + a1)) ^ a5);
  *(_DWORD *)(a19 + 4 * (a4 + a1)) = v27 + a5 - ((v27 << (((v19 - 101) | 0xF0) + 17)) & v20);
  BOOL v29 = a4 + v24 > v25 || a4 + v24 < a3;
  return (*(uint64_t (**)(void))(v23 + 8 * ((v29 * v26) ^ v19)))();
}

uint64_t sub_1000321D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, int a13, unsigned int a14)
{
  a12 = &STACK[0x4313E3591B4C279];
  a14 = 1410 - 460628867 * ((2 * (&a12 & 0x44AF77C8) - &a12 - 1152350160) ^ 0xF7C60A4D);
  uint64_t v16 = (*(uint64_t (**)(unint64_t **))(v15 + 18432))(&a12);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((27 * (a13 != v14)) ^ 0x2A4)))(v16);
}

void sub_100032298()
{
}

uint64_t sub_1000322C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(a5 + (v9 + v6)) = *(void *)(v8 + (v9 + v6));
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v10 + 8 * (((a3 == 0) * v7) ^ a6)))(a1, a2, (a3 + 8));
}

uint64_t sub_1000322F0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v17 = (a1 - 950) | 0x80;
  int v18 = ((2 * ((v16 - 144) & 0x2A0F26A8) - (v16 - 144) - 705636015) ^ 0x6F64A133) * v9;
  *(_DWORD *)(v16 - 140) = a1 - v18 + 426;
  *(_DWORD *)(v16 - 136) = v10 + v18 + 316210499 + v17;
  *(void *)(v16 - 128) = v14;
  *(void *)(v16 - 120) = v15;
  (*(void (**)(uint64_t))(v11 + 8 * (a1 ^ 0xAAE)))(v16 - 144);
  *(void *)(v16 - 144) = v12;
  *(void *)(v16 - 136) = a8;
  *(_DWORD *)(v16 - 128) = (v17 + 767) ^ (628203409
                                        * ((((2 * (v16 - 144)) | 0x6174B83A) - (v16 - 144) + 1329964003) ^ 0x3232502E));
  (*(void (**)(uint64_t))(v11 + 8 * (v17 ^ 0x990)))(v16 - 144);
  *(void *)(v16 - 144) = a7;
  *(void *)(v16 - 136) = a8;
  *(void *)(v16 - 112) = v15;
  *(void *)(v16 - 104) = v12;
  *(_DWORD *)(v16 - 128) = v17
                         + 1374699841 * (((~(v16 - 144) & 0xF8095E0E) - (~(v16 - 144) | 0xF8095E0F)) ^ 0x95FD4606)
                         + 185;
  *(void *)(v16 - 120) = a9;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v11 + 8 * (v17 ^ 0x98D)))(v16 - 144);
  return (*(uint64_t (**)(uint64_t))(v11
                                            + 8
                                            * (int)(((((v13 == 0) ^ v17) & 1)
                                                   * ((v17 + 999158654) & 0xC4720FC7 ^ 0x3D4)) ^ v17)))(v19);
}

uint64_t sub_100032494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * (((6 * (v5 ^ (v5 + 1481) ^ 0x5B9) - 640)
                                                                                  * (v4 >= 0xD2EEDF4F)) | (v5 - 40560549))))(a1, a2, a3, a4, 40561189);
}

uint64_t sub_1000324F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,char a58)
{
  unsigned int v59 = HIDWORD(a23) - ((2 * HIDWORD(a23) - 1893048290) & 0xAE1A84BE) - 1633521042;
  uint64_t v60 = (2 * (a5 - 938)) ^ 0x31Eu;
  BOOL v62 = (((((_BYTE)v59 << (a58 ^ 0xCC)) & ((a5 + 86) ^ 0x7A) ^ 0x9E) + (v59 ^ 0x10) + 1) & 0xF) != ((3 * ((a5 - 938) ^ 0xB) - 1271) ^ v60)
     || ((v59 << (a58 ^ 0xCC)) & ((a5 - 938) ^ 0xFDFFFF7A) ^ 0xAC1A849E) + (v59 ^ 0x29F2BD10) == -16777393;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * ((1004 * v62) ^ ((int)a5 - 938))))(a1, a2, a3, a4, a5, a6, v60, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1000325BC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  *(unint64_t *)((char *)&STACK[0x2AC] + a2 + a1) = 0xEBEBEBEBEBEBEBEBLL;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1768 * (((2 * v3) ^ 0x23ALL) == (v2 & 0x38))) ^ v3)))();
}

uint64_t sub_100032610(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((457 * (a1 ^ 0x4A4) - 721418222) | 0xA130003) ^ (v3 - 771)) * (v1 - v2 == 96090376)) ^ a1)))();
}

uint64_t sub_10003267C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((15 * ((v1 >> v0) & 1)) ^ v2)))();
}

uint64_t sub_1000326A0()
{
  *(void *)(v3 + (v1 | v5)) = v7;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 == 0) * v6) ^ v0)))();
}

uint64_t sub_1000326CC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unsigned int v8 = v5 + 35659791;
  if (v8 <= 0x40) {
    unsigned int v8 = 64;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((((a4 ^ 0x303) - 1334) * (a3 - v4 - v6 + v8 < 0xF)) ^ a4)))();
}

uint64_t sub_100032748@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1473 * (a2 + 1 == v3 + 64)) | a1)))();
}

void sub_100032800()
{
}

uint64_t sub_100032814()
{
  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

uint64_t sub_100032878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v37 = v36 + v32;
  (*(void (**)(uint64_t))(v33 + 8 * (v37 + 1780)))(a32);
  int v38 = (*(uint64_t (**)(void))(v33 + 8 * (v37 + 1761)))();
  int v39 = v38 - 43663526 - ((v37 - 87327589) & (2 * v38));
  *char v35 = v39;
  unsigned int v40 = ((~v39 >> 30) - 43663526 - 4 * (v39 >= 0)) ^ v39;
  v35[1] = v34 + 1812433253 * v40 - ((-670100790 * v40 + 2) & ((v37 + 13) ^ 0xFACB7C92));
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * (v37 + 13)))(*(void *)(v33 + 8 * (v37 + 13)), 4251303770, 1812433253, v41, v42, v43, v44, v45, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_100032954@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v6 = v4 + a1;
  *(unsigned char *)(v2 + v6) = v3;
  return (*(uint64_t (**)(void))(v5 + 8 * (a2 ^ (2 * ((unint64_t)(v6 + 1) < 0x40)))))();
}

void sub_100032984()
{
}

uint64_t sub_1000329B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v45 = v41 + 1;
  *(unsigned char *)(a6 + (v45 - 1584496196)) = *(unsigned char *)(a41 + v44 - 1652740644)
                                                    + ~((v42 - 57) & (2 * *(unsigned char *)(a41 + v44 - 1652740644)))
                                                    - 20;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 8 * ((4018 * ((a4 + v45 + 1) < 0x40)) ^ v42)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_1000329B8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (a3 ^ ((v6 + 1 != v5 + 60) << 6))))(v3);
}

uint64_t sub_100032A68@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W6>, int a5@<W8>)
{
  uint64_t v12 = (unsigned int *)(v10 + 4 * v6);
  uint64_t v13 = v6 + 1;
  int v14 = *(_DWORD *)(v10 + 4 * v13);
  unsigned int v15 = ((a5 ^ 0x200) * v7) ^ (a3 - 670) ^ ((v14 & 0x7FFFFFFE | v5 & 0x80000000) >> 1);
  unsigned int *v12 = v12[397] ^ a4 ^ *(_DWORD *)(v8 + 4 * (v14 & 1)) ^ (v15 + a1 - (a2 & (2 * v15)));
  return (*(uint64_t (**)(void))(v9 + 8 * (((v13 == 227) * v11) ^ a5)))();
}

void sub_100032ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)(a3 + v3) = 1740488377;
  sub_100041F00();
}

void sub_100032B74(int a1@<W8>, uint64_t a2, int a3, int a4)
{
  unsigned int v9 = ((2 * ((v4 & 0xBFFFFFFF ^ 0x5F501A07) & 0x1F501A27 ^ (v4 | 0xFFFFFFDF))) ^ 0x80000041)
     + (v4 & 0xBFFFFFFF ^ 0x5F501A07)
     + (v5 ^ 0x5F501BB0);
  uint64_t v10 = *(void *)(v7 - 0x2C138C8FAF40FC22);
  int v11 = a1 + *v6;
  *(unsigned char *)(v10 + (v11 + 526)) = (HIBYTE(v9) ^ 0x5F) - ((2 * (HIBYTE(v9) ^ 0x5F)) & 0xD6) - 21;
  *(unsigned char *)(v10 + (v11 + 527)) = (BYTE2(v9) ^ 0x50)
                                              - 2 * ((BYTE2(v9) ^ 0x50) & 0xEF ^ BYTE2(v9) & 4)
                                              - 21;
  *(unsigned char *)(v10 + (v11 + 528)) = (BYTE1(v9) ^ 0x1A)
                                              - 2 * ((BYTE1(v9) ^ 0x1A) & 0xEF ^ BYTE1(v9) & 4)
                                              - 21;
  *(unsigned char *)(v10 + (v11 + 529)) = v9 ^ 0xEC;
  uint64_t v12 = *(void *)(v7 - 0x2C138C8FAF40FC22);
  unsigned int v13 = v8 - ((2 * v8 - 966763500) & 0xA7400726) - 1227869795;
  unsigned int v14 = ((2 * (a1 + *v6 + 530)) & 0xF670DFF6) + ((a1 + *v6 + 530) ^ 0xFB386FFB) + 80187397;
  *(unsigned char *)(v12 + v14) = (HIBYTE(v13) ^ 0xD3) - ((2 * (HIBYTE(v13) ^ 0xD3)) & 0xD6) - 21;
  *(unsigned char *)(v12 + v14 + 1) = (BYTE2(v13) ^ 0xA0) - 2 * ((BYTE2(v13) ^ 0xA0) & 0xEF ^ BYTE2(v13) & 4) - 21;
  *(unsigned char *)(v12 + v14 + 2) = (BYTE1(v13) ^ 3)
                            - 2
                            * ((BYTE1(v13) ^ 3) & 0xEF ^ ((unsigned __int16)(v8 - ((2 * v8 + 23572) & 0x726) + 12701) >> 8) & 4)
                            - 21;
  *(unsigned char *)(v12 + v14 + 3) = (v8 - ((2 * v8 + 20) & 0x26) - 99) ^ 0x78;
  *uint64_t v6 = a4;
  sub_100055F2C();
}

uint64_t sub_100032D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v11 + a8) & v9 ^ v10) * (v12 < v13)) ^ v11)))();
}

void sub_100032D64(_DWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  *((unsigned char *)a1 + v4 + 4) = 100;
  sub_100034398(a1, a2, a3, a4);
}

uint64_t sub_100032D90(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  return (*(uint64_t (**)(void))(v23
                              + 8
                              * ((19
                                * (a22 - a6 - v22 + (((a4 - 1676) | 0x120u) ^ 0xDD4291686CF0D7BCLL) >= ((a4 - 311) ^ 0x577uLL))) ^ a4)))();
}

uint64_t sub_100032DF0@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  BOOL v27 = v23 == a1 || a23 - v24 != (a2 ^ 0x2685B3F);
  return (*(uint64_t (**)(void))(v25 + 8 * ((v27 * (a2 - 1094)) ^ a2)))();
}

void sub_100032E34()
{
  _DWORD *v0 = -526372770;
}

uint64_t sub_100032E40@<X0>(int a1@<W2>, int a2@<W4>, uint64_t a3@<X8>)
{
  BOOL v3 = (a2 & 0x40000000) == (((a1 + 453) | 0xA) ^ 0x43A);
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (((2 * (((a1 - 38) ^ v3) & 1)) & 0xEF | (16
                                                                                        * (((a1 - 38) ^ v3) & 1))) ^ a1)))();
}

uint64_t sub_100032EF8(uint64_t a1, int a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((a3 + v6) & v7 ^ a2) + v5 - 1 >= 0) * a4) ^ a3)))();
}

uint64_t sub_100032F00@<X0>(uint64_t a1@<X1>, char a2@<W3>, uint64_t a3@<X5>, int a4@<W8>)
{
  *(unsigned char *)(v5 + a1 + a3 - 1) = a2;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v5 + a1) < 0x40) * v4) ^ a4)))();
}

uint64_t sub_100032F2C(unsigned int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((4014
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 5) - 13)))
                                 + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v2) == v2
                                                                               + 2 * (((a1 - 1892) | 0x128) ^ 0x1C3)
                                                                               - 254)) ^ a1)))();
}

uint64_t sub_100032F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39
                                                              + 8
                                                              * ((((v40 + 70636353) > 7) * v38) ^ ((a38 + 749) | 0xD))))(0x36F545AA472A6C26, a2, 0x1952C41DDE3D9B5BLL);
}

uint64_t sub_100033030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8
                                                             + 8
                                                             * (((((v7 < 0x20) ^ (a7 - 44)) & 1)
                                                               * (((a7 - 1099) | 0x2CD) - 749)) ^ a7)))(a1, a2, 0);
}

uint64_t sub_100033070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,unsigned int a35)
{
  return sub_1000494C0(a1, a2, 40561189, a4, a5, 1143361340, a35);
}

uint64_t sub_10003307C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  unsigned int v34 = v30 - 1048539666;
  char v35 = (_DWORD *)(a26 + 24 * v34);
  HIDWORD(a28) = v35[4];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * ((2682 * (((*v35 + (int)a1) & 0xFFFFFFFFFFFFFFDLL) == 0)) ^ v31)))(a1, a2, a3, a4, a5, a6, *(void *)(v32 + 24 * v34 + 16), a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_100033130(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int v12 = v9 + v8;
  int v13 = v12 + v10;
  if ((v12 + v10) <= 0x40) {
    int v13 = a4;
  }
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((98 * (((3 * (((v7 - 1391) | 0x509) ^ 0x5D0)) ^ a7) - v12 >= a7 + a2 + a3 + v13 + 719)) ^ v7)))();
}

uint64_t sub_100033190@<X0>(uint64_t a1@<X1>, char a2@<W3>, uint64_t a3@<X5>, int a4@<W8>)
{
  *(unsigned char *)(v5 + a1 + a3 - 1) = a2;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v5 + a1) < 0x38) * a4) ^ v4)))();
}

uint64_t sub_1000331C0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2
                                                              + 8
                                                              * (((((v4 - 181) ^ 0x14B) - 1276) * (v3 == 2078035507)) ^ (v4 + 620))))(a1, a2, 2095721610);
}

uint64_t sub_100033200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9
                                                     + 8
                                                     * (int)((((a5 + ((v8 + 2138173196) & 0xABEF2FB7) - 760) ^ 0x1E7)
                                                            * (v6 == v7)) ^ v8)))(3299963166, a6);
}

uint64_t sub_100033254@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,uint64_t a33,char a34,uint64_t a35,char a36,uint64_t a37,char a38)
{
  int v41 = &a38 + v38;
  uint64_t v57 = &a28 + v38;
  uint64_t v56 = &a30 + v38;
  int v55 = &a34 + v38;
  uint64_t v54 = &a36 + v38;
  uint64_t v53 = &a32 + v38;
  uint64_t v52 = &a24 + v38;
  char v51 = &a22 + v38;
  uint64_t v42 = *a1;
  uint64_t v43 = a1[5];
  uint64_t v62 = a1[4];
  int v44 = a3 - 51;
  *(void *)(v40 - 104) = *(void *)(*a1 - 0x3F8123127DDA1A5CLL);
  *(void *)(v40 - 128) = &a38 + v38;
  *(void *)(v40 - 120) = v43;
  *(_DWORD *)(v40 - 112) = a3
                         - 51
                         + 1224239923 * (((v40 - 144) & 0x3BB37F04 | ~((v40 - 144) | 0x3BB37F04)) ^ 0x36FF7D2C);
  unsigned __int8 v58 = a3 + 96;
  int v45 = a3 ^ 0x7E0;
  *(void *)(v40 - 144) = v42;
  *(void *)(v40 - 136) = a4;
  uint64_t v60 = 8 * (a3 ^ 0xC41);
  (*(void (**)(uint64_t))(v39 + v60))(v40 - 144);
  *(void *)(v40 - 136) = v43;
  *(void *)(v40 - 128) = v51;
  *(_DWORD *)(v40 - 144) = (a3 - 965) ^ (1225351577
                                       * ((2 * ((v40 - 144) & 0x7323D130) - (v40 - 144) + 215756489) ^ 0x2F46F6DF));
  *(void *)(v40 - 120) = v41;
  *(void *)(v40 - 112) = v42;
  (*(void (**)(uint64_t))(v39 + 8 * (a3 ^ 0xDB4)))(v40 - 144);
  *(void *)(v40 - 104) = v41;
  *(_DWORD *)(v40 - 112) = v44 + 1224239923 * ((v40 + 460286470 - 2 * ((v40 - 144) & 0x1B6F6A96)) ^ 0xE9DC9741);
  *(void *)(v40 - 144) = v42;
  *(void *)(v40 - 136) = v51;
  *(void *)(v40 - 128) = v57;
  *(void *)(v40 - 120) = v43;
  uint64_t v59 = 8 * (a3 + 1087);
  (*(void (**)(uint64_t))(v39 + v59))(v40 - 144);
  *(void *)(v40 - 104) = v57;
  *(void *)(v40 - 144) = v42;
  *(void *)(v40 - 136) = v51;
  *(void *)(v40 - 128) = v56;
  *(void *)(v40 - 120) = v43;
  *(_DWORD *)(v40 - 112) = v44 + 1224239923 * (((v40 - 144) & 0xFA6987D9 | ~((v40 - 144) | 0xFA6987D9)) ^ 0xF72585F1);
  (*(void (**)(uint64_t))(v39 + v60))(v40 - 144);
  *(void *)(v40 - 104) = v56;
  *(_DWORD *)(v40 - 112) = v44
                         + 1224239923
                         * ((((v40 - 144) | 0x89678349) - (v40 - 144) + ((v40 - 144) & 0x76987CB0)) ^ 0x7BD47E9E);
  *(void *)(v40 - 144) = v42;
  *(void *)(v40 - 136) = v51;
  *(void *)(v40 - 128) = v55;
  *(void *)(v40 - 120) = v43;
  (*(void (**)(uint64_t))(v39 + v60))(v40 - 144);
  *(void *)(v40 - 104) = v55;
  *(void *)(v40 - 144) = v42;
  *(void *)(v40 - 136) = v51;
  *(void *)(v40 - 128) = v54;
  *(void *)(v40 - 120) = v43;
  *(_DWORD *)(v40 - 112) = v44
                         + 1224239923
                         * ((((v40 - 144) | 0xA3105CC4) - (v40 - 144) + ((v40 - 144) & 0x5CEFA338)) ^ 0x51A3A113);
  (*(void (**)(uint64_t))(v39 + v59))(v40 - 144);
  *(void *)(v40 - 104) = v54;
  *(_DWORD *)(v40 - 112) = v44 + 1224239923 * (((v40 - 144) & 0x9B210A30 | ~((v40 - 144) | 0x9B210A30)) ^ 0x966D0818);
  *(void *)(v40 - 144) = v42;
  *(void *)(v40 - 136) = v51;
  *(void *)(v40 - 128) = v53;
  *(void *)(v40 - 120) = v43;
  (*(void (**)(uint64_t))(v39 + v60))(v40 - 144);
  *(void *)(v40 - 104) = v53;
  *(_DWORD *)(v40 - 112) = v44 + 1224239923 * ((((v40 - 144) | 0x95C539CC) - ((v40 - 144) & 0x95C539CC)) ^ 0x6776C41B);
  *(void *)(v40 - 144) = v42;
  *(void *)(v40 - 136) = v51;
  *(void *)(v40 - 128) = v52;
  *(void *)(v40 - 120) = v43;
  (*(void (**)(uint64_t))(v39 + v59))(v40 - 144);
  *(void *)(v40 - 144) = v42;
  *(void *)(v40 - 136) = v51;
  *(void *)(v40 - 104) = v52;
  *(void *)(v40 - 128) = v51;
  *(void *)(v40 - 120) = v43;
  *(_DWORD *)(v40 - 112) = v44 + 1224239923 * (((v40 - 144) & 0x8BC4ED51 | ~((v40 - 144) | 0x8BC4ED51)) ^ 0x8688EF79);
  (*(void (**)(uint64_t))(v39 + v60))(v40 - 144);
  uint64_t v47 = *(void *)(v42 - 0x3F8123127DDA1A64);
  *(_DWORD *)(v40 - 128) = a3
                         + 1374699841
                         * ((-1520606683 - ((v40 - 144) | 0xA55D6225) + ((v40 - 144) | 0x5AA29DDA)) ^ 0x375685D3)
                         + 613;
  *(void *)(v40 - 144) = v47;
  *(void *)(v40 - 136) = a2;
  (*(void (**)(uint64_t))(v39 + 8 * (a3 ^ 0xC5E)))(v40 - 144);
  *(void *)(v40 - 136) = v62;
  *(_DWORD *)(v40 - 144) = a3 + 235795823 * ((v40 - 862440077 - 2 * ((v40 - 144) & 0xCC983603)) ^ 0x58357F5A) - 680;
  uint64_t v48 = (*(uint64_t (**)(uint64_t))(v39 + 8 * (a3 + 1096)))(v40 - 144);
  BOOL v49 = *(_DWORD *)(v40 - 140) - 128426105 < (v45 ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(uint64_t))(v39 + 8
                                                  * ((2 * ((v58 ^ v49) & 1)) & 0xF7 | (8 * ((v58 ^ v49) & 1)) | a3)))(v48);
}

uint64_t sub_100033790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  int v19 = a16 + v18;
  if (a16 + v18 < 0) {
    int v19 = -v19;
  }
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (int)((2001
                                                   * ((int)((v19 ^ (((v17 + 823657511) & 0xCEE7FBFE) + 2143157247))
                                                          + ((2 * v19) & 0xFF7BFF72)
                                                          - 402669824
                                                          + ((((v17 + 823657511) & 0xCEE7FBFE ^ 0x2E) + 126) ^ (v18 + 1037))) >= 0)) ^ (v17 + 823657511) & 0xCEE7FBFE)))(3699319000);
}

uint64_t sub_100033830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(unsigned char *)(*(void *)(v8 + 96) + 1568) = 0;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((2187
                                * (*(_DWORD *)(v8 + 72) == (((v6 - 2004599620) | 0xA0861) ^ 0x7BED6BFC)
                                                         + ((v6 - 812) ^ (a6 - 162)))) ^ (v6 - 812))))();
}

uint64_t sub_100033890@<X0>(unsigned int a1@<W0>, unsigned int a2@<W1>, char a3@<W3>, int a4@<W4>, uint64_t a5@<X5>, int a6@<W8>)
{
  *(unsigned char *)(a5 + (v6 + v9)) = *(unsigned char *)(v11 + (v7 + a4))
                                           + (a3 | ~(2 * *(unsigned char *)(v11 + (v7 + a4))))
                                           - 20;
  unsigned int v12 = v7 + 1 + v8;
  int v13 = (a2 < a1) ^ (v12 < a1);
  BOOL v14 = v12 < a2;
  if (v13) {
    BOOL v14 = a2 < a1;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * (((4 * !v14) | (8 * !v14)) ^ a6)))();
}

void sub_100033908(int a1@<W8>)
{
  BOOL v7 = *(_DWORD *)(*v4 + 4 * (a1 + v3)) == v2;
  *int v6 = (a1 - v7 + ((41 * (v5 ^ 0x156)) ^ (v3 + 1180))) * v1 - 674146141 * (a1 - v7) + 623588800;
}

uint64_t sub_100033998(int a1)
{
  BOOL v4 = (v2 + v1 + a1 - 2144135688 + a1 + 511) > 7;
  return (*(uint64_t (**)(void))(v3 + 8 * (((8 * v4) | (16 * v4)) ^ a1)))();
}

uint64_t sub_1000339FC@<X0>(uint64_t a1@<X1>, char a2@<W3>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  unint64_t v6 = a4 + a1;
  *(unsigned char *)(v6 + a3 - 1) = a2;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v6 < 0x38) * (((v4 - 1245) | 0x220) + 780)) ^ ((v4 - 1245) | 0x220))))();
}

uint64_t sub_100033A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((54 * (a14 + v15 - (unint64_t)((v16 ^ v17 ^ 0xCF3A063E) + v14) < 0x10)) ^ v16)))();
}

uint64_t sub_100033A7C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 273) ^ (v2 - 244)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_100033AA4(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v1 == v2) ^ (3 * (a1 ^ 0xFA))) & 1) * ((a1 ^ 0x79) - 1000)) | a1)))();
}

uint64_t sub_100033AE0(int a1, uint64_t a2, int a3, int a4, int a5)
{
  *(_DWORD *)(a2 + (v7 - a4)) = *(_DWORD *)(v5 + (v7 - a4));
  return (*(uint64_t (**)(void))(v8 + 8 * (((a1 + a4 - 893 == v6) * a5) ^ a3)))();
}

uint64_t sub_100033B10@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v2 + v5 + v4 + ((a1 - 282) | 0xA1u)) = *(unsigned char *)(a2 + v5 + v4 + ((a1 - 282) | 0xA1u));
  return (*(uint64_t (**)(void))(v6 + 8 * ((27 * (v5 - 1 == v3)) ^ a1)))();
}

uint64_t sub_100033B50@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((((a1 + 1921752872) & 0x8D74672F ^ 0x765) * (v1 == v2)) ^ a1)))();
}

void sub_100033B94()
{
}

uint64_t sub_100033BA4(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((((v2 + 1936343082) & 0x8C95BFFB) + 88) ^ 0x43C)
                                     * (*(_DWORD *)(v1 + 4 * v3) != a1)) ^ v2)))();
}

uint64_t sub_100033BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,unsigned int a22)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * (int)((v23 - 1753) ^ (246 * ((a22 >> 29) & 1)))))(a1, 246, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_100033C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a10 + v12) = v14;
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * ((((v10 & 0xFFFFFFFFFFFFFFF8) == 8) * (((v11 - 1792806640) & 0x6ADC0DBA) - 1146)) ^ v11)))();
}

uint64_t sub_100033C64()
{
  return (*(uint64_t (**)(void))(*(void *)(v1 + 8 * (v2 ^ 0x2F))
                              - 4
                              + 8
                              * (((((v0 - 1) < 0x7FFFFFFF) ^ (v2 + 8)) & 1 | (8 * ((((v0 - 1) < 0x7FFFFFFF) ^ (v2 + 8)) & 1))) ^ v2)))();
}

uint64_t sub_100033CAC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1
                                                     + 8
                                                     * ((1306 * (((206 * (v2 ^ 0x791) + 1527) ^ 0x7B3) == 32)) ^ (206 * (v2 ^ 0x791)))))(a1, 1196459421);
}

uint64_t sub_100033D34(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((23
                                * (((v3 + 53) ^ (a1 == ((v3 + 386) ^ (unint64_t)(v2 - 942)))) & 1)) ^ (v3 + 287))))();
}

void sub_100033D78()
{
}

uint64_t sub_100033DAC@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W4>, int a4@<W5>, int a5@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 8) + (a4 + a5)) = (a3 ^ v7) >> v8;
  return (*(uint64_t (**)(void))(v5 + 8 * ((4055 * ((a2 ^ 0xFFFFF86C) + a4 == (a2 ^ v6))) ^ a2)))();
}

uint64_t sub_100033DF8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((61 * (a2 + (a7 ^ 0xA53u) - 1019 + v7 - 1125 < 0xFFFFFFF0)) ^ a7)))();
}

uint64_t sub_100033E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, int a13, unint64_t *a14, int a15)
{
  unsigned int v19 = 1755732067 * ((&a11 & 0xC1A12D46 | ~(&a11 | 0xC1A12D46)) ^ 0xE0986F62);
  a14 = &STACK[0x5E89E940DF8E90E9];
  a13 = (v17 + 13) ^ v19;
  a11 = &STACK[0x3F70C0CAD4126774];
  a12 = v18;
  a15 = v19 ^ 0x5203B642;
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v17 + 1964)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (int)(((*(_DWORD *)(v18 - 0x2C138C8FAF40FC0ALL) == ((v17 - 851080612) & 0x32BA77BF ^ (v15 - 863)))
                                                   * (((v17 - 851080612) ^ 0xCD458F7F) - 239)) ^ v17)))(v20);
}

uint64_t sub_100033F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36
                                                                       + 8
                                                                       * ((486
                                                                         * (v37 >= 971 * (a36 & 0x4776F96 ^ 0x794u)
                                                                                 - 290456665)) ^ (v38 + 40561906))))(a1, a2, a3, 4251303770);
}

uint64_t sub_100033F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45,int a46,int a47)
{
  return (*(uint64_t (**)(void))(v47
                              + 8
                              * ((1011
                                * (((a11 - ((2 * a45) & 0x175931A0) - 111520934) ^ ((a47 ^ 0x5D7) + 1950) ^ 0x7516E0C5)
                                 - 1591616
                                 + ((2 * (a11 - ((2 * a45) & 0x175931A0) - 111520934)) & 0xFD74FFB8 ^ 0x155031A0) == 2124560028)) ^ a47)))();
}

uint64_t sub_100034068(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8 * ((961 * (((v5 == a1) ^ (((a5 + 25) & 0xC7) - 124)) & 1)) ^ a5)))();
}

uint64_t sub_1000340B8(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  *(void *)(a2 + (a4 - v6 + 679)) = *(void *)(a1 + (a4 - v6 + 679));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v5 + v6 - 652 == v7) * a5) ^ a3)))();
}

uint64_t sub_1000340EC()
{
  return 4294925273;
}

uint64_t sub_1000340F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((2794 * (v6 + 1 == v8 + 24)) ^ a5)))(v5);
}

uint64_t sub_1000341C0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((3050 * (v0 == (((v1 ^ 0x36B) + 1824) ^ 0x7D0))) ^ v1)))();
}

void sub_1000341F4()
{
}

void sub_10003420C()
{
}

uint64_t sub_100034218(unsigned int a1, int a2, int8x8_t a3, uint64_t a4, int a5, uint64_t a6)
{
  *(int8x8_t *)(a6 + a1) = veor_s8(*(int8x8_t *)(v7 + a1), a3);
  return (*(uint64_t (**)(void, void))(v8 + 8 * (((a2 == 0) * v6) ^ a5)))(a1 - 8, (a2 + 8));
}

uint64_t sub_10003424C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v15 = (a6 + v9);
  *(unsigned char *)(v13 + v15) ^= *(unsigned char *)(v11 + (v15 & 0xF)) ^ *(unsigned char *)(v10 + (v15 & 0xF)) ^ *(unsigned char *)(v12 + (v15 & 0xF)) ^ (5 * (v15 & 0xF)) ^ 0xEB;
  return (*(uint64_t (**)(void))(v14 + 8 * ((1932 * (a6 - 1 == v8)) ^ (a8 - 533))))();
}

void sub_1000342AC()
{
}

uint64_t sub_1000342B8()
{
  int v4 = ((v2 + 1547) ^ 0xA6E63665) + v1;
  BOOL v5 = v4 < -1901858982;
  BOOL v6 = v3 - 1494863711 < v4;
  if (v3 - 1494863711 < -1901858982 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((v6 * ((v2 ^ 0x5CF) - 1286)) ^ v2)))();
}

void sub_100034398(_DWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v11 = (char *)a1 + v6;
  unsigned int v12 = v7 + v5;
  v11[4] = v10;
  int v13 = v9 + v5;
  *a1 = v9 + v5 - 241414083;
  uint64_t v14 = a1 + 1;
  *((unsigned char *)v14 + v12) = v8;
  *((unsigned char *)v14 + ((v4 + a4 + 1755927158 - 431) ^ 0x4D179FD7u) + v5) = 62;
  *((unsigned char *)v14 + (v13 - 874675926)) = 76;
  *((unsigned char *)v14 + (v13 - 874675925)) = 15;
  JUMPOUT(0x10003F1C8);
}

uint64_t sub_100034410(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,char a37)
{
  if (a34 == 2) {
    return (*(uint64_t (**)(void))(v37 + 8
  }
                                      * ((82 * (LODWORD(STACK[0x348]) != ((a2 + 1567) ^ 0x4F9B0DAC))) ^ (a2 + 988))))();
  if (a34 == 1) {
    return (*(uint64_t (**)(void))(v37
  }
                                + 8 * ((116 * (LODWORD(STACK[0x348]) == ((a2 + 988) ^ 0x4F9B0FE9))) ^ (a2 + 1515))))();
  uint64_t v39 = a2 ^ 0x3D6u;
  unint64_t v40 = ((unint64_t)&a37 ^ 0x7FADF775ADFBECC0 ^ v39)
      + ((2 * (void)&a37) & 0xFF5BEEEB5BF7DE50)
      - 0x4809200420402A59;
  LOBYTE(STACK[0x347]) = (v40 + (a2 ^ 0xD6) + 88) * ((v40 + 48) ^ 0xBA);
  return (*(uint64_t (**)(void))(v37 + 8 * (int)v39))();
}

uint64_t sub_100034574@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W6>, int a4@<W7>, uint64_t a5@<X8>)
{
  return (*(uint64_t (**)(void))(a5 + 8 * (((v5 + (((v6 ^ a1) * a2) ^ a3) == 32) * a4) ^ v6)))();
}

uint64_t sub_1000345D4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((59 * (v2 != v1)) ^ v0)))();
}

uint64_t sub_100034614(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                                           + 8
                                           * ((((((((a4 - 42) | 0x205) - 1380670640) & 0x524B5FF4) - 919) ^ (((a4 - 42) | 0x205) - 51))
                                             * (v4 < 0x20)) ^ ((a4 - 42) | 0x205))))(0);
}

uint64_t sub_100034664@<X0>(int a1@<W8>)
{
  if (v1 == ((a1 + 1593310891) & 0xF34CFFEF ^ 0x4D1B94AE)) {
    int v3 = -526372775;
  }
  else {
    int v3 = v1;
  }
  return v3 ^ v2;
}

uint64_t sub_1000346D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11)
{
  return (*(uint64_t (**)(void))(v13 + 8 * ((((v11 - 285) ^ 0xB55) * (a11 < v12)) ^ v11)))();
}

uint64_t sub_100034754(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8 * ((7 * (a8 + ((a7 + 274) ^ (a3 + 283) ^ ((a7 - 466) | 0x3C9u)) > 0xFFFFFFEF)) ^ a7)))();
}

uint64_t sub_100034798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * (int)(((*(_DWORD *)(v13 + 72) == a3) * ((v10 ^ 0x210 ^ (a6 + 1478) ^ (v12 - 205)) + (v10 ^ 0x210) - 1321)) ^ v10 ^ 0x210)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1000347E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8
                                   * (((((v7 == a5) ^ (v5 + 1)) & 1) * ((v5 - 486) ^ 0x3B4)) | v5)))();
}

uint64_t sub_10003481C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a15 = v17 - 460628867 * (((&a13 | 0x8BDC4BD5) + (~&a13 | 0x7423B42A)) ^ 0xC74AC9A9) + 684;
  a13 = &STACK[0x4313E3591B4C281];
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v17 ^ 0xBD6)))(&a13);
  BOOL v19 = a14 == v15 + v17 + v17 + 885 - 2337;
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * (((16 * v19) | (32 * v19)) ^ v17)))(v18);
}

void sub_1000348C4(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x72E93EC0CCAF5742) = (*(_DWORD *)(a1 - 0x72E93EC0CCAF5742) ^ 0x43B50625)
                                         + 1135937061
                                         - ((2 * (*(_DWORD *)(a1 - 0x72E93EC0CCAF5742) ^ 0x43B50625) + 2) & 0x876A0C4A)
                                         + 1;
}

uint64_t sub_10003490C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((((((((v2 - 520898750) & 0x1F0C47DF) - 1713) & (2 * (v3 + 3)))
                                                 + ((v3 + 3) & 0x7F ^ 0x7D7D6D7)) & 0x7D7D7FC) == 131585752)
                                              * ((v2 + 37) ^ 0xD1C)) ^ (v2 - 1523))))(a1);
}

uint64_t sub_100034984@<X0>(uint64_t a1@<X3>, unsigned int a2@<W8>)
{
  unint64_t v4 = ((57 * (v2 ^ 0x2ECu)) ^ (unint64_t)(a1 + 156)) + a2;
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((v4 - a2 + 1335000053 > 7) * (v2 ^ 0x2FF)) ^ v2)))();
}

uint64_t sub_1000349E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v15 = a3 + v14 + v13 - a7 + ((a8 + 979) ^ (v11 - 1315));
  *(void *)(v9 - 7 + v15) = *(void *)(v10 - 7 + v15);
  return (*(uint64_t (**)(void))(v8 + 8 * ((1724 * (a7 - (v12 & 0xFFFFFFF8) == -8)) ^ a8)))();
}

uint64_t sub_100034A44@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + v4 + ((v3 - 1693) | 0x190)) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * ((3818 * ((a1 & 0x38) == 8)) ^ v3)))();
}

uint64_t sub_100034A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v17 - 120) = v15
                         + 1374699841 * ((2 * ((v17 - 136) & 0xB04ADC0) - (v17 - 136) + 1962627641) ^ 0x190F4A30)
                         + 922;
  *(void *)(v17 - 136) = a14;
  *(void *)(v17 - 128) = v16;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0xB6B)))(v17 - 136);
  int v18 = 1759421093 * (((v17 - 136) & 0x61219070 | ~((v17 - 136) | 0x61219070)) ^ 0x2DA3DFDB);
  *(_DWORD *)(v17 - 120) = v15 - v18 + 249;
  *(void *)(v17 - 128) = a13;
  *(_DWORD *)(v17 - 136) = 427795158 - v18;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 + 1436)))(v17 - 136);
  *(_DWORD *)(v17 - 120) = v15
                         + 1178560073
                         * ((((v17 - 136) | 0xECCF7CEC) - (v17 - 136) + ((v17 - 136) & 0x13308310)) ^ 0x565B048E)
                         + 836;
  *(void *)(v17 - 112) = a13;
  *(void *)(v17 - 128) = a14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 1392)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v17 - 136) > (v15 ^ 0x71u) + 1263232858)
                                              * (((v15 - 828) | 0x40B) - 1059)) ^ (v15 - 743))))(v19);
}

uint64_t sub_100034A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  return (*(uint64_t (**)(void))(v12 + 8 * (((a12 - 1875884972 < (v13 ^ 0xCE3u) + 2147481426) * (v13 ^ 0x45F)) ^ v13)))();
}

uint64_t sub_100034D2C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v0 & (2 * (*(unsigned __int8 *)(v3 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 6) - 1) ^ v1) == v1)
                                * ((v2 - 199) ^ 0x63B)) ^ v2)))();
}

uint64_t sub_100034D68@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((517 * (a2 == v4)) ^ (v3 + a1 + 780))))();
}

uint64_t sub_100034DA0@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W5>, uint64_t a6@<X6>, int a7@<W8>)
{
  int v17 = (a5 - 210) ^ (v16 + 16) ^ a1;
  int v18 = (v9 ^ v16)
      + a7
      + *(_DWORD *)(a3 + 4 * (a6 + v13))
      + (((v7 ^ 0x242EA431 | v17) + v16 - (v14 & (2 * (v7 ^ 0x242EA431 | v17)))) ^ v8)
      + (*(_DWORD *)(v11 + 4 * (*(unsigned char *)(a2 + a6 + v13) - 72)) ^ v10);
  unsigned int v19 = (v18 + v16 - (v14 & (2 * v18))) ^ v16;
  unsigned int v20 = ((v19 << (*(unsigned char *)(a4 + a6 + v13) - 76)) | (v19 >> (76 - *(unsigned char *)(a4 + a6 + v13)))) + v17;
  return (*(uint64_t (**)(void))(v12 + 8 * ((391 * (a6 + 1 == v15 + 64)) ^ a5)))(v20 + v16 - (v14 & (2 * v20)));
}

uint64_t sub_100034E70@<X0>(int a1@<W5>, int a2@<W8>)
{
  *(unsigned char *)(v7 - 220 + (a2 + v2)) = *(unsigned char *)(v3 + v5 - 463788147)
                                                 + ~(((v4 + 84) ^ 0xFD) & (2 * *(unsigned char *)(v3 + v5 - 463788147)))
                                                 - 20;
  return (*(uint64_t (**)(void))(v6 + 8 * ((4049 * ((a1 + a2 + 1) > 0x3F)) ^ v4)))();
}

uint64_t sub_100034ED8@<X0>(int a1@<W8>)
{
  v7.i64[0] = 0xD6D6D6D6D6D6D6D6;
  v7.i64[1] = 0xD6D6D6D6D6D6D6D6;
  v8.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v8.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  *(int8x16_t *)(v4 + (a1 + v1)) = vaddq_s8(vsubq_s8(*v6, vandq_s8(vaddq_s8(*v6, *v6), v7)), v8);
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1557 * (((v2 + 1011635654) & 0xC3B3AB7F ^ 0x367) == ((v3 + 1) & 0x1FFFFFFF0))) ^ v2)))();
}

uint64_t sub_100034F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v30 = 77 * (v24 ^ 0x212);
  *(_DWORD *)(v29 - 144) = (v24 - 289) ^ (1225351577
                                        * (((((v29 - 144) | 0xB1DAADBC) ^ 0xFFFFFFFE) - (~(v29 - 144) | 0x4E255243)) ^ 0x6DBF8A55));
  *(void *)(v29 - 120) = a24;
  *(void *)(v29 - 112) = v25;
  *(void *)(v29 - 136) = a23;
  *(void *)(v29 - 128) = a24;
  (*(void (**)(uint64_t))(v27 + 8 * (v24 + 1776)))(v29 - 144);
  *(void *)(v29 - 104) = a24;
  *(_DWORD *)(v29 - 112) = v24
                         + 1224239923 * ((((v29 - 144) | 0x8AC8CA03) + (~(v29 - 144) | 0x753735FC)) ^ 0x787B37D5)
                         + 625;
  *(void *)(v29 - 144) = v25;
  *(void *)(v29 - 136) = a17;
  *(void *)(v29 - 128) = a24;
  *(void *)(v29 - 120) = a23;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v24 + 1763)))(v29 - 144);
  BOOL v32 = v28 + v26 + v30 - 233 + 2 >= (((v30 + 362) | 0x104) ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((2 * v32) | (8 * v32) | (v30 + 974))))(v31);
}

uint64_t sub_100035084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v8
                                                                     + 8
                                                                     * (((((a6 - 1597) | 0x560) ^ 0x5AC)
                                                                       * ((v6 & 0x18) == 0)) ^ a6)))(a1, a2, (v7 - a2), (a6 - 801));
}

uint64_t sub_1000350BC@<X0>(unint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W4>, uint64_t a4@<X8>)
{
  *(unsigned char *)(v6 - 220 + a4 + a2) = -21;
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((118 * (a4 + 1 + a2 < ((133 * (v4 ^ 0xACu) - a3) ^ a1))) ^ (133 * (v4 ^ 0xAC)))))();
}

uint64_t sub_10003510C@<X0>(unsigned int a1@<W0>, int a2@<W3>, int a3@<W4>, void *a4@<X6>, int a5@<W7>, unsigned int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  unint64_t v36 = (*(_DWORD *)(a26 + 4 * (a2 + 1 + a3)) ^ v26)
      + HIDWORD(v27)
      + a1 * (unint64_t)(*(_DWORD *)(*a4 + 4 * (a2 + 1 + a3)) ^ v26);
  *(_DWORD *)(a26 + 4 * (a2 + a3)) = v36 + ((7 * (v35 ^ v31)) ^ (v26 + 323)) - (v28 & (2 * v36));
  if (a6 > v30 != a2 + v32 < v33) {
    BOOL v37 = a6 > v30;
  }
  else {
    BOOL v37 = a2 + v32 < a5;
  }
  return (*(uint64_t (**)(void))(v29 + 8 * ((v37 * v34) ^ v35)))();
}

uint64_t sub_10003519C()
{
  uint64_t v11 = &STACK[0x8DE5192BDC530E2];
  uint64_t v12 = v6;
  unsigned int v9 = (v2 + 600) ^ (1374699841 * (&v9 ^ 0x6DF41809));
  (*(void (**)(unsigned int *))(v1 + 8 * (v2 + 1931)))(&v9);
  uint64_t v11 = v6;
  unsigned int v9 = (v2 + 1085) ^ (1755732067 * (((&v9 | 0x68EC43F5) - (&v9 & 0x68EC43F5)) ^ 0xB62AFE2E));
  (*(void (**)(unsigned int *))(v1 + 8 * (v2 ^ 0x9B0)))(&v9);
  if (v12 == v0 + v2 + 958 - 1301) {
    int v4 = v7;
  }
  else {
    int v4 = (int)v12;
  }
  unsigned int v10 = v2 + ((&v9 & 0x85FB557C | ~(&v9 | 0x85FB557C)) ^ 0x70F0A4AC) * v3 + 1000;
  uint64_t v11 = v6;
  (*(void (**)(unsigned int *))(v1 + 8 * (v2 + 1950)))(&v9);
  unsigned int v10 = v2 + 958 + ((2 * (&v9 & 0x2037FE78) - &v9 + 1606943108) ^ 0x553C0FAB) * v3 + 42;
  uint64_t v11 = v8;
  (*(void (**)(unsigned int *))(v1 + 8 * (v2 + 1950)))(&v9);
  return v4 ^ v0;
}

void sub_100035358()
{
  if (v0 == 2082287839) {
    int v1 = 526347143;
  }
  else {
    int v1 = -526372769;
  }
  *(_DWORD *)(v2 + 40) = v1;
}

uint64_t sub_1000353BC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 + 210) | 0x140) + ((v2 - 1428) | 0x21) - 1969) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_10003540C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  return (*(uint64_t (**)(void))(v15 + 8 * ((2819 * (a14 == (v14 ^ (v16 + 1060)) - 1155802003)) ^ v14)))();
}

uint64_t sub_100035444@<X0>(int a1@<W8>)
{
  unint64_t v4 = 1755732067 * ((v3 - 160 - 2 * ((v3 - 160) & 0x46E7E25FCDDF0095) + 0x46E7E25FCDDF0095) ^ 0x9B4C45601319BD4ELL);
  *(_DWORD *)(v3 - 120) = (a1 - 1689051565) ^ (1755732067
                                             * ((v3 - 160 - 2 * ((v3 - 160) & 0xCDDF0095) - 841023339) ^ 0x1319BD4E));
  *(_DWORD *)(v3 - 156) = (1755732067 * ((v3 - 160 - 2 * ((v3 - 160) & 0xCDDF0095) - 841023339) ^ 0x1319BD4E)) ^ (a1 - 1072502696) ^ 0x41;
  *(_DWORD *)(v3 - 152) = ((a1 - 1072502696) ^ 0x38)
                        + 1755732067 * ((v3 - 160 - 2 * ((v3 - 160) & 0xCDDF0095) - 841023339) ^ 0x1319BD4E);
  *(void *)(v3 - 136) = v4 + 1777359037;
  *(void *)(v3 - 128) = v4 + v1;
  *(_DWORD *)(v3 - 148) = 1755732067 * ((v3 - 160 - 2 * ((v3 - 160) & 0xCDDF0095) - 841023339) ^ 0x1319BD4E);
  *(_DWORD *)(v3 - 144) = a1
                        - 1072502696
                        - 1755732067 * ((v3 - 160 - 2 * ((v3 - 160) & 0xCDDF0095) - 841023339) ^ 0x1319BD4E);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 2282)))(v3 - 160);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 160)))(v5);
}

uint64_t sub_100035508(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((v3 - a1 < (unint64_t)(a3 ^ (a2 + 1409)) - 1831442953)
                                * (((a3 - 887) | 0x45B) - 1137)) ^ a3)))();
}

uint64_t sub_100035550@<X0>(int a1@<W2>, int a2@<W5>, uint64_t a3@<X8>)
{
  unsigned int v9 = v7 + v8 + a1;
  uint64_t v10 = v4 + v9;
  long long v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = a3 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((4 * ((((v6 & 0xFFFFFFE0) == 32) ^ (v5 + a2 - 1)) & 1)) & 0xF7 | (8 * ((((v6 & 0xFFFFFFE0) == 32) ^ (v5 + a2 - 1)) & 1)) | (v5 + a2 + 1928))))();
}

void sub_1000355FC()
{
}

uint64_t sub_100035604(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((222 * (v1 + 1 != v3 + 44)) ^ a1)))();
}

uint64_t sub_1000356C0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v3 ^ 0xFFFBCCB6) + 1970274266 + (v1 & 0xFFF7996C) - 1969998993 < v0 + 2147483309)
                                * (107 * ((v0 + 615) ^ 0x3B4) - 1269)) ^ (v0 + 615))))();
}

uint64_t sub_100035740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20,uint64_t a21,unsigned int a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_DWORD *a29)
{
  unint64_t v34 = (*a29 ^ (v29 + ((v33 + 292) | 2) - 834))
      + a22 * (unint64_t)(*(_DWORD *)(*a23 + 4 * (v30 - 456288104)) ^ v29);
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31
                                                                                                  + 8 * (v33 ^ (91 * (v32 <= a20)))))(v34 + 0x25362CBF80472F72 - ((2 * v34) & 0x4A6C597F008E5EE4), 0x25362CBF80472F72, 555533943, a4, a5, 40020363);
}

void sub_100035770()
{
}

void sub_100035788()
{
}

uint64_t sub_100035790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21)
{
  a21 = (v21 - 59) ^ (1225351577
                    * ((2 * (&a17 & 0x486B7D40) - &a17 + 932479672) ^ 0x140E5AAE));
  a18 = a12;
  a19 = v24;
  a20 = v26;
  (*(void (**)(unsigned int *))(v25 + 8 * (v21 + 1939)))(&a17);
  a17 = (v21 + 601) ^ ((((&a17 | 0x5275727) + (~&a17 | 0xFAD8A8D8)) ^ 0x68D34F2F) * v23);
  a18 = v22;
  a19 = a12;
  (*(void (**)(unsigned int *))(v25 + 8 * (v21 ^ 0x9B4)))(&a17);
  a18 = a12;
  a17 = (v21 + 1086) ^ (1755732067
                      * (((&a17 | 0xA2C01B31) - &a17 + (&a17 & 0x5D3FE4C8)) ^ 0x7C06A6EA));
  uint64_t v27 = (*(uint64_t (**)(unsigned int *))(v25 + 8 * (v21 + 1937)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * (((a19 == 526347143) * (((v21 + 286) | 0x109) ^ 0x46A)) ^ v21)))(v27);
}

uint64_t sub_1000358F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, uint64_t a18, unsigned int a19, unsigned int a20,unsigned int a21,int a22)
{
  unsigned int v24 = 460628867 * ((&a17 & 0x289C561E | ~(&a17 | 0x289C561E)) ^ 0x9BF52B9C);
  a21 = 1646191814 - v24;
  a19 = v24 + 551621528;
  a20 = v24 + v22 - 2024874199;
  a17 = &STACK[0x38223619C320A43];
  a18 = a13;
  uint64_t v25 = (*(uint64_t (**)(unint64_t **))(v23 + 8 * (v22 ^ 0xCA7u)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8 * (((a22 == (v22 ^ 0x6F3) + 526346456) * ((v22 - 491) ^ 0x2AA)) ^ v22)))(v25);
}

uint64_t sub_1000359D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,char a45)
{
  *(&a45 + v46) = *(unsigned char *)(v49 + (v45 + a5))
                - ((*(unsigned char *)(v49 + (v45 + a5)) << (((v50 - 94) | 1) - 28)) & a7)
                - 21;
  return (*(uint64_t (**)(void))(v48 + 8 * (((v46 == 63) * v47) ^ v50)))();
}

uint64_t sub_100035A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((((a5 + 234883343) | 0x800084C0) ^ (v5 + 1903))
                                     * ((unint64_t)(v6 - a1) < 0x20)) ^ a5)))();
}

uint64_t sub_100035A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(_DWORD *)(v25 - 112) = v20 + (((~(v25 - 128) & 0x98E6A2A) - (~(v25 - 128) | 0x98E6A2B)) ^ 0xB31A1249) * v24 - 309;
  *(void *)(v25 - 120) = a20;
  *(void *)(v25 - 104) = v22;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v20 + 247)))(v25 - 128);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((4062
                                              * (((v20 + 40) ^ (*(_DWORD *)(v25 - 128) > (v23 + 1))) & 1)) ^ v20)))(v26);
}

uint64_t sub_100035B08()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1498 * (v0 < ((v2 - 657) ^ 0x8DuLL))) ^ v2)))();
}

uint64_t sub_100035B34()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 - 758251909) ^ 0x7F76F865) + ((v2 - 758251909) & 0x7F76FF7F)) * (v1 == v0)) ^ v2)))();
}

uint64_t sub_100035B88@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v7 + v3)) = *(unsigned char *)(v2 + (v7 + v3));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v7 - 1 == v4) * v5) ^ v6)))(0);
}

void sub_100035BB8()
{
}

uint64_t sub_100035BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11)
{
  *(unsigned char *)(v11 + (v14 + v12)) = *(unsigned char *)(a11 + (v14 + v12)) ^ (v17 - 125);
  return (*(uint64_t (**)(void))(v16 + 8 * (((v14 + 1 + v12 < (a10 ^ v15)) * v13) | v17)))();
}

uint64_t sub_100035C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)(((((v7 == a6) ^ (v8 - 70)) & 1)
                                     * ((v8 + 1081474687) & 0xBF89FFF3 ^ 0x30E)) ^ v8)))();
}

void sub_100035C64()
{
}

uint64_t sub_100035C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v24 = v21 + v20 + 111643486;
  int v25 = v24 + 1460;
  if ((v24 + 1460) <= 0x40) {
    int v25 = 64;
  }
  BOOL v26 = __CFADD__(v24 + a20 + 690, v22 + v25);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((v26 * ((a20 + 293) ^ 0x43B)) ^ (a20 - 477))))(1922694427);
}

uint64_t sub_100035CF4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v22 = ((v21 - 144) ^ 0x6DF41809) * v20;
  *(_DWORD *)(v21 - 144) = (v19 + 867) ^ v22;
  *(_DWORD *)(v21 - 128) = a1 - v22;
  *(void *)(v21 - 136) = a18;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v19 ^ 0xAA1)))(v21 - 144);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((15 * (*(_DWORD *)(v21 - 140) == (((v19 ^ 0x2A5) + 1832) ^ 0x5F2AE6F))) ^ v19)))(v23);
}

uint64_t sub_100035D84()
{
  *(_DWORD *)(v6 - 112) = v0 + ((((v6 - 128) | 0x5D71B4EB) + (~(v6 - 128) | 0xA28E4B14)) ^ 0xE7E5CC88) * v5 + 1081;
  *(void *)(v6 - 104) = v2;
  *(void *)(v6 - 120) = v3;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1637)))(v6 - 128);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((63 * (*(_DWORD *)(v6 - 128) > ((v0 + 686) ^ (v4 + 1076)) + (v0 ^ 0xF5u))) ^ v0)))(v7);
}

uint64_t sub_100035E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v27 = 1759421093 * ((2 * ((v26 - 128) & 0x68D4BEE0) - (v26 - 128) - 1758772961) ^ 0x2456F14B);
  *(_DWORD *)(v26 - 128) = v23 - 1109 - v27 + v25 - 771999233;
  *(_DWORD *)(v26 - 112) = v23 - v27 - 942;
  *(void *)(v26 - 120) = v22;
  (*(void (**)(uint64_t))(v20 + 8 * (v23 + 245)))(v26 - 128);
  *(void *)(v26 - 120) = a20;
  *(_DWORD *)(v26 - 112) = v23
                         - 1109
                         + (((((v26 - 128) ^ 0x10209C20 | 0x2ACF2346) ^ 0xFFFFFFFE)
                           - ((v26 - 128) ^ 0x20452046 | 0xD530DCB9)) ^ 0x750E3BFB)
                         * v24
                         + 754;
  *(void *)(v26 - 104) = v21;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v23 + 201)))(v26 - 128);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * ((2008
                                              * (*(_DWORD *)(v26 - 128) + ((v23 - 964) ^ 0xB4B491FD ^ (v23 - 1789)) < 0xFA79F799)) ^ (v23 - 1109))))(v28);
}

uint64_t sub_100035F60()
{
  BOOL v5 = v1 - 1930219689 > 410274944 || v1 - 1930219689 < (int)((v0 ^ 0x98744C44) + v3);
  return (*(uint64_t (**)(void))(v2 + 8 * ((v5 * (((v0 + 1360) | 0x42) + 10)) ^ v0)))();
}

uint64_t sub_100035FB4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((a1 + a1 - 296 - 594) * (v2 == v1)) ^ a1)))(3299963166);
}

uint64_t sub_100035FEC()
{
  return v0();
}

uint64_t sub_100036004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44)
{
  int v46 = (2 * v44) ^ 0xD46;
  uint64_t v47 = (*(uint64_t (**)(uint64_t))(v45 + 8 * (v44 + 1015)))(16);
  uint64_t v48 = (uint64_t *)*(&off_10007DD80 + v44 - 1206);
  uint64_t *v48 = v47;
  (*(void (**)(void))(v45 + 8 * (v44 + 946)))();
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(v45 + 8 * (v44 + 1015)))(8);
  uint64_t v50 = (uint64_t)*(&off_10007DD80 + (v44 ^ 0x524));
  *(void *)(v50 - 4) = v49;
  *(void *)uint64_t v49 = 0xBDBDBDBDBDBDBDBDLL;
  uint64_t v51 = (uint64_t)*(&off_10007DD80 + v44 - 1136);
  *(_DWORD *)(v51 + 4) = 0;
  int v68 = *(&off_10007DD80 + v44 - 1261);
  _DWORD *v68 = 0;
  uint64_t v52 = (unsigned char *)*v48;
  uint64_t v53 = *(unsigned char **)(v50 - 4);
  v53[6] = 26;
  *uint64_t v52 = -77;
  v53[4] = -34;
  uint64_t v54 = *(&off_10007DD80 + (v44 ^ 0x5AB));
  v54[2] = 94;
  v54[9] = 113;
  *(unsigned char *)(v51 + 29) = 68;
  v54[14] = -87;
  v52[4] = 73;
  v54[4] = 0;
  *(unsigned char *)(v51 + 28) = 83;
  *(unsigned char *)*(&off_10007DD80 + (v44 ^ 0x53C)) = -113;
  v52[1] = 80;
  *(unsigned char *)*(&off_10007DD80 + (v44 ^ 0x595)) = 88;
  v54[13] = 62;
  *(unsigned char *)*(&off_10007DD80 + (v44 ^ 0x536)) = 1;
  v52[2] = -44;
  *(unsigned char *)*(&off_10007DD80 + (v44 ^ 0x580)) = 51;
  void v53[2] = 80;
  v52[6] = -11;
  *(unsigned char *)*(&off_10007DD80 + (v44 ^ 0x541)) = 25;
  *(unsigned char *)*(&off_10007DD80 + v44 - 1255) = 39;
  v52[5] = -22;
  v52[3] = -15;
  v54[8] = 119;
  *(unsigned char *)(v51 + 14) = -52;
  v54[15] = -44;
  int v55 = *(&off_10007DD80 + v44 - 1140);
  *int v55 = -109;
  v52[13] = 99;
  uint64_t v56 = *(&off_10007DD80 + (v44 ^ 0x52A));
  *uint64_t v56 = 119;
  v53[7] = -80;
  *uint64_t v53 = -122;
  v52[8] = 34;
  v54[7] = -106;
  v52[11] = 54;
  *(unsigned char *)(v51 + 15) = 3;
  v53[5] = -5;
  v53[1] = 73;
  *(unsigned char *)(v51 + 16) = -36;
  *(unsigned char *)uint64_t v51 = 23;
  v53[3] = 59;
  uint64_t v57 = (unsigned char *)*v48;
  v57[10] = 45;
  v57[15] = -87;
  *uint64_t v54 = 53;
  v54[11] = -99;
  *(unsigned char *)(v51 + 25) = -92;
  v54[5] = -56;
  v54[10] = 49;
  *(unsigned char *)(v51 + 27) = 52;
  *(v54 - 4) = -32;
  unsigned __int8 v58 = v54 - 4;
  *(_WORD *)(v51 + 10) = -3774;
  *(unsigned char *)(v51 + 22) = -121;
  *(unsigned char *)(v51 + 20) = 77;
  *(unsigned char *)(v51 + 26) = 113;
  v57[9] = 31;
  char v54[16] = 30;
  v54[6] = -31;
  *(unsigned char *)(v51 + 8) = -85;
  v54[1] = -56;
  v58[2] = 120;
  *(unsigned char *)(v51 + 2) = 34;
  v54[12] = 28;
  v57[12] = -86;
  v58[3] = -29;
  v57[7] = -90;
  v57[14] = -33;
  *(unsigned char *)(v51 + 3) = -98;
  *(unsigned char *)(v51 + 21) = -105;
  v54[3] = 49;
  *(unsigned char *)(v51 + 24) = -119;
  *(unsigned char *)(v51 + 30) = 58;
  *(unsigned char *)(v51 + 12) = 73;
  *(unsigned char *)(v51 + 1) = -15;
  v58[1] = 89;
  uint64_t v59 = (2 * v44) ^ 0x6Au ^ *(unsigned char *)(v51 + 16);
  *(unsigned char *)(v51 + 19) = 120;
  *(unsigned char *)(v51 + 13) = 69;
  *(_WORD *)(v51 + 17) = -4168;
  *(unsigned char *)(v51 + 9) = -105;
  *(unsigned char *)(v51 + 23) = 79;
  uint64_t v60 = (uint64_t)*(&off_10007DD80 + (v44 ^ 0x54F));
  uint64_t v61 = (unsigned char *)*v48;
  LODWORD(v49) = *(unsigned __int8 *)(v60 + 797 + ((*(unsigned char *)(*v48 + 8) - 36) ^ 0x77));
  uint64_t v62 = *(unsigned __int8 **)(v50 - 4);
  unint64_t v63 = (((unint64_t)*(unsigned __int8 *)(v51 + 14) << 40) | ((unint64_t)(((*(unsigned char *)(v60 + 6 + v59) ^ 0x94) >> 6) | (4 * (*(unsigned char *)(v60 + 6 + v59) ^ 0x94))) << 32) | ((unint64_t)*(unsigned __int8 *)(v51 + 15) << 24) | (unsigned __int16)(v62[5] << 8) | (v54[15] ^ 0x11) & 0xFFFFFFFFFF00FFFFLL | ((unint64_t)(((((v49 >> 6) | (4 * v49)) ^ 0x7F) >> 2) | ((((v49 >> 6) | (4 * v49)) ^ 0x7F) << 6)) << 16)) ^ ((unint64_t)v62[1] << 48);
  int v69 = v55;
  LODWORD(v55) = *(unsigned __int8 *)(v60 + 797 + (((v54[13] ^ 0x11) - 36) ^ 0x77));
  unint64_t v64 = *(unsigned __int8 *)(*v48 + 2) | ((unint64_t)v62[2] << 8);
  HIDWORD(v65) = ~(v55 >> 6);
  LODWORD(v65) = v55 << 26;
  unint64_t v66 = (((unint64_t)v62[3] << 56) ^ (0xFF00000000000000 * v62[3]) ^ (v63
                                                                             - (v63 ^ ((unint64_t)v62[3] << 56))))
      + v63;
  LODWORD(a19) = ((2 * *(_DWORD *)(v51 + 4)) & 0xFF3F73F6) + (*(_DWORD *)(v51 + 4) ^ 0xFF9FB9FB);
  HIDWORD(a15) = a44;
  return (*(uint64_t (**)(void, unint64_t, uint64_t, void, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, unsigned char *, _DWORD *, uint64_t, uint64_t, unsigned char *, unsigned char *))(v45 + 8 * ((203 * ((((v46 ^ 0x4FA) + 707) ^ v46 ^ 0x131) == 0)) ^ v46)))(v46 ^ 0x4FAu, v66 - ((2 * v66) & 0x60E3DF325246AEB4), 1274, v46 ^ 0x131u, 305, 203, (((unint64_t)(v54[4] ^ 0x11111111u) << 56) | ((unint64_t)*(unsigned __int8 *)(*v48 + 3) << 48) | ((unint64_t)*(unsigned __int8 *)(v51 + 28) << 40) | ((unint64_t)*v56 << 24)) ^ ((((unint64_t)v61[13] << 16) ^ (-65536 * v61[13]) ^ (v64 - (v64 & 0xFFFFFFFFFF00FFFFLL | ((unint64_t)v61[13] << 16)))) + v64) ^ ((unint64_t)((v65 >> 26) ^ 0x1Fu) << 32) ^ 0x714744CB0F8A54FBLL, v66 - ((2 * v66) & 0x60E3DF325246AEB4) - 0x4F8E1066D6DCA8A6, a9, a10, a11, a12, a13, a14, a15, (a19 + 6309381), v60 + 541, a18, a19,
           a20,
           v60 + 797,
           a22,
           v60 + 278,
           a24,
           v62,
           a26,
           a27,
           *v48,
           v54 - 4,
           v68,
           v51,
           v60 + 6,
           v56,
           v69);
}

uint64_t sub_1000368C8(uint64_t a1)
{
  uint64_t v8 = v4 + ((v5 + 153422200) & 0x53B0777E ^ (v2 + 1272));
  long long v9 = *(_OWORD *)(v1 + v8 - 15);
  long long v10 = *(_OWORD *)(v1 + v8 - 31);
  uint64_t v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * ((1517 * ((v3 & 0xFFFFFFE0) == 32)) ^ (v6 + v5 + 697))))();
}

uint64_t sub_100036938(uint64_t a1, int a2)
{
  return sub_1000545D0(a1, a2);
}

uint64_t sub_100036954@<X0>(uint64_t a1@<X2>, int a2@<W5>, uint64_t a3@<X8>)
{
  *((unsigned char *)&STACK[0x2AC] + a3 + a1) = -21;
  return (*(uint64_t (**)(void))(v4 + 8 * ((4066 * ((unint64_t)(a3 + 1 + a1) < 0x40)) ^ (a2 + v3 + 1981))))();
}

void sub_100036998()
{
}

void sub_1000369A4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned char *a26,uint64_t a27,uint64_t a28,unsigned char *a29,unsigned char *a30,uint64_t a31,uint64_t a32,uint64_t a33,unsigned char *a34,unsigned char *a35,unsigned char *a36,uint64_t a37,unsigned char *a38,unsigned char *a39,unsigned char *a40,unsigned char *a41,unsigned char *a42)
{
  uint64_t v45 = ((a8 ^ 0x2121AE809F3E1C16)
       - 0x37C9A25EDA4E362ELL
       - 2 * ((a8 ^ 0x2121AE809F3E1C16) & 0x48365DA125B1C9F2 ^ a8 & 0x20)) ^ v43;
  unint64_t v46 = v42 ^ (((a16 - 545948949) | (unint64_t)(a17 << 32))
             + 0x6F1561B1D4B0E6B1
             - ((2 * ((a16 - 545948949) | (unint64_t)(a17 << 32))) & 0xDE2AC363A961CD62));
  unint64_t v47 = v46 ^ 0xA173397C065C8DEALL;
  uint64_t v48 = v46 ^ 0x5E8CC683F9A37215;
  unint64_t v49 = ((v46 ^ 0x5E8CC683F9A37215)
       + 0x714744CB0F8A54FBLL
       - ((2 * (v46 ^ 0x5E8CC683F9A37215)) & 0xE28E89961F14A9F6)) ^ a7;
  uint64_t v50 = v49 ^ 0x629A61E2FE92CDE4;
  unint64_t v51 = v49 ^ 0x9D659E1D016D321BLL;
  uint64_t v52 = ((a4 - 1128) - 0x754484F8A3175885) ^ v45;
  unint64_t v53 = v52 ^ v50 & v47;
  unint64_t v54 = v51 & (v44 ^ 0xB67B972B776DAC61) ^ v48 ^ v53;
  *((void *)&v55 + 1) = v54 ^ 0xABEF87C8808CCB5;
  *(void *)&long long v55 = v54 ^ 0x8000000000000000;
  uint64_t v56 = v54 ^ __ROR8__(v54, 39) ^ (v55 >> 61);
  uint64_t v57 = (v45 ^ 0x754484F8A3175691) & v48;
  unint64_t v58 = a8 ^ 0x2121AE809F3E1C16 ^ v44 ^ 0xB67B972B776DAC61;
  unint64_t v59 = v57 ^ v58;
  uint64_t v60 = (v57 ^ v58) & 0x200000000;
  BOOL v61 = ((v53 ^ 0xF38BFF733C051F6) & v60) == 0;
  uint64_t v62 = v60 | 0x8B10BB0C5451753;
  if (!v61) {
    uint64_t v62 = 0x116217618A8A2EA6 - v62;
  }
  unint64_t v63 = (((v53 ^ 0xF38BFF733C051F6) + v62 - 0x8B10BB0C5451753) ^ (0x8B10BB0C5451753
                                                                    - ((v53 ^ 0xF38BFF733C051F6)
                                                                     + v62)) ^ ((v59 & 0xFFFFFFFDFFFFFFFFLL)
                                                                              - (((v53 ^ 0xF38BFF733C051F6)
                                                                                + v62
                                                                                - 0x8B10BB0C5451753) ^ v59 & 0xFFFFFFFDFFFFFFFFLL)))
      + (v59 & 0xFFFFFFFDFFFFFFFFLL);
  unint64_t v64 = v63 - ((2 * v63) & 0xDDB9BCFC1A5C2C1ALL) - 0x11232181F2D1E9F3;
  *((void *)&v65 + 1) = v64 ^ 0x6160D;
  *(void *)&long long v65 = v64 ^ 0xEEDCDE7E0D280000;
  uint64_t v66 = ((v65 >> 19) - ((2 * (v65 >> 19)) & 0xDDB9BCFC1A5C2C1ALL) - 0x11232181F2D1E9F3) ^ v64;
  uint64_t v67 = (v59 << 23) ^ (v59 >> 7) ^ ((v59 >> 41) | (v59 << 57)) ^ 0x1EC655AF97FB0312;
  unint64_t v68 = (v67 - ((2 * v67) & 0xA3943A782B78C952) - 0x2E35E2C3EA439B57) ^ v59;
  uint64_t v69 = v68 ^ 0x66F33ACB45F3A45BLL;
  unint64_t v70 = v68 ^ 0x66F33ACB45F3A45BLL ^ (v64 << 36) ^ (v66 & 0x88A7E47BC54E7E29 ^ ((v64 >> 28) ^ 0xEEDCDE7E0) & 0xBC54E7E29 | v66 & 0x77581B843AB181D6 ^ ((v64 >> 28) ^ 0xEEDCDE7E0) & 0x43AB181D6);
  unint64_t v71 = v52 & ~v58;
  uint64_t v72 = v50 ^ v58 & (v44 ^ 0x498468D48892539ELL);
  unint64_t v73 = v72 ^ v44 ^ 0xB67B972B776DAC61 ^ v71;
  unint64_t v74 = ((v73 >> 10) ^ (v73 >> 17) | (v73 << 54)) ^ 0xF5EC3F377C10F093;
  unint64_t v75 = v73 ^ 0x47A6B92649E5B850 ^ (v74 - ((2 * v74) & 0xEC72B624C4E1BF0ELL) - 0x9C6A4ED9D8F2079);
  unint64_t v76 = v75 & 0x4C1D4E44A4B3031DLL ^ ((v73 << 47) ^ 0xB3EB800000000000) & 0x4C1D000000000000 | v75 & 0xB3E2B1BB5B4CFCE2 ^ ((v73 << 47) ^ 0xB3EB800000000000) & 0xB3E2800000000000;
  uint64_t v77 = v76 - ((2 * v76) & 0x239597C75237C7E6) - 0x6E35341C56E41C0DLL;
  uint64_t v78 = v77 ^ ((v68 ^ 0x66F33ACB45F3A45BLL)
             - 2 * ((v68 ^ 0x66F33ACB45F3A45BLL) & 0x11CACBE3A91BE3F7 ^ v68 & 4)
             - 0x6E35341C56E41C0DLL);
  unint64_t v79 = v70 ^ 0xD2E160D000000000;
  *((void *)&v65 + 1) = ~v72;
  *(void *)&long long v65 = v72 ^ 0x92CFC162FD513142;
  unint64_t v80 = v72 ^ 0xED70C7C88D0DA858 ^ (0x7FBF06AA705C991BLL - ((v72 << 58) ^ 0xC00000000000000));
  uint64_t v81 = (v80 - ((2 * v80) & 0x228EA9061813359ALL) - 0x6EB8AB7CF3F66533) ^ (v65 >> 1) ^ ((v72 ^ 0x92CFC162FD513166) >> (v59 & 6 ^ 2) >> (v59 & 6 ^ 4)) ^ v56 ^ 0xE2E9BD66EF142B88;
  unint64_t v82 = (v77 ^ 0x6E35341C56E41C0CLL) & v69 ^ v81;
  unint64_t v83 = v82 ^ v77 ^ (((v70 ^ 0xD2E160D000000000) & ~v78)
                   - ((2 * ((v70 ^ 0xD2E160D000000000) & ~v78)) & 0x239597C75237C7E6)
                   - 0x6E35341C56E41C0DLL);
  uint64_t v84 = ((v83 >> 10) & 0x2000000000000 ^ 0x3E7FBFFFFABDFFEFLL) + 2 * ((v83 >> 10) & 0x2000000000000);
  BOOL v61 = ((v84 - 0x3E7FBFFFFABDFFEFLL) & (v83 ^ 0x28E000000000000)) == 0;
  unint64_t v85 = (v70 ^ 0x2D1E9F2FFFFFFFFFLL) & (v56 ^ 0x73AEE9E5E31DB145) ^ v78;
  unint64_t v86 = (v85 >> 41) ^ (v85 >> 7);
  unint64_t v87 = (v86 | (v85 << 57)) ^ (v85 << 23) ^ 0xF774B04353CE1CF4;
  uint64_t v88 = v87 - 2 * (v87 & 0x88E58A0589091FFLL ^ v86 & 3) + 0x88E58A0589091FCLL;
  uint64_t v89 = v84 - 0x301033906021A200;
  uint64_t v90 = 0x4CEF4C6F955A5DDELL - v84;
  if (!v61) {
    uint64_t v89 = v90;
  }
  unint64_t v91 = (v83 >> 10) & 0xFFFDFFFFFFFFFFFFLL ^ 0xA3E966F75234 ^ ((v83 ^ 0x28FA59BDD48D0B6) - 0xE6F8C6F9A9C5DEFLL + v89);
  uint64_t v92 = ((v91 >> 38) & 0x2A35FE4) + (v91 >> 39) - 2 * ((v91 >> 38) & 0x2A35FE4) + 0x61376A34D751AFF2;
  *((void *)&v93 + 1) = v83 ^ 0xD0B6;
  *(void *)&long long v93 = v83 ^ 0x28FA59BDD480000;
  uint64_t v94 = (((v92 << 39) ^ (v83 << 54)) & 0xFFFFFF8000000000 | ((v92 ^ (v91 << 25)) >> 25)) ^ (v93 >> 17);
  unint64_t v95 = (((v77 ^ 0x91CACBE3A91BE3F3) & ~v81)
       - ((2 * ((v77 ^ 0x91CACBE3A91BE3F3) & ~v81)) & 0x228EA9061813359ALL)
       - 0x6EB8AB7CF3F66533) ^ v56 ^ 0xE2E9BD66EF142B88;
  unint64_t v96 = v79 ^ v81 & (v56 ^ 0x8C51161A1CE24EBALL);
  unint64_t v97 = v95 ^ v96;
  unint64_t v98 = (8 * v97) ^ (v97 >> 39) ^ 0xBA3E0AB73A03F932 ^ ((*(unsigned char *)(a24
                                                                                     + ((((v95 ^ v96) >> 57) ^ 0x2B) & 0x70 ^ 0xFE)) ^ (((((v95 ^ v96) >> 57) ^ 0x2B) & 0x70 ^ 0xDE) + ((((v95 ^ v96) >> 57) ^ 0x2B) & 0x70 ^ 0x4B)) ^ 0xA1)
                                                                         - 122);
  unint64_t v99 = v97 ^ 0x8C6B424819C3ADCELL ^ (v98 - ((2 * v98) & 0xB659063DFD2C0630) - 0x24D37CE10169FCE8);
  unint64_t v100 = v99 + ((v97 << 25) ^ 0xADCEAB5DAC000000) - 2 * (v99 & ((v97 << 25) ^ 0xADCEAB5DAC000000));
  unint64_t v101 = v100 - 2 * (v100 & 0x605D66A68E2B3D3ELL ^ v99 & 0xC);
  unint64_t v102 = v88 ^ v85;
  unint64_t v103 = v85 ^ v96;
  *(void *)&long long v93 = __ROR8__(__ROR8__(v103 ^ 0x787EEEF1A7EE72F1, 16) ^ 0x1712D402E105A6CBLL, 48);
  unint64_t v104 = v103 ^ 0xAC7C0FF4012565E3 ^ ((v103 ^ 0xAC7C0FF4012565E3) >> 19) ^ ((unint64_t)v93 >> 28) ^ ((void)v93 << 36) ^ ((void)v93 << 45) ^ v102;
  *((void *)&v93 + 1) = v104 ^ 0xB9;
  *(void *)&long long v93 = v104 ^ 0x92B66458D910E400;
  unint64_t v105 = v101 - 0x1FA2995971D4C2CELL;
  unint64_t v106 = ((v101 - 0x1FA2995971D4C2CELL) ^ 0xE05D66A68E2B3D32) & ((((unint64_t)(v93 >> 9) ^ 0x284B28057C49B8D1) >> (v72 & 0x37 ^ 3) >> (v72 & 0x37 ^ 0x34)) ^ (((unint64_t)(v93 >> 9) ^ 0x284B28057C49B8D1) << 9) ^ 0x69AFF5076C8E5DAFLL);
  unint64_t v107 = v94 ^ 0x8557F9309BB51A6BLL;
  unint64_t v108 = v94 ^ 0x8557F9309BB51A6BLL ^ v102;
  unint64_t v109 = v108 ^ 0x92B66458D910E4B9 ^ v106;
  *((void *)&v93 + 1) = v109 ^ 0x118501E2B14;
  *(void *)&long long v93 = v109 ^ 0x26974A0000000000;
  uint64_t v110 = v109 ^ 0x9907ACCA01258C61 ^ (((v93 >> 41) ^ (v109 << 57) ^ 0x2800000000000000)
                                      - 2
                                      * (((v93 >> 41) ^ (v109 << 57) ^ 0x2800000000000000) & 0x3F90E7D2513BA77FLL ^ (v93 >> 41) & 0xA)
                                      - 0x406F182DAEC4588BLL);
  uint64_t v111 = v110 + ((v109 >> 7) ^ 0x4D2E9630A03C56) - 2 * (v110 & ((v109 >> 7) ^ 0x4D2E9630A03C56));
  unint64_t v112 = (v82 >> 1) ^ (v82 >> 6) ^ (v82 << 58) ^ 0xDE1FAE11AA0A9F1DLL;
  unint64_t v113 = (v112 - ((2 * v112) & 0x89F46C73BDEEE55CLL) - 0x3B05C9C621088D52) ^ v82;
  unint64_t v114 = (v113 ^ 0xABBF41A677A8B294) & 0xF47FF077890F9720 ^ (v82 << 63) | (v113 ^ 0xABBF41A677A8B294) & 0xB800F8876F068DFLL;
  uint64_t v115 = v105 ^ (v114 - 2 * (v114 & 0x605D66A68E2B3D3ALL ^ v113 & 8) - 0x1FA2995971D4C2CELL);
  unint64_t v116 = (v108 ^ 0x92B66458D910E4B9) & (v94 ^ 0x7AA806CF644AE594) ^ v115;
  unint64_t v117 = v116 ^ v94 ^ 0x8557F9309BB51A6BLL ^ (((v108 ^ 0x6D499BA726EF1B46) & (v104 ^ 0x92B66458D910E4B9))
                                            - ((2 * ((v108 ^ 0x6D499BA726EF1B46) & (v104 ^ 0x92B66458D910E4B9))) & 0x2FC61D140C1323A8)
                                            - 0x681CF175F9F66E2CLL);
  *((void *)&v93 + 1) = v117 ^ 0x2E2;
  *(void *)&long long v93 = v117 ^ 0xE493A2E256395800;
  uint64_t v118 = v117 ^ 0x97E30E8A060991D4 ^ ((v117 ^ 0x97E30E8A060991D4) >> 17) ^ (v93 >> 10) ^ ((v117 ^ 0x97E30E8A060991D4) << 47);
  unint64_t v119 = v107 & ~v115;
  unint64_t v120 = v104 ^ 0xF6AA3254B61578A9 ^ (((v105 ^ 0x1FA2995971D4C2CDLL) & v114)
                                      - ((2 * ((v105 ^ 0x1FA2995971D4C2CDLL) & v114)) & 0xC838AC18DE0B3820)
                                      + 0x641C560C6F059C10);
  unint64_t v121 = ((v120 ^ v119) - ((2 * (v120 ^ v119)) & 0xC0BACD4D1C567A64) - 0x1FA2995971D4C2CELL) ^ v105;
  *((void *)&v93 + 1) = v121 ^ 0x38FE43D2BCLL;
  *(void *)&long long v93 = v121 ^ 0x3278F80000000000;
  uint64_t v122 = v111 + (v118 ^ 0x16EB95D00604E32ELL) - 2 * (v111 & (v118 ^ 0x16EB95D00604E32ELL));
  unint64_t v123 = __ROR8__(v121, 61) ^ (v121 << 25) ^ __ROR8__((v93 >> 38) ^ (v121 >> 39 << 26) ^ 0xC258A8B62E885BC3, 26);
  *((void *)&v93 + 1) = v116 ^ 0x548B80C;
  *(void *)&long long v93 = v116 ^ 0x7955EAEC48000000;
  unint64_t v124 = ((v116 & 0x3F) << 31) ^ 0xE04699B10F1F629ALL ^ (v93 >> 27);
  unint64_t v125 = (v116 >> 6) ^ (v116 >> 1) ^ (((v124 << 27) ^ (v116 << 63)) & 0xFFFFFFFFF8000000 | (v124 >> 37));
  unint64_t v126 = v123 ^ v125;
  unint64_t v127 = v123 ^ v125 ^ 0xC51AEF5B5CC303B1;
  unint64_t v128 = v122 & (v118 ^ 0xE9146A2FF9FB1CD1) ^ v127;
  unint64_t v129 = ((v128 >> 1) ^ (v128 >> 6) | (v128 << 63)) ^ (v128 << 58) ^ 0x82A267617DDD3C0DLL;
  uint64_t v130 = (v129 - ((2 * v129) & 0x54C8964B8DB93972) + 0x2A644B25C6DC9CB9) ^ v128;
  unint64_t v131 = v130 ^ 0xF9BE5516A6631883;
  unint64_t v132 = (v125 ^ 0x853759C940934A2BLL) + (v127 | v123 ^ 0xBFD2496DE3AFB665) + 1;
  unint64_t v133 = v120 ^ v109;
  uint64_t v134 = (v133 >> 19) ^ (v133 << 36) ^ (v133 << 45) ^ 0x2A792D60982B22B5;
  uint64_t v135 = (v133 >> 28) ^ 0x6E04C1591;
  unint64_t v136 = v133 ^ 0x3FB52542C9239311 ^ (v134 - ((2 * v134) & 0xA363C837B9102A36) + 0x51B1E41BDC88151BLL);
  unint64_t v137 = (v136 & 0x26452CB7C950B7B6 ^ v135 & 0x7C950B7B6 | v136 & 0xD9BAD34836AF4849 ^ v135 & 0x836AF4849) ^ v111;
  unint64_t v138 = v132 & 1;
  unint64_t v139 = (v132 & 0xFFFFFFFFFFFFFFFELL) - ((2 * v132) & 0x331D42070960C5CLL) + 0x198EA10384B062FLL;
  if ((v138 & v137) != 0) {
    uint64_t v140 = v137 - v138 - ((2 * (v137 - v138)) & 0x331D42070960C5ELL) + 0x198EA10384B062FLL;
  }
  else {
    uint64_t v140 = v137 ^ 0x198EA10384B062FLL ^ v138;
  }
  unint64_t v141 = v140 ^ v139;
  unint64_t v142 = (v126 ^ 0x3AE510A4A33CFC4ELL) & (v118 ^ 0x16EB95D00604E32ELL) ^ v123 ^ 0x402DB6921C50499ALL ^ v140 ^ v139;
  uint64_t v143 = ((8 * v142) ^ 0x12BB25DAC3BED128) & (v142 ^ 0x425764BB5877DA20) ^ __ROR8__(v142, 39) ^ (v142 ^ 0x1A00C0A7EAD23211 ^ (((v142 >> 61) ^ 0x5857A41CB2A5E872) - 8 * (v142 >> 63) - 60) | (8 * v142) ^ 0x12BB25DAC3BED128);
  uint64_t v144 = v131 & 0x1191A4446CA9EF9FLL ^ v130 & 0xC;
  unint64_t v145 = v131 - 2 * ((v130 ^ 0xF9BE5516A6631883) & 0x5191A4446CA9EFB7 ^ v130 & 0x24);
  unint64_t v146 = (v143 ^ 0xA7214BF0262D415ALL ^ (v131 - 2 * v144 + 0x5191A4446CA9EF93)) & 0x5652C9E8B5888E62;
  unint64_t v147 = ((v143 ^ 0xA7214BF0262D415ALL ^ (v145 - 0x2E6E5BBB9356106DLL)) & 0xA9AD36174A77719DLL | v146)
       + 0x240D351FA77E95BALL
       - 2
       * (((v143 ^ 0xA7214BF0262D415ALL ^ (v145 - 0x2E6E5BBB9356106DLL)) & 0x200D34170276119CLL | v146 & 0x240D351FA77E95BELL) ^ (v143 ^ 0xA7214BF0262D415ALL ^ (v145 - 0x2E6E5BBB9356106DLL)) & 4);
  uint64_t v148 = (v123 ^ 0x402DB6921C50499ALL) & ~v137 ^ v122;
  unint64_t v149 = ((v148 + (v148 ^ 0x8F38572C0C9BC202) + 1) ^ 0xFFFFFFFFFFFFFFFELL) + v148;
  unint64_t v150 = v149 - ((2 * v149) & 0x729D286835E63C08) + 0x394E94341AF31E04;
  uint64_t v151 = (v150 >> 7) ^ 0x729D286835E63CLL;
  uint64_t v152 = 0xBCCF0AB72AA4DB70 - (v150 & 0x10000000000000 | 0x5E67855B95526DB8);
  if ((v151 & v150 & 0x10000000000000) == 0) {
    uint64_t v152 = v150 & 0x10000000000000 | 0x5E67855B95526DB8;
  }
  unint64_t v153 = v128 ^ v118 ^ ((v137 & ~v122) - ((2 * (v137 & ~v122)) & 0x98F44CFE8405BE86) + 0x4C7A267F4202DF43);
  unint64_t v154 = (v153 & 0x1000000000 | (v153 << 47)) ^ v153 & 0xFFFFFFEFFFFFFFFFLL ^ ((v153 >> 10) ^ (v153 >> 17) | (v153 << 54));
  *((void *)&v155 + 1) = v154 ^ 0x2B65159936;
  *(void *)&long long v155 = v154 ^ 0xEA77FC000000000;
  unint64_t v156 = v150 & 0xFFEFFFFFFFFFFFFFLL ^ (v150 >> 41) ^ (v150 << 23) ^ (v150 << 57) ^ (v151 - 0x5E67855B95526DB8 + v152) ^ 0x2B43EDBB18EFB94ELL;
  uint64_t v157 = v154 ^ 0x2ED20AC9433035A2;
  uint64_t v158 = (v156 - ((2 * v156) & 0x40EAEA444C4B5928) + 0x207575222625AC94) ^ v154 ^ 0x2ED20AC9433035A2;
  uint64_t v159 = v147 ^ v158 & (__ROR8__((v155 >> 38) ^ 0xE2AAF8192B2B27F8, 26) ^ 0x353601C75541F9B5);
  unint64_t v160 = ((v159 ^ 0xB63631EB8C7E9501) + 0x6DC4FB0BD4FFFF45) ^ ((v159 ^ 0xDBF2CAE058816A45) + 1);
  unint64_t v161 = v160 - ((2 * v160) & 0xEC2F740F4C1AB590);
  uint64_t v162 = v159 ^ 0x521A8F180173CF72;
  uint64_t v163 = (v161 + 0x7617BA07A60D5AC8) ^ v159 ^ 0x521A8F180173CF72;
  unint64_t v164 = v163 - ((2 * v163 - 0x247609E856000178) & 0x879F368B0F9A6FDALL) + 0x319496515CCD3731;
  *((void *)&v155 + 1) = v164 ^ 0x2D;
  *(void *)&long long v155 = v164 ^ 0xC3CF9B4587CD37C0;
  uint64_t v165 = ((v163 << 63) | 0x61E7CDA2C3E69BF6) ^ (v164 >> 1) ^ (v155 >> 6);
  unint64_t v166 = (v165 - 0x3C3064BA7832C840 - ((2 * v165) & 0x879F368B0F9A6FDALL) + 45) ^ v164;
  unint64_t v167 = (((2 * v147) ^ 0xB7E595C0B102D48BLL) + (v147 ^ 0x240D351FA77E95BALL)) & (v154 ^ 0xEA77FEB65159936);
  unint64_t v168 = (v141 - ((2 * v141) & 0x3B90506AB511AB4ELL) - 0x6237D7CAA5772A59) ^ v148;
  unint64_t v169 = ((v168 ^ 0x9DC828355A88D5A7) << 45) ^ ((v168 ^ 0x9DC828355A88D5A7) << 36) ^ v156 ^ __ROR8__((((v168 ^ 0x9DC828355A88D5A7) >> 30) & 0x3FFFFFFFFFFFFFFFLL | ((unint64_t)(v168 >> 28) << 62)) ^ __ROR8__(v168 ^ 0xD33336B4E536012BLL ^ (((v168 >> 19) ^ 0x147D1FA158CLL) - ((2 * ((v168 >> 19) ^ 0x147D1FA158CLL)) & 0x32C892AC420CLL) - 0x26F2469BB6A9DEFALL), 2) ^ 0x26115EFD9A53B36ELL, 62);
  unint64_t v170 = (v147 ^ 0x240D351FA77E95BALL) & (v143 ^ 0x894F104BB57B5136) ^ v169 ^ 0xE87B635F1624B3E6;
  unint64_t v171 = v170 ^ v143 ^ 0xA7214BF0262D415ALL ^ (v167 - ((2 * v167) & 0xA3234888D953DF26) - 0x2E6E5BBB9356106DLL);
  *((void *)&v155 + 1) = v171 ^ 0x5BE354A5BB0B2;
  *(void *)&long long v155 = v171 ^ 0x6000000000000000;
  uint64_t v172 = v171 ^ __ROR8__(v171, 39) ^ (v155 >> 61);
  unint64_t v173 = ((v169 ^ 0x3D9656FDEA6A2FLL ^ -(uint64_t)(v169 ^ 0x3D9656FDEA6A2FLL) ^ ((v169 ^ 0xE87B635F1624B3E6)
                                                                              + 0x17B90AF614312637))
        + 0x17B90AF614312636) & (v143 ^ 0x76B0EFB44A84AEC9) ^ v158;
  unint64_t v174 = v173 ^ 0x2DB5B6AF87F64351 ^ ((v173 ^ 0x2DB5B6AF87F64351) >> 7) ^ ((v173 ^ 0x2DB5B6AF87F64351) << 23) ^ (((v173 ^ 0x2DB5B6AF87F64351) >> 41) | ((v173 ^ 0x2DB5B6AF87F64351) << 57));
  unint64_t v175 = (((v169 ^ 0xE87B635F1624B3E6) & ~v158)
        - ((2 * ((v169 ^ 0xE87B635F1624B3E6) & ~v158)) & 0x40EAEA444C4B5928)
        + 0x207575222625AC94) ^ v157;
  unint64_t v176 = (v175 - ((2 * v175) & 0xEC2F740F4C1AB590) + 0x7617BA07A60D5AC8) ^ v162;
  unint64_t v177 = v176 ^ (v176 << 54) ^ (v176 << 47) ^ (v176 >> 10) ^ (v176 >> 17);
  unint64_t v178 = v173 ^ __ROR8__(__ROR8__(v170, 61) ^ 0x500CB82D79BEE91BLL, 3);
  uint64_t v179 = ((v178 >> 19) ^ (v178 >> 28) | (v178 << 45)) ^ 0x21278C61855392E3;
  uint64_t v180 = v178 ^ (v178 << 36) ^ v174 ^ (v179 - ((2 * v179) & 0x2D2626BE2D921DE4) - 0x696CECA0E936F10ELL);
  unint64_t v181 = v180 ^ 0xB1BE34D9A28807CELL;
  unint64_t v182 = v177 ^ 0x6778BD04E09F7D8 ^ (v174 - ((2 * v174) & 0xB6BD1E879BFA87EALL) - 0x24A170BC3202BC0BLL);
  unint64_t v183 = (v180 ^ 0x4E41CB265D77F831) & (v172 ^ 0xA9109542E9BBBCELL) ^ v182;
  unint64_t v184 = v166 & (v172 ^ 0xF56EF6ABD1644431) ^ v180 ^ 0xB1BE34D9A28807CELL;
  *((void *)&v155 + 1) = v184 ^ v183 ^ 0x62F93;
  *(void *)&long long v155 = v184 ^ v183 ^ 0x69309AC4CA80000;
  uint64_t v185 = v184 ^ v183 ^ 0x5C7B20AFD8BCC8DBLL ^ (((v155 >> 19) ^ ((v184 ^ v183) << 36) ^ 0xCAE2F93000000000)
                                             - 2
                                             * (((v155 >> 19) ^ ((v184 ^ v183) << 36) ^ 0xCAE2F93000000000) & 0x5AE829039412E74FLL ^ (v155 >> 19) & 7)
                                             + 0x5AE829039412E748);
  uint64_t v186 = (v185 ^ -v185 ^ ((((v184 ^ v183) >> 28) ^ 0x69309AC4) - (v185 ^ ((v184 ^ v183) >> 28) ^ 0x69309AC4)))
       + (((v184 ^ v183) >> 28) ^ 0x69309AC4);
  unint64_t v187 = v186 - 0x37C9A25EDA4E362ELL - ((2 * v186) & 0x906CBB424B6393A4);
  LOBYTE(v179) = *(unsigned char *)(a33 + ((v186 - 46 - ((2 * v186) & 0xA4)) ^ 0x94));
  *a38 = BYTE1(v187) ^ 0xC9;
  a29[5] = ((v179 ^ 0x94) >> 6) | (4 * (v179 ^ 0x94));
  uint64_t v188 = ((v186 + 632408530 - ((2 * v186) & 0x4B6393A4u)) >> 12) & 0xF0 | ((v186
                                                                                          + 632408530
                                                                                          - ((2 * v186) & 0x4B6393A4u)) >> 20) & 0xF;
  *a39 = (*(unsigned char *)(a24 + (v188 ^ 0xE5)) ^ 0xA1)
       + (v188 ^ 0x50)
       + (v188 ^ 0xC5)
       - 2 * (((v188 ^ 0x50) + (v188 ^ 0xC5)) & (*(unsigned char *)(a24 + (v188 ^ 0xE5)) ^ 0xA1))
       - 122;
  unint64_t v189 = v172 ^ 0xF6A62F18D00586E4;
  uint64_t v190 = (v177 ^ 0x22D6FB6C7C0B4BD2) & v174;
  unint64_t v191 = v181 & ~v182;
  unint64_t v192 = (v166 - ((2 * v166) & 0xF86E4C99FD3C7A54) - 0x3C8D9B30161C2D6) ^ v189;
  unint64_t v193 = v192 ^ v190;
  unint64_t v194 = ((v192 ^ v190 ^ v191) - ((2 * (v192 ^ v190 ^ v191)) & 0xB6BD1E879BFA87EALL) - 0x24A170BC3202BC0BLL) ^ v177 ^ 0x6778BD04E09F7D8;
  unint64_t v195 = v194
       - ((2 * v194) & 0x9E2B77E5823BC0A6)
       + 0x4F15BBF2C11DE053
       - ((2 * (v194 - ((2 * v194) & 0x9E2B77E5823BC0A6) + 0x4F15BBF2C11DE053)) & 0xE81DE46818D9D39CLL)
       - 0xBF10DCBF3931632;
  unint64_t v196 = v183 ^ (v183 << 23) ^ ((v183 >> 7) ^ (v183 >> 41) | (v183 << 57));
  unint64_t v197 = (((v177 ^ 0xDD29049383F4B42DLL) & ~v192 ^ v184)
        - ((2 * ((v177 ^ 0xDD29049383F4B42DLL) & ~v192 ^ v184)) & 0xF86E4C99FD3C7A54)
        - 0x3C8D9B30161C2D6) ^ v189;
  *(void *)&long long v155 = __ROR8__((v197 >> 13) & 0x7000000000000 ^ __ROR8__(v197 ^ 0x1C378CE981CC1889 ^ (((8 * v197) ^ (v197 << 25) ^ 0xBF0681A6CFCC6AD0)- 2* (((8 * v197) ^ (v197 << 25) ^ 0xBF0681A6CFCC6AD0) & 0x7E3482BE0EB595D8 ^ (8 * v197) & 8)+ 0x7E3482BE0EB595D3), 16) ^ 0x59AF12027FFB7224, 48);
  uint64_t v198 = (v155 ^ -(uint64_t)v155 ^ (((v197 >> 39) ^ 0xC4061C) - (v155 ^ (v197 >> 39) ^ 0xC4061C)))
       + ((v197 >> 39) ^ 0xC4061C);
  unint64_t v199 = (v193 >> 1) ^ (v193 >> 6) ^ ((v193 << 58) ^ 0xB800000000000000) & 0xE7FFFFFFFFFFFFFFLL ^ (((v193 << 58) ^ 0xB800000000000000) & 0x1800000000000000 ^ v193 & 0x183B3BDBC4516A26 | v193 & 0xE7C4C4243BAE95D9 ^ (v193 << 63));
  LOBYTE(v181) = *(unsigned char *)(a33 + (((v186 + 632408530 - ((2 * v186) & 0x4B6393A4u)) >> 24) ^ 0x63)) ^ 0x94;
  *a40 = (v181 >> 6) | (4 * v181);
  LODWORD(v181) = *(unsigned __int8 *)(a22 + ((((v187 >> 31) & 0xB8) + (BYTE4(v187) ^ 0x7D)) ^ 0x77));
  DWORD1(v155) = (v181 >> 6) ^ 0x7F ^ -((v181 >> 6) ^ 0x7F) ^ (((v181 >> 6) | (8 * v181))
                                                                                         - 127);
  LODWORD(v155) = (DWORD1(v155) + 4 * v181) << 24;
  a29[1] = v198 ^ 0xAC;
  a30[6] = (BYTE6(v187) ^ 0x36) - 2 * ((BYTE6(v187) ^ 0x36) & 0x99 ^ BYTE6(v187) & 8) + 17;
  a29[4] = BYTE2(v198) ^ 0x24;
  *a41 = (unint64_t)v155 >> 26;
  a30[12] = (BYTE3(v198) ^ 0x72) - ((2 * (BYTE3(v198) ^ 0x72)) & 0x22) + 17;
  *(unsigned char *)(a32 + 29) = HIBYTE(v187) ^ 0xC8;
  a30[13] = (BYTE5(v187) ^ 0x5D) - 2 * ((BYTE5(v187) ^ 0x5D) & 0x13 ^ BYTE5(v187) & 2) + 17;
  a26[6] = (v198 ^ 0x12027FFB722459ACuLL) >> (((v186 + 632408530 - ((2 * v186) & 0x4B6393A4u)) >> 20) & 8) >> (~((v186 + 632408530 - ((2 * v186) & 0x4B6393A4u)) >> 20) & 8);
  LODWORD(v187) = *(unsigned __int8 *)(a22 + (((BYTE4(v198) ^ 0xFB) - 36) ^ 0x77));
  a26[4] = BYTE6(v198) ^ 2;
  *a29 = HIBYTE(v198) ^ 0x12;
  a26[2] = ((unsigned __int16)((v193 >> 1) ^ (v193 >> 6) ^ v193) >> 8) ^ 5;
  LODWORD(v183) = (((v193 >> 1) ^ (v193 >> 6) ^ v193) >> 16);
  *a42 = BYTE5(v198) ^ 0x7F;
  a29[2] = (v193 >> 1) ^ (v193 >> 6) ^ v193 ^ 0xDB;
  *a26 = ((((v187 >> 6) | (4 * v187)) ^ 0x7F) >> 2) | ((((v187 >> 6) | (4 * v187)) ^ 0x7F) << 6);
  LOBYTE(v187) = *(unsigned char *)(a18
                          + (((v183 ^ 0x76) + (v183 ^ 0xFFFFFFAA) + 1) ^ 0xFFFFFFFE)
                          + (v183 ^ 0x76));
  unint64_t v200 = v195 ^ (v195 << 47) ^ (v195 >> 10) ^ (v195 << 54);
  unint64_t v201 = v200 ^ (v195 >> 17);
  *a34 = (((v193 >> 1) ^ (v193 >> 6) ^ v193) >> 24) ^ 0x87;
  a29[3] = BYTE6(v199) ^ 0x5D;
  LOBYTE(v195) = (v187 ^ 0xF2 ^ (16 * v187) & 0x40) & 7 ^ 0x35 ^ ((unint64_t)((v187 ^ 0xF2 ^ (16 * v187) & 0x40) >> 3) << ((v198 ^ 0xAC) & (v198 ^ 0x50)) << ((v198 ^ 0xAC) & (v198 ^ 0x50) ^ 3));
  a29[11] = v201 ^ 0xC2;
  *(unsigned char *)(a32 + 28) = BYTE5(v199) ^ 0x22;
  uint64_t v202 = (v201 >> 20) & 0xF0 | (~v201 >> 28);
  a29[13] = ((v195 >> 3) | (32 * v195)) ^ 0xA6;
  *a35 = BYTE2(v201) ^ 0x75;
  a30[8] = (HIBYTE(v199) ^ 0xA1) - 2 * ((HIBYTE(v199) ^ 0xA1) & 0x99 ^ HIBYTE(v199) & 8) + 17;
  a30[17] = (BYTE4(v199) ^ 0x3C) - ((2 * (BYTE4(v199) ^ 0x3C)) & 0x22) + 17;
  a30[11] = (BYTE1(v201) ^ 0xF4) - 2 * ((BYTE1(v201) ^ 0xF4) & 0x13 ^ BYTE1(v201) & 2) + 17;
  LOBYTE(v187) = *(unsigned char *)(a24 + (v202 ^ 0x7E));
  *(unsigned char *)a32 = BYTE6(v200) ^ 0x54;
  char v203 = v187 ^ ((v202 ^ 0x5E) + (v202 ^ 0xCB)) ^ 0xA1;
  *a36 = BYTE5(v201) ^ 0x8B;
  *(unsigned char *)(a32 + 15) = BYTE3(v196) ^ 0x79;
  a30[19] = v196 ^ 0x83;
  a26[5] = BYTE1(v196) ^ 0x3D;
  a29[8] = BYTE2(v196) ^ 3;
  a30[18] = v203 + (~(2 * v203 + 12) | 0xDD) - 104;
  a29[6] = BYTE4(v201) ^ 0x8F;
  a26[7] = HIBYTE(v200) ^ 0xF3;
  LOBYTE(v186) = *(unsigned char *)(a33 + (BYTE4(v196) ^ 0x19)) ^ 0x94;
  *(unsigned char *)(a32 + 14) = BYTE5(v196) ^ 0x49;
  a26[3] = HIBYTE(v196) ^ 0xBE;
  a26[1] = BYTE6(v196) ^ 0x75;
  *(unsigned char *)(a32 + 16) = (v186 >> 6) | (4 * v186);
  *(_DWORD *)(a32 + 4) = a20 + 6309382;
  JUMPOUT(0x100038BD4);
}

uint64_t sub_100038C44(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((1734 * (v3 + 1 == v5 + 16)) ^ a3)))();
}

uint64_t sub_100038D1C@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((a2 - v2 - 1452 >= ((a1 - 324) ^ 0x300uLL))
                                * (((a1 - 1124) | 0x84) ^ 0x8C)) | a1)))();
}

uint64_t sub_100038D60(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((829 * (a7 + 1 == v8 + 80)) ^ a3)))();
}

uint64_t sub_100038E2C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((7 * (((v0 - 1112) | 0xCE) ^ 0x2FF)) ^ 0xFA) * ((v1 + v3) > 0x7FFFFFFD)) ^ v0)))();
}

uint64_t sub_100038E80(uint64_t a1, int a2, int8x16_t *a3, int8x16_t a4, int8x16_t a5)
{
  *(int8x16_t *)(v7 + (a1 & (v6 + 16))) = vaddq_s8(vsubq_s8(*a3, vandq_s8(vaddq_s8(*a3, *a3), a4)), a5);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 == 16) * a2) ^ v5)))();
}

void sub_100038E8C()
{
}

uint64_t sub_100038EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unsigned int a18, unsigned int a19, int a20)
{
  unsigned int v22 = 1759421093 * (&a17 ^ 0xB37DB054);
  HIDWORD(a17) = v22 ^ 0x241A7128;
  a18 = v22 + 1424;
  a20 = v22 ^ 0x4479276D;
  LODWORD(a17) = v22 ^ 0x19C79A77;
  (*(void (**)(unint64_t **))(v21 + 17696))(&a17);
  a19 = 1410
      - 460628867
      * (((&a17 | 0x79CC505F) - &a17 + (&a17 & 0x8633AFA0)) ^ 0x355AD222);
  a17 = &STACK[0x4313E3591B4C289];
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v21 + 18432))(&a17);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((490 * (a18 == 526347143)) ^ v20)))(v23);
}

uint64_t sub_100038FC8()
{
  *(_DWORD *)(v6 - 120) = v5 + ((v6 - 1915282224 - 2 * ((v6 - 136) & 0x8DD71D58)) ^ 0x3743653A) * v0 + 723;
  *(void *)(v6 - 112) = v1;
  *(void *)(v6 - 128) = v3;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v5 + 1279)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((*(_DWORD *)(v6 - 136) > v4) * ((v5 ^ 0xAA) + 1109)) ^ v5)))(v7);
}

void sub_10003905C()
{
}

void sub_100039084()
{
}

uint64_t sub_1000390F0@<X0>(int a1@<W3>, int a2@<W4>, char a3@<W7>, int a4@<W8>)
{
  *(unsigned char *)(v5 + v6) = *(unsigned char *)(v8 + (v4 + a1))
                      - (a3 & (2 * *(unsigned char *)(v8 + (v4 + a1))))
                      - 21;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v6 == 63) * v7) ^ (a2 + a4 - 710))))();
}

uint64_t sub_100039138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _DWORD *a11)
{
  void *v12 = a1;
  *a11 = v11;
  return sub_1000550C8();
}

uint64_t sub_100039140()
{
  *(void *)(v5 - 128) = v0;
  *(void *)(v5 - 120) = v3;
  *(_DWORD *)(v5 - 136) = v2
                        - 108757529
                        * ((2 * (((v5 - 136) ^ 0x14BA10D1) & 0x6A3FC9C1) - ((v5 - 136) ^ 0x14BA10D1) - 1782565320) ^ 0x61E644C2)
                        + 1355;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0x9A2)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((v4 == ((52 * (v2 ^ 0x14F)) ^ 0x79B2A8CD)) * ((v2 ^ 0x2DE) - 104)) ^ v2)))(v6);
}

uint64_t sub_100039200(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, int a14)
{
  unsigned int v24 = v17 - 16;
  uint64_t v25 = v24 & 0xF;
  v27.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v27.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v20, a5).u64[0];
  int8x16_t v28 = vrev64q_s8(vmulq_s8(v27, a6));
  *(int8x16_t *)(a12 + v24) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v15 + v25 - 15), *(int8x16_t *)(a12 + v24)), veorq_s8(*(int8x16_t *)(v25 + v14 - 13), *(int8x16_t *)(v25 + v16 - 11))), vextq_s8(v28, v28, 8uLL));
  return (*(uint64_t (**)(void))(v19 + 8 * (((v18 == 16) * (a14 + 1585)) ^ a11)))();
}

uint64_t sub_10003921C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(_DWORD *)(a16 + 4 * v18) = ((0xF41BD8C901F2D9AFLL >> (v19 + 6)) ^ v17)
                               + v16
                               - 2
                               * (((0xF41BD8C901F2D9AFLL >> (v19 + 6)) ^ v17) & 0x5C7F20DA ^ (0xF41BD8C901F2D9AFLL >> (v19 + 6)) & 2);
  return sub_100057698();
}

uint64_t sub_100039238(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, unsigned int a19)
{
  unsigned int v21 = a2 + 2080349207 + a6;
  BOOL v22 = v21 < 0x97A476CC;
  BOOL v23 = v21 > a19;
  if (a19 < 0x97A476CC != v22) {
    BOOL v24 = v22;
  }
  else {
    BOOL v24 = v23;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * ((v24 * (a18 & 0x28708FEB ^ 0x690)) ^ (a5 + v20 + 500))))();
}

uint64_t sub_100039240()
{
  return sub_100039248();
}

uint64_t sub_100039248(uint64_t a1, uint64_t a2, double a3, double a4, int8x16_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26,uint64_t a27)
{
  uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, void, void, uint64_t))(v32 + 8 * v29);
  int v40 = *(_DWORD *)(v38 - 144);
  uint64_t v41 = *(unsigned int *)(v38 - 148);
  unsigned int v43 = *(_DWORD *)(v38 - 140);
  unsigned int v42 = *(_DWORD *)(v38 - 136);
  int v44 = *(unsigned char *)(v38 - 124) ^ 0xDD;
  if (v44 == 2)
  {
    int8x16x4_t v63 = vld4q_s8(v30);
    uint8x16_t v53 = (uint8x16_t)veorq_s8(v63.val[1], a5);
    _Q22 = vmovl_u8(*(uint8x8_t *)v53.i8);
    _Q21 = vmovl_high_u8(v53);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    unint64_t v58 = (_DWORD *)(v28 + 4 * (v35 + 1824787902));
    int v59 = *(_DWORD *)(v28 + 4 * (((a8 + v33 - 60) ^ a26) + 1824787902)) ^ *(v58 - 3);
    int v60 = *(v58 - 16) ^ *(v58 - 14) ^ (v59 + v37 - ((2 * v59) & 0x3EBED70E));
    HIDWORD(v61) = v60 ^ v37;
    LODWORD(v61) = v60;
    *unint64_t v58 = (v61 >> 31) + v37 - ((2 * (v61 >> 31)) & 0x3EBED70E);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32
                                                                + 8
                                                                * (((16 * (v36 == 1824787839)) | ((v36 == 1824787839) << 6)) ^ ((int)a8 + v33 + 654))))(3623878656, 64052174, v41);
  }
  else if (v44 == 1)
  {
    int8x16x4_t v62 = vld4q_s8(v30);
    uint8x16_t v45 = (uint8x16_t)veorq_s8(v62.val[2], a5);
    _Q26 = vmovl_high_u8(v45);
    _Q25 = vmovl_u8(*(uint8x8_t *)v45.i8);
    __asm
    {
      SHLL2           V25.4S, V25.8H, #0x10
      SHLL2           V26.4S, V26.8H, #0x10
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(v32 + 8 * ((30 * (a27 + 1 != v36)) ^ v27)))(a1, a2, v42);
  }
  else
  {
    *(_DWORD *)(v38 - 148) = 2 * (*(_DWORD *)(v38 - 148) ^ v31) + v31 - (v34 & (4 * (*(_DWORD *)(v38 - 148) ^ v31)));
    *(_DWORD *)(v38 - 144) = 2 * (v40 ^ v31) + v31 - (v34 & (4 * (v40 ^ v31)));
    *(_DWORD *)(v38 - 140) = 2 * (v43 ^ v31) + v31 - (v34 & (4 * (v43 ^ v31)));
    *(_DWORD *)(v38 - 136) = 2 * (v42 ^ v31) + v31 - (v34 & (4 * (v42 ^ v31)));
    return v39(a1, a2, v41, v39, a8, a9, v42, v43, a12);
  }
}

void sub_100039658(int a1@<W7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  int v14 = ((v11 + a2 - 883) ^ a11) + (a1 ^ v11);
  *(_DWORD *)(v13 - 132) = v14 + v11 - (v12 & (2 * v14));
  JUMPOUT(0x1000396A8);
}

uint64_t sub_10003972C(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((1016 * (a7 + 1 == v8 + 32)) ^ a1)))();
}

uint64_t sub_100039800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((((v5 + 88) ^ ((v6 | a5) == 0)) & 1) * (v5 - 659)) ^ v5)))();
}

uint64_t sub_100039838(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v24 = v17 - 16 + ((a11 - 821) | 0x100u);
  uint64_t v25 = ((_BYTE)v17 - 16 + (_BYTE)a11 - 53) & 0xF;
  v27.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v27.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v20, a5).u64[0];
  int8x16_t v28 = vrev64q_s8(vmulq_s8(v27, a6));
  *(int8x16_t *)(a14 + v24) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v14 + (v24 & 0xF) - 15), *(int8x16_t *)(a12 + v24)), veorq_s8(*(int8x16_t *)(v15 + (v24 & 0xF) - 15), *(int8x16_t *)((v24 & 0xF) + v16 - 11))), vextq_s8(v28, v28, 8uLL));
  return (*(uint64_t (**)(void))(v19 + 8 * ((14 * (v18 != 16)) ^ a11)))();
}

uint64_t sub_100039844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v18 - 120) = v16 + 1178560073 * ((v18 - 136) ^ 0xBA947862) + 873;
  *(void *)(v18 - 112) = v17;
  *(void *)(v18 - 128) = a14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 + 1429)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v18 - 136) > (v14 + 1)) * (v16 - 803)) ^ v16)))(v19);
}

uint64_t sub_1000398B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,unint64_t a30,int a31,int a32)
{
  LODWORD(STACK[0x278]) = v32;
  LODWORD(STACK[0x27C]) = a32;
  STACK[0x280] = a30;
  LODWORD(STACK[0x288]) = (((v36 + 306485138) | 0x40006709) ^ 0x4B67E95E) - a5 + a29;
  STACK[0x290] = a7 + (a5 - 2119813987);
  int v38 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48 * v37 + 8))(a16, a25);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35
                                                                       + 8
                                                                       * ((427
                                                                         * (v38
                                                                          + v34
                                                                          - ((v38 << (((v36 - 117) | 6) - 30)) & v33) == v34)) ^ v36)))(3689027270, 1048539665, a27, 605940025);
}

uint64_t sub_100039990@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  return (*(uint64_t (**)(void))(v32 + 8 * ((424 * (a32 - 1048539665 < (a1 ^ 0x9Eu))) ^ a1)))();
}

uint64_t sub_1000399D8(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unsigned int v9 = a4 + v6 + v7 + v8 + 2083962163 - 354073257;
  unsigned int v10 = v4 + 865206012;
  int v11 = (v10 < 0x693F10BA) ^ (v9 < 0x693F10BA);
  BOOL v12 = v9 > v10;
  if (v11) {
    BOOL v12 = v9 < 0x693F10BA;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((228 * ((((a3 ^ 0x15) + 1) ^ v12) & 1)) ^ (a3 - 490))))();
}

uint64_t sub_100039A6C(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((((v2 == a1) ^ (-93 * (a2 ^ 0x98))) & 1) * (a2 - 366)) ^ a2)))();
}

uint64_t sub_100039AA4()
{
  BOOL v4 = v1[1] == 0x9466003216229CDLL || (v1[7] | v1[4]) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * ((v0 + 831) ^ 0x566 ^ ((v0 - 1071) | 0x264))) ^ v0)))();
}

uint64_t sub_100039B08(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,uint64_t a24,uint64_t a25,int a26)
{
  unsigned int v27 = a23 + ((11 * ((a4 + 2044) ^ 0x844)) ^ 0xC349F4C6);
  int v28 = ((a26 - 1244626668) < 0x1C4C5358) ^ (v27 < 0x1C4C5358);
  BOOL v29 = v27 < a26 - 1244626668;
  if (v28) {
    BOOL v29 = (a26 - 1244626668) < 0x1C4C5358;
  }
  return (*(uint64_t (**)(uint64_t))(v26 + 8
                                                  * ((v29 * ((((a4 + 2044) ^ 0x844) + 1536) ^ 0x60A)) ^ (a4 + 732))))(2801639823);
}

uint64_t sub_100039BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,int a21)
{
  int v29 = v21 + 1;
  int v30 = &a21 + 6 * (v29 - 1883610289);
  v30[2] = v25;
  v30[3] = v23;
  *((void *)v30 + 2) = v22;
  v30[6] = a19;
  a21 = v29;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8 * ((52 * (*(_DWORD *)(v26 + 48 * v27 + 32) + v28 < a7 + ((a9 + 1223288481) & 0xB71619E7) - 417)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_100039C58(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (a4 ^ (63 * ((unint64_t)(a2 - (a1 + v5)) > 0x1F)))))();
}

uint64_t sub_100039C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  v10.i64[0] = 0xD6D6D6D6D6D6D6D6;
  v10.i64[1] = 0xD6D6D6D6D6D6D6D6;
  v11.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v11.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  int8x16_t v12 = vrev64q_s8(*(int8x16_t *)(v6 + (v8 - 951018787) - 15));
  int8x16_t v13 = vextq_s8(v12, v12, 8uLL);
  int8x16_t v14 = vrev64q_s8(*(int8x16_t *)(v6 + (v8 - 951018787) - 31));
  int8x16_t v15 = vextq_s8(v14, v14, 8uLL);
  uint64_t v16 = v5 + (v8 - 951018787);
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v13, vandq_s8(vaddq_s8(v13, v13), v10)), v11));
  *(int8x16_t *)(v16 - 15) = vextq_s8(v17, v17, 8uLL);
  int8x16_t v18 = vrev64q_s8(vaddq_s8(vsubq_s8(v15, vandq_s8(vaddq_s8(v15, v15), v10)), v11));
  *(int8x16_t *)(v16 - 31) = vextq_s8(v18, v18, 8uLL);
  return (*(uint64_t (**)(void))(v9 + 8 * ((1951 * (((a5 - 712) ^ 0x5FD) == (v7 & 0xFFFFFFE0))) ^ (a5 - 1400))))();
}

uint64_t sub_100039D50(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8
                                   * ((587 * (*(_DWORD *)(v8 + 72) == (a6 ^ (a6 + 353) ^ (a3 + 682)))) ^ (a6 + v7))))();
}

uint64_t sub_100039D94@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((8 * (a2 + 1 != v3 + 4)) | (16 * (a2 + 1 != v3 + 4)) | a1)))();
}

uint64_t sub_100039E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21)
{
  a19 = v23;
  a20 = v26;
  a21 = (v21 - 1111) ^ (1225351577 * (&a17 ^ 0x239AD816));
  a18 = a13;
  (*(void (**)(unsigned int *))(v24 + 8 * (v21 ^ 0xD9B)))(&a17);
  a18 = v22;
  a19 = a13;
  a17 = (v21 - 451) ^ (((-1001333016 - (&a17 | 0xC450DEE8) + (&a17 | 0x3BAF2117)) ^ 0x565B391E)
                     * v25);
  (*(void (**)(unsigned int *))(v24 + 8 * (v21 + 880)))(&a17);
  a17 = (v21 + 34) ^ (1755732067
                    * ((((&a17 | 0x3445A058) ^ 0xFFFFFFFE) - (~&a17 | 0xCBBA5FA7)) ^ 0x157CE27C));
  a18 = a13;
  uint64_t v27 = (*(uint64_t (**)(unsigned int *))(v24 + 8 * (v21 + 885)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * (((a19 == 526347143) * (v21 - 1156)) ^ v21)))(v27);
}

uint64_t sub_100039F9C()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((((((v1 ^ 0x68D) - 496) | 0x800) - 2010) * (v0 != 1513171449)) ^ v1 ^ 0x68D)))(2801639823);
}

uint64_t sub_100039FE4@<X0>(int a1@<W1>, int a2@<W3>, uint64_t a3@<X8>)
{
  unsigned int v8 = a1 + v6 + a2;
  uint64_t v9 = a3 + v8;
  long long v10 = *(_OWORD *)(v9 - 31);
  uint64_t v11 = v3 + v8;
  *(_OWORD *)(v11 - 15) = *(_OWORD *)(v9 - 15);
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7
                              + 8 * (int)((((v4 & 0xFFFFFFE0) == 32) * ((v5 + 1574607216) & 0xA22567BB ^ 0x95A)) ^ v5)))();
}

uint64_t sub_10003A04C@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((75 * ((v1 ^ (((((v1 - 11) | 0xA8) - 1427) ^ a1) < 8)) & 1)) ^ v1)))();
}

uint64_t sub_10003A094()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((115
                                * (((v0 + 2130278087) & 0x810683F4 ^ 0x8060AFB8 ^ (489 * (v0 ^ 0x636))) + v1 < 0x7FFFFFFF)) ^ v0)))();
}

void sub_10003A118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  *(_DWORD *)(a41 + 4 * v41) ^= a37;
  JUMPOUT(0x10003A148);
}

uint64_t sub_10003A158@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a1 + 34127547) | 0x622821) ^ (v1 + 939)) * (v2 == 1)) ^ a1)))();
}

void sub_10003A1A0()
{
}

uint64_t sub_10003A25C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((51 * (a1 != (v1 - v3 - 634) - 3742567335)) ^ v1)))();
}

uint64_t sub_10003A290(uint64_t a1)
{
  return sub_10003A298(a1, *v1);
}

uint64_t sub_10003A298(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = (*(uint64_t (**)(void, uint64_t, void))(v4 + 8 * (v2 ^ 0xCEB)))(*v6, a2, (v2 - 996280208 + *(_DWORD *)(v3 - 0x2C138C8FAF40FC1ALL)));
  *uint64_t v9 = v8;
  *(_DWORD *)(v3 - 0x2C138C8FAF40FC1ALL) = v7;
  *int v5 = v7;
  return sub_10003A2F4(v10);
}

uint64_t sub_10003A314(int a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(v4 - 7 + (v6 + v7 + v8 - a1)) = *(void *)(a2 - 7 + (v6 + v7 + v8 - a1));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a1 - (v5 & 0xFFFFFFF8) == -8) * ((a4 - 1312) ^ 0x265)) ^ a4)))(a1 - (v5 & 0xFFFFFFF8) + 16);
}

void sub_10003A36C(_DWORD *a1@<X8>)
{
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(*(void *)(v3 + 24) - 0x3EA9131FAE910FB8) = v1;
  *(_DWORD *)(v4 - 0x237357D135FF68D5) = v2;
  *(_DWORD *)uint64_t v3 = *a1;
}

uint64_t sub_10003A3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v19 - 112) = v17;
  *(_DWORD *)(v19 - 120) = v18
                         + ((7350338 - ((v19 - 136) | 0x702842) + ((v19 - 136) | 0xFF8FD7BD)) ^ 0x451BAFDF) * v14
                         + 1296;
  *(void *)(v19 - 128) = a14;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v18 + 1852)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((626
                                              * (*(_DWORD *)(v19 - 136) > v15 + ((v18 + 1944079523) & 0x8C1FB7F9) - 1616)) ^ v18)))(v20);
}

uint64_t sub_10003A484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  if (a18 + 1434327783 < ((v19 - 1696149566) & 0x65192C7F ^ 0xD16F86FE) != (v18 + 1895466277) < 0xD16F86E0) {
    BOOL v21 = a18 + 1434327783 < ((v19 - 1696149566) & 0x65192C7F ^ 0xD16F86FE);
  }
  else {
    BOOL v21 = v18 + 1895466277 < (a18 + 1434327783);
  }
  return (*(uint64_t (**)(void))(v20 + 8 * ((57 * v21) ^ v19)))();
}

uint64_t sub_10003A504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, unint64_t *a18, unint64_t *a19, unint64_t *a20,unsigned int a21)
{
  a18 = a12;
  a19 = &STACK[0x237357D135FF68FD];
  a21 = (v21 - 342) ^ (1225351577 * (&a17 ^ 0x239AD816));
  a20 = &STACK[0x3EA9131FAE910FE8];
  (*(void (**)(unsigned int *))(v22 + 8 * (v21 ^ 0xA98)))(&a17);
  a18 = &STACK[0x8DE5192BDC53192];
  a19 = a12;
  a17 = (v21 + 318) ^ (1374699841 * (&a17 ^ 0x6DF41809));
  (*(void (**)(unsigned int *))(v22 + 8 * (v21 ^ 0xA93)))(&a17);
  a18 = a12;
  a17 = (v21 + 803) ^ (1755732067
                     * ((2 * (&a17 & 0x22973738) - &a17 + 1567148230) ^ 0x83AE751D));
  uint64_t v23 = (*(uint64_t (**)(unsigned int *))(v22 + 8 * (v21 + 1654)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * (((a19 == 526347143) * ((186 * (v21 ^ 0x277)) ^ 0x3B6)) ^ v21)))(v23);
}

uint64_t sub_10003A67C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((v0 | 0x190) + 500) ^ 0x571 ^ ((v0 | 0x190) + 714472037) & 0xD56A0655)
                                     * (*(_DWORD *)(v2 - 140) == *(_DWORD *)(v2 - 144))) ^ (v0 | 0x190))))();
}

uint64_t sub_10003A6DC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((*(_DWORD *)(v2 - 0x2C138C8FAF40FC0ALL) == 382 * ((v1 - 229) ^ 0xBE) + 526345233)
                                * (((v1 - 256) | 0x100) - 57)) ^ (v1 - 229))))();
}

uint64_t sub_10003A740@<X0>(int a1@<W0>, uint64_t a2@<X7>, int a3@<W8>)
{
  *(unsigned char *)(a2 + (v6 + v4)) = *(unsigned char *)(v3 + (v6 + v4));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 - 1 == a3) * ((a1 + v5) ^ 0x2E0)) ^ (a1 + v5 + 652))))();
}

uint64_t sub_10003A77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v12 = v8 + v7 - 1643904854;
  if (v12 <= 0x40) {
    int v13 = 64;
  }
  else {
    int v13 = v12;
  }
  BOOL v14 = !__CFADD__(v12 - 1, v10 + v13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * ((v14 * (((v9 + 154) | 0x93) ^ 0x169)) ^ v9)))(a1, a2, a3, a4, a5, a6, a7, 20);
}

uint64_t sub_10003A7F8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((**(void **)(v2 + 8 * (v0 ^ 0x224)) == 0) * (((v0 - 166) | 0x198) - 614)) ^ v0)))();
}

void sub_10003A834()
{
}

uint64_t sub_10003A840(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  *(void *)(v10 + (a7 + v9)) = *(void *)(a4 + (a7 + v9));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v11 == 0) * a3) ^ a8)))();
}

void sub_10003A870(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0x3B6203503B620350;
  *(void *)(a1 + 16) = 0x1DC69A7A0D7973D3;
  *(_DWORD *)(a1 + 24) = 526347143;
  *(void *)(v2 - 0x4313E3591B4C269) = a1 + 0x2C138C8FAF40FC22;
  JUMPOUT(0x10003A8D0);
}

uint64_t sub_10003A8E4@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((((v1 + 1957099962) & 0x8B5903FF) + 413) | 2) + 92) * (a1 > 1)) ^ (v1 + 1957099962) & 0x8B5903FF)))();
}

uint64_t sub_10003A9F0()
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x2C138C8FAF40FC12)
     - ((2 * *(_DWORD *)(v1 - 0x2C138C8FAF40FC12) - 452126630) & 0x9679CA2E)
     + 1036218692;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((42
                                * (((2 * v3) & 0x1FF5FFF6 ^ 0x1671CA26)
                                 - 147328048
                                 + ((11 * ((v0 - 874678825) & 0x342285E0 ^ 0x4E7)) ^ v3 ^ 0x44C61DC1) != 120779723)) ^ v0)))();
}

uint64_t sub_10003AAB8@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(_DWORD *)(result + 4) = (((v4 - 425) | 0x1A4)
                           - (((*(_DWORD *)(*(void *)(v2 - 0x139154EEB4327E8) + 4 * v3) ^ 0xDC7F20D8) >> a2) & 1)
                           + 1003905518) ^ 0x3E24C1F3;
  return result;
}

void sub_10003AB18()
{
}

void sub_10003AB20()
{
}

uint64_t sub_10003AB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v32 = 1759421093 * ((v31 - 1303624101 - 2 * ((v31 - 128) & 0xB24C46DB)) ^ 0x131F68F);
  *(_DWORD *)(v31 - 112) = v24 - v32 - 218;
  *(_DWORD *)(v31 - 128) = v24 + 124 - v32 + v29 - 1026732878;
  *(void *)(v31 - 120) = v27;
  (*(void (**)(uint64_t))(v25 + 8 * (v24 + 969)))(v31 - 128);
  *(void *)(v31 - 120) = a24;
  *(_DWORD *)(v31 - 112) = v24
                         + 124
                         + ((-1552184628 - ((v31 - 128) | 0xA37B8ACC) + ((v31 - 128) | 0x5C847533)) ^ 0xE6100D51) * v30
                         + 245;
  *(void *)(v31 - 104) = v26;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v24 + 925)))(v31 - 128);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * ((25 * (*(_DWORD *)(v31 - 128) <= ((((v24 + 178) | 0x20) - 922) ^ v28))) ^ (v24 + 124))))(v33);
}

uint64_t sub_10003AC44(int a1, uint64_t a2, int a3, int a4)
{
  unsigned int v9 = a4 + a1 + v6 + a3;
  v10.i64[0] = 0xD6D6D6D6D6D6D6D6;
  v10.i64[1] = 0xD6D6D6D6D6D6D6D6;
  v11.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v11.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  uint64_t v12 = v7 + v9;
  int8x16_t v13 = vrev64q_s8(*(int8x16_t *)(v12 - 15));
  int8x16_t v14 = vextq_s8(v13, v13, 8uLL);
  int8x16_t v15 = vrev64q_s8(*(int8x16_t *)(v12 - 31));
  int8x16_t v16 = vextq_s8(v15, v15, 8uLL);
  uint64_t v17 = v4 + v9;
  int8x16_t v18 = vrev64q_s8(vaddq_s8(vsubq_s8(v14, vandq_s8(vaddq_s8(v14, v14), v10)), v11));
  *(int8x16_t *)(v17 - 15) = vextq_s8(v18, v18, 8uLL);
  int8x16_t v19 = vrev64q_s8(vaddq_s8(vsubq_s8(v16, vandq_s8(vaddq_s8(v16, v16), v10)), v11));
  *(int8x16_t *)(v17 - 31) = vextq_s8(v19, v19, 8uLL);
  return (*(uint64_t (**)(void))(v8 + 8 * ((2239 * ((v5 & 0xFFFFFFE0) == 32)) ^ (a4 - 1612))))();
}

uint64_t sub_10003ACE4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((3620
                                * (*(_DWORD *)(v2 + 4 * (v1 + v3 + 2)) == a1 + 3 * (v4 ^ 0x1B6) - 978)) ^ (v4 + 1348))))();
}

uint64_t sub_10003AD34()
{
  *(void *)(v2 - 1340507626 + v4 - 220 - 213 + 3 * (v0 ^ 0x94u)) = 0xEBEBEBEBEBEBEBEBLL;
  return (*(uint64_t (**)(void))(v3 + 8 * ((2249 * ((v1 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ v0)))();
}

uint64_t sub_10003AD90@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v4 - 220 + a2 - 1340507626) = -21;
  return (*(uint64_t (**)(void))(v3 + 8 * ((2138 * ((unint64_t)(a2 - 1340507625) < 0x40)) ^ (a1 + v2 + 194))))();
}

void sub_10003ADDC()
{
}

uint64_t sub_10003AE2C@<X0>(unsigned int a1@<W0>, int a2@<W2>, uint64_t a3@<X4>, uint64_t a4@<X5>, int a5@<W6>, unsigned int a6@<W8>)
{
  *(unsigned char *)(a3 + (v6 + 1 + v9)) = *(unsigned char *)(a4 + (v7 + a2));
  return (*(uint64_t (**)(void))(v11 + 8
                                    * (((((a6 ^ a1 ^ (unint64_t)(v8 + 1153)) & (v7 + 1)) == v10) * a5) ^ a6)))();
}

uint64_t sub_10003AE74()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 ^ (55
                                     * (((v1 << (((v0 + 114) & 0xFE) + 3)) & 0x9973CB8E ^ 0x10724184)
                                      + (v1 ^ 0x6686C705)
                                      - 1207977217 == 79274182)))))();
}

uint64_t sub_10003AEF4@<X0>(int a1@<W8>)
{
  int v6 = (v3 - 1343) | 0x389;
  *(_DWORD *)(*(void *)(v5 - 0x139154EEB4327E8) + 4 * (a1 + v6 + v2 + 789944443)) = *(_DWORD *)(*(void *)(v5 - 0x139154EEB4327E8) + 4 * (v2 + v1));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8 * ((1169 * ((v2 + v1 - 1) < 0x7FFFFFFF)) ^ v6)))(789944443, 0x7FFFFFFFLL);
}

uint64_t sub_10003AF78()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 + 285) | 0x100) - 837) * (v0 != 63)) ^ v1)))();
}

void sub_10003AFB8()
{
}

uint64_t sub_10003B078(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8 * (v3 ^ (227 * (v2 == 0)))))(a1, a2);
}

uint64_t sub_10003B0BC@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v7 = ((a1 + 647) ^ (v4 + 904)) + v5;
  *(unsigned char *)(a2 + v7) = *(unsigned char *)(v2 + v7);
  return (*(uint64_t (**)(void))(v6 + 8 * ((1008 * (v5 - 1 != v3)) ^ (a1 + 1140))))();
}

uint64_t sub_10003B0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,__int16 a56,char a57,char a58,int a59)
{
  if (BYTE4(a39) == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 8 * ((1894 * (a59 != 1335561202)) ^ ((int)a3 + 1004))))(a1, a18);
  }
  if (BYTE4(a39) == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v59
  }
                                                       + 8
                                                       * (int)(((a59 != 1335561202) * ((a3 + 1318) ^ 0x53C)) ^ (a3 + 1318))))(a1, a18);
  a58 = ((((unint64_t)&a43 ^ 0xF85BDE3EFF737D8FLL) + ((2 * (void)&a43) & 0x10) + (a3 ^ 0x62) - 1) ^ 0xBA)
      * (((unint64_t)&a43 ^ 0xF85BDE3EFF737D8FLL) + ((2 * (void)&a43) & 0x10) + (a3 ^ 0x62) + 16);
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * (int)(a3 ^ 0x62)))(*(void *)(v59 + 8 * (int)(a3 ^ 0x62)), a18, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_10003B25C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned char *a21)
{
  int v24 = *(unsigned char **)(v23 + 96);
  v24[1167] = a21[19];
  v24[1166] = a21[18];
  v24[1165] = a21[17];
  v24[1164] = a21[16];
  v24[1163] = a21[15];
  v24[1162] = a21[14];
  v24[1161] = a21[13];
  v24[1160] = a21[12];
  v24[1159] = a21[11];
  v24[1158] = a21[10];
  v24[1157] = a21[9];
  v24[1156] = a21[8];
  v24[1155] = a21[7];
  v24[1154] = a21[6];
  v24[1153] = a21[5];
  v24[1152] = a21[4];
  v24[1151] = a21[3];
  v24[1150] = a21[2];
  v24[1149] = a21[1];
  v24[1148] = *a21;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v22
                                                     + 8
                                                     * (((*(_DWORD *)(v23 + 72) == ((5 * ((3 * (v21 ^ 0x3AD)) ^ 0x667)) ^ 0x396 ^ (a3 + 682)))
                                                       * ((5 * ((3 * (v21 ^ 0x3AD)) ^ 0x667)) ^ (a6 + 239) ^ (a6 + 504))) ^ (5 * ((3 * (v21 ^ 0x3AD)) ^ 0x667)))))(a5, a2);
}

uint64_t sub_10003B37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7
                                                              + 8
                                                              * (int)((((a5 + ((v6 + 1854773856) & 0x9172630D) - 290) ^ (v6 + 2077752270) & 0xD66CFFBB)
                                                                     * (v5 == 63)) ^ v6)))(a1, a2, -182238939);
}

uint64_t sub_10003B3DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * ((467 * (((2 * a8) ^ 0x840E9A39) + v8 < 0xFFFFFFBF)) ^ a8)))(a1, a2, a3, a4, a5, a6, a7, 3768594595);
}

uint64_t sub_10003B424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  return (*(uint64_t (**)(void))(v36 + 8 * (((v35 > 0xE4D5C49E) * ((a35 & 0x2445F67) + 500)) ^ 0x164)))();
}

uint64_t sub_10003B47C@<X0>(int a1@<W8>)
{
  int v10 = v5 + 1;
  BOOL v11 = v1 < v2;
  *(_DWORD *)(*v4 + 4 * (v10 + v6)) = *(_DWORD *)(*v4 + 4 * (a1 + v10));
  if (v11 == v10 + v7 < v2) {
    BOOL v11 = v10 + v7 < v1;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((v11 * v8) ^ v3)))();
}

uint64_t sub_10003B484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (v8 + 2 * (*(_DWORD *)(v9 + 48 * (v7 + a6)) != (((v8 - 485) | 0x118) ^ 0x47113800)))))();
}

uint64_t sub_10003B4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v18 - 120) = a14;
  *(void *)(v18 - 104) = v17;
  *(_DWORD *)(v18 - 112) = v14 + ((2 * ((v18 - 128) & 0x571A4B78) - (v18 - 128) - 1461341051) ^ 0x1271CCE7) * v16 + 312;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v14 + 868)))(v18 - 128);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((88 * (*(_DWORD *)(v18 - 128) - 1263233869 >= ((v14 + 72) ^ 0xC5B96D0F))) ^ v14)))(v19);
}

uint64_t sub_10003B56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * ((963 * ((a19 & 0xFFFFFFF0) == a8 + 56 * (v19 ^ (v20 - 5)) + 964)) ^ (v22 + v19 + 910))))();
}

uint64_t sub_10003B5B4()
{
  BOOL v3 = v0 == ((v1 - 1285) ^ 0x6E832F571939B795);
  return (*(uint64_t (**)(void))(v2 + 8 * (((4 * v3) | (16 * v3)) ^ v1)))();
}

uint64_t sub_10003B5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 1759421093 * ((~((v19 - 128) | 0xA2768E83) + ((v19 - 128) & 0xA2768E83)) ^ 0xEEF4C128);
  *(_DWORD *)(v19 - 112) = v15 - v20 - 347;
  *(_DWORD *)(v19 - 128) = v16 - v20 + ((v15 - 1334) ^ 0xDBEF611F);
  *(void *)(v19 - 120) = v18;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0xCC8)))(v19 - 128);
  *(void *)(v19 - 120) = a14;
  *(void *)(v19 - 104) = a13;
  *(_DWORD *)(v19 - 112) = v15 - 1334 + ((v19 - 128) ^ 0xBA947862) * v17 + 1574;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 796)))(v19 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v19 - 128) > 0x4B4B6B4Bu)
                                              * ((v15 - 1334) ^ 0x655 ^ (v15 - 1334) ^ 0x30A ^ 0x568)) ^ (v15 - 1334))))(v21);
}

uint64_t sub_10003B6F8(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  BOOL v43 = a39 != a2 || v41 != a4 + ((v39 + 584779665) & 0xDD24F7FF) - 1003;
  return (*(uint64_t (**)(void))(v40 + 8 * ((308 * v43) ^ v39)))();
}

uint64_t sub_10003B748(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((v5 + 722) ^ 0xB1) - 679) * (a4 == 0)) ^ (v5 + 722))))();
}

uint64_t sub_10003B774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26)
{
  return sub_10003B7F8(2801639823, (a18 & 0xA8B12FF9 ^ 0xEEFFF18F ^ (a26 + (v26 ^ v27))) + 2004605918 + ((2 * (a26 + (v26 ^ v27))) & 0xDDFFECCC), (((a24 ^ v27) + a25) ^ 0x5DB64F77) - 335562288 + ((2 * ((a24 ^ v27) + a25)) & 0xBB6C9EEE));
}

uint64_t sub_10003B7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, unsigned int a19)
{
  BOOL v21 = a19 < 0x5D4FAC91;
  unsigned int v22 = v19 - 2025 + a3 + 328835914;
  int v23 = v21 ^ (v22 < 0x5D4FAC91);
  BOOL v24 = v22 < a19;
  if (!v23) {
    BOOL v21 = v24;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8 * ((!v21 * ((7 * (v19 ^ 0x7A6)) ^ 0xDC0)) ^ v19)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

void sub_10003B870()
{
}

uint64_t sub_10003BC14()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((291
                                * ((((*(unsigned __int8 *)(v2 + 1) - 134) << (((v3 ^ 8) - 66) ^ 0xBD)) & v0)
                                 + ((*(unsigned __int8 *)(v2 + 1) - 134) ^ v1) == v1)) ^ v3 ^ 8)))();
}

void sub_10003BC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned char *a9)
{
  unsigned int v12 = v10 - ((2 * v10 + 732830558) & 0xA7400726) + 1769410882;
  *a9 = (HIBYTE(v12) ^ 0xD3) - ((v11 + 113) & (2 * (HIBYTE(v12) ^ 0xD3))) - 21;
  a9[1] = (BYTE2(v12) ^ 0xA0) - 2 * ((BYTE2(v12) ^ 0xA0) & 0xEF ^ BYTE2(v12) & 4) - 21;
  a9[2] = (BYTE1(v12) ^ 3) - 2 * ((BYTE1(v12) ^ 3) & 0xEF ^ BYTE1(v12) & 4) - 21;
  a9[3] = v12 ^ 0x78;
  uint64_t v13 = v9 - ((2 * v9) & 0x4B140C17DEC41458) + 0x258A060BEF620A2CLL;
  a9[4] = (HIBYTE(v13) ^ 0x25) - ((2 * (HIBYTE(v13) ^ 0x25)) & 0xD6) - 21;
  a9[5] = (BYTE6(v13) ^ 0x8A) + (~(2 * (BYTE6(v13) ^ 0x8A)) | 0x29) - 20;
  a9[6] = (BYTE5(v13) ^ 6) - ((2 * (BYTE5(v13) ^ 6)) & 0xD6) - 21;
  a9[7] = (BYTE4(v13) ^ 0xB) - 2 * ((BYTE4(v13) ^ 0xB) & 0xEF ^ BYTE4(v13) & 4) - 21;
  a9[8] = (((v9 - ((2 * v9) & 0xDEC41458) - 278787540) >> 24) ^ 0xEF)
        - ((2 * (((v9 - ((2 * v9) & 0xDEC41458) - 278787540) >> 24) ^ 0xEF)) & 0xD6)
        - 21;
  a9[9] = (BYTE2(v13) ^ 0x62) - 2 * ((BYTE2(v13) ^ 0x62) & 0xEF ^ BYTE2(v13) & 4) - 21;
  a9[10] = (BYTE1(v13) ^ 0xA) - ((2 * (BYTE1(v13) ^ 0xA)) & 0xD6) - 21;
  a9[11] = (v9 - ((2 * v9) & 0x58) + 44) ^ 0xC7;
  sub_100023548();
}

uint64_t sub_10003BE0C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  *(_DWORD *)(a28 + 4 * a6) = v28;
  int v31 = a6 + 1 + a4;
  BOOL v33 = v31 >= a7 || v31 <= a5;
  return (*(uint64_t (**)(void))(v30 + 8 * ((v33 * a8) ^ v29)))();
}

uint64_t sub_10003BE3C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((v2 + 240) | 0x186) - 585) ^ ((v2 - 210) | 0x100)) * (v0 != v1)) ^ v2)))();
}

uint64_t sub_10003BE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * ((574 * (v6 + 1 == v10 + 32)) ^ v7)))(a1, a2, v8, a4, a5, a6, v8, v11);
}

uint64_t sub_10003BF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27,uint64_t a28,int a29,uint64_t a30,uint64_t a31)
{
  int v39 = (v31 - 1584) ^ 0x442;
  int v38 = (v31 - 1584) | 0x652;
  uint64_t v33 = *(void *)(a19 + 8);
  unsigned int v34 = 628203409
      * ((((&a24 | 0x15ED8BC0) ^ 0xFFFFFFFE) - (~&a24 | 0xEA12743F)) ^ 0x689A780C);
  int v35 = -1178884666 - v34 + *(_DWORD *)(a19 + 4);
  a26 = v31 - v34 + 295;
  a27 = v35;
  a24 = a16;
  a25 = a14;
  a30 = v33;
  a31 = a15;
  a28 = a17;
  int v37 = v31;
  (*(void (**)(uint64_t *))(v32 + 8 * (v31 + 739)))(&a24);
  return (*(uint64_t (**)(uint64_t))(v32 + 8 * (((a29 == (v39 ^ 0x1F5F6FCD)) * (v38 - 1241)) ^ v37)))(2411756756);
}

uint64_t sub_10003C088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v15 = v12 < v8;
  int v16 = v9 + 1;
  *(unsigned char *)(*v14 + (v16 + a8)) = -21;
  unsigned int v17 = v16 + v10 + ((v11 - 1538) | 0x228);
  int v18 = v15 ^ (v17 < v8);
  BOOL v19 = v17 < v12;
  if (!v18) {
    BOOL v15 = v19;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((8 * v15) | (16 * v15) | v11)))();
}

uint64_t sub_10003C0EC()
{
  BOOL v4 = v1[5] == 0x3BC303ACCBD26FD1 || (*v1 | v1[3]) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * ((v0 ^ 0x75B) - 1029)) ^ v0)))();
}

uint64_t sub_10003C140()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((2687
                                * (*(_DWORD *)(v0 + 4 * (v2 + v4 - 1)) == ((v3 + 5 * (v1 ^ 0x37D) - 767) ^ v1 ^ 0x7A))) ^ v1)))();
}

uint64_t sub_10003C190()
{
  int v3 = v1 + ((v2 - 243) | 0x124) - ((((v2 + 1082) ^ 0x3B7) + 1740100814) & (2 * v1 + 732830558)) + 1236466259;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((14 * (((2 * v3) & 0xE3FD3F5E ^ 0x63B51B40) + (v3 ^ 0xC225724F) - 4325517 == 1908186914)) ^ (v2 + 1082))))();
}

uint64_t sub_10003C230@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8 * ((((a2 ^ 0x798) + 3978) * (v3 == v4)) ^ a2)))(a1, v2);
}

uint64_t sub_10003C264(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((38 * (((**(unsigned char **)(a2 + 8) == 0) ^ 0xE5) & 1)) ^ 0x685u)))();
}

uint64_t sub_10003C2BC@<X0>(uint64_t a1@<X8>)
{
  BOOL v14 = v13 > v6;
  uint64_t v15 = 4 * (v9 + v7);
  int v16 = v1 - 423212696 + (*(_DWORD *)(*(void *)(v12 - 0x139154EEB4327E8) + v15) ^ v8);
  *(_DWORD *)(*(void *)(a1 - 0x139154EEB4327E8) + v15) = v16 + v8 - (v11 & (2 * v16));
  int v17 = v9 + 1 + v3;
  LODWORD(v15) = v14 ^ (v17 < v4);
  BOOL v18 = v17 < v5;
  if (!v15) {
    BOOL v14 = v18;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * (int)((248 * v14) ^ (v2 + 1715858056) & 0x99BA1577)))();
}

uint64_t sub_10003C3B4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((46
                                * (v2 - a1 >= (unint64_t)(v3 + (a2 ^ (v4 + 1741)) + 1364) - 1340)) ^ a2)))();
}

uint64_t sub_10003C3F0(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 ^ 0x486) - 862) * ((a2 + a1 - 2139086815) < 8)) ^ v2)))();
}

void sub_10003C460()
{
}

uint64_t sub_10003C484(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1860
                                * ((v4 & (2 * (*(unsigned __int8 *)(a2 + 5) - 242)))
                                 + ((*(unsigned __int8 *)(a2 + 5) - 242) ^ (((a3 - 1082151348) & 0xD7D6FF3D) - 1535063227)) == v5)) ^ a3)))();
}

uint64_t sub_10003C4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8 * ((59 * (a8 + 1 != v11 + 20)) ^ a6)))(v9, a2, v8);
}

uint64_t sub_10003C5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32
                                                                       + 8
                                                                       * (int)(((a32 - 713989013 < (a3 - 21))
                                                                              * ((a3 + 23) ^ 0xF2)) ^ (a3 + 866))))(a1, a2, a3, a4);
}

uint64_t sub_10003C5F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v37 = (_DWORD *)(a27 + 24 * v31);
  _DWORD *v37 = v35;
  v37[1] = v32;
  *(void *)(v33 + 24 * v31 + 16) = a7;
  v37[4] = HIDWORD(a29);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((((*(_DWORD *)(a3 + 48 * v36 + 32) + 1541543622) < 0x80000003) * ((a9 + 1140) ^ 0x34C)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_10003C66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((255 * (a14 == ((v14 + ((v15 - 1385) | 0x346) - 189) ^ ((v15 - 982) | 0x402)))) ^ v15)))();
}

void sub_10003C6B4()
{
}

uint64_t sub_10003C888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,unsigned int a26)
{
  return sub_10003C8A4(a1, a2, a26);
}

void sub_10003C8A4()
{
}

uint64_t sub_10003C984()
{
  unsigned int v4 = ((v3 + 829) ^ 0xADE96592 ^ (v3 + 904485718) & 0xCA16A5B5) + v1;
  BOOL v5 = v4 < 0xF2628EFA;
  BOOL v6 = v2 - 228421894 < v4;
  if (v2 > 0xD9D7105 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((67 * v6) | v3)))();
}

uint64_t sub_10003CA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10003CA1C(a1, a2, a3, a4, 0, a6, v7 & 0xFFFFFFE0, (v8 + v6));
}

uint64_t sub_10003CA1C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7, int a8)
{
  uint64_t v13 = (a4 + v11 - a5);
  long long v14 = *(_OWORD *)(v10 + v13 - 15);
  long long v15 = *(_OWORD *)(v10 + v13 - 31);
  uint64_t v16 = v9 + v13;
  *(_OWORD *)(v16 - 15) = v14;
  *(_OWORD *)(v16 - 31) = v15;
  return (*(uint64_t (**)(void))(v8 + 8 * (((a5 + (a8 | 2) - 674 == a7) * v12) ^ (a8 + 1004))))();
}

void sub_10003CA68()
{
}

uint64_t sub_10003CA9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(_DWORD *)(*(void *)(a1 + 8) + v4) == (v2 & 0x47F01FB9) + 1006 + v3)
                                * ((v2 & 0x47F01FB9 ^ 0x7DA) - 1545)) ^ v2 & 0x47F01FB9)))();
}

uint64_t sub_10003CAE4@<X0>(int a1@<W8>)
{
  if (v2 + a1 >= 0) {
    unsigned int v4 = v2 + a1;
  }
  else {
    unsigned int v4 = -(v2 + a1);
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 - 597969673) & 0x23A447F4) - 137) * (v4 > 0x82)) ^ v1)))();
}

uint64_t sub_10003CB24(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v11 = v10 + (a3 ^ a5) + *(unsigned __int8 *)(a2 + 9) - 432;
  BOOL v13 = (v8 & (2 * v11)) + (v11 ^ v9) == v9 && (v6 + v5 + 4) < 0xC9;
  return (*(uint64_t (**)(void))(v7 + 8 * ((2520 * v13) ^ a3)))();
}

uint64_t sub_10003CB78(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(v6 + 8 * (v7 + 1590)))(a1, 0);
  if (result == 16)
  {
    v3 += 7;
    goto LABEL_7;
  }
  if (result == 12)
  {
LABEL_7:
    uint64_t result = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v4 ^ 0xA26)))(a1);
    int v10 = v3;
    goto LABEL_8;
  }
  if (result)
  {
    v3 += 6;
    goto LABEL_7;
  }
  *int v5 = a1;
  int v10 = -1049201532;
LABEL_8:
  *(_DWORD *)(v1 + 12) = v10 ^ v2;
  return result;
}

uint64_t sub_10003CC00@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((2687
                                * (*(_DWORD *)(*(void *)(a1 - 0x139154EEB4327E8) + 4 * (v2 + v4 - 1)) == ((v3 + 5 * ((v1 + 118) ^ 0x37D) - 767) ^ (v1 + 118) ^ 0x7A))) ^ (v1 + 118))))();
}

uint64_t sub_10003CC70()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((861 * (((v1 - 899) & v0) == 0)) ^ (v1 - 791))))((v1 - 123));
}

void jEHf8Xzsv8K(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

void sub_10003CCE0(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x139154EEB4327ECLL) = (((v3 + v2) * (v1 - 674146141)) ^ 0x77FDFFFB)
                                        - 272646466
                                        + ((2 * (v3 + v2) * (v1 - 674146141)) & 0xEFFBFFF6);
}

uint64_t sub_10003CD6C(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((a3 + a1 + (((v3 - 1090) | 0x44) ^ 0x9A148210) > 7) * (((v3 - 1617) | 1) ^ 0x2DB)) ^ v3)))();
}

uint64_t sub_10003CDF0(uint64_t a1, int a2)
{
  return sub_10004FD14(a1, a2);
}

uint64_t sub_10003CE00@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14)
{
  a10 = (v14 + 435) ^ ((((&a10 ^ 0xED2B6ED0) & 0x4F44989 | ~(&a10 ^ 0xED2B6ED0 | 0x4F44989)) ^ 0x7BD4C0AF)
                     * v15);
  a11 = (uint64_t)&a7 + a1 + 4;
  a12 = a5;
  uint64_t v17 = (*(uint64_t (**)(unsigned int *))(v16 + 8 * (v14 + 1766)))(&a10);
  return sub_100035790(v17, v18, v19, v20, v21, v22, v23, v24, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_10003CE78@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  int v5 = a2 - 188;
  (*(void (**)(void, uint64_t, void))(v3 + 8 * (a2 + 1519)))(*v7, a1, ((a2 - 188) ^ 0xDBF12492) + v8);
  *(_DWORD *)(v4 - 200) = (v5 + 2138962848) ^ (535753261
                                             * ((1828448706 - ((v4 - 200) | 0x6CFBE9C2) + ((v4 - 200) | 0x9304163D)) ^ 0x99F01812));
  uint64_t result = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v5 ^ 0xB46)))(v4 - 200);
  *(_DWORD *)(v2 + 36) = v9;
  return result;
}

uint64_t sub_10003CF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v6 = v3 == ((v4 + 1988889500) & 0x8973F38C ^ 0x1F5F6803);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8 * ((v6 | (2 * v6)) ^ (v4 - 215))))(a1, a2, a3, 3768594526);
}

uint64_t sub_10003CFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((104 * ((a8 + 1 + v9) < 0x30)) ^ v8)))();
}

void sub_10003D090()
{
}

uint64_t sub_10003D09C()
{
  int v5 = *(unsigned __int8 *)(v0 + v3 - 0x7AC82A126901FFA0)
     - (*(unsigned __int8 *)(v1 + v3 - 0x7AC82A126901FFA0) ^ 0xEB);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((3095
                                * ((v5 ^ 0xF9FDE26) + ((940 * (v2 ^ 0x4A4)) ^ 0xF47DF758) + ((2 * v5) & 0x1F3FBC4C) == 69062182)) ^ v2)))();
}

uint64_t sub_10003D130()
{
  unsigned int v3 = LODWORD(STACK[0x58C]) + 1247770102;
  int v4 = ((v1 + 1288164705) < 0xC8B94159) ^ (v3 < (v0 ^ 0xC8B94088));
  BOOL v5 = v3 < v1 + 1288164705;
  if (v4) {
    BOOL v5 = (v1 + 1288164705) < 0xC8B94159;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v5 * ((v0 + 405) ^ 0x362)) ^ v0)))();
}

uint64_t sub_10003D1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((234
                                * (((*(_DWORD *)(v9 + v10 * (uint64_t)a8 + 32) == a6) ^ (3 * (v8 ^ 0xA6))) & 1)) ^ v8)))();
}

uint64_t sub_10003D1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  unsigned int v38 = v35 + v34 + 562855979;
  if (v38 <= 0x40) {
    int v39 = 64;
  }
  else {
    int v39 = v38;
  }
  BOOL v40 = !__CFADD__(v38 - 1, v36 + v39);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((((v33 ^ 6) - 1831) * v40) ^ v33)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

void sub_10003D238(uint64_t a1)
{
  int v1 = 235795823 * (((a1 | 0x1A7DF74B) - (a1 | 0xE58208B4) - 444462924) ^ 0x8ED0BE12);
  int v2 = *(_DWORD *)(a1 + 40) ^ v1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 56);
  int v6 = *(_DWORD *)(a1 + 64) - v1;
  unsigned int v7 = 1374699841 * ((2 * (&v9 & 0x59A7A858) - &v9 + 643323809) ^ 0x4BAC4FA8);
  unsigned int v14 = ((*(_DWORD *)a1 ^ v1) - ((2 * (*(_DWORD *)a1 ^ v1) - 1169784626) & 0xE44E73D0) + 1330281039) ^ v7;
  uint64_t v15 = v3;
  int v16 = v6 - v7 - 2 * ((v6 + 51074400) & 0x23381E15 ^ v6 & 0x14) + 641954657;
  int v10 = v7 ^ (v2 + 1695027287);
  uint64_t v9 = v5;
  uint64_t v13 = v4;
  uint64_t v11 = v5;
  int v8 = (char *)*(&off_10007DD80 + v2 - 13) - 4;
  (*(void (**)(uint64_t *))&v8[8 * (v2 ^ 0x98B)])(&v9);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10003D408()
{
  int v4 = 628203409 * ((2 * ((v3 - 200) & 0x58898618) - (v3 - 200) + 662075876) ^ 0xA5FE75D7);
  *(void *)(v3 - 200) = STACK[0x650];
  *(_DWORD *)(v3 - 192) = v4 + (v1 ^ 0x332) - 497;
  *(_DWORD *)(v3 - 188) = v0 - v4 - 813338398;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 ^ 0xFA3)))(v3 - 200);
  return ((uint64_t (*)(uint64_t))STACK[0x5E8])(v5);
}

uint64_t sub_10003D4AC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 + v0 - 268107771 < ((v2 - 1641) ^ 0xCCu)) * (v2 ^ 0x73D)) ^ v2)))();
}

uint64_t sub_10003D50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  uint64_t v41 = *(void *)(v38 + 344);
  STACK[0x480] = 335;
  *(unsigned char *)(v41 + 335) = (a38 + ((-88 * (v39 ^ 0x59)) ^ 0x3A) - 89) * (a38 ^ 0xBA);
  return (*(uint64_t (**)(void))(v40 + 8 * (((4 * (STACK[0x480] != 0)) | (32 * (STACK[0x480] != 0))) ^ v39 ^ 0x69D)))();
}

uint64_t sub_10003D590()
{
  return 4294925278;
}

uint64_t sub_10003D598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  return (*(uint64_t (**)(void))(v36 + 8 * ((52 * (v38 >= (a36 & 0x68D46FD ^ 0x22906D22u))) ^ (v37 - 40560973))))();
}

void sub_10003D5EC()
{
}

uint64_t sub_10003D618()
{
  unint64_t v0 = STACK[0x3F0];
  unint64_t v1 = STACK[0x290];
  STACK[0x3E0] = STACK[0x290] + 2353;
  STACK[0x3D8] = v0 + 49;
  STACK[0x3D0] = v1 + 2333;
  STACK[0x3C8] = v0 + 29;
  STACK[0x3B8] = v1 + 2313;
  STACK[0x3B0] = v0 + 9;
  return sub_100045688();
}

uint64_t sub_10003D6A0@<X0>(int a1@<W8>)
{
  BOOL v3 = (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ 0xE4A)))(a1 ^ 0x1F5F6FDB ^ (v1 - 1863) ^ 0x45Cu) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 * (((v1 - 1863) | 0x845) ^ 0x879)) ^ v1)))();
}

uint64_t sub_10003D708@<X0>(void *a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W8>)
{
  *(unsigned char *)(*a1 + a4 + a5 + (a2 ^ 0x14Bu) - 14) = ((a3 ^ v7) >> v8) - ((2 * ((a3 ^ v7) >> v8)) & 0xD6) - 21;
  return (*(uint64_t (**)(void))(v5 + 8 * (a2 ^ (3096 * (a4 - 1 == v6)))))();
}

uint64_t sub_10003D768()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v0 + 236) | (32 * (STACK[0x5C0] != 0)))))();
}

uint64_t sub_10003D78C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (((((v1 - 1185) | 0x10) - 194) * (v2 == 1559351648)) ^ (v1 - 1197))))();
}

void Fc3vhtJDvr(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a4) {
    BOOL v5 = a5 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = v5;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10003D868()
{
  STACK[0x5E0] = STACK[0x380];
  return ((uint64_t (*)(void))STACK[0x3D0])();
}

uint64_t sub_10003D880@<X0>(int a1@<W8>)
{
  int v9 = a1 - 1895;
  unint64_t v10 = STACK[0x460];
  int v11 = STACK[0x5A0];
  int v12 = ((LODWORD(STACK[0x5A0]) << (v9 ^ 0x42)) + 937577764) & 0x46703C02;
  unsigned int v13 = 1374699841 * ((~(v6 | 0x6602CE5C) + (v6 & 0x6602CE5C)) ^ 0xF40929AA);
  v1[4] = v4;
  *int v1 = v10;
  *(_DWORD *)(v8 - 192) = (v9 + 1695027129) ^ v13;
  *(_DWORD *)(v8 - 160) = (v3 - ((2 * v3 + 959456088) & 0xE44E73D0) + 247417748) ^ v13;
  v1[6] = v2;
  *(_DWORD *)(v8 - 144) = v11 - v13 - v12 + 2133410963;
  v1[2] = v5;
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(v7 + 8 * (v9 ^ 0x86D)))(v8 - 200);
  LODWORD(STACK[0x5D8]) = *(_DWORD *)(v8 - 176);
  return sub_10004AD78(v14);
}

uint64_t sub_10003D984@<X0>(unint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, unsigned int a7@<W6>, void *a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v42 = 4 * (a6 + 1 + a5);
  unint64_t v43 = (*(_DWORD *)(a29 + v42) ^ v29) + (a4 ^ HIDWORD(a1)) + a7 * (unint64_t)(*(_DWORD *)(*a8 + v42) ^ v29);
  unint64_t v44 = HIDWORD(v39)
      + v34 * (unint64_t)(*(_DWORD *)(*v37 + v42) ^ v29)
      + ((v43 + a2 - (((v41 + 294) ^ a9) & (2 * v43))) ^ v38);
  *(_DWORD *)(a29 + 4 * (a6 + a5)) = v44 + v29 - (v30 & (2 * v44));
  if (v36 > v33 != a6 + a3 < v31) {
    BOOL v45 = v36 > v33;
  }
  else {
    BOOL v45 = a6 + a3 < v40;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((!v45 * v32) ^ v41)))();
}

uint64_t sub_10003DA3C@<X0>(unsigned int a1@<W1>, int a2@<W2>, int a3@<W5>, int a4@<W6>, uint64_t a5@<X8>)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((a5 + 223 * (v5 ^ a1) == 1134) * ((v5 + a2) & a3 ^ a4)) ^ v5)))();
}

uint64_t sub_10003DA78(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((629 * (v4 + 1 == v6 + 64)) ^ a4)))();
}

void sub_10003DB38()
{
}

uint64_t sub_10003DB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * ((((v5 - 40559706) ^ 0x74B ^ (76 * (v5 ^ (v5 + 7))))
                                                                                  * (v4 <= 0xD2EEE1BE)) ^ (v5 - 40560549))))(a1, a2, a3, a4, 40561189);
}

uint64_t sub_10003DBB4@<X0>(int a1@<W1>, int a2@<W3>, unsigned int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((*(unsigned __int8 *)(v3 + (a1 + v4 - 1 - 1)) == (((a3 - 85) | 0xA7) + 44))
                                * a2) ^ a3)))();
}

uint64_t sub_10003DBFC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9)
{
  BOOL v11 = a9 < 0x33CC802C;
  if (v11 == v9 - 783700472 < ((a1 - 1249014558) & 0x4A726DFAu) + 869040122) {
    BOOL v11 = v9 - 783700472 < a9;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * (((4 * !v11) | (8 * !v11)) ^ a1)))();
}

uint64_t sub_10003DC84@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  unsigned int v56 = *(_DWORD *)(&a39 + ((v54 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v54 + a2)) = ((v56 >> (v52 + 28)) ^ 0xDB)
                                            - ((2 * ((v56 >> (v52 + 28)) ^ 0xDB)) & 0xD6)
                                            - 21;
  *(unsigned char *)(a1 + (v54 + a2 + 1)) = (BYTE2(v56) ^ 0xD1)
                                                - 2 * ((BYTE2(v56) ^ 0xD1) & 0xEF ^ BYTE2(v56) & 4)
                                                - 21;
  *(unsigned char *)(a1 + (v54 + a2 + 2)) = (BYTE1(v56) ^ 0x5B)
                                                - 2 * ((BYTE1(v56) ^ 0x5B) & 0xEF ^ BYTE1(v56) & 4)
                                                - 21;
  *(unsigned char *)(a1 + (v54 + a2 + 3)) = v56 ^ 0x25;
  BOOL v57 = v54 - 1242569786 < (a51 + 1907131667);
  if (v54 - 1242569786 < v51 != a51 + 1907131667 < v51) {
    BOOL v57 = a51 + 1907131667 < v51;
  }
  return (*(uint64_t (**)(void))(v55 + 8 * ((v57 * v53) ^ v52)))();
}

uint64_t sub_10003DD78@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((12 * ((v1 - 14968390) & 0xE463CB ^ 0x13A)) ^ 0x55E)
                                * ((a1 - 1535022908) > 0x7FFFFFFE)) ^ v1)))();
}

uint64_t sub_10003DDDC(uint64_t a1)
{
  int v2 = 1374699841 * (a1 ^ 0x6DF41809);
  int v3 = *(_DWORD *)(a1 + 8) ^ v2;
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)a1;
  unsigned int v8 = 1224239923 * ((((2 * &v10) | 0x912C61DA) - &v10 + 929681171) ^ 0x3A25CD3A);
  int v11 = ((*(_DWORD *)(a1 + 56) + v2) ^ 0x1AC2E1FE)
      - v8
      + ((2 * (*(_DWORD *)(a1 + 56) + v2)) & 0x73F5FFFE ^ 0x42703C02)
      + 2121256946;
  unsigned int v16 = v3 - 1695026343 + v8;
  uint64_t v13 = v4;
  uint64_t v14 = v6;
  uint64_t v10 = v7;
  uint64_t v12 = v5;
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_10007DD80 + (v3 & 0x2F2A498))
                                                + 8 * (v3 ^ 0x650819EC)
                                                - 4))(&v10);
  *(_DWORD *)(a1 + 24) = v15;
  return result;
}

uint64_t sub_10003DF3C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 64) = *(void *)(a2 + 8);
  return 0;
}

void sub_10003DF54(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  int v2 = (char *)*(&off_10007DD80 + (v1 ^ 0x51A)) - 4;
  uint64_t v3 = *(void *)&v2[8
                    * ((((*(uint64_t (**)(uint64_t))&v2[8 * v1 + 7256])(32) == 0) * (((v1 + 14) | 2) - 1410)) | v1)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10003DFF8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1995 * (v2 == v1 + v0 - 823 + ((v0 + 940159993) & 0xC7F64BFF) - 972)) ^ v0)))();
}

uint64_t sub_10003E04C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a1 ^ 0x593) + 7) ^ 0x261) * (v2 == v1)) ^ a1)))();
}

void sub_10003E0A0(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10003E0EC()
{
  return sub_100032814();
}

uint64_t sub_10003E0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v53 = *(void *)(v49 + 24);
  *(int8x16_t *)(v52 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(v49 + 16) - 0x6D40EE9100C99969), (int8x16_t)xmmword_1000740C0);
  if (v50) {
    BOOL v54 = v53 == 0x7785963AF3444772;
  }
  else {
    BOOL v54 = 1;
  }
  int v55 = v54;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8 * (int)((46 * v55) ^ a5)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_10003E168@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((23 * (*v1 == ((a1 - 873407617) & 0x340F1FAD ^ 0x30D))) | a1)))();
}

uint64_t sub_10003E1B4@<X0>(int a1@<W1>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a2 - 494) ^ (a2 - 492)) * (v2 == a1)) ^ a2)))();
}

uint64_t sub_10003E1E4()
{
  BOOL v10 = v3 > 0x694BF961;
  uint64_t v11 = (v6 - 1845490069);
  *(unsigned char *)(v8 + v11) = *(unsigned char *)(*(void *)(v7 + 8 * (v1 & 0x2371D17D)) + (v11 & 0xF) - 4) ^ *(unsigned char *)(v0 + v11) ^ (23 * ((v6 + 107) & 0xF)) ^ *(unsigned char *)(*(void *)(v7 + 8 * (v1 ^ 0x6EA)) + (v11 & 0xF) - 8) ^ *(unsigned char *)(*(void *)(v7 + 8 * (v1 - 1638)) + (v11 & 0xF) - 3);
  LODWORD(v11) = v1 - 321 + v6 + 682889084;
  int v12 = v10 ^ (v11 < v2);
  BOOL v13 = v11 < v4;
  if (!v12) {
    BOOL v10 = v13;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((v10 * v5) ^ v1)))();
}

uint64_t sub_10003E2A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  unint64_t v41 = STACK[0x290] + 2048;
  LODWORD(STACK[0x5D0]) = 2;
  STACK[0x600] = 0;
  LODWORD(STACK[0x5A4]) = 0;
  LODWORD(STACK[0x4EC]) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * (((((a8 - 1890) & v39) == 0) * (((a8 - 655651177) & 0x27146E5F) - 1092)) ^ a8)))(a1, a2, a3, a4, a5, v41, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_10003E308()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v1 - 1846183468) & 0x6E0A85FB ^ (41 * (v0 > 1)))))();
}

uint64_t sub_10003E428@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(v5 - 220 + a2 + a1) = 0xEBEBEBEBEBEBEBEBLL;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v3 & 0x38) == 8) * (((v2 - 585474134) & 0x22E5A1C6) - 232)) ^ v2)))();
}

uint64_t sub_10003E480(uint64_t a1, uint64_t a2)
{
  *uint64_t v4 = v4[623];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8 * ((455 * (v3 != 328438041)) ^ v2 ^ 0x63)))(a1, a2, 4251303770);
}

void sub_10003E4D0(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10003E538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                + 8
                                                                                * (((4
                                                                                   * (((v5 == 0) ^ (79 * (v6 ^ 0x14) + 1)) & 1)) & 0xF7 | (8 * (((v5 == 0) ^ (79 * (v6 ^ 0x14) + 1)) & 1))) ^ v6)))(a1, a2, a3, a4, a5);
}

uint64_t sub_10003E580()
{
  return sub_10003E5A0(((v1 + v0 - 291) & 0x1FFFFFFF0) + 1922694427);
}

uint64_t sub_10003E5A0@<X0>(uint64_t a1@<X4>, uint64_t a2@<X7>, unsigned int a3@<W8>)
{
  *(int8x16_t *)(a1 + (v3 + v6 + v4)) = vaddq_s8(vsubq_s8(*(int8x16_t *)(a2 + v4), vandq_s8(vaddq_s8(*(int8x16_t *)(a2 + v4), *(int8x16_t *)(a2 + v4)), v8)), v9);
  return (*(uint64_t (**)(void))(v7 + 8 * (int)((399 * ((a3 ^ 0x436) + v4 == v5)) ^ a3)))();
}

void sub_10003E5F4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 535753261 * (a1 ^ 0xAF40E2F);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10003E674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * (int)(((((v8 + 161746698) ^ 0x9A4113B) + ((v8 + 161746698) & 0xF65BEE7F) - 2311) * (v7 == v9)) ^ v8)))(a1, a2, a3, a4, a5, a6, a7, v10);
}

uint64_t sub_10003E6BC()
{
  unint64_t v3 = STACK[0x258];
  unint64_t v4 = STACK[0x530];
  STACK[0x470] = *(void *)(v2 + 8 * (v1 - 1077));
  STACK[0x5E0] = v0 + 112;
  STACK[0x528] = v4;
  if (v4) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = v5;
  return (*(uint64_t (**)(void))(v2 + 8 * ((496 * v6) ^ (4 * (v1 ^ 0x564)))))();
}

void sub_10003E6F8()
{
}

uint64_t sub_10003E700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  unsigned int v16 = v14 + 1363 + (a13 ^ v13) - ((v14 ^ 0xD7986966) & (2 * (a13 ^ v13))) - 338940397;
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((63 * (((2 * v16) & 0xBF57FFBE ^ 0x97106BA8) + (v16 ^ 0xB467CA2B) - 34946 != 1605072733)) ^ v14)))();
}

uint64_t sub_10003E788(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                                           + 8 * (((a6 + 3370 + v7 + ((a6 + 2698) ^ a2)) * (v8 == a5)) ^ (a6 + 2698))))(0);
}

uint64_t sub_10003E7BC(uint64_t a1)
{
  LODWORD(STACK[0x5D8]) = v2 + 97;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * (((v3 != 0) * ((((v1 + 1049) ^ 0x6E7) - 75) ^ (v1 + 446))) ^ (v1 + 634))))(a1, v3);
}

void sub_10003E7CC(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10003E830@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8 * (((((v4 + a1 == 1) ^ (a3 + 105 + v3)) & 1) * a2) ^ (a3 + 105))))();
}

uint64_t sub_10003E868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v10 = (a6 + 170801340) & 0xF5D1C5DF;
  int v11 = (v10 - 566770496) & 0x21C83EFE;
  void *v7 = a1;
  *uint64_t v6 = v16 ^ 0x1F5F6B1A ^ v10;
  unsigned int v12 = (v11 + 490337891) & 0xE2C607EF;
  uint64_t v19 = v14;
  unsigned int v18 = v11 + (v17 ^ 0xAF40E2F) * v8 + 227;
  (*(void (**)(unsigned char *))(v9 + 8 * (v11 ^ 0xCA9)))(v17);
  uint64_t v19 = v15;
  unsigned int v18 = v12 + ((((2 * v17) | 0xC2DB3190) - v17 + 512911160) ^ 0xEB9996E7) * v8 + 656;
  (*(void (**)(unsigned char *))(v9 + 8 * (int)(v12 ^ 0xA5A)))(v17);
  return 0;
}

uint64_t sub_10003E9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8
                                                                                         * ((((v6 ^ 0x4D9) - 931)
                                                                                           * (v8 == 0)) ^ (v6 - 1766))))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_10003E9E4()
{
  int v7 = v4 + 4;
  int v8 = *(_DWORD *)(v3 + ((v7 - 109046529) & 0xFFFFFFFC));
  *(unsigned char *)(v2 + (v7 - 109046529)) = v8 ^ v5;
  *(unsigned char *)(v2 + (v7 - 109046528)) = (BYTE1(v8) ^ 0x5B)
                                                  + ~(2 * ((BYTE1(v8) ^ 0x5B) & 0xEF ^ BYTE1(v8) & ((v1 - 110) ^ 0x5F)))
                                                  - 20;
  *(unsigned char *)(v2 + (v7 - 109046527)) = (BYTE2(v8) ^ 0xD1)
                                                  - 2 * ((BYTE2(v8) ^ 0xD1) & 0xEF ^ BYTE2(v8) & 4)
                                                  - 21;
  *(unsigned char *)(v2 + (v7 - 109046526)) = (HIBYTE(v8) ^ 0xDB)
                                                  - 2 * ((HIBYTE(v8) ^ 0xDB) & 0xEF ^ HIBYTE(v8) & 4)
                                                  - 21;
  unsigned int v9 = *v0 - 1041676548;
  BOOL v10 = v9 < 0x118452EE;
  BOOL v11 = v7 + 184838129 < v9;
  if ((v7 + 184838129) < 0x118452EE != v10) {
    BOOL v11 = v10;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((7 * v11) ^ v1)))();
}

uint64_t sub_10003E9FC()
{
  BOOL v3 = **(_DWORD **)(v2 + 8 * (v0 - 1459)) == ((v0 + 256) ^ 0x6CA);
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((2 * ((((v0 + 412) ^ v3) & 1) == 0)) & 0xDF | (32
                                                                               * (((v0 - 100) ^ ~v3) & 1))) ^ v0)))();
}

void sub_10003EA58(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) ^ (3804331 * ((2 * (a1 & 0x520CC9FF) - a1 - 1376569856) ^ 0xD32613F6));
  uint64_t v2 = (char *)*(&off_10007DD80 + (v1 ^ 0x6B7)) - 4;
  uint64_t v3 = *(void *)a1;
  (*(void (**)(char *, uint64_t (*)()))&v2[8 * (v1 ^ 0xEC7)])((char *)*(&off_10007DD80 + (v1 ^ 0x68C)) - 8, sub_100054614);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10003EB2C@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  unsigned int v6 = (((a1 + 46) | 0x4F8) + 474759170) & 0xE3B3BAD7;
  int v7 = v3 + v2;
  int v8 = (v6 ^ 0xD3) + v3;
  *(_DWORD *)(*(void *)(v4 - 0x139154EEB4327E8) + 4 * v7) = v5;
  *(_DWORD *)(v4 - 0x139154EEB4327ECLL) = v8;
  int v9 = v8 + v2;
  if (v8 + v2 < 0) {
    int v9 = -v9;
  }
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)((2275
                                     * ((int)(v2 + (v9 ^ 0xEFFFFFBD) + 2008923900 + ((v9 << (v6 + 47)) & 0xDFFFFF7A) - 1) > (int)(((v6 + 15) ^ 0x162) - 388))) ^ (v6 + 15))))();
}

uint64_t sub_10003EC14()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v3 | (4 * (v0 == ((v3 + 114) ^ (v1 - 1096)) + ((v3 + 114) | 0x440))))))();
}

uint64_t sub_10003EC5C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  int v10 = v2 - 1453877244;
  uint64_t v11 = 4 * (v5 + v3);
  int v12 = (*(_DWORD *)(*(void *)(v8 - 0x139154EEB4327E8) + v11) ^ v4)
      - (*(_DWORD *)(*(void *)(a2 - 0x139154EEB4327E8) + v11) ^ v4);
  *(_DWORD *)(*(void *)(a1 - 0x139154EEB4327E8) + v11) = v4
                                                           + 379 * ((v9 - 1012) ^ 0x112)
                                                           + v12
                                                           - (v7 & (2 * v12))
                                                           - 1137;
  BOOL v14 = v5 + 763157959 > 693606403 || v5 + 763157959 < v10;
  return (*(uint64_t (**)(void))(v6 + 8 * ((11 * v14) ^ (v9 - 1012))))();
}

uint64_t sub_10003ED80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, unint64_t *a16)
{
  unsigned int v20 = v18 + 565;
  a14 = (v20 + 210) ^ (1374699841
                     * ((&a14 - 762734092 - 2 * (&a14 & 0xD28999F4)) ^ 0xBF7D81FD));
  a15 = &STACK[0x8DE5192BDC53186];
  a16 = a11;
  (*(void (**)(unsigned int *))(v17 + 8 * (v20 + 1541)))(&a14);
  a14 = (v20 + 210) ^ (1374699841
                     * ((&a14 + 2125390926 - 2 * (&a14 & 0x7EAEE44E)) ^ 0x135AFC47));
  a15 = &STACK[0x8DE5192BDC5318A];
  a16 = a11;
  (*(void (**)(unsigned int *))(v17 + 8 * (v20 ^ 0xA3F)))(&a14);
  a14 = (v20 + 695) ^ (1755732067
                     * ((791046139 - (&a14 | 0x2F2667FB) + (&a14 | 0xD0D99804)) ^ 0xE1F25DF));
  a15 = a11;
  uint64_t v21 = (*(uint64_t (**)(unsigned int *))(v17 + 8 * (v20 + 1546)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((468
                                              * (((37 * (((v20 + 37) | 0x18) ^ (v19 + 32))) ^ (a16 == v16)) & 1)) ^ v20)))(v21);
}

uint64_t sub_10003EF1C()
{
  int v6 = *(_DWORD *)(v3 + 52);
  unsigned int v7 = 3804331 * ((v2 - 590727306 - 2 * (v2 & 0xDCCA3776)) ^ 0xA21F1280);
  uint64_t v8 = (void *)(v5 - 200);
  v8[4] = v1;
  v8[5] = v3 + 0x7785963AF3444796;
  _DWORD v8[2] = &STACK[0x1980];
  int v9 = LODWORD(STACK[0x29C]) ^ v7;
  *(_DWORD *)(v5 - 176) = v7 + 756357858 + v6;
  int v10 = LODWORD(STACK[0x2EC]) - v7 + (((v0 - 47) | 0x448) ^ 0x3E2AFAF0);
  *(_DWORD *)(v5 - 200) = (v0 - 50) ^ v7;
  *(_DWORD *)(v5 - 196) = v10;
  *(_DWORD *)(v5 - 192) = v9;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v0 + 2291)))(v5 - 200);
  int v12 = *(_DWORD *)(v5 - 188);
  LODWORD(STACK[0x5D8]) = v12;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((1122 * (v12 == 526347143)) ^ v0)))(v11);
}

uint64_t sub_10003F01C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v9 = v4 - 32;
  uint64_t v10 = v7 + v9;
  long long v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = a1 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((v5 ^ a4 ^ (v6 == 32)) & 1) == 0) | (4 * (((v5 ^ a4 ^ (v6 == 32)) & 1) == 0))) ^ (v5 - 208))))();
}

uint64_t sub_10003F028(uint64_t a1, uint64_t a2)
{
  qword_1000827B0 = 1226760413 * ((qword_100081B78 - qword_1000827B0) ^ (unint64_t)&v7 ^ 0x5B705F9A26A579D8);
  qword_100081B78 = qword_1000827B0;
  int v2 = *(_DWORD *)(a2 + 4);
  uint64_t v3 = (char *)*(&off_10007DD80
               + ((-35 * ((2 * qword_1000827B0) ^ 0xD8)) ^ byte_100068C50[byte_100073D90[(-35 * ((2 * qword_1000827B0) ^ 0xD8))] ^ 0xD9])
               - 18)
     - 4;
  if (v2 == 2079419387)
  {
    BOOL v5 = **(unsigned __int8 **)(a2 + 8) == 85;
    __asm { BRAA            X1, X17 }
  }
  if (v2 == 2079419394)
  {
    int v4 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BRAA            X3, X17 }
  }
  return 4294925278;
}

uint64_t sub_10003F1D4@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*v3 + 4 * (v7 + v5)) = *(_DWORD *)(*v4 + 4 * (v7 + v5));
  return (*(uint64_t (**)(void))(a1 + 8 * (((v7 - 1 == v1) * v6) ^ v2)))();
}

uint64_t sub_10003F20C@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v4 + ((v7 + (v2 - 314) + 1129) & (v3 + v6))) = *(unsigned char *)(v5 + a2 + a1);
  return (*(uint64_t (**)(void))(v8 + 8 * ((255 * ((v6 + v3 + 1) > 0x3F)) ^ v2)))();
}

uint64_t sub_10003F260(int a1, uint64_t a2, unsigned int a3, uint64_t a4, int a5, uint64_t a6)
{
  *(void *)(a6 + a3) = *(void *)(v8 + a3);
  return (*(uint64_t (**)(void))(v6 + 8 * (((a5 == 0) * v7) ^ a1)))();
}

void sub_10003F290()
{
}

uint64_t sub_10003F298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (int)((((v8 - 2361766) & 0xFBFFDBDF ^ (a6 + 312)) * (v6 == v7)) ^ v8)))();
}

uint64_t sub_10003F2D0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14)
{
  a11 = (uint64_t)&a7 + a1 + 4;
  a12 = a6;
  a10 = (v14 - 736) ^ (((2 * (&a10 & 0x7F331FB0) - &a10 - 2134056888) ^ 0xED38F841) * v16);
  uint64_t v17 = (*(uint64_t (**)(unsigned int *))(v15 + 8 * (v14 + 595)))(&a10);
  return sub_100039E5C(v17, v18, v19, v20, v21, v22, v23, v24, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

void sub_10003F348()
{
}

uint64_t sub_10003F368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 147 * (v14 ^ 0x1BF);
  int v21 = 1759421093 * ((v19 - 136) ^ 0xB37DB054);
  *(void *)(v19 - 128) = v17;
  *(_DWORD *)(v19 - 120) = v14 - v21 + 709;
  *(_DWORD *)(v19 - 136) = v18 - v21 - 808948690 + v20;
  (*(void (**)(uint64_t))(v16 + 8 * (v14 + 1896)))(v19 - 136);
  *(_DWORD *)(v19 - 120) = v20
                         + 1178560073 * ((((v19 - 136) | 0xC9275412) - ((v19 - 136) & 0xC9275412)) ^ 0x73B32C70)
                         + 115;
  *(void *)(v19 - 112) = a13;
  *(void *)(v19 - 128) = a14;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v20 ^ 0xEA1)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((((v20 - 82) ^ (*(_DWORD *)(v19 - 136) > v15)) & 1)
                                              * (v20 - 1582)) ^ v20)))(v22);
}

uint64_t sub_10003F488()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((v0 - 1036076337) & 0x3DC143FE ^ ((v0 + 400) | 0xAD) ^ 0x59A)
                                * (LODWORD(STACK[0x3F8]) == 911095922)) | v0)))();
}

uint64_t sub_10003F4F0@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W6>, uint64_t a4@<X8>)
{
  *(unsigned char *)(v9 - 220 + (((v6 ^ (a2 + 37)) + 4294967236) & (a4 + v4))) = *(unsigned char *)(v5 + v8 - 659037434)
                                                                                       - ((2
                                                                                         * *(unsigned char *)(v5 + v8 - 659037434)) & 0xD6)
                                                                                       - 21;
  return (*(uint64_t (**)(void))(v7 + 8 * ((28 * ((a3 + a4 + 29) < 0x40)) ^ (a1 + v6 + 1130))))();
}

uint64_t sub_10003F56C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 != v1) * ((v2 ^ 0xBC1) - 949)) ^ v2)))();
}

uint64_t sub_10003F5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003F5B4(a1, a2, a3, 3768594526, 1605072733);
}

uint64_t sub_10003F5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v8 = ((v5 + 36) ^ 0x6FDACD83) + v6 - ((2 * v6 + 136128528) & 0xD7986BE8);
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((44 * (((2 * v8) & 0xBF57FFBE ^ 0x97106BA8) + (v8 ^ 0xB467CA2B) - 34946 == a5)) ^ (v5 + 384))))();
}

uint64_t sub_10003F644()
{
  int v4 = 628203409
     * ((((v3 - 200) ^ 0x5792EF4A | 0x460CE2BD) - ((v3 - 200) ^ 0x5792EF4A) + (((v3 - 200) ^ 0x5792EF4A) & 0xB9F31D42)) ^ 0x931601C4);
  int v5 = (void *)(v3 - 200);
  v5[3] = STACK[0x3A8];
  *(_DWORD *)(v3 - 184) = v0 - v4 + 1065;
  *(_DWORD *)(v3 - 180) = v1 - v4 + ((v0 - 1088584759) & 0x40E27D5B) - 1178885781;
  unint64_t v6 = STACK[0x398];
  v5[5] = STACK[0x3E8];
  v5[6] = v6;
  unint64_t v7 = STACK[0x390];
  *int v5 = STACK[0x3A0];
  v5[1] = v7;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1509)))(v3 - 200);
  return (*(uint64_t (**)(uint64_t, __n128))(v2 + 8 * ((1143 * (*(_DWORD *)(v3 - 168) == 526347143)) ^ v0)))(v8, (__n128)0);
}

uint64_t sub_10003F754@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((775 * (a2 == (((a1 ^ (a1 - 162)) + 812) ^ (v4 - 62)))) ^ (v3 + a1 + 1019))))();
}

uint64_t sub_10003F794()
{
  STACK[0x558] = v0;
  return sub_10003D768();
}

uint64_t sub_10003F7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  return sub_10004799C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

void sub_10003F7C0()
{
}

void sub_10003FAF4(uint64_t a1)
{
  BOOL v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0x139154EEB4327ECLL) == 1740488377
    || *(_DWORD *)(*(void *)(a1 + 16) - 0x139154EEB4327ECLL) == 1740488377;
  int v1 = *(_DWORD *)a1 - 1225351577 * ((-1557536513 - (a1 | 0xA329E0FF) + (a1 | 0x5CD61F00)) ^ 0x7F4CC716);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_10003FC14@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(*(void *)(a2 + 96) + 24) = v3;
  unsigned int v4 = *(_DWORD *)(a1 + 4) - ((2 * *(_DWORD *)(a1 + 4) + 136128528) & 0xD7986BE8) + 1876609532;
  return (*(uint64_t (**)(void))(v2
                                           + 8
                                           * ((220
                                             * (((2 * v4) & 0xBF57FFBE ^ 0x97106BA8) + (v4 ^ 0xB467CA2B) - 34946 != 1605072733)) ^ 0x655u)))(0);
}

void sub_10003FCA8()
{
}

uint64_t sub_10003FCB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10004A678(a1, a2, a3, a4, STACK[0x420], 4097578114, STACK[0x3D8], LODWORD(STACK[0x3E8]), (__n128)0);
}

void sub_10003FCC8()
{
}

uint64_t sub_10003FCD4@<X0>(void *a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  *(void *)(*a1 - 0x3F70C0CAD4126774) = v6 + v5 + 8;
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (((*v4 == v3 + 17 * (a2 ^ 0x329) - 187) * ((17 * (a2 ^ 0x329)) ^ 0xBF)) | (17 * (a2 ^ 0x329)))))();
}

uint64_t sub_10003FD44@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * (((((v1 == 0) ^ (a1 - 30)) & 1) * ((a1 - 577) ^ 0x152)) ^ a1)))();
}

uint64_t sub_10003FD7C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v20 = 7 * (a1 ^ 0x341);
  *(void *)(v19 - 104) = a17;
  *(void *)(v19 - 144) = a15;
  *(void *)(v19 - 136) = a7;
  *(_DWORD *)(v19 - 112) = a1 + 1224239923 * ((v19 - 1376293115 - 2 * ((v19 - 144) & 0xADF76F95)) ^ 0x5F449242) + 290;
  *(void *)(v19 - 128) = a17;
  *(void *)(v19 - 120) = a16;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (a1 ^ 0xB94)))(v19 - 144);
  BOOL v22 = v18 + a13 + 2 >= (((v20 + 362) | 0x104) ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((2 * v22) | (8 * v22) | (v20 + 974))))(v21);
}

uint64_t sub_10003FE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  return (*(uint64_t (**)(void))(v24 + 8 * (((a23 == 2029314997) * (((v23 - 1632357708) & 0x614BCF5B) - 1599)) ^ v23)))();
}

uint64_t sub_10003FEAC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((253
                                * (((2 * (v2 - (v3 & 0x6908D056) - 192649173)) & 0xF35EDB6C ^ 0xE108D044)
                                 + ((v2 - (v3 & 0x6908D056) - 192649173) ^ 0x8D2B059D)
                                 + ((v1 + 951469696) & 0xC749B7DF)
                                 - 206
                                 - 1090522531 != 951018786)) ^ v1)))();
}

uint64_t sub_10003FF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, uint64_t a18, int a19, int a20,int a21,int a22)
{
  if (v25 >= 0xC32F6DA) {
    int v26 = -1247212205;
  }
  else {
    int v26 = 1646191814;
  }
  int v27 = 460628867 * ((&a17 + 663701623 - 2 * ((unint64_t)&a17 & 0x278F4877)) ^ 0x6B19CA0A);
  a21 = v26 - v27;
  a19 = v27 - 173818905;
  a20 = v27 + v22 - 2024873976;
  a17 = &STACK[0x38223619C320A43];
  a18 = a13;
  uint64_t v28 = (*(uint64_t (**)(unint64_t **))(v24 + 8 * (v22 ^ 0xB86u)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * (((a22 == v23) * ((v22 ^ 0x281) - 263)) ^ v22)))(v28);
}

uint64_t sub_10004002C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v39 = (*(uint64_t (**)(uint64_t, void))(v37 + 8 * (v36 + 1521)))(a11, 0);
  unsigned int v40 = *(_DWORD *)(v38 - 208) - 43663526 - ((2 * *(_DWORD *)(v38 - 208)) & 0xFACB7EB4);
  *(_DWORD *)(v38 - 220) = *(_DWORD *)(v38 - 200) - 43663526 - ((2 * *(_DWORD *)(v38 - 200)) & 0xFACB7EB4);
  *(_DWORD *)(v38 - 216) = v40;
  int v41 = (*(uint64_t (**)(uint64_t))(v37 + 8 * (v36 ^ 0xBB3)))(v39);
  *(_DWORD *)(v38 - 212) = v41 - 43663526 - ((v36 ^ 0xFACB7DFD) & (2 * v41));
  uint64_t v42 = (*(uint64_t (**)(void))(v37 + 8 * (v36 + 1457)))();
  *(_DWORD *)(v38 - 224) = v42 - 43663526 - ((2 * v42) & 0xFACB7EB4);
  return sub_100040118(v42, v43, v44, v45, v46, v47, v48, v49, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_100040118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  uint64_t v50 = 4 * (v48 - 394386889);
  unsigned int v51 = (v42
       + (~*(_DWORD *)(v46 + 4 * (v48 - 394386890)) >> 30)
       - 4 * (*(_DWORD *)(v46 + 4 * (v48 - 394386890)) >= 0)) ^ *(_DWORD *)(v46
                                                                                          + 4
                                                                                          * (v48 - 394386890));
  int v52 = (*(_DWORD *)(a41 + 4 * v47) ^ v42)
      + v47
      + ((v42 + 1664525 * v51 - ((3329050 * v51) & v43)) ^ *(_DWORD *)(v46 + v50));
  *(_DWORD *)(v46 + v50) = v52 + v42 - (v43 & (2 * v52));
  uint64_t v53 = 235795823
      * ((((v49 - 144) | 0x68728E509914D92ELL) - ((v49 - 144) & 0x68728E509914D92ELL)) ^ 0x60C234AE0DB99077);
  int v54 = v53 ^ (v45 - 1713289457);
  *(_DWORD *)(v49 - 136) = v54 ^ 0x6E;
  *(void *)(v49 - 128) = (v48 + 185503750) ^ (unint64_t)v53;
  *(_DWORD *)(v49 - 144) = v54 ^ 0x79;
  *(_DWORD *)(v49 - 140) = v45 - 1713289457 - v53;
  *(_DWORD *)(v49 - 120) = 2064071201 - v53 + v45;
  *(_DWORD *)(v49 - 116) = v53 + 1;
  *(void *)(v49 - 112) = v53 + 579890638;
  uint64_t v55 = (*(uint64_t (**)(uint64_t))(v44 + 8 * (v45 ^ (v41 - 1874))))(v49 - 144);
  return (*(uint64_t (**)(uint64_t))(v44 + 8 * *(int *)(v49 - 104)))(v55);
}

uint64_t sub_10004026C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  *int v42 = 1.9087e37;
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(v41 + 8 * (v40 ^ 0x8BAu)))(a40);
  __n128 v44 = (__n128)vld1q_dup_f32(v42);
  v45.n128_u64[0] = 0x8000000080000000;
  v45.n128_u64[1] = 0x8000000080000000;
  return sub_100040358(v43, v44, (__n128)vdupq_n_s32(0x7FFFFFFEu), (__n128)vdupq_n_s32(0x7EB2DFADu), (__n128)vdupq_n_s32(0xFACB7EB4), (__n128)vdupq_n_s32(0xFD65BF5A), v45, (__n128)vdupq_n_s32(0xFB404419));
}

uint64_t sub_100040358(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4, int32x4_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8)
{
  a8.i32[0] = *(_DWORD *)(v13 + ((4 * v8) | 4));
  a8.i32[1] = *(_DWORD *)(v13 + ((4 * v8) | 8));
  a8.i32[2] = *(_DWORD *)(v13 + ((4 * v8) | 0xC));
  int8x16_t v14 = vextq_s8(a1, a8, 0xCuLL);
  int8x16_t v15 = a8;
  v15.i32[3] = *(_DWORD *)(v13 + 4 * (v10 + v8));
  int32x4_t v16 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v15, a2), vandq_s8(v14, a6)), 1uLL), a3);
  v17.i32[0] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v13 + ((4 * v8) | 4)) & 1));
  v17.i32[1] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v13 + ((4 * v8) | 8)) & 1));
  v17.i32[2] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v13 + ((4 * v8) | 0xC)) & 1));
  v17.i32[3] = *(_DWORD *)(v11 + 4 * (v15.i8[12] & 1));
  *(int8x16_t *)(v13 + 4 * v8) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v13 + 4 * v8 + 1588), v17), a7), (int8x16_t)vaddq_s32(vsubq_s32(v16, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v16, v16), a4)), a5));
  return (*(uint64_t (**)(void))(v12 + 8 * (v9 | (2 * (v8 != 220)))))();
}

uint64_t sub_10004041C@<X0>(_DWORD *a1@<X8>)
{
  int v4 = (v3 ^ 0x17F) + *a1 - 239122608;
  int v5 = (v1 - 239121589 < -646116860) ^ (v4 < -646116860);
  BOOL v6 = v1 - 239121589 > v4;
  if (v5) {
    BOOL v6 = v1 - 239121589 < -646116860;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((37 * !v6) ^ v3)))();
}

uint64_t sub_100040488@<X0>(int a1@<W4>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  if ((*(_DWORD *)(v38 + 1428) | 4) == 0x26469CD4) {
    return (*(uint64_t (**)(void))(v40 + 8 * ((1348 * (*(_DWORD *)(a2 + 476) == 5 * a38 + 2115177350)) ^ (a1 - 390))))();
  }
  STACK[0x5E0] = STACK[0x288];
  return v39();
}

uint64_t sub_10004057C()
{
  unsigned int v4 = 6 * (v0 ^ 0xC35E9C40);
  unsigned int v9 = (v3 + v0 + 1428) ^ (1755732067
                         * (((&v9 | 0x7744F355) - (&v9 & 0x7744F355)) ^ 0xA9824E8E));
  uint64_t v11 = v6;
  (*(void (**)(unsigned int *))(v2 + 8 * (int)(v0 ^ 0xC35E94DE)))(&v9);
  unsigned int v10 = v3
      + v0
      + 535753261 * ((((2 * &v9) | 0xA365A42A) - &v9 + 776809963) ^ 0xDB46DC3A)
      + 1343;
  uint64_t v11 = v6;
  (*(void (**)(unsigned int *))(v2 + 8 * (v3 + v0 + 2293)))(&v9);
  uint64_t v11 = v8;
  unsigned int v10 = v4 + 535753261 * ((&v9 & 0x5FB4813F | ~(&v9 | 0x5FB4813F)) ^ 0xAABF70EF) + 617;
  (*(void (**)(unsigned int *))(v2 + 8 * (int)(v4 ^ 0xA23)))(&v9);
  return v7 ^ v1;
}

void sub_1000406F4()
{
}

uint64_t sub_10004076C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(void *)(v0 - 0x2C138C8FAF40FC22) == 0)
                                * (((v2 - 196) | 0xC4) ^ ((v2 - 204) | 0x880) ^ 0x843)) ^ (v2 + 1303))))();
}

uint64_t sub_1000407D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  return (*(uint64_t (**)(void))(v15
                              + 8 * (((a14 != ((v14 + 1846686950) & 0x91EDCFEF) + 526345280) * (v14 - 622)) ^ v14)))();
}

void sub_100040830(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 1225351577 * ((2 * (a1 & 0x2B9C6F1D) - a1 + 1415811298) ^ 0x77F948F4);
  if (*(_DWORD *)(*(void *)(a1 + 8) - 0x139154EEB4327ECLL) - 1740488377 >= 0) {
    unsigned int v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0x139154EEB4327ECLL) - 1740488377;
  }
  else {
    unsigned int v3 = 1740488377 - *(_DWORD *)(*(void *)(a1 + 8) - 0x139154EEB4327ECLL);
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v2 - 0x139154EEB4327ECLL) - 1740488377 >= 0) {
    unsigned int v4 = *(_DWORD *)(v2 - 0x139154EEB4327ECLL) - 1740488377;
  }
  else {
    unsigned int v4 = 1740488377 - *(_DWORD *)(v2 - 0x139154EEB4327ECLL);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  v7[1] = (460628867 * ((1088039055 - (v7 | 0x40DA288F) + (v7 | 0xBF25D770)) ^ 0xF3B3550D)) ^ (v1 - 241);
  int v5 = (char *)*(&off_10007DD80 + (v1 ^ 0x59D)) - 4;
  (*(void (**)(_DWORD *))&v5[8 * v1 + 8272])(v7);
  if (v3 >= v4) {
    unsigned int v6 = v4;
  }
  else {
    unsigned int v6 = v3;
  }
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1000409CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                               + 8
                                                                               * (int)(((((a7 + 2145469929) & 0x801EBFEB)
                                                                                       - 972)
                                                                                      * ((v8 >> 3) & 1)) ^ a7)))(a1, a2, a3, a4, (v7 - a4));
}

void sub_100040A08()
{
}

void sub_100040A14()
{
}

uint64_t sub_100040A28@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v7 + (v2 ^ v5) + v3 + v6) = *(unsigned char *)(a2 + (v2 ^ v5) + v3 + v6)
                                       - ((2 * *(unsigned char *)(a2 + (v2 ^ v5) + v3 + v6)) & 0xD6)
                                       - 21;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v3 - 1 == a1) * v4) ^ v2)))();
}

uint64_t sub_100040A70@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(v3 - 0x139154EEB4327E8) + 4 * (v5 - 746716027)) = *(_DWORD *)(*(void *)(v4 - 0x139154EEB4327E8)
                                                                                          + 4 * (v5 - 746716027));
  return (*(uint64_t (**)(void))(a1 + 8 * (((v5 - 1 == v1) * ((v2 + 1347) ^ 0x714)) ^ v2)))();
}

uint64_t sub_100040AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((6 * (a5 ^ 0x45D)) ^ 0x243) * (v5 == v7)) ^ (a5 - 1079))))();
}

uint64_t sub_100040B0C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v2 - 243) | 0x82) ^ 0x6EE) * ((v0 - 562684889) < 0x7FFFFFFF)) ^ v2)))();
}

uint64_t sub_100040B74(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((v3 < ((a3 - 731) | 0x128u) - 905) * ((a3 - 731) ^ (v4 + 1710) ^ (v4 + 1129))) ^ a3)))();
}

void sub_100040BB4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  STACK[0x488] = a1;
  LODWORD(STACK[0x5B0]) = a6;
  JUMPOUT(0x100025BC4);
}

uint64_t sub_100040BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v12 = v8 + 1;
  *(unsigned char *)(a5 + (v12 + v10)) = ((2 * v9) ^ 0xDE)
                                             + *(unsigned char *)(a1 + a8 - 1922694427)
                                             - ((2 * *(unsigned char *)(a1 + a8 - 1922694427)) & 0xD6)
                                             - 95;
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * ((1273 * ((v10 + v12 + 1) < 0x40)) ^ v9)))(a1 + 1);
}

void sub_100040BE0()
{
  STACK[0x370] = v0;
  JUMPOUT(0x10001D2B4);
}

uint64_t sub_100040BF0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, int a3@<W7>, int a4@<W8>)
{
  *(_OWORD *)(a2 + ((((a4 + a3) & v8) + a1) & (v4 + 16))) = *v6;
  return (*(uint64_t (**)(void))(v7 + 8 * ((422 * (v5 == 16)) ^ a4)))();
}

uint64_t sub_100040BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  if ((v8 - 2029314978) > 0x1B || ((1 << (v8 + 94)) & 0x8002809) == 0) {
    JUMPOUT(0x100034698);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11
                                                                                                  + 8 * ((v10 + 1380254246) | (4 * ((a8 & 0xFFFFFFFFFFFFFFFLL) == ((71 * ((v9 + 2) ^ 0x5244FF29) + 68513792) & 0xFBEA8FFF ^ 0x8ELL))))))(a1, a2, a3, a4, a5, a6, a7);
}

void sub_100040C9C()
{
  *(void *)(v0 + 312) = *(void *)(v1 + 8 * (int)(STACK[0x420] - 1081));
  JUMPOUT(0x100043830);
}

uint64_t sub_100040CC0(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((*(_DWORD *)(v5 - 140) * (a2 == a3)) ^ (v4 - 24))))();
}

uint64_t sub_100040CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL v39 = (((_BYTE)a11 + 10) & 0xF) != 0 || a11 == 307381622;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((53 * ((v39 ^ (a7 + 108)) & 1)) ^ ((int)a7 + 109))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_100040D40@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v12 = 628203409 * ((v11 - 152) ^ 0x82880C33);
  *(void *)(v11 - 112) = v7;
  *(void *)(v11 - 104) = a5;
  *(_DWORD *)(v11 - 136) = v10 - v12 + 1607;
  *(_DWORD *)(v11 - 132) = v8 - v12 + (v10 ^ a1) - 626484705;
  *(void *)(v11 - 152) = a6;
  *(void *)(v11 - 144) = a4;
  *(void *)(v11 - 128) = a7;
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(v9 + 8 * (v10 | 0x803)))(v11 - 152);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (int)(((*(_DWORD *)(v11 - 120) == 526347143)
                                                   * (((v10 + 1085784807) & 0xBF483DE5) + 312)) ^ v10)))(v13);
}

uint64_t sub_100040E18()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((976
                                * (((v0 + ((v2 - 433290558) & 0x19D37F7C) - 820) & (2
                                                                                  * (*(unsigned __int8 *)(v3 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_100040E6C@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xB8E));
  return v3(v1);
}

uint64_t sub_100040EA0(unint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  unint64_t v32 = (a8 ^ HIDWORD(a1)) + HIDWORD(v31) + (*(_DWORD *)(a29 + a16) ^ v29);
  *(_DWORD *)(a29 + 4 * a18) = v32 + v29 - (a2 & (2 * v32));
  *(_DWORD *)(a29 + a16) = (v32 >> (((a7 + 39) & 0xFDu) + 4)) | v29;
  BOOL v34 = a24 - 1548596488 > 1055175262 || a24 - 1548596488 < a23;
  return (*(uint64_t (**)(void))(v30 + 8 * (a7 ^ (15 * v34))))();
}

uint64_t sub_100040F54@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  BOOL v4 = *(_DWORD *)(a1 + 48 * v3 + 36) + 1541543622 < (a2 ^ 0x8000008D);
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v4) | (32 * v4)) ^ a2)))();
}

uint64_t sub_100040FAC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v5
                                                                                        + 8
                                                                                        * (((((v4 - 278457099) & 0x1098E6CF)
                                                                                           - 148)
                                                                                          * (v2 != v3)) ^ v4)))(a1, a2, 2431, 120779723, 4174187572, LODWORD(STACK[0x3F8]));
}

uint64_t sub_100041000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v40 = *(void *)(a1 + 24);
  *(int8x16_t *)(v39 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(a1 + 40) - 0xC8F409392290867), (int8x16_t)xmmword_1000740D0);
  if (v38) {
    BOOL v41 = v40 == 0x7785963AF3444772;
  }
  else {
    BOOL v41 = 1;
  }
  char v42 = v41;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (int)(((((a7 + 14) ^ v42) & 1) * (a7 - 497)) ^ a7)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_100041080()
{
  int v3 = v1 - ((v1 << (((v0 - 26) | 0x41) ^ 0x7C)) & (((v0 + 175) | 0x508) ^ 0x9FC9C81)) - 2063708730;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((55
                                * (((2 * v3) & 0xFDD749DE ^ 0x9D4098C) + (v3 ^ 0xFA15E929) - 1390642336 != 738730063)) ^ v0)))();
}

uint64_t sub_100041128()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((v0 + 683) | (41
                                             * (((((v0 + 683) ^ 0x28E) + v0 + 711 - 429418260) ^ (2 * v1) & 0xFEFFBFBE)
                                              + (v1 ^ 0xCCC2D14)
                                              - 23251968 != 2115834847)))))();
}

uint64_t sub_10004119C(int a1, int a2, int a3, uint64_t a4, int a5)
{
  uint64_t v10 = (a3 + a1 + a2);
  unint64_t v11 = v10 + ((a5 - 2125) | 0x55Cu) + v8 - 1374;
  uint64_t v12 = (((a5 - 1104) | 0x55) ^ 0x45A) & v10;
  uint64_t v13 = v12 - v10;
  unint64_t v14 = v6 + v13;
  ++v12;
  unint64_t v15 = v6 + v12;
  unint64_t v16 = v5 + v13;
  unint64_t v17 = v5 + v12;
  unint64_t v18 = v7 + v13;
  unint64_t v19 = v7 + v12;
  BOOL v21 = v15 > v8 && v14 < v11;
  if (v17 > v8 && v16 < v11) {
    BOOL v21 = 1;
  }
  int v24 = v19 > v8 && v18 < v11 || v21;
  return (*(uint64_t (**)(void))(v9 + 8 * ((62 * (v24 ^ 1)) ^ a5)))();
}

void sub_100041238()
{
}

void sub_1000412A8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 1178560073 * (a1 ^ 0xBA947862);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_100041374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                               + 8
                                                                               * (((((33 * (a7 ^ 0x540) - 1006) | 0x246) ^ 0x273)
                                                                                 * (v8 < 0x10)) ^ a7)))(a1, a2, a3, a4, 0);
}

uint64_t sub_1000413B4@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v5 = *(_DWORD *)(v2 + v3 * (uint64_t)a1 + 36) - 961679680;
  BOOL v7 = v5 > -2123019490 && v5 < SLODWORD(STACK[0x3B8]);
  return (*(uint64_t (**)(void))(v4 + 8 * ((v7 * (((a2 - 869056283) & 0x33CCBFBF) + 403)) ^ a2)))();
}

uint64_t sub_100041424(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  a1.n128_u16[0] = -5141;
  a1.n128_u8[2] = -21;
  a1.n128_u8[3] = -21;
  a1.n128_u8[4] = -21;
  a1.n128_u8[5] = -21;
  a1.n128_u8[6] = -21;
  a1.n128_u8[7] = -21;
  return sub_10004145C(2906, a3, a4, a5, a6, a3, a1);
}

uint64_t sub_10004145C@<X0>(int a1@<W0>, uint64_t a2@<X3>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(double *)(v7 + a3 + a2 + v4) = a4;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 + v4 == v5) * a1) ^ v6)))();
}

uint64_t sub_100041488@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, __n128 a9@<Q0>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v68 = a8 + 406;
  uint64_t v71 = v68 ^ 0x2C9u;
  uint64_t v69 = (char *)&STACK[0x680] + v66 + v71 - 0x74CFFF0833D78AE7;
  *(_DWORD *)uint64_t v69 = 421729911;
  *((void *)v69 + 1) = 0;
  *((_DWORD *)v69 + 4) = 243037779;
  *((_DWORD *)v69 + 6) = 2079419384;
  *((void *)v69 + 4) = 0;
  *((_DWORD *)v69 + 10) = 2079419384;
  *((void *)v69 + 6) = 0;
  v64[14] = (char *)&STACK[0x680] + v66 + v71 - 0x74CFFF0833D78AB7;
  *((_DWORD *)v69 + 14) = 2079419384;
  v64[26] = (char *)&STACK[0x680] + v66 + v71 - 0x74CFFF0833D78AAFLL;
  *((void *)v69 + 8) = 0;
  *unint64_t v64 = (char *)&STACK[0x680] + v66 + v71 - 0x74CFFF0833D78AA7;
  v64[1] = (char *)&STACK[0x680] + v66 + v71 - 0x74CFFF0833D78ABFLL;
  *((_DWORD *)v69 + 18) = 2079419384;
  *((void *)v69 + 10) = 0;
  STACK[0x430] = (unint64_t)&STACK[0x680] + v66 + v71 - 0x74CFFF0833D78A9FLL;
  v64[18] = (char *)&STACK[0x680] + v66 + v71 - 0x74CFFF0833D78A97;
  v69[88] = 57;
  *(_DWORD *)uint64_t v65 = 421729911;
  *(__n128 *)(v65 + 4) = a9;
  *(_DWORD *)(v65 + 28) = 633261842;
  STACK[0x2E0] = v65 + 28;
  *(_DWORD *)(v65 + 232) = 633261842;
  STACK[0x2D8] = v65 + 232;
  *(_DWORD *)(v65 + 20) = 0;
  *(_DWORD *)(v65 + 24) = 2079419384;
  *(__n128 *)(v65 + 436) = a9;
  *(__n128 *)(v65 + 452) = a9;
  *(void *)(v65 + 468) = 0;
  *(void *)(v65 + 1128) = 0xEBEBEBEBEBEBEBEBLL;
  *(void *)(v65 + 1136) = 0xEBEBEBEBEBEBEBEBLL;
  *(void *)(v65 + 1144) = 3958107115;
  *(void *)(v65 + 1152) = 0;
  *(void *)(v65 + 1160) = 0;
  *(__n128 *)(v65 + 1168) = a9;
  *(__n128 *)(v65 + 1184) = a9;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 8 * v68))(v69, a1, a2, a3, a4, a5, a6, a7, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

uint64_t sub_1000415D8@<X0>(uint64_t a1@<X8>)
{
  int v6 = STACK[0x36C];
  uint64_t v7 = (LODWORD(STACK[0x36C]) + 874);
  int v8 = *(unsigned __int8 *)(v1 + (v2 + v3)) ^ 0xEB;
  int v9 = ((*(unsigned __int8 *)(v1 + (v2 + v3 + 1)) ^ 0xEB) << (LODWORD(STACK[0x36C]) + 23)) | v8 | ((*(unsigned __int8 *)(v1 + (v2 + v3 + 2)) ^ 0xEB) << 16) | ((*(unsigned __int8 *)(v1 + (v2 + v3 + 3)) ^ 0xEB) << 24);
  *(_DWORD *)(a1 + ((v2 + v3) & 0xFFFFFFFC)) = v9 + v5 - 2 * (v9 & (v5 + 8) ^ v8 & 8);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((903 * ((v2 + 4 + v3) < 0x40)) ^ v6)))(v7);
}

uint64_t sub_100041680()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((LODWORD(STACK[0x3D0]) == 1) * (v0 ^ 0x61E)) ^ v0)))();
}

uint64_t sub_1000416DC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  BOOL v8 = a6 == v6 + ((a1 - 591) ^ 0xBD5) - 2202;
  return (*(uint64_t (**)(void))(v7 + 8 * (((2 * v8) | (32 * v8)) ^ a1)))();
}

uint64_t sub_10004171C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8
                                                                                         * ((1023
                                                                                           * ((v6 ^ 0x92561DA8) + v5 > 0x37)) ^ (v6 + 419))))(a1, a2, -1839851021, a4, a5, 235);
}

uint64_t sub_100041760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, uint64_t a11, int a12, unsigned int a13)
{
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * (((((v14 + ((v13 + 126679689) ^ 0x78CF8A2) - 893) ^ a13) > a10)
                                * (((v13 + 126679689) & 0x10576) - 285)) ^ (v13 + 1795))))();
}

uint64_t sub_1000417C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8 * (int)((((v7 + 982736462) & 0xC56C9FFF ^ ((v7 ^ 0x6D2) + 80)) * (v6 == a6)) | v7)))();
}

uint64_t sub_10004180C(uint64_t a1, uint64_t a2)
{
  unsigned int v6 = **(unsigned __int8 **)(a2 + 8) + (((v4 - 225) | 0x320) ^ 0xFFFFFCE2);
  return (*(uint64_t (**)(void))(v5 + 8 * ((1558 * ((v2 & (2 * v6)) + (v6 ^ v3) == v3)) ^ v4)))();
}

uint64_t sub_100041898@<X0>(int a1@<W1>, int a2@<W2>, char a3@<W6>, int a4@<W8>)
{
  *(unsigned char *)(v4 + (a2 + a4)) = *(unsigned char *)(v5 + (a2 + a4))
                                           - ((*(unsigned char *)(v5 + (a2 + a4)) << ((a1 + 41) ^ a3)) & v7)
                                           - 21;
  return (*(uint64_t (**)(void))(v8 + 8 * ((15 * (a2 - 1 == v6)) ^ a1)))();
}

uint64_t sub_1000418E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((*(void *)(v4 + 24) == 0x5A178A95705CCB00) * ((a4 + 20) ^ 0x68)) ^ a4)))();
}

uint64_t sub_10004191C@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W4>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 + v6)) = *(unsigned char *)(v5 + (a2 + v6));
  return (*(uint64_t (**)(void))(v7 + 8 * ((595 * ((((v4 + a3 - 175) | 1) ^ 0xFFFFFDFE) + a2 == a4)) ^ (v4 + a3 - 370))))();
}

uint64_t sub_100041964(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, int a8)
{
  *(_DWORD *)(v13 + 4 * v10) = *(_DWORD *)(v13 + 4 * (v10 + ((v8 - 539) | a6)) + a7) ^ a2 ^ *(_DWORD *)(a4 + 4 * (*(_DWORD *)(v13 + 4 * (v10 + 1)) & 1)) ^ ((v11 ^ ((*(_DWORD *)(v13 + 4 * (v10 + 1)) & 0x7FFFFFFE | v9 & 0x80000000) >> 1)) + a1 - (v12 & (2 * (v11 ^ ((*(_DWORD *)(v13 + 4 * (v10 + 1)) & 0x7FFFFFFE | v9 & 0x80000000) >> 1)))));
  return (*(uint64_t (**)(void))(v14 + 8 * (((v10 == 226) * a8) ^ v8)))();
}

uint64_t sub_1000419D4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  BOOL v7 = a5 < 0xD5567D2B;
  if (v7 == v5 + 1656520720 < ((a1 - 1011) ^ 0xD5567D79)) {
    BOOL v7 = v5 + 1656520720 < a5;
  }
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((54 * v7) ^ a1)))(2276956497);
}

uint64_t sub_100041A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v49 = 4 * (v46 - 394386889);
  int v50 = *(_DWORD *)(v45 + 4 * (v46 - 394386890));
  unsigned int v51 = (v40 + (~v50 >> 30) - 4 * (v50 >= 0)) ^ v50;
  int v52 = ((v40 + 1566083941 * v51 - ((-1162799414 * v51) & v41)) ^ *(_DWORD *)(v45 + v49)) - v46;
  *(_DWORD *)(v45 + v49) = v52 - ((2 * v52 + 788773778) & v41) + 350723363;
  *(void *)(v48 - 128) = (v46 - 850140057) ^ v47;
  *(void *)(v48 - 112) = a40;
  int v53 = v47 ^ (v44 - 2028129122);
  *(_DWORD *)(v48 - 140) = v44 - 2028129122 - v47;
  *(_DWORD *)(v48 - 136) = v53 ^ 0x6B;
  *(_DWORD *)(v48 - 120) = 2064071201 - v47 + v44;
  *(_DWORD *)(v48 - 116) = v47 + 1;
  *(_DWORD *)(v48 - 144) = v53 ^ 0xEB;
  uint64_t v54 = (*(uint64_t (**)(uint64_t))(v43 + 8 * (v44 ^ v42)))(v48 - 144);
  return (*(uint64_t (**)(uint64_t))(v43 + 8 * *(int *)(v48 - 104)))(v54);
}

uint64_t sub_100041B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 *a9)
{
  int v12 = ((*a9 ^ 0xEB) << 24) | ((a9[1] ^ (v9 + 88)) << 16) | ((a9[2] ^ 0xEB) << 8) | a9[3] ^ 0xEB;
  *(_DWORD *)(*(void *)(v10 + 8) - 0x8DE5192BDC53166) = v12 + v11 - ((2 * v12) & 0x3EBED70E);
  return sub_100041BBC();
}

void sub_100041BBC()
{
  *(_DWORD *)(v1 + 4) = v0;
}

uint64_t sub_100041BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(void *)(v64 + 200) = *(void *)(v65 + 8 * v63);
  return sub_1000565FC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_100041C04()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1305
                                * ((((111 * ((v3 - 1175134469) & 0x460B27FE ^ 0x7FC)) ^ (v0 + 420)) & (2 * (*(unsigned __int8 *)(v2 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v1) == v1)) ^ v3)))();
}

uint64_t sub_100041C70@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (((v4 == ((v5 + 1129) | v2) + v1) * ((v5 + 282) ^ v3)) ^ v5)))();
}

uint64_t sub_100041CA0(uint64_t a1)
{
  int v1 = 628203409 * (((a1 | 0xC21FEC2B) - (a1 & 0xC21FEC2B)) ^ 0x4097E018);
  int v2 = *(_DWORD *)(a1 + 8) - v1;
  unsigned int v3 = v1 + *(_DWORD *)(a1 + 12) - 1045653964;
  int v4 = (*(_DWORD *)(*(void *)a1 - 0x72E93EC0CCAF573ELL) ^ 0xAA8110E4) + v3;
  int v5 = v4 - ((2 * v4) & 0x550221C8) - 1434382108;
  *(_DWORD *)(*(void *)a1 - 0x72E93EC0CCAF573ELL) = v5;
  return (*(uint64_t (**)(void))((char *)*(&off_10007DD80 + (v2 ^ 0x2F2))
                              + 8 * ((1549 * ((v5 ^ 0xAA8110E4) < v3)) ^ v2)
                              - 4))();
}

uint64_t sub_100041D68@<X0>(uint64_t a1@<X8>)
{
  unsigned int v5 = ((5 * (v3 ^ 0x3EB)) ^ 0x99FC9934) - (v2 + ((16729514 - v4) & 0xF9F4F0));
  unsigned int v6 = 1755732067 * ((v8 & 0xBE94D469 | ~(v8 | 0xBE94D469)) ^ 0x9FAD964D);
  uint64_t v9 = v1;
  v8[0] = v5 ^ v6;
  v8[1] = (v3 + 525) ^ v6;
  return (*(uint64_t (**)(_DWORD *))(a1 + 8 * (v3 ^ 0xBBEu)))(v8);
}

void sub_100041E2C(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100041EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v15 - 112) = v14
                         + 1374699841
                         * ((((v15 - 128) | 0x729EA90D) - (v15 - 128) + ((v15 - 128) & 0x8D6156F0)) ^ 0x1F6AB104)
                         + 245;
  *(void *)(v15 - 128) = v13;
  *(void *)(v15 - 120) = a12;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v14 + 710)))(v15 - 128);
  return sub_100041F00(v16);
}

uint64_t sub_100041F3C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((62 * (v1 != 2079419384)) ^ 0x187u)))();
}

uint64_t sub_100041F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13)
{
  a13 = 108757529 * (((&a12 | 0x956C4C34) - (&a12 & 0x956C4C34)) ^ 0x75F02E1F) - 504207030;
  uint64_t v15 = (*(uint64_t (**)(int *))(v14 + 17848))(&a12);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((1696 * (a12 == v13)) ^ 0x2BFu)))(v15);
}

uint64_t sub_100042014(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a2 ^ 0xF43 ^ (2 * a2) ^ 0x17D4) * (v2 == v3)) ^ a2)))();
}

void sub_10004204C(_DWORD *a1@<X8>)
{
  if (v1 == (((v3 + 984) | 0x2A0) ^ (v5 + 492))) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = v6;
  }
  *(void *)(v2 - 0x5A178A95705CCB00) = v7;
  *uint64_t v4 = *a1;
}

void sub_1000420C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v10 = (a8 + 959469427) & 0xC6CFA87E;
  *(_DWORD *)(v9 - 120) = (v10 ^ 0xFFFFF786) & v8;
  *(_DWORD *)(v9 - 128) = v10 ^ 0x98A;
  JUMPOUT(0x100042138);
}

void sub_100042204()
{
}

uint64_t sub_100042214@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((v2 != ((((a1 + 898029169) & 0xCA7927F6) + 1164) ^ 0x68768C10))
                                     * (((a1 + 898029169) & 0xCA7927F6 ^ 0x2B8) - 166)) ^ (a1 + 898029169) & 0xCA7927F6)))();
}

uint64_t sub_100042264(uint64_t a1, int a2)
{
  *(void *)(a1 - 7 + (v5 + v3 - v6)) = *(void *)(v2 - 7 + (v5 + v3 - v6));
  return (*(uint64_t (**)(void))(v7 + 8 * ((1639 * ((a2 ^ 0x3A1) + v6 == (v4 & 0xFFFFFFF8))) ^ a2)))();
}

uint64_t sub_1000422B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v2;
  uint64_t v7 = v1;
  uint64_t v8 = v2;
  unsigned int v6 = v3 - 535753261 * ((((2 * &v5) | 0xA212D9CC) - &v5 + 787911450) ^ 0xDBFD62C9) - 173;
  return (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v3 ^ 0x90D)))(&v5);
}

uint64_t sub_100042320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((4033 * ((((v18 - 912) ^ 0xFFFFFBA8) & (v19 - 2079419381)) - a18 == -2079419385)) ^ v18)))();
}

uint64_t sub_100042368@<X0>(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v10 = 3804331 * (((&a3 | 0xCAC897F1) - (&a3 & 0xCAC897F1)) ^ 0xB41DB207);
  a7 = v10 + 2131745423;
  a3 = v10 + 483381762;
  a4 = v10 + v9 + 259;
  a5 = a1;
  a6 = v7;
  uint64_t v11 = (*(uint64_t (**)(unsigned int *))(v8 + 8 * (v9 + 2018)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * (((*(_DWORD *)(v7 - 0x2C138C8FAF40FC0ALL) == ((v9 + 313) | 0x121)
                                                                                         + 526346274)
                                              * ((v9 + 1511) ^ 0x6D6)) | v9)))(v11);
}

uint64_t sub_10004243C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((2275 * ((int)(v1 + (v4 ^ 0xFFFFFE7C) + v3 - 1) > (v2 ^ 0x162) - 388)) ^ v2)))();
}

uint64_t sub_10004247C()
{
  unsigned int v8 = v0
     + 535753261
     * ((2 * ((v7 ^ 0x7401F681) & 0x44CCC51) - (v7 ^ 0x7401F681) + 2075341740) ^ 0x546CB02)
     + 450;
  uint64_t v9 = v5;
  (*(void (**)(unsigned char *))(v2 + 8 * (v0 ^ 0xB88)))(v7);
  uint64_t v9 = v6;
  unsigned int v8 = v0
     + 327
     + 535753261 * ((((2 * v7) | 0xAEBB6136) - v7 + 681725797) ^ 0xDDA9BEB4)
     + 123;
  (*(void (**)(unsigned char *))(v2 + 8 * (v0 + 1400)))(v7);
  return v3 ^ v1;
}

uint64_t sub_10004258C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return sub_100039800(a1, a2, a3, a4, a5);
}

uint64_t sub_1000425BC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 != v1) * ((889 * (v2 ^ 0x367)) ^ 0x602)) ^ v2)))();
}

uint64_t sub_1000425F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((LODWORD(STACK[0x3D8]) == 642161856) ^ (5
                                                                                           * (((v8 ^ 0xEE) + 30) ^ 0x8F))) & 1)
                                * a8) ^ ((v8 ^ 0x3EE) - 994))))();
}

uint64_t sub_10004264C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  unint64_t v6 = ((((v3 + 629508289) & 0xDA7A73C6) + 219) ^ 0xB5300F3E5A02ED7BLL) + 0x4ACFF0C1A5FD1620;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v5 + 8 * ((387 * (*(unsigned __int8 *)(a3 + 236 + v6) != *(unsigned __int8 *)(v4 + 32 + v6))) ^ (v3 - 99))))(629508388, 3665458118, 53, a1, a2, 78, 0xB5300F3E5A02ED7BLL);
}

uint64_t sub_1000426EC@<X0>(uint64_t a1@<X8>)
{
  BOOL v9 = v4 > v6;
  *(unsigned char *)(a1 + (v7 - 1364770032)) = *(unsigned char *)(v1 + (v7 - 1364770032));
  if (v9 == v7 - 224974760 < v3) {
    BOOL v9 = v7 - 224974760 < v5;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((v9 * (v2 ^ 0x46F)) ^ v2)))();
}

void sub_100042758()
{
}

uint64_t sub_100042760(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((4 * (((v4 == a4) ^ (v5 - 42 - 57 * (v5 ^ 0x82) + 1)) & 1)) & 0xEF | (16 * (((v4 == a4) ^ (v5 - 42 - 57 * (v5 ^ 0x82) + 1)) & 1))) ^ v5)))();
}

void sub_1000427B0()
{
}

uint64_t sub_1000427D4()
{
  return sub_1000427E8(2411756756);
}

uint64_t sub_1000427E8@<X0>(int a1@<W0>, int a2@<W5>, void *a3@<X8>)
{
  uint64_t v14 = ((v4 ^ (a2 + 1027)) + a1) & 0xE7B13FF6;
  uint64_t v15 = v14 + v5 + 0x7AC82A11D325441FLL;
  int v16 = *(unsigned __int8 *)(*a3 + v6 + 0x7AC82A126901FFA0)
      - (*(unsigned __int8 *)(v3 + v6 + 0x7AC82A126901FFA0) ^ v10);
  BOOL v18 = (v16 ^ v12) + (v11 & (2 * v16)) + v7 != v13 || v15 == 0x7AC82A126901FFA0;
  return (*(uint64_t (**)(void))(v9 + 8 * (int)((v18 * v8) ^ v14)))();
}

uint64_t sub_100042874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  return sub_10004287C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

void sub_10004287C()
{
}

uint64_t sub_100042884(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v12 = a8 - 32 + (a4 ^ (v10 + 181));
  long long v13 = *(_OWORD *)(v9 + v12 - 15);
  long long v14 = *(_OWORD *)(v9 + v12 - 31);
  uint64_t v15 = a1 + v12;
  *(_OWORD *)(v15 - 15) = v13;
  *(_OWORD *)(v15 - 31) = v14;
  return (*(uint64_t (**)(void))(v11 + 8 * (((a6 == 32) * a7) ^ (v8 + a5 + 136))))();
}

void sub_100042890()
{
}

uint64_t sub_1000428EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, unsigned int a16, uint64_t a17)
{
  int v21 = 84 * (v20 ^ 0x4C0);
  a16 = v21 + 1224239923 * ((&a14 & 0xD2B4AA2E | ~(&a14 | 0xD2B4AA2E)) ^ 0xDFF8A806) + 1333;
  a17 = v17;
  a15 = a12;
  uint64_t v22 = (*(uint64_t (**)(int *))(v19 + 8 * (v21 + 2121)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((a14 == v18) * ((v21 + 1682148978) ^ 0x6443881E)) | v21)))(v22);
}

uint64_t sub_10004299C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8 * ((246 * (a3 + 1 != v6 + 16)) ^ v4)))(a1, a2, v3);
}

uint64_t sub_100042A68()
{
  LODWORD(STACK[0x644]) = v0;
  return sub_100045688();
}

uint64_t sub_100042A88(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  v5.n128_u64[0] = (a5 + 10) & 0xF;
  v5.n128_u64[1] = (a5 + 9) & 0xF;
  v6.n128_u64[0] = (a5 + 8) & 0xF;
  v6.n128_u64[1] = (a5 + 7) & 0xF;
  v7.n128_u64[0] = (a5 + 6) & 0xF;
  v7.n128_u64[1] = (a5 + 5) & 0xF;
  v8.n128_u64[0] = 0x505050505050505;
  v8.n128_u64[1] = 0x505050505050505;
  v9.n128_u64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v9.n128_u64[1] = 0xEBEBEBEBEBEBEBEBLL;
  return sub_100042B68(a1, v5, v6, v7, (__n128)xmmword_1000740A0, v8, v9);
}

uint64_t sub_100042B68(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, int a13, int a14, uint64_t a15)
{
  uint64_t v27 = (a11 + v15 - a14);
  uint64_t v28 = ((_BYTE)a11 + (_BYTE)v15 - (_BYTE)a14) & 0xF;
  uint64_t v29 = v20;
  v30.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v30.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v23, a5).u64[0];
  int8x16_t v31 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a15 + v27), *(int8x16_t *)(v17 + (v27 & 0xF) - 15)), veorq_s8(*(int8x16_t *)(v16 + (v27 & 0xF) - 15), *(int8x16_t *)(v18 + (v27 & 0xF) - 15))));
  int8x16_t v32 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v31, v31, 8uLL), a7), vmulq_s8(v30, a6)));
  *(int8x16_t *)(a15 + v27) = vextq_s8(v32, v32, 8uLL);
  return (*(uint64_t (**)(void))(v22 + 8 * (((a14 + v19 - 1402 == a12) * v21) ^ a13)))();
}

uint64_t sub_100042BF4()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v2 ^ 0x7B2) - 200) * (v1 == v3)) ^ v2)))((v2 ^ 0x7B2u) - v0);
}

uint64_t sub_100042C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((((v9 < 0x20) ^ (a7 - v8 - 71)) & 1) * ((a7 ^ 0x6EE) - 216)) ^ a7)))();
}

uint64_t sub_100042C64(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, void *a8)
{
  int v16 = 4 * (v13 ^ 0xB3);
  unint64_t v17 = a1 + v9 + (*(_DWORD *)(v14 + 4 * v15) ^ v10) + v12 * (unint64_t)(*(_DWORD *)(*a8 + 4 * a3) ^ v10);
  *(_DWORD *)(v14 + 4 * v15) = v17 + v10 - (((v16 - 1720529057) & 0x668D2B77 ^ v11) & (2 * v17));
  uint64_t v18 = (HIDWORD(v17) ^ 0x77BDF5BFF3DF7DEFLL) + ((v17 >> 31) & 0x1E7BEFBDELL) - 0x2031602441C1000ALL;
  int v19 = a3 + 1 + a4;
  BOOL v21 = v19 < 146244272 && v19 >= a5;
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * (v16 ^ (218 * v21))))(v18);
}

uint64_t sub_100042D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8
                                                                                         * ((((int)a2 <= ((v6 + 1161) ^ 0x7D0))
                                                                                           * (((v6 - 775) | 0x722) - 1734)) ^ v6)))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_100042D98@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unsigned int v6 = *(_DWORD *)((char *)&STACK[0x2EC] + ((v4 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v4 + a2)) = v6 ^ 0x25;
  *(unsigned char *)(a1 + (v4 + a2 + 2)) = (BYTE2(v6) ^ 0xD1)
                                               - 2 * ((BYTE2(v6) ^ 0xD1) & 0xEF ^ BYTE2(v6) & 4)
                                               - 21;
  *(unsigned char *)(a1 + (v4 + a2 + 1)) = ((v6 >> ((v3 + 36) ^ 0x37)) ^ 0x5B)
                                               + ~(2
                                                 * (((v6 >> ((v3 + 36) ^ 0x37)) ^ 0x5B) & 0xEF ^ (v6 >> ((v3 + 36) ^ 0x37)) & 4))
                                               - 20;
  *(unsigned char *)(a1 + (v4 + a2 + 3)) = (HIBYTE(v6) ^ 0xDB)
                                               - 2 * ((HIBYTE(v6) ^ 0xDB) & 0xEF ^ HIBYTE(v6) & 4)
                                               - 21;
  unsigned int v7 = LODWORD(STACK[0x348]) + 1641695213;
  BOOL v8 = v7 < v2;
  BOOL v9 = v4 - 1652714610 < v7;
  if (v4 - 1652714610 < v2 != v8) {
    BOOL v9 = v8;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((3185 * v9) ^ v3)))();
}

void sub_100042EB4()
{
}

uint64_t sub_100042EC8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((((v5 + 464) ^ a1) + 2763) ^ (v5 + 1476)) * (a5 == 31)) ^ (v5 + 464))))();
}

uint64_t sub_100042F00(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  *(unsigned char *)(v7 + (a3 - 1999839575)) = *(unsigned char *)(v6 + (a3 - 1999839575)) ^ 0xEB;
  return (*(uint64_t (**)(void))(v8 + 8 * ((26 * (a3 - 1 == (a5 ^ 0x50A) + v5)) ^ a5)))();
}

uint64_t sub_100042F4C()
{
  unsigned int v3 = (((v1 ^ 0x7B8) + 1974492790) & 0x8A4F9E7B) - 455275657;
  int v4 = (v0 + 1980700392 < (v1 ^ 0x7B8u) - 455276439) ^ (v3 < 0xE4DD0FD2);
  BOOL v5 = v3 < v0 + 1980700392;
  if (v4) {
    BOOL v5 = v0 + 1980700392 < (v1 ^ 0x7B8u) - 455276439;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((4082 * v5) ^ v1 ^ 0x7B8)))();
}

uint64_t sub_100042F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LODWORD(STACK[0x5F4]) = v64;
  STACK[0x578] = *(void *)(v65 + 8 * v63);
  return sub_1000565FC(a1, a2, a3, 3768594526, 2772, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_100042F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v29 = 33 * (v23 ^ 0x216);
  *(void *)(v28 - 128) = v24;
  *(void *)(v28 - 120) = a23;
  *(void *)(v28 - 104) = v24;
  *(_DWORD *)(v28 - 112) = v23
                         + 1224239923
                         * ((578311764 - ((v28 - 144) | 0x22785654) + ((v28 - 144) | 0xDD87A9AB)) ^ 0x2F34547C)
                         + 625;
  *(void *)(v28 - 144) = v26;
  *(void *)(v28 - 136) = a16;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v23 + 1763)))(v28 - 144);
  BOOL v31 = v27 + a19 + 2 >= (((v29 + 362) | 0x104) ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((2 * v31) | (8 * v31) | (v29 + 974))))(v30);
}

uint64_t sub_100043054@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v11 = a1 + 76;
  int v12 = (a1 - 251) | 0x148;
  unsigned int v13 = 1755732067 * ((2 * (&a4 & 0x17931B20) - &a4 + 1751966942) ^ 0xB6AA5905);
  a8 = v13 ^ 0x51685D72;
  a7 = &STACK[0x5E89E940DF8E90E1];
  a4 = &STACK[0x3F70C0CAD412677C];
  a5 = v10;
  a6 = (a1 + 133) ^ v13;
  uint64_t v14 = (*(uint64_t (**)(unint64_t **))(v9 + 8 * ((a1 + 76) ^ 0x858)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v10 - 0x2C138C8FAF40FC0ALL) == v8) * (v12 + 1472)) ^ v11)))(v14);
}

void sub_100043144()
{
  int v1 = *v0;
  STACK[0x388] = STACK[0x2D8];
  STACK[0x3E8] = *v1;
  JUMPOUT(0x10001C380);
}

uint64_t sub_100043194(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 == ((((v6 - 290) | a5) ^ 4) & a6)) * (((v6 + a3) & a4) + 1458)) ^ v6)))();
}

uint64_t sub_10004320C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  return sub_100042874(a29, a2, a3, a4, a5, a6, a7, a32, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_100043220@<X0>(int a1@<W8>, __n128 a2@<Q0>)
{
  int v6 = (__n128 *)(v4 + v3);
  v6[73] = a2;
  v6[74] = a2;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 == 224) * v2) ^ a1)))();
}

uint64_t sub_10004324C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((395 * (v7 + 1 == v9 + 16)) ^ a7)))();
}

uint64_t sub_100043324@<X0>(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6)
{
  a5 = a1;
  a6 = a2;
  a3 = (v9 + 352) ^ (((2 * (&a3 & 0x17BD33B0) - &a3 + 1749208137) ^ 0x5B6D440) * v7);
  uint64_t v10 = (*(uint64_t (**)(unsigned int *))(v8 + 8 * (v9 + 1683)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * (((a4 == v6 + ((v9 - 590) | 0xA4) - 165) * (v9 - 531)) ^ v9)))(v10);
}

uint64_t sub_1000433BC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((38 * ((((unint64_t)(v3 - v2) < 0x20) ^ a2 ^ 0xE5) & 1)) ^ a2)))();
}

void sub_1000433F4()
{
}

uint64_t sub_1000433FC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1023
                                * ((*(_DWORD *)(v2 - 0x2C138C8FAF40FC0ELL) & 1) == ((((v0 - 112831296) & 0x6B9A7DE)
                                                                                   - 1220645360) & 0x8C192D9)
                                                                                 - 712)) ^ (v0 - 112831296) & 0x6B9A7DEu)))();
}

uint64_t sub_100043468(unsigned int a1, int a2)
{
  *(_DWORD *)(*v4 + 4 * (v6 + v7)) = v3;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 + v2 < a1) * a2) ^ v5)))();
}

uint64_t sub_100043498(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((58 * (a3 + v6 + ((a5 - 744) ^ 0x400u) - 2129374244 < 8)) ^ a5)))();
}

void sub_1000434E8()
{
}

uint64_t sub_1000435C4(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((v5 + a4 + 411627247) & 0x444C97FE) - 1935) * (v4 == a3)) ^ a4)))();
}

uint64_t sub_100043604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v11 + 8 * ((23 * (((v12 - 1) ^ (a10 == v10)) & 1)) | v12)))();
}

uint64_t sub_100043650@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W6>, int a4@<W8>)
{
  return sub_100033DAC(a1, (a3 - 1449810409) & 0x566A5FDF, *(_DWORD *)(*v5 + 4 * (a2 - 1196461360 + ((a3 - 1449810409) & 0x566A5FDF))), v4, a4);
}

uint64_t sub_100043690(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((645 * ((((((a3 - 205547255) & 0xAF6AE5D1) - v4 - 134) ^ 0x3B1) & v3) == 0)) ^ a3)))();
}

uint64_t sub_1000436DC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((STACK[0x420] ^ 0x43B) * (v1 < v0)) ^ (STACK[0x420] - 687))))();
}

uint64_t sub_100043714()
{
  STACK[0x3F8] = v0;
  BOOL v7 = *v1 != ((STACK[0x420] - 89) ^ 0xE9)
    || LODWORD(STACK[0x640]) != 2033916900
    || v2 != ((STACK[0x420] - 557) ^ (v4 - 479));
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((112 * v7) ^ (STACK[0x420] - 37))))();
}

void sub_10004380C()
{
  *(void *)(v0 + 312) = *(void *)(v1 + 8 * (int)(STACK[0x420] - 1111));
  JUMPOUT(0x100043828);
}

uint64_t sub_100043838@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  *(void *)(v4 + 416) = v5;
  LODWORD(STACK[0x65C]) = v2;
  int v7 = *(_DWORD *)(v5 - 0x72E93EC0CCAF573ELL);
  *(void *)(v4 + 88) = a2;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((1889
                                * (v2
                                 + 913486075
                                 + ((v3 + 625428252) & 0xDAB8BB1E ^ (a1 + 281) ^ v7 & 0x3F)
                                 + ((v7 << (v3 ^ 0xD0)) & 0x36) < 0xFFFFFFC0)) ^ v3)))();
}

void sub_1000438DC(_DWORD *a1)
{
  unsigned int v1 = 235795823 * ((a1 - 1876425126 - 2 * (a1 & 0x9028065A)) ^ 0x4854F03);
  unsigned int v2 = a1[9] + v1;
  int v3 = *a1 ^ v1;
  BOOL v5 = (v3 & 0x30000000) == 0x20000000 || (v3 & 0x3F000000) == 0x1000000;
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000439B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W4>, int a4@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((((a4 - 1335000053) < 0x38)
                                                                         * (((v4 + a3 - 703) | 0x20B) ^ 0x97B)) ^ (v4 + a3))))(a1, a2, 727785867, -1335000053);
}

uint64_t sub_100043CD0(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((58 * ((a4 + 1 + v4) < 0x40)) ^ a1)))();
}

void sub_100043DB8()
{
}

uint64_t sub_100043DC0@<X0>(uint64_t a1@<X0>, int a2@<W5>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((a3 == v5 + v4 + a2 + 1287 - 1592) * ((a2 ^ (a2 + 1478)) + 1668)) ^ (v4 + a2 + 793))))(a1);
}

uint64_t sub_100043E0C()
{
  BOOL v4 = (*(uint64_t (**)(void))(v3 + 8 * (v2 + 115)))(v0 ^ (v1 - 703) ^ (v2 - 1355)) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * (((v2 - 2190) | 0x282) - 616)) ^ v2)))();
}

uint64_t sub_100043E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  unsigned int v24 = v21 + ((a20 + 690) ^ 0x6A794A1);
  if (v24 <= 0x40) {
    unsigned int v24 = 64;
  }
  BOOL v25 = -v20 - 111644946 - v22 + v24 < 0xF;
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((v25 | (4 * v25)) ^ a20)))(1922694427);
}

uint64_t sub_100043ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * ((1174
                                                                         * (v3 - 648545234 < ((v5 + 1243) ^ 0x4D3u))) ^ (v5 + 532))))(a1, a2, a3, 235);
}

void sub_100043F10(int a1@<W8>, int a2, __int16 a3, char a4, char a5, char a6, char a7, char a8, char a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,char a25,char a26,char a27,char a28,char a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,char a39,char a40,char a41,char a42,char a43,char a44,char a45,char a46,char a47,char a48,char a49,char a50,char a51,char a52,char a53)
{
  uint64_t v59 = *(unsigned int **)(v57 + 8 * (a1 - 1594));
  uint64_t v60 = *v59;
  uint64_t v61 = *(void *)(v57 + 8 * (a1 - 1584));
  int8x16x4_t v62 = *(unsigned char **)(v61 - 4);
  a4 = *v62 - 97;
  a5 = v62[1] - 97;
  a6 = v62[2] - 97;
  a7 = v62[3] - 97;
  a8 = v62[4] - 97;
  a9 = v62[5] - 97;
  a10 = v62[6] - 97;
  a11 = v62[7] - 97;
  a12 = v62[8] - 97;
  a13 = v62[9] - 97;
  a14 = v62[10] - 97;
  a15 = v62[11] - 97;
  a16 = v62[12] - 97;
  a17 = v62[13] - 97;
  a18 = v62[14] - 97;
  a19 = v62[15] - 97;
  a20 = v62[16] - 97;
  a21 = v62[17] - 97;
  a22 = v62[18] - 97;
  a23 = v62[19] - 97;
  a24 = v62[20] - 97;
  a25 = v62[21] - 97;
  int v63 = *(unsigned char **)(v61 - 4);
  a26 = v63[22] - 97;
  a27 = v63[23] - 97;
  a28 = v63[24] - 97;
  a29 = v63[25] - 97;
  a30 = v63[26] - 97;
  a31 = v63[27] - 97;
  a32 = v63[28] - 97;
  a33 = v63[29] - 97;
  uint64_t v64 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v56 + 8 * (a1 ^ 0xE26)))(v60, &a4, v53);
  int v71 = ((2 * v64) & 0x76BB7FFE) + (v64 ^ 0x3B5DBFFF);
  if (v71 == 995999743)
  {
    *(_DWORD *)(v58 + 344) |= ((v55 - 100) | 0x100) - 1884;
    *(_DWORD *)(v58 + 44) = 651598691;
    (*(void (**)(void, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * (v55 + 602)))(*v53, v58 + 332, v58 + 336, v58 + 340, v54);
    sub_10004D5D0();
  }
  else
  {
    if (v71 == 996000845)
    {
      uint64_t v72 = *v59;
      unint64_t v73 = *(unsigned char **)(*(void *)(v57 + 8 * (v55 - 1641)) - 4);
      a34 = *v73 - 42;
      a35 = v73[1] - 42;
      a36 = v73[2] - 42;
      a37 = v73[3] - 42;
      a38 = v73[4] - 42;
      a39 = v73[5] - 42;
      a40 = v73[6] - 42;
      a41 = v73[7] - 42;
      a42 = v73[8] - 42;
      a43 = v73[9] - 42;
      a44 = v73[10] - 42;
      a45 = v73[11] - 42;
      a46 = v73[12] - 42;
      a47 = v73[13] - 42;
      a48 = v73[14] - 42;
      a49 = v73[15] - 42;
      a50 = v73[16] - 42;
      a51 = v73[17] - 42;
      a52 = v73[18] - 42;
      a53 = v73[19] - 42;
      uint64_t v64 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v56 + 8 * (v55 + 546)))(v72, &a34, v53);
      int v74 = (v64 ^ 0xBF7CFFF7) + 2078257152 + ((2 * v64) & 0x7EF9FFEE);
    }
    else
    {
      int v74 = v71 - 69640;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56
                                                                                          + 8
                                                                                          * ((203
                                                                                            * (v74 == (v55 ^ 0x3B5CA93D))) ^ (v55 + 156))))(v64, v65, v66, v67, v68, v69, v70);
  }
}

uint64_t sub_1000442B0@<X0>(int a1@<W5>, int a2@<W8>)
{
  uint64_t v8 = (void *)(v6 - 0x139154EEB4327E8);
  int v9 = a1 - 1064;
  int v10 = a1 - 233;
  BOOL v11 = v2 + 2121757806 < 850974128;
  unsigned int v12 = ((2 * (*(_DWORD *)(*v8 + 4 * (a2 + 876699970)) ^ v4)) << (v3 ^ 0x1F)) | ((*(_DWORD *)(*v8
                                                                                              + 4 * (a2 + 876699969)) ^ v4) >> v3);
  *(_DWORD *)(*v8 + 4 * (v9 - 243)) = v12 + v4 - (v5 & (2 * v12));
  if (v2 + 2121757806 < 850974128) {
    BOOL v11 = v2 + 2121757806 > -1296509519;
  }
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * (v11 ^ v10 ^ 1)))(850974128);
}

uint64_t sub_100044388@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9, char a10)
{
  a10 = (-103 * (((&a9 | 0x57) - (&a9 | 0xA8) - 88) ^ 0x41)) ^ 0x1E;
  a9 = 1225351577 * (((&a9 | 0xE6B29457) - (&a9 | 0x194D6BA8) + 424504232) ^ 0xC5284C41)
     + a1
     - 1140;
  (*(void (**)(unsigned int *))(v10 + 8 * (a1 ^ 0xC6F)))(&a9);
  return sub_10003E9FC();
}

uint64_t sub_100044404@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((v1 + 15) ^ (a1 == v1 + 2079418617)) & 1 | (2 * (((v1 + 15) ^ (a1 == v1 + 2079418617)) & 1)) | v1)))(4294925278);
}

uint64_t sub_10004444C@<X0>(int a1@<W8>)
{
  unint64_t v4 = v1 + v2;
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((153 * (((v4 - v1 + 1062117730 < 8) ^ ((a1 ^ 0xFD) + 35)) & 1)) ^ a1)))();
}

uint64_t sub_1000444AC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((127 * (v1 != 2079419384)) ^ 0x82Bu)))();
}

uint64_t sub_1000444D8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((593
                                * ((v4 & (2 * (*(unsigned __int8 *)(a2 + 1) - 146)))
                                 + (a3 ^ (v5 + 339) ^ (*(unsigned __int8 *)(a2 + 1) - 146)) == v5)) ^ a3)))();
}

uint64_t sub_100044518()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((71 * (v3 + v0 - 1 < (v2 ^ 0x1F6u) + 2147482005)) ^ v2)))();
}

uint64_t sub_100044564()
{
  int v7 = (v1 - 2034) | 0x440;
  LODWORD(STACK[0x454]) = v0 + 1;
  uint64_t v8 = (*(uint64_t (**)(unint64_t, void))(v5 + 8 * (v1 + 301)))(STACK[0x3C8], 0);
  unsigned int v9 = v3[4] + (v7 ^ 0xFD65BB01) - (v2 & (2 * v3[4]));
  v3[1] = v3[6] - 43663526 - (v2 & (2 * v3[6]));
  v3[2] = v9;
  int v10 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v1 + 237)))(v8);
  v3[3] = v10 - 43663526 - (v2 & (2 * v10));
  int v11 = (*(uint64_t (**)(void))(v5 + 8 * (v1 ^ 0xF7)))();
  *int v3 = v11 - 43663526 - (v2 & (2 * v11));
  unsigned int v12 = ((~*v4 >> 30) - 43663526 - 4 * (*v4 >= 0)) ^ *v4;
  unsigned int v13 = (*v3 ^ 0xFD65BF5A) + ((1664525 * v12 - 43663526 - ((3329050 * v12) & 0xFACB7EB4)) ^ v4[1]);
  v4[1] = v13 - 43663526 - ((2 * v13) & 0xFACB7EB4);
  unint64_t v14 = STACK[0x418];
  int v15 = STACK[0x418] + v7 - 1501686959;
  int v16 = (v7 + 1779911073) ^ STACK[0x418];
  unint64_t v17 = STACK[0x418] ^ 0xE1B0F20;
  *(_DWORD *)(v6 - 172) = v16;
  *(_DWORD *)(v6 - 168) = v16 ^ 0x26;
  uint64_t v18 = v6 - 200;
  *(void *)(v18 + 8) = v14 + 236654366;
  *(void *)(v18 + 16) = v17;
  *(_DWORD *)(v6 - 160) = (v7 + 1779911073) & 0x7B17DFA7 ^ v14;
  *(_DWORD *)(v6 - 200) = v15;
  *(_DWORD *)(v6 - 176) = -(int)v14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v7 ^ 0xCE1)))(v6 - 200);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * *(int *)(v6 - 164)))(v19);
}

uint64_t sub_100044758(uint64_t a1, int a2, uint64_t a3, int a4)
{
  BOOL v7 = v4 > 0x55769099;
  int v8 = a2 - 482811338 + ((a4 + 510) | 0x411);
  int v9 = v7 ^ (v8 < -1433833626);
  BOOL v10 = v8 < v6;
  if (!v9) {
    BOOL v7 = v10;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((!v7 * ((a4 - 1649627591) & 0x625351DE ^ 0x184)) | a4)))();
}

uint64_t sub_1000447F0(uint64_t a1)
{
  uint64_t v8 = (v5 + v3 - 268108378 + v2 - v4);
  *(void *)(a1 - 7 + v8) = *(void *)(v6 - 7 + v8);
  return (*(uint64_t (**)(void))(v7 + 8 * ((1953 * (v4 - (v1 & 0xFFFFFFF8) == -8)) ^ v5)))();
}

uint64_t sub_10004484C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * (int)((STACK[0x420] + 523) ^ (8 * (v2 > (STACK[0x420] ^ 0x63A ^ (v3 + 3) ^ (STACK[0x420] - 506)))))))(a1, a2, 4251303770, 4294966180);
}

uint64_t sub_100044890()
{
  *(_DWORD *)(v3 - 200) = (v0 + 2138962264) ^ (535753261 * ((v1 - 249598343 - 2 * (v1 & 0xF11F6E79)) ^ 0xFBEB6056));
  (*(void (**)(uint64_t))(v2 + 8 * (v0 + 1278)))(v3 - 200);
  LODWORD(STACK[0x2C8]) = LODWORD(STACK[0x2C8]) + ((v0 + 692205703) & 0xD6BDC372) - 65;
  unsigned int v4 = 3804331 * (((v1 | 0xF79F13EF) - v1 + (v1 & 0x860EC10)) ^ 0x894A3619);
  uint64_t v5 = v3 - 200;
  *(void *)(v5 + 8) = STACK[0x268];
  *(_DWORD *)(v3 - 184) = v4 + v0 + 642;
  *(unsigned char *)uint64_t v5 = v4 ^ 0x61;
  *(void *)(v5 + 24) = STACK[0x270];
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0xCA8)))(v3 - 200);
  LODWORD(STACK[0x5D8]) = *(_DWORD *)(v3 - 180);
  LODWORD(STACK[0x2CC]) = -2011050828;
  return sub_1000449B8(v6);
}

uint64_t sub_1000449B8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 == v3 + v0 + 1049 - 1115) * (v0 + 1990)) | v0)))();
}

uint64_t sub_1000449E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int8x16_t *a16)
{
  uint64_t v19 = (int8x16_t *)((char *)&STACK[0x680] + STACK[0x380] - 0x74CFFF0833D7874CLL);
  *uint64_t v19 = veorq_s8(*a16, (int8x16_t)xmmword_100074090);
  unint64_t v20 = (v16 ^ 0x4F6u) + STACK[0x628] - 929;
  STACK[0x630] = v18;
  STACK[0x638] = v18;
  STACK[0x628] = v20;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t))(v17 + 8 * (v16 ^ (8 * (v19 == (int8x16_t *)v18)))))(a1, a2, a3, a4, &STACK[0x4B0], a6);
}

void sub_100044A60()
{
}

uint64_t sub_100044A68(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((a1 + v2 + ((519 * (v1 ^ 0x13E)) ^ 0x8E01645F) > 7) * ((v1 - 81) ^ 0xE9)) ^ v1)))();
}

uint64_t sub_100044AC8(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  int v10 = v7 + v6;
  int v11 = v10 + a1;
  if ((v10 + a1) <= 0x40) {
    int v11 = a2;
  }
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((83 * (((v8 - 579) ^ 0x6040F93 ^ (a6 + v8 - 1328) & 0xFFFFFF7F) - v10 < a3 + v11)) ^ v8)))();
}

uint64_t sub_100044B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))(v68 + 4280))(a1, a2, a3, a4, a5, 3452455880, 2147483652, 1883609044, &a68, a10);
}

uint64_t sub_100044C60@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * (int)((948 * (v1 - a1 >= 25 * (v3 ^ 0x1D9) + (v3 ^ 0xFFFFFFFFFFFFFEDFLL))) ^ v3)))(v2);
}

uint64_t sub_100044CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 >= ((a5 + 1213) ^ 0x561u)) * (89 * (a5 ^ 0x83) - 588)) | a5)))();
}

uint64_t sub_100044CEC@<X0>(int a1@<W2>, int a2@<W5>, int a3@<W6>, unsigned int a4@<W7>, int a5@<W8>)
{
  int v13 = v11 + a5 - 1896;
  BOOL v14 = v7 < v8;
  *(unsigned char *)(v10 + (v5 + 1)) = *(unsigned char *)(v9 + (a2 + v13 + 1115));
  unsigned int v15 = a3 + v13 + 1116;
  int v16 = v14 ^ (v15 < a4);
  BOOL v17 = v15 < v7;
  if (!v16) {
    BOOL v14 = v17;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((!v14 * a1) ^ v6)))();
}

void sub_100044CFC(uint64_t a1)
{
  int v1 = 1759421093 * (((a1 | 0x9EBEB665) - a1 + (a1 & 0x6141499A)) ^ 0x2DC30631);
  int v2 = *(_DWORD *)(a1 + 16) + v1;
  __asm { BRAA            X14, X17 }
}

void sub_100044DE8(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_100044E30()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((6 * (v2 ^ 0x26C)) ^ (v4 + 506)) + v3 >= ((v2 - 1770859631) & 0x698D2F6D ^ v0))
                                * v1) ^ v2)))();
}

void sub_100044E88()
{
}

uint64_t sub_100044FF4@<X0>(uint64_t a1@<X2>, char a2@<W5>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + v3 + a1) = a2;
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((((unint64_t)(v3 + 1 + a1) < 0x38) * ((v4 ^ 0x2E1) - 1283)) ^ v4 ^ 0x2E1)))();
}

uint64_t sub_10004502C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,uint64_t a24,unsigned int a25,uint64_t a26)
{
  unsigned int v31 = 1178560073
      * ((-1996209345 - (&a22 | 0x8904433F) + (&a22 | 0x76FBBCC0)) ^ 0xCC6FC4A2);
  a24 = a17;
  a25 = (v29 + 667) ^ v31;
  a23 = v31 + 762105055 * a15 + 296806364;
  (*(void (**)(int *))(v30 + 8 * (v29 + 1221)))(&a22);
  a25 = v29
      + 1224239923 * ((&a22 - 1409295590 - 2 * (&a22 & 0xABFFDB1A)) ^ 0x594C26CD)
      + 394;
  a24 = a17;
  a26 = v28;
  (*(void (**)(int *))(v30 + 8 * (v29 + 1182)))(&a22);
  unsigned int v32 = 1178560073 * (&a22 ^ 0xBA947862);
  a24 = a17;
  a25 = (v29 + 667) ^ v32;
  a23 = v32 + 762105055 * v27 + 296806364;
  (*(void (**)(int *))(v30 + 8 * (v29 ^ 0xD4B)))(&a22);
  a26 = v26;
  a23 = v32 + v29 + 671;
  a25 = ((a16 ^ 0xFE7AFBF3) + 1806562910 + (((v29 - 189) ^ 0xFCF5F470) & (2 * a16))) ^ v32;
  a24 = a17;
  uint64_t v33 = (*(uint64_t (**)(int *))(v30 + 8 * (v29 + 1211)))(&a22);
  return (*(uint64_t (**)(uint64_t))(v30 + 8 * ((14 * (a22 == 526347143)) ^ v29)))(v33);
}

uint64_t *sub_1000451F4@<X0>(uint64_t *result@<X0>, int a2@<W1>, int a3@<W3>, _DWORD *a4@<X8>)
{
  uint64_t v8 = result[6];
  uint64_t v10 = *result;
  uint64_t v9 = result[1];
  *a4 = v7;
  *(_DWORD *)(v10 - 0x2CF2CD9EB99DE98FLL) = v5;
  *(_DWORD *)(v8 - 0x2DEB3A05C2E48BBDLL) = a3;
  *(void *)(v9 - 0x6C482493D26EC5EDLL) = v4 + (a2 + v6 - 40395189);
  *((_DWORD *)result + 8) = 526347143;
  return result;
}

uint64_t sub_100045264@<X0>(int a1@<W3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 == (a2 ^ 0x183 ^ (a1 + 536))) * ((a2 + 1017) ^ 0x7E0)) ^ a2)))();
}

uint64_t sub_1000452B0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 88) = 57;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 80) = *(void *)(a2 + 8);
  return 0;
}

void sub_1000452D0(uint64_t a1)
{
  int v1 = 1178560073 * ((-2 - ((a1 | 0xAE85A791) + (~a1 | 0x517A586E))) ^ 0xEBEE200C);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100045374@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 4) = (a2 << ((-81 * (v3 ^ 0x12)) ^ 8)) - v4 + v2 - 939069215;
  return result;
}

uint64_t sub_1000453B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  if (a18 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v26
  }
                                                       + 8
                                                       * (a5
                                                        + v27
                                                        + 4
                                                        * (*(_DWORD *)(v28 - 128) != (v27 ^ (v27 + 975)) + 1335560129)
                                                        + 142)))(727785867, a10);
  if (a18 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v26
  }
                                                       + 8
                                                       * ((((*(_DWORD *)(v28 - 128) == 1335561202) ^ (a5 + v27 - 34)) & 1 | (8 * (((*(_DWORD *)(v28 - 128) == 1335561202) ^ (a5 + v27 - 34)) & 1))) ^ (a5 + v27 + 734))))(727785867, a10);
  uint64_t v30 = (a5 + v27 - 758);
  unint64_t v31 = ((unint64_t)&a26 ^ 0xFFA9ED2EEF39FBFELL)
      + 0x26D73FFBF8DF5E02
      + ((v30 - 0xAC25A2218C08BDLL) & (2 * (void)&a26));
  *(unsigned char *)(v28 - 129) = (v31 ^ 0xBA) * (v31 + 17);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v26
                                                     + 8
                                                     * (int)(v30 | (16
                                                                  * (((a5 + v27 + 1810873360) & 0xBF7161FF ^ 0x2B6121B3) != 91)))))(727785867, a10);
}

uint64_t sub_100045530()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((102
                                     * (((v1 - 1740490020 + 31 * ((v3 - 1098917362) & 0x418026FB ^ 0x69Cu))
                                       * (v2 - 1740488377)) >> 31)) ^ v3)))();
}

uint64_t sub_100045590()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v0 & (2 * (*(unsigned __int8 *)(v3 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v3 + 2) - 72) ^ v1) == v1)
                                * ((164 * (v2 ^ 0xF0)) ^ 0x2C5)) ^ v2)))();
}

uint64_t sub_1000455D4@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*v1 + (v2 + v6)) = *(unsigned char *)(*v1 + (v6 + v3));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 - 1 == v4) * v5) ^ a1)))();
}

uint64_t sub_100045608(int8x16_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v11 = (a5 - 32 + a4);
  int8x16_t v12 = *(int8x16_t *)(v8 + v11 - 15);
  int8x16_t v13 = *(int8x16_t *)(v8 + v11 - 31);
  uint64_t v14 = v9 + v11;
  *(int8x16_t *)(v14 - 15) = veorq_s8(v12, a1);
  *(int8x16_t *)(v14 - 31) = veorq_s8(v13, a1);
  return (*(uint64_t (**)(void))(v10 + 8 * (((a6 == 32) * a8) | a7)))();
}

uint64_t sub_100045614@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  uint64_t v9 = ((327 * (a2 ^ (v3 + 2015))) ^ (v6 + 394)) + v7;
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(v5 + v9);
  return (*(uint64_t (**)(void))(v8 + 8 * (((4 * (v7 - 1 != a3)) | (16 * (v7 - 1 != a3))) ^ (v4 + a2 + 1059))))();
}

void sub_100045664()
{
}

uint64_t sub_10004566C()
{
  return sub_100045688();
}

uint64_t sub_100045688()
{
  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

uint64_t sub_100045704@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,_DWORD *a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v37 = 4 * (v34 - 895093445);
  unsigned int v38 = -1195886157 * ((*(_DWORD *)(*a30 + (*a31 & 0x389B1DA8)) ^ (a33 + v37)) & 0x7FFFFFFF);
  int v39 = (v38 >> (((a1 + 66) | 0x22) ^ 0xEA)) ^ v38;
  *(_DWORD *)(a34 + v37) ^= *(_DWORD *)(a33 + v37) ^ *((_DWORD *)*(&off_10007DD80 + a1 - 1821)
                                                     + ((-1195886157 * v39) >> 24)) ^ *((_DWORD *)*(&off_10007DD80 + a1 - 1760) + ((-1195886157 * v39) >> 24)) ^ *((_DWORD *)*(&off_10007DD80 + (a1 ^ 0x793)) + ((-1195886157 * v39) >> 24) - 3) ^ (968032256 * v39) ^ (-1195886157 * v39) ^ (-1109235783 * ((-1195886157 * v39) >> 24));
  return (*(uint64_t (**)(void))(v35
                              + 8
                              * ((1022 * (v36 - 40560652 + ((((a1 - 1726) | 0x522) + 38273574) | 0x22E205) != 255053857)) ^ ((a1 - 1726) | 0x522))))();
}

uint64_t sub_10004584C@<X0>(int a1@<W1>, int a2@<W3>, uint64_t a3@<X8>)
{
  int v7 = v4 + a1 + (a2 ^ 0x481) + (v6 ^ v3);
  unsigned int v8 = ((2 * v7) & 0x9FFFEFB6) + (v7 ^ 0x4FFFF7DB) + 1200541264;
  unsigned int v9 = v5 + 1546437339;
  int v10 = (v9 < 0x978EC62B) ^ (v8 < a2 - 1752251919);
  BOOL v11 = v8 > v9;
  if (v10) {
    BOOL v11 = v8 < a2 - 1752251919;
  }
  return (*(uint64_t (**)(void))(a3 + 8 * ((126 * !v11) ^ a2)))();
}

uint64_t sub_1000458EC()
{
  (*(void (**)(void))(v2 + 8 * (v0 + 1175)))();
  return (*(uint64_t (**)(void))(v2 + 8 * ((41 * (*(void *)(v1 + 264) != 0)) ^ (v0 + 1028))))();
}

uint64_t sub_10004593C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _DWORD *a9, int a10, int a11, uint64_t a12, int a13, int a14, uint64_t a15)
{
  int v17 = 1374699841 * ((2 * ((v16 - 128) & 0x66A9F4B8) - (v16 - 128) + 425069377) ^ 0x74A21348);
  *(_DWORD *)(v16 - 128) = a14 - v17 + 532;
  *(_DWORD *)(v16 - 124) = v17
                         + ((32 * a11) ^ 0xD97FFEEF)
                         + (((a14 + 1255505694) & 0xB52A83D7 ^ 0xB2FFFE40) & (a11 << 6))
                         + 668887927;
  *(void *)(v16 - 120) = a15;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (a14 ^ 0x984)))(v16 - 128);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8 * ((1584 * ((*a9 - 1740488378) < 0x7FFFFFFF)) ^ a14)))(v18);
}

void sub_100045A38()
{
}

uint64_t sub_100045AA4()
{
  int v6 = *(unsigned __int8 *)(*(void *)(v1 + 8) + v0 - 0x29C8F60D6DDB212DLL)
     - *(unsigned __int8 *)(v5 + v0 - 0x29C8F60D6DDB212DLL);
  uint64_t v7 = v0 + ((v4 + 1308952383) & 0xB1FAF27F) - 62;
  BOOL v9 = (v6 ^ 0x79F7F8BF) - 268935170 + ((2 * v6) & 0xF3EFF17E) == 1777359037 && v7 != v2 + 16;
  return (*(uint64_t (**)(void))(v3 + 8 * (v9 | (2 * v9) | v4)))();
}

uint64_t sub_100045B3C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  BOOL v14 = v11 > 0x2BB5E68B;
  *(_DWORD *)(a9 + 4 * (v9 + a1 + 121 * (v10 ^ 0x419))) = *(_DWORD *)(*(void *)(v12 - 0x139154EEB4327E8)
                                                                      + 4 * (v9 + a1 + 121 * (v10 ^ 0x419)));
  if (v14 == v9 - 38910491 < -733341324) {
    BOOL v14 = v9 - 38910491 < (int)(v11 + 1414142324);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8 * ((2 * !v14) | (4 * !v14) | (v10 - 418))))(4256056805, 3561625972);
}

uint64_t sub_100045C7C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((*(_DWORD *)(a1 + 4 * (v4 + v3 + 1990)) == v1 + v2 - 1682 - 307)
                                * (v2 ^ 0x2A1)) ^ (v2 - 1682))))();
}

uint64_t sub_100045CC4()
{
  int v5 = v3 + 190 + *(unsigned __int8 *)(v2 + 6) - 445;
  return (*(uint64_t (**)(void))(v4 + 8 * ((794 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v3)))();
}

uint64_t sub_100045D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  unint64_t v61 = STACK[0x448];
  int v62 = *(unsigned __int8 *)(STACK[0x448] - 0x72E93EC0CCAF5722) ^ 0xDD;
  if (v62 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * (((*(_DWORD *)(v61 - 0x72E93EC0CCAF5726) != 1335561202) * (a8 - 1110)) ^ (a8 + 752))))(a1, a2, 37, a4, a5, 3080894364, a7, 3687930830);
  }
  if (v62 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * (int)((110 * (*(_DWORD *)(v61 - 0x72E93EC0CCAF5726) != STACK[0x420] + 1335560087)) ^ (STACK[0x420] - 204))))(a1, a2, a3, a4, a5, 3080894364, a7, 3687930830);
  }
  unsigned int v64 = (a8 + 1094997820) & 0xBEBBA6E9;
  uint64_t v65 = v64 + 474 - 1024;
  STACK[0x440] = v65;
  *(unsigned char *)(v61 - 0x72E93EC0CCAF5782 + v65) = (a60 ^ 0xBA) * (a60 + 17);
  return (*(uint64_t (**)(void))(v60 + 8 * (int)(((STACK[0x440] == 0) * a5) ^ v64)))();
}

uint64_t sub_100045EA8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v12 = 4 * (v9 + v7);
  int v13 = v2 - 423212695 + (*(_DWORD *)(*(void *)(a2 - 0x139154EEB4327E8) + v12) ^ 0x2380DF27);
  *(_DWORD *)(*(void *)(a1 - 0x139154EEB4327E8) + v12) = v13 + v8 - ((v11 + v5 + 795 - 1543) & (2 * v13));
  int v14 = v9 + 1 + v3;
  BOOL v16 = v14 <= v4 && v14 >= v6;
  return (*(uint64_t (**)(void))(v10 + 8 * ((25 * v16) ^ v5)))();
}

void sub_100045F80(uint64_t a1)
{
  int v1 = 1178560073 * ((-2 - ((a1 | 0x5A50E64C) + (~a1 | 0xA5AF19B3))) ^ 0x1F3B61D1);
  int v2 = *(_DWORD *)(a1 + 40) ^ v1;
  if (*(void *)(a1 + 48) | *(void *)(a1 + 64)) {
    BOOL v3 = *(_DWORD *)(a1 + 24) + v1 == 1243141020;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = v3;
  __asm { BRAA            X8, X17 }
}

void sub_1000460EC()
{
}

uint64_t sub_100046148()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((2810 * (qword_100082808 == 0)) ^ v0)))();
}

uint64_t sub_100046180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v18 - 136) = v15;
  *(void *)(v18 - 128) = v13;
  *(_DWORD *)(v18 - 144) = (v16 - 1582) ^ (1225351577
                                         * ((((2 * ((v18 - 144) ^ 0x34E6FF81)) | 0xB1E44DAA)
                                           - ((v18 - 144) ^ 0x34E6FF81)
                                           + 655218987) ^ 0xCF8E0142));
  *(void *)(v18 - 120) = v13;
  *(void *)(v18 - 112) = v14;
  (*(void (**)(uint64_t))(v17 + 8 * (v16 + 483)))(v18 - 144);
  int v19 = 1374699841
      * ((~((v18 - 144) ^ 0xCE91F438 | 0xE3331AF3) + (((v18 - 144) ^ 0xCE91F438) & 0xE3331AF3)) ^ 0xBFA9093D);
  *(_DWORD *)(v18 - 144) = (v16 - 377) ^ v19;
  *(_DWORD *)(v18 - 128) = -128426105 - v19 + v12;
  *(void *)(v18 - 136) = a12;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v16 ^ 0xFFD)))(v18 - 144);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((*(_DWORD *)(v18 - 140) == ((2 * v16) ^ 0x5F2A85C))
                                              * ((v16 - 636) ^ 0x4F6)) ^ v16)))(v20);
}

uint64_t sub_1000462B4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((125 * (v0 < (v1 ^ 0x37A) + 933 + (((v1 ^ 0x37A) + 352) | 0x48u) - 1689)) ^ v1 ^ 0x37A)))();
}

uint64_t sub_1000462F8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 & 0x1F ^ 0x18) != ((v1 + 344) ^ 0x433)) * ((v1 - 48) ^ 0x29D)) ^ v1)))();
}

uint64_t sub_10004633C(uint64_t a1, int a2, int8x16_t *a3, int8x16_t a4, int8x16_t a5)
{
  *(int8x16_t *)(v7 + (v6 + 16)) = vaddq_s8(vaddq_s8(*a3, a5), vmvnq_s8(vandq_s8(vaddq_s8(*a3, *a3), a4)));
  return (*(uint64_t (**)(void))(v8 + 8 * (((a1 == 16) * a2) ^ v5)))();
}

void sub_100046348()
{
  *(void *)(v0 + 312) = *(void *)(v1 + 8 * (int)(STACK[0x420] - 1078));
  JUMPOUT(0x100043830);
}

uint64_t sub_100046374(char a1, int8x16_t a2, int8x8_t a3, int8x8_t a4, uint64_t a5, char a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  uint64_t v69 = (a8 + v68 - 8);
  v71.val[0].i64[0] = ((_BYTE)a8 + (_BYTE)v68 - 8) & 0xF;
  v71.val[0].i64[1] = ((_BYTE)a8 + v67 - 8) & 0xF;
  v71.val[1].i64[0] = ((_BYTE)a8 + v66 - 8) & 0xF;
  v71.val[1].i64[1] = ((_BYTE)a8 + v62 - 8) & 0xF;
  v71.val[2].i64[0] = ((_BYTE)a8 + v65 - 8) & 0xF;
  v71.val[2].i64[1] = ((_BYTE)a8 + v64 - 8) & 0xF;
  v71.val[3].i64[0] = ((_BYTE)a8 + a6 - 8) & 0xF;
  v71.val[3].i64[1] = ((_BYTE)a8 + a1 - 8) & 0xF;
  *(int8x8_t *)(a7 + v69) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a7 + v69), *(int8x8_t *)(v60 + (v69 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v59 + (v69 & 0xF) - 7), *(int8x8_t *)(v61 + (v69 & 0xF) - 7)))), a4), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v71, a2), a3)));
  return (*(uint64_t (**)(void))(a59 + 8 * (((a8 != v63 + 8) | (4 * (a8 != v63 + 8))) ^ a11)))();
}

void sub_10004639C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) ^ (1755732067 * (((a1 | 0x83D72B3C) - (a1 & 0x83D72B3C)) ^ 0x5D1196E7));
  uint64_t v2 = *(void *)(a1 + 8);
  v4[0] = v1 + 628203409 * (((v4 | 0xF56E3C19) + (~v4 | 0xA91C3E6)) ^ 0x77E6302B) - 459;
  uint64_t v5 = v2;
  BOOL v3 = (char *)*(&off_10007DD80 + v1 - 1155) - 4;
  (*(void (**)(_DWORD *))&v3[8 * (v1 ^ 0xC34)])(v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000464DC()
{
  int v5 = v4 + v0 + 1058;
  *int v1 = v5 ^ v9 ^ 0x7B1CE49Du;
  uint64_t v12 = v7;
  unsigned int v11 = 535753261 * (((v10 | 0x7AAA3359) + (~v10 | 0x8555CCA6)) ^ 0x705E3D77)
      - 1682147803
      + v5;
  (*(void (**)(unsigned char *))(v3 + 8 * (v5 ^ v4)))(v10);
  unsigned int v11 = v5
      - 1682147803
      + 535753261 * ((v10 - 1904952353 - 2 * ((unint64_t)v10 & 0x8E74BBDF)) ^ 0x8480B5F0);
  uint64_t v12 = v8;
  (*(void (**)(unsigned char *))(v3 + 8 * (v5 - 1682146853)))(v10);
  return v2 ^ 0x1F5F6B87u;
}

void sub_100046604()
{
}

void sub_10004660C()
{
}

uint64_t sub_1000466A0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18)
{
  *a4 = 0;
  *a5 = 0;
  a18 = 108757529 * ((&a17 & 0xA7DA3C6 | ~(&a17 | 0xA7DA3C6)) ^ 0x151E3E12) - 504207030;
  uint64_t v19 = (*(uint64_t (**)(int *))(v18 + 17848))(&a17);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1504 * (a17 == 526347143)) ^ 0x29Au)))(v19);
}

uint64_t sub_1000467A8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1988
                                * (*(unsigned __int8 *)(v1 + (a1 & 0x703370FD ^ 0x840E947F) + v2) == ((-33 * (a1 & 0xFD ^ 0x7D)) ^ 0x30))) ^ a1 & 0x703370FDu)))();
}

void sub_10004680C()
{
  *(void *)(v0 + 312) = *(void *)(v1 + 8 * (int)(STACK[0x420] - 1108));
  JUMPOUT(0x100043830);
}

uint64_t sub_100046830@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  int v6 = *(_DWORD *)((char *)&STACK[0x2EC] + ((v4 + v2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v4 + v2)) = ((v3 - 31) ^ HIBYTE(v6) ^ 0xE4)
                                           - ((2 * ((v3 - 31) ^ HIBYTE(v6) ^ 0xE4)) & 0xD6)
                                           - 21;
  *(unsigned char *)(a1 + (v4 + v2 + 1)) = (BYTE2(v6) ^ 0xD1)
                                               - 2 * ((BYTE2(v6) ^ 0xD1) & 0xEF ^ BYTE2(v6) & 4)
                                               - 21;
  *(unsigned char *)(a1 + (v4 + v2 + 2)) = (BYTE1(v6) ^ 0x5B)
                                               - 2 * ((BYTE1(v6) ^ 0x5B) & 0xEF ^ BYTE1(v6) & 4)
                                               - 21;
  *(unsigned char *)(a1 + (v4 + v2 + 3)) = v6 ^ 0x25;
  unsigned int v7 = LODWORD(STACK[0x348]) - 1742330787;
  BOOL v8 = v7 < a2;
  BOOL v9 = v4 - 1119382050 < v7;
  if (v4 - 1119382050 < a2 != v8) {
    BOOL v9 = v8;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((207 * v9) ^ v3)))();
}

uint64_t sub_100046924@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  int v17 = a1 + 1290;
  int v18 = 1224239923
      * ((857809693 - ((v16 - 144) ^ 0xE6269F18 | 0x3321231D) + ((v16 - 144) ^ 0xE6269F18 | 0xCCDEDCE2)) ^ 0xD84BBE2D);
  *(void *)(v16 - 136) = &a13 + v13;
  *(_DWORD *)(v16 - 144) = v18 ^ 0x432AA48E;
  *(_DWORD *)(v16 - 128) = v18 + v17 + 238;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v17 ^ 0xF84)))(v16 - 144);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((((v17 ^ 0x4D9) - 931) * (v15 == 0)) ^ (v17 - 1766))))(v19);
}

uint64_t sub_1000469F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v12 = (a5 - 2124560029);
  *(unsigned char *)(v11 + v12) ^= *(unsigned char *)(v8 + (v12 & 0xF)) ^ *(unsigned char *)((v12 & 0xF) + v7 + 2) ^ *(unsigned char *)((v12 & 0xF) + v9 + 4) ^ (119 * (v12 & 0xF));
  return (*(uint64_t (**)(void))(v10 + 8 * ((26 * (a5 - 1 != v6)) ^ (a6 - 1855))))();
}

uint64_t sub_100046A60()
{
  *(void *)(v1 + v4) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v2 == v4) ^ v3) & 1 | (8 * (((v2 == v4) ^ v3) & 1))) ^ v0)))();
}

uint64_t sub_100046A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21,uint64_t a22,uint64_t a23)
{
  a21 = (v24 - 410) ^ ((&a21 ^ 0x6DF41809) * v23);
  a22 = (uint64_t)&a20 + v25 + 4;
  a23 = a18;
  uint64_t v27 = (*(uint64_t (**)(unsigned int *))(v26 + 8 * (v24 ^ 0xDABu)))(&a21);
  return sub_10001E360(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_100046AE8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 32) = *(void *)(a2 + 8);
  return 0;
}

void sub_100046B00(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 535753261 * ((2 * (a1 & 0x5E99CC2A) - a1 - 1587137579) ^ 0xAB923DFA);
  uint64_t v2 = *(void *)a1;
  if (*(_DWORD *)(*(void *)a1 - 0x139154EEB4327ECLL) - 1740488377 >= 0) {
    unsigned int v4 = *(_DWORD *)(*(void *)a1 - 0x139154EEB4327ECLL) - 1740488377;
  }
  else {
    unsigned int v4 = 1740488377 - *(_DWORD *)(*(void *)a1 - 0x139154EEB4327ECLL);
  }
  uint64_t v3 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v3 - 0x139154EEB4327ECLL) - 1740488377 >= 0) {
    unsigned int v5 = *(_DWORD *)(v3 - 0x139154EEB4327ECLL) - 1740488377;
  }
  else {
    unsigned int v5 = 1740488377 - *(_DWORD *)(v3 - 0x139154EEB4327ECLL);
  }
  v8[1] = (460628867 * (((v8 | 0xE042447A) - (v8 & 0xE042447A)) ^ 0xACD4C607)) ^ (v1 + 735);
  uint64_t v9 = v2;
  uint64_t v6 = (char *)*(&off_10007DD80 + v1 - 157) - 4;
  (*(void (**)(_DWORD *))&v6[8 * v1 + 16080])(v8);
  if (v4 >= v5) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = v4;
  }
  __asm { BRAA            X13, X17 }
}

uint64_t sub_100046CB4(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 + a1 - 876701046) < 0x7FFFFFFF) * (a1 - 77)) ^ a1)))();
}

uint64_t sub_100046D0C@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 - 3 + (v5 + v3)) = *(_DWORD *)(v2 - 3 + (v5 + v3));
  return (*(uint64_t (**)(void))(v6 + 8 * ((3419 * (a1 - 365 == v4)) ^ (a1 + 947))))();
}

uint64_t sub_100046D54()
{
  return sub_100046D70();
}

uint64_t sub_100046D70@<X0>(int a1@<W0>, char a2@<W7>, uint64_t a3@<X8>)
{
  int v10 = (*(unsigned __int8 *)(v4 + a3) ^ v7) - (*(unsigned char *)(v3 + a3) + ((v5 + 4) | a2) + 46 + 66);
  return (*(uint64_t (**)(void))(v9 + 8 * ((((v6 & (2 * v10)) + (v10 ^ v8) == v8) * a1) ^ v5)))();
}

uint64_t sub_100046DC0()
{
  (*(void (**)(void))(v2 + 8 * (v1 ^ 0xCA9)))();
  return (*(uint64_t (**)(void))(v2 + 8 * ((13 * (*(void *)(v0 + 328) != 0)) | (v1 - 1019))))();
}

uint64_t sub_100046DFC@<X0>(void *a1@<X1>, int a2@<W6>, int a3@<W7>, uint64_t a4@<X8>)
{
  *(_DWORD *)(*a1 + 4 * (v5 + v4)) = v7;
  return (*(uint64_t (**)(void))(a4 + 8 * (((v9 == ((v8 + 147) ^ a2) + v6) * a3) ^ (v8 + 205))))();
}

uint64_t sub_100046E4C()
{
  BOOL v4 = v3 + v2 + 2 >= (((v1 + 362) | 0x104) ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(void))(v0 + 8 * ((2 * v4) | (8 * v4) | (v1 + 974))))();
}

uint64_t sub_100046E9C()
{
  _DWORD *v2 = v1;
  int v4 = v1 - ((2 * v1) & 0x5212CBB8) + (((v0 - 2182) | 0x19) ^ 0x290965C5);
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((39
                                * (((v4 << ((v0 - 30) ^ 0x69)) & 0x6EEE4FBC ^ 0x42024BB8) + (v4 ^ 0x5E7E4202) - 4458120 == 1999839574)) ^ v0)))();
}

void sub_100046F38()
{
  uint64_t v4 = 4 * (v1 - 2105948263);
  unsigned int v5 = -1195886157
     * ((*(_DWORD *)(*(void *)STACK[0x3F8] + (*(int *)STACK[0x3F0] & 0xFFFFFFFF80941F5CLL)) ^ (v2 + v4)) & 0x7FFFFFFF);
  int v6 = v5 ^ HIWORD(v5);
  uint64_t v7 = 4 * ((-1195886157 * v6) >> (((v0 - 99) & 0xEF) + 42));
  *(_DWORD *)(v3 + v4) ^= *(_DWORD *)(v2 + v4) ^ *(_DWORD *)((char *)*(&off_10007DD80 + (v0 ^ 0x259)) + v7 - 4) ^ *(_DWORD *)((char *)*(&off_10007DD80 + (v0 ^ 0x271)) + v7 - 8) ^ *(_DWORD *)((char *)*(&off_10007DD80 + (v0 ^ 0x24C)) + v7 - 12) ^ (968032256 * v6) ^ (-1195886157 * v6) ^ (-2081955537 * ((-1195886157 * v6) >> (((v0 - 99) & 0xEF) + 42)));
  JUMPOUT(0x10001B79CLL);
}

uint64_t sub_100047038@<X0>(uint64_t a1@<X0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  uint64_t v9 = 15 * (a2 ^ 0x496u);
  *(_OWORD *)(v4 + ((((v9 - 1123) | 0x481u) + v7) & (v3 + v6))) = *a3;
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((88 * (((v9 ^ 0x1FFFFFB73) & ((a1 ^ 0x499) + v5)) != 16)) | v9)))();
}

uint64_t sub_1000470C4@<X0>(char a1@<W2>, char a2@<W3>, int a3@<W4>, int a4@<W5>, uint64_t a5@<X8>)
{
  uint64_t v14 = (v7 + a3);
  *(unsigned char *)(v13 + v14) = *(unsigned char *)(v9 + v14) ^ *(unsigned char *)(v5 + (v14 & 0xF)) ^ *(unsigned char *)(a5 + (v14 & 0xF)) ^ *(unsigned char *)((v14 & 0xF) + v6 + 2) ^ ((v14 & 0xF) * (((v8 + a1) & a2) + 0x80)) ^ v10;
  return (*(uint64_t (**)(void))(v12 + 8 * (((v7 - 1 == v11) * a4) ^ v8)))();
}

uint64_t sub_100047128(int a1, int a2, int a3)
{
  int v4 = (a1 - 1047737427) & 0x3E7335DE;
  unsigned int v5 = a2 - 1522488795 + (v4 ^ 0x5EA) - 369;
  if (v5 <= 0x40) {
    unsigned int v5 = 64;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((57 * (a3 + v5 > ((v4 - 1177) ^ (a2 - 1522488795)))) ^ v4)))();
}

void sub_1000471A0(uint64_t a1)
{
  int v1 = 1178560073 * ((-2 - ((a1 | 0x20C3A6CC) + (~a1 | 0xDF3C5933))) ^ 0x65A82151);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10004723C(unint64_t a1)
{
  *(void *)(v2 + 304) = v3 + ((v1 - 574) | 0x288u) - 1096;
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8 * (v1 ^ (19 * (v4 > a1))));
  *(void *)(v2 + 96) = a1;
  return v6();
}

uint64_t sub_100047304(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, void))(v7 + 8 * ((1632 * (v8 - 1 == a7)) ^ v9)))(a1, (a2 + 1));
}

void sub_100047380()
{
}

uint64_t sub_10004759C@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  v7.i64[0] = 0xECECECECECECECECLL;
  v7.i64[1] = 0xECECECECECECECECLL;
  *(int8x16_t *)(a1 + v2 + 16 + 100 * (a2 ^ 0x5C6u)) = vaddq_s8(vaddq_s8(*v4, v7), vmvnq_s8(vandq_s8(vaddq_s8(*v4, *v4), v6)));
  return (*(uint64_t (**)(void))(v5 + 8 * ((709 * (v3 == 16)) ^ a2)))();
}

uint64_t sub_1000475A8(int8x16_t *a1, double a2, double a3, double a4, double a5, int8x16_t a6, int8x16_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  *a1 = vaddq_s8(vaddq_s8(*(int8x16_t *)(v15 + (v11 + v14)), a7), vmvnq_s8(vandq_s8(vaddq_s8(*(int8x16_t *)(v15 + (v11 + v14)), *(int8x16_t *)(v15 + (v11 + v14))), a6)));
  return (*(uint64_t (**)(void))(v13 + 8 * (a10 ^ (a11 + v12 + 1842))))();
}

uint64_t sub_100047600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v29 = *(unsigned __int8 *)(v28 - 124) ^ 0xDD;
  if (v29 == 1)
  {
    char v30 = (a6 - 96) & 0xF9;
    unsigned int v36 = *(_DWORD *)(v28 - 156);
    unsigned int v35 = *(_DWORD *)(v28 - 152);
    *(unsigned char *)(v28 - 164) = (((_BYTE)v35 << (v30 + 90)) ^ 0x20)
                          - ((2 * (((_BYTE)v35 << (v30 + 90)) ^ 0x20)) & 0xD0)
                          - 21;
    char v34 = -42;
    *(unsigned char *)(v28 - 163) = ((v35 >> 5) ^ 0x87) - ((2 * ((v35 >> 5) ^ 0x87)) & 0xD6) - 21;
    *(unsigned char *)(v28 - 162) = ((v35 >> 13) ^ 8) - 2 * (((v35 >> 13) ^ 8) & 0xEF ^ (v35 >> 13) & 4) - 21;
    *(unsigned char *)(v28 - 161) = ((v35 >> 21) ^ 0x54) - ((2 * ((v35 >> 21) ^ 0x54)) & 0xD6) - 21;
    HIDWORD(v37) = v36 ^ 5;
    LODWORD(v37) = v35 ^ 0xA0000000;
    *(unsigned char *)(v28 - 160) = (v37 >> 29) - ((2 * (v37 >> 29)) & 0xD6) - 21;
    *(unsigned char *)(v28 - 159) = ((v36 >> 5) ^ 0x31) - ((2 * ((v36 >> 5) ^ 0x31)) & 0xD6) - 21;
    *(unsigned char *)(v28 - 158) = ((v36 >> 13) ^ 0xA8) + (~(2 * ((v36 >> 13) ^ 0xA8)) | 0x29) - 20;
    unsigned int v33 = (v36 >> 21) ^ 0x1D;
    goto LABEL_5;
  }
  if (v29 == 2)
  {
    char v30 = a5 + a6 - 87;
    unsigned int v33 = *(_DWORD *)(v28 - 156);
    unsigned int v31 = *(_DWORD *)(v28 - 152);
    *(unsigned char *)(v28 - 164) = v30 + ((v33 >> 21) ^ 0x1D) - ((2 * ((v33 >> 21) ^ 0x1D)) & 0xD6) + 66;
    *(unsigned char *)(v28 - 163) = ((v33 >> 13) ^ 0xA8) - 2 * (((v33 >> 13) ^ 0xA8) & 0xEF ^ (v33 >> 13) & 4) - 21;
    *(unsigned char *)(v28 - 162) = ((v33 >> 5) ^ 0x31) - ((2 * ((v33 >> 5) ^ 0x31)) & 0xD6) - 21;
    HIDWORD(v32) = v33 ^ 5;
    LODWORD(v32) = v31 ^ 0xA0000000;
    *(unsigned char *)(v28 - 161) = (v32 >> 29) - ((2 * (v32 >> 29)) & 0xD6) - 21;
    *(unsigned char *)(v28 - 160) = ((v31 >> 21) ^ 0x54) - ((2 * ((v31 >> 21) ^ 0x54)) & 0xD6) - 21;
    *(unsigned char *)(v28 - 159) = ((v31 >> 13) ^ 8) + (~(2 * ((v31 >> 13) ^ 8)) | 0x29) - 20;
    *(unsigned char *)(v28 - 158) = ((v31 >> 5) ^ 0x87) - ((2 * ((v31 >> 5) ^ 0x87)) & 0xD6) - 21;
    LOBYTE(v33) = (8 * v31) ^ 0x20;
    char v34 = -48;
LABEL_5:
    *(unsigned char *)(v28 - 157) = v33 - (((_BYTE)v33 << ((a6 + v30 + 87) ^ 0xE)) & v34) - 21;
  }
  return sub_10004799C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_100047830@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(*a1 - 0x3F70C0CAD4126774) = 0;
  return (*(uint64_t (**)(void))(a2 + 8 * (((*v3 == v2 + v4 - 187) * (v4 ^ 0xBF)) | v4)))();
}

uint64_t sub_10004787C@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W8>)
{
  BOOL v11 = v5 < a1;
  *(unsigned char *)(v10 - 220 + (a5 - 1398064152)) = a3
                                                          - 115
                                                          + *(unsigned char *)(v8 + (v7 + a4))
                                                          + (~(2 * *(unsigned char *)(v8 + (v7 + a4))) | 0x29)
                                                          - 66;
  unsigned int v12 = v7 + 1 + a2;
  int v13 = v11 ^ (v12 < a1);
  BOOL v14 = v12 < v5;
  if (!v13) {
    BOOL v11 = v14;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((!v11 * v6) | a3)))();
}

uint64_t sub_1000478F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  return (*(uint64_t (**)(void))(v24 + 8 * (((a23 == 2029314865) * (v23 ^ 0x7F6)) ^ v23)))();
}

uint64_t sub_100047938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((LODWORD(STACK[0x3C4]) ^ 0xA04) * (v5 == v7)) ^ (a5 - 1079))))();
}

uint64_t sub_100047964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((((v8 - 288) | 0x5B) - 1011) * (*(_DWORD *)(v9 + v10 * (uint64_t)a8 + 36) == a6)) ^ v8)))();
}

uint64_t sub_10004799C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  HIDWORD(a16) = HIDWORD(a12) + 322302574;
  v31.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v31.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  HIDWORD(a20) = (a6 - 952716564) & 0x3CED7EBC;
  return sub_10001C710((const char *)(v30 - 220), (v28 - 2), 41, 182, a5, a6, (uint64_t)&off_10007DD80, *(double *)vdupq_n_s32(0x3EBED70Eu).i64, *(double *)vdupq_n_s32(0x1F5F6B87u).i64, v31, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           v29 - 16,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_100047A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7
                                                     + 8
                                                     * (((a5 + v6 + 1234 + ((v6 - 67538113) & 0x2F67ADFF) - 2139)
                                                       * (v5 == 63)) ^ v6)))(a1, -1335000053);
}

void sub_100047A78(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_100047AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * ((((((v5 + 190) | 0x100) ^ 0x1B2)
                                                                          + ((v5 - 1481316027) & 0x584B1698))
                                                                         * (v3 == 63)) ^ (v5 + 1764))))(a1, a2, a3, 235);
}

uint64_t sub_100047B18()
{
  BOOL v4 = (*(uint64_t (**)(void))(v3 + 8 * (v2 + 1903)))(v0 ^ v1) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * ((((v2 - 347) ^ 0x7F1) - 909) ^ ((v2 - 347) | 0x410))) ^ v2)))();
}

uint64_t sub_100047B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v10 = *((_DWORD *)&STACK[0x2AC] + ((v8 + v5) >> (v7 ^ (a5 - 127) ^ (a5 + 2))) + 18);
  *(unsigned char *)(a2 + (v8 + v5)) = (HIBYTE(v10) ^ 0xDB) - ((2 * (HIBYTE(v10) ^ 0xDB)) & 0xD6) - 21;
  *(unsigned char *)(a2 + (v8 + v5 + 1)) = (BYTE2(v10) ^ 0xD1)
                                               - 2 * ((BYTE2(v10) ^ 0xD1) & 0xEF ^ BYTE2(v10) & 4)
                                               - 21;
  *(unsigned char *)(a2 + (v8 + v5 + 2)) = (BYTE1(v10) ^ 0x5B)
                                               - 2 * ((BYTE1(v10) ^ 0x5B) & 0xEF ^ BYTE1(v10) & 4)
                                               - 21;
  *(unsigned char *)(a2 + (v8 + v5 + 3)) = v10 ^ 0x25;
  unsigned int v11 = LODWORD(STACK[0x308]) + 61646556;
  BOOL v12 = v11 < v6;
  BOOL v13 = v8 + 992862982 < v11;
  if (v8 + 992862982 < v6 != v12) {
    BOOL v13 = v12;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * (v7 | (32 * !v13))))();
}

void sub_100047C64(_DWORD *a1@<X8>)
{
  *a1 = v1 + 84;
  JUMPOUT(0x10004207CLL);
}

uint64_t sub_100047C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(_DWORD *)(a16 + 4 * (v19 - 2035262287)) = v16;
  int v21 = v17 - 903 + v19 - 386756716;
  BOOL v23 = v21 > -498977092 && v21 < v18;
  return (*(uint64_t (**)(void))(v20 + 8 * ((21 * v23) | v17)))();
}

uint64_t sub_100047CC8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, ...)
{
  va_start(va, a18);
  return sub_1000427E8(a1, a6, (uint64_t *)va);
}

uint64_t sub_100047CFC(unint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 44) - 1755732067 * (((a1 | 0xCC66703E) - (a1 | 0x33998FC1) + 865701825) ^ 0x12A0CDE5);
  unsigned int v26 = *(_DWORD *)(a1 + 16) + 1755732067 * (((a1 | 0xCC66703E) - (a1 | 0x33998FC1) + 865701825) ^ 0x12A0CDE5);
  int v3 = *(_DWORD *)(a1 + 36);
  unint64_t v16 = 1755732067
      * (((a1 | 0xDEEEE61CC66703ELL) - (a1 | 0xF211119E33998FC1) - 0xDEEEE61CC66703FLL) ^ 0xD045495E12A0CDE5);
  int v4 = v3 + 1755732067 * (((a1 | 0xCC66703E) - (a1 | 0x33998FC1) + 865701825) ^ 0x12A0CDE5);
  unsigned int v5 = 1178560073 * ((1588112264 - (&v27 | 0x5EA8AB88) + (&v27 | 0xA1575477)) ^ 0x1BC32C15);
  uint64_t v24 = &STACK[0x72E93EC0CCAF5A6E];
  int v28 = &STACK[0x72E93EC0CCAF5A6E];
  int v29 = v2 - v5 - 1882357527;
  unsigned int v27 = 1184294775 - v5;
  uint64_t v6 = (*(uint64_t (**)(unsigned int *))((char *)*(&off_10007DD80 + (v2 ^ 0xA7)) + 8 * (v2 ^ 0x8DB) - 4))(&v27);
  int v15 = v4 - 461360650;
  int v14 = v4 - 1852862698;
  int v11 = v4 + 1614707568;
  int v10 = v4 - 918853615;
  v8[1] = (char *)&v8[-132764623] + 2;
  v8[0] = (char *)&v8[-132764709] + 5;
  uint64_t v18 = (v2 - 1952158165) ^ 0x6Bu;
  int v19 = v2 ^ 0x33E;
  int v13 = v2 ^ 0x17;
  int v12 = (v2 - 1952158165) & 0x745B97FF;
  int v17 = 289 * (v12 ^ 0x66D);
  int v9 = v2 ^ 0xD4;
  uint64_t v25 = v2 ^ 0xD4u;
  int32x4_t v22 = vdupq_n_s32(0x1F5F6B87u);
  int32x4_t v23 = vdupq_n_s32(0x3EBED70Eu);
  int32x4_t v21 = vdupq_n_s32(0x1F5F6B8Fu);
  unint64_t v20 = a1;
  return sub_100051BD4(v6, v2);
}

uint64_t sub_100047FB4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24
                                                              + 8
                                                              * ((3210
                                                                * (*(_DWORD *)(a21
                                                                             + 4 * (v23 + a1 + ((v22 - 826) | 0x487u))) == ((v22 - 1318100615) & 0x4E909EF7 ^ (v21 + 851)))) ^ (v22 + 113))))(316, 2147482380, 509);
}

uint64_t sub_100048048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v17 - 120) = v16 + 1374699841 * ((v17 - 136) ^ 0x6DF41809) + 366;
  *(void *)(v17 - 136) = v14;
  *(void *)(v17 - 128) = a14;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 ^ 0xD47)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((a11 < (v16 ^ 0x5AD)) ^ v16)))(v18);
}

uint64_t sub_1000480CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * ((59 * ((a5 + 1 + v7) > 0x27)) ^ v6)))(v5);
}

void sub_100048194(int a1@<W8>)
{
  *(void *)(v5 - 0xAA58417147CEA7FLL) = *v2;
  *(_DWORD *)(v6 - 0x234F284A02F7E69BLL) = a1;
  *(void *)(v9 - 0x2C138C8FAF40FC1ALL) = 0x3B6203503B620350;
  void *v2 = 0;
  *int v4 = 226063315;
  unsigned int v3 = ((2 * (*(_DWORD *)(v9 - 0x2C138C8FAF40FC0ELL) & 0xFFFFFFFE ^ 0xCA875928)) | 0x44367150)
     - (*(_DWORD *)(v9 - 0x2C138C8FAF40FC0ELL) & 0xFFFFFFFE ^ 0xCA875928)
     - 572209320;
  *(_DWORD *)(v9 - 0x2C138C8FAF40FC0ELL) = ((v3 & ((v1 + 1566) ^ 0x2CA500F1) ^ 0xCA50017)
                                          + (v3 ^ 0xE35A39A8)
                                          - ((v3 ^ 0xE35A39A8) & 0x2CA508B6)) ^ 0x2763509E;
  *(_DWORD *)(v8 + 28) = *v7;
}

uint64_t sub_1000482E0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((2 * (*(void *)(v0 + 128) == 0)) | (8 * (*(void *)(v0 + 128) == 0))) ^ (v1 + 423))))();
}

uint64_t sub_100048308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,long long a44)
{
  *(long long *)((char *)&a44 + 4) = (__int128)vaddq_s8(vsubq_s8(*(int8x16_t *)(v49 + (v45 + a5)), vandq_s8(vaddq_s8(*(int8x16_t *)(v49 + (v45 + a5)), *(int8x16_t *)(v49 + (v45 + a5))), v51)), v50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * ((((((v44 - 7) | a8) ^ v46) == 16) * v47) ^ (v44 + 426))))(a1, a2, a3, (char *)&a44 + 4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_100048364()
{
  unsigned int v3 = (unsigned int *)STACK[0x2D0];
  (*(void (**)(void, unint64_t *, uint64_t))(v2 + 8 * (v1 + 692)))(*(unsigned int *)STACK[0x2D0], &STACK[0x438], 2048);
  BOOL v4 = (*(uint64_t (**)(void, unint64_t *, void, uint64_t))(v2 + 8 * (v1 + 782)))(*v3, &STACK[0x560], (LODWORD(STACK[0x4DC]) + v0), 1) == (v1 ^ 0x1AC) - 1115;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * (v1 - 569)) ^ v1)))();
}

uint64_t sub_1000483F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unsigned int *a5)
{
  STACK[0x530] = 0x9F2D4B9C0625FB43;
  uint64_t v9 = *a5;
  unint64_t v10 = 1178560073 * ((v8 - 0x21741D930661398ALL - 2 * ((v8 - 144) & 0xDE8BE26CF99EC706)) ^ 0xC577B284430ABF64);
  *(_DWORD *)(v8 - 128) = v5 - 1473496235 + v10;
  *(void *)(v8 - 136) = v10 + v7;
  *(_DWORD *)(v8 - 108) = v10 + v5 + 1980802588;
  *(_DWORD *)(v8 - 104) = ((v5 - 1473496235) ^ 0x5D) - v10;
  *(_DWORD *)(v8 - 112) = (v5 - 1473496246) ^ v10;
  *(_DWORD *)(v8 - 140) = v10;
  *(void *)(v8 - 120) = v9 + v10;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v5 ^ (a3 - 1842))))(v8 - 144);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * *(int *)(v8 - 144)))(v11);
}

void sub_1000484F8()
{
}

uint64_t sub_100048624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  if ((a13 - 474666373) < 0xFCD840F2 != v13 - 711973896 < (v15 - 52938070)) {
    BOOL v16 = (a13 - 474666373) < 0xFCD840F2;
  }
  else {
    BOOL v16 = v13 - 711973896 < (a13 - 474666373);
  }
  return (*(uint64_t (**)(void))(v14 + 8 * ((204 * v16) ^ v15)))();
}

void sub_100048698()
{
}

uint64_t sub_1000486A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  BOOL v24 = a18 - v21 == (v19 ^ 0x267) + 40392874 && v18 != ((v20 + v19 - 1190) ^ 0xAF569717);
  return (*(uint64_t (**)(void))(v22 + 8 * ((14 * v24) ^ v19)))();
}

uint64_t sub_100048700(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned int a25)
{
  HIDWORD(a21) = HIDWORD(a20) + 604952958;
  v26.n128_u64[0] = 0xD6D6D6D6D6D6D6D6;
  v26.n128_u64[1] = 0xD6D6D6D6D6D6D6D6;
  v27.n128_u64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v27.n128_u64[1] = 0xEBEBEBEBEBEBEBEBLL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * (int)((((163 * (a21 ^ 0x46) - 2000) ^ a21 ^ 0x80C) * (a17 < HIDWORD(a16))) | a21)))(2801639823, 2365043103, 1929924193, 1517301994, a25, 2959569291, 11, 2777665302, a1, a2, a3, a4, v26, v27, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21);
}

uint64_t sub_1000487B0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5
                                           + 8
                                           * ((((v3 & 0x18) == (((a2 - 1497) | 0x410) ^ 0x45B))
                                             * (((a2 - 1408) | 0x413) ^ 0x43B)) ^ (a2 - 1294))))((v2 - v4));
}

uint64_t sub_100048800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((54 * (v9 + v6 + 63 < ((a5 + (v7 ^ (a6 + 265)) + 1457) ^ (v9 + 945)) + v6)) ^ v7)))();
}

uint64_t sub_100048850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((*(_DWORD *)(v10 + (v11 + a7 + ((v8 - 443017874) & 0x1A67EF81)) * (uint64_t)a8) != 613075069)
                                * v9) ^ (v8 + 1018))))();
}

uint64_t sub_100048858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  int v44 = STACK[0x420] - 923;
  *(_DWORD *)(v41 + 52) = a40
                        + ((((LODWORD(STACK[0x644]) ^ v43) + (v40 ^ v43)) % 0x2710) ^ 0xF5DF5FB7)
                        + ((2 * (((LODWORD(STACK[0x644]) ^ v43) + (v40 ^ v43)) % 0x2710)) & 0x3F6E)
                        + 774436026;
  int v45 = STACK[0x64C];
  LODWORD(STACK[0x46C]) = STACK[0x64C];
  return (*(uint64_t (**)(void))(v42 + 8 * ((1839 * (v45 == v43)) ^ v44)))();
}

uint64_t sub_1000488EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v7
                                                                      + 8
                                                                      * (int)(((((v5 + 2038974714) & 0x8677B6DF) - 747)
                                                                             * (v4 == v6)) | v5)))((v3 - v6), a2, a3, 3768594526);
}

uint64_t sub_100048930()
{
  uint64_t v5 = v0 + ((v1 - 155) | v3) - 1748;
  BOOL v7 = v2 == 15 || v5 == (((v1 - 1047) | 0x20u) ^ 0x4ACFF0C1A5FD164CLL);
  return (*(uint64_t (**)(void))(v4 + 8 * ((106 * v7) ^ v1)))();
}

uint64_t sub_100048984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  *(void *)(*(void *)(a16 + 96) + 504) = v18 + 1;
  *(_DWORD *)(*(void *)(a16 + 96) + 496) = a18 - 1;
  int v21 = 1178560073 * ((((v20 - 160) | 0xA18E8F2E) - ((v20 - 160) & 0xA18E8F2E)) ^ 0x1B1AF74C);
  *(_DWORD *)(v20 - 144) = -1882357464 - v21;
  STACK[0x318] = (unint64_t)&STACK[0x72E93EC0CCAF5A2E];
  *(_DWORD *)(v20 - 160) = 1184294775 - v21;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v19 + 18208))(v20 - 160);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((16
                                              * (a18
                                               - 1196230952
                                               + ((2 * LODWORD(STACK[0x2F0])) & 0x5E ^ 0x48)
                                               + (STACK[0x2F0] & 0x3F ^ 0xCB5B9CCB) > 0xFFFFFFBF)) ^ 0x6CCu)))(v22);
}

void sub_100048B90()
{
}

uint64_t sub_100048B9C@<X0>(unsigned int a1@<W1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((480 * (*(_DWORD *)(*v3 + 4 * a1) == v2)) ^ v4)))();
}

uint64_t sub_100048BCC@<X0>(int a1@<W8>)
{
  unsigned int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xAAB));
  return v3(v1);
}

uint64_t sub_100048C00(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  *(unsigned char *)(a1 + (v6 + a5)) = *(unsigned char *)(v7 + (v6 + a5));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v5 - 995 + v6 - 121 == a4) * a3) ^ (v5 - 790))))();
}

uint64_t sub_100048C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  HIDWORD(a22) = 2119813987;
  unsigned int v35 = 628203409 * (((&a24 | 0x621A779) + (~&a24 | 0xF9DE5886)) ^ 0x84A9AB4B);
  a25 = a14;
  a24 = a16;
  LODWORD(a26) = v30 - v35 + 1452;
  HIDWORD(a26) = -1178884666 - v35 + HIDWORD(a23);
  a29 = a21;
  a27 = a17;
  a30 = a15;
  uint64_t v36 = (*(uint64_t (**)(uint64_t *))(v31 + 8 * (v30 ^ 0x8A8)))(&a24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (((a28 == 526347143) * (((v30 - 409) | 0x640) + 313)) ^ v30)))(v36, v33, 2079419387, &off_10007DD80, v32, 2291026155, 2514269652, v34, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_100048D44(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v14 = v11 < v9;
  if (v14 == v10 + 1 > v12) {
    BOOL v14 = v9 + v10 + (v8 ^ a2) - 724 < v11;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((v14 * a8) ^ v8)))();
}

uint64_t sub_100048DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v21 = 628203409 * ((((v20 - 160) | 0x96D41AAA) - ((v20 - 160) & 0x96D41AAA)) ^ 0x145C1699);
  int v25 = (v18 - a6) ^ (a5 - 627);
  STACK[0x310] = a14;
  *(_DWORD *)(v20 - 152) = v21 + v18 + 588;
  *(_DWORD *)(v20 - 148) = a18 - v21 - 1033765421;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v18 ^ 0x8D4)))(v20 - 160);
  uint64_t v23 = STACK[0x2F0] & 0x3F;
  *((unsigned char *)&STACK[0x2AC] + (v23 ^ 0x24)) = 107;
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((847 * ((v23 ^ 0x24) > v25 - 872)) ^ v18)))(v22);
}

uint64_t sub_100048EC0@<X0>(uint64_t a1@<X1>, int a2@<W2>, int a3@<W8>)
{
  *(unsigned char *)(v3 + (v5 + v4)) = *(unsigned char *)(a1 + (v5 + v4));
  return (*(uint64_t (**)(void))(v6 + 8 * ((174 * (v5 - 1 == ((a2 + 1986596179) & 0x8996F7FD) + a3)) ^ (a2 + 256))))();
}

void sub_100048F10(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 48) - 0x38223619C320A2BLL) = a1;
  JUMPOUT(0x100048F28);
}

uint64_t sub_100048F34()
{
  *(void *)(v2 - 112) = v5;
  *(_DWORD *)(v2 - 116) = (v1 + 773) ^ (460628867 * ((v2 - 120) ^ 0x4C96827D));
  (*(void (**)(uint64_t))(v0 + 8 * (v1 | 0x800)))(v2 - 120);
  *(_DWORD *)(v2 - 116) = (v1 + 773) ^ (460628867
                                      * ((2 * ((v2 - 120) & 0x41CCCE60) - (v2 - 120) + 1043542430) ^ 0x72A5B3E3));
  *(void *)(v2 - 112) = v6;
  (*(void (**)(uint64_t))(v0 + 8 * (v1 | 0x800)))(v2 - 120);
  *(_DWORD *)(v2 - 104) = v1
                        + 1374699841
                        * ((1834202156 - ((v2 - 120) ^ 0xF8ADEB70 | 0x6D53B42C) + ((v2 - 120) ^ 0xF8ADEB70 | 0x92AC4BD3)) ^ 0x7F5B8AA)
                        + 1547;
  *(void *)(v2 - 120) = v4;
  *(void *)(v2 - 112) = v6;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 + 2012)))(v2 - 120);
}

uint64_t sub_1000490C0@<X0>(uint64_t a1@<X2>, char a2@<W5>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + v5 + a1) = a2;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v5 + 1 + a1) < 0x38) * v3) ^ v4)))();
}

uint64_t sub_1000490EC()
{
  if (v0 >= 0) {
    unsigned int v4 = v0;
  }
  else {
    unsigned int v4 = -v0;
  }
  if (v1 < 0) {
    int v1 = -v1;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 + 386) ^ 0x625 ^ (577 * (v2 ^ 0x302))) * (v4 > v1)) ^ v2)))();
}

uint64_t sub_100049138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v11 = *(unsigned __int8 *)(v8 + v9 - 0x161D90635E9B0BE2) - *(unsigned __int8 *)(v6 + v9 - 0x161D90635E9B0BE2);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * ((1843
                                              * (((2 * v11) & 0xFFFFDFCE) + (v11 ^ (v5 + 358)) == a5
                                                                                                + ((v7 - 1466855688) | 0x534A410C)
                                                                                                + 358
                                                                                                + v5)) ^ v7)))(4294925278);
}

uint64_t sub_1000491B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v9
                                                                      + 8
                                                                      * ((23
                                                                        * (v8 < ((a8 - 1539) ^ 0xFFFFFDF6) + a8 - 1003)) ^ a8)))(a1, a2, a3, 0);
}

uint64_t sub_1000491EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, unsigned int a20,uint64_t a21)
{
  unsigned int v25 = 1178560073 * ((((2 * &a17) | 0x572E13FC) - &a17 + 1416164866) ^ 0x1103719C);
  a18 = v25 + 762105055 * v23 + 296806364;
  a20 = v25 ^ 0x6EE;
  a19 = a16;
  (*(void (**)(int *))(v24 + 18624))(&a17);
  unsigned int v26 = 1178560073 * (((~&a17 & 0x8CEF827A) - (~&a17 | 0x8CEF827B)) ^ 0x367BFA19);
  a21 = v21;
  a20 = ((v22 ^ 0x6FEAF773) - 96601378 + ((2 * v22) & 0xDFD5EEE6)) ^ v26;
  a19 = a16;
  a18 = v26 + 1778;
  uint64_t v27 = (*(uint64_t (**)(int *))(v24 + 18544))(&a17);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((1999 * (a17 == 526347143)) ^ 0x34Fu)))(v27);
}

void sub_100049348()
{
}

uint64_t sub_100049354@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  int v14 = v5 ^ 0x1F0;
  uint64_t v15 = 4 * (v10 + v8);
  int v16 = v3 + v11 + (*(_DWORD *)(*(void *)(a3 - 0x139154EEB4327E8) + v15) ^ v12);
  *(_DWORD *)(*(void *)(a1 - 0x139154EEB4327E8) + v15) = v16 + v12 - (((v14 + 1314) ^ (v9 + 1591)) & (2 * v16));
  int v17 = v10 + 1 + v4;
  BOOL v19 = v17 > v6 || v17 < v7;
  return (*(uint64_t (**)(void))(v13 + 8 * ((61 * v19) ^ (v14 - 112))))();
}

uint64_t sub_10004941C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a2 - 1060526740) & 0x3F365DDB ^ (a2 + 843)) * (v2 < 0x20)) ^ a2)))();
}

void sub_100049464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,_DWORD *a41)
{
  *a41 ^= a40;
  JUMPOUT(0x1000457FCLL);
}

void sub_100049494()
{
}

uint64_t sub_1000494C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int *a34)
{
  if (v34) {
    int v36 = v35;
  }
  else {
    int v36 = ((a3 + 41471322) & 0x31C4FFE ^ 0x77F) + *a34;
  }
  *a34 = v36;
  return sub_100049544();
}

uint64_t sub_100049544@<X0>(unsigned int a1@<W5>, int a2@<W6>, char a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,_DWORD *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  unint64_t v46 = &a41 + ((509 * (v41 ^ 0x77C)) ^ 0xA47649B1) + a2;
  unsigned int v47 = -1195886157 * ((v46 ^ *(_DWORD *)(*v44 + (*a33 & ((v41 ^ 0x268) - 794100478)))) & 0x7FFFFFFF);
  unint64_t v48 = -1195886157 * (v47 ^ HIWORD(v47));
  char v49 = *((unsigned char *)*(&off_10007DD80 + (int)(v41 & 0x9B782001)) + (v48 >> 24) - 4);
  char v50 = *((unsigned char *)*(&off_10007DD80 + v41 - 1805) + (v48 >> 24) - 4) ^ *((unsigned char *)*(&off_10007DD80 + (v41 ^ 0x7CA))
                                                                       + (v48 >> 24));
  LOBYTE(v48) = v48 ^ (-71 * BYTE3(v48));
  *unint64_t v46 = v49 ^ ((v42 ^ a1) >> a3) ^ v50 ^ v48;
  return (*(uint64_t (**)(void))(v43
                              + 8
                              * ((249
                                * (a2
                                 - (((v49 ^ ((v42 ^ a1) >> a3) ^ v50) ^ v48) != 0) == v45)) ^ v41)))();
}

uint64_t sub_100049648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(v17 - 136) = v16
                         - 108757529 * ((((v17 - 136) | 0x22306975) + (~(v17 - 136) | 0xDDCF968A)) ^ 0xC2AC0B5F)
                         + 696;
  *(void *)(v17 - 128) = a13;
  *(void *)(v17 - 120) = v15;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v16 ^ 0xB0D)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((((v16 - 150) ^ 0x7F2 ^ ((v16 - 929) | 0x30B)) * (v13 == 291589261)) ^ v16)))(v18);
}

void sub_1000496F4()
{
}

void sub_100049700()
{
}

uint64_t sub_100049840@<X0>(int a1@<W8>)
{
  BOOL v5 = *(_DWORD *)(v2 + 48) - a1 == ((25 * (v1 ^ 0x366)) ^ 0x31E9C197)
    || (*(void *)(v2 + 32) | *(void *)(v2 + 56)) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((53 * (((v1 + 1) ^ v5) & 1)) ^ v1)))();
}

uint64_t sub_1000498A8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((13 * (*(void *)(v0 + 328) != 0)) | (v1 - 1019))))();
}

uint64_t sub_1000498D0@<X0>(int a1@<W0>, int a2@<W4>, int a3@<W5>, int a4@<W6>, uint64_t a5@<X8>)
{
  *(unsigned char *)(a5 + (a1 + a3)) = *(unsigned char *)(v5 + (a1 + a3));
  return (*(uint64_t (**)(void))(v7 + 8 * (((a1 - 1 == a2) * a4) ^ (v6 - 596))))();
}

uint64_t sub_100049900@<X0>(int a1@<W2>, int a2@<W8>)
{
  int v8 = STACK[0x58C];
  int v9 = (_DWORD *)STACK[0x3F0];
  unint64_t v10 = STACK[0x3F0] + 24 * v3;
  *(_DWORD *)(v10 + 8) = v6;
  *(_DWORD *)(v10 + 12) = v5;
  *(void *)(v10 + 16) = STACK[0x3E8];
  *(_DWORD *)(v10 + 24) = v8;
  *int v9 = ((223 * (a2 ^ 0x294)) ^ 0x45A) + v2;
  BOOL v12 = v4 - 432991479 > -1594331289 && v4 - 432991479 < SLODWORD(STACK[0x3B0]);
  return (*(uint64_t (**)(void))(v7 + 8 * ((((a2 - 256) ^ a1) * v12) ^ a2)))();
}

void sub_100049980()
{
}

uint64_t sub_100049AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  unsigned int v23 = a20 ^ (v21 - 366) ^ (v20 + 696998381) & 0xD6749FFE;
  int v24 = v23 - ((((v20 - 1938) | 0x15C) - 677877140) & (2 * v23)) - 338938380;
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * ((102
                                * (((2 * v24) & 0xBF57FFBE ^ 0x97106BA8) + (v24 ^ 0xB467CA2B) - 34946 != 1605072733)) ^ v20)))();
}

uint64_t sub_100049B98@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((57
                                * ((v3 - 1740488377) * (v1 - 1740488377) > (int)((((v2 ^ 0x352) + 3) | 0x42) ^ 0xFFFFFE1D))) ^ v2 ^ 0x352)))();
}

void sub_100049BE8()
{
}

uint64_t sub_100049BF4()
{
  int v5 = 1759421093 * ((-1804449043 - ((v4 - 136) | 0x94724AED) + ((v4 - 136) | 0x6B8DB512)) ^ 0xD8F00546);
  *(_DWORD *)(v4 - 136) = v0 - v5 - 1613957347;
  *(_DWORD *)(v4 - 120) = v3 - v5 + 249;
  *(void *)(v4 - 128) = v2;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v3 + 1436)))(v4 - 136);
  return sub_100049C74(v6);
}

uint64_t sub_100049C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v17 - 128) = a14;
  *(void *)(v17 - 112) = v14;
  *(_DWORD *)(v17 - 120) = v16
                         + 1178560073
                         * ((-721431218 - ((v17 - 136) | 0xD4FFD54E) + ((v17 - 136) | 0x2B002AB1)) ^ 0x919452D3)
                         + 836;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 ^ 0xB70)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((187 * (*(_DWORD *)(v17 - 136) > ((v16 + 556) ^ 0x4B4B6EE7u))) ^ (v16 + 1012))))(v18);
}

uint64_t sub_100049D2C()
{
  return 4294925278;
}

uint64_t sub_100049D34@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 248) = 104 - a1;
  int v3 = (uint64_t (*)(void))STACK[0x470];
  *(void *)(v1 + 304) = v2 - 112;
  return v3();
}

uint64_t sub_100049D54()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 8 * (v1 + 1175)))();
  LODWORD(STACK[0x46C]) = v0;
  return (*(uint64_t (**)(uint64_t, __n128))(v3
                                                    + 8
                                                    * (((((v1 - 564425967) & 0x21A477F7) - 781) * v2) ^ (v1 - 531))))(v4, (__n128)0);
}

uint64_t sub_100049DBC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((v0 == ((v1 - 806) ^ 0xDA7533D8) + v2) * ((223 * (v1 ^ 0x784)) ^ 0x45F)) ^ v1)))();
}

uint64_t sub_100049E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                                                  + 8 * ((254 * (v7 + v6 + ((v8 + 1812807680) & 0x93F2BFDB) - 1605109252 + 458 < ((v8 + 1002504572) & 0xC43EFBD6) - 458)) ^ v8)))(v5, a2, a3, a4, a5, 2689894562, 42);
}

uint64_t sub_100049E84()
{
  LODWORD(STACK[0x2EC]) = STACK[0x5A0];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v1 - 1667755605 < ((((v0 - 993588153) & 0x3B38EDAD) - 1045826070) & 0x3E5609CBu) - 64)
                                * ((((v0 - 993588153) & 0x3B38EDAD) - 35476425) & 0x21D537E ^ 0x55)) ^ (v0 - 993588153) & 0x3B38EDAD)))();
}

void sub_100049EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t)*(&off_10007DD80
                + (byte_100068B54[(byte_100073B90[(-35 * (dword_100082730 ^ 0xD8 ^ qword_100081B78))] ^ 0x4D)
                                                 - 4] ^ (-35 * (dword_100082730 ^ 0xD8 ^ qword_100081B78)))
                - 56);
  uint64_t v4 = *(void *)(v3 - 4);
  uint64_t v5 = (uint64_t *)*(&off_10007DD80
                  + (byte_100073F98[(byte_10006F340[(-35
                                                                                     * ((qword_100081B78 + v4) ^ 0xD8))] ^ 0x50)
                                                   - 8] ^ (-35 * ((qword_100081B78 + v4) ^ 0xD8)))
                  - 23);
  uint64_t v6 = 1226760413 * ((*v5 - v4 - (void)&v8) ^ 0x5B705F9A26A579D8);
  *(void *)(v3 - 4) = v6;
  *uint64_t v5 = v6;
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  LODWORD(v6) = 1178560073
              * ((&v10 - 1556789680 - 2 * ((unint64_t)&v10 & 0xA3354650)) ^ 0x19A13E32);
  int v10 = 1184294775 - v6;
  int v11 = &STACK[0x72E93EC0CCAF59F6];
  int v12 = -1882357464 - v6;
  LODWORD(v5) = 1226760413 * ((*(_DWORD *)v5 + *(_DWORD *)(v3 - 4)) ^ 0x26A579D8);
  int v7 = (char *)*(&off_10007DD80
               + ((-35 * (dword_100082730 ^ 0xD8 ^ qword_100081B78)) ^ byte_100073A90[byte_10006F040[(-35 * (dword_100082730 ^ 0xD8 ^ qword_100081B78))] ^ 0x83])
               - 10)
     - 4;
  (*(void (**)(int *))&v7[8
                                   * (byte_100073A94[(byte_10006F04C[v5 - 12] ^ 0x83)
                                                                    - 4] ^ v5)
                                   + 16912])(&v10);
  __asm { BRAA            X9, X17 }
}

void sub_10004A19C()
{
}

uint64_t sub_10004A1A4@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  _DWORD *v2 = a2;
  *(_DWORD *)(result + 16) = -526372686;
  return result;
}

uint64_t sub_10004A1B8()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((v3 + v2 - 469) * (v1 > 0x392B2874)) | (v3 + v2))))();
}

void sub_10004A1F0()
{
}

void sub_10004A23C()
{
}

void sub_10004A260()
{
}

void sub_10004A278()
{
}

void sub_10004A288()
{
}

uint64_t sub_10004A2B8@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((a2 + 8 == v4 + a1 + v2 - 1018 - 505) * (v2 + 477)) ^ v2)))();
}

uint64_t sub_10004A2F0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((906
                                * ((v1 ^ 0x78F4E3B1) == ((((a1 + 520225033) | 0xC0110986) - 1981103704) ^ (v3 + a1 - 280))
                                                      + v2)) ^ a1)))();
}

void sub_10004A358()
{
}

uint64_t sub_10004A360()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v1 + 16) != 0x66408E1D617AE0CDLL)
                                * ((16 * (v0 ^ 0x3EF)) ^ 0x452 ^ (31 * (v0 ^ 0x3EF)))) ^ v0)))();
}

uint64_t sub_10004A3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,char a43)
{
  return sub_10004A3E8(&a43);
}

uint64_t sub_10004A3E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v53
                                                     + 8
                                                     * ((31
                                                       * (((2 * a53) & 0x2E ^ 8)
                                                        + (a53 & 0x3F ^ 0x61FBFF73u)
                                                        - 1643904915 < 0xFFFFFFC0)) ^ (a3 + 437))))(a1, -648545233);
}

uint64_t sub_10004A520(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((((a6 + 201361807) ^ 0xC00926A) + v6 + ((a6 + 201361807) | 0x82000412))
                                     * (v7 == a4)) ^ a6)))();
}

uint64_t sub_10004A570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(a11 + v13) = v15;
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * (((((((((v12 - 485575916) & 0x1CF149FEu) - 7) ^ 0xFFFFFFFFFFFFFE0FLL) & v11) == 8) ^ (((v12 + 20) & 0xFE) - 93)) & 1 | (8 * ((((((((v12 - 485575916) & 0x1CF149FEu) - 7) ^ 0xFFFFFFFFFFFFFE0FLL) & v11) == 8) ^ (((v12 + 20) & 0xFE) - 93)) & 1))) ^ (((v12 - 485575916) & 0x1CF149FE) - 7))))();
}

uint64_t sub_10004A5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((178
                                * (((v17 - 2079419384 + ((v16 + 75) | 0x24) - 1187) & ((2 * (v16 ^ 0x664)) ^ 0xFFFFFB5A))
                                 - a16 == -2079419384)) ^ v16)))();
}

void sub_10004A640()
{
}

uint64_t sub_10004A678()
{
  if (v0) {
    int v2 = 369238551;
  }
  else {
    int v2 = *v1 + 1;
  }
  *uint64_t v1 = v2;
  return sub_10004A6F4();
}

uint64_t sub_10004A6F4@<X0>(unsigned int a1@<W5>, uint64_t a2@<X6>, int a3@<W7>, char a4@<W8>)
{
  uint64_t v8 = (unsigned char *)(a2 + a3 + (v4 ^ 0x53C) - 471 + 2 * (v4 ^ 0x53Cu) - 1603217352);
  unsigned int v9 = -1195886157
     * ((v8 ^ *(_DWORD *)(*(void *)STACK[0x3F8] + (*(int *)STACK[0x3F0] & 0xFFFFFFFFACAFF0C4))) & 0x7FFFFFFF);
  unint64_t v10 = -1195886157 * (v9 ^ HIWORD(v9));
  char v11 = *(unsigned char *)(*(void *)(v6 + 8 * (v4 ^ 0x732)) + (v10 >> 24) - 12) ^ ((v5 ^ a1) >> a4) ^ *(unsigned char *)(*(void *)(v6 + 8 * (v4 - 1808)) + (v10 >> 24) - 9) ^ *(unsigned char *)(*(void *)(v6 + 8 * (v4 - 1762)) + (v10 >> 24) - 7) ^ v10 ^ (127 * BYTE3(v10));
  unsigned char *v8 = v11;
  BOOL v12 = a3 - (v11 != 0) != 1603216217;
  return (*(uint64_t (**)(void))(v7 + 8 * ((v12 | (16 * v12)) ^ v4)))();
}

uint64_t sub_10004A7EC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v1 + 976737560) & 0xC5C82B73 ^ 0xFFFFFC75) + v1 + 19) * (v0 == v2)) ^ v1)))();
}

void sub_10004A838(_DWORD *a1@<X8>)
{
  *a1 = v1;
}

uint64_t sub_10004A858(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v10 = 4 * (v5 - 1857521158);
  int v11 = *(_DWORD *)(v7 + 4 * (v5 - 1857521159));
  unsigned int v12 = (a4 + (~v11 >> 30) - 4 * (v11 >= 0)) ^ v11;
  int v13 = ((a4 + 1566083941 * v12 - ((-1162799414 * v12) & 0xFACB7EB4)) ^ *(_DWORD *)(v7 + v10)) - v5;
  *(_DWORD *)(v7 + v10) = v13 - ((2 * v13 - 579924980) & 0xFACB7EB4) + 1813857632;
  unint64_t v14 = 235795823
      * ((0x905CB3DC21C34473 - ((v9 - 144) | 0x905CB3DC21C34473) + ((v9 - 144) | 0x6FA34C23DE3CBB8CLL)) ^ 0x6713F6DD4A91F2D5);
  *(void *)(v9 - 112) = v14 + 3538870095u;
  int v15 = v14 ^ (v8 - 1320021819);
  *(_DWORD *)(v9 - 140) = v8 - 1320021819 - v14;
  *(_DWORD *)(v9 - 136) = v15 ^ 0x71;
  *(void *)(v9 - 128) = (v5 + 1681348938) ^ v14;
  *(_DWORD *)(v9 - 120) = 2064071201 - v14 + v8;
  *(_DWORD *)(v9 - 116) = v14 + 1;
  *(_DWORD *)(v9 - 144) = v15 ^ 0x15;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v8 ^ (a5 - 1874))))(v9 - 144);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * *(int *)(v9 - 104)))(v16);
}

uint64_t sub_10004A9D0@<X0>(uint64_t a1@<X1>, int a2@<W4>, int a3@<W5>, unsigned int a4@<W8>)
{
  uint64_t v6 = a4;
  uint64_t v7 = a1 + a4;
  if ((unint64_t)(v7 + 1) > 0x38) {
    uint64_t v8 = v7 + 1;
  }
  else {
    uint64_t v8 = 56;
  }
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((55
                                * (v8 - v6 + 182238939 >= (unint64_t)((v4 - a3 - 2112) ^ (a2 + 37))
                                                        - 95)) ^ v4)))();
}

uint64_t sub_10004AA38@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  int v3 = a2 ^ 0x4D6;
  uint64_t v4 = (*(uint64_t (**)(void, uint64_t, void))(v2 + 8 * (a2 ^ 0xEAD)))(*(unsigned int *)STACK[0x2D0], a1, LODWORD(STACK[0x5A4]));
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)((((v3 + 1859146495) & 0x912FAA72 ^ 0x197)
                                                   * (LODWORD(STACK[0x46C]) != 526347143)) ^ v3)))(v4);
}

uint64_t sub_10004AAB4@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a1 + ((v2 - 674) ^ (unint64_t)(v4 + 2)) + a2) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(a2 + v4) < 0x40) * v3) ^ (v2 + 34))))();
}

uint64_t sub_10004AAF0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 1169) ^ 0x28) + ((v2 - 1169) | 0x162) + 465) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_10004AB2C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v1 ^ ((2 * ((unint64_t)(v2 - a1) < 0x20)) | (32
                                                                                   * ((unint64_t)(v2 - a1) < 0x20))))))();
}

uint64_t sub_10004AB64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * (((v3 + 1 != v6 + 48) | (4 * (v3 + 1 != v6 + 48))) ^ a3)))(a1, a2, v4);
}

uint64_t sub_10004AC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v27 = v24 + 1;
  unsigned int v28 = (*v23 + v20) * (*(_DWORD *)(a16 + 4 * (v27 - 1993168621)) ^ 0xDC7F20D8);
  int v29 = 1755732067 * ((v26 - 128) ^ 0xDEC6BDDB);
  *(_DWORD *)(v26 - 112) = (v27 - 252680244) ^ v29;
  *(_DWORD *)(v26 - 108) = (v28 ^ 0xE69095D7) - v29 + ((2 * v28) & 0xCD212BAE) + v22;
  *(void *)(v26 - 104) = a14;
  *(void *)(v26 - 120) = a13;
  *(_DWORD *)(v26 - 128) = v25 - v29 - 31;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (int)(v25 + 1275)))(v26 - 128);
  BOOL v32 = v27 + v16 > v17 || v27 + v16 < v19;
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((v32 * v21) ^ v25)))(v30);
}

uint64_t sub_10004AC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(v27 - 112) = v24 + 1224239923 * ((v27 + 580362952 - 2 * ((v27 - 144) & 0x2297A358)) ^ 0xD0245E8F) + 923;
  *(void *)(v27 - 128) = a24;
  *(void *)(v27 - 120) = a23;
  *(void *)(v27 - 104) = a24;
  *(void *)(v27 - 144) = a22;
  *(void *)(v27 - 136) = a11;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v24 ^ 0x813)))(v27 - 144);
  BOOL v29 = v26 + a20 + 2 >= (((v24 + 362) | 0x104) ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((2 * v29) | (8 * v29) | (v24 + 974))))(v28);
}

uint64_t sub_10004AD18()
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((46 * ((v2 - 351843405) > 0x13)) ^ v1)))(v0);
}

void sub_10004AD54()
{
}

uint64_t sub_10004AD78@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((1091 * (a1 == ((((v2 + 1270464011) & 0xB44645FA) + 19) ^ (v1 + 1109)))) ^ v2)))();
}

uint64_t sub_10004ADBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((119
                                * (a13
                                 + a1
                                 - (unint64_t)(((a6 + v14 - 1457) ^ v16 ^ ((v14 + 1745353557) | 0x93D3D209)) + v13) > 0xF)) ^ v14)))();
}

void sub_10004AE18()
{
  LODWORD(STACK[0x454]) = 0;
  JUMPOUT(0x1000212ECLL);
}

uint64_t sub_10004AE20@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 480) ^ 0xF09 ^ (15 * (v2 ^ 0x185))) * (v1 == a1)) ^ v2)))();
}

uint64_t sub_10004AEEC(uint64_t a1, int a2, int a3, int a4, int a5)
{
  int v11 = a5 ^ 0x45;
  int v12 = (a5 ^ 0x45) + 345;
  unsigned int v13 = ((a5 ^ 0x45) + 1171330873) & 0xBA2EEFEF;
  uint64_t v14 = (a3 + a2 + a4) + v10;
  uint64_t v15 = ((_BYTE)a3 + (_BYTE)a2 + (_BYTE)a4) & 0xF;
  unint64_t v16 = v15 + v7 - v14;
  unint64_t v17 = (v15 | v8) - v14;
  unint64_t v18 = (v15 | v6) - v14;
  BOOL v22 = (unint64_t)(v5 - v10) > 0xF && v16 > 0xF && v17 >= (v12 ^ v13 ^ 0x620uLL) && v18 > 0xF;
  return (*(uint64_t (**)(void))(v9 + 8 * ((89 * v22) ^ v11)))();
}

uint64_t sub_10004AF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17)
{
  a17 = v20
      - 108757529 * ((2 * (&a13 & 0x4A6220) - &a13 + 2142608861) ^ 0x9F29FFF6)
      + v18
      + 1780;
  a14 = v17;
  a15 = a10;
  a16 = 0x5A178A95705CCB00;
  (*(void (**)(char *))(v19 + 8 * (v20 + v18 + 2334)))(&a13);
  return sub_10004057C();
}

uint64_t sub_10004AFFC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((134 * (v2 + v0 + v1 - 2129374204 >= ((v1 - 1805) | 0x1C0) - 440)) ^ v1)))();
}

uint64_t sub_10004B05C(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(v7 + v3) = *(void *)(v6 + v3);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v4 == 0) * a3) ^ v5)))();
}

uint64_t sub_10004B08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((28 * ((((v8 & 0x18) == ((a7 - 1361) ^ 0x151)) ^ (a7 - 1)) & 1)) | a7)))();
}

uint64_t sub_10004B0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((v5 & 0x18) == ((a5 + 806) ^ 0x5E4)) * ((a5 - 82) ^ 0x31F)) ^ a5)))();
}

void sub_10004B10C(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

void sub_10004B194()
{
}

uint64_t sub_10004B2C8@<X0>(int a1@<W4>, int a2@<W5>, char a3@<W6>, int a4@<W7>, int a5@<W8>)
{
  unsigned int v12 = v5 + 16;
  uint64_t v13 = v12 - 16;
  unsigned int v14 = (v13 >> 4) - (v7 & (v13 >> 3)) + a1;
  v10[12] = (a2 ^ HIBYTE(v14)) - (((a2 ^ HIBYTE(v14)) << ((a5 + 65) ^ 0x9D)) & v8) - 21;
  v10[13] = (BYTE2(v14) ^ a3) - 2 * ((BYTE2(v14) ^ a3) & 0xEF ^ BYTE2(v14) & 4) - 21;
  v10[14] = (BYTE1(v14) ^ 3) - 2 * ((BYTE1(v14) ^ 3) & 0xEF ^ BYTE1(v14) & 4) - 21;
  v10[15] = v14 ^ 0x78;
  uint64_t v15 = (unsigned char *)(v6 + v13);
  *uint64_t v15 = *v10 ^ v9 ^ *(unsigned char *)(v6 + v13);
  *(unsigned char *)(v6 + (v13 | 1)) ^= v10[1] ^ v9;
  *(unsigned char *)(v6 + (v13 | 2)) ^= v10[2] ^ v9;
  *(unsigned char *)(v6 + (v13 | 3)) ^= v10[3] ^ v9;
  v15[4] ^= v10[4] ^ v9;
  v15[5] ^= v10[5] ^ v9;
  v15[6] ^= v10[6] ^ v9;
  v15[7] ^= v10[7] ^ v9;
  v15[8] ^= v10[8] ^ v9;
  v15[9] ^= v10[9] ^ v9;
  v15[10] ^= v10[10] ^ v9;
  v15[11] ^= v10[11] ^ v9;
  v15[12] ^= v10[12] ^ v9;
  v15[13] ^= v10[13] ^ v9;
  v15[14] ^= v10[14] ^ v9;
  v15[15] = v10[15] ^ v9 ^ *(unsigned char *)(v6 + v13 + 15);
  return (*(uint64_t (**)(void))(v11 + 8 * (((v12 < 0x150) * a4) ^ (a5 + 647))))();
}

uint64_t sub_10004B2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v5 = LOBYTE(STACK[0x30C]) ^ 0xDD;
  if (v5 == 1)
  {
    unsigned int v10 = STACK[0x2F0];
    unsigned int v11 = STACK[0x2EC];
    LOBYTE(STACK[0x2E4]) = ((8 * LOBYTE(STACK[0x2F0])) ^ 0x20) - ((2 * ((8 * LOBYTE(STACK[0x2F0])) ^ 0x20)) & 0xDF) - 21;
    LOBYTE(STACK[0x2E5]) = ((v10 >> 5) ^ 0x87) - ((2 * ((v10 >> 5) ^ 0x87)) & 0xD6) - 21;
    LOBYTE(STACK[0x2E6]) = ((v10 >> 13) ^ 8) - 2 * (((v10 >> 13) ^ 8) & 0xEF ^ (v10 >> 13) & 4) - 21;
    LOBYTE(STACK[0x2E7]) = ((v10 >> 21) ^ 0x54) - ((2 * ((v10 >> 21) ^ 0x54)) & 0xD6) - 21;
    HIDWORD(v12) = v11 ^ 5;
    LODWORD(v12) = v10 ^ 0xA0000000;
    LOBYTE(STACK[0x2E8]) = (v12 >> 29) - ((2 * (v12 >> 29)) & 0xD6) - 21;
    LOBYTE(STACK[0x2E9]) = ((v11 >> 5) ^ 0x31) - 2 * (((v11 >> 5) ^ 0x31) & 0xEF ^ (v11 >> 5) & 4) - 21;
    LOBYTE(STACK[0x2EA]) = ((v11 >> 13) ^ 0xA8) - ((2 * ((v11 >> 13) ^ 0xA8)) & 0xD6) - 21;
    int v9 = ((v11 >> 21) ^ 0x1D) - ((2 * ((v11 >> 21) ^ 0x1D)) & 0xFD6) - 21;
    goto LABEL_5;
  }
  if (v5 == 2)
  {
    unsigned int v6 = STACK[0x2EC];
    unsigned int v7 = STACK[0x2F0];
    LOBYTE(STACK[0x2E4]) = ((LODWORD(STACK[0x2EC]) >> 21) ^ 0x1D)
                         - ((((LODWORD(STACK[0x2EC]) >> 21) ^ 0x1D) << ((a5 - 124) ^ 0x8C)) & 0xD6)
                         - 21;
    LOBYTE(STACK[0x2E5]) = ((v6 >> 13) ^ 0xA8) - 2 * (((v6 >> 13) ^ 0xA8) & 0xEF ^ (v6 >> 13) & 4) - 21;
    LOBYTE(STACK[0x2E6]) = ((v6 >> 5) ^ 0x31) - 2 * (((v6 >> 5) ^ 0x31) & 0xEF ^ (v6 >> 5) & 4) - 21;
    HIDWORD(v8) = v6 ^ 5;
    LODWORD(v8) = v7 ^ 0xA0000000;
    LOBYTE(STACK[0x2E7]) = (v8 >> 29) - ((2 * (v8 >> 29)) & 0xD6) - 21;
    LOBYTE(STACK[0x2E8]) = ((v7 >> 21) ^ 0x54) - ((2 * ((v7 >> 21) ^ 0x54)) & 0xD6) - 21;
    LOBYTE(STACK[0x2E9]) = ((v7 >> 13) ^ 8) - 2 * (((v7 >> 13) ^ 8) & 0xEF ^ (v7 >> 13) & 4) - 21;
    LOBYTE(STACK[0x2EA]) = ((v7 >> 5) ^ 0x87) - ((2 * ((v7 >> 5) ^ 0x87)) & 0xD6) - 21;
    LOBYTE(v9) = ((8 * v7) ^ 0x20) + (~(2 * ((8 * v7) ^ 0x20)) | 0x2F) - 20;
LABEL_5:
    LOBYTE(STACK[0x2EB]) = v9;
  }
  return sub_10004B524();
}

void sub_10004B524()
{
}

void sub_10004B594()
{
}

uint64_t sub_10004B5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * ((((7 * ((v5 - 1821215007) & 0x6C8D85BF ^ 0x422)) ^ 0x79A)
                                                                         * (v3 == 313536509)) ^ v5)))(a1, a2, a3, 527506298);
}

uint64_t sub_10004B600(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v16 = 218 * (a4 ^ (a4 - 3));
  (*(void (**)(uint64_t))(v13 + 8 * (a4 ^ (a4 - 1789))))(a12);
  int v17 = (*(uint64_t (**)(void))(v13 + 8 * (v12 + 1761)))();
  signed int v18 = v17 - 43663526 - ((v16 ^ 0xFACB7B42) & (2 * v17));
  *uint64_t v15 = v18;
  unsigned int v19 = 1812433253 * (((~v18 >> 30) - 43663526 - 4 * (v18 >= 0)) ^ v18);
  v15[1] = v14 + v19 - (((v19 + 1) << ((v16 ^ 0xBF) - 72)) & 0xFACB7EB4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8 * (v16 ^ 0x3F3)))(1812433253, 1727);
}

uint64_t sub_10004B6E4(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((58
                                * (((a4 - (v4 & 3) + (((v5 ^ 0xAE4) - 354) ^ (a1 + 18))) & 0xFFFFFFFC) <= a4 + (v5 ^ 0x944 ^ (a1 + 1)))) ^ v5 ^ 0xAE4)))();
}

uint64_t sub_10004B744@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  LODWORD(STACK[0x5D8]) = v2 + 10;
  unint64_t v4 = STACK[0x4F0];
  BOOL v5 = LODWORD(STACK[0x5B4]) == 0;
  STACK[0x4C8] = LODWORD(STACK[0x5B4]);
  return (*(uint64_t (**)(uint64_t, unint64_t))(v3
                                                              + 8
                                                              * ((245
                                                                * ((((((189 * (a2 ^ 0x32A)) ^ 0x340) + 936) ^ v5) & 1) == 0)) ^ (189 * (a2 ^ 0x32A)))))(a1, v4);
}

uint64_t sub_10004B7A4@<X0>(int a1@<W8>)
{
  STACK[0x5E0] += (a1 - 1349366137) & 0x506DB55B ^ 0xFFFFFFFFFFFFFBABLL;
  return (*(uint64_t (**)(void))(v1 + 8 * (a1 ^ 0x395u)))();
}

uint64_t sub_10004B7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, uint64_t a15, unsigned int a16, int a17, unsigned int a18, int a19)
{
  unsigned int v22 = (&a14 ^ 0x4C96827D) * v21;
  a18 = 1646191814 - v22;
  a14 = &STACK[0x38223619C320A3B];
  a15 = a12;
  a16 = v22 + 1978921826;
  a17 = v22 + v20 - 2024873251;
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v19 + 8 * (v20 | 0x853)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8 * ((1597 * (a19 == ((v20 + 133466) | 0x64418518) - 1155802003)) ^ v20)))(v23);
}

void sub_10004B8AC()
{
}

uint64_t sub_10004B8F4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(v4 + v3) = v2;
  return sub_100054010(a1, a2);
}

uint64_t sub_10004B900()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1133
                                * ((v0 & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v1) == v1 + ((v2 - 427) | 0xE4) - 245)) ^ v2)))();
}

void sub_10004B948()
{
}

uint64_t sub_10004B9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, int a15, unsigned int a16)
{
  a16 = 1410 - 460628867 * ((&a14 & 0x9E53D03D | ~(&a14 | 0x9E53D03D)) ^ 0x2D3AADBF);
  a14 = &STACK[0x4313E3591B4C281];
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v17 + 18432))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((26 * (a15 != v16)) ^ 0x4C2u)))(v18);
}

uint64_t sub_10004BA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v30 = 243 * (v25 ^ 0x4A);
  int v31 = 1374699841 * (((((v29 - 144) | 0x58FAFE1E) ^ 0xFFFFFFFE) - (~(v29 - 144) | 0xA70501E1)) ^ 0xCAF119E8);
  *(_DWORD *)(v29 - 144) = (v30 + 716) ^ v31;
  *(_DWORD *)(v29 - 128) = v26 - 128426107 + v30 - 728 - v31;
  *(void *)(v29 - 136) = a25;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v30 + 1546)))(v29 - 144);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * (((*(_DWORD *)(v29 - 140) == v28)
                                              * (((v30 - 713) | 0x201) + ((v30 - 697) | 0x340) - 1386)) ^ v30)))(v32);
}

uint64_t sub_10004BB18(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  unint64_t v9 = v6 + a2;
  *(unsigned char *)(v9 + a6 - 1) = a4;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v9 < 0x40) * ((v7 - 1739) ^ 0xF70)) ^ (v7 + 105))))();
}

void sub_10004BB54(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (235795823 * ((-127693918 - (a1 | 0xF8638BA2) + (a1 | 0x79C745D)) ^ 0x93313D04));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10004BC20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, unsigned int a14, unsigned int a15, unsigned int a16, int a17)
{
  unsigned int v21 = (((&a12 | 0xFB74E5AA) - (&a12 & 0xFB74E5AA)) ^ 0xB7E267D7) * v20;
  a15 = v21 + v19 - 2024873426;
  a16 = 1646191814 - v21;
  a12 = &STACK[0x38223619C320A2B];
  a13 = a11;
  a14 = v21 - 776588175;
  uint64_t v22 = (*(uint64_t (**)(unint64_t **))(v18 + 8 * (v19 + 1956)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8 * (((a17 == v17) * (((v19 - 1857739738) & 0x6EBADF97) + 472)) ^ v19)))(v22);
}

uint64_t sub_10004BCF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((28 * (((((32 * v8) ^ 0x8E40) - 1304) & *(_DWORD *)(v9 + v10 * (uint64_t)a8 + 40)) == 0)) ^ (v8 - 305))))();
}

uint64_t sub_10004BD2C(int a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(a3 + v6) = *(void *)(v5 + v6);
  return (*(uint64_t (**)(void))(v7 + 8 * (((a1 == 0) * v4) ^ a4)))((a1 + 8));
}

uint64_t sub_10004BD5C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((a1 - 606) | 0x259) ^ 0x581) * ((v3 + v1 + 1) < 0x7FFFFFFF)) ^ a1)))();
}

uint64_t sub_10004BD9C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((a4 + a7 - 16 < ((a5 + 715) ^ 0xFFFFF839)) * ((a5 - 1049) ^ 0xEA)) ^ (a5 - 1049))))();
}

uint64_t sub_10004BDDC(uint64_t a1, uint64_t a2)
{
  *(unint64_t *)((char *)&STACK[0x2AC] + v4 + a2) = 0xEBEBEBEBEBEBEBEBLL;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v3 & 0xFFFFFFFFFFFFFFF8) == 8) * (((v2 - 11) | 0x802) - 1918)) ^ v2)))();
}

uint64_t sub_10004BE28(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1306 * (v4 + 8 == (((a3 ^ 0x60F) + 1527) ^ 0x7B3))) ^ a3 ^ 0x60F)))();
}

uint64_t sub_10004BE6C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((46 * ((((v0 + 552401841) ^ ((v2 & 0xFFFFFFFFFFFFFFFuLL) - 1 < 2)) & 1) == 0)) ^ (v0 + 552400495))))();
}

uint64_t sub_10004BEB4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v11 = v9 ^ ((a8 ^ 0xAAFE7403C56D2DF2)
            - 0x37C9A25EDA4E362ELL
            - ((2 * (a8 ^ 0xAAFE7403C56D2DF2)) & 0x906CBB424B6393A4));
  *((void *)&v12 + 1) = v8 ^ 0x2D52E66247;
  *(void *)&long long v12 = v8 ^ 0xA437EE8000000000;
  unint64_t v13 = (v11 ^ 0xC1A33A862C00719DLL) & (v8 ^ 0xA437EEAD52E66247) ^ a8 ^ v10;
  unint64_t v14 = v11 ^ (__ROR8__((v12 >> 38) ^ 0x6AE47E7A0BD06A70, 26) ^ 0xBE563E546E0617DLL) & (a7 ^ v8 ^ 0xEF494669792C4595);
  return sub_10005D8C4(v14 ^ 0x46A60F577FCD6CF9 ^ v13 ^ ((v14 ^ 0x46A60F577FCD6CF9 ^ v13) >> 19) ^ ((v14 ^ 0x46A60F577FCD6CF9 ^ v13) >> 28) ^ ((v14 ^ 0x46A60F577FCD6CF9 ^ v13) << 36) ^ ((v14 ^ 0x46A60F577FCD6CF9 ^ v13) << 45), 0xB626A916BAA48727, a3, (a1 + 627) | 0x58u);
}

uint64_t sub_10004C314()
{
  return sub_100057450(STACK[0x51C]);
}

uint64_t sub_10004C324(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a3 - 1014) ^ 0x685 ^ (39 * (a3 ^ 0x477))) * (v3 == a2)) ^ a3)))();
}

void sub_10004C360(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1224239923 * ((a1 & 0x9A8552A9 | ~(a1 | 0x9A8552A9)) ^ 0x97C95081);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10004C43C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 468) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 1936))(0);
}

void sub_10004C498()
{
}

uint64_t sub_10004C4B0@<X0>(int a1@<W5>, unsigned int a2@<W8>)
{
  uint64_t v4 = a2;
  unint64_t v5 = a2 - 0x14BC258F8 + (a1 + v2 - 213);
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((49 * (v5 - v4 + (v2 - 2) + 1340507415 > 7)) ^ v2)))();
}

void sub_10004C518(uint64_t a1@<X8>, int a2, uint64_t a3, unsigned int a4)
{
  unsigned int v8 = 108757529 * ((1436736608 - (&a2 | 0x55A2DC60) + (&a2 | 0xAA5D239F)) ^ 0x4AC141B4);
  a3 = v4;
  a2 = v8 + v6 + 574;
  a4 = (v5 - ((((v6 + 617585131) & 0x5B30677F ^ 0xCD00BE2F) + v7) & 0xF4DA0A2A) + 1626169920) ^ v8;
  (*(void (**)(int *))(a1 + 8 * (v6 + 1495)))(&a2);
  JUMPOUT(0x100041E04);
}

uint64_t sub_10004C5D4@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x810u));
  return v3(v1);
}

uint64_t sub_10004C608(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,int a24,int a25)
{
  BOOL v30 = a23 - v27 == 40394603 && a25 == (v25 ^ (a3 - 421));
  return (*(uint64_t (**)(void))(v28 + 8 * ((1394 * v30) ^ v26)))();
}

uint64_t sub_10004C648(_DWORD *a1)
{
  unsigned int v1 = 1178560073 * ((2 * (a1 & 0x7B1A53C3) - a1 - 2065322948) ^ 0x3E71D45E);
  return (*(uint64_t (**)(void))((char *)*(&off_10007DD80 + (int)((a1[1] + v1) ^ 0x82C))
                              + 8
                              * (int)(((((*a1 - v1) ^ 0x1F5F6B87) - 1 > 0x62) * ((a1[1] + v1) ^ 0x8D1)) ^ (a1[1] + v1))
                              - 4))();
}

void sub_10004C6D8()
{
}

uint64_t sub_10004C748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 < a5 - 2181) * ((25 * (a5 ^ 0x8F3)) ^ 0x878)) ^ a5)))(0);
}

uint64_t sub_10004C784@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned int a3@<W8>)
{
  *(unsigned char *)(v12 + (a2 - 834203508)) = *(unsigned char *)(v3 + (a2 - 834203508)) ^ *(unsigned char *)(v5 + ((a2 - 834203508) & 0xFLL)) ^ *(unsigned char *)(v6 + (((_BYTE)a2 - 116) & 0xF)) ^ *(unsigned char *)(v4 + (((_BYTE)a2 - 116) & 0xF)) ^ (((a2 - 116) & 0xF) * (((v8 + 111) | 0xC6) + 114)) ^ 0xEB;
  BOOL v13 = v9 > a3;
  unsigned int v14 = a2 - 749581000;
  uint64_t v15 = (a2 + 1);
  int v16 = v13 ^ (v14 < v7 + 871);
  BOOL v17 = v14 < v10;
  if (!v16) {
    BOOL v13 = v17;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8 * ((415 * v13) ^ v8)))(a1, v15);
}

void sub_10004C824()
{
}

uint64_t sub_10004C830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((47
                                * ((((241 * (v3 ^ 0x2CD)) ^ (*(_DWORD *)(*(void *)(a1 + 8) + v4) == v2)) & 1) == 0)) ^ v3)))();
}

uint64_t sub_10004C874(uint64_t a1)
{
  int v2 = 460628867 * (((a1 | 0x167EA26) - a1 + (a1 & 0xFE9815D9)) ^ 0x4DF1685B);
  int v3 = *(_DWORD *)(a1 + 20) - v2;
  int v4 = *(_DWORD *)(a1 + 16) - v2;
  uint64_t v6 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  int v7 = -1226319291 * (*(_DWORD *)(a1 + 24) + v2) + 204585635;
  unsigned int v8 = 1755732067
     * (((&v10 | 0x8E52AAAD) - &v10 + (&v10 & 0x71AD5550)) ^ 0x50941776);
  v3 += 2024873235;
  int v10 = (v7 ^ 0x35FBCF7F) + v8 + ((2 * v7) & 0x6BF79EFE) - 880935265;
  int v12 = v8 ^ (v3 + 963);
  uint64_t v13 = v5;
  unsigned int v14 = (432548285 * v4 - ((865096570 * v4 - 616685616) & 0xCF7BC996) - 715328333) ^ v8;
  uint64_t v11 = v6;
  uint64_t result = (*(uint64_t (**)(int *))((char *)*(&off_10007DD80 + v3) + 8 * v3 + 17780))(&v10);
  *(_DWORD *)(a1 + 28) = v15;
  return result;
}

uint64_t sub_10004CA28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void))(a2
                                                    + 8
                                                    * ((239
                                                      * (((v2 + 1) ^ (v3 == ((v2 + 1873452923) & 0x90555F7D ^ 0x4463564B))) & 1)) ^ v2)))(a1, v2 ^ 0x8AEu);
}

uint64_t sub_10004CAA0(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))*(&off_100079300 + ((2022 * (*(_DWORD *)(a2 + 4) == 2079419397)) ^ 0x120u)))(4294925278);
}

uint64_t sub_10004CAE4@<X0>(unint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + v6 + a2) = v5;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 + 1 + a2 < (v4 ^ a1)) * v7) ^ v3)))();
}

uint64_t sub_10004CB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  return (*(uint64_t (**)(void))(v22 + 8 * ((2002 * (a20 == v20 + (v21 ^ 0x152) + 903 - 1107)) ^ v21)))();
}

uint64_t sub_10004CB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((62 * (a6 + 1 != v8 + 32)) ^ v6)))();
}

void sub_10004CC18()
{
  if (v0 == 1720235092) {
    int v1 = 526347143;
  }
  else {
    int v1 = -526372769;
  }
  *(_DWORD *)(v2 + 32) = v1;
}

uint64_t sub_10004CC7C(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((LODWORD(STACK[0x42C]) + 1 + a2 == 1) ^ (v3 + 58 + v4)) & 1) * a3) ^ (v3 + 58))))();
}

uint64_t sub_10004CCE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v8
                                                                                        + 8
                                                                                        * ((((v6 & 8) == v7 - 505)
                                                                                          * (v7 + 509)) ^ v7)))(a1, a2, a3, a4, a5, (v5 - a5));
}

uint64_t sub_10004CD18@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v20 = a1 ^ 0x2F6;
  *(_DWORD *)(v19 - 112) = a1
                         + 1224239923 * (((~(v19 - 144) & 0xB476FB88) - (~(v19 - 144) | 0xB476FB89)) ^ 0x46C5065E)
                         + 625;
  *(void *)(v19 - 104) = a17;
  *(void *)(v19 - 128) = a17;
  *(void *)(v19 - 120) = a16;
  *(void *)(v19 - 144) = a15;
  *(void *)(v19 - 136) = a5;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (a1 ^ 0xAE5)))(v19 - 144);
  BOOL v22 = v18 + a13 + 2 >= (((v20 + 362) | 0x104) ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((2 * v22) | (8 * v22) | (v20 + 974))))(v21);
}

void sub_10004CDE8(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 108757529 * ((-2 - ((a1 | 0x1E625E8E) + (~a1 | 0xE19DA171))) ^ 0x101C35A);
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x139154EEB4327ECLL);
  uint64_t v6 = *(void *)(a1 + 8);
  unsigned int v5 = (460628867 * ((((v4 | 0xC87E0ECA) ^ 0xFFFFFFFE) - (~v4 | 0x3781F135)) ^ 0x7B177348)) ^ (v1 - 312);
  int v3 = (char *)*(&off_10007DD80 + (v1 ^ 0x5D4)) - 4;
  (*(void (**)(unsigned char *))&v3[8 * v1 + 7704])(v4);
  __asm { BRAA            X8, X17 }
}

void sub_10004CF44(_DWORD *a1)
{
  *((unsigned char *)a1 + ((v3 + v2) ^ 0x46662D4Cu) + v1 + 4) = 15;
  *a1 = v1;
  JUMPOUT(0x10004CF6CLL);
}

uint64_t sub_10004CF78()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((v0 + 1859146495) & 0x912FAA72 ^ 0x197) * (LODWORD(STACK[0x46C]) != v2)) ^ v0)))();
}

void sub_10004CFBC()
{
}

void sub_10004CFC4()
{
}

uint64_t sub_10004D03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(unsigned char *)(a5 + v23) = *(unsigned char *)(a8 + (v22 + v28))
                       - ((2 * *(unsigned char *)(a8 + (v22 + v28))) & 0xD6)
                       - 21;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (((v23 == 63) * ((v24 + v25) & v26 ^ v27)) ^ v24)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_10004D090(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((((v8 == a4) ^ a8) & 1) * ((a8 ^ 0xCB) - 407)) ^ a8)))();
}

void sub_10004D0C0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  if (v20 < 0x599833B1 != a17 - 419547434 < ((56 * v19) ^ 0x59983B71u)) {
    BOOL v18 = a17 - 419547434 < ((56 * v19) ^ 0x59983B71u);
  }
  else {
    BOOL v18 = a17 - 419547434 > v20;
  }
  __asm { BRAA            X11, X17 }
}

void sub_10004D2A4()
{
}

void sub_10004D2C8()
{
}

uint64_t sub_10004D300()
{
  uint64_t v5 = LODWORD(STACK[0x5D8]);
  unint64_t v6 = 1178560073 * ((2 * (v1 & 0x9EFB9DEBFD6CFA8) - v1 - 0x9EFB9DEBFD6CFA9) ^ 0xEDEC16C9FABD4835);
  *(void *)(v2 + 8) = v6 + 3768594525u;
  *(void *)(v2 + 24) = v5 + v6;
  *(_DWORD *)(v4 - 160) = v0 + 1473596674 - 1178560073 * ((2 * (v1 & 0xBFD6CFA8) - v1 + 1076441175) ^ 0xFABD4835) - 83;
  *(_DWORD *)(v4 - 168) = (1178560073 * ((2 * (v1 & 0xBFD6CFA8) - v1 + 1076441175) ^ 0xFABD4835)) ^ (v0 + 1473596674) ^ 0x15;
  *(_DWORD *)(v4 - 164) = 1178560073 * ((2 * (v1 & 0xBFD6CFA8) - v1 + 1076441175) ^ 0xFABD4835) + v0 + 2021362662;
  *(_DWORD *)(v4 - 196) = 1178560073 * ((2 * (v1 & 0xBFD6CFA8) - v1 + 1076441175) ^ 0xFABD4835);
  *(_DWORD *)(v4 - 184) = v0 + 1473596674 + 1178560073 * ((2 * (v1 & 0xBFD6CFA8) - v1 + 1076441175) ^ 0xFABD4835);
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 ^ 0xC8D)))(v4 - 200);
  int v8 = *(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 200));
  LODWORD(STACK[0x2EC]) = 604952942;
  return v8(v7);
}

uint64_t sub_10004D3F4(int a1, int a2, uint64_t a3, int a4)
{
  uint64_t v11 = (a1 + v8 + v7 + a4 - a2 + 320);
  *(int8x8_t *)(v5 - 7 + v11) = veor_s8(*(int8x8_t *)(v4 - 7 + v11), (int8x8_t)0xEBEBEBEBEBEBEBEBLL);
  return (*(uint64_t (**)(void, void, void))(v10 + 8 * ((55 * (a2 - (v6 & 0xFFFFFFF8) == -8)) ^ a4)))((a1 + v8 + v7 + a4 - a2 + 312), a2 - (v6 & 0xFFFFFFF8) + 16, v9 - (v6 & 0xFFFFFFF8));
}

void sub_10004D458()
{
}

uint64_t sub_10004D464(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 24);
  return 0;
}

void sub_10004D47C()
{
}

void sub_10004D498(uint64_t a1)
{
  BOOL v4 = *(void *)(a1 + 40) == 0x2C138C8FAF40FC22
    || *(void *)(a1 + 16) == 0xAA58417147CEA7FLL
    || *(void *)a1 == 0x234F284A02F7E69BLL;
  int v1 = *(_DWORD *)(a1 + 8) + 535753261 * ((((2 * a1) | 0xD63BF148) - a1 - 1797126308) ^ 0x61E9F68B);
  __asm { BRAA            X11, X17 }
}

void sub_10004D5D0()
{
  uint64_t v3 = *(void *)(v0 + 8);
  *(_DWORD *)(*(void *)(v0 + 24) - 0x8FD385F8C7F991DLL) = *v1;
  *(_DWORD *)(v3 - 0x6577379738C18B7ALL) = *v2;
  *(_DWORD *)(v0 + 20) = 526347143;
}

uint64_t sub_10004D64C@<X0>(int a1@<W8>)
{
  uint64_t v4 = *(void *)(v8 + 16);
  uint64_t v5 = *(void *)(v8 + 40);
  *(void *)(v3 - 204) = 0xEBEBEBEBEBEBEBEBLL;
  *(void *)(v3 - 196) = 0xEBEBEBEBEBEBEBEBLL;
  int v6 = 235795823 * ((((v3 - 168) | 0xEB9F054C) - ((v3 - 168) & 0xEB9F054C)) ^ 0x7F324C15);
  v1[54] = v3 + 0xC8F40939229079BLL;
  v1[51] = v3 - 188;
  v1[52] = v5;
  v1[49] = v4;
  *(_DWORD *)(v3 - 160) = v6 + 307381638;
  *(_DWORD *)(v3 - 132) = (a1 + 1977) ^ v6;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x8B9)))(v3 - 168);
  *(_DWORD *)(v8 + 12) = *(_DWORD *)(v3 - 136);
  return result;
}

void sub_10004D748()
{
}

uint64_t sub_10004D754(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((138 * (v3 + v2 - 2004297694 >= (((a2 ^ 0x2C8) + 657) ^ 0x56Au))) ^ a2)))();
}

void sub_10004D7A8()
{
}

uint64_t sub_10004D7B4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v4 & (2 * (*(unsigned __int8 *)(a2 + 3) - 137)))
                                 + ((*(unsigned __int8 *)(a2 + 3) - 137) ^ v5) == v5 + a3 - 431)
                                * (((a3 - 161) | 0x41) ^ 0x821)) ^ a3)))();
}

uint64_t sub_10004D804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,int a22,unsigned int a23,int a24)
{
  unsigned int v26 = 1759421093 * ((&a21 + 2130158787 - 2 * (&a21 & 0x7EF7A4C3)) ^ 0xCD8A1497);
  a24 = v26 ^ 0x4479276D;
  HIDWORD(a21) = v26 ^ 0x241A7128;
  a22 = v26 + v24 + 1072;
  LODWORD(a21) = v26 ^ 0x19C79A77;
  (*(void (**)(unint64_t **))(v25 + 8 * (v24 + 1860)))(&a21);
  a23 = v24
      - 460628867 * ((((2 * &a21) | 0x5259E7E8) - &a21 + 1456671756) ^ 0xE5BA7189)
      + 1058;
  a21 = &STACK[0x4313E3591B4C2A1];
  uint64_t v27 = (*(uint64_t (**)(unint64_t **))(v25 + 8 * (v24 + 1952)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8 * ((225 * (a22 == ((v24 + 755) ^ 0xA32A8012) + 2083841862)) ^ v24)))(v27);
}

uint64_t sub_10004D948(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((*(_DWORD *)(*v10 + 4 * v11) ^ v8) <= (*(_DWORD *)(*v9 + 4 * v11) ^ v8))
                                * ((a3 + 1836 + a5) & a6 ^ a7)) ^ (a3 + 1836))))();
}

uint64_t sub_10004D994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,unsigned int a42)
{
  uint64_t v47 = v46 + a6 + ((a42 - 235741058) & 0xE0D1ABD) - 16;
  int v48 = ((*(unsigned __int8 *)(a4 + v47) ^ 0xEB) << 24) | ((*(unsigned __int8 *)(v46 + a6 + a4 + 1) ^ 0xEB) << 16) | ((*(unsigned __int8 *)(v46 + a6 + a4 + 2) ^ 0xEB) << 8) | *(unsigned __int8 *)(v46 + a6 + a4 + 3) ^ 0xEB;
  *(_DWORD *)(v44 + (v47 & 0xFFFFFFFFFFFFFFFCLL)) = v48 + v43 - (v42 & (2 * v48));
  return (*(uint64_t (**)(void))(v45
                              + 8
                              * (((unint64_t)(a6 + 4 + v46) < 0x40) | (8
                                                                            * ((unint64_t)(a6 + 4 + v46) < 0x40)) | a42)))();
}

uint64_t sub_10004DA30()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((*(void *)(v1 + 24) == 0x335EB1051722DFECLL) ^ v0)))();
}

uint64_t sub_10004DA64()
{
  return sub_10005C0B4();
}

uint64_t sub_10004DA84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void))(a2 + 8 * ((172 * (v2 != 0)) ^ v3)))(a1, 70 * (v3 ^ 0x738u));
}

uint64_t sub_10004DAB4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((v2 - 1205 + ((v2 + 36831514) & 0xFDCDFEEB) - 797) * (v0 == v1)) ^ v2)))();
}

void sub_10004DB08()
{
}

uint64_t sub_10004DBA8(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v7 = (((a3 + 122954322) | 0x90028B38) ^ (v6 - 403)) + *(unsigned __int8 *)(a2 + 2);
  return (*(uint64_t (**)(void))(v3 + 8 * ((1588 * ((v4 & (2 * v7)) + (v7 ^ v5) == v5)) ^ a3)))();
}

uint64_t sub_10004DC00@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  BOOL v12 = v3 < v6;
  *(unsigned char *)(v11 - 220 + (v8 ^ 0x654u) + a2 + a3) = *(unsigned char *)(v10 + (v4 + v9))
                                                  - ((2 * *(unsigned char *)(v10 + (v4 + v9))) & 0xD6)
                                                  - 21;
  unsigned int v13 = v4 + 1 + a1;
  int v14 = v12 ^ (v13 < v6);
  BOOL v15 = v13 < v3;
  if (!v14) {
    BOOL v12 = v15;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v12 * v5) ^ v8)))();
}

uint64_t sub_10004DC74(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((((a6 + 438) ^ a1) + 2763) ^ (a6 + 1450)) * (a5 == 31)) ^ (a6 + 438))))();
}

uint64_t sub_10004DCCC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((*(void *)(v4 + 24) != 0x6F16120776D4F6DCLL) * (a4 ^ 0x7F0)) ^ a4)))();
}

void sub_10004DD00()
{
}

uint64_t sub_10004DD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((((*(_DWORD *)(v9 + (a7 + v10 + 1921) * (uint64_t)a8 + 40) & 8) != 153 * (v8 ^ 0x700)
                                                                                                 - 459)
                                * (((v8 - 1771) | 0x443) - 1085)) ^ v8)))();
}

uint64_t sub_10004DDC0(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1064
                                * ((v5 & (2 * (*(unsigned __int8 *)(a2 + 8) - 1)))
                                 + ((*(unsigned __int8 *)(a2 + 8) - 1) ^ v6) == ((a3 - 1084772848) & 0xD7FEFF79) + a4)) ^ a3)))();
}

uint64_t sub_10004DE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23)
{
  if (a23 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23
  }
                                                                + 8
                                                                * (a6
                                                                 + a5
                                                                 + 32 * (LODWORD(STACK[0x308]) == 1335561202)
                                                                 + 101)))(a1, a13, 2079419384);
  if (a23 != 1) {
    JUMPOUT(0x10004DF84);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23
                                                                       + 8
                                                                       * (((LODWORD(STACK[0x308]) != 1335561202)
                                                                         * (a6 + a5 + 917)) ^ (a6 + a5 + 133))))(a1, a2, 2079419384, a13);
}

uint64_t sub_10004DFB4()
{
  uint64_t v4 = *(void *)(v6 + 32);
  *(_DWORD *)(v3 - 112) = v0 + 1374699841 * ((v3 - 128) ^ 0x6DF41809) + 776;
  *(void *)(v3 - 128) = v2;
  *(void *)(v3 - 120) = v4;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1241)))(v3 - 128);
}

uint64_t sub_10004E04C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1506 * (a6 + 1 == v7 + 64)) ^ a1)))();
}

uint64_t sub_10004E118@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((3620
                                * (*(_DWORD *)(a15 + 4 * (v15 + v16 + 2)) == a1
                                                                                           + 3 * (v17 ^ 0x1B6)
                                                                                           - 978)) ^ (v17 + 1348))))();
}

uint64_t sub_10004E16C@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(_DWORD *)(a11 + 4 * (a3 + v11 + 1331)) = a2;
  int v17 = v11 + 1 + v13;
  BOOL v19 = v17 > (v12 ^ 0x325 ^ (v14 + 502)) || v17 < v15;
  return (*(uint64_t (**)(void))(v16 + 8 * ((v19 * a1) ^ v12)))();
}

void sub_10004E1B4()
{
}

void sub_10004E1C8()
{
}

uint64_t sub_10004E1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((2136 * (v5 == v7 + (a5 ^ 0x473) - 40)) ^ (a5 - 1037))))();
}

uint64_t sub_10004E20C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v5
                                                             + 8
                                                             * ((7
                                                               * (v2 + v1 + ((v4 - 529427615) & 0x1F8E66BF) - 792584090 < 8)) ^ v4)))(a1, v3, v4 - 588);
}

uint64_t sub_10004E274()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((((v2 == v1) ^ (3 * (v0 ^ 0xEF))) & 1) * (v0 ^ 0x410)) ^ v0)))();
}

void sub_10004E2B4()
{
  *(_DWORD *)(v0 - 0x2C138C8FAF40FC0ALL) = -526372770;
  JUMPOUT(0x10004E2E4);
}

void sub_10004E320()
{
  *(void *)(v0 + 312) = *(void *)(v1 + 8 * (int)(STACK[0x420] - 1091));
  JUMPOUT(0x100043830);
}

uint64_t sub_10004E34C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(void *)(a2 + (v9 + v8)) = *(void *)(a1 + (v9 + v8));
  return (*(uint64_t (**)(void))(v11 + 8 * (((a3 == 0) * a8) ^ v10)))();
}

void sub_10004E37C()
{
}

uint64_t sub_10004E3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13
                                                                       + 8
                                                                       * (int)(((a13 - 713989013 < (a3 - 21))
                                                                              * ((a3 + 23) ^ 0xF2)) ^ (a3 + 866))))(a1, a2, a3, a4);
}

uint64_t sub_10004E44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * ((63 * (v6 - 1062117730 < ((v8 + 226) | 0x618u) - 1793)) ^ (v8 + 789))))(a1, a2, 21, a4, a5, a6, 3506);
}

uint64_t sub_10004E4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((242 * (v5 + a5 + (v7 ^ 0x46Au) + 47 >= v5 + a5)) ^ v7)))();
}

void sub_10004E4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v7 = *(unsigned __int8 *)(v6 - 124) ^ 0xDD;
  if (v7 == 1)
  {
    char v8 = a5 + v5 + 15;
    unsigned int v14 = *(_DWORD *)(v6 - 156);
    unsigned int v13 = *(_DWORD *)(v6 - 152);
    *(unsigned char *)(v6 - 164) = ((8 * v13) ^ 0x20) + (v8 ^ 0x59) - ((2 * ((8 * v13) ^ 0x20)) & 0xDF);
    char v12 = -42;
    *(unsigned char *)(v6 - 163) = ((v13 >> 5) ^ 0x87) - ((2 * ((v13 >> 5) ^ 0x87)) & 0xD6) - 21;
    *(unsigned char *)(v6 - 162) = ((v13 >> 13) ^ 8) - 2 * (((v13 >> 13) ^ 8) & 0xEF ^ (v13 >> 13) & 4) - 21;
    *(unsigned char *)(v6 - 161) = ((v13 >> 21) ^ 0x54) - ((2 * ((v13 >> 21) ^ 0x54)) & 0xD6) - 21;
    HIDWORD(v15) = v14 ^ 5;
    LODWORD(v15) = v13 ^ 0xA0000000;
    *(unsigned char *)(v6 - 160) = (v15 >> 29) - ((2 * (v15 >> 29)) & 0xD6) - 21;
    *(unsigned char *)(v6 - 159) = ((v14 >> 5) ^ 0x31) - ((2 * ((v14 >> 5) ^ 0x31)) & 0xD6) - 21;
    *(unsigned char *)(v6 - 158) = ((v14 >> 13) ^ 0xA8) - 2 * (((v14 >> 13) ^ 0xA8) & 0xEF ^ (v14 >> 13) & 4) - 21;
    unsigned int v11 = (v14 >> 21) ^ 0x1D;
  }
  else
  {
    if (v7 != 2) {
      goto LABEL_6;
    }
    char v8 = 62 * (v5 ^ (v5 + 1));
    unsigned int v11 = *(_DWORD *)(v6 - 156);
    unsigned int v9 = *(_DWORD *)(v6 - 152);
    *(unsigned char *)(v6 - 164) = ((v11 >> 21) ^ 0x1D) - ((2 * ((v11 >> 21) ^ 0x1D)) & 0xD6) - 21;
    *(unsigned char *)(v6 - 163) = ((v11 >> 13) ^ 0xA8) - 2 * (((v11 >> 13) ^ 0xA8) & (v8 ^ 0xDD) ^ (v11 >> 13) & 4) - 21;
    *(unsigned char *)(v6 - 162) = ((v11 >> 5) ^ 0x31) - 2 * (((v11 >> 5) ^ 0x31) & 0xEF ^ (v11 >> 5) & 4) - 21;
    HIDWORD(v10) = v11 ^ 5;
    LODWORD(v10) = v9 ^ 0xA0000000;
    *(unsigned char *)(v6 - 161) = (v10 >> 29) - ((2 * (v10 >> 29)) & 0xD6) - 21;
    *(unsigned char *)(v6 - 160) = ((v9 >> 21) ^ 0x54) - ((2 * ((v9 >> 21) ^ 0x54)) & 0xD6) - 21;
    *(unsigned char *)(v6 - 159) = ((v9 >> 13) ^ 8) - 2 * (((v9 >> 13) ^ 8) & 0xEF ^ (v9 >> 13) & 4) - 21;
    *(unsigned char *)(v6 - 158) = ((v9 >> 5) ^ 0x87) - ((2 * ((v9 >> 5) ^ 0x87)) & 0xD6) - 21;
    LOBYTE(v11) = (8 * v9) ^ 0x20;
    char v12 = -48;
  }
  *(unsigned char *)(v6 - 157) = v11 - (((_BYTE)v11 << ((v8 ^ (v5 + 78)) + 78)) & v12) - 21;
LABEL_6:
  JUMPOUT(0x100020C0CLL);
}

uint64_t sub_10004E724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,_DWORD *a41)
{
  uint64_t v45 = (*(uint64_t (**)(uint64_t, void))(v42 + 8 * (v41 ^ 0xF3E)))(a30, 0);
  unsigned int v46 = a41[4] - 43663526 - ((2 * a41[4]) & 0xFACB7EB4);
  a41[1] = a41[6] - 43663526 - ((v41 - 87328592) & (2 * a41[6]));
  a41[2] = v46;
  int v47 = (*(uint64_t (**)(uint64_t))(v42 + 8 * (v41 ^ 0xEFE)))(v45);
  a41[3] = v47 - 43663526 - ((2 * v47) & 0xFACB7EB4);
  int v48 = (*(uint64_t (**)(void))(v42 + 8 * (v41 + 758)))();
  *a41 = v48 - 43663526 - ((2 * v48) & 0xFACB7EB4);
  uint64_t v55 = (v44 - 144) | 0x1AA4E40F087B15E7;
  unsigned int v49 = ((~*v43 >> 30) - 43663526 - 4 * (*v43 >= 0)) ^ *v43;
  unsigned int v50 = (*a41 ^ 0xFD65BF5A) + ((1664525 * v49 - 43663526 - ((3329050 * v49) & 0xFACB7EB4)) ^ v43[1]);
  v43[1] = v50 - 43663526 - ((2 * v50) & 0xFACB7EB4);
  unint64_t v51 = 1374699841 * ((0xE55B1BF0F784EA18 - ((v44 - 144) | 0xE55B1BF0F784EA18) + v55) ^ 0x14A87A03658F0DEELL);
  int v52 = (v41 + 298736337) ^ v51;
  *(_DWORD *)(v44 - 120) = -1374699841 * ((-142284264 - ((v44 - 144) | 0xF784EA18) + v55) ^ 0x658F0DEE);
  *(_DWORD *)(v44 - 116) = v52;
  *(_DWORD *)(v44 - 112) = (v41 + 298736337) & 0x3FCEF196 ^ v51;
  *(_DWORD *)(v44 - 104) = v52 ^ 0x1B;
  *(void *)(v44 - 136) = v51 + 959129093;
  *(void *)(v44 - 128) = v51 ^ 0x392B2607;
  *(_DWORD *)(v44 - 144) = v51 + v41 - 1501687384;
  uint64_t v53 = (*(uint64_t (**)(uint64_t))(v42 + 8 * (v41 + 694)))(v44 - 144);
  return (*(uint64_t (**)(uint64_t))(v42 + 8 * *(int *)(v44 - 108)))(v53);
}

uint64_t sub_10004EA14(char a1, char a2, char a3, int a4, int a5, int8x16_t a6, int8x8_t a7, int8x8_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v59 = (a5 + a4 - 8);
  v61.val[0].i64[0] = ((_BYTE)a5 + (_BYTE)a4 - 8) & 0xF;
  v61.val[0].i64[1] = ((_BYTE)a5 + v56 - 8) & 0xF;
  v61.val[1].i64[0] = ((_BYTE)a5 + v55 - 8) & 0xF;
  v61.val[1].i64[1] = ((_BYTE)a5 + v54 - 8) & 0xF;
  v61.val[2].i64[0] = ((_BYTE)a5 + v52 - 8 + (v57 ^ 0xE)) & 0xF;
  v61.val[2].i64[1] = ((_BYTE)a5 + a3 - 8) & 0xF;
  v61.val[3].i64[0] = ((_BYTE)a5 + a2 - 8) & 0xF;
  v61.val[3].i64[1] = ((_BYTE)a5 + a1 - 8) & 0xF;
  *(int8x8_t *)(*(void *)(v58 - 136) + v59) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(*(void *)(v58 - 120) + v59), *(int8x8_t *)(v50 + (v59 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v51 + (v59 & 0xF) - 7), *(int8x8_t *)(v49 + (v59 & 0xF) - 7)))), a8), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v61, a6), a7)));
  return (*(uint64_t (**)(void))(a49 + 8 * ((191 * (a5 != v53 + 8)) ^ *(_DWORD *)(v58 - 128))))();
}

void sub_10004EA3C(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 - 0x6F16120776D4F6DCLL) = 1;
  JUMPOUT(0x10005AF24);
}

uint64_t sub_10004EA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v66 = *(unsigned __int8 *)(v64 - 0x72E93EC0CCAF5722) ^ 0xDD;
  if (v66 == 1)
  {
    unsigned int v74 = *(_DWORD *)(v64 - 0x72E93EC0CCAF573ELL);
    *(unsigned char *)(v64 - 0x72E93EC0CCAF574ALL) = ((8 * v74) ^ 0x20) - ((2 * ((8 * v74) ^ 0x20)) & 0xDF) - 21;
    int v69 = a8 + 113;
    char v73 = -42;
    *(unsigned char *)(v64 - 0x72E93EC0CCAF5749) = ((a8 + 113) ^ (v74 >> 5) ^ 0x4B)
                                           - ((2 * ((a8 + 113) ^ (v74 >> 5) ^ 0x4B)) & 0xD6)
                                           - 21;
    *(unsigned char *)(v64 - 0x72E93EC0CCAF5748) = ((v74 >> 13) ^ 8) - 2 * (((v74 >> 13) ^ 8) & 0xEF ^ (v74 >> 13) & 4) - 21;
    *(unsigned char *)(v64 - 0x72E93EC0CCAF5747) = ((v74 >> 21) ^ 0x54) - ((2 * ((v74 >> 21) ^ 0x54)) & 0xD6) - 21;
    unsigned int v75 = *(_DWORD *)(v64 - 0x72E93EC0CCAF5742);
    HIDWORD(v76) = v75 ^ 5;
    LODWORD(v76) = v74 ^ 0xA0000000;
    *(unsigned char *)(v64 - 0x72E93EC0CCAF5746) = (v76 >> 29) - ((2 * (v76 >> 29)) & 0xD6) - 21;
    *(unsigned char *)(v64 - 0x72E93EC0CCAF5745) = ((v75 >> 5) ^ 0x31) - ((2 * ((v75 >> 5) ^ 0x31)) & 0xD6) - 21;
    *(unsigned char *)(v64 - 0x72E93EC0CCAF5744) = ((v75 >> 13) ^ 0xA8)
                                           - 2 * (((v75 >> 13) ^ 0xA8) & 0xEF ^ (v75 >> 13) & 4)
                                           - 21;
    int v72 = (v75 >> 21) ^ 0x1D;
    goto LABEL_5;
  }
  int v67 = a8;
  if (v66 == 2)
  {
    unsigned int v68 = *(_DWORD *)(v64 - 0x72E93EC0CCAF5742);
    int v69 = a8 ^ 0x97;
    unsigned int v70 = *(_DWORD *)(v64 - 0x72E93EC0CCAF573ELL);
    HIDWORD(v71) = v68 ^ 5;
    LODWORD(v71) = v70 ^ 0xA0000000;
    *(unsigned char *)(v64 - 0x72E93EC0CCAF574ALL) = ((v68 >> 21) ^ 0x1D) - ((2 * ((v68 >> 21) ^ 0x1D)) & 0xD6) - 21;
    *(unsigned char *)(v64 - 0x72E93EC0CCAF5749) = ((v68 >> 13) ^ 0xA8)
                                           - ((((v68 >> 13) ^ 0xFFFFFFA8) << ((a8 ^ 0x97) + 53)) & 0xD6)
                                           - 21;
    *(unsigned char *)(v64 - 0x72E93EC0CCAF5748) = ((v68 >> 5) ^ 0x31) + (~(2 * ((v68 >> 5) ^ 0x31)) | 0x29) - 20;
    *(unsigned char *)(v64 - 0x72E93EC0CCAF5747) = (v71 >> 29) + (~(2 * (v71 >> 29)) | 0x29) - 20;
    *(unsigned char *)(v64 - 0x72E93EC0CCAF5746) = ((v70 >> 21) ^ 0x54) - ((2 * ((v70 >> 21) ^ 0x54)) & 0xD6) - 21;
    *(unsigned char *)(v64 - 0x72E93EC0CCAF5745) = ((v70 >> 13) ^ 8) - ((2 * ((v70 >> 13) ^ 8)) & 0xD6) - 21;
    LOBYTE(v72) = (8 * v70) ^ 0x20;
    char v73 = -48;
    *(unsigned char *)(v64 - 0x72E93EC0CCAF5744) = ((v70 >> 5) ^ 0x87) - ((2 * ((v70 >> 5) ^ 0x87)) & 0xD6) - 21;
LABEL_5:
    int v67 = v69 ^ 0x97;
    *(unsigned char *)(v64 - 0x72E93EC0CCAF5743) = v72 - (((_BYTE)v72 << (v69 ^ 0xCD)) & v73) - 21;
  }
  *(void *)(v63 + 200) = *(void *)(v65 + 8 * (v67 - 1103));
  return sub_1000565FC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_10004EDD8()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0xD05)))(32) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * (((((v1 ^ v2) & 1) == 0) * (((v1 - 440172045) & 0x1A3C7B96) - 369)) | v1)))();
}

uint64_t sub_10004EE38(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v2
                                                    + 8
                                                    * ((171
                                                      * (((v1 + 1415439841) & 0x2BA21D7F ^ 0xC49DF98F)
                                                       + *(_DWORD *)(v3 - 0x2C138C8FAF40FC16) == 0)) ^ (v1 + 1181))))(a1, *(void *)(v3 - 0x2C138C8FAF40FC22));
}

uint64_t sub_10004EEB0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((464 * (*(void *)(v0 + 192) == 0)) ^ (v1 + 127))))();
}

uint64_t sub_10004EED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((4 * (a4 + 1 == v6 + 24)) | ((a4 + 1 == v6 + 24) << 9)) ^ v4)))();
}

uint64_t sub_10004EF9C@<X0>(int a1@<W3>, _DWORD *a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_DWORD *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  *a28 = a40 + 405273881;
  int v42 = (a3 + 393907497) ^ a11;
  *(void *)(v41 - 128) = (*a2 + 662845971) ^ a11;
  *(void *)(v41 - 136) = a9;
  *(_DWORD *)(v41 - 144) = a11 + a3 - 1542247033;
  *(_DWORD *)(v41 - 120) = -(int)a11;
  *(_DWORD *)(v41 - 116) = v42;
  *(_DWORD *)(v41 - 112) = (a3 + 393907533) ^ a11;
  *(_DWORD *)(v41 - 104) = v42 ^ 0x7F;
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(v40 + 8 * (a3 ^ (a1 - 1926))))(v41 - 144);
  return (*(uint64_t (**)(uint64_t))(v40 + 8 * *(int *)(v41 - 108)))(v43);
}

uint64_t sub_10004F058()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((53
                                * (((((v0 - 1909) | 0x810) ^ 0xED7FFFFA) & (2 * v1) ^ 0xED53F0C2)
                                 + (v1 ^ (v0 + 1210365022) & 0xB7DB47FF ^ 0x9560476)
                                 - 1054758 != 1991238593)) ^ v0)))();
}

void sub_10004F0DC()
{
}

uint64_t sub_10004F0E8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((3829
                                * ((int)((v3 ^ 0xFDF2DECF) + 1073590720 + (v0 & 0xFBE5BD9E) - 1039175824) > (int)(v1 - 1611))) ^ v1)))();
}

void sub_10004F184()
{
}

void sub_10004F204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, _DWORD *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  uint64_t v50 = 7 * (a10 ^ 0x400013E3u);
  uint64_t v51 = *v49;
  if (((unint64_t)*v49 & 3) != (v50 ^ 0x77E)
    || (uint64_t v52 = (uint64_t)*(&off_10007DD80 + (a10 ^ 0x40001246u)),
        uint64_t v54 = *(void *)(v52 - 4),
        int v53 = (void *)(v52 - 4),
        v54))
  {
    *a11 = -526372808;
    sub_100059E34();
  }
  else
  {
    *int v53 = v51;
    *(_DWORD *)*(&off_10007DD80 + (int)(v50 ^ 0x73D)) = 255;
    *v51 |= ~v51[*v51 & 0x3ELL] << 16;
    v51[4] |= ~v51[v51[4] & 0x3ELL] << ((14 * (a10 ^ 0xE3)) ^ 0xEC);
    v51[8] |= ~v51[v51[8] & 0x3ELL] << 16;
    v51[12] |= ~v51[v51[12] & 0x3ELL] << 16;
    v51[16] |= ~v51[v51[16] & 0x3ELL] << 16;
    v51[20] |= ~v51[v51[20] & 0x3ELL] << 16;
    v51[24] |= ~v51[v51[24] & 0x3ELL] << 16;
    v51[28] |= ~v51[v51[28] & 0x3ELL] << 16;
    v51[32] |= ~v51[v51[32] & 0x3ELL] << 16;
    v51[36] |= ~v51[v51[36] & 0x3ELL] << 16;
    v51[40] |= ~v51[v51[40] & 0x3ELL] << 16;
    v51[44] |= ~v51[v51[44] & 0x3ELL] << 16;
    v51[48] |= ~v51[v51[48] & 0x3ELL] << 16;
    v51[52] |= ~v51[v51[52] & 0x3ELL] << 16;
    v51[56] |= ~v51[v51[56] & 0x3ELL] << 16;
    v51[60] |= ~v51[v51[60] & 0x3ELL] << 16;
    uint64_t v55 = (*(uint64_t (**)(char *, void, uint64_t))(v47 + 8 * (int)(v50 ^ 0xFB6)))(&a47, 0, 1024);
    STACK[0x528] = (unint64_t)&a47;
    (*(void (**)(uint64_t))(v47
                                    + 8
                                    * (((v48 + ((14 * (a10 ^ 0x400013E3)) ^ 0xD06) + 40560171 == 537)
                                      * (((14 * (a10 ^ 0x400013E3)) ^ 0xD06) + 477)) ^ (14 * (a10 ^ 0x400013E3)) ^ 0xD06)))(v55);
  }
}

uint64_t sub_10004F520@<X0>(uint64_t a1@<X0>, char a2@<W2>, int a3@<W4>, int a4@<W8>)
{
  *(unsigned char *)(a1 + v5) = *(unsigned char *)(v8 + (v4 + v7))
                      + (a2 | ~(2 * *(unsigned char *)(v8 + (v4 + v7))))
                      - 20;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v5 == 63) | (a3 + a4 + 426))))();
}

uint64_t sub_10004F564(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9)
{
  *(void *)(a9 + v10 + ((v11 - 910) | a3)) = v13;
  return (*(uint64_t (**)(void))(v12 + 8 * ((((v9 & 0x38) == 8) * a7) | v11)))();
}

uint64_t sub_10004F5A8()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((54 * (v3 + 1 == v2 + 32)) ^ v0)))();
}

uint64_t sub_10004F674@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((231 * (((v2 == (a2 ^ 0x2A)) ^ (a2 - 112)) & 1)) ^ (a2 + 1628))))(a1, -1839851021);
}

void sub_10004F6BC(int a1@<W8>)
{
  int v3 = a1 + 2136730618;
  if (*v2 + 406995271 < 0) {
    int v3 = 383330680 - a1;
  }
  _DWORD *v2 = v1 + 624 + *v2 - 1260031956 + v3;
  JUMPOUT(0x10004F758);
}

void jfkdDAjba3jd(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, _DWORD *a6)
{
  uint64_t v6 = (unint64_t *)*(&off_10007DD80
                           + ((-35 * ((qword_100081B78 - dword_100081B98) ^ 0xD8)) ^ byte_100073F90[byte_10006F340[(-35 * ((qword_100081B78 - dword_100081B98) ^ 0xD8))] ^ 0x50])
                           - 58);
  int v7 = *(&off_10007DD80
       + (byte_100068B54[(byte_100073B90[(-35
                                                                                           * (*v6 ^ qword_100081B78 ^ 0xD8))] ^ 0xF1)
                                        - 4] ^ (-35 * (*v6 ^ qword_100081B78 ^ 0xD8)))
       - 137);
  unint64_t v8 = (*v7 - *v6) ^ (unint64_t)&v10;
  *uint64_t v6 = (1226760413 * v8) ^ 0x5B705F9A26A579D8;
  void *v7 = 1226760413 * (v8 ^ 0x5B705F9A26A579D8);
  *a5 = 0;
  *a6 = 0;
  v11[1] = 108757529
         * (((v11 | 0x51085D1D) - v11 + (v11 & 0xAEF7A2E0)) ^ 0xB1943F36)
         - 504207030;
  LOBYTE(v7) = -35 * (*(_DWORD *)v6 ^ 0xD8 ^ *(_DWORD *)v7);
  char v9 = (char *)*(&off_10007DD80
               + ((-35 * ((qword_100081B78 + dword_100081B98) ^ 0xD8)) ^ byte_100073F90[byte_10006F340[(-35 * ((qword_100081B78 + dword_100081B98) ^ 0xD8))] ^ 0x8B])
               - 79)
     - 4;
  (*(void (**)(_DWORD *))&v9[8
                                      * (byte_100068C50[byte_100073D94[v7 - 4] ^ 0xCA] ^ v7)
                                      + 17528])(v11);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10004F9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  HIDWORD(a22) = 2119813987;
  int v32 = *(_DWORD *)(a19 + 4);
  unsigned int v33 = 628203409 * ((((2 * &a24) | 0x924221B8) - &a24 - 1226903772) ^ 0xCBA91CEF);
  a29 = *(void *)(a19 + 8);
  a30 = a15;
  a27 = a17;
  a25 = a14;
  a24 = a16;
  LODWORD(a26) = v30 - v33 + 1452;
  HIDWORD(a26) = -1178884666 - v33 + v32;
  uint64_t v37 = (*(uint64_t (**)(uint64_t *))(v31 + 8 * (v30 + 1896)))(&a24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * ((1038 * (a28 == ((6 * (v30 ^ 0xBC)) ^ 0x1F5F6DDD))) ^ v30)))(v37, a2, 2079419387, &off_10007DD80, a5, 2291026155, 2514269652, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_10004FAF8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((224
                                * (*(_DWORD *)(v3 + 72) == ((((((a2 - 388) | 0x48) - 1161860464) & 0xCDCEDCEF)
                                                           - 211605790) ^ (((a2 - 388) | 0x48) - 912266621) & 0x366017DF))) ^ ((a2 - 388) | 0x48))))();
}

void sub_10004FB80()
{
}

uint64_t sub_10004FB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v11 = v7 + 1931542505 > 1237111672 || v7 + 1931542505 < (int)(((v8 + 227) ^ 0xC9BCD56F) + a7);
  uint64_t v12 = *(uint64_t (**)(uint64_t, void))(v9 + 8 * ((113 * v11) ^ v8));
  return v12(113, v12);
}

void sub_10004FBF4()
{
}

void sub_10004FC00(_DWORD *a1@<X8>)
{
  unsigned int v4 = 642903839 * (v1[1] - v2)
     - ((((v3 - 255974710) & 0xF41DFEF ^ 0x5D031656) + 1285807678 * (v1[1] - v2)) & 0xA7400726)
     - 2111730705;
  *uint64_t v5 = (HIBYTE(v4) ^ 0xD3) - ((2 * (HIBYTE(v4) ^ 0xD3)) & 0xD6) - 21;
  v5[1] = (BYTE2(v4) ^ 0xA0) - 2 * ((BYTE2(v4) ^ 0xA0) & 0xEF ^ BYTE2(v4) & 4) - 21;
  v5[2] = (BYTE1(v4) ^ 3) - 2 * ((BYTE1(v4) ^ 3) & 0xEF ^ BYTE1(v4) & 4) - 21;
  v5[3] = v4 ^ 0x78;
  *int v1 = *a1;
}

uint64_t sub_10004FD08()
{
  return sub_10004FD14();
}

uint64_t sub_10004FD14(uint64_t a1, int a2)
{
  char v10 = *(uint64_t (**)(void))(v7 + 8 * v3);
  uint64_t v11 = *v9;
  unsigned int v12 = v4 + a2;
  *(unsigned char *)(*v9 + v12) = (v5 ^ HIBYTE(v2)) - (v6 & (2 * (v5 ^ HIBYTE(v2)))) - 21;
  *(unsigned char *)(v11 + v12 + 1) = (BYTE2(v2) ^ v8) - 2 * ((BYTE2(v2) ^ v8) & 0xEF ^ BYTE2(v2) & 4) - 21;
  *(unsigned char *)(v11 + v12 + 2) = (BYTE1(v2) ^ 3) - 2 * ((BYTE1(v2) ^ 3) & 0xEF ^ BYTE1(v2) & 4) - 21;
  *(unsigned char *)(v11 + v12 + 3) = v2 ^ 0x78;
  return v10();
}

uint64_t sub_10004FD9C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((1825 * (*(_DWORD *)(v2 - 0x2C138C8FAF40FC0ALL) == (v1 ^ 0x1F5F6E13))) ^ (v1 - 565))))();
}

uint64_t sub_10004FDF0()
{
  return sub_10004FDF8();
}

uint64_t sub_10004FDF8@<X0>(int a1@<W0>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v9 = (a1 - v5);
  int8x8_t v10 = vrev64_s8(*(int8x8_t *)(a3 + v9 - 7));
  *(int8x8_t *)(v4 + v9) = vrev64_s8(vadd_s8(vsub_s8(v10, vand_s8(vadd_s8(v10, v10), v8)), v7));
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 + 280 + v5 == 1723) * a2) ^ (v3 - 351))))();
}

uint64_t sub_10004FE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,unsigned int a34,uint64_t a35,unsigned int a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,unsigned int a41)
{
  int v211 = v44 + 1127;
  uint64_t v45 = v41 ^ 0x4E6EA4B1FD49BE9CLL;
  uint64_t v46 = ((v41 ^ 0x4E6EA4B1FD49BE9CLL)
       + a1
       - ((((v44 - 741572466) & 0x2C337FBA) + 0x6DEA8B548E54D634) & (2 * (v41 ^ 0x4E6EA4B1FD49BE9CLL)))) ^ v43;
  uint64_t v47 = __ROR8__(__ROR8__(a2 ^ a35, 12) ^ 0xA9F5355D327AAF0FLL, 52);
  uint64_t v48 = v47 ^ 0x322397601515A6F7;
  unint64_t v49 = ((v47 ^ 0x322397601515A6F7)
       + 0x45E632E50038A633
       - (((v44 + 328685096) & 0xEC68A9FB ^ 0x8BCC65CA00714D94) & (2 * (v47 ^ 0x322397601515A6F7)))) ^ a8;
  uint64_t v50 = a6 ^ v45;
  uint64_t v51 = v46 ^ 0x68040451F630332FLL;
  unint64_t v52 = (v49 ^ 0xE4C1C31231B4037DLL) & (v47 ^ 0xCDDC689FEAEA5908) ^ v46 ^ 0x68040451F630332FLL;
  unint64_t v53 = v50 ^ 0x6AC0C59F7B0C8054 ^ (((v46 ^ 0x97FBFBAE09CFCCD0) & (v47 ^ 0x322397601515A6F7))
                                    - ((2 * ((v46 ^ 0x97FBFBAE09CFCCD0) & (v47 ^ 0x322397601515A6F7))) & 0x554B35EE11DE2616)
                                    + 0x2AA59AF708EF130BLL);
  unint64_t v54 = v49 ^ 0xE4C1C31231B4037DLL ^ (v50 ^ 0x40655F6873E3935FLL) & (a6 ^ 0xBF9AA0978C1C6CA0);
  *((void *)&v55 + 1) = a6 ^ 0x935F;
  *(void *)&long long v55 = a6 ^ 0x40655F6873E30000;
  unint64_t v56 = (v49 ^ 0x1B3E3CEDCE4BFC82) & (a6 ^ 0x40655F6873E3935FLL) ^ v48 ^ v52;
  unint64_t v57 = v51 & (v50 ^ 0xBF9AA0978C1C6CA0);
  unint64_t v58 = __ROR8__(__ROR8__(v52, 38) ^ __ROR8__(v53, 38) ^ 0xB8AB4977971512F1, 26);
  char v59 = *(unsigned char *)(a37 + ((((v56 >> 61) ^ 4) + 241) ^ 0x78));
  char v60 = 4 * (v59 ^ 0xDD) - ((8 * (v59 ^ 0xDD)) & 0x48) - 89;
  LOBYTE(v49) = (v59 ^ 0xDD) - ((2 * (v59 ^ 0xDD)) & 0x4E) - 89;
  char v61 = v59 ^ 0xE5;
  char v62 = v61 + (v49 ^ v60 ^ 0xC7) + 1;
  char v63 = v62 & 0x40;
  unint64_t v64 = v57 ^ __ROR8__((v55 >> 16) ^ 0x4D81525DA35B383ALL, 48) ^ v54;
  unsigned __int8 v65 = (v60 ^ 0x58) + 1;
  if ((v62 & 0x40 & v65) != 0) {
    char v66 = v65 - v63 - 2 * ((v65 - v63) & 0x44 ^ v65 & 4);
  }
  else {
    char v66 = v63 + v65 - ((2 * (v63 + v65)) & 0x87);
  }
  char v67 = (v66 - 61) ^ ((v62 & 0xBF) - 2 * (v62 & 3) - 61);
  *((void *)&v68 + 1) = ~v54;
  *(void *)&long long v68 = v54 ^ 0x92CFC162FD513142;
  unsigned __int8 v69 = ((v67 - ((2 * v67) & 0x4E) - 89) ^ v60) + v61;
  unint64_t v70 = __ROR8__(v54, 57) & 0xFFFFFFFFFFFFE07FLL;
  *((void *)&v68 + 1) = v54 ^ 0x42044AB189873991 ^ ((v68 >> 1)
                                                      - ((2 * (v68 >> 1)) & 0xA19717A6E9AC11A4)
                                                      - 0x2F34742C8B29F72ELL);
  *(void *)&long long v68 = *((void *)&v68 + 1) ^ (v54 << 58) ^ 0xC00000000000000;
  uint64_t v71 = v68 >> 51;
  uint64_t v72 = v56 ^ (v56 >> 39) ^ (8 * v56) ^ (((v69 >> 1) | (v69 << 7)) | (v56 << 25));
  unint64_t v73 = v72 ^ 0xD43F06E17EB89ED3;
  uint64_t v74 = v71 + (v70 ^ 0x8F8AC7F1FBA51795);
  unint64_t v75 = (v53 << 23) ^ 0xFBA827E079000000;
  unint64_t v76 = (((v58 << 45) ^ (v58 << 36)) & 0xFFFFFFF000000000 | (v58 >> 28)) ^ (v58 >> 19) ^ 0xD0A2B87327B31AB3;
  unint64_t v77 = (v76 - ((2 * v76) & 0x8305A4D3D1683378) - 0x3E7D2D96174BE644) ^ v58;
  unint64_t v78 = v53 ^ (v53 >> 41) ^ (v53 >> 7) ^ (((v53 << 57) ^ 0xE400000000000000)
                                        - ((2 * ((v53 << 57) ^ 0xE400000000000000)) & 0x4444444444444444)
                                        - 0x5C6FE7C7F9E70CFCLL);
  unint64_t v79 = (v78 & 0x10000000000000 ^ 0xFFB3BB3EEAFFBEDFLL) + 2 * (v78 & 0x10000000000000);
  unint64_t v80 = v79 + 0x1DFEFFD57FECFDA3;
  unint64_t v81 = v78 & 0xFFEFFFFFFFFFFFFFLL;
  unint64_t v82 = v79 + 0x4C44C115004121;
  uint64_t v83 = __ROR8__(v74 - 2 * (v71 & (v70 ^ 0x8F8AC7F1FBA51795)), 13);
  unint64_t v84 = v64 ^ (v64 >> 10) ^ (v64 << 47) ^ ((v64 >> 17) | (v64 << 54));
  unint64_t v85 = 0x1D66765355EC7B61 - v79;
  if ((v82 & v75) == 0) {
    unint64_t v85 = v80;
  }
  uint64_t v86 = (v75 - 0x1DB2BB146AECBC82 + v85) ^ v81;
  unint64_t v87 = ((v86 ^ 0x15C74D80B8AC30E4)
       - ((2 * (v86 ^ 0x15C74D80B8AC30E4)) & 0xCBDE9155A21EAE28)
       - 0x1A10B7552EF0A8ECLL) ^ v84;
  uint64_t v88 = __ROR8__(__ROR8__(v87 ^ 0xD2877A94626538ADLL, 23) ^ 0x6C4FE5A873E441B7, 41);
  unint64_t v89 = v73 ^ (v83 - 0xD99D31F221CB5C2 - ((2 * v83) & 0xE4CC59C1BBC6947CLL));
  unint64_t v90 = v77 ^ v86;
  unint64_t v91 = v88 & (v84 ^ 0x1CAE3FE19723B7B4) ^ v89;
  unint64_t v92 = (v90 ^ 0x1E399C70490A254BLL | ~v88)
      + ((v88 - 0xA1431F3657CA6DLL - ((2 * v88) & 0xFEBD79C193506B26)) ^ v90 ^ 0xE167209080A210D8)
      + 1;
  unint64_t v93 = (((v89 ^ 0xBEE74353B47A99EDLL) & (v72 ^ 0xD9A6D5FE5CA42B12))
       - 0xA1431F3657CA6DLL
       - ((2 * ((v89 ^ 0xBEE74353B47A99EDLL) & (v72 ^ 0xD9A6D5FE5CA42B12))) & 0xFEBD79C193506B26)) ^ v90 ^ 0xE167209080A210D8;
  unint64_t v94 = v87 ^ (v90 ^ 0xE1C6638FB6F5DAB4) & (v72 ^ 0x26592A01A35BD4EDLL);
  unint64_t v95 = ((v93 ^ (v89 ^ 0x4118BCAC4B856612) & (v84 ^ 0xE351C01E68DC484BLL))
       - 0xD99D31F221CB5C2
       - ((2 * (v93 ^ (v89 ^ 0x4118BCAC4B856612) & (v84 ^ 0xE351C01E68DC484BLL))) & 0xE4CC59C1BBC6947CLL)) ^ v73;
  *((void *)&v97 + 1) = v94 ^ v93 ^ 0x8F67ABC;
  *(void *)&long long v97 = v94 ^ v93 ^ 0xAAC28740B0000000;
  uint64_t v96 = v97 >> 28;
  unint64_t v98 = v92 ^ __ROR8__(((v91 ^ 0xBEE74353B47A99EDLL) >> 27) ^ __ROR8__(v84 ^ 0xE1DE6585B59498FDLL, 27) ^ (((v91 ^ 0xBEE74353B47A99EDLL) << 37)- (((v91 ^ 0xBEE74353B47A99EDLL) << 38) & 0x1379170000000000)- 0x7643747485F20715), 37);
  *(void *)&long long v97 = __ROR8__(v94 ^ v93, 19);
  unint64_t v99 = (v96 ^ v97 ^ 0xCF57955850E8171ELL)
      - ((2 * (v96 ^ v97 ^ 0xCF57955850E8171ELL)) & 0xA184542F2B57D4FALL)
      - 0x2F3DD5E86A541583;
  unint64_t v100 = (v91 ^ 0xD1A234CC1D2559D7) << 58;
  unint64_t v101 = v100 & (v91 ^ 0xD000000000000000);
  unint64_t v102 = v100 | v91 ^ 0xD1A234CC1D2559D7;
  *((void *)&v97 + 1) = v95 ^ 0x1747C156E755AED6;
  *(void *)&long long v97 = v95 ^ 0x4000000000000000;
  uint64_t v103 = v95 ^ __ROR8__(v95, 39) ^ (v97 >> 61);
  unint64_t v104 = v103 ^ 0x9D988BC1E3DFF3D6;
  uint64_t v105 = v103 & 0x7C09B5691D153F3ALL;
  uint64_t v106 = ((v94 >> 7) ^ (v94 >> 41) | (v94 << 57)) ^ (v94 << 23) ^ 0x132524DD953EE58ELL;
  unint64_t v107 = v106 - ((2 * v106) & 0xF8F7BE14138061D6) - 0x38420F5F63FCF15;
  unint64_t v108 = v107 ^ v94;
  unint64_t v109 = v99 ^ v93 ^ v107;
  unint64_t v110 = v98 ^ (v98 << 47) ^ (v98 >> 10) ^ (v98 >> 17) ^ (v98 << 54);
  unint64_t v111 = (v108 & (unint64_t)&_mh_execute_header ^ 0x2AD3E7CFFF3EF9DFLL)
       + 2 * (v108 & (unint64_t)&_mh_execute_header);
  unint64_t v112 = v111 - 0x812C3868026A0C0;
  unint64_t v113 = v108 & 0xFFFFFFFEFFFFFFFFLL;
  unint64_t v114 = ((v91 ^ 0xD1A234CC1D2559D7) >> 6) ^ (v91 >> 1) ^ v102 ^ ((v101 ^ ((v91 ^ 0xD1A234CC1D2559D7) << 63))
                                                                  + 0x6711E1CAA824D282
                                                                  - ((2 * v101) & 0xCFFFFFFFFFFFFFFFLL)) ^ v103 ^ 0x9D988BC1E3DFF3D6;
  unint64_t v115 = v111 - 0x2AD3E7CFFF3EF9DFLL;
  unint64_t v116 = 0x4D950C197E5752FELL - v111;
  if (((v110 ^ 0xBEE8B63400000000) & v115) == 0) {
    unint64_t v116 = v112;
  }
  unint64_t v117 = ((v110 ^ 0xBEE8B6349A795903) - 0x22C124497F18591FLL + v116) ^ v113;
  *((void *)&v119 + 1) = v109 ^ 0x11CCECA30;
  *(void *)&long long v119 = v109 ^ 0x1AFDC61000000000;
  uint64_t v118 = v119 >> 33;
  *(void *)&long long v119 = __ROR8__((v114 ^ 0x68D11A660E92ACEBLL) & (v103 ^ 0x57695F4B404DEABLL), 33);
  unint64_t v120 = (v117 ^ 0x9F0294B9CE6CA50ELL) & (v109 ^ 0x1AFDC6111CCECA30);
  char v121 = v117 & 1;
  char v122 = !(v117 & 1);
  unint64_t v123 = (v109 ^ 0xE50239EEE33135CFLL) & (v103 ^ 0xFA896A0B4BFB2154);
  *(void *)&long long v119 = __ROR8__(v118 ^ v119 ^ 0xCF4F457632C10184, 31);
  uint64_t v124 = (v117 ^ 0x60FD6B4631935AF1) & (v110 ^ 0x411749CB6586A6FCLL);
  unint64_t v125 = v117 ^ (v123 - ((2 * v123) & 0x6274659444610932) - 0x4EC5CD35DDCF7B67);
  uint64_t v126 = v124 ^ v114 ^ 0x68D11A660E92ACEBLL;
  unint64_t v127 = v126 ^ v110 ^ (v120 - ((2 * v120) & 0x4C26BF3C3398AC02) - 0x59ECA061E633A9FFLL);
  unint64_t v128 = v119 ^ v104 ^ (((v110 ^ 0xBEE8B6349A795903) & (v114 ^ 0x972EE599F16D5314))
                      + 0x6711E1CAA824D282
                      - ((2 * ((v110 ^ 0xBEE8B6349A795903) & (v114 ^ 0x972EE599F16D5314))) & 0xCE23C3955049A504));
  unint64_t v129 = (v126 ^ 0x7955EAEC4D48B80CuLL) >> v122 >> v121;
  unint64_t v130 = v128 ^ 0x871114BB6A66FF53 ^ (((v128 >> 61) ^ (v128 >> 39) ^ 0xAFF5F4)
                                      - ((2 * ((v128 >> 61) ^ (v128 >> 39) ^ 0xAFF5F4)) & 0x1774E06)
                                      - 0x2F141075F54458FDLL);
  uint64_t v131 = (((v128 << 25) ^ 0x62C1BAB0A0000000 ^ -(uint64_t)((v128 << 25) ^ 0x62C1BAB0A0000000) ^ (v130
                                                                                                  - (v130 ^ (v128 << 25) ^ 0x62C1BAB0A0000000)))
        + v130) ^ (8 * v128);
  unint64_t v132 = ((v125 >> 41) | (v125 << 57)) ^ (v125 >> 7) ^ (((v125 << 23) ^ 0x4A21DEFABE000000)
                                                      - ((2 * ((v125 << 23) ^ 0x4A21DEFABE000000)) & 0x9559B1C3CD000000)
                                                      + 0x4AACD8E1E6BA0EB1);
  unint64_t v133 = (v127 >> 10) ^ (v127 << 47) ^ (v127 >> 17) ^ (v127 << 54) ^ 0x8A9BD714D25588B3;
  unint64_t v134 = (v133 - ((2 * v133) & 0x83A23A27D67829BCLL) + 0x41D11D13EB3C14DELL) ^ v127;
  uint64_t v135 = v134 ^ 0x4FC158D138B9D0EALL;
  unint64_t v136 = ((v125 ^ (unint64_t)v119) << 36) ^ ((v125 ^ (unint64_t)v119) << 45) ^ ((v125 ^ (unint64_t)v119) >> 19) ^ ((v125 ^ (unint64_t)v119) >> 28) ^ 0x533CF3A597622EDBLL;
  unint64_t v137 = v132 ^ v125 ^ v134;
  uint64_t v138 = v132 ^ v119 ^ (v136 - ((2 * v136) & 0x6AE355A8EE1F7574) - 0x4A8E552B88F04546);
  *(void *)&long long v119 = __ROR8__(v126, 6);
  unint64_t v139 = ((((v126 << 63) | 0x31E557ABB13522E0) ^ v119 ^ v129)
        - ((2 * (((v126 << 63) | 0x31E557ABB13522E0) ^ v119 ^ v129)) & 0xF8820D0A2651458ELL)
        + 0x7C4106851328A2C7) ^ v126;
  uint64_t v140 = v139 ^ 0x514EC695E601ACBLL;
  unint64_t v141 = ((v139 ^ 0x514EC695E601ACBLL)
        + 0x73FA207FFBDF81CBLL
        - 2 * ((v139 ^ 0x514EC695E601ACBLL) & 0x73FA207FFBDF81DBLL ^ v139 & 0x10)) ^ v131 ^ 0xCC2DF9F4FD35434BLL;
  uint64_t v142 = (v131 ^ 0x40282674F9153D7FLL) & v140;
  unint64_t v143 = (v137 ^ 0xBD33281B542F8C4) & (v134 ^ 0xB03EA72EC7462F15) ^ v141;
  unint64_t v144 = (v142 - ((v142 + 0x475DBA021522B0E9 - ((2 * v142) & 0x8EBB74042A4561D2)) ^ v138 ^ 0x6C7FE15A7740F0F3)) ^ ((v138 ^ 0xD4DDA4A79D9DBFE5) + 1);
  unint64_t v145 = ((v144 + 0x475DBA021522B0E9 - ((2 * v144) & 0x8EBB74042A4561D2)) ^ v138 ^ 0x6C7FE15A7740F0F3) + v142;
  unint64_t v146 = ((v135 & ~v141) + 0x73FA207FFBDF81CBLL - ((2 * (v135 & ~v141)) & 0xE7F440FFF7BF0396)) ^ v131 ^ 0xCC2DF9F4FD35434BLL ^ v145;
  unint64_t v147 = (((2 * v137) ^ 0xE8599AFC957A0E77) + (v137 ^ 0xBD33281B542F8C4)) & (v138 ^ 0x2B225B586262401ALL);
  unint64_t v148 = (((v131 ^ 0xBFD7D98B06EAC280) & (v138 ^ 0xD4DDA4A79D9DBFE5))
        - ((2 * ((v131 ^ 0xBFD7D98B06EAC280) & (v138 ^ 0xD4DDA4A79D9DBFE5))) & 0xACC280CF1BF29E7ELL)
        - 0x299EBF987206B0C1) ^ v137;
  unint64_t v149 = v145 ^ v148;
  unint64_t v150 = v145 ^ v148 ^ 0xDDB272E638BBB7FBLL;
  unint64_t v151 = v143 ^ v135 ^ v147;
  *((void *)&v119 + 1) = v146 ^ 0x1877DA25;
  *(void *)&long long v119 = v146 ^ 0x425764BB40000000;
  uint64_t v152 = v119 >> 30;
  *((void *)&v119 + 1) = v145 ^ v148 ^ 0x34271;
  *(void *)&long long v119 = v145 ^ v148 ^ 0x4A44D503CE500000;
  uint64_t v153 = (v146 << 25) ^ 0x76B0EFB44A000000;
  unint64_t v154 = v143 & 0xFDFEEACE34F5F11BLL ^ 0x3BDA1E3360BF843ALL ^ (v143 & 0x2011531CB0A0EE4 | (v143 << 58));
  unint64_t v155 = v152 ^ (v146 >> 61 << 34) ^ 0x84F57132E3442245;
  uint64_t v156 = (v148 >> 41) ^ 0x56BAED;
  uint64_t v157 = (v119 >> 19) ^ (v150 << 36) ^ (v150 >> 28) ^ 0x6E8F58A97F6A7E5FLL;
  unint64_t v158 = v149 ^ 0x9749311A880D77FBLL ^ (v157 - ((2 * v157) & 0xBA1BC8328CBC6B14) - 0x22F21BE6B9A1CA76);
  unint64_t v159 = ((((v143 >> 1) ^ 0xB6B068EB09448B05) & 0x350CC7CF779F8E66)
        - (((v143 >> 1) ^ 0xB6B068EB09448B05) & 0x110C01C6259F0C62)
        + (((v143 >> 1) ^ 0xB6B068EB09448B05) & 0x110C01C6259F0C62 ^ 0x994D21C6A5BF7CFALL)) ^ ((v143 >> 1) ^ 0xB6B068EB09448B05) & 0x350CCFCF779F8E66;
  unint64_t v160 = (v159 & 0x782C7ECD9544116ELL ^ 0x702C18C901400105)
       + (v159 ^ 0x8C41660494A474FALL)
       - ((v159 ^ 0x8C41660494A474FALL) & 0x782C7ECD9544116ELL);
  uint64_t v161 = __ROR8__(v155, 34);
  unint64_t v162 = v154 ^ (v143 << 63);
  *((void *)&v119 + 1) = v148 ^ 6;
  *(void *)&long long v119 = v148 ^ 0xAD75DA35CBDF8A00;
  uint64_t v163 = v148 ^ 0xBC619E1ED96B4EF8 ^ ((v119 >> 7) - ((2 * (v119 >> 7)) & 0x22288856256989FCLL) + 0x1114442B12B4C4FELL);
  unint64_t v164 = (v161 ^ (v146 >> 39) ^ 0x84AEC9) + v153;
  uint64_t v165 = v161 & v153;
  uint64_t v166 = v163 & v156;
  uint64_t v167 = v163 + v156;
  unint64_t v168 = v164 - 2 * v165;
  uint64_t v169 = v160 ^ 0x55153FD8C4D13047 ^ (v162 + 0x383506D7608E2928 - ((2 * v154) & 0x706A0DAEC11C5250));
  BOOL v170 = v105 == 0x7809200909112110;
  uint64_t v171 = v169 ^ 0x47CAF9289F71D6D7;
  if (v170) {
    uint64_t v171 = v160 ^ 0x55153FD8C4D13047;
  }
  uint64_t v172 = v168 ^ (8 * v146);
  BOOL v170 = ((v160 ^ 0x6D20390FA45F196FLL) & v162) == 0;
  uint64_t v173 = ((v162 + (v160 ^ 0x92DFC6F05BA0E690) + 1) ^ 0xCCEFFC6AD7FFF7BBLL)
       + 0x733CD3BDEFED9F80
       + ((2 * (v162 + (v160 ^ 0x92DFC6F05BA0E690) + 1)) & 0x99DFF8D5AFFFEF76);
  uint64_t v174 = v167 - 2 * v166;
  if (v170) {
    uint64_t v173 = v169 + 2 * ((v171 ^ 0x383506D7608E2928) & v154) + 0x402CD028C7ED973BLL;
  }
  unint64_t v175 = v174 ^ (v148 << 23);
  unint64_t v176 = v151 ^ (v151 >> 10) ^ (v151 >> 17) ^ (v151 << 47) ^ (v151 << 54);
  *((void *)&v177 + 1) = v173 + 0x1FD32FD7381268C5;
  *(void *)&long long v177 = v173 - 0x402CD028C7ED973BLL;
  unint64_t v178 = v172 ^ 0xAA6A2D4BA2838D66;
  uint64_t v179 = __ROR8__(__ROR8__(v175, 57) ^ __ROR8__(v158, 57) ^ 0xC0E96C8E7C86706, 7);
  unint64_t v180 = v172 ^ 0xAA6A2D4BA2838D66 ^ (v143 >> 6) ^ __ROR8__(__ROR8__(v143, 62) & 0xFFFFBFFFFFFFFFFBLL ^ 0x4F1EC6363424B53DLL ^ (v177 >> 61), 3);
  uint64_t v181 = (v180 ^ 0x3CBE485844A65555) & (v176 ^ 0x5156C560131506D7);
  v180 ^= 0xC341B7A7BB59AAAALL;
  uint64_t v182 = v180 & (v172 ^ 0x5595D2B45D7C7299);
  unint64_t v183 = v180 ^ (v175 ^ 0x1AE5EFC503000000) & (v176 ^ 0xAEA93A9FECEAF928);
  unint64_t v184 = v181 ^ v178;
  *((void *)&v177 + 1) = v179 ^ 0x16FDF2E892CF90CELL;
  *(void *)&long long v177 = v179;
  uint64_t v185 = v182 ^ v179 ^ 0x16FDF2E892CF90CELL;
  unint64_t v186 = (__ROR8__((v177 >> 38) ^ 0x2F851D43D911B5B3, 26) ^ 0xAD6F61F41EB8AF09) & v178 ^ v175 ^ v176;
  unint64_t v187 = v185 ^ v186;
  unint64_t v188 = ((v183 ^ *((void *)&v177 + 1) & (v175 ^ v176 ^ 0xB44CD55AEFEAF928))
        - ((2 * (v183 ^ *((void *)&v177 + 1) & (v175 ^ v176 ^ 0xB44CD55AEFEAF928))) & 0x9BBB93EE54B0DA4ALL)
        - 0x32223608D5A792DBLL) ^ v176;
  *((void *)&v177 + 1) = v185 ^ v186 ^ 0x3D2C8;
  *(void *)&long long v177 = v185 ^ v186 ^ 0x428F09E60B600000;
  uint64_t v189 = v184 ^ v185 ^ ((v184 ^ v185) >> 39) ^ (8 * (v184 ^ v185)) ^ ((v184 ^ v185) << 25) ^ ((v184 ^ v185) >> 61);
  uint64_t v190 = (v177 >> 19) ^ ((v185 ^ v186 ^ 0x4BB32AA5101506D7) << 36) ^ ((v185 ^ v186 ^ 0x4BB32AA5101506D7) >> 28);
  unint64_t v191 = __ROR8__(__ROR8__(v183 ^ 0x616B258C5FF13C26, 27) ^ 0x61D86C4195FBD0F1, 37);
  unint64_t v192 = ((v190 ^ 0xB76D41F000000000)
        - 2 * ((v190 ^ 0xB76D41F000000000) & 0x74781FCC96C26637 ^ v190 & 0x20)
        - 0xB87E033693D99E9) ^ v187;
  unint64_t v193 = v183 ^ 0x6DC4FB0BD4FFFF44 ^ ((v183 ^ 0x6DC4FB0BD4FFFF44) >> 1) ^ (v191 << 58);
  *((void *)&v177 + 1) = v186 ^ 0xA97E34586;
  *(void *)&long long v177 = v186 ^ 0x5E94DC0000000000 ^ (((v186 << 57) ^ 0xC00000000000000)
                                                  - ((2 * ((v186 << 57) ^ 0xC00000000000000)) & 0x7000000000000000)
                                                  + 0x3892425BD80FC899);
  uint64_t v194 = ((v189 ^ 0xABCF8FE7C463E5DLL) + v193 - 2 * ((v189 ^ 0xABCF8FE7C463E5DLL) & v193)) ^ ((v191 >> 6) | (v191 << 63));
  uint64_t v195 = __ROR8__(__ROR8__(v186, 49) & 0xFFFFFFFFFFC07FFFLL ^ 0x94CBAE2F68E2AC31 ^ (v177 >> 42), 22);
  unint64_t v196 = v188 ^ (v188 >> 10) ^ (((v188 << 54) ^ (v188 << 47)) & 0xFFFF800000000000 | (v188 >> 17));
  unint64_t v197 = v195 & 0xDD74CA3F78583B7ELL;
  BOOL v170 = v74 == 0;
  unint64_t v198 = v195 ^ 0xDD74CA3F78583B7ELL;
  if (v170) {
    unint64_t v198 = 0x228B35C087A7C481;
  }
  unint64_t v199 = v198 & v195;
  uint64_t v200 = v196 ^ 0x4F0BCA737D365059;
  unint64_t v201 = v197 ^ __ROR8__(v186, 41) ^ v199 ^ 0x8F373AC9F8A47866;
  uint64_t v202 = (v196 ^ 0x8FC6482193C1023) & ~v194;
  unint64_t v203 = v192 ^ v201;
  unint64_t v204 = v201 & (v196 ^ 0xF7039B7DE6C3EFDCLL);
  unint64_t v205 = (v201 + 0x47F7AEF1640A407ALL - ((2 * v201) & 0x8FEF5DE2C81480F4)) ^ v200 ^ (v203 ^ 0x4908E9D5F19C7F11) & (v189 ^ 0xABCF8FE7C463E5DLL);
  unint64_t v206 = ((v203 ^ 0xB6F7162A0E6380EELL ^ v194 & (v189 ^ 0xF543070183B9C1A2) ^ v202)
        - ((2 * (v203 ^ 0xB6F7162A0E6380EELL ^ v194 & (v189 ^ 0xF543070183B9C1A2) ^ v202)) & 0xF480E6E2F65ABC4)
        - 0x785BF8C8E84D2A1ELL) ^ v189;
  unint64_t v207 = v204 ^ v194 ^ ((v204 ^ v194) << 58) ^ (((v204 ^ v194) >> 1) ^ ((v204 ^ v194) >> 6) | ((unint64_t)~(v204 ^ v194) << 63));
  BOOL v209 = a41 - 124221670 < a34;
  if (a36 > 0xCA59219A != a41 - 124221670 < 0x35A6DE65) {
    BOOL v209 = a36 > 0xCA59219A;
  }
  unint64_t v208 = v205 ^ 0xB69E2DF9126D03CLL ^ (((v205 << 57) ^ 0xAE00000000000000)
                                     - ((2 * ((v205 << 57) ^ 0xAE00000000000000)) & 0x9999999999999999)
                                     + 0x4C5DD3E58E0DF86BLL);
  return (*(uint64_t (**)(void, unint64_t, BOOL, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * (v211 ^ (11 * v209))))(a41, v206 ^ (8 * v206) ^ (v206 << 25) ^ (v206 >> 39) ^ (v206 >> 61) ^ 0x567B5442A21D20F7, a36 > 0xCA59219A, 84455, a5, (v205 << 23) ^ (v205 >> 7) ^ (v208 | (v205 >> 41) ^ 0x239A18) ^ v208 & ((v205 >> 41) ^ 0x239A18), 0xB6F7162A0E6380EELL, v207, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_100051700()
{
  LODWORD(STACK[0x46C]) = v0;
  STACK[0x5E0] = STACK[0x3F8];
  LODWORD(STACK[0x5D8]) = v0;
  return sub_1000449B8();
}

void sub_10005171C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) - 1224239923 * ((-2 - ((a1 | 0xAACC30C4) + (~a1 | 0x5533CF3B))) ^ 0xA78032EC);
  __asm { BRAA            X11, X17 }
}

void sub_100051848()
{
  _DWORD *v0 = -526372686;
}

uint64_t sub_100051860()
{
  *(_DWORD *)(v5 - 128) = v3
                        - 13
                        - 108757529 * ((~((v5 - 128) | 0x19E09044) + ((v5 - 128) & 0x19E09044)) ^ 0x6830D90)
                        + 1420;
  *(void *)(v5 - 120) = v1;
  *(void *)(v5 - 112) = v2;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v3 + 2002)))(v5 - 128);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * ((55
                                              * (v4 != ((v3 + 66624253) & 0xFC076BFF ^ 0x4783552B)
                                                     + ((v3 - 831359275) & 0x318D8FF9))) ^ (v3 - 13))))(v6);
}

uint64_t sub_100051930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(v28 - 144) = (v24 - 1823) ^ (1225351577
                                         * ((((v28 - 144) | 0xE5A66361) + (~(v28 - 144) | 0x1A599C9E)) ^ 0xC63CBB76));
  *(void *)(v28 - 136) = a23;
  *(void *)(v28 - 128) = a24;
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 112) = a22;
  (*(void (**)(uint64_t))(v26 + 8 * (v24 ^ 0x10E)))(v28 - 144);
  *(_DWORD *)(v28 - 144) = (v24 - 1823) ^ (1225351577
                                         * ((((v28 - 144) | 0x57292175) - ((v28 - 144) & 0x57292175)) ^ 0x74B3F963));
  *(void *)(v28 - 136) = a23;
  *(void *)(v28 - 128) = a24;
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 112) = a22;
  (*(void (**)(uint64_t))(v26 + 8 * (v24 ^ 0x10E)))(v28 - 144);
  *(_DWORD *)(v28 - 144) = (v24 - 1823) ^ (1225351577
                                         * ((2 * ((v28 - 144) & 0x216F9478) - (v28 - 144) - 560960635) ^ 0xFD0AB393));
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 112) = a22;
  *(void *)(v28 - 136) = a23;
  *(void *)(v28 - 128) = a24;
  (*(void (**)(uint64_t))(v26 + 8 * (v24 + 242)))(v28 - 144);
  int v29 = 1374699841 * ((((v28 - 144) | 0x951DA954) - (v28 - 144) + ((v28 - 144) & 0x6AE256A8)) ^ 0xF8E9B15D);
  *(void *)(v28 - 136) = v27;
  *(_DWORD *)(v28 - 128) = -128426107 - v29 + v25 + 1;
  *(_DWORD *)(v28 - 144) = (v24 - 618) ^ v29;
  (*(void (**)(uint64_t))(v26 + 8 * (v24 + 212)))(v28 - 144);
  BOOL v30 = *(_DWORD *)(v28 - 140) != (((v24 - 1035) | 0x27A) ^ 0x5F2A01E);
  int v31 = 1374699841 * ((~((v28 - 144) | 0x16B4FC58) + ((v28 - 144) & 0x16B4FC58)) ^ 0x84BF1BAE);
  *(_DWORD *)(v28 - 128) = -128426107 - v31 + v25;
  *(_DWORD *)(v28 - 144) = (v24 - 618) ^ v31;
  *(void *)(v28 - 136) = v27;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v24 + 212)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * ((v30 * ((39 * (v24 ^ 0x814)) ^ 0x430)) ^ v24)))(v32);
}

void sub_100051B94()
{
}

uint64_t sub_100051BA0()
{
  return sub_100051BD4();
}

uint64_t sub_100051BD4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((121
                                              * ((STACK[0x330] & 0x3F ^ 0x7149A7FD)
                                               + ((2 * LODWORD(STACK[0x330])) & 0x32u)
                                               - 1900652565 > 0xFFFFFFBF)) | (a2 + 707))))(1313);
}

uint64_t sub_100051D30@<X0>(unint64_t a1@<X0>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, int a13, unsigned int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  unint64_t v23 = (v18 ^ HIDWORD(a1) ^ (v21 - 1196160365) & 0x474BF6BF) + HIDWORD(v20) + (*(_DWORD *)(a18 + a6) ^ a2);
  *(_DWORD *)(a18 + 4 * a9) = v23 + a2 - (v19 & (2 * v23));
  *(_DWORD *)(a18 + a6) = (v23 >> ((v21 + 7) & 0x7F ^ 0x1Fu)) | a2;
  BOOL v24 = a15 + 858137072 < a13;
  if (a14 > a12 != a15 + 858137072 < -763079883) {
    BOOL v24 = a14 > a12;
  }
  return (*(uint64_t (**)(void))(v22 + 8 * (v21 ^ (121 * v24))))();
}

void sub_100051E10()
{
}

uint64_t sub_100051E98()
{
  *uint64_t v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_100051EBC()
{
  *(void *)(v5 - 120) = v3;
  *(_DWORD *)(v5 - 112) = v4
                        + ((((v5 - 128) | 0x2274F5C9) - (v5 - 128) + ((v5 - 128) & 0xDD8B0A30)) ^ 0x98E08DAB) * v2
                        - 7;
  *(void *)(v5 - 104) = v1;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v4 + 549)))(v5 - 128);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * (((*(_DWORD *)(v5 - 128) > 0x4B4B6B4Bu) * ((v4 ^ 0x347) - 1395)) ^ v4)))(v6);
}

void sub_100051F54()
{
}

void sub_100051FC4(int a1@<W8>)
{
  int v7 = ((v6 - 1956630864 - 2 * ((v6 - 144) & 0x8B602F40)) ^ 0x31F45722) * v1;
  *(_DWORD *)(v6 - 116) = v7 + v2 + ((a1 - 822) ^ 0xFA4A7D23);
  *(void *)(v6 - 136) = v4;
  *(void *)(v6 - 128) = v5;
  *(_DWORD *)(v6 - 144) = v7 + a1 - 299;
  (*(void (**)(uint64_t))(v3 + 8 * (a1 ^ 0xAB1)))(v6 - 144);
  JUMPOUT(0x10003236CLL);
}

void sub_100052040()
{
  int v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x10005206CLL);
}

uint64_t sub_10005211C@<X0>(uint64_t a1@<X1>, int a2@<W5>, uint64_t a3@<X8>)
{
  *((unsigned char *)&STACK[0x2AC] + a3 + a1) = -21;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1635 * ((unint64_t)(a3 + 1 + a1) < 0x38)) ^ (a2 + v3 + 100))))();
}

uint64_t sub_10005215C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0x6DE ^ (35 * LODWORD(STACK[0x3C8])))))();
}

uint64_t sub_1000521C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                                + 8
                                                                                * (int)((15
                                                                                       * ((STACK[0x420]
                                                                                         - 60) & 1)) ^ (STACK[0x420] - 517))))(a1, 1092, 4143027690, a4, 235);
}

uint64_t sub_100052220()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((662
                                * ((((*(unsigned __int8 *)(v3 + 3) - 134) << ((v2 + 63) ^ 0x35)) & v0)
                                 + ((*(unsigned __int8 *)(v3 + 3) - 134) ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_100052264(double a1)
{
  *(double *)(v5 + v3) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 == 0) * v2) ^ v1)))();
}

uint64_t sub_10005228C()
{
  unsigned int v5 = ((v2 + 350787328) & 0xEB176B3E ^ 0xFFFFFCC7) + *(unsigned __int8 *)(v3 + 5);
  return (*(uint64_t (**)(void))(v4 + 8 * ((985 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v2)))();
}

void sub_1000522E0()
{
}

uint64_t sub_1000522EC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((239 * (((v3 ^ v2) & 0x1F ^ 0x15) == ((v0 - 369455875) & 0x160577FA ^ (v0 + 1272)))) ^ v0)))();
}

void sub_100052368()
{
}

uint64_t sub_100052370()
{
  STACK[0x420] = v0;
  uint64_t v4 = v3 - 200;
  *(unsigned char *)uint64_t v4 = (-85 * ((2 * ((v3 + 56) & 0x38) - (v3 + 56) - 57) ^ 0x31)) ^ 0x60;
  STACK[0x268] = (unint64_t)&STACK[0x6577379738C1903E];
  *(void *)(v4 + 8) = &STACK[0x6577379738C1903E];
  STACK[0x270] = (unint64_t)&STACK[0x8FD385F8C7F9DC5];
  *(void *)(v4 + 24) = &STACK[0x8FD385F8C7F9DC5];
  *(_DWORD *)(v3 - 184) = 3804331 * ((2 * ((v3 - 200) & 0x59AF7138) - (v3 - 200) - 1504670009) ^ 0xD885AB31) + v1 + 1367;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 + 1901)))(v3 - 200);
  int v6 = *(_DWORD *)(v3 - 180);
  LODWORD(STACK[0x5D8]) = v6;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((200 * (v6 != (((v1 - 76585356) & 0x4909CBF ^ 0x4AF) << 6) + 526346631)) ^ v1)))(v5);
}

uint64_t sub_100052478@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  unsigned int v5 = v4 + 221792570;
  BOOL v6 = v5 < v2 + 654302954;
  int v7 = (v3 > 0xD9001C4E) ^ v6;
  BOOL v8 = v3 + 654304177 < v5;
  if (!v7) {
    BOOL v6 = v8;
  }
  if (v6) {
    int v9 = a2;
  }
  else {
    int v9 = a2 + 1;
  }
  *(_DWORD *)(result + 12) = v9;
  return result;
}

uint64_t sub_1000524D4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6
                                                              + 8
                                                              * ((53
                                                                * (((11 * (v5 ^ 0x509)) ^ 0x1671C9F5 ^ -(v2 + 2 * (((v5 - 1240) ^ 0x9679CA56) & v4)) & 0x1FF5FFF6)
                                                                 + ((v3 - (((v5 - 1240) ^ 0x9679CA56) & v4) - 817137378) ^ 0x44C61AEC)
                                                                 - 147328048 == 120779723)) ^ v5)))(a1, a2, 2431);
}

uint64_t sub_10005257C()
{
  *(void *)(v0 + 48) = *(void *)(v1 + 8 * (int)(STACK[0x420] - 1044));
  return sub_10005A044();
}

uint64_t sub_100052598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49)
{
  return (*(uint64_t (**)(void))(v49
                              + 8
                              * (int)((((STACK[0x420] ^ 0x732F790) != 120779739) * ((a49 ^ 0x450) + 21)) | (STACK[0x420] + 51))))();
}

uint64_t sub_100052608()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (612 * (v1 == v3)))))();
}

uint64_t sub_10005262C@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v4 - 220 + a2 - 1340507626) = -21;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1249 * ((unint64_t)(a2 - 1340507625) < 0x38)) ^ (a1 + v2 + 566))))();
}

uint64_t sub_100052674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, unsigned __int8 a19)
{
  int v22 = -v20;
  unsigned int v23 = v20 + v19 - 1900652504;
  if (v23 <= 0x40) {
    int v24 = 64;
  }
  else {
    int v24 = v23;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21
                                                              + 8
                                                              * ((((((v22 + 1900652504 - v19 + v24) < 0xF) ^ a19) & 1)
                                                                * ((a13 - 423) ^ 0x409)) ^ a13)))(a1, a2, 4294966082);
}

void sub_1000526F8()
{
}

uint64_t sub_100052704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((v7 < ((v8 - 1383389014) & 0x5274D36Bu) - 330) * ((a6 + v8 + 305) ^ (a6 + 1625))) ^ v8)))();
}

void sub_100052754()
{
}

uint64_t sub_100052760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = *(void *)(v4 - 0x2C138C8FAF40FC22);
  int v8 = ((*(unsigned __int8 *)(v7 + (v3 - 226063315)) ^ 0xEB) << 24) | (((((v6 + 61) | 0x61) - 27) ^ v6 ^ 0x76 ^ *(unsigned char *)(v7 + (v3 - 226063314))) << 16) | ((*(unsigned __int8 *)(v7 + (v3 - 226063313)) ^ 0xEB) << 8) | *(unsigned __int8 *)(v7 + (v3 - 226063312)) ^ 0xEB;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((28
                                * (((v8 + v2 - ((2 * v8) & 0x3EBED70E)) & 0xFFFFFF ^ 0x5F6B87)
                                 - (*(_DWORD *)(a1 + 32) ^ v5) == -1359518954)) ^ v6)))();
}

uint64_t sub_100052838@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((v3 + ((v3 + 974699756) & 0xC5E742FF ^ 0xFFFFFE78) + 458)
                                     * ((a1 ^ 0xF4BF7EA) + v1 - v2 == -2038141898)) | v3)))();
}

void sub_10005289C(int a1@<W8>)
{
  _DWORD *v2 = 2103820122;
  (*(void (**)(uint64_t))(v3 + 8 * (((a1 - 1694) | 0x2F) ^ 0x89D)))(v1);
  JUMPOUT(0x1000528ECLL);
}

uint64_t sub_100052A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = v4 ^ 0xC3A;
  int v7 = ((v4 ^ 0xC3A) - 2081) | 0x119;
  uint64_t v8 = v3;
  uint64_t v9 = a3 + v3;
  if ((unint64_t)(v9 + 1) > 0x38) {
    uint64_t v10 = v9 + 1;
  }
  else {
    uint64_t v10 = 56;
  }
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((v10 - v8 + 1839851021 < (unint64_t)((v6 - 925474920) & 0x37299CE6) - 1240)
                                * (v7 ^ 0x1A5)) ^ v6)))();
}

uint64_t sub_100052A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  a19 = v19 - 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((464 * (((*(&a19 + 6 * (v19 - 1883610289) + 2) + (int)a6) & ((v20 ^ (v21 + 447)) + 0xFFFFFFF20ECF457)) == 2)) ^ v20)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_100052B48()
{
  *int v4 = v4[623];
  *(_DWORD *)(v7 - 144) = v6 + v0 - v5 - 1542247033;
  *(void *)(v7 - 136) = v2;
  *(void *)(v7 - 128) = (v1 - 1185548168) ^ v6;
  *(_DWORD *)(v7 - 104) = (v0 - v5 + 479320129) ^ v6;
  *(_DWORD *)(v7 - 116) = (v0 - v5 + 479320049) ^ v6;
  *(_DWORD *)(v7 - 112) = (v0 - v5 + 479320254) ^ v6;
  *(_DWORD *)(v7 - 120) = -(int)v6;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 + 1697)))(v7 - 144);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v7 - 108)))(v8);
}

uint64_t sub_100052BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v17 - 120) = v16
                         + 1178560073 * ((2 * ((v17 - 136) & 0x25D80F90) - (v17 - 136) - 634916753) ^ 0x60B3880D)
                         + 848;
  *(void *)(v17 - 128) = a14;
  *(void *)(v17 - 112) = v15;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v16 ^ 0xB84)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v17 - 136) > 0x4B4B6B4Cu) * ((v16 + 12) ^ 0x424)) ^ v16)))(v18);
}

uint64_t sub_100052C98@<X0>(int a1@<W5>, int a2@<W7>, int a3@<W8>)
{
  int v6 = *(_DWORD *)(v4 + v3 * (uint64_t)a2 + 36);
  BOOL v7 = v6 != a1;
  if (v6 - 911463694 <= -2072803504 || v6 - 911463694 >= SLODWORD(STACK[0x3F8])) {
    BOOL v7 = 0;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((1006 * (((a3 - 96) ^ v7) & 1)) ^ a3)))();
}

uint64_t sub_100052D0C@<X0>(int a1@<W7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((v2 != (((a2 - 1062) | 0x641) ^ (a1 + 669)))
                                     * ((a2 - 2660607) & 0xDF3B9FFF ^ (v3 + 2))) ^ a2)))();
}

uint64_t sub_100052D64(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1798 * ((v4 & 0x18) == v3 + (a3 ^ (v5 + 1620)) - 893)) ^ a3)))();
}

uint64_t sub_100052DA0(uint64_t result)
{
  uint64_t v1 = 1178560073 * ((2 * (result & 0x64AC438940A5398ALL) - result + 0x1B53BC76BF5AC675) ^ 0xAFEC9E05CEBE17);
  uint64_t v2 = *(void *)(result + 8);
  unint64_t v3 = v2 - v1;
  uint64_t v4 = *(void *)(result + 24);
  BOOL v5 = v4 == v2;
  BOOL v6 = v4 - v1 > v3;
  if ((*(_DWORD *)(result + 4) - 1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17))) {
    BOOL v7 = v6;
  }
  else {
    BOOL v7 = v5;
  }
  if (v7) {
    int v8 = *(_DWORD *)(result + 16) - 1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17);
  }
  else {
    int v8 = *(_DWORD *)(result + 32) ^ (1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17));
  }
  *(_DWORD *)uint64_t result = v8 ^ (*(_DWORD *)(result + 40)
                          + 1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17));
  return result;
}

void sub_100052E4C()
{
  STACK[0x4D0] = v0;
  STACK[0x590] = v2;
  STACK[0x470] = *(void *)(v3 + 8 * v1);
  JUMPOUT(0x100052EFCLL);
}

uint64_t sub_100052F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, void, uint64_t))(v5
                                                            + 8
                                                            * (((v3 != v4 - 1905) * (((v4 - 1868) | 0x388) - 698)) ^ v4)))((v4 - 1868) | 0x388u, ((v4 - 1868) | 0x388u) - 698, a3);
}

void sub_100052F88(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1178560073 * ((2 * (a1 & 0x878F6F35) - a1 + 2020643018) ^ 0xC2E4E8A8));
  __asm { BRAA            X8, X17 }
}

void sub_100053070()
{
}

void sub_100053078(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000530BC@<X0>(unint64_t a1@<X0>, int a2@<W1>, unint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X7>, unsigned int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  BOOL v41 = a8 > v30;
  int v42 = a6 + a5;
  int v43 = a6 + 1;
  uint64_t v44 = 4 * (v43 + a5);
  unint64_t v45 = (*(_DWORD *)(a28 + v44) ^ (v28 + ((v33 + v31) & v32) - 1783)) + (a7 ^ HIDWORD(a1));
  unint64_t v46 = HIDWORD(v39)
      + v34 * (unint64_t)(*(_DWORD *)(*v37 + v44) ^ v28)
      + ((v45 + a4 - (v29 & (2 * v45))) ^ a3);
  *(_DWORD *)(a28 + 4 * v42) = v46 + v28 - (a2 & (2 * v46));
  if (v41 == v43 + v40 < v36) {
    BOOL v41 = v43 + v40 < v38;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((14 * v41) ^ v33)))();
}

uint64_t sub_10005316C()
{
  unint64_t v0 = (uint64_t *)*(&off_10007DD80
                  + ((-35 * ((qword_100081B78 + dword_100081B88) ^ 0xD8)) ^ byte_100068C50[byte_100073D90[(-35 * ((qword_100081B78 + dword_100081B88) ^ 0xD8))] ^ 0xCA])
                  + 78);
  unsigned __int8 v1 = -35 * (*v0 ^ qword_100081B78 ^ 0xD8);
  unint64_t v2 = (uint64_t *)*(&off_10007DD80 + (byte_100068C50[byte_100073D90[v1] ^ 0xD6] ^ v1) - 11);
  uint64_t v3 = 1226760413 * ((*v0 - (void)&v8 + *v2) ^ 0x5B705F9A26A579D8);
  uint64_t *v0 = v3;
  uint64_t *v2 = v3;
  LOBYTE(v3) = -35 * (*(_DWORD *)v0 ^ 0xD8 ^ v3);
  uint64_t v9 = (char *)*(&off_10007DD80
               + (byte_100068B50[byte_100073B90[v3] ^ 0x4D] ^ v3)
               - 156)
     - 4;
  unsigned int v10 = 724 - 1759421093 * (((&v9 | 0x62E542B1) - (&v9 & 0x62E542B1)) ^ 0xD198F2E5);
  LOBYTE(v3) = -35 * ((*(_DWORD *)v2 + *(_DWORD *)v0) ^ 0xD8);
  int v4 = (char *)*(&off_10007DD80
               + ((-35 * ((qword_100081B78 - dword_100081B88) ^ 0xD8)) ^ byte_100073F90[byte_10006F340[(-35 * ((qword_100081B78 - dword_100081B88) ^ 0xD8))] ^ 0x8B])
               - 79)
     - 4;
  (*(void (**)(char **))&v4[8
                                     * (byte_100073E94[(byte_10006F24C[v3 - 12] ^ 0xA9)
                                                                      - 4] ^ v3)
                                     + 16744])(&v9);
  unsigned int v10 = 724 - 1759421093 * ((((2 * &v9) | 0xD19EEED6) - &v9 - 1758426987) ^ 0xDBB2C73F);
  unsigned __int8 v5 = -35 * ((*(_DWORD *)v2 - *(_DWORD *)v0) ^ 0xD8);
  uint64_t v9 = (char *)*(&off_10007DD80 + (byte_100073C90[byte_10006F14C[v5 - 12] ^ 0x3B] ^ v5) - 92);
  (*(void (**)(char **))&v4[8
                                     * ((-35 * ((*(_DWORD *)v2 + *(_DWORD *)v0) ^ 0xD8)) ^ byte_100068C50[byte_100073D90[(-35 * ((*(_DWORD *)v2 + *(_DWORD *)v0) ^ 0xD8))] ^ 0xD9])
                                     + 16712])(&v9);
  unsigned int v6 = 1225351577
     * (((&v9 ^ 0x9D172845 | 0xE551A89D)
       - (&v9 ^ 0x9D172845)
       + ((&v9 ^ 0x9D172845) & 0x1AAE5760)) ^ 0x5BDC58CE);
  LODWORD(v9) = v6 + 264;
  BYTE4(v9) = v6 ^ 0x1D;
  return (*(uint64_t (**)(char **))&v4[8
                                               * ((-35 * ((*(_DWORD *)v2 + *(_DWORD *)v0) ^ 0xD8)) ^ byte_100068B50[byte_100073B90[(-35 * ((*(_DWORD *)v2 + *(_DWORD *)v0) ^ 0xD8))] ^ 0x92])
                                               + 17192])(&v9);
}

uint64_t sub_10005353C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 < 0x20) ^ (a2 + 5)) & 1) * (((a2 - 155) | 0x280) ^ 0x39C)) ^ (a2 + 521))))();
}

uint64_t sub_100053588@<X0>(uint64_t a1@<X1>, int a2@<W2>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  unint64_t v32 = ((((v27 - 751322467) & v31) - 560) ^ (v23 + 323) ^ *(_DWORD *)(a1 + v26)) + HIDWORD(v24);
  *(_DWORD *)(a1 + 4 * v29) = v32 + v23 - (v25 & (2 * v32));
  *(_DWORD *)(a23 + v26) = HIDWORD(v32) | v23;
  BOOL v33 = v28 + 1484150213 < a2;
  if (a3 > 0xC5742D3 != v28 + 1484150213 < -207045332) {
    BOOL v33 = a3 > 0xC5742D3;
  }
  return (*(uint64_t (**)(void))(v30 + 8 * (v27 ^ (363 * v33))))();
}

uint64_t sub_10005362C@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  BOOL v9 = v6 - (v3 & 0xFFFFFFF8) == -8;
  uint64_t v10 = v5 + v4 - v6 - 34946 + ((v7 - 54) ^ (a1 + 897));
  *(void *)(a2 - 7 + v10) = *(void *)(v2 - 7 + v10);
  int v11 = v9;
  return (*(uint64_t (**)(void))(v8 + 8 * ((84 * v11) ^ v7)))();
}

void zxcm2Qme0x(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100053708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,char a43)
{
  int v46 = (v44 & 0xFFFFFFFC) != ((v43 - 1705) ^ 0x2A8E9CB0 ^ (136 * (v43 ^ 0x6B7)));
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v45
                                                                               + 8 * (((32 * v46) | (v46 << 6)) ^ v43)))(&a43, a2, a3, a4, 14040);
}

uint64_t sub_100053770(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((a5 + (v7 ^ 0x166) - 19) ^ (a5 - 392) ^ (34 * (v7 ^ 0x166)))
                                * (v5 + a4 + 63 >= (v5 + a4))) ^ v7)))();
}

uint64_t sub_1000537C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(_DWORD *)(v20 - 136) = (v19 - 1980) ^ (1225351577
                                         * ((((v20 - 136) | 0x65CF04B9) - ((v20 - 136) & 0x65CF04B9)) ^ 0x4655DCAF));
  *(void *)(v20 - 128) = a15;
  *(void *)(v20 - 120) = v15;
  *(void *)(v20 - 112) = v15;
  *(void *)(v20 - 104) = a12;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v19 + 85)))(v20 - 136);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((107
                                              * (((v18
                                                 + ((v19 + 1875882750) ^ ((v16 - 1741097738) >> 1))
                                                 + ((v16 - 1741097738) & 0xDF9F7754)
                                                 + 2) & a11) != 0)) ^ v19)))(v21);
}

uint64_t sub_1000538A4()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((v0 + ((v2 + 1349) | 0x66) - 1895) & (2 * (*(unsigned __int8 *)(v3 + 3) - 134)))
                                      + ((*(unsigned __int8 *)(v3 + 3) - 134) ^ v1) == v1)
                                     * ((v2 + 1253902659) & 0xB542F5F5 ^ 0x49A)) ^ v2)))();
}

void sub_100053908(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) ^ (460628867 * (((a1 | 0x4A5B5FFB) - (a1 & 0x4A5B5FFB)) ^ 0x6CDDD86));
  uint64_t v4 = *(void *)(a1 + 8);
  v3[0] = v1 + 628203409 * (((v3 | 0xF7CBF79) + (~v3 | 0xF0834086)) ^ 0x8DF4B34B) - 196;
  int v2 = (char *)*(&off_10007DD80 + (v1 ^ 0x48C)) - 4;
  (*(void (**)(_DWORD *))&v2[8 * (v1 ^ 0xD3B)])(v3);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100053A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100053AAC(a1, 203, a3, a4, a5, 2425293427, 555619558, 61);
}

uint64_t sub_100053AAC@<X0>(unint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v1 + 3 >= a1) * v3) ^ v2)))();
}

uint64_t sub_100053B10()
{
  BOOL v4 = v1 + 438245227 < (int)(v2 + 631256213);
  if (v1 + 438245227 < -1516227435 != v2 > ((v0 - 258914749) & 0xF6EBBEF ^ (v0 - 1423236698) & 0x54D4DD72 ^ 0x5A5FC690u)) {
    BOOL v4 = v2 > ((v0 - 258914749) & 0xF6EBBEF ^ (v0 - 1423236698) & 0x54D4DD72 ^ 0x5A5FC690u);
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((361 * v4) ^ v0)))();
}

uint64_t sub_100053BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x46C]) = v4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, __n128))(v7
                                                                                                 + 8
                                                                                                 * (((((v5 - 564425967) & 0x21A477F7) - 781) * v6) ^ (v5 - 531))))(a1, a2, a3, a4, STACK[0x420], (__n128)0);
}

uint64_t sub_100053BFC(int *a1)
{
  unsigned int v2 = a1[1] - 108757529 * (a1 ^ 0xE09C622B);
  uint64_t result = (*(uint64_t (**)(void, void (*)()))((char *)*(&off_10007DD80 + (int)(v2 + 504207182))
                                                         + 8 * (int)(v2 ^ 0xE1F261A2)
                                                         - 4))(*(&off_10007DD80 + (int)(v2 + 504207190)), sub_10001F780);
  int v4 = *(_DWORD *)*(&off_10007DD80 + (int)(v2 ^ 0xE1F269EF));
  if (result) {
    int v4 = -526372551;
  }
  *a1 = v4;
  return result;
}

void sub_100053CB4(_DWORD *a1)
{
  unsigned int v1 = *a1 + 1755732067 * (((a1 | 0xFD508F6) - a1 + (a1 & 0xF02AF709)) ^ 0xD113B52D);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_100053DB0(uint64_t a1, int a2, char a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((v4 == 15) ^ (v3 + a3)) & 1) * ((v3 + 809) ^ a2)) ^ v3)))();
}

uint64_t sub_100053DE0@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X7>, int a7@<W8>)
{
  BOOL v12 = a3 < v9;
  *(unsigned char *)(a5 + (v7 + a1)) = *(unsigned char *)(a6 + (v8 + v10))
                                           - ((a7 - 111) & (2 * *(unsigned char *)(a6 + (v8 + v10))))
                                           - 21;
  unsigned int v13 = v8 + 1 + a2;
  int v14 = v12 ^ (v13 < v9);
  BOOL v15 = v13 < a3;
  if (!v14) {
    BOOL v12 = v15;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((v12 * a4) ^ a7)))();
}

void sub_100053E44()
{
}

uint64_t sub_100053E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v15 = 535753261 * (((((v14 - 144) | 0x615B03DC) ^ 0xFFFFFFFE) - (~(v14 - 144) | 0x9EA4FC23)) ^ 0x9450F20C);
  *(_DWORD *)(v14 - 144) = ((v13 ^ 0xC8975CE0) + v10) ^ v15;
  *(_DWORD *)(v14 - 128) = (v13 ^ 0x346) - v15 + 368;
  *(void *)(v14 - 120) = v12;
  *(void *)(v14 - 136) = a10;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v11 + 8 * ((v13 ^ 0x346) + 1374)))(v14 - 144);
  return sub_100053EEC(v16);
}

void sub_100053EEC()
{
  _DWORD *v2 = v1;
  _DWORD *v0 = 526347143;
}

uint64_t sub_100053F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v27 = 1224239923 * ((v26 - 144) ^ 0xF2B3FDD7);
  *(_DWORD *)(v26 - 128) = v27 + v24 + 1093;
  *(_DWORD *)(v26 - 144) = v27 ^ 0x4329A48E;
  *(void *)(v26 - 136) = a21;
  uint64_t v28 = v21;
  (*(void (**)(uint64_t))(v23 + 8 * (v24 ^ 0xCFD)))(v26 - 144);
  *(void *)(v26 - 104) = v28;
  *(_DWORD *)(v26 - 112) = v24
                         + 1224239923 * ((2 * ((v26 - 144) & 0x53DB0AB8) - (v26 - 144) + 740619589) ^ 0xDE970892)
                         + 107;
  *(void *)(v26 - 128) = v28;
  *(void *)(v26 - 120) = v25;
  *(void *)(v26 - 144) = v22;
  *(void *)(v26 - 136) = a21;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v24 ^ 0xCE3)))(v26 - 144);
  return sub_100054010(v29, v28);
}

uint64_t sub_100054010(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(v6 - 128) = v3 + ((((v6 - 144) | 0xF444FDE1) + (~(v6 - 144) | 0xBBB021E)) ^ 0x99B0E5E9) * v5 + 1587;
  *(void *)(v6 - 144) = a2;
  *(void *)(v6 - 136) = v2;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v3 ^ 0x80C)))(v6 - 144);
}

uint64_t sub_1000540A4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 + 340) ^ 0x335) * ((v0 ^ v3) < 0x201)) ^ v1)))();
}

uint64_t sub_1000540E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((51 * (v6 + 1 != v5 + 44)) ^ a4)))();
}

uint64_t sub_10005419C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((77 * (*(_DWORD *)(a1 + 1424) != ((14 * (((v1 - 66) | 0x42) ^ 0x4DF)) ^ 0x6F0565B8))) ^ (v1 + 688))))();
}

uint64_t sub_1000541F0(uint64_t a1, int a2, uint64_t a3, int a4, int a5)
{
  *(void *)(a3 + (a4 - v7)) = *(void *)(a1 + (a4 - v7));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 + v5 - 1223 == v6) * a5) ^ a2)))();
}

void sub_100054220()
{
}

uint64_t sub_10005422C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * (int)(((((v14 - 207) ^ 0xFFFFF4E4) + (v14 ^ 0xCE3))
                                     * ((a13 ^ 0xFFFF2B3E) + 1741152204 + ((2 * a13) & 0xFFFE567C) - 1741097740 < 0x7FFFFFFE)) ^ v14)))();
}

uint64_t sub_1000542A4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((5 * ((v0 + 1594018598) & 0xA0FD365F ^ 0x484)) ^ 0x476)
                                     * (4 * v1 - v2 == 804362340)) ^ v0)))();
}

uint64_t sub_100054304()
{
  int v5 = *(unsigned __int8 *)(v1 + v3 - 0x16DF25246DB7B20ALL)
     - (*(unsigned char *)(v2 + v3 - 0x16DF25246DB7B20ALL) - 93);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1477
                                * (((2 * v5) & 0xFF6FABDC) + ((v0 - 153) ^ 0xFFB7D04D ^ (v0 + 458) ^ v5) == -4729362)) ^ v0)))();
}

uint64_t sub_10005430C@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  int v6 = v4 + v3;
  int v7 = v4 + 1;
  *(_DWORD *)(*(void *)(v2 - 0x139154EEB4327E8) + 4 * (v6 + (v5 ^ 0x356))) = a1;
  *(_DWORD *)(v2 - 0x139154EEB4327ECLL) = v7;
  int v8 = v3 + v7;
  int v9 = v8 + 208;
  if (v8 + 208 < 0) {
    int v9 = -208 - v8;
  }
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((((int)(((468 * (v5 ^ 0x384)) ^ v9 ^ 0x67BFFD13)
                                       + ((2 * v9) & 0xCF7FFD76)
                                       - 1740636287
                                       + ((468 * (v5 ^ 0x384)) ^ 0x26B)) >= 0)
                                * (((468 * (v5 ^ 0x384)) ^ 0x3F) + 2126)) ^ (468 * (v5 ^ 0x384)))))();
}

void sub_1000543F8()
{
}

uint64_t sub_100054404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16)
{
  return (*(uint64_t (**)(void))(v18 + 8 * (a16 ^ (115 * (v16 - v17 != -23974521)))))();
}

uint64_t sub_100054478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21)
{
  return sub_1000545D0(2801639823, 2365043103, 1929924193, 1517301994, a21, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1000545D0(uint64_t a1, int a2)
{
  return sub_10004FD14(a1, a2);
}

uint64_t sub_100054614()
{
  int v0 = *(&off_10007DD80
       + (byte_100073F90[byte_10006F340[(-35
                                                                         * ((qword_100081B78 + dword_100082740) ^ 0xD8))] ^ 0x50] ^ (-35 * ((qword_100081B78 + dword_100082740) ^ 0xD8)))
       - 11);
  uint64_t v1 = *(&off_10007DD80
       + ((-35 * ((qword_100081B78 - *v0) ^ 0xD8)) ^ byte_100073F90[byte_10006F340[(-35 * ((qword_100081B78 - *v0) ^ 0xD8))] ^ 0x8B])
       - 141);
  unint64_t v2 = (unint64_t)&v4[*v0 + *v1];
  void *v0 = 1226760413 * v2 + 0x5B705F9A26A579D8;
  *uint64_t v1 = 1226760413 * (v2 ^ 0x5B705F9A26A579D8);
  unsigned int v6 = 724 - 1759421093 * ((2 * (&v5 & 0x1AB9A500) - &v5 + 1699109631) ^ 0xD63BEAAB);
  uint64_t v5 = (uint64_t)*(&off_10007DD80
                + (byte_100068B54[(byte_100073B90[(-35 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0xD8))] ^ 0x83)
                                                 - 4] ^ (-35 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0xD8)))
                - 97);
  LOBYTE(v0) = -35 * (*(_DWORD *)v0 ^ 0xD8 ^ *(_DWORD *)v1);
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_10007DD80
                                                        + ((-35
                                                                           * ((qword_100081B78 + dword_100082740) ^ 0xD8)) ^ byte_100073F90[byte_10006F340[(-35 * ((qword_100081B78 + dword_100082740) ^ 0xD8))] ^ 0x68])
                                                        - 83)
                                              + 8
                                              * (byte_100068C50[byte_100073D94[v0 - 4] ^ 0xD6] ^ v0)
                                              + 17260))(&v5);
}

void sub_100054844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(_DWORD *)(v11 - 144) = v9;
  *(void *)(v11 - 120) = v8 - 7;
  *(void *)(v11 - 136) = v10 - 7;
  *(_DWORD *)(v11 - 152) = ((a8 ^ 0xBF) - 850) & v9;
  *(_DWORD *)(v11 - 128) = a8 ^ 0xBF;
  JUMPOUT(0x1000548CCLL);
}

uint64_t sub_1000549B4()
{
  return sub_100045688();
}

uint64_t sub_1000549DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  LODWORD(STACK[0x3E8]) = a8;
  STACK[0x678] = 0x3EE74012A7EFF0CDLL;
  uint64_t v13 = *(_DWORD **)(v9 + 8 * (v8 ^ 0x4EB));
  STACK[0x3E0] = (unint64_t)v13;
  LODWORD(STACK[0x454]) = *v13 - 405273880;
  unint64_t v14 = 1178560073
      * ((0xBBE588A578E2CAB9 - ((v12 - 200) | 0xBBE588A578E2CAB9) + STACK[0x348]) ^ 0x5FE627B23D894D24);
  *(void *)(v10 + 24) = **(unsigned int **)(v9 + 8 * (v8 ^ 0x40F)) + v14;
  *(_DWORD *)(v12 - 164) = v14 + v8 + 2021362662;
  *(_DWORD *)(v12 - 160) = ((v8 + 1739640891) ^ 0x46) - v14;
  *(_DWORD *)(v12 - 196) = v14;
  *(_DWORD *)(v12 - 184) = v8 + 1739640891 + v14;
  *(_DWORD *)(v12 - 168) = (v8 + 1739640932) ^ v14;
  *(void *)(v10 + 8) = v14 + 369238551;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v11 + 8 * (v8 ^ 0xC8D)))(v12 - 200);
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * *(int *)(v12 - 200)))(v15);
}

uint64_t sub_100054B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                + 8
                                                                                * ((105
                                                                                  * (a7
                                                                                   - a8
                                                                                   + (unint64_t)((v9 ^ 0x261u) - 543)
                                                                                   - 1988 < 0x20)) ^ v9)))(a1, a2, a3, a4, a4);
}

uint64_t sub_100054B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(void *)(*(void *)(v8 + 96) + 1544) = *(void *)(v10 + 8);
  *(_DWORD *)(*(void *)(v8 + 96) + 1536) = *(_DWORD *)(v10 + 4);
  return a8 ^ 0x1F5F6B87u;
}

uint64_t sub_100054BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t (*a28)(uint64_t))
{
  int v31 = 628203409 * ((-420577316 - ((v30 - 160) | 0xE6EE7FDC) + ((v30 - 160) | 0x19118023)) ^ 0x9B998C10);
  *(_DWORD *)(v30 - 152) = v31 + v28 + 555;
  *(_DWORD *)(v30 - 148) = 1045653968 - v31;
  *(void *)(v30 - 160) = a27;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v29 + 8 * (v28 ^ 0x8F5)))(v30 - 160);
  return a28(v32);
}

uint64_t sub_100054C38()
{
  _DWORD *v2 = v2[623];
  unint64_t v5 = 1374699841
     * (((STACK[0x410] | 0x4104592BF121FA86) - (STACK[0x410] & 0x4104592BF121FA86)) ^ 0x77A7198581F9C4EELL);
  *(_DWORD *)(v4 - 160) = (v0 + 2034273014) ^ v5;
  *(_DWORD *)(v4 - 172) = (v0 + 2034273099) ^ v5;
  *(_DWORD *)(v4 - 168) = (v0 + 2034273099) & 0x795C8CBE ^ v5;
  *(_DWORD *)(v4 - 176) = -(int)v5;
  *(_DWORD *)(v4 - 200) = v5 + v0 - 1501686272;
  uint64_t v6 = v4 - 200;
  *(void *)(v6 + 8) = v5 + 2418848457u;
  *(void *)(v6 + 16) = (v1 + 312900194) ^ v5;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 + 1806)))(v4 - 200);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 164)))(v7);
}

uint64_t sub_100054D28@<X0>(int a1@<W8>)
{
  int v7 = (v4 ^ v2 ^ (v2 + ((v5 + 2) ^ (2 * a1)) - (v5 & (2 * ((v5 + 2) ^ (2 * a1)))) + 896)) > v1;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v7 << 6) | (v7 << 9)) ^ v6)))();
}

uint64_t sub_100054D68(uint64_t a1)
{
  int v1 = 1374699841 * ((((2 * a1) | 0x4FD35BAC) - a1 + 1477857834) ^ 0xCA1DB5DF);
  int v2 = *(_DWORD *)a1 ^ v1;
  int v3 = *(_DWORD *)(a1 + 16) + v1;
  if (v3 < 0) {
    int v3 = -v3;
  }
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0x139154EEB4327ECLL);
  unsigned int v6 = v4 - 1740488377;
  BOOL v5 = v4 - 1740488377 < 0;
  unsigned int v7 = 1740488377 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_10007DD80 + (v2 ^ 0x53D))
                              + 8
                              * (int)(((v3 >> 5 >= v7) * ((v2 + 1073006665) & 0xC00B37BB ^ 0x5A5)) ^ v2)
                              - 4))();
}

void sub_100054E3C()
{
}

void sub_100054E44()
{
  uint64_t v0 = __chkstk_darwin();
  int v1 = *(_DWORD *)(v0 + 24) - 1225351577 * ((-2 - ((v0 | 0x64CFEAB8) + (~v0 | 0x9B301547))) ^ 0xB8AACD51);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_100054FBC@<X0>(uint64_t a1@<X8>)
{
  return 0;
}

_DWORD *sub_100054FD4(_DWORD *result)
{
  const void *result = ((v2 + 334) ^ 0x9696D05C) - v1;
  return result;
}

uint64_t sub_100055000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  unsigned int v24 = v22 - 1643904854;
  if (v24 <= 0x40) {
    unsigned int v24 = 64;
  }
  BOOL v25 = 1643904854 - v20 - v21 + v24 > 0xE;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23
                                                                                + 8
                                                                                * (a20 ^ (v25 | (2 * v25)))))(713989072, a2, a3, a4, 3188084410);
}

void sub_100055094()
{
}

uint64_t sub_1000550C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, unsigned int a18, uint64_t a19)
{
  a19 = a13;
  a18 = v19
      + 535753261
      * (((&a17 | 0x252138E8) - &a17 + (&a17 & 0xDADEC710)) ^ 0x2FD536C7)
      + 496;
  uint64_t v21 = (*(uint64_t (**)(char *))(v20 + 8 * (v19 + 1446)))(&a17);
  return sub_100055130(v21);
}

uint64_t sub_100055130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, unsigned int a18, uint64_t a19)
{
  a19 = a16;
  a18 = v20
      + 535753261 * ((992398163 - (&a17 | 0x3B26CB53) + (&a17 | 0xC4D934AC)) ^ 0xCE2D3A83)
      + 677;
  uint64_t v21 = (*(uint64_t (**)(char *))(v19 + 8 * (v20 ^ 0xA6F)))(&a17);
  return sub_10005519C(v21);
}

uint64_t sub_10005519C()
{
  return v1 ^ v0;
}

uint64_t sub_1000551DC(uint64_t a1, int a2)
{
  BOOL v6 = v4 - 1658727362 > ((a2 - 167) ^ 0x1D307948) || v4 - 1658727362 < v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((3461 * v6) ^ a2)))();
}

uint64_t sub_10005522C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v55
                                                     + 8
                                                     * ((57
                                                       * (a14
                                                        + ((a55 << (((a38 ^ 0x45) + 3) ^ 0x59)) & 0x2C ^ 8)
                                                        + (a55 & 0x3F ^ 0xDE737FF2) < 0xFFFFFFC0)) ^ (a38 + 1280))))(a1, -648545233);
}

uint64_t sub_1000552DC(uint64_t a1)
{
  unsigned int v6 = *(unsigned __int8 *)(v1 + (v5 + 1));
  return (*(uint64_t (**)(uint64_t, void, void, void))(v2 + 8 * ((115 * (v6 >> 7)) ^ v4)))(a1, (v3 - 2079419382), (v4 + 1328486338) & 0xB0D0E75F, ((v6 << ((v4 - 62) & 0x5F ^ 0x5E)) & 0x1FA) + (v6 ^ 0x7BF9FBFD) - 561157);
}

uint64_t sub_100055350()
{
  LODWORD(STACK[0x5D8]) = v0 + 379;
  return sub_10004D300();
}

void sub_10005536C()
{
}

uint64_t sub_100055374()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((59 * ((v2 + v1 - 1605107679) > 7)) ^ 0x1C4)))();
}

void sub_1000553EC()
{
}

uint64_t sub_100055468()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((548
                                * ((v0 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v1) == v1 + v3 - 444)) ^ v4)))();
}

uint64_t sub_1000554B0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v0 & (2 * (*(unsigned __int8 *)(v2 + 8) - 4)))
                                      + ((*(unsigned __int8 *)(v2 + 8) - 4) ^ v1) == v1)
                                     * (((164 * (v3 ^ 0xFB) + 1647003275) & 0x9DD4B7FC) + 1063)) ^ v3)))();
}

uint64_t sub_100055518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((162 * (v7 + 1 == v9 + 4)) ^ a7)))();
}

uint64_t sub_100055600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v7
                                                    + 8
                                                    * ((486 * ((v5 & 0x18) == (a5 ^ 0x68C ^ ((a5 - 708) | 0x40)))) ^ a5)))(a1, (v6 - a1));
}

uint64_t sub_100055644()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((v0 - 1667755605 < ((v1 - 76) | 0x10Au) - 776)
                                     * ((v1 + 414469553) & 0xE74BB32A ^ 0x3D1)) ^ v1)))();
}

uint64_t sub_1000556A0(uint64_t a1, unsigned int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((62 * (v3 - a1 - 4 >= (((a2 - 681) | 0x2A5) ^ 0x79FuLL))) ^ a2)))();
}

uint64_t sub_1000556EC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(unsigned char *)(*v14 + (v12 + a8)) = *(unsigned char *)(*v14 + (v11 + a1));
  return (*(uint64_t (**)(void))(v13 + 8 * (((v8 != 1513171450) * (v9 ^ 0x82A)) ^ v10)))();
}

uint64_t sub_100055760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  v7.n128_u64[0] = (v5 + 7) & 0xF;
  v7.n128_u64[1] = (v5 + 6) & 0xF;
  v8.n128_u64[0] = (v5 + 5) & 0xF;
  v8.n128_u64[1] = (v5 + 4) & 0xF;
  v9.n128_u64[0] = (v5 + 3) & 0xF;
  v9.n128_u64[1] = (v5 + 2) & 0xF;
  v10.n128_u64[0] = (v5 + 1) & 0xF;
  v10.n128_u64[1] = v5 & 0xF;
  v11.n128_u64[0] = (v5 - 1) & 0xF;
  v11.n128_u64[1] = (v5 + 14) & 0xF;
  v12.n128_u64[0] = (v5 + 13) & 0xF;
  v12.n128_u64[1] = (v5 + 12) & 0xF;
  v13.n128_u64[0] = (v5 + 11) & 0xF;
  v13.n128_u64[1] = (v5 + 10) & 0xF;
  return sub_100055844(a1, a2, a3, a4, v6 & 0xFFFFFFF0, a5, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_100055844(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, int a15, int a16)
{
  uint64_t v29 = (v20 + v19 - a15);
  uint64_t v30 = ((_BYTE)v20 + (_BYTE)v19 - (_BYTE)a15) & 0xF;
  uint64_t v31 = v22;
  v32.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v26).u64[0];
  v32.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v26).u64[0];
  int8x16_t v33 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v21 + v29), *(int8x16_t *)(v17 + (v29 & 0xF) - 15)), veorq_s8(*(int8x16_t *)(v18 + (v29 & 0xF) - 15), *(int8x16_t *)(v16 + (v29 & 0xF) - 15))));
  int8x16_t v34 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v33, v33, 8uLL), v28), vmulq_s8(v32, v27)));
  *(int8x16_t *)(v23 + v29) = vextq_s8(v34, v34, 8uLL);
  return (*(uint64_t (**)(void))(v25 + 8 * (((a15 + a16 - 2141 == a13) * v24) ^ a14)))();
}

uint64_t sub_1000558D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, uint64_t a14, int a15, int a16, int a17, int a18)
{
  int v22 = ((&a13 - 1886733488 - 2 * ((unint64_t)&a13 & 0x8F8ABB50)) ^ 0xC31C392D) * v21;
  a13 = &STACK[0x38223619C320A33];
  a14 = a12;
  a15 = v22 - 1646113260;
  a16 = v22 + v20 - 2024874694;
  a17 = 1646191814 - v22;
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v19 + 8 * (v20 ^ 0xEB0)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (((a18 == v18 + ((v20 - 545) | 0x210) - 1594)
                                              * ((v20 + 845365652) & 0xAF6 ^ 0xCB1)) ^ v20)))(v23);
}

uint64_t sub_100055A14(uint64_t a1)
{
  uint64_t v4 = *(void *)(v2 + 64);
  BOOL v5 = LODWORD(STACK[0x5B4]) == 0;
  *(void *)(v2 + 24) = LODWORD(STACK[0x5B4]);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8
                                                          * ((245 * (((((v1 ^ 0x340) + 936) ^ v5) & 1) == 0)) ^ v1)))(a1, v4);
}

uint64_t sub_100055A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  unsigned int v16 = (a14 ^ 0x1F5F6B87) - ((2 * (a14 ^ 0x1F5F6B87)) & 0xD7986BE8) - 338938380;
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((198
                                * (((2 * v16) & 0xBF57FFBE ^ 0x97106BA8) + ((v14 - 1960) ^ 0xB467CAB6 ^ v16) - 34946 != 1605072733)) ^ v14)))();
}

uint64_t sub_100055AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10)
{
  uint64_t v13 = *(void *)(v11 + 72);
  *(_DWORD *)(v10 - 0x9466003216229CDLL) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8 * (((v13 == 0x139154EEB4327F0) * ((a9 - 2106731237) & 0x7D922FEE ^ 0x2E1)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10);
}

uint64_t sub_100055BAC@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W5>, int a5@<W8>)
{
  __n128 v9 = (unsigned int *)(v8 + 4 * v5);
  uint64_t v10 = (a5 ^ 0xF4Fu) + v5 - 1858;
  *__n128 v9 = v9[397] ^ a4 ^ *((_DWORD *)&STACK[0x530] + (*(_DWORD *)(v8 + 4 * v10) & 1)) ^ ((a3 ^ ((*(_DWORD *)(v8 + 4 * v10) & 0x7FFFFFFE | v6 & 0x80000000) >> 1))
                                                                                       + a1
                                                                                       - (a2 & (2
                                                                                              * (a3 ^ ((*(_DWORD *)(v8 + 4 * v10) & 0x7FFFFFFE | v6 & 0x80000000) >> 1)))));
  return (*(uint64_t (**)(void))(v7 + 8 * ((126 * (v10 == 227)) ^ a5)))();
}

uint64_t sub_100055C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  LODWORD(STACK[0x648]) = a16;
  return (*(uint64_t (**)(void))(v18 + 8 * ((41 * (*(void *)(v17 + 264) != 0)) ^ (v16 + 1028))))();
}

uint64_t sub_100055C68@<X0>(uint64_t a1@<X0>, unsigned int a2@<W4>, uint64_t a3@<X8>, uint8x8_t a4@<D0>)
{
  a4.i32[0] = *(_DWORD *)(a3 + a2 + 1);
  return sub_100055C98(a1, 0, a3 - 3, (v4 + 1454707284), 2840260541, 231, COERCE_DOUBLE(vmovn_s16((int16x8_t)vmovl_u8(a4))));
}

uint64_t sub_100055C98(float a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6, int a7)
{
  *(float *)(a4 + (v10 + v7 - a3)) = a1;
  return (*(uint64_t (**)(void))(v11 + 8 * (((a3 + (a5 & a6) - 893 == v9) * a7) ^ v8)))();
}

uint64_t sub_100055CCC()
{
  uint64_t v5 = v2 ^ 5u;
  *(void *)(v4 - 220 + v0 + 1) = 0xEBEBEBEBEBEBEBEBLL;
  BOOL v6 = ((v5 - 146) & v1) - v5 != -194;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((v6 | (4 * v6)) ^ v5)))();
}

uint64_t sub_100055D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  int v16 = (v14 + v10) & v11;
  *(_DWORD *)(*v9 + 4 * ((v16 ^ (v6 + 769)) + v7)) = a5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6
                                                                                + 8
                                                                                * (((v15 == ((v16 + 1129) | v12) + v8)
                                                                                  * ((v16 + 282) ^ v13)) ^ v16)))(a1, a2, a3, a4, 3699319000);
}

void sub_100055D80()
{
}

void sub_100055DEC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1178560073 * ((((2 * a1) | 0xD7F3130A) - a1 + 335967867) ^ 0x516DF1E7));
  __asm { BRAA            X14, X17 }
}

uint64_t sub_100055F20()
{
  _DWORD *v0 = -526372770;
  return sub_100055F2C();
}

uint64_t sub_100055FA4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((224 * (((a1 == 99788384) ^ ((v1 ^ 0x1E) - 79)) & 1)) ^ v1)))();
}

uint64_t sub_100055FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(_DWORD *)(v32 - 144) = (v26 - 613) ^ (1225351577
                                        * ((~((v32 - 144) | 0xC591A078) + ((v32 - 144) & 0xC591A078)) ^ 0x19F48791));
  *(void *)(v32 - 136) = v31;
  *(void *)(v32 - 128) = v25;
  *(void *)(v32 - 120) = v25;
  *(void *)(v32 - 112) = v27;
  (*(void (**)(uint64_t))(v29 + 8 * (v26 ^ 0xA54)))(v32 - 144);
  int v33 = ((-42916828 - ((v32 - 144) | 0xFD712424) + ((v32 - 144) | 0x28EDBDB)) ^ 0x6F7AC3D2) * v30;
  *(_DWORD *)(v32 - 128) = -128426107 - v33 + v28 + 2;
  *(_DWORD *)(v32 - 144) = (v26 + 592) ^ v33;
  *(void *)(v32 - 136) = a25;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v29 + 8 * (v26 + 1422)))(v32 - 144);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * ((53 * (*(_DWORD *)(v32 - 140) == ((v26 - 622) ^ 0x779) + 99786434)) ^ v26)))(v34);
}

void sub_100056104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,unsigned __int8 a26,int a27,int a28,unsigned __int8 a29,int a30,unsigned __int8 a31,int a32,int a33,int a34,unsigned __int8 a35,int a36,int a37,char a38)
{
  LODWORD(STACK[0x388]) = (a26 | ((a33 ^ 0xC) << 24) | ((a31 ^ 0xEF) << 8) | ((a35 ^ 0x92) << 16)) ^ 0xF36A6C82;
  LODWORD(STACK[0x288]) = a32 ^ 0xED856A80;
  LODWORD(STACK[0x3B8]) = (a30 | (a34 << 8) | ((a36 ^ 0x32) << 16) | (a28 << ((a38 - 86) ^ 0x73))) ^ 0xC13CA670;
  LODWORD(STACK[0x3D8]) = ((((a37 ^ 0xFB) << 16) + ((a27 ^ 0x1A) << 24)) | a29 | ((LODWORD(STACK[0x3F8]) ^ v38) << 8)) ^ 0x5F17AB2A;
  JUMPOUT(0x100029D90);
}

void sub_1000561FC(uint64_t a1)
{
  (*(uint64_t (**)(void))(v1 + 18712))();
  (*(void (**)(uint64_t))(v1 + 18320))(a1);
  JUMPOUT(0x100028AB0);
}

uint64_t sub_100056248(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,int a37)
{
  return (*(uint64_t (**)(void))(v37
                              + 8
                              * ((108 * ((a2 ^ (a37 + a4 < ((a2 - 61) | 0x51Cu) - 1315)) & 1)) ^ (a2 + 2020))))();
}

uint64_t sub_100056298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __n128 a6)
{
  *(_DWORD *)(v9 + 1424) = 1862623872;
  *(_DWORD *)(v9 + 1428) = 642161856;
  *(void *)(v9 + 1432) = v7;
  *(void *)(v9 + 1440) = v7;
  *(_DWORD *)(v9 + 1448) = v8;
  *(__n128 *)(v9 + 1452) = a6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * v6))(a1, a2, a3, a4, a5, 986143838, 3308821536, 48);
}

void sub_100056300()
{
}

uint64_t sub_100056308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24)
{
  int v27 = (a24 ^ v26) - ((2 * (a24 ^ v26)) & 0x52C224C2) + 694227553;
  return (*(uint64_t (**)(void))(v24
                              + 8
                              * ((v25 - 1058) ^ (27
                                               * (((2 * v27) & 0xFF99BDD6 ^ 0x528024C2) + (v27 ^ 0x56ADCC8A) - 671092747 == 1473040096)))))();
}

uint64_t sub_1000563B0()
{
  uint64_t v7 = (unint64_t *)((char *)&STACK[0x680] + STACK[0x380] + ((v0 - 0x74CFFF0833D78750) ^ v1));
  STACK[0x5B8] = v3;
  void *v7 = 0x1414141414141414;
  v7[1] = 0xEBEBEBEBEDEBEBF9;
  unsigned int v8 = 235795823 * ((v4 - 1540817753 - 2 * (v4 & 0xA428FCA7)) ^ 0x3085B5FE);
  *(_DWORD *)(v6 - 196) = v8 + 1069469611;
  *(_DWORD *)(v6 - 192) = v2 - v8 + 1064655296;
  (*(void (**)(uint64_t))(v5 + 8 * (v2 ^ 0xDE3)))(v6 - 200);
  LODWORD(STACK[0x42C]) = 2079419720;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v2 + 922)))(336);
  STACK[0x608] = v9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8 * (((v9 == 0) * ((v2 - 280) ^ 0x71F ^ ((v2 - 1391) | 0x34A))) ^ v2)))(v9, v10, v11, v12, v13, v14, v15, v16);
}

uint64_t sub_1000564D0()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((((*(_DWORD *)(v1 - 140) + 512) | 0x14) ^ 0x450)
                                * (*(_DWORD *)(v1 - 128) == *(_DWORD *)(v1 - 136))) ^ *(_DWORD *)(v1 - 140))))();
}

uint64_t sub_100056510()
{
  unsigned int v5 = (((v4 ^ v3) >> 4) & 0x77D3D7E ^ 0x50D26) + (((v4 ^ v3) >> 5) ^ 0xCFBD796C) - 100285477;
  int v6 = (v1 > 0x3A3B9D65) ^ (v5 < 0xC5C4629A);
  BOOL v7 = v5 < v1 - 976985446;
  if (v6) {
    BOOL v7 = v1 > 0x3A3B9D65;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((29 * ((v7 ^ (v2 - 64)) & 1)) ^ (v2 - 1069))))();
}

uint64_t sub_1000565A8()
{
  *(void *)(v3 + v0 - 0x72E93EC13A593D8FLL) = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v1 & 0x38) == 8) * (((v2 - 1066) | 0x3C0) ^ 0x250)) ^ v2)))();
}

uint64_t sub_1000565FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  v65[54] = v67;
  v65[55] = v64;
  unint64_t v69 = v65[38];
  unint64_t v70 = (char *)&a9 + v69 - 0x74CFFF0833D7800CLL;
  v65[56] = v70;
  v65[38] = v69 + 320;
  int v71 = *(_DWORD *)(v67 - 0x72E93EC0CCAF573ALL);
  LODWORD(STACK[0x53C]) = v71;
  int v72 = *(_DWORD *)(v67 - 0x72E93EC0CCAF5736);
  LODWORD(STACK[0x458]) = v72;
  int v73 = *(_DWORD *)(v67 - 0x72E93EC0CCAF5732);
  LODWORD(STACK[0x504]) = v73;
  int v74 = *(_DWORD *)(v67 - 0x72E93EC0CCAF572ELL);
  LODWORD(STACK[0x5D4]) = v74;
  int v75 = *(unsigned __int8 *)(v67 - 0x72E93EC0CCAF5722) ^ 0xDD;
  if (v75 == 2)
  {
    LODWORD(STACK[0x588]) = *(_DWORD *)(v67 - 0x72E93EC0CCAF572ALL);
    LODWORD(STACK[0x45C]) = 351843406;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 8 * ((((((((a8 - 1098) | 0x264) + 660) | 0x82) ^ 0xEB074E39) + 351843406 > 0x3F) * (((((a8 - 1098) | 0x264) - 1755476443) & 0x68A26F7F) + 193)) ^ ((a8 - 1098) | 0x264))))(a1, 64052174, 3623878656, a4, a5, 3080894364, a7, 3687930830);
  }
  else if (v75 == 1)
  {
    LODWORD(STACK[0x45C]) = v66;
    BOOL v77 = v64 >= a64 + v69 || (unint64_t)v70 >= v64 + 64;
    return (*(uint64_t (**)(void))(v68 + 8 * ((((LODWORD(STACK[0x36C]) - 170) ^ (a8 - 874)) * v77) ^ (a8 - 550))))();
  }
  else
  {
    unsigned int v79 = (*(_DWORD *)(v67 - 0x72E93EC0CCAF573ALL) ^ 0xDBD15BCE) + (v71 ^ 0xDBD15BCE);
    *(_DWORD *)(v67 - 0x72E93EC0CCAF573ALL) = v79 - 607036466 - ((2 * v79) & 0xB7A2B79C);
    unsigned int v80 = (*(_DWORD *)(v67 - 0x72E93EC0CCAF5736) ^ 0xDBD15BCE) + (v72 ^ 0xDBD15BCE);
    *(_DWORD *)(v67 - 0x72E93EC0CCAF5736) = v80 - 607036466 - ((2 * v80) & 0xB7A2B79C);
    unsigned int v81 = (*(_DWORD *)(v67 - 0x72E93EC0CCAF5732) ^ 0xDBD15BCE) + (v73 ^ 0xDBD15BCE);
    *(_DWORD *)(v67 - 0x72E93EC0CCAF5732) = v81 - 607036466 - ((2 * v81) & 0xB7A2B79C);
    unsigned int v82 = (*(_DWORD *)(v67 - 0x72E93EC0CCAF572ELL) ^ 0xDBD15BCE) + (v74 ^ 0xDBD15BCE);
    *(_DWORD *)(v67 - 0x72E93EC0CCAF572ELL) = v82 - 607036466 - ((2 * v82) & 0xB7A2B79C);
    STACK[0x5E0] = v69;
    return ((uint64_t (*)(void))STACK[0x578])();
  }
}

uint64_t sub_1000568D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = ((v2 + 426) ^ 0x6F3) - a1;
  int8x16_t v5 = vrev64q_s8(*(int8x16_t *)(v1 + v4 - 15));
  int8x16_t v6 = vextq_s8(v5, v5, 8uLL);
  int8x16_t v7 = vrev64q_s8(*(int8x16_t *)(v1 + v4 - 31));
  int8x16_t v8 = vextq_s8(v7, v7, 8uLL);
  uint64_t v9 = STACK[0x2A0] + v4;
  v10.i64[0] = 0xD6D6D6D6D6D6D6D6;
  v10.i64[1] = 0xD6D6D6D6D6D6D6D6;
  v11.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v11.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  int8x16_t v12 = vrev64q_s8(vaddq_s8(vsubq_s8(v6, vandq_s8(vaddq_s8(v6, v6), v10)), v11));
  *(int8x16_t *)(v9 - 15) = vextq_s8(v12, v12, 8uLL);
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v8, vandq_s8(vaddq_s8(v8, v8), v10)), v11));
  *(int8x16_t *)(v9 - 31) = vextq_s8(v13, v13, 8uLL);
  return (*(uint64_t (**)(void))(v3 + 8 * ((776 * (a1 == 96)) ^ v2)))();
}

uint64_t sub_100056968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  unsigned int v52 = 460628867 * (((v48 ^ 0xA9C2C30A | 0x56112CF5) + (v48 ^ 0x520004D1 | 0xA9EED30A)) ^ 0xB75445A7);
  v49[7] = 0;
  v49[3] = STACK[0x3F0];
  v49[4] = a47;
  v49[5] = a45;
  *uint64_t v49 = 0;
  v49[1] = a17;
  *(_DWORD *)(v51 - 152) = v52 + 837403461;
  *(_DWORD *)(v51 - 184) = v52 + v47 + 1178;
  uint64_t v53 = (*(uint64_t (**)(uint64_t))(v50 + 8 * (v47 ^ 0xAD6)))(v51 - 200);
  int v54 = *(_DWORD *)(v51 - 136);
  LODWORD(STACK[0x64C]) = v54;
  return (*(uint64_t (**)(uint64_t))(v50
                                            + 8
                                            * (int)(((v54 == 526347143) * ((v47 + 1048545733) & 0xC18074CC ^ 0x1A3)) ^ v47)))(v53);
}

uint64_t sub_100056A5C@<X0>(int a1@<W2>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((22
                                * (((a2 - 80) ^ (a18 == ((a2 + 1505616080) & 0xA6421F4E ^ (a1 - 949)))) & 1)) ^ a2)))();
}

uint64_t sub_100056ABC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1006 * (*(_DWORD *)(*v0 + 4 * v1) == 61 * (v2 ^ 0xBD) - 595648479)) ^ v2)))();
}

void sub_100056B08(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(a1 - 0x139154EEB4327E8) + 4 * (v5 + v3)) = v1
                                                                       - ((v4 + v2 - 1474) & (2 * v1 + 1445887144))
                                                                       + 127295276;
  sub_10001C494(a1);
}

void sub_100056B54()
{
}

uint64_t sub_100056BC8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((21
                                * (LODWORD(STACK[0x4DC]) - 2079419384 + v0 + 1261 - 3576 < ((v0 - 113908911) & 0x6CA1FFF ^ 0xFFFFF3A4))) ^ v0)))();
}

void sub_100056C24(uint64_t a1)
{
  *(_DWORD *)(*(void *)(a1 + 24) - 0x5E89E940DF8E90DDLL) = v3;
  *uint64_t v1 = v2;
  JUMPOUT(0x100051854);
}

void sub_100056C48()
{
}

void sub_100056C9C(int a1@<W8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v9 = (a1 + 4076257) & 0xFFC1CFFB;
  unsigned int v10 = 3804331
      * (((&a3 | 0x9B934809) - &a3 + (&a3 & 0x646CB7F0)) ^ 0xE5466DFF);
  a7 = v10 + 1594874511;
  a5 = 0x1244BACB8843828DLL;
  a6 = v7;
  a3 = v10 + 483381750;
  a4 = v10 + v9 - 1252;
  (*(void (**)(unsigned int *))(v8 + 8 * (int)(v9 + 507)))(&a3);
  sub_100023548();
}

uint64_t sub_100056D40(uint64_t result)
{
  unint64_t v1 = 235795823 * ((~result & 0x2A1D36B9A93A3D3 | result & 0xFD5E2C94656C5C2CLL) ^ 0xA1169950E3EEA8ALL);
  int v2 = *(_DWORD *)(result + 4) + v1;
  unint64_t v3 = *(void *)(result + 16) ^ v1;
  int v4 = *(_DWORD *)(result + 28) - v1;
  int v5 = *(_DWORD *)(result + 8) ^ v1;
  unint64_t v6 = *(void *)(result + 32) - v1;
  int v7 = *(_DWORD *)result ^ v1;
  BOOL v8 = v6 == v3;
  BOOL v9 = v6 > v3;
  if (v4) {
    BOOL v8 = v9;
  }
  if (v8) {
    int v7 = v2;
  }
  *(_DWORD *)(result + 40) = v5 ^ v7;
  return result;
}

uint64_t sub_100056DD4(uint64_t a1)
{
  int v1 = 535753261 * (((a1 | 0xB4CC401E) - a1 + (a1 & 0x4B33BFE1)) ^ 0xBE384E31);
  int v2 = *(_DWORD *)(a1 + 8) ^ v1;
  int v3 = *(_DWORD *)(a1 + 24) - v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 16) - 0x139154EEB4327ECLL);
  unsigned int v6 = v4 - 1740488377;
  BOOL v5 = v4 - 1740488377 < 0;
  unsigned int v7 = 1740488377 - v4;
  if (v5) {
    unsigned int v8 = v7;
  }
  else {
    unsigned int v8 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_10007DD80 + (v2 ^ 0x5A8))
                              + 8 * ((((v3 - 2078035507) < 4 * (unint64_t)v8) * (v2 - 1151)) ^ v2)
                              - 4))();
}

void sub_100056EA0()
{
}

uint64_t sub_1000570E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1293 * (v8 + 1 == v7 + 40)) | a6)))();
}

uint64_t sub_1000571A8(unsigned int a1, int a2, int a3)
{
  int v8 = v4 + v3;
  unsigned int v9 = v8 + v5 + (v6 ^ 0x682);
  if (v9 <= 0x40) {
    unsigned int v9 = a1;
  }
  BOOL v10 = a3 - v8 + ((v6 - 1057675771) & 0x3F0ADFA7u) - 1799 < a2 + v9;
  return (*(uint64_t (**)(void))(v7 + 8 * ((4 * v10) | (32 * v10) | v6)))();
}

uint64_t sub_10005720C()
{
  **(_DWORD **)(v0 - 0x139154EEB4327E8) = (v1 + 1070242422) ^ ((v2 + 242) | 0x58) ^ 0xE3B5B2F2;
  return sub_100057258();
}

void sub_100057258(int a1@<W8>)
{
  *(_DWORD *)(v1 - 0x139154EEB4327ECLL) = a1;
}

uint64_t sub_100057270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8 * ((100 * (((a5 + 5) ^ (v5 < 34 * (a5 ^ 0x73E) - 240)) & 1)) ^ a5)))();
}

void sub_1000572C8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BRAA            X13, X17 }
}

void sub_1000573E8()
{
}

uint64_t sub_1000573F4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1247 * ((v0 & 0x18) == ((((2 * (v1 ^ 0x3E6)) ^ 0x2BE) - 717) ^ 0xEB))) ^ (2 * (v1 ^ 0x3E6)))))();
}

uint64_t sub_10005743C(uint64_t a1)
{
  return sub_100057450(a1, &STACK[0x4B0]);
}

uint64_t sub_100057450@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x51C]) = a1 + 64;
  unsigned int v3 = ((((v1 - 1106) | 0x20) + 157) ^ 0xB8C53D5A) + a1;
  unsigned int v4 = LODWORD(STACK[0x65C]) - 1311258711;
  BOOL v5 = v3 < 0x20A5C093;
  BOOL v6 = v3 > v4;
  if (v4 < 0x20A5C093 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * !v6) | (16 * !v6)) ^ v1)))();
}

uint64_t sub_1000574DC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((**(void **)(v2 + 8 * (v1 - 1441)) == 0)
                                * ((v1 - 1720221590) & 0x66887BEF ^ 0x2C3)) ^ v1)))();
}

uint64_t sub_100057524()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((2 * (*v0 - 42)) & 0x1F3FBC4C) + ((*v0 - 42) ^ 0xF9FDE26) != 262135334)
                                * (((4 * v1) ^ 0x264) - 436)) | v1)))();
}

uint64_t sub_100057584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v17 - 120) = a13;
  *(void *)(v17 - 112) = v15;
  *(_DWORD *)(v17 - 128) = v16
                         - 108757529 * ((~((v17 - 128) | 0xEB80D2B3) + ((v17 - 128) & 0xEB80D2B3)) ^ 0xF4E34F67)
                         - 34;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v16 + 561)))(v17 - 128);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * (((((4 * v16) ^ 0x1EF8) + 2303) * (v14 == 1032864085)) ^ v16)))(v18);
}

void sub_100057620()
{
}

uint64_t sub_100057698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, unsigned int a7)
{
  BOOL v11 = v7 > a7;
  int v12 = (((v10 ^ 0x8E8) - 41) ^ 0xF1EDA465) + v9;
  int v13 = v11 ^ (v12 < -941457851);
  BOOL v14 = v12 < a6;
  if (!v13) {
    BOOL v11 = v14;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((69 * v11) ^ v10)))();
}

uint64_t sub_100057764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void, unint64_t))(v15
                                                             + 8
                                                             * ((464
                                                               * (*(_DWORD *)(*(void *)(a13 - 0x139154EEB4327E8)
                                                                            + 4
                                                                            * (int)(((((v14 - 1991) | 0xD0) + 1287268514) & 0xB345DEB5)
                                                                                  - 2097)) == v13)) ^ ((v14 - 1991) | 0xD0))))(0, 0xF41BD8C901F2D9AFLL);
}

uint64_t sub_100057854@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2044 * (**(unsigned char **)(a1 + 8) == 0)) ^ a2)))();
}

uint64_t sub_100057884@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((26 * ((v1 ^ (a1 - 1136177055) & 0x43B8AD7F ^ 0x449u) > 7)) ^ (a1 - 461))))();
}

void sub_1000578D4(int a1@<W8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v8 = 3804331 * (((&a3 | 0x7E312B95) + (~&a3 | 0x81CED46A)) ^ 0xE40E62);
  a7 = v8 + 1608052035;
  a5 = 0x1244BACB8843828DLL;
  a3 = v8 + 483381750;
  a4 = v8 + a1 - 975;
  (*(void (**)(unsigned int *))(v7 + 8 * (a1 + 784)))(&a3);
  JUMPOUT(0x10004E2D0);
}

void sub_100057960()
{
}

uint64_t sub_1000579E0(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((147
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 4) - 247)))
                                 + ((((a1 + 813542800) & 0xCF824BFD) + 199) ^ (v2 + 372) ^ (*(unsigned __int8 *)(v3 + 4)
                                                                                          - 247)) == v2)) ^ a1)))();
}

uint64_t sub_100057A38@<X0>(int a1@<W7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  BOOL v16 = v14 != 842511415 || a13 != ((a2 - 765291577) & 0x2D9D6FFC) + a1;
  return (*(uint64_t (**)(void))(v13 + 8 * ((783 * v16) ^ a2)))();
}

uint64_t sub_100057A8C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((1079 * (a7 + 1 == v8 + 48)) ^ a1)))();
}

uint64_t sub_100057B68()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 + 601)))(200) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * (int)((((4 * (v1 ^ 0x601) + 430011435) & 0xE65E8BD4 ^ 0x2D7) * v2) | v1)))();
}

uint64_t sub_100057BC8@<X0>(unsigned int a1@<W3>, uint64_t a2@<X5>, int a3@<W8>)
{
  *(_OWORD *)(a2 + v3 + 16 + ((a3 - 238590926) & 0xE389F33 ^ a1)) = *v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1855 * (v4 == 16)) ^ a3)))();
}

uint64_t sub_100057BD4()
{
  unsigned int v4 = v3 + 2063939649;
  BOOL v5 = v4 < 0x9F1FA921;
  BOOL v6 = v2 - 1625315039 < v4;
  if (v5 != v2 > ((v1 + 1654) ^ 0x60E05ED5u)) {
    BOOL v7 = v5;
  }
  else {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((!v7 * ((2 * (v1 ^ 0x35D)) ^ 0x5C8)) ^ v1)))();
}

uint64_t sub_100057C50()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((((127 * (v2 ^ 0x5ED)) ^ 0xFFFFF9D1) + ((v2 - 1508) | 0x85C)) * (v1 == 0x1000000)) ^ v2)))();
}

uint64_t sub_100057C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(void *)(v10 + (v7 | a3)) = v12;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v9 == 0) * a7) | v8)))();
}

uint64_t sub_100057CC4@<X0>(int a1@<W3>, _DWORD *a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_DWORD *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  return sub_10004EF9C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           0);
}

uint64_t sub_100057CCC()
{
  unint64_t v8 = STACK[0x460];
  int v9 = STACK[0x5A0];
  int v10 = (LODWORD(STACK[0x5A0]) + 1542530706) & ((v0 + 1049) ^ 0x79A3A56C) ^ STACK[0x5A0] & 1;
  unsigned int v11 = 628203409 * ((1196629578 - (v3 | 0x47531E4A) + (v3 | 0xB8ACE1B5)) ^ 0x3A24ED86);
  v5[6] = v2;
  v5[3] = v8;
  v5[4] = v4 + 0x7785963AF3444776;
  v5[1] = v4 + 0xC8F40939229087BLL;
  *(_DWORD *)(v7 - 180) = v9 - v11 - 2 * v10 - 711669816;
  *(_DWORD *)(v7 - 200) = v0 - v11 + 368400111;
  *(_DWORD *)(v7 - 184) = -628203409 * ((1196629578 - (v3 | 0x47531E4A) + (v3 | 0xB8ACE1B5)) ^ 0x3A24ED86)
                        + 1968709551 * v1
                        + 889627541;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v0 ^ 0x955)))(v7 - 200);
  int v13 = *(_DWORD *)(v7 - 160);
  LODWORD(STACK[0x5D8]) = v13;
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((268 * (v13 == 526347143)) ^ v0)))(v12);
}

uint64_t sub_100057E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15)
{
  int v21 = 1759421093 * ((((v20 - 136) | 0x9D3CC2A1) - (v20 - 136) + ((v20 - 136) & 0x62C33D58)) ^ 0x2E4172F5);
  *(_DWORD *)(v20 - 136) = 427795158 - v21;
  *(void *)(v20 - 128) = v15;
  *(_DWORD *)(v20 - 120) = a13 - v21 - 472;
  (*(void (**)(uint64_t))(v17 + 8 * (a13 ^ 0xF4D)))(v20 - 136);
  *(_DWORD *)(v20 - 120) = a13
                         + 1374699841 * ((((v20 - 136) | 0x312B6D0F) - ((v20 - 136) & 0x312B6D0F)) ^ 0x5CDF7506)
                         + 201;
  *(void *)(v20 - 136) = a15;
  *(void *)(v20 - 128) = v19;
  (*(void (**)(uint64_t))(v17 + 8 * (a13 + 666)))(v20 - 136);
  *(void *)(v20 - 128) = a15;
  *(void *)(v20 - 112) = v15;
  *(_DWORD *)(v20 - 120) = a13 + ((v20 + 1698837839 - 2 * ((v20 - 136) & 0x654235D7)) ^ 0xDFD64DB5) * v18 + 115;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (a13 ^ 0xEA1)))(v20 - 136);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((35 * (*(_DWORD *)(v20 - 136) <= ((v16 + a13 - 906 + 242) ^ a13 ^ 0x21Eu))) ^ a13)))(v22);
}

uint64_t sub_100057F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((35 * (((((a6 + v6 - 269 - 13) | 0x108) - 254) ^ v7) < 8)) ^ v8)))();
}

uint64_t sub_100057FA8(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((((v4 + 1688025046) & 0x9B62C76F ^ 0x71FF7C2F) + v4 - 1912566507)
                                     * ((a4 + a3 - 1605107679) > 7)) ^ v4)))();
}

uint64_t sub_100058024@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  *(void *)(v2 - 7 + (v3 + v5 - v6 + 679)) = *(void *)(a2 - 7 + (v3 + v5 - v6 + 679));
  return (*(uint64_t (**)(void))(v7 + 8 * ((220 * ((a1 ^ 0x7D5) + v6 - 652 == (v4 & 0xFFFFFFF8))) ^ a1)))();
}

void Mib5yocT(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2) {
    BOOL v8 = a3 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  int v12 = v8 || a6 == 0 || a7 == 0 || a8 == 0;
  __asm { BRAA            X9, X17 }
}

void sub_100058124()
{
}

uint64_t sub_10005812C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((a3 - 402) ^ (v3 + 1781) ^ (v3 + 2502) ^ (a3 - 363)) * ((v4 & 0x18) == 0)) ^ (a3 - 402))))();
}

void sub_100058168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,uint64_t a24)
{
  int v28 = 535753261 * ((((v27 - 144) ^ 0x80BC1318 | 0x67434C63) + ((v27 - 144) ^ 0x26000443 | 0x98BCB39C)) ^ 0xAC481975);
  *(_DWORD *)(v27 - 136) = (v24 - 431) ^ v28;
  *(_DWORD *)(v27 - 120) = a23 + v28 + (((v24 - 159) | 0x88) ^ 0x49F28DA6);
  *(void *)(v27 - 144) = a24;
  *(void *)(v27 - 128) = v26;
  (*(void (**)(uint64_t))(v25 + 8 * (v24 + 595)))(v27 - 144);
  JUMPOUT(0x100031FDCLL);
}

uint64_t sub_100058210(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(*(void *)(v8 - 0x139154EEB4327E8) + 4 * (v6 + v4)) = a4;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((2 * ((v5 ^ (v6 + v4 - 1 >= 0)) & 1)) & 0xF7 | (8
                                                                                                 * ((v5 ^ (v6 + v4 - 1 >= 0)) & 1))) ^ v5)))();
}

void sub_100058264()
{
  int v3 = 27 * (v0 ^ 0x241);
  *(_DWORD *)(v1 - 128) = v2;
  *(_DWORD *)(v1 - 140) = v3 - 17;
  *(_DWORD *)(v1 - 136) = (v3 - 602) & v2;
  JUMPOUT(0x1000582D8);
}

uint64_t sub_1000583A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1403 * (v5 + 1 == v7 + 24)) ^ a5)))();
}

uint64_t sub_100058468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8 * (int)(((((a8 - 1866) | 0x4CC) + ((a8 - 1652) ^ 0xFFFFFB46)) * (v8 == a5)) ^ a8)))();
}

uint64_t sub_1000584A0()
{
  return sub_100032814();
}

uint64_t sub_1000584B0()
{
  STACK[0x3E8] = STACK[0x618];
  LODWORD(STACK[0x58C]) = 2119813987;
  return sub_10005C0B4();
}

uint64_t sub_1000584F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  BOOL v25 = a23 - *(_DWORD *)(a19 + 4) == 40394603;
  return (*(uint64_t (**)(void))(v24
                              + 8
                              * (((4 * ((v25 ^ (-111 * ((v23 - 28) ^ 0x94))) & 1)) & 0xDF | (32 * ((v25 ^ (145 * ((v23 - 28) ^ 0x194))) & 1))) ^ (v23 - 28))))();
}

uint64_t sub_100058554@<X0>(int a1@<W3>, int a2@<W5>, uint64_t a3@<X6>, int a4@<W7>, int a5@<W8>)
{
  *(unsigned char *)(v7 + v6) = *(unsigned char *)(a3 + (v5 + a1))
                      + (v8 | ~(2 * *(unsigned char *)(a3 + (v5 + a1))))
                      - 20;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v6 != 63) * a4) ^ (a2 + a5 + 1905))))();
}

uint64_t sub_10005859C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v8 = v3 - 1;
  *(void *)(v6 + 232) = v8;
  *(unsigned char *)(a1 + v8) = ((v2 + 71) ^ v5) * (v2 + 88);
  return (*(uint64_t (**)(void))(v7 + 8 * ((127 * (*(void *)(v6 + 232) == ((a2 + 314) ^ v4))) ^ a2)))();
}

uint64_t sub_1000585E8(uint64_t a1)
{
  BOOL v3 = (unint64_t)*(&off_10007DD80 + v1 - 531) - a1 - 8 < 0x20;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2
                                                                       + 8
                                                                       * (((4 * (((v1 + 113) ^ v3) & 1)) & 0xF7 | (8 * (((v1 + 113) ^ v3) & 1))) ^ (v1 + 107))))(335, 1307, 1692, 1150);
}

uint64_t sub_10005878C()
{
  LODWORD(STACK[0x46C]) = v2;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((*(_DWORD *)(STACK[0x2C0] + 360) - 1667755606) > 0xFFFFFFFD)
                                * ((v0 ^ 0x2D7) - 1054)) ^ v0)))();
}

void sub_1000587CC()
{
}

void sub_1000587D4()
{
}

void sub_1000587E0()
{
}

uint64_t sub_1000587EC@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_DWORD *a22)
{
  int v24 = v22 + 751;
  int v25 = v22 + 102;
  *a22 = -595648296;
  BOOL v27 = (v24 ^ 0x1B1C63B7) <= -1692638009 || a2 - 1692638010 >= -1692638009;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 8 * ((483 * v27) ^ v25)))(a1, 4280012798, 2717645785);
}

void sub_10005886C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 36) ^ (235795823
                             * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214));
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1000589C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v71 = STACK[0x258];
  *(void *)(v71 + 1560) = **(void **)(v70 + 144);
  *(_DWORD *)(v71 + 1552) = *(_DWORD *)STACK[0x430];
  *(void *)(*(void *)(a70 + 96) + 488) = *(void *)(a70 + 8);
  *(_DWORD *)(*(void *)(a70 + 96) + 480) = *(_DWORD *)a70;
  return sub_100058A64(440, 1420, 2591436230, a4, a5, 1703529726, 922, 9);
}

uint64_t sub_100058A64@<X0>(uint64_t a1@<X8>)
{
  *int v1 = ((v3 - 118) ^ (v2 + a1) ^ v5) * (v4 + a1);
  return (*(uint64_t (**)(void))(v6 + 8 * ((a1 != 103) | v3)))();
}

void sub_100058A9C()
{
}

void sub_100058AA8()
{
}

void sub_100058B68()
{
}

uint64_t sub_100058CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v11 = v8 - 1599991131;
  if (v11 <= 0x40) {
    unsigned int v11 = 64;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((15 * (-v7 - v9 + ((a7 + 92) ^ 0x7B3) + v11 < 0xF)) ^ 0x694u)))();
}

void sub_100058D70()
{
}

uint64_t sub_100058D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * ((30 * ((a5 + 1 + v7) < 0x50)) ^ v6)))(a6);
}

uint64_t sub_100058E50(__n128 a1)
{
  *(__n128 *)(v4 + v3) = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 == 1500) * v2) | v1)))();
}

uint64_t sub_100058E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, unsigned int a14, unint64_t *a15, uint64_t a16)
{
  a14 = (v16 - 651) ^ (1374699841
                     * ((((&a14 | 0x21ACE69C) ^ 0xFFFFFFFE) - (~&a14 | 0xDE531963)) ^ 0xB3A7016A));
  a15 = &STACK[0x8DE5192BDC5317A];
  a16 = a10;
  uint64_t v19 = (*(uint64_t (**)(unsigned int *))(v17 + 8 * (v16 + 680)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((105 * (a12 == v16 - v18 + 1543555348)) ^ v16)))(v19);
}

uint64_t sub_100058F28()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v1 + 478039571) & 0x2381B37F) + 2659) ^ v1 ^ 0x490) * ((v0 & 0x18) == 0)) ^ v1)))();
}

uint64_t sub_100058F70()
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x2C138C8FAF40FC12) + 1869566316;
  unsigned int v4 = *(_DWORD *)(v1 - 0x2C138C8FAF40FC16) + 1099350511;
  BOOL v5 = v4 < ((v2 - 316052341) & 0x12D695D5 ^ 0x7CE8C0ABu);
  BOOL v6 = v3 < v4;
  if (v3 < 0x7CE8C53F != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((!v6 * (((v2 - 786570552) & 0x2EE21FBF) - 1359)) ^ v2)))();
}

uint64_t sub_100059034()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1915
                                * ((v0 & (2 * (*(unsigned __int8 *)(v3 + 1) - 134)))
                                 + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ (v1 + v2 + 575 - 820)) == v1)) ^ v2)))();
}

uint64_t sub_100059074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  uint64_t v16 = (a3 - 1345024179) & 0x502B6A3F;
  BOOL v17 = v14 - 2139372479 < (a14 - 2097314243);
  if ((a14 - 2097314243) < 0x9C209CB4 != v14 - 2139372479 < (v16 - 1675584378)) {
    BOOL v17 = (a14 - 2097314243) < 0x9C209CB4;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15
                                                                                                  + 8 * (int)((88 * !v17) ^ a3)))(2619382964, 2155594817, a3, a4, v16, a6, a7);
}

uint64_t sub_1000590FC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                                           + 8
                                           * ((((v10 - v8 - 3370) ^ (a2 + 2453) ^ (v10 - 858)) * (v9 == a7)) ^ v10)))(0);
}

uint64_t sub_100059134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(a11 - 0x3F8123127DDA1A54) = ((v17 + 718963722) & 0xD52575DF) - v14 + 1331213053;
  int v20 = 1224239923 * (((v19 - 136) & 0x8278F9B6 | ~((v19 - 136) | 0x8278F9B6)) ^ 0x8F34FB9E);
  *(_DWORD *)(v19 - 120) = v20 + v17 + 232;
  *(void *)(v19 - 128) = v15;
  *(_DWORD *)(v19 - 136) = v20 ^ 0x4329A48E;
  (*(void (**)(uint64_t))(v16 + 8 * (v17 + 374)))(v19 - 136);
  int v21 = 1759421093 * ((2 * ((v19 - 136) & 0x4FEBF750) - (v19 - 136) - 1340864343) ^ 0x369B8FD);
  *(_DWORD *)(v19 - 136) = 2147481426
                         - v21
                         + ((32 * v18) ^ 0x997FA6F5)
                         + (((v17 - 588869495) & 0x23196DAE ^ 0x32FF4840) & (v18 << 6))
                         + 1166;
  *(void *)(v19 - 128) = v15;
  *(_DWORD *)(v19 - 120) = v17 - v21 - 763;
  (*(void (**)(uint64_t))(v16 + 8 * (v17 ^ 0xE68)))(v19 - 136);
  *(_DWORD *)(v19 - 120) = v17 + 1374699841 * ((v19 - 136) ^ 0x6DF41809) - 90;
  *(void *)(v19 - 136) = a14;
  *(void *)(v19 - 128) = &STACK[0x139154EEB432820];
  (*(void (**)(uint64_t))(v16 + 8 * (v17 + 375)))(v19 - 136);
  *(_DWORD *)(v19 - 120) = v17
                         + 1178560073
                         * ((((v19 - 136) ^ 0xFBA47593 | 0x3D05B776)
                           - ((v19 - 136) ^ 0xFBA47593)
                           + (((v19 - 136) ^ 0xFBA47593) & 0xC2FA4889)) ^ 0x7C35BA87)
                         - 176;
  *(void *)(v19 - 128) = a14;
  *(void *)(v19 - 112) = v15;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 ^ 0xF84)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((187 * (*(_DWORD *)(v19 - 136) > 0x4B4B6B4Bu)) ^ v17)))(v22);
}

uint64_t sub_100059394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((((v7 + 1287) | 0x42) - 1274) ^ 0x2E9) * (v6 == a6)) ^ v7)))();
}

uint64_t sub_1000593C8@<X0>(int a1@<W6>, int a2@<W7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((22
                                * (*(_DWORD *)(v5
                                             + (((a1 + ((v4 - 354) | 0x132) + 730) ^ (v4 - 469)) + v3) * (uint64_t)a2
                                             + 36) == a3)) ^ v4)))();
}

uint64_t sub_100059428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  return sub_100042874(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_100059434@<X0>(unint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, void *a4@<X3>, int a5@<W6>, int a6@<W7>, unsigned int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v36 = 4 * (v27 + 1 + a5);
  unint64_t v37 = (*(_DWORD *)(a21 + v36) ^ a7)
      + ((v29 + v22) & v26 ^ (unint64_t)(a3 + 398) ^ HIDWORD(a1))
      + v25 * (unint64_t)(*(_DWORD *)(*a4 + v36) ^ a7);
  unint64_t v38 = HIDWORD(v24)
      + v33 * (unint64_t)(*(_DWORD *)(*v30 + v36) ^ a7)
      + ((v37 + v32 - (v34 & (2 * v37))) ^ v31);
  *(_DWORD *)(a21 + 4 * (v27 + a5)) = v38 + a7 - (a2 & (2 * v38));
  BOOL v40 = v27 + v35 > v23 || v27 + v35 < a6;
  return (*(uint64_t (**)(void))(v28 + 8 * ((v40 * v21) ^ v29)))();
}

uint64_t sub_1000594D8@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W3>, uint64_t a4@<X6>, int a5@<W8>)
{
  BOOL v11 = v6 < v7;
  *((unsigned char *)&STACK[0x2AC] + (a5 - 186224683)) = *(unsigned char *)(a4 + (v5 + a3))
                                                             - (((v9 + 66) ^ 0xC8) & (2
                                                                                    * *(unsigned char *)(a4
                                                                                               + (v5 + a3))))
                                                             - 21;
  unsigned int v12 = v5 + 1 + a2;
  int v13 = v11 ^ (v12 < a1);
  BOOL v14 = v12 < v6;
  if (!v13) {
    BOOL v11 = v14;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((v11 * v8) ^ v9)))();
}

void sub_100059550()
{
}

void sub_100059578()
{
}

void sub_10005958C(char a1@<W8>)
{
  LODWORD(STACK[0x3B0]) = 0;
  STACK[0x3B8] = 0;
  STACK[0x2A0] = v1 + 2304;
  LODWORD(STACK[0x4A4]) = 1899471243;
  unint64_t v2 = STACK[0x3F8];
  unint64_t v3 = (unint64_t)&STACK[0x680] + STACK[0x3F8] - 0x74CFFF0833D77D0CLL;
  STACK[0x288] = STACK[0x3F8] + 4144;
  STACK[0x5E0] = v2 + 4144;
  *(void *)unint64_t v3 = 0x6370646600;
  *(unsigned char *)(v3 + 8) = 1;
  STACK[0x228] = v3;
  STACK[0x3C8] = v3 + 1712 + ((((v3 + 1712) << (23 * ((a1 - 42) ^ 0x38u) - 42)) + 16) & 0x20) + 16;
  STACK[0x3D8] = v3 + 9;
  JUMPOUT(0x10005D690);
}

uint64_t sub_1000595A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t *a18, uint64_t a19, unsigned int a20,unsigned int a21,unsigned int a22,int a23)
{
  if (a11 >= 0xC32F6DA) {
    int v26 = -1247212205;
  }
  else {
    int v26 = 1646191814;
  }
  unsigned int v27 = 460628867
      * ((((&a18 | 0x2AEB2E12) ^ 0xFFFFFFFE) - (~&a18 | 0xD514D1ED)) ^ 0x99825390);
  a18 = &STACK[0x38223619C320A4B];
  a19 = a17;
  a20 = v27 - 1383056289;
  a21 = v27 + v25 - 2024873871;
  a22 = v26 - v27;
  uint64_t v28 = (*(uint64_t (**)(unint64_t **))(v24 + 8 * (v25 ^ 0xBEF)))(&a18);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((91 * ((((73 * (v25 ^ 0x303)) ^ 0x415 ^ (a23 == v23)) & 1) == 0)) ^ v25)))(v28);
}

uint64_t sub_1000596B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(void *)(v11 + a1) = v13;
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * (((v9 == a1) * a8) ^ v8)))(a1 + v10);
}

uint64_t sub_1000596D4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 + 842689019) & 0x55E ^ 0x2BA) * (v3 < v1)) ^ v0)))();
}

uint64_t sub_10005975C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((197 * ((v2 + 1987) ^ 0x86B)) ^ 0x2AA) * ((v1 - 584892315) > 0xFFFFFFFD)) ^ (v2 + 1987))))();
}

void sub_1000597A4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1374699841 * ((a1 + 2125213654 - 2 * (a1 & 0x7EAC2FD6)) ^ 0x135837DF);
  unsigned int v3 = *(unint64_t **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = *(unint64_t **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(v2 - 0x3F8123127DDA1A5CLL);
  unsigned int v12 = v1 + 1224239923 * ((&v8 & 0x62925DD | ~(&v8 | 0x62925DD)) ^ 0xB6527F5) + 840;
  uint64_t v13 = v6;
  uint64_t v10 = &STACK[0x139154EEB432810];
  uint64_t v11 = v5;
  uint64_t v8 = v2;
  uint64_t v9 = v4;
  unsigned int v7 = (char *)*(&off_10007DD80 + v1 - 162) - 4;
  (*(void (**)(uint64_t *))&v7[8 * v1 + 15824])(&v8);
  uint64_t v8 = *(void *)(v2 - 0x3F8123127DDA1A64);
  uint64_t v9 = &STACK[0x139154EEB432820];
  LODWORD(v10) = v1
               + 1374699841
               * (((&v8 | 0x7984BEEA) - &v8 + (&v8 & 0x867B4110)) ^ 0x1470A6E3)
               + 1504;
  (*(void (**)(uint64_t *))&v7[8 * v1 + 15752])(&v8);
  LODWORD(v8) = v1 + 235795823 * (&v8 ^ 0x94AD4959) + 211;
  uint64_t v9 = v3;
  (*(void (**)(uint64_t *))&v7[8 * (v1 ^ 0x9C7)])(&v8);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000599C8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned char *a25,uint64_t a26,uint64_t a27,int a28,unsigned char *a29,_DWORD *a30,unsigned char *a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  a29[3] = (HIBYTE(v38) ^ 0x6E) - ((2 * HIBYTE(v38)) & 0x22) + 17;
  a25[9] = BYTE5(v40) ^ 0x86;
  a25[15] = BYTE1(v38) ^ 0x9E;
  a31[8] = v38 ^ 0x58;
  a29[9] = (BYTE2(v38) ^ 0x82) - ((2 * BYTE2(v38)) & 0x22) + 17;
  a31[26] = (v40 >> (((a33 - 97) & 0x6Du) - 5)) ^ 0x20;
  char v42 = (v39 ^ 0x54) - ((2 * (v39 ^ 0x54) + 122) & 0x46) - 96;
  if ((v39 ^ 0x95F7E5604D7E4854) < 0x8134422366A90F03) {
    char v42 = a2;
  }
  char v43 = v42 ^ 0xA3;
  if ((v39 ^ 0x95F7E5604D7E4854) >= 0x8134422366A90F03) {
    char v44 = 3;
  }
  else {
    char v44 = 0;
  }
  char v45 = *(unsigned char *)(a37 + 531 + (BYTE6(v40) ^ 0xDLL));
  a25[7] = HIBYTE(v40) ^ 0x5C;
  a31[27] = BYTE1(v39) ^ 0x48;
  a29[10] = 7 * (v45 ^ 0x9C) - ((14 * (v45 ^ 0x9C)) & 0x22) + 17;
  a25[10] = v43 + v44;
  HIDWORD(v46) = *(unsigned __int8 *)(a37 + (((BYTE2(v39) ^ 0x7E) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  LODWORD(v46) = (HIDWORD(v46) << 26) ^ (HIDWORD(v46) << 24);
  a31[10] = BYTE4(v39) ^ 0x60;
  a29[14] = (BYTE3(v39) ^ 0x4D) - ((2 * (BYTE3(v39) ^ 0x4D)) & 0x22) + 17;
  a29[20] = (v46 >> 25) ^ 0xD;
  a29[4] = (BYTE6(v39) ^ 0xF7) - ((2 * (BYTE6(v39) ^ 0xF7)) & 0x22) + 17;
  a29[16] = (BYTE5(v39) ^ 0xE5) - 2 * ((BYTE5(v39) ^ 0xE5) & 0x13 ^ BYTE5(v39) & 2) + 17;
  unsigned int v47 = *(unsigned __int8 *)(a37 + (((HIBYTE(v39) ^ 0x95) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a31[20] = a8 ^ 0x42;
  HIDWORD(v46) = v47;
  LODWORD(v46) = (v47 << 26) ^ (v47 << 24);
  a29[15] = (v46 >> 25) ^ 0xD;
  unsigned int v48 = *(unsigned __int8 *)(a23 + (((a8 >> 1) & 0x80 | ((unsigned __int16)a8 >> 9)) ^ 0xE1));
  a31[17] = BYTE3(a8) ^ 0x48;
  a25[14] = BYTE4(a8) ^ 0xCC;
  *a29 = BYTE5(a8) - ((2 * BYTE5(a8)) & 0x22) - 111;
  a31[21] = HIBYTE(a8) ^ 0x1F;
  a31[13] = BYTE2(a8) ^ 0x50;
  a31[3] = (v48 ^ 0x8A ^ (v48 >> 2) & 0x17) + 32;
  a25[12] = BYTE6(a8) ^ 6;
  char v49 = *(unsigned char *)(a37 + 531 + (v41 ^ 0x35) + 2 * (v41 & 0xD5 ^ 0x15) - 4 * (v41 & 0xD5 ^ 0x15) + 213) ^ 0x9C;
  a31[11] = BYTE2(v41) ^ 0xB6;
  a29[5] = 7 * v49 - ((14 * v49) & 0x22) + 17;
  a29[2] = (BYTE3(v41) ^ 0xE4) - ((2 * BYTE3(v41)) & 0x22) + 17;
  a31[25] = BYTE1(v41) ^ 0x76;
  unsigned int v50 = *(unsigned __int8 *)(a23 + (((v41 >> 25) & 0x80 | (v41 >> 33) & 0x7F) ^ 0xB1));
  a31[22] = BYTE5(v41) ^ 0xD3;
  a31[18] = HIBYTE(v41) ^ 0x50;
  a31[2] = BYTE1(a6) ^ 0x56;
  a29[1] = a6 ^ 0x41;
  a31[30] = BYTE3(v37) ^ 0x5F;
  a31[9] = BYTE2(a6) ^ 0xBE;
  a31[19] = (v50 ^ 0x8A ^ (v50 >> 2) & 0x17) + 32;
  a29[7] = (BYTE6(v41) ^ 0x2B) - 2 * ((BYTE6(v41) ^ 0x2B) & 0x15 ^ BYTE6(v41) & 4) + 17;
  unsigned int v51 = *(unsigned __int8 *)(a37 + (((BYTE4(v37) ^ 0xF6) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a31[24] = BYTE6(v37) ^ 0x81;
  a31[12] = BYTE5(v37) ^ 0xFD;
  HIDWORD(v46) = v51;
  LODWORD(v46) = (v51 << 26) ^ (v51 << 24);
  a31[1] = HIBYTE(v37) ^ 0x9D;
  a31[23] = (v46 >> 25) ^ 0x1C;
  *a30 = a28 + 306190594;
  return sub_100059E34();
}

uint64_t sub_100059E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                                        + 8
                                                                                        * (a7 | (2
                                                                                               * (((((a7 - 1614763173) & 0x603F5555)
                                                                                                  + ((a7 - 333) ^ 0xFFFFF9E4)) & v8) == 0)))))(a1, a2, a3, a4, a5, (a4 - a5));
}

void sub_100059EB4()
{
}

uint64_t sub_100059F40(uint64_t a1, int a2)
{
  unsigned int v5 = v4 + 590859807 + 3 * ((a2 - 1383119094) & 0x5270BABF ^ 0xA48);
  BOOL v6 = v5 < 0xA191A0DF;
  BOOL v7 = v5 > v2 + 1810140961;
  if ((v2 + 1810140961) < 0xA191A0DF != v6) {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((4 * !v7) | (8 * !v7) | a2)))();
}

uint64_t sub_100059FD0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W8>)
{
  *(unsigned char *)(v10 + (v6 + a3) + 20) = *(unsigned char *)(a4 + (v6 + a3));
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((((v5 + a2) & v8 ^ v7) + v6 != ((v5 + a2) & v8 ^ v9 ^ a5))
                                * (((v5 + a2) & v8 ^ a1) + 21)) | (((v5 + a2) & v8) + 51))))();
}

void sub_10005A024()
{
}

uint64_t sub_10005A044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, int a5@<W8>)
{
  STACK[0x448] = v6;
  *(void *)(v5 + 72) = STACK[0x3E8];
  uint64_t v8 = *(_DWORD *)(v6 - 0x72E93EC0CCAF573ELL) & (a5 + 42);
  *(unsigned char *)(v6 - 0x72E93EC0CCAF5782 + (v8 ^ 0x24)) = 107;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * ((((v8 ^ 0x24) > 0x37) * (a5 + 1079)) ^ a5)))(a1, a2, a3, 3768594526, 2772, a4, 1052694286);
}

void sub_10005A0EC()
{
}

uint64_t sub_10005A104(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((a1 - 682) ^ 0xFFFFFB06) + a1 + 457)
                                     * ((v2 + v1 - 2041540022) > 7)) ^ a1)))();
}

uint64_t sub_10005A154(uint64_t a1, int a2)
{
  int v5 = (v4 ^ 0x11C) + 11;
  BOOL v7 = v2 + 1670546569 > (v5 ^ 0x777) + 1263549681 || v2 + 1670546569 < a2 - 883932350;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((14 * v7) ^ v5)))(0x578C959BB21E7DE5);
}

void sub_10005A244()
{
}

void sub_10005A2C0()
{
}

uint64_t sub_10005A2D0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2001 * (v0 - 1 + (((v1 ^ 0x2E) + 126) ^ (v3 + 1037)) >= 0)) ^ v1)))();
}

uint64_t sub_10005A310@<X0>(void *a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  return sub_10003D708(a1, a2 ^ 0x159u, *(_DWORD *)(*v4 + 4 * (v5 - 960758)), v3, a3);
}

uint64_t sub_10005A340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, uint64_t a4@<X8>)
{
  *(_OWORD *)(v6 + ((v7 + v8) & (v5 + a2))) = *(_OWORD *)(a4 + a2);
  return (*(uint64_t (**)(void))(v9 + 8 * (((a1 != a2) * a3) | v4)))();
}

uint64_t sub_10005A374@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((v1 == ((v2 + 21268638) & 0xFEBB778E) - 902) * (((v2 - 777) | 0x80) ^ 0xF)) ^ v2)))();
}

void sub_10005A3B8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) ^ (1225351577 * ((-2 - ((a1 | 0x21ABC784) + (~a1 | 0xDE54387B))) ^ 0xFDCEE06D));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10005A4A0()
{
  *int v3 = v3[623];
  unint64_t v6 = 235795823 * ((v5 - 0x6817BA5DA66F558BLL - 2 * ((v5 - 144) & 0x97E845A25990AB05)) ^ 0x9F58FF5CCD3DE25CLL);
  *(void *)(v5 - 112) = (v4 + 1) + v6;
  int v7 = (235795823 * ((v5 + 1502653045 - 2 * ((v5 - 144) & 0x5990AB05)) ^ 0xCD3DE25C)) ^ (v0 + 1009202654);
  *(void *)(v5 - 128) = v6 ^ 3;
  *(_DWORD *)(v5 - 136) = v7 ^ 0x76;
  *(_DWORD *)(v5 - 144) = v7 ^ 0x1F;
  *(_DWORD *)(v5 - 140) = v0 + 1009202654 - 235795823 * ((v5 + 1502653045 - 2 * ((v5 - 144) & 0x5990AB05)) ^ 0xCD3DE25C);
  *(_DWORD *)(v5 - 120) = 2064071201
                        - 235795823 * ((v5 + 1502653045 - 2 * ((v5 - 144) & 0x5990AB05)) ^ 0xCD3DE25C)
                        + v0
                        + 40560953;
  *(_DWORD *)(v5 - 116) = 235795823 * ((v5 + 1502653045 - 2 * ((v5 - 144) & 0x5990AB05)) ^ 0xCD3DE25C) + 1;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * ((v0 + 40560953) ^ v1)))(v5 - 144);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v5 - 104)))(v8);
}

uint64_t sub_10005A578(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, _DWORD *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v23 = 1759421093 * ((((v22 - 136) | 0x6448A0A3) - (v22 - 136) + ((v22 - 136) & 0x9BB75F58)) ^ 0xD73510F7);
  *(void *)(v22 - 128) = a20;
  *(_DWORD *)(v22 - 120) = v21 - v23 + 67;
  *(_DWORD *)(v22 - 136) = ((((5 * (v21 ^ 0x226)) ^ 0x99842DF7) + a2) & 0xFFFFFFF0) - v23 + 1735915903;
  *(_DWORD *)(v22 - 132) = v23 + a2 - a14 + 259271423;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v21 + 1711)))(v22 - 136);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * (((*a15 == 526347143) * ((v21 + 1566) ^ 0x825)) ^ v21)))(v24);
}

uint64_t sub_10005A670(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v5
                                                                                        + 8
                                                                                        * (int)((((((v3 + 1952552461) ^ 0x74619DA0)
                                                                                                 + 709) ^ (v3 + 1952552461) & 0x8B9E667C)
                                                                                               * (v2 == v4)) ^ v3)))(a1, a2, 2431, 120779723, 4174187572, LODWORD(STACK[0x3F8]));
}

uint64_t sub_10005A6D0()
{
  (*(void (**)(void))(v2 + 8 * (v1 + 1175)))();
  return (*(uint64_t (**)(void))(v2 + 8 * ((464 * (*(void *)(v0 + 192) == 0)) ^ (v1 + 127))))();
}

uint64_t sub_10005A708()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((25
                                * (v2
                                 - 1862623872
                                 + ((v1 - 200) ^ (v0 + LODWORD(STACK[0x3D0]) - 642161856)) < 3)) ^ v1)))();
}

uint64_t sub_10005A79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v8
                                                    + 8
                                                    * ((244
                                                      * ((v5 & 0x18) == ((a5 - 450063291) & 0x1AD367AF ^ 0xFFFFFAF9)
                                                                      + (a5 ^ 0x118))) ^ a5)))(a1, (v6 - v7));
}

void sub_10005A7F0(_DWORD *a1)
{
  unsigned int v1 = *a1 + 108757529 * ((2 * (a1 & 0x5EAB9BD4) - a1 - 1588304853) ^ 0x41C80600);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_10005A8C0(double a1)
{
  double *v2 = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v3) ^ v1)))();
}

uint64_t sub_10005A8E4@<X0>(int a1@<W7>, int a2@<W8>)
{
  unint64_t v8 = STACK[0x3F0];
  *(_DWORD *)(v8 + 392) = a2;
  *(_DWORD *)(v8 + 396) = STACK[0x4E8];
  *(void *)(v8 + 400) = STACK[0x618];
  *(_DWORD *)(v8 + 408) = 421729911 - v3 + LODWORD(STACK[0x58C]);
  *(void *)(v8 + 416) = STACK[0x3E8] + (v3 - 2119813987);
  int v9 = (*(uint64_t (**)(unint64_t, unint64_t))(v5 + v6 * (uint64_t)a1 + 8))(STACK[0x388], STACK[0x260]);
  int v10 = v9 + ((v4 + 458) ^ 0x1F5F6DA1 ^ v2) - ((2 * v9) & 0x3EBED70E) == 526347143;
  return (*(uint64_t (**)(__n128))(v7 + 8 * ((32 * v10) | (v10 << 6) | v4)))((__n128)0);
}

uint64_t sub_10005A9B8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 48) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_10005A9D0@<X0>(uint64_t a1@<X8>, int a2, int a3)
{
  *(_DWORD *)(a1 - 0x66408E1D617AE0CDLL) = a3;
  return (*(uint64_t (**)(void))(v5 + 8 * ((*(void *)(v4 + 24) == 0x335EB1051722DFECLL) ^ (v3 - 345))))();
}

uint64_t sub_10005AA20()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 - 1447213568) & 0x5642B7FF) + 2559) * (v2 == 0)) ^ v0)))();
}

uint64_t sub_10005AA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15)
{
  a15 = 108757529
      * (((&a14 | 0x7488BE6A) - &a14 + (&a14 & 0x8B774190)) ^ 0x9414DC41)
      - 504207030;
  uint64_t v17 = (*(uint64_t (**)(int *))(v16 + 17848))(&a14);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((3270 * (a14 == v15)) ^ 0x4D8u)))(v17);
}

void sub_10005AAE0(uint64_t a1, int a2)
{
  _DWORD *v2 = a2;
  JUMPOUT(0x100049084);
}

void sub_10005AAE8(uint64_t a1)
{
  int v1 = 1759421093 * (a1 ^ 0xB37DB054);
  if (*(void *)(a1 + 24)) {
    BOOL v2 = *(_DWORD *)(a1 + 20) - v1 == 996279120;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = !v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10005AB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * ((217 * (a10 + 4 >= a10)) ^ v10)))(a1);
}

uint64_t sub_10005AC34()
{
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((308
                                              * (((((v0 - 1219966478) & 0x8B737DF) + 584779665) & 0xDD24F7FF) != 1004)) ^ (v0 - 1219966478) & 0x8B737DF)))(3689027270);
}

uint64_t sub_10005ACF0(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((108 * ((a2 ^ (v5 + a4 < ((a2 - 61) | 0x51Cu) - 1315)) & 1)) ^ (a2 + 2020))))();
}

uint64_t sub_10005AD3C(_DWORD *a1)
{
  unsigned int v2 = 1755732067
     * ((2 * ((a1 ^ 0xFDCA5AD1) & 0x4699B354) - (a1 ^ 0xFDCA5AD1) - 1184478037) ^ 0x9A6AABA1);
  unsigned int v3 = a1[8] - v2;
  int v4 = a1[2] ^ v2;
  unsigned int v9 = v3
     + 628203409 * (((&v9 | 0x3341E245) + (~&v9 | 0xCCBE1DBA)) ^ 0xB1C9EE77)
     - 1404134225;
  int v5 = (char *)*(&off_10007DD80 + (int)(v3 ^ 0x45E092C3)) - 4;
  uint64_t result = (*(uint64_t (**)(unsigned int *))&v5[8 * (v3 - 1172343097)])(&v9);
  if (v4 > 600925319)
  {
    if (v4 == 886137991)
    {
      unsigned int v7 = 3;
    }
    else
    {
      if (v4 != 600925320) {
        goto LABEL_11;
      }
      unsigned int v7 = 1;
    }
LABEL_10:
    uint64_t v8 = *(void *)&v5[8
                      * ((((*(uint64_t (**)(void))&v5[8 * (v3 ^ 0x45E09B56)])((*((_DWORD *)*(&off_10007DD80 + (int)(v3 - 1172345315)) + 6 * v7 + 4) - 2079419384)) != 0)
                        * ((v3 - 1172343208) ^ 0x8F7)) | (v3 - 1172343368))];
    __asm { BRAA            X8, X17 }
  }
  if (v4 == 600925316)
  {
    unsigned int v7 = 0;
    goto LABEL_10;
  }
  if (v4 == 600925319)
  {
    unsigned int v7 = 2;
    goto LABEL_10;
  }
LABEL_11:
  a1[13] = -526372805;
  return result;
}

uint64_t sub_10005AF9C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((76 * (((v8 + a6 - 642) ^ (v8 + 1329) ^ (a4 - 1778)) + v6 >= v6 + a4)) ^ a6)))();
}

uint64_t sub_10005AFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v10 = *(_DWORD *)STACK[0x3F0] != ((v6 - 165) ^ LODWORD(STACK[0x3E0])) || v7 != a6 + ((v6 - 309) | 0x182) - 899;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v10 << 7) | (v10 << 8)) ^ (v6 - 165))))();
}

uint64_t sub_10005B03C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((49 * (v5 - v3 + 4 >= (((a3 ^ 0x4BDu) + 1600) ^ 0x885uLL))) ^ a3)))();
}

uint64_t sub_10005B07C@<X0>(int a1@<W4>, int a2@<W7>, int a3@<W8>)
{
  if ((a3 - 2029314978) <= 0x1B && ((1 << (a3 + 94)) & 0x8002809) != 0) {
    return sub_10005B0E8();
  }
  else {
    return (*(uint64_t (**)(void))(v5
  }
                                + 8
                                * ((28 * (((((32 * a1) ^ 0x8E40) - 1304) & *(_DWORD *)(v3 + v4 * (uint64_t)a2 + 40)) == 0)) ^ (a1 - 305))))();
}

uint64_t sub_10005B0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((((((*(_DWORD *)(v9 + v10 * (uint64_t)a8 + 40) & 1) == 0) ^ (13 * (v8 ^ 0x50))) & 1)
                                * (42 * (v8 ^ 0x457) - 379)) ^ (v8 - 819))))();
}

uint64_t sub_10005B13C()
{
  return sub_10005B144();
}

uint64_t sub_10005B144@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W6>, int a4@<W8>, int8x16_t a5@<Q2>, int8x16_t a6@<Q3>)
{
  int8x16_t v11 = *(int8x16_t *)(v9 + (v6 + a1 + v8));
  *(int8x16_t *)(v7 + v8) = vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), a6)), a5);
  return (*(uint64_t (**)(void))(v10 + 8 * (((v8 == 48) * a3) ^ (a2 + a4 + 1005))))();
}

void sub_10005B18C()
{
}

uint64_t sub_10005B294()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((495 * (v1 + 1 != v3 + 48)) ^ v0)))();
}

uint64_t sub_10005B368@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((a1 ^ (a1 + 109)) + ((a1 + 1444861428) & 0x2152E77A) + 382) * (a2 == v4)) ^ (v3 + a1 + 130))))();
}

uint64_t sub_10005B3BC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((8 * ((a6 + 1 + v6) < 0x10)) | (16 * ((a6 + 1 + v6) < 0x10))) ^ (a1 + 148))))();
}

uint64_t sub_10005B4D0(uint64_t a1)
{
  return sub_10005B504(a1, v1 - 7, a1 - 7);
}

uint64_t sub_10005B504(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7, int a8)
{
  *(void *)(a3 + (v9 + v8 - v10)) = *(void *)(a2 + (v9 + v8 - v10));
  return (*(uint64_t (**)(void))(v11 + 8 * (((a7 + v10 == a4) * a8) ^ a5)))();
}

uint64_t sub_10005B534(uint64_t a1, ...)
{
  va_start(va, a1);
  BOOL v5 = (*(uint64_t (**)(void, char *, void, uint64_t))(v3 + 8 * (v4 + 555)))(**(unsigned int **)(v2 + 8 * (v4 - 1695)), va, ((v1 - 1735911792) & 0xFFFFF000 ^ 0x7B7A1BDA) + ((2 * (v1 - 1735911792)) & 0xF6F42000) - 2071600090, 1) == ((v4 + 68402722) & 0xFBEC3BD7) - 212;
  return (*(uint64_t (**)(void))(v3 + 8 * ((472 * v5) ^ v4)))();
}

void sub_10005B5D0()
{
}

uint64_t sub_10005B5E4()
{
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 8 * (v1 ^ 0x900u));
  LODWORD(STACK[0x3F8]) = v0;
  BOOL v4 = v3() == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * (((v1 + 1102) ^ 0x10B) - 1243)) ^ v1)))();
}

uint64_t sub_10005B630()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v1 + v0 + ((9 * ((v2 - 1785) ^ 0x133)) ^ 0xA0540456) < 8) * (v2 - 2085)) ^ (v2 - 1785))))();
}

uint64_t sub_10005B6A4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v0 ^ 0xEB) - 607) * (v2 == 842511415)) ^ v0)))();
}

void sub_10005B6E8()
{
}

uint64_t sub_10005B750@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((30
                                * (((a1 - 2079419384) ^ 0x77B56DBEF3D7F1ACLL)
                                 - 0x77B56DBE70FF5A26
                                 + ((2 * (a1 - 2079419384)) & 0x1E7AFE358) == 2195232646)) ^ 0x166u)))();
}

uint64_t sub_10005B7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30
                                                                                                  + 8 * ((1742 * ((((v29 ^ 0x58C) + 908) | 0x40) + (((v29 ^ 0x58C) + 1074036850) | 0x12407E29) == 1380254595)) ^ v29 ^ 0x58C)))(a1, a2, a3, a4, a5, a6, a29);
}

uint64_t sub_10005B870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  if ((v5 - 2029314978) <= 0x1B && ((1 << (v5 + 94)) & 0x8002809) != 0) {
    return (*(uint64_t (**)(void))(v7
  }
                                + 8
                                * ((46 * ((((v6 + 552401841) ^ ((v8 & 0xFFFFFFFFFFFFFFFuLL) - 1 < 2)) & 1) == 0)) ^ (v6 + 552400495))))();
  else {
    return sub_10005DAB4(a1, a2, a3, a4, a5);
  }
}

uint64_t sub_10005B8EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(void *)(v24 - 128) = a20;
  *(void *)(v24 - 120) = v23;
  *(_DWORD *)(v24 - 112) = v20
                         + 1374699841 * ((2 * ((v24 - 128) & 0x66A5C608) - (v24 - 128) + 425343479) ^ 0x74AE21FE)
                         + 840;
  (*(void (**)(uint64_t))(v21 + 8 * (v20 + 1305)))(v24 - 128);
  *(void *)(v24 - 120) = a20;
  *(void *)(v24 - 104) = v22;
  *(_DWORD *)(v24 - 112) = v20 + 1178560073 * ((v24 - 43717527 - 2 * ((v24 - 128) & 0xFD64ECE9)) ^ 0x47F0948B) + 754;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v20 ^ 0xB22)))(v24 - 128);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * (int)((((*(_DWORD *)(v24 - 128) - 1263233868) < 0xFA79F799)
                                                   * ((v20 + 4316065) & 0xFFBE24EF ^ ((v20 - 722) | 0x2A) ^ 0x291)) ^ v20)))(v25);
}

uint64_t sub_10005BA2C(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_100079300 + ((225 * (*(_DWORD *)(a2 + 4) != 2079419385)) ^ 0x163u)))();
}

uint64_t sub_10005BA68(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v11 = a8 + v10 + ((a2 - 259) ^ 0xC76AB084);
  BOOL v12 = v11 < 0x4D9C5A13;
  BOOL v13 = v11 > v8 + 401557589;
  if ((v8 + 401557589) < 0x4D9C5A13 != v12) {
    BOOL v13 = v12;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((v13 * ((a2 - 1587) ^ 0x2EB)) ^ a2)))();
}

uint64_t sub_10005BAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  *(unsigned char *)(v12 + (a6 - 2115834848)) = *(unsigned char *)(v9 + ((a6 - 2115834848) & 0xFLL)) ^ *(unsigned char *)(v7 + (a6 - 2115834848)) ^ *(unsigned char *)(v10 + (((_BYTE)a6 + 32) & 0xF)) ^ *(unsigned char *)((((_BYTE)a6 + 32) & 0xF) + v11 + 4) ^ (41 * ((a6 + 32) & 0xF));
  int v14 = ((a7 + 313) ^ 0xFFFFFA71) + a6 == v8;
  return (*(uint64_t (**)(void))(v13 + 8 * (((32 * v14) | (v14 << 6)) ^ (a7 + 602))))();
}

uint64_t sub_10005BB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, unsigned int a16, uint64_t a17)
{
  unsigned int v22 = 1178560073 * (&a13 ^ 0xBA947862);
  a17 = v17;
  a14 = v22 + v21 + 167;
  a16 = v22 ^ ((v18 ^ 0xFF29FF53) + 1795093246 + ((2 * v18) & 0xFE53FEA6));
  a15 = a12;
  uint64_t v23 = (*(uint64_t (**)(int *))(v20 + 8 * (v21 + 707)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * (((a13 == v19) * (((v21 - 1567712108) & 0x1FF6) - 682)) ^ v21)))(v23);
}

uint64_t sub_10005BC04(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int8x16_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41)
{
  int8x16x4_t v60 = vld4q_s8(a4);
  uint8x16_t v45 = (uint8x16_t)veorq_s8(v60.val[0], v43);
  uint16x8_t v46 = vmovl_u8(*(uint8x8_t *)v45.i8);
  uint16x8_t v47 = vmovl_high_u8(v45);
  uint8x16_t v48 = (uint8x16_t)veorq_s8(v60.val[1], v43);
  _Q17 = vmovl_u8(*(uint8x8_t *)v48.i8);
  _Q16 = vmovl_high_u8(v48);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  uint8x16_t v57 = (uint8x16_t)veorq_s8(v60.val[2], v43);
  uint16x8_t v58 = vmovl_high_u8(v57);
  v60.val[0] = veorq_s8(v60.val[3], v43);
  v60.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v60.val[0]);
  v60.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v60.val[1]);
  v60.val[3] = vorrq_s8(vorrq_s8(vorrq_s8(_Q19, (int8x16_t)vshll_high_n_u16(vmovl_u8(*(uint8x8_t *)v57.i8), 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v46), 0x18uLL)), (int8x16_t)vmovl_high_u16(vmovl_u8(*(uint8x8_t *)v60.val[0].i8)));
  v60.val[1] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q16.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v58.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v47.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v60.val[1].i8));
  v60.val[2] = vorrq_s8(vorrq_s8(vorrq_s8(_Q18, (int8x16_t)vshll_high_n_u16(v58, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v47), 0x18uLL)), v60.val[2]);
  v41[2] = vaddq_s32(vsubq_s32((int32x4_t)v60.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v60.val[1], (int32x4_t)v60.val[1]), a29)), v44);
  v41[3] = vaddq_s32(vsubq_s32((int32x4_t)v60.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v60.val[2], (int32x4_t)v60.val[2]), a29)), v44);
  v41[1] = vaddq_s32(vsubq_s32((int32x4_t)v60.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v60.val[3], (int32x4_t)v60.val[3]), a29)), v44);
  return sub_1000252F0(a1, a2, a3, (uint64_t)a4, a41 - 1220, a6, v42 + 16);
}

void sub_10005BD18()
{
}

uint64_t sub_10005BD20(_DWORD *a1)
{
  signed int v1 = (*a1 ^ (535753261
             * ((1711628207 - (a1 | 0x66055FAF) + (a1 | 0x99FAA050)) ^ 0x930EAE7F)))
     - 2138963338;
  uint64_t v2 = *(void *)((char *)*(&off_10007DD80 + v1) - 4);
  unsigned int v5 = (3804331 * (&v4 ^ 0x7ED525F6)) ^ ((*a1 ^ (535753261
                                                             * ((1711628207
                                                               - (a1 | 0x66055FAF)
                                                               + (a1 | 0x99FAA050)) ^ 0x930EAE7F)))
                                                     - 2138961777);
  uint64_t v4 = v2;
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_10007DD80 + v1 + 130) + 8 * v1 + 18316))(&v4);
}

uint64_t sub_10005BE18(uint64_t result)
{
  unint64_t v1 = 1755732067 * ((2 * (result & 0x155053FA18C8728CLL) - result + 0x6AAFAC05E7378D73) ^ 0xB7040B3A39F130A8);
  uint64_t v2 = *(void *)(result + 24);
  uint64_t v3 = *(void *)(result + 32);
  unint64_t v4 = v2 - v1;
  BOOL v5 = v2 != v3;
  BOOL v6 = v4 >= v3 - v1;
  if (((*(_DWORD *)(result + 12) ^ (1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8))) & 1) == 0) {
    BOOL v6 = v5;
  }
  if (v6) {
    int v7 = *(_DWORD *)(result + 16) + 1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8);
  }
  else {
    int v7 = *(_DWORD *)(result + 8) - 1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8);
  }
  *(_DWORD *)uint64_t result = *(_DWORD *)(result + 4) ^ (1755732067
                                               * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8)) ^ v7;
  return result;
}

uint64_t sub_10005BEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, int a15)
{
  unsigned int v19 = 1178560073 * ((2 * (&a12 & 0x1E6864C8) - &a12 - 510158029) ^ 0x5B03E351);
  a13 = v19 + 762105055 * v15 + v18 + 296806021;
  a15 = (v18 + 1431) ^ v19;
  a14 = a11;
  uint64_t v20 = (*(uint64_t (**)(int *))(v17 + 8 * (v18 ^ 0x84F)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((11 * (a12 == v16)) ^ v18)))(v20);
}

uint64_t sub_10005BF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((((v6 + 701361915) & 0xD63217FD ^ 0x3B5) + (v6 ^ 0x2A8)) * (v5 == a5)) ^ v6)))();
}

void sub_10005BFB8()
{
}

uint64_t sub_10005BFC4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10005C024(a4 - 0x139154EEB4327E8, a1 - 0x139154EEB4327E8, 3435, 0x97E1CBFDFEF9D1FCLL, 0x1FDF3A3F8, 0x6DFFBF9FD5EEEFB0, 950);
}

uint64_t sub_10005C024(void *a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v20 = v18 > v12;
  uint64_t v21 = 4 * (v15 + v13);
  int v22 = v16 + v7 + (v11 ^ a3) + (*(_DWORD *)(*a1 + v21) ^ v17) - 2186;
  *(_DWORD *)(*a2 + v21) = v22 + v17 - (v14 & (2 * v22));
  LODWORD(v21) = v15 + 1 + v9;
  int v23 = v20 ^ ((int)v21 < v8);
  BOOL v24 = (int)v21 < v10;
  if (!v23) {
    BOOL v20 = v24;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * ((!v20 * a7) ^ v11)))();
}

uint64_t sub_10005C0B4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 == (v1 ^ (v3 - 726))) * (v1 + 2122)) ^ v1)))();
}

uint64_t sub_10005C0E0@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W7>, int a7@<W8>)
{
  int v17 = (a6 ^ v15)
      + (a5 ^ 0x35 ^ (a7 + 222))
      + (((v8 ^ a1) + v15 - (v13 & (2 * (v8 ^ a1)))) ^ v7)
      + *(_DWORD *)(a3 + 4 * (v16 + v12))
      + (*(_DWORD *)(v10 + 4 * (*(unsigned char *)(a2 + v16 + v12) - 72)) ^ v9);
  unsigned int v18 = (v17 + v15 - (v13 & (2 * v17))) ^ v15;
  int v19 = ((v18 << (*(unsigned char *)(a4 + v16 + v12) - 76)) | (v18 >> (76 - *(unsigned char *)(a4 + v16 + v12)))) + (a1 ^ v15);
  return (*(uint64_t (**)(void))(v11 + 8 * ((2250 * (v16 + 1 == v14 + 48)) ^ a5)))(v19 + v15 - (v13 & (2 * v19)));
}

uint64_t sub_10005C1AC(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  int v8 = (unsigned __int8 *)(a4 + a3 + v7);
  int v9 = *v8 ^ 0xEB;
  LODWORD(v8) = (((8 * a2) ^ 0xA0 ^ v8[2] ^ 0xFB) << 16) | ((v8[3] ^ 0xEB) << 24) | v9 | ((v8[1] ^ 0xEB) << 8);
  *(_DWORD *)(v5 + ((a3 + v7) & 0xFFFFFFFFFFFFFFFCLL)) = v8 + v4 - 2 * (v8 & (v4 + 8) ^ v9 & 8);
  return (*(uint64_t (**)(void))(v6 + 8 * ((55 * ((unint64_t)(a3 + 4 + v7) > 0x3F)) ^ a2)))();
}

uint64_t sub_10005C248(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, void))(v5
                                                    + 8
                                                    * (((((v4 < 0x20) ^ ((a4 ^ 0x9D) - 58)) & 1)
                                                      * ((((a4 ^ 0x39D) - 1071) | 0x10E) - 719)) ^ a4 ^ 0x39D)))(a1, 0);
}

uint64_t sub_10005C28C(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (1755732067 * ((a1 & 0xECFD530 | ~(a1 | 0xECFD530)) ^ 0x2FF69714));
  return (*(uint64_t (**)(void))((char *)*(&off_10007DD80 + v1 - 1276)
                              + 8 * (((*(void *)(a1 + 8) == 0x2C138C8FAF40FC22) * (v1 - 1381)) ^ v1)
                              - 4))();
}

void sub_10005C31C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16)
     - 460628867 * (((a1 ^ 0x68759CF4 | 0x87CE5E15) - ((a1 ^ 0x68759CF4) & 0x87CE5E15)) ^ 0xA32D409C);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10005C45C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((23
                                * (*(_DWORD *)(v4 + 48 * (((v1 + ((v0 - 974) | 0x18) - 280) ^ 0x12DB406F) + v3) + 36) != v3)) ^ v0)))();
}

void sub_10005C4B0()
{
  int v2 = LODWORD(STACK[0x3C4]) ^ 0x8F4;
  *(_DWORD *)(v1 - 200) = (v2 + 2138963294) ^ (535753261
                                             * ((v1 + 1931614134 - 2 * ((v1 - 200) & 0x7322187E)) ^ 0x79D61651));
  (*(void (**)(uint64_t))(v0 + 8 * (v2 | 0x904)))(v1 - 200);
  uint64_t v3 = v1 - 200;
  *(unsigned char *)uint64_t v3 = (-85 * ((v1 + 56) ^ 0xF6)) ^ 0x61;
  *(void *)(v3 + 24) = STACK[0x270];
  *(void *)(v3 + 8) = STACK[0x268];
  *(_DWORD *)(v1 - 184) = 3804331 * ((v1 - 200) ^ 0x7ED525F6) + v2 + 1672;
  (*(void (**)(uint64_t))(v0 + 8 * (v2 ^ 0x8A2)))(v1 - 200);
  LODWORD(STACK[0x2EC]) = 604952942;
  JUMPOUT(0x10005C5A8);
}

uint64_t sub_10005C5E4()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1317
                                * ((((*(unsigned __int8 *)(v3 + 8) - 11) << (((v2 ^ 0xF7) + 51) ^ (-102 * (v2 ^ 0xF7)))) & v0)
                                 + ((*(unsigned __int8 *)(v3 + 8) - 11) ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_10005C634@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v4
                                   - a2
                                   - 0x72E93EC0CCAF5782
                                   + (unint64_t)(v3 + v2 - 1522488795) < 0x10) ^ (a1 + 67)) & 1)
                                * ((37 * ((a1 + 889) ^ 0x81B)) ^ 0x143)) ^ (a1 + 889))))();
}

uint64_t sub_10005C6B0()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 - 763562213) & 0x7FC7FFAF) + ((v2 + 268438946) | 0x4244E929) + 1534460541)
                                * (v0 == v1)) ^ v2)))();
}

uint64_t sub_10005C714()
{
  BOOL v5 = v0 != 659196916 && LODWORD(STACK[0x58C]) - v2 == ((v1 - 475) ^ 0x2685CE8);
  return (*(uint64_t (**)(void))(v3 + 8 * (((4 * v5) | (32 * v5)) ^ v1)))();
}

uint64_t sub_10005C75C()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((1149 * (v1 + v3 + (v0 ^ 0x6F6u) < ((v0 - 36) ^ v2))) ^ v0)))();
}

uint64_t sub_10005C798(int a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,unsigned int a45)
{
  unsigned int v50 = a3 ^ ((*v48 & 0x7FFFFFFE | v48[623] & 0x80000000) >> 1);
  v48[623] = v48[396] ^ a7 ^ (v50 + a1 - (a2 & (2 * v50))) ^ *(_DWORD *)(v46
                                                                       + 4
                                                                       * (*v48 & (v49
                                                                                + (v45 ^ (a4 - 245))
                                                                                - 536)));
  return (*(uint64_t (**)(void))(v47 + 8 * ((1183 * (a45 > 0x26F)) ^ v45)))();
}

uint64_t sub_10005C80C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v12 = v8 + v9 + v10 - a3 + ((a6 - 657) | 0x20u);
  *(void *)(a1 - 7 + v12) = *(void *)(v6 - 7 + v12);
  return (*(uint64_t (**)(void))(v11 + 8 * ((2888 * (a3 - (v7 & 0xFFFFFFF8) == -8)) ^ a6)))();
}

uint64_t sub_10005C868()
{
  return sub_10005C88C();
}

uint64_t sub_10005C88C(uint64_t a1)
{
  int v5 = (v1 - 334) | 0x403;
  *int v9 = a1;
  _DWORD *v8 = v2;
  int v6 = 306 * (v5 ^ 0x450);
  unsigned int v13 = v5 + 535753261 * ((((2 * v12) | 0x432E8A82) - v12 + 1583921855) ^ 0xAB634B6E) + 236;
  uint64_t v14 = v11;
  (*(void (**)(unsigned char *))(v4 + 8 * (v5 ^ 0xCA6)))(v12);
  unsigned int v13 = v6
      + 535753261
      * (((v12 | 0x27EC23AD) - v12 + (v12 & 0xD813DC50)) ^ 0x2D182D82)
      + 425;
  uint64_t v14 = v10;
  (*(void (**)(unsigned char *))(v4 + 8 * (v6 ^ 0xB63)))(v12);
  return v3 ^ 0x1F5F6B87u;
}

uint64_t sub_10005C9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33)
{
  return (*(uint64_t (**)(uint64_t))(v33
                                            + 8
                                            * ((15
                                              * (a15
                                               + ((LODWORD(STACK[0x330]) << (a33 - 62)) & (a20 - 675) ^ 0x48)
                                               + (STACK[0x330] & 0x3F ^ 0xF9586ECB) < 0xFFFFFFC0)) ^ (a33 + 660))))(a30);
}

void sub_10005CA74()
{
}

uint64_t sub_10005CA80()
{
  unint64_t v3 = STACK[0x568] + 0x72E93EC0CCAF5802;
  STACK[0x548] = v3;
  int v4 = 1178560073 * ((2 * ((v2 - 200) & 0x17E8E200) - (v2 - 200) - 401138177) ^ 0x5283659D);
  *(void *)(v2 - 192) = v3;
  *(_DWORD *)(v2 - 200) = 1184294775 - v4;
  *(_DWORD *)(v2 - 184) = -1882357475 - v4 + v0 + 9;
  (*(void (**)(uint64_t))(v1 + 8 * (v0 + 2274)))(v2 - 200);
  STACK[0x5E8] = *(void *)(v1 + 8 * v0);
  return sub_100043838(1522488794, STACK[0x3F8]);
}

uint64_t sub_10005CB70()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v0 - 194504509) & 0xB97E45F ^ 0x403) * (*(_DWORD *)(v1 + 1424) != 1862623872)) ^ v0)))();
}

uint64_t sub_10005CBB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v10 = *((_DWORD *)&STACK[0x2AC] + ((v8 + v5) >> (((v7 + 93) | 0x29) ^ (a5 + 2))) + 18);
  *(unsigned char *)(a4 + (v8 + v5)) = v10 ^ 0x25;
  *(unsigned char *)(a4 + (v8 + v5 + 2)) = (BYTE2(v10) ^ 0xD1)
                                               - 2 * ((BYTE2(v10) ^ 0xD1) & 0xEF ^ BYTE2(v10) & 4)
                                               - 21;
  *(unsigned char *)(a4 + (v8 + v5 + 1)) = (BYTE1(v10) ^ 0x5B)
                                               + ~(2 * ((BYTE1(v10) ^ 0x5B) & 0xEF ^ BYTE1(v10) & 4))
                                               - 20;
  *(unsigned char *)(a4 + (v8 + v5 + 3)) = (HIBYTE(v10) ^ 0xDB)
                                               - 2 * ((HIBYTE(v10) ^ 0xDB) & 0xEF ^ HIBYTE(v10) & 4)
                                               - 21;
  unsigned int v11 = LODWORD(STACK[0x308]) - 528123428;
  BOOL v12 = v11 < v6;
  BOOL v13 = v8 + 267399623 < v11;
  if (v8 + 267399623 < v6 != v12) {
    BOOL v13 = v12;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((947 * v13) ^ v7)))();
}

void sub_10005CCD4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 1759421093 * ((a1 - 1364022623 - 2 * (a1 & 0xAEB2AAA1)) ^ 0x1DCF1AF5);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10005CD98()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((*(unsigned char *)(v2 + 1) == 4) * ((431 - v3) ^ (v0 - 1040))) | 0x1AF)))();
}

uint64_t sub_10005CDCC()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((1292 * ((v0 ^ 0x78F4E3B1) == ((v1 - v3 - 516) ^ 0x994D7A61) + v2)) ^ v1)))();
}

uint64_t sub_10005CE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(uint64_t))(v7
                                            + 8
                                            * ((1605
                                              * (v6 == ((((v5 ^ 0x68) - a5 - 92) ^ (13 * (v5 ^ 0x68))) ^ 0xE1))) ^ v5)))(4294925278);
}

uint64_t sub_10005CE64(double a1)
{
  *(double *)(v3 + v4) = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 != v4) | (4 * (v2 != v4))) ^ v1)))();
}

uint64_t sub_10005CE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  *(unsigned char *)(*v21 + (v18 + a8)) = 107;
  unsigned int v22 = v18 + 257544317 + v19 - 986;
  int v23 = ((a18 + 1169893921) < 0x69CA038F) ^ (v22 < 0x69CA038F);
  BOOL v24 = v22 < a18 + 1169893921;
  if (v23) {
    BOOL v24 = (a18 + 1169893921) < 0x69CA038F;
  }
  return (*(uint64_t (**)(void))(v20 + 8 * ((8 * v24) | (16 * v24) | v19)))();
}

uint64_t sub_10005CF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  uint64_t v21 = (v18 - 690);
  BOOL v22 = ((a18 - 2079419384) ^ 0x3B41DFFBF33EF45DLL)
      + (v21 ^ 0xC4BE2004A29DC5CBLL)
      + (((unint64_t)(a18 - 2079419384) << ((v18 + 78) ^ 0xA7u)) & 0x1E67DE8BALL) == v20;
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((16 * v22) | (32 * v22)) ^ v18)))(v21);
}

void sub_10005CFB0(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (1374699841 * ((((2 * a1) | 0x97E9331C) - a1 + 873162354) ^ 0xA6008187));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10005D08C()
{
  int v3 = *(_DWORD *)(v1 + 56);
  *(_DWORD *)(v1 + 56) = v3 + 1;
  uint64_t v4 = *(uint64_t (**)(void))(v2 + 8
                                * ((1517 * ((LODWORD(STACK[0x3C4]) ^ 0xD9296C2E) + v3 < 0xFFFFFFFA)) ^ (v0 - 1049)));
  LODWORD(STACK[0x2EC]) = 604952942;
  return v4();
}

uint64_t sub_10005D0E4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v8 = 4 * (v4 - 537492075);
  int v9 = *(_DWORD *)(v5 + 4 * (v4 - 537492076));
  unsigned int v10 = (a3 + (~v9 >> 30) - 4 * (v9 >= 0)) ^ v9;
  int v11 = ((a3 + 1566083941 * v10 - ((-1162799414 * v10) & 0xFACB7EB4)) ^ *(_DWORD *)(v5 + v8)) - v4;
  *(_DWORD *)(v5 + v8) = v11 - ((2 * v11 + 1074984150) & 0xFACB7EB4) + 493828549;
  unint64_t v12 = 1374699841
      * ((0x8D0CAE00BE507B8ELL - (STACK[0x408] | 0x8D0CAE00BE507B8ELL) + STACK[0x400]) ^ 0x640140C937A88B27);
  *(_DWORD *)(v7 - 160) = (v3 + 231121441) ^ v12;
  uint64_t v13 = v7 - 200;
  *(void *)(v13 + 8) = v12 + 1952423676;
  *(void *)(v13 + 16) = (v4 + 1414931602) ^ v12;
  *(_DWORD *)(v7 - 172) = (v3 + 231121332) ^ v12;
  *(_DWORD *)(v7 - 168) = (v3 + 231121333) ^ v12;
  *(_DWORD *)(v7 - 200) = v12 + v3 - 1501686959;
  *(_DWORD *)(v7 - 176) = -(int)v12;
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v3 + 1119)))(v7 - 200);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * *(int *)(v7 - 164)))(v14);
}

void sub_10005D250(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 1755732067 * ((a1 & 0xB853BF30 | ~(a1 | 0xB853BF30)) ^ 0x996AFD14);
  uint64_t v2 = (char *)*(&off_10007DD80 + (v1 ^ 0x21D)) - 4;
  uint64_t v3 = *(void *)a1;
  (*(void (**)(char *, uint64_t (*)()))&v2[8 * (v1 ^ 0xA6D)])((char *)*(&off_10007DD80 + (v1 ^ 0x226)) - 8, sub_100054614);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10005D324(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0xDE7FFE73)
                       + 805074912
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0xE6);
  return 0;
}

void sub_10005D35C()
{
}

uint64_t sub_10005D37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v29 = v23 - 298;
  *(void *)(v28 - 128) = v24;
  *(void *)(v28 - 120) = a23;
  *(void *)(v28 - 144) = v26;
  *(void *)(v28 - 136) = a15;
  *(_DWORD *)(v28 - 112) = v23
                         + 1224239923
                         * ((1915206197 - ((v28 - 144) | 0x7227BA35) + ((v28 - 144) | 0x8DD845CA)) ^ 0x7F6BB81D)
                         + 625;
  *(void *)(v28 - 104) = v24;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v23 ^ 0xAE5)))(v28 - 144);
  BOOL v31 = v27 + a19 + 2 >= (((v29 + 362) | 0x104) ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((2 * v31) | (8 * v31) | (v29 + 974))))(v30);
}

uint64_t sub_10005D44C@<X0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W6>, uint64_t a7@<X8>)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((*(unsigned __int8 *)(a7 + v8) == ((a1 ^ (2 * (a6 & v7)) ^ ((a6 & v7 ^ a2) * a3)) ^ a4))
                                * a5) ^ a6 & v7)))();
}

uint64_t sub_10005D48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  return (*(uint64_t (**)(void))(v16 + 8 * ((299 * (a15 == 12 * (v15 ^ 0x22C) + 526346027)) ^ v15)))();
}

uint64_t sub_10005D4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  *(_DWORD *)(STACK[0x2C0] + 360) = 1667755606;
  uint64_t v60 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t *, unint64_t, void, uint64_t, unint64_t *, unint64_t *))(v58 + 8 * (v53 ^ 0xD65u)))(v55, 2, &STACK[0x5D0], STACK[0x438], (v54 - 2079419384), a6, &STACK[0x600], &STACK[0x5A4]);
  int v62 = ((2 * v60) & 0xEFF6F1FC) + (v60 ^ 0xF7FB78FE);
  if (v62 == 133921025)
  {
    LODWORD(STACK[0x46C]) = -526372673;
    return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v58
                                                                                  + 8
                                                                                  * (int)(((STACK[0x600] == 0)
                                                                                         * ((((STACK[0x420] - 597) | 0x400)
                                                                                           - 822) ^ 0x2BA)) ^ (STACK[0x420] + 483))))(v60, STACK[0x600], v61, 3768594526);
  }
  else
  {
    unint64_t v63 = STACK[0x420];
    if (v62 == -134514434)
    {
      STACK[0x3B8] = STACK[0x600];
      LODWORD(STACK[0x3B0]) = STACK[0x5A4];
      JUMPOUT(0x10005D5ACLL);
    }
    int v65 = 1178560073 * ((v56 & 0x4ABC1A0D | ~(v56 | 0x4ABC1A0D)) ^ 0xFD79D90);
    *(void *)(v57 + 8) = a53;
    *(_DWORD *)(v59 - 200) = v65 + v62 - ((2 * v62 + 269028868) & 0x3EBED70E) + 660861577;
    *(_DWORD *)(v59 - 196) = v63 - v65 + 1113;
    int v66 = v63;
    uint64_t v67 = (*(uint64_t (**)(uint64_t))(v58 + 8 * ((int)v63 + 1192)))(v59 - 200);
    return (*(uint64_t (**)(uint64_t))(v58
                                              + 8
                                              * (((STACK[0x600] == 0) * ((((v66 - 597) | 0x400) - 822) ^ 0x2BA)) ^ (v66 + 483))))(v67);
  }
}

uint64_t sub_10005D810()
{
  uint64_t v3 = (*(uint64_t (**)(unint64_t))(v2 + 8 * (v1 ^ 0xCA9)))(STACK[0x258]);
  LODWORD(STACK[0x46C]) = v0;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((STACK[0x600] == 0) * ((((v1 - 597) | 0x400) - 822) ^ 0x2BA)) ^ (v1 + 483))))(v3);
}

void sub_10005D88C()
{
}

void sub_10005D8A4()
{
}

uint64_t sub_10005D8C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  BOOL v10 = v6 < v7;
  unsigned int v11 = v9 + v4 + 1899;
  int v12 = v10 ^ (v11 < ((a4 - 27) | v5) + v9);
  BOOL v13 = v11 < v6;
  if (!v12) {
    BOOL v10 = v13;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * (a4 ^ (4 * v10))))();
}

void sub_10005D90C()
{
}

uint64_t sub_10005DA68(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_100079300 + ((1941 * (*(_DWORD *)(a2 + 4) == 2079419385)) ^ 0x267u)))();
}

uint64_t sub_10005DAA4()
{
  return sub_10005DAB4();
}

uint64_t sub_10005DAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return v5 ^ a5;
}

uint64_t sub_10005DAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, unsigned int a20,uint64_t a21)
{
  unsigned int v26 = 1178560073 * ((&a17 & 0x443E359C | ~(&a17 | 0x443E359C)) ^ 0x155B201);
  a19 = a13;
  a20 = v26 ^ 0x6EE;
  a18 = v26 + 762105055 * v22 + 296806364;
  (*(void (**)(int *))(v23 + 18624))(&a17);
  unsigned int v27 = 1178560073 * (((&a17 | 0xFEB9F472) - (&a17 & 0xFEB9F472)) ^ 0x442D8C10);
  a19 = a13;
  a20 = v27 ^ 0x6EE;
  a18 = v27 + 762105055 * v25 + 296806364;
  (*(void (**)(int *))(v23 + 18624))(&a17);
  unsigned int v28 = 1178560073 * ((1638435589 - (&a17 | 0x61A88B05) + (&a17 | 0x9E5774FA)) ^ 0x24C30C98);
  a20 = (((2 * v21) & 0xFEF1FDAE) - 357567622 + (v21 ^ 0x7F78FED7)) ^ v28;
  a21 = v24;
  a19 = a13;
  a18 = v28 + 1778;
  uint64_t v29 = (*(uint64_t (**)(int *))(v23 + 18544))(&a17);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((805 * (a17 == 526347143)) ^ 0x45Cu)))(v29);
}

unsigned char *sub_10005DCC0(unsigned char *result, unsigned int a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  unint64_t v4 = a3 - v3;
  if (v4 >= 8)
  {
    uint64_t v5 = 0x101010101010101 * a2;
    unint64_t v6 = ((v4 >> 3) + 7) >> 3;
    switch((v4 >> 3) & 7)
    {
      case 1uLL:
        goto LABEL_20;
      case 2uLL:
        goto LABEL_19;
      case 3uLL:
        goto LABEL_18;
      case 4uLL:
        goto LABEL_17;
      case 5uLL:
        goto LABEL_16;
      case 6uLL:
        goto LABEL_15;
      case 7uLL:
        goto LABEL_14;
      default:
        do
        {
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_14:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_15:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_16:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_17:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_18:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_19:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_20:
          *(void *)uint64_t result = v5;
          result += 8;
          --v6;
        }
        while (v6);
        break;
    }
  }
  switch(v4 & 7)
  {
    case 1uLL:
      goto LABEL_28;
    case 2uLL:
      goto LABEL_27;
    case 3uLL:
      goto LABEL_26;
    case 4uLL:
      goto LABEL_25;
    case 5uLL:
      goto LABEL_24;
    case 6uLL:
      goto LABEL_23;
    case 7uLL:
      *result++ = a2;
LABEL_23:
      *result++ = a2;
LABEL_24:
      *result++ = a2;
LABEL_25:
      *result++ = a2;
LABEL_26:
      *result++ = a2;
LABEL_27:
      *result++ = a2;
LABEL_28:
      const void *result = a2;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10005DDAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v21 = a3 + 71;
  int v15 = 628203409 * ((~((v14 - 120) | 0xCC5631E2) + ((v14 - 120) & 0xCC5631E2)) ^ 0xB121C22E);
  int v16 = a3 ^ (a6 + 4);
  *(void *)(v14 - 120) = a10;
  *(_DWORD *)(v14 - 112) = v15 + a3 + 590;
  *(_DWORD *)(v14 - 108) = a13 - v15 + 623924053;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (a3 ^ 0x8D6)))(v14 - 120);
  uint64_t v18 = *(_DWORD *)(v14 - 152) & 0x3F;
  *(unsigned char *)(v14 - 220 + (v18 ^ 0x24)) = 107;
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * ((((v18 ^ 0x24) > (v16 ^ 0xFBDBD338)) * (v21 ^ 0x51B)) ^ a3)))(v17);
}

uint64_t DERDecodeItem(uint64_t a1, unint64_t *a2)
{
  return DERDecodeItemPartialBufferGetLength(a1, a2, 0);
}

uint64_t DERDecodeItemPartialBufferGetLength(uint64_t result, unint64_t *a2, unint64_t *a3)
{
  unint64_t v3 = *(void *)(result + 8);
  if (v3 < 2) {
    return 3;
  }
  unint64_t v4 = *(unsigned char **)result;
  if (*(void *)result == -1) {
    goto LABEL_68;
  }
  uint64_t v5 = &v4[v3];
  unint64_t v6 = v4 + 1;
  unint64_t v7 = v3 - 1;
  unint64_t v8 = *v4 & 0x1F;
  if ((*v4 & 0x1F) != 0x1F)
  {
    int v12 = v4 + 1;
LABEL_20:
    *a2 = v8 | ((unint64_t)(*v4 & 0xE0) << 56);
    if (v12 != (char *)-1)
    {
      if (v12 >= v5 || v12 < v4) {
        goto LABEL_69;
      }
      uint64_t v14 = v12 + 1;
      unint64_t v15 = *v12;
      unint64_t v16 = v7 - 1;
      if ((*v12 & 0x80000000) == 0)
      {
        if (a3 || v16 >= v15)
        {
          if (v16 >= v15) {
            unint64_t v17 = *v12;
          }
          else {
            unint64_t v17 = v7 - 1;
          }
          BOOL v10 = v5 >= v14;
          unint64_t v18 = v5 - v14;
          if (v10 && v4 <= v14 && v17 <= v18)
          {
            a2[1] = (unint64_t)v14;
            a2[2] = v17;
            if (!a3) {
              return 0;
            }
LABEL_34:
            uint64_t result = 0;
            *a3 = v15;
            return result;
          }
LABEL_69:
          __break(0x5519u);
LABEL_70:
          __break(0x5515u);
          return result;
        }
        return 3;
      }
      unint64_t v19 = v15 & 0x7F;
      if ((v15 & 0x7F) > 8) {
        return 3;
      }
      if ((v15 & 0x7F) == 0 || v16 < v19) {
        return 3;
      }
      if (v14 >= v5 || v14 < v4) {
        goto LABEL_69;
      }
      if (!*v14) {
        return 3;
      }
      unint64_t v15 = 0;
      uint64_t v21 = (v19 - 1);
      unint64_t v22 = v7 - v21 - 2;
      unint64_t v23 = (unint64_t)&v12[v21 + 2];
      while (v14 != (unsigned char *)-1)
      {
        if (v14 >= v5) {
          goto LABEL_69;
        }
        BOOL v10 = v16-- != 0;
        if (!v10) {
          goto LABEL_70;
        }
        unsigned int v24 = *v14++;
        unint64_t v15 = (v15 << 8) | v24;
        LODWORD(v19) = v19 - 1;
        if (!v19)
        {
          if (a3) {
            BOOL v25 = 0;
          }
          else {
            BOOL v25 = v15 > v22;
          }
          char v26 = v25;
          uint64_t result = 3;
          if (v15 < 0x80 || (v26 & 1) != 0) {
            return result;
          }
          if (v15 >= v22) {
            unint64_t v27 = v22;
          }
          else {
            unint64_t v27 = v15;
          }
          BOOL v10 = (unint64_t)v5 >= v23;
          unsigned int v28 = &v5[-v23];
          if (!v10 || (unint64_t)v4 > v23 || v27 > (unint64_t)v28) {
            goto LABEL_69;
          }
          a2[1] = v23;
          a2[2] = v27;
          if (a3) {
            goto LABEL_34;
          }
          return 0;
        }
      }
    }
LABEL_68:
    __break(0x5513u);
    goto LABEL_69;
  }
  unsigned int v9 = *v6;
  BOOL v10 = v9 != 128 && v9 >= 0x1F;
  if (!v10) {
    return 3;
  }
  unint64_t v8 = 0;
  uint64_t result = 3;
  while (v7 >= 2)
  {
    unint64_t v11 = v8;
    if (v8 >> 57) {
      break;
    }
    if (v6 == (unsigned __int8 *)-1) {
      goto LABEL_68;
    }
    if (v6 >= v5 || v6 < v4) {
      goto LABEL_69;
    }
    int v12 = (char *)(v6 + 1);
    --v7;
    unsigned __int8 v13 = *v6;
    unint64_t v8 = *v6++ & 0x7F | (v8 << 7);
    if ((v13 & 0x80) == 0)
    {
      if (v11 >> 54) {
        return 3;
      }
      goto LABEL_20;
    }
  }
  return result;
}

uint64_t DERDecodeItemPartialBuffer(uint64_t result, unint64_t *a2, int a3)
{
  unint64_t v3 = *(void *)(result + 8);
  if (v3 < 2) {
    return 3;
  }
  unint64_t v4 = *(unsigned char **)result;
  if (*(void *)result == -1) {
    goto LABEL_54;
  }
  uint64_t v5 = &v4[v3];
  unint64_t v6 = v4 + 1;
  unint64_t v7 = v3 - 1;
  unint64_t v8 = *v4 & 0x1F;
  if ((*v4 & 0x1F) != 0x1F)
  {
    int v12 = v4 + 1;
LABEL_20:
    *a2 = v8 | ((unint64_t)(*v4 & 0xE0) << 56);
    if (v12 != (char *)-1)
    {
      if (v12 >= v5 || v12 < v4) {
        goto LABEL_55;
      }
      uint64_t v14 = v12 + 1;
      unint64_t v15 = *v12;
      unint64_t v16 = v7 - 1;
      if ((*v12 & 0x80000000) == 0)
      {
        BOOL v17 = v16 < v15 && a3 == 0;
        unint64_t v18 = (unint64_t)(v12 + 1);
        if (v17) {
          return 3;
        }
LABEL_28:
        if (v15 > (~v18 & 0x7FFFFFFFFFFFFFFFLL)) {
          return 7;
        }
        if (v18 <= v18 + v15)
        {
          uint64_t result = 0;
          a2[1] = v18;
          a2[2] = v15;
          return result;
        }
        goto LABEL_55;
      }
      unint64_t v19 = v15 & 0x7F;
      if ((v15 & 0x7F) > 8) {
        return 3;
      }
      if ((v15 & 0x7F) == 0 || v16 < v19) {
        return 3;
      }
      if (v14 >= v5 || v14 < v4)
      {
LABEL_55:
        __break(0x5519u);
LABEL_56:
        __break(0x5515u);
        return result;
      }
      if (!*v14) {
        return 3;
      }
      unint64_t v15 = 0;
      uint64_t v21 = (v19 - 1);
      unint64_t v22 = v7 - v21 - 2;
      unint64_t v18 = (unint64_t)&v12[v21 + 2];
      while (v14 != (unsigned char *)-1)
      {
        if (v14 >= v5) {
          goto LABEL_55;
        }
        BOOL v10 = v16-- != 0;
        if (!v10) {
          goto LABEL_56;
        }
        unsigned int v23 = *v14++;
        unint64_t v15 = (v15 << 8) | v23;
        LODWORD(v19) = v19 - 1;
        if (!v19)
        {
          if (v15 <= v22) {
            char v24 = 1;
          }
          else {
            char v24 = a3;
          }
          uint64_t result = 3;
          if (v15 >= 0x80 && (v24 & 1) != 0) {
            goto LABEL_28;
          }
          return result;
        }
      }
    }
LABEL_54:
    __break(0x5513u);
    goto LABEL_55;
  }
  unsigned int v9 = *v6;
  BOOL v10 = v9 != 128 && v9 >= 0x1F;
  if (!v10) {
    return 3;
  }
  unint64_t v8 = 0;
  uint64_t result = 3;
  while (v7 >= 2)
  {
    unint64_t v11 = v8;
    if (v8 >> 57) {
      break;
    }
    if (v6 == (unsigned __int8 *)-1) {
      goto LABEL_54;
    }
    if (v6 >= v5 || v6 < v4) {
      goto LABEL_55;
    }
    int v12 = (char *)(v6 + 1);
    --v7;
    unsigned __int8 v13 = *v6;
    unint64_t v8 = *v6++ & 0x7F | (v8 << 7);
    if ((v13 & 0x80) == 0)
    {
      if (v11 >> 54) {
        return 3;
      }
      goto LABEL_20;
    }
  }
  return result;
}

uint64_t DERParseBitString(uint64_t result, unint64_t *a2, unsigned char *a3)
{
  *a3 = 0;
  *a2 = 0;
  a2[1] = 0;
  if (!*(void *)(result + 8)) {
    return 3;
  }
  unsigned int v3 = **(unsigned __int8 **)result;
  *a3 = v3;
  uint64_t v4 = *(void *)(result + 8);
  if (v4 != 1)
  {
    if (v3 <= 7)
    {
      unint64_t v5 = v4 - 1;
      if (!v4)
      {
LABEL_20:
        __break(0x5515u);
        goto LABEL_21;
      }
      unint64_t v6 = *(void *)result;
      unint64_t v7 = *(void *)result + v4;
      unint64_t v8 = (unsigned __int8 *)(*(void *)result + v5);
      if ((unint64_t)v8 >= v7 || (unint64_t)v8 < v6)
      {
LABEL_19:
        __break(0x5519u);
        goto LABEL_20;
      }
      if (((0xFFu >> (8 - v3)) & *v8) == 0)
      {
        if (v6 == -1)
        {
LABEL_21:
          __break(0x5513u);
          return result;
        }
        unint64_t v10 = v6 + 1;
        if (v6 + 1 <= v7 && v6 <= v10)
        {
          uint64_t result = 0;
          *a2 = v10;
          a2[1] = v5;
          return result;
        }
        goto LABEL_19;
      }
    }
    return 3;
  }
  if (v3) {
    return 3;
  }
  else {
    return 0;
  }
}

uint64_t DERParseBoolean(unsigned __int8 **a1, BOOL *a2)
{
  if (a1[1] != (unsigned __int8 *)1) {
    return 3;
  }
  int v2 = **a1;
  if (v2 != 255 && v2 != 0) {
    return 3;
  }
  uint64_t result = 0;
  *a2 = v2 != 0;
  return result;
}

uint64_t DERParseBooleanWithDefault(unsigned __int8 **a1, BOOL a2, BOOL *a3)
{
  unsigned int v3 = a1[1];
  if (!v3) {
    goto LABEL_9;
  }
  if (v3 == (unsigned __int8 *)1)
  {
    int v4 = **a1;
    if (v4 == 255 || v4 == 0)
    {
      a2 = v4 != 0;
LABEL_9:
      uint64_t result = 0;
      *a3 = a2;
      return result;
    }
  }
  return 3;
}

uint64_t DERParseInteger(char **a1, _DWORD *a2)
{
  unint64_t v4 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t result = DERParseInteger64(a1, &v4);
  if (!result)
  {
    if (HIDWORD(v4))
    {
      return 7;
    }
    else
    {
      uint64_t result = 0;
      *a2 = v4;
    }
  }
  return result;
}

uint64_t DERParseInteger64(char **a1, unint64_t *a2)
{
  unint64_t v2 = (unint64_t)a1[1];
  if (!v2) {
    return 3;
  }
  unsigned int v3 = (unsigned __int8 *)*a1;
  if (**a1 < 0) {
    return 3;
  }
  if (**a1)
  {
    if (v2 > 8) {
      return 7;
    }
    goto LABEL_10;
  }
  if (v2 >= 2)
  {
    if (((char)v3[1] & 0x80000000) == 0) {
      return 3;
    }
    if (v2 > 9) {
      return 7;
    }
  }
LABEL_10:
  unint64_t v5 = 0;
  do
  {
    unsigned int v6 = *v3++;
    unint64_t v5 = v6 | (v5 << 8);
    --v2;
  }
  while (v2);
  uint64_t result = 0;
  *a2 = v5;
  return result;
}

uint64_t DERDecodeSeqInit(uint64_t a1, void *a2, void *a3)
{
  memset(v8, 170, sizeof(v8));
  uint64_t result = DERDecodeItemPartialBufferGetLength(a1, v8, 0);
  if (!result)
  {
    unint64_t v6 = v8[0];
    *a2 = v8[0];
    if (v6 >> 1 == 0x1000000000000008)
    {
      if (__CFADD__(v8[1], v8[2]))
      {
        __break(0x5513u);
      }
      else
      {
        unint64_t v7 = v8[1] + v8[2];
        if (v8[1] <= v8[1] + v8[2])
        {
          uint64_t result = 0;
          *a3 = v8[1];
          a3[1] = v7;
          return result;
        }
      }
      __break(0x5519u);
    }
    else
    {
      return 2;
    }
  }
  return result;
}

unint64_t *DERDecodeSeqContentInit(unint64_t *result, unint64_t *a2)
{
  unint64_t v2 = *result;
  unint64_t v3 = result[1];
  if (__CFADD__(*result, v3))
  {
    __break(0x5513u);
  }
  else
  {
    unint64_t v4 = v2 + v3;
    if (v2 <= v4)
    {
      *a2 = v2;
      a2[1] = v4;
      return 0;
    }
  }
  __break(0x5519u);
  return result;
}

uint64_t DERDecodeSeqNext(unint64_t *a1, unint64_t *a2)
{
  v10[0] = 0;
  unint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  if (*a1 >= v3) {
    return 1;
  }
  v10[0] = *a1;
  v10[1] = v3 - v2;
  uint64_t result = DERDecodeItemPartialBufferGetLength((uint64_t)v10, a2, 0);
  if (!result)
  {
    unint64_t v8 = a2[1];
    unint64_t v7 = a2[2];
    if (!__CFADD__(v8, v7))
    {
      unint64_t v9 = v8 + v7;
      if (v9 <= a1[1] && *a1 <= v9)
      {
        uint64_t result = 0;
        *a1 = v9;
        return result;
      }
      __break(0x5519u);
    }
    __break(0x5513u);
  }
  return result;
}

uint64_t DERParseSequenceToObject(uint64_t a1, unsigned int a2, uint64_t a3, unint64_t a4, unint64_t a5, size_t a6)
{
  memset(v12, 170, sizeof(v12));
  uint64_t result = DERDecodeItemPartialBufferGetLength(a1, v12, 0);
  if (!result)
  {
    if (v12[0] == 0x2000000000000010) {
      return DERParseSequenceContentToObject(&v12[1], a2, a3, a4, a5, a6);
    }
    else {
      return 2;
    }
  }
  return result;
}

uint64_t DERParseSequenceContentToObject(unint64_t *a1, unsigned int a2, uint64_t a3, unint64_t a4, unint64_t a5, size_t a6)
{
  unint64_t v32 = 0;
  if (a6)
  {
    if (a6 > a5) {
      goto LABEL_59;
    }
    bzero((void *)a4, a6);
  }
  unint64_t v10 = *a1;
  unint64_t v11 = a1[1];
  if (__CFADD__(*a1, v11)) {
    goto LABEL_58;
  }
  unint64_t v12 = v10 + v11;
  if (v10 > v12) {
LABEL_59:
  }
    __break(0x5519u);
  unint64_t v32 = *a1;
  unint64_t v33 = v12;
  if (a2)
  {
    unsigned __int16 v13 = 0;
    uint64_t v29 = (char *)(a4 + a5);
    while (1)
    {
      memset(v31, 170, sizeof(v31));
      unint64_t v15 = v32;
      unint64_t v14 = v33;
      uint64_t result = DERDecodeSeqNext(&v32, v31);
      if (result) {
        break;
      }
      if (a2 <= v13) {
        return 2;
      }
      while (1)
      {
        if (24 * (__int16)v13 > (unint64_t)~a3) {
          goto LABEL_58;
        }
        unsigned __int16 v17 = v13;
        __int16 v18 = *(_WORD *)(a3 + 24 * v13 + 16);
        if ((v18 & 2) != 0 || v31[0] == *(void *)(a3 + 24 * v13 + 8)) {
          break;
        }
        uint64_t result = 2;
        if (v18)
        {
          ++v13;
          if (a2 > (unsigned __int16)(v17 + 1)) {
            continue;
          }
        }
        return result;
      }
      if ((v18 & 4) == 0)
      {
        unint64_t v19 = *(void *)(a3 + 24 * v13);
        if (v19 > 0xFFFFFFFFFFFFFFEFLL || v19 + 16 > a5) {
          return 7;
        }
        if (v19 > ~a4) {
          goto LABEL_58;
        }
        uint64_t v21 = (char *)(a4 + v19);
        if (v21 >= v29 || (unint64_t)v21 < a4) {
          goto LABEL_59;
        }
        *(_OWORD *)uint64_t v21 = *(_OWORD *)&v31[1];
        if ((v18 & 8) != 0)
        {
          if (v15 >= v31[1])
          {
            if (v21 + 16 <= v29 && v14 >= v15 && *((void *)v21 + 1) <= v14 - v15)
            {
              *(void *)uint64_t v21 = v15;
              return 3;
            }
            goto LABEL_59;
          }
          if (v21 + 16 > v29) {
            goto LABEL_59;
          }
          uint64_t v23 = *((void *)v21 + 1);
          unint64_t v24 = v23 + v31[1] - v15;
          if (__CFADD__(v23, v31[1] - v15))
          {
            __break(0x5500u);
            return result;
          }
          if (v14 < v15 || v24 > v14 - v15) {
            goto LABEL_59;
          }
          *(void *)uint64_t v21 = v15;
          *((void *)v21 + 1) = v24;
        }
      }
      ++v13;
      if (a2 == (unsigned __int16)(v17 + 1))
      {
        if (!__CFADD__(v31[1], v31[2]))
        {
          unint64_t v28 = a1[1];
          if (!__CFADD__(*a1, v28))
          {
            unint64_t v10 = v31[1] + v31[2];
            unint64_t v12 = *a1 + v28;
            goto LABEL_47;
          }
        }
LABEL_58:
        __break(0x5513u);
        goto LABEL_59;
      }
      if (a2 <= (unsigned __int16)(v17 + 1))
      {
        unint64_t v10 = v32;
        unint64_t v12 = v33;
        goto LABEL_47;
      }
    }
    if (result == 1)
    {
      if (a2 <= v13)
      {
        return 0;
      }
      else
      {
        BOOL v25 = (__int16 *)(a3 + 24 * v13 + 16);
        unint64_t v26 = a2 - (unint64_t)v13;
        uint64_t result = 0;
        while (1)
        {
          __int16 v27 = *v25;
          v25 += 12;
          if ((v27 & 1) == 0) {
            break;
          }
          if (!--v26) {
            return result;
          }
        }
        return 5;
      }
    }
  }
  else
  {
LABEL_47:
    if (v10 == v12) {
      return 0;
    }
    else {
      return 3;
    }
  }
  return result;
}

uint64_t DERParseSequence(uint64_t result, unsigned int a2, uint64_t a3, unint64_t a4, size_t a5)
{
  if ((a4 | 0x7FFFFFFFFFFFFFFFLL) >= a4) {
    return DERParseSequenceToObject(result, a2, a3, a4, ~a4 & 0x7FFFFFFFFFFFFFFFLL, a5);
  }
  __break(0x5519u);
  return result;
}

unint64_t *DERParseSequenceContent(unint64_t *result, unsigned int a2, uint64_t a3, unint64_t a4, size_t a5)
{
  if ((a4 | 0x7FFFFFFFFFFFFFFFLL) >= a4) {
    return (unint64_t *)DERParseSequenceContentToObject(result, a2, a3, a4, ~a4 & 0x7FFFFFFFFFFFFFFFLL, a5);
  }
  __break(0x5519u);
  return result;
}

uint64_t DERDecodeSequenceWithBlock(uint64_t a1, uint64_t a2)
{
  memset(v4, 170, sizeof(v4));
  uint64_t result = DERDecodeItemPartialBufferGetLength(a1, v4, 0);
  if (!result)
  {
    if (v4[0] - 0x2000000000000012 >= 0xFFFFFFFFFFFFFFFELL) {
      return DERDecodeSequenceContentWithBlock(&v4[1], a2);
    }
    else {
      return 2;
    }
  }
  return result;
}

uint64_t DERDecodeSequenceContentWithBlock(unint64_t *a1, uint64_t a2)
{
  v9[0] = 0;
  unint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  if (__CFADD__(*a1, v3))
  {
    __break(0x5513u);
LABEL_13:
    __break(0x5519u);
  }
  unint64_t v4 = v2 + v3;
  if (v2 > v4) {
    goto LABEL_13;
  }
  v9[0] = *a1;
  v9[1] = v4;
  memset(v8, 170, sizeof(v8));
  char v7 = 0;
  while (1)
  {
    LODWORD(result) = DERDecodeSeqNext(v9, v8);
    if (result) {
      break;
    }
    LODWORD(result) = (*(uint64_t (**)(uint64_t, unint64_t *, char *))(a2 + 16))(a2, v8, &v7);
    if (result) {
      break;
    }
    if (v7) {
      return 0;
    }
  }
  if (result <= 1) {
    return 0;
  }
  else {
    return result;
  }
}

void __init_logging_modules_block_invoke_cold_1(uint8_t *buf, int a2, _DWORD *a3)
{
  *(_DWORD *)buf = 67109120;
  *a3 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Category missing for logging module %d!\n(Check LoggingModuleEntry_t table)", buf, 8u);
}

void logObjectForModule_cold_1()
{
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_1((void *)&_mh_execute_header, &_os_log_default, v0, "Make sure you have called init_logging()!\ngLogObjects: %p, gNumLogObjects: %d", v1, v2, v3, v4, v5);
}

void _splitASN1Tokens_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_5((void *)&_mh_execute_header, v0, v1, "tokenArray: %@", v2, v3, v4, v5, v6);
}

void _splitASN1Tokens_cold_3(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_15(a1, a2);
  *uint64_t v3 = 134217984;
  uint64_t *v2 = v4;
  OUTLINED_FUNCTION_16((void *)&_mh_execute_header, v5, v6, "pItemBegin: %p");
}

void _splitASN1Tokens_cold_4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_15(a1, a2);
  *uint64_t v3 = 134217984;
  uint64_t *v2 = v4;
  OUTLINED_FUNCTION_16((void *)&_mh_execute_header, v5, v6, "pItemEnd: %p");
}

void _splitASN1Tokens_cold_5(uint8_t *buf, _DWORD *a2, os_log_t log)
{
  *(_DWORD *)buf = 67109120;
  *a2 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "ret: %d", buf, 8u);
}

void _splitASN1Tokens_cold_7(uint64_t a1)
{
  obfuscatedPointer(a1);
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_4((void *)&_mh_execute_header, v1, v2, "pDataEnd: %p", v3, v4, v5, v6, v7);
}

void _splitASN1Tokens_cold_9(uint64_t a1)
{
  obfuscatedPointer(a1);
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_4((void *)&_mh_execute_header, v1, v2, "pItemBegin: %p", v3, v4, v5, v6, v7);
}

void _splitASN1Tokens_cold_11(void *a1)
{
  [a1 length];
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_4((void *)&_mh_execute_header, v1, v2, "tokens.length: %lu", v3, v4, v5, v6, v7);
}

void _splitASN1Tokens_cold_13()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_5((void *)&_mh_execute_header, v0, v1, "tokens: %@", v2, v3, v4, v5, v6);
}

void __init_logging_signpost_modules_block_invoke_cold_1(uint8_t *buf, int a2, _DWORD *a3)
{
  *(_DWORD *)buf = 67109120;
  *a3 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Category missing for logging module %d!\n(Check LoggingSignpostModuleEntry_t table)", buf, 8u);
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return _CFEqual(cf1, cf2);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return _CFGetTypeID(cf);
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeID CFStringGetTypeID(void)
{
  return _CFStringGetTypeID();
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_barrier_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

void free(void *a1)
{
}

mach_msg_return_t mach_msg(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify)
{
  return _mach_msg(msg, option, send_size, rcv_size, rcv_name, timeout, notify);
}

void mach_msg_destroy(mach_msg_header_t *a1)
{
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_malloc(size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void mig_dealloc_reply_port(mach_port_t reply_port)
{
}

mach_port_t mig_get_reply_port(void)
{
  return _mig_get_reply_port();
}

void mig_put_reply_port(mach_port_t reply_port)
{
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

int printf(const char *a1, ...)
{
  return _printf(a1);
}

objc_method_description *__cdecl protocol_copyMethodDescriptionList(Protocol *p, BOOL isRequiredMethod, BOOL isInstanceMethod, unsigned int *outCount)
{
  return _protocol_copyMethodDescriptionList(p, isRequiredMethod, isInstanceMethod, outCount);
}

int putchar(int a1)
{
  return _putchar(a1);
}

uint64_t random(void)
{
  return _random();
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return _snprintf(__str, __size, __format);
}

size_t strlen(const char *__s)
{
  return _strlen(__s);
}

kern_return_t task_info(task_name_t target_task, task_flavor_t flavor, task_info_t task_info_out, mach_msg_type_number_t *task_info_outCnt)
{
  return _task_info(target_task, flavor, task_info_out, task_info_outCnt);
}

BOOLean_t voucher_mach_msg_set(mach_msg_header_t *msg)
{
  return _voucher_mach_msg_set(msg);
}

id objc_msgSend_TTL(void *a1, const char *a2, ...)
{
  return [a1 TTL];
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return [a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return [a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return [a1 UUIDString];
}

id objc_msgSend__checkExpiration(void *a1, const char *a2, ...)
{
  return [a1 _checkExpiration];
}

id objc_msgSend__close(void *a1, const char *a2, ...)
{
  return [a1 _close];
}

id objc_msgSend__init(void *a1, const char *a2, ...)
{
  return [a1 _init];
}

id objc_msgSend__openFairPlaySAPSession(void *a1, const char *a2, ...)
{
  return [a1 _openFairPlaySAPSession];
}

id objc_msgSend__selectedAPIServer(void *a1, const char *a2, ...)
{
  return [a1 _selectedAPIServer];
}

id objc_msgSend__selectedFairPlaySAPServer(void *a1, const char *a2, ...)
{
  return [a1 _selectedFairPlaySAPServer];
}

id objc_msgSend_allHTTPHeaderFields(void *a1, const char *a2, ...)
{
  return [a1 allHTTPHeaderFields];
}

id objc_msgSend_allHeaderFields(void *a1, const char *a2, ...)
{
  return [a1 allHeaderFields];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return [a1 array];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return [a1 BOOLValue];
}

id objc_msgSend_bypassFairPlaySAPSignatureVerification(void *a1, const char *a2, ...)
{
  return [a1 bypassFairPlaySAPSignatureVerification];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return [a1 bytes];
}

id objc_msgSend_certStatusCache(void *a1, const char *a2, ...)
{
  return [a1 certStatusCache];
}

id objc_msgSend_certStatusCacheVersion(void *a1, const char *a2, ...)
{
  return [a1 certStatusCacheVersion];
}

id objc_msgSend_close(void *a1, const char *a2, ...)
{
  return [a1 close];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return [a1 code];
}

id objc_msgSend_completionQueue(void *a1, const char *a2, ...)
{
  return [a1 completionQueue];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return [a1 count];
}

id objc_msgSend_countryCode(void *a1, const char *a2, ...)
{
  return [a1 countryCode];
}

id objc_msgSend_currentConnection(void *a1, const char *a2, ...)
{
  return [a1 currentConnection];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return [a1 data];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return [a1 date];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return [a1 delegate];
}

id objc_msgSend_delegateQueue(void *a1, const char *a2, ...)
{
  return [a1 delegateQueue];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return [a1 description];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return [a1 dictionary];
}

id objc_msgSend_disableFairPlaySAP(void *a1, const char *a2, ...)
{
  return [a1 disableFairPlaySAP];
}

id objc_msgSend_distantFuture(void *a1, const char *a2, ...)
{
  return [a1 distantFuture];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return [a1 doubleValue];
}

id objc_msgSend_ephemeralSessionConfiguration(void *a1, const char *a2, ...)
{
  return [a1 ephemeralSessionConfiguration];
}

id objc_msgSend_expiration(void *a1, const char *a2, ...)
{
  return [a1 expiration];
}

id objc_msgSend_exportedObject(void *a1, const char *a2, ...)
{
  return [a1 exportedObject];
}

id objc_msgSend_fairPlaySAPSession(void *a1, const char *a2, ...)
{
  return [a1 fairPlaySAPSession];
}

id objc_msgSend_forceFairPlaySAPFailure(void *a1, const char *a2, ...)
{
  return [a1 forceFairPlaySAPFailure];
}

id objc_msgSend_forceNetworkFailure(void *a1, const char *a2, ...)
{
  return [a1 forceNetworkFailure];
}

id objc_msgSend_forceTokenActivationFailure(void *a1, const char *a2, ...)
{
  return [a1 forceTokenActivationFailure];
}

id objc_msgSend_forceTokenConfirmationFailure(void *a1, const char *a2, ...)
{
  return [a1 forceTokenConfirmationFailure];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return [a1 hash];
}

id objc_msgSend_hexadecimalCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 hexadecimalCharacterSet];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return [a1 intValue];
}

id objc_msgSend_internalQueue(void *a1, const char *a2, ...)
{
  return [a1 internalQueue];
}

id objc_msgSend_invalidateAndCancel(void *a1, const char *a2, ...)
{
  return [a1 invalidateAndCancel];
}

id objc_msgSend_invertedSet(void *a1, const char *a2, ...)
{
  return [a1 invertedSet];
}

id objc_msgSend_isInternalBuild(void *a1, const char *a2, ...)
{
  return [a1 isInternalBuild];
}

id objc_msgSend_languageCode(void *a1, const char *a2, ...)
{
  return [a1 languageCode];
}

id objc_msgSend_languageCodeAndCountryCode(void *a1, const char *a2, ...)
{
  return [a1 languageCodeAndCountryCode];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return [a1 length];
}

id objc_msgSend_localeIdentifier(void *a1, const char *a2, ...)
{
  return [a1 localeIdentifier];
}

id objc_msgSend_mutableBytes(void *a1, const char *a2, ...)
{
  return [a1 mutableBytes];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return [a1 mutableCopy];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return [a1 null];
}

id objc_msgSend_pairingTable(void *a1, const char *a2, ...)
{
  return [a1 pairingTable];
}

id objc_msgSend_pairingTableVersion(void *a1, const char *a2, ...)
{
  return [a1 pairingTableVersion];
}

id objc_msgSend_pairingTokenExpirationS(void *a1, const char *a2, ...)
{
  return [a1 pairingTokenExpirationS];
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return [a1 resume];
}

id objc_msgSend_serviceListener(void *a1, const char *a2, ...)
{
  return [a1 serviceListener];
}

id objc_msgSend_sessionContext(void *a1, const char *a2, ...)
{
  return [a1 sessionContext];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return [a1 set];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return [a1 sharedInstance];
}

id objc_msgSend_sharedSession(void *a1, const char *a2, ...)
{
  return [a1 sharedSession];
}

id objc_msgSend_spoofPPIDMetadata(void *a1, const char *a2, ...)
{
  return [a1 spoofPPIDMetadata];
}

id objc_msgSend_spoofTokenActivation(void *a1, const char *a2, ...)
{
  return [a1 spoofTokenActivation];
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return [a1 state];
}

id objc_msgSend_statusCode(void *a1, const char *a2, ...)
{
  return [a1 statusCode];
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return [a1 timeIntervalSince1970];
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return [a1 timeIntervalSinceNow];
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedLongLongValue];
}

id objc_msgSend_urlSession(void *a1, const char *a2, ...)
{
  return [a1 urlSession];
}

id objc_msgSend_userDefaults(void *a1, const char *a2, ...)
{
  return [a1 userDefaults];
}

id objc_msgSend_userDefaultsQueue(void *a1, const char *a2, ...)
{
  return [a1 userDefaultsQueue];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return [a1 userInfo];
}