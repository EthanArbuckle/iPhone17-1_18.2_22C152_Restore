uint64_t sub_1ACBED044(uint64_t a1)
{
  return sub_1ACBEE140(a1, &qword_1E99F2AE0);
}

uint64_t sub_1ACBED050()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2AF0);
  uint64_t v3 = sub_1ACE77218();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_39;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  v32 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_40;
    }
    if (v14 >= v31) {
      break;
    }
    unint64_t v15 = v32[v14];
    ++v9;
    if (!v15)
    {
      int64_t v9 = v14 + 1;
      if (v14 + 1 >= v31) {
        break;
      }
      unint64_t v15 = v32[v9];
      if (!v15)
      {
        int64_t v9 = v14 + 2;
        if (v14 + 2 >= v31) {
          break;
        }
        unint64_t v15 = v32[v9];
        if (!v15)
        {
          int64_t v16 = v14 + 3;
          if (v16 >= v31) {
            break;
          }
          unint64_t v15 = v32[v16];
          if (!v15)
          {
            while (1)
            {
              int64_t v9 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_41;
              }
              if (v9 >= v31) {
                goto LABEL_35;
              }
              unint64_t v15 = v32[v9];
              ++v16;
              if (v15) {
                goto LABEL_23;
              }
            }
          }
          int64_t v9 = v16;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v13;
    uint64_t v18 = *(void *)v17;
    int v19 = *(unsigned __int8 *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 9);
    sub_1ACE77B18();
    sub_1ACE77B38();
    if (v19 != 1) {
      sub_1ACE77B58();
    }
    sub_1ACE76108();
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_1ACE77B78();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v22) >> 6;
    do
    {
      if (++v24 == v26 && (v25 & 1) != 0)
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        JUMPOUT(0x1ACBED410);
      }
      BOOL v27 = v24 == v26;
      if (v24 == v26) {
        unint64_t v24 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v8 + 8 * v24);
    }
    while (v28 == -1);
    unint64_t v10 = __clz(__rbit64(~v28)) + (v24 << 6);
LABEL_7:
    *(void *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = *(void *)(v4 + 48) + 16 * v10;
    *(void *)uint64_t v11 = v18;
    *(unsigned char *)(v11 + 8) = v19;
    *(unsigned char *)(v11 + 9) = v20;
    ++*(void *)(v4 + 16);
  }
LABEL_35:
  swift_release();
  v1 = v0;
  uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
  if (v29 > 63) {
    bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v32 = -1 << v29;
  }
  *(void *)(v2 + 16) = 0;
LABEL_39:
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1ACBED420(uint64_t a1)
{
  return sub_1ACBEE140(a1, &qword_1EB769020);
}

uint64_t sub_1ACBED42C()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F35D0);
  uint64_t v3 = sub_1ACE77218();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = v6[v11];
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = v6[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = v6[v11];
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_1ACE77B18();
    sub_1ACE76108();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1ACE77B78();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1ACBED790);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1ACBED7A4()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0FA8);
  uint64_t result = sub_1ACE77218();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v9) {
          goto LABEL_33;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v16 = v29[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v29 = -1 << v28;
                }
                v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v29[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 16 * v14;
      uint64_t v19 = *(void *)v18;
      char v20 = *(unsigned char *)(v18 + 8);
      sub_1ACE77B18();
      sub_1ACE77B28();
      uint64_t result = sub_1ACE77B78();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
      *(void *)uint64_t v12 = v19;
      *(unsigned char *)(v12 + 8) = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1ACBEDA94()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769000);
  uint64_t v3 = sub_1ACE77218();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    v32 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v31 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v15 >= v31) {
          goto LABEL_36;
        }
        unint64_t v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v31) {
            goto LABEL_36;
          }
          unint64_t v16 = v32[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v31) {
              goto LABEL_36;
            }
            unint64_t v16 = v32[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_36:
                swift_release();
                v1 = v0;
                uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
                if (v30 > 63) {
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v32 = -1 << v30;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_42;
                  }
                  if (v10 >= v31) {
                    goto LABEL_36;
                  }
                  unint64_t v16 = v32[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = v2;
      uint64_t v19 = *(void *)(v2 + 48) + 24 * v14;
      uint64_t v20 = *(void *)v19;
      uint64_t v21 = *(void *)(v19 + 8);
      int v22 = *(unsigned __int8 *)(v19 + 16);
      sub_1ACE77B18();
      sub_1ACE77B28();
      if (v22 == 1) {
        sub_1ACE76108();
      }
      else {
        sub_1ACE77B58();
      }
      uint64_t result = sub_1ACE77B78();
      uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
      *(void *)uint64_t v12 = v20;
      *(void *)(v12 + 8) = v21;
      *(unsigned char *)(v12 + 16) = v22;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v18;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1ACBEDDD0()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F35C8);
  uint64_t v3 = sub_1ACE77218();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    v32 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v31 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        if (v15 >= v31) {
          goto LABEL_38;
        }
        unint64_t v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v31) {
            goto LABEL_38;
          }
          unint64_t v16 = v32[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v31) {
              goto LABEL_38;
            }
            unint64_t v16 = v32[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_38:
                swift_release();
                v1 = v0;
                uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
                if (v30 > 63) {
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v32 = -1 << v30;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_44;
                  }
                  if (v10 >= v31) {
                    goto LABEL_38;
                  }
                  unint64_t v16 = v32[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 24 * v14;
      uint64_t v20 = *(void **)v18;
      uint64_t v19 = *(void *)(v18 + 8);
      int v21 = *(unsigned __int8 *)(v18 + 16);
      sub_1ACE77B18();
      if (v21)
      {
        sub_1ACE77B28();
        if (v21 == 1)
        {
          id v22 = v20;
          sub_1ACE76F78();
          sub_1ACA50D28(v20, v19, 1);
        }
        else
        {
          sub_1ACE76108();
        }
      }
      else
      {
        sub_1ACE77B28();
        sub_1ACE77B58();
      }
      uint64_t result = sub_1ACE77B78();
      uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
      *(void *)uint64_t v12 = v20;
      *(void *)(v12 + 8) = v19;
      *(unsigned char *)(v12 + 16) = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1ACBEE134(uint64_t a1)
{
  return sub_1ACBEE140(a1, &qword_1E99F5310);
}

uint64_t sub_1ACBEE140(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_1ACE77218();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_1ACE76F58();
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1ACBEE3DC()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F35C0);
  uint64_t v3 = sub_1ACE77218();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
      sub_1ACE77B18();
      sub_1ACE76108();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1ACE77B78();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1ACBEE6B0()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F35B8);
  uint64_t v3 = sub_1ACE77218();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v15 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v16 = v15 | (v12 << 6);
      }
      else
      {
        int64_t v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v9) {
          goto LABEL_33;
        }
        unint64_t v18 = v6[v17];
        ++v12;
        if (!v18)
        {
          int64_t v12 = v17 + 1;
          if (v17 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v18 = v6[v12];
          if (!v18)
          {
            int64_t v12 = v17 + 2;
            if (v17 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v18 = v6[v12];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v28;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v18 = v6[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v12 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v6[v12];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      uint64_t v20 = *(void *)(v2 + 48) + 40 * v16;
      long long v29 = *(_OWORD *)v20;
      long long v30 = *(_OWORD *)(v20 + 16);
      uint64_t v31 = *(void *)(v20 + 32);
      uint64_t result = sub_1ACE771D8();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v4 + 48) + 40 * v13;
      *(_OWORD *)uint64_t v14 = v29;
      *(_OWORD *)(v14 + 16) = v30;
      *(void *)(v14 + 32) = v31;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1ACBEE97C()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F35B0);
  uint64_t v3 = sub_1ACE77218();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    long long v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1ACE77B18();
      sub_1ACE77D08();
      uint64_t result = sub_1ACE77B78();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

id sub_1ACBEEC5C()
{
  return sub_1ACBEFEC4((uint64_t *)&unk_1E99F5300);
}

void *sub_1ACBEEC68()
{
  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769008);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77208();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    int64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ACBEEE1C()
{
  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A848);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77208();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ACBEEFB4()
{
  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F35A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77208();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ACBEF164()
{
  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2AE8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77208();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ACBEF2FC()
{
  v1 = v0;
  uint64_t v2 = sub_1ACE75118();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770728);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1ACE77208();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    uint64_t *v1 = v8;
    return result;
  }
  int64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1ACBEF5A0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771920);
  uint64_t v28 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1ACE77208();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v28 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 56);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 56);
  if (v3 != v1 || (unint64_t)result >= v1 + 56 + 8 * v5) {
    uint64_t result = memmove(result, __src, 8 * v5);
  }
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v11) {
      goto LABEL_28;
    }
    unint64_t v26 = *((void *)__src + v25);
    ++v7;
    if (!v26)
    {
      int64_t v7 = v25 + 1;
      if (v25 + 1 >= v11) {
        goto LABEL_28;
      }
      unint64_t v26 = *((void *)__src + v7);
      if (!v26)
      {
        int64_t v7 = v25 + 2;
        if (v25 + 2 >= v11) {
          goto LABEL_28;
        }
        unint64_t v26 = *((void *)__src + v7);
        if (!v26) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v10 = (v26 - 1) & v26;
    unint64_t v13 = __clz(__rbit64(v26)) + (v7 << 6);
LABEL_12:
    uint64_t v14 = 72 * v13;
    uint64_t v15 = *(void *)(v1 + 48) + v14;
    uint64_t v16 = *(void *)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
    char v18 = *(unsigned char *)(v15 + 24);
    uint64_t v19 = *(void *)(v15 + 32);
    uint64_t v20 = *(void *)(v15 + 40);
    unint64_t v21 = *(void *)(v15 + 48);
    uint64_t v22 = *(void *)(v15 + 56);
    uint64_t v23 = *(void *)(v15 + 64);
    uint64_t v24 = *(void *)(v3 + 48) + v14;
    *(void *)uint64_t v24 = *(void *)v15;
    *(void *)(v24 + 8) = v16;
    *(void *)(v24 + 16) = v17;
    *(unsigned char *)(v24 + 24) = v18;
    *(void *)(v24 + 32) = v19;
    *(void *)(v24 + 40) = v20;
    *(void *)(v24 + 48) = v21;
    *(void *)(v24 + 56) = v22;
    *(void *)(v24 + 64) = v23;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_1ACA50D88(v19, v20, v21);
  }
  int64_t v27 = v25 + 3;
  if (v27 >= v11) {
    goto LABEL_28;
  }
  unint64_t v26 = *((void *)__src + v27);
  if (v26)
  {
    int64_t v7 = v27;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v7 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v7 >= v11) {
      goto LABEL_28;
    }
    unint64_t v26 = *((void *)__src + v7);
    ++v27;
    if (v26) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ACBEF7C8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2AF0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77208();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v13) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22)
      {
        int64_t v9 = v21 + 2;
        if (v21 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v6 + 8 * v9);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    char v19 = *(unsigned char *)(v17 + 8);
    LOBYTE(v17) = *(unsigned char *)(v17 + 9);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v20 = v18;
    *(unsigned char *)(v20 + 8) = v19;
    *(unsigned char *)(v20 + 9) = v17;
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v13) {
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1ACBEF978()
{
  return sub_1ACBEFEC4(&qword_1EB769020);
}

void *sub_1ACBEF984()
{
  return sub_1ACBF0074((uint64_t *)&unk_1E99F35D0);
}

void *sub_1ACBEF990()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0FA8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77208();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 8);
    uint64_t v19 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v19 = v18;
    *(unsigned char *)(v19 + 8) = v17;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ACBEFB38()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769000);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77208();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v21 = *(void *)v17;
    *(void *)(v21 + 8) = v19;
    *(unsigned char *)(v21 + 16) = v20;
    uint64_t result = (void *)sub_1ACA72530(v18, v19, v20);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ACBEFCF8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F35C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77208();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void **)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    char v21 = *(unsigned char *)(v17 + 16);
    *(void *)uint64_t v20 = *(void *)v17;
    *(void *)(v20 + 8) = v19;
    *(unsigned char *)(v20 + 16) = v21;
    uint64_t result = sub_1ACA50CB8(v18, v19, v21);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1ACBEFEB8()
{
  return sub_1ACBEFEC4(&qword_1E99F5310);
}

id sub_1ACBEFEC4(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1ACE77208();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ACBF0068()
{
  return sub_1ACBF0074(&qword_1E99F35C0);
}

void *sub_1ACBF0074(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1ACE77208();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ACBF0200()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F35B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77208();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    id result = (void *)sub_1ACA6A09C(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    uint64_t v17 = *(void *)(v4 + 48) + v16;
    long long v18 = v23[0];
    long long v19 = v23[1];
    *(void *)(v17 + 32) = v24;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ACBF03D0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F35B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77208();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1ACBF0568(uint64_t a1)
{
  return sub_1ACBF2580(a1, (uint64_t *)&unk_1E99F5300);
}

uint64_t sub_1ACBF0574()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769008);
  uint64_t v3 = sub_1ACE77218();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    long long v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1ACE77B18();
    swift_bridgeObjectRetain();
    sub_1ACE76108();
    uint64_t result = sub_1ACE77B78();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1ACBF0824()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A848);
  uint64_t result = sub_1ACE77218();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_1ACE77B18();
    sub_1ACE77B58();
    uint64_t result = sub_1ACE77B78();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1ACBF0AA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F35A8);
  uint64_t v3 = sub_1ACE77218();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_37:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v29) {
      goto LABEL_35;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_35;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_35;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    sub_1ACE77B18();
    sub_1ACE77B38();
    if (v20)
    {
      swift_bridgeObjectRetain_n();
      sub_1ACE76108();
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_1ACE77B78();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v21;
    v13[1] = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_35:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_37;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_35;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1ACBF0D78()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2AE8);
  uint64_t result = sub_1ACE77218();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_1ACE77B08();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1ACBF0FDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE75118();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770728);
  uint64_t v7 = sub_1ACE77218();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1ACBF3348();
    uint64_t result = sub_1ACE760E8();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1ACBF135C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771920);
  uint64_t v3 = sub_1ACE77218();
  if (!*(void *)(v2 + 16))
  {
    swift_release();
LABEL_24:
    uint64_t *v1 = v3;
    return;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_6;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v8) {
      goto LABEL_22;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v8) {
        goto LABEL_22;
      }
      unint64_t v17 = *(void *)(v5 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v8) {
          goto LABEL_22;
        }
        unint64_t v17 = *(void *)(v5 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v17 - 1) & v17;
    unint64_t v11 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_6:
    uint64_t v12 = *(void *)(v2 + 48) + 72 * v11;
    v19[0] = *(_OWORD *)v12;
    long long v14 = *(_OWORD *)(v12 + 32);
    long long v13 = *(_OWORD *)(v12 + 48);
    uint64_t v15 = *(void *)(v12 + 64);
    v19[1] = *(_OWORD *)(v12 + 16);
    v19[2] = v14;
    uint64_t v20 = v15;
    v19[3] = v13;
    sub_1ACB99C68(v19);
    sub_1ACD32850((uint64_t)v19, v3);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v8)
  {
LABEL_22:
    swift_release_n();
    goto LABEL_24;
  }
  unint64_t v17 = *(void *)(v5 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v8) {
      goto LABEL_22;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1ACBF152C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2AF0);
  uint64_t v3 = sub_1ACE77218();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_37;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v30 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_38;
    }
    if (v14 >= v31) {
      break;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v14);
    ++v9;
    if (!v15)
    {
      int64_t v9 = v14 + 1;
      if (v14 + 1 >= v31) {
        break;
      }
      unint64_t v15 = *(void *)(v30 + 8 * v9);
      if (!v15)
      {
        int64_t v9 = v14 + 2;
        if (v14 + 2 >= v31) {
          break;
        }
        unint64_t v15 = *(void *)(v30 + 8 * v9);
        if (!v15)
        {
          int64_t v16 = v14 + 3;
          if (v16 >= v31) {
            break;
          }
          unint64_t v15 = *(void *)(v30 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              int64_t v9 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_39;
              }
              if (v9 >= v31) {
                goto LABEL_35;
              }
              unint64_t v15 = *(void *)(v30 + 8 * v9);
              ++v16;
              if (v15) {
                goto LABEL_23;
              }
            }
          }
          int64_t v9 = v16;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v13;
    uint64_t v18 = *(void *)v17;
    int v19 = *(unsigned __int8 *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 9);
    sub_1ACE77B18();
    sub_1ACE77B38();
    if (v19 != 1) {
      sub_1ACE77B58();
    }
    sub_1ACE76108();
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_1ACE77B78();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v22) >> 6;
    do
    {
      if (++v24 == v26 && (v25 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1ACBF18B4);
      }
      BOOL v27 = v24 == v26;
      if (v24 == v26) {
        unint64_t v24 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v8 + 8 * v24);
    }
    while (v28 == -1);
    unint64_t v10 = __clz(__rbit64(~v28)) + (v24 << 6);
LABEL_7:
    *(void *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = *(void *)(v4 + 48) + 16 * v10;
    *(void *)uint64_t v11 = v18;
    *(unsigned char *)(v11 + 8) = v19;
    *(unsigned char *)(v11 + 9) = v20;
    ++*(void *)(v4 + 16);
  }
LABEL_35:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_37:
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1ACBF18C4(uint64_t a1)
{
  return sub_1ACBF2580(a1, &qword_1EB769020);
}

uint64_t sub_1ACBF18D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F35D0);
  uint64_t v3 = sub_1ACE77218();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v11);
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v11);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = *(void *)(v6 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_38;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = *(void *)(v6 + 8 * v11);
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_1ACE77B18();
    sub_1ACE76108();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1ACE77B78();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x1ACBF1C00);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_36:
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1ACBF1C14()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0FA8);
  uint64_t result = sub_1ACE77218();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v28) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 16 * v14;
    uint64_t v19 = *(void *)v18;
    char v20 = *(unsigned char *)(v18 + 8);
    sub_1ACE77B18();
    sub_1ACE77B28();
    uint64_t result = sub_1ACE77B78();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
    *(void *)uint64_t v12 = v19;
    *(unsigned char *)(v12 + 8) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1ACBF1ED0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769000);
  uint64_t v3 = sub_1ACE77218();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v29 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v30 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v30) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v29 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v16 = *(void *)(v29 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v16 = *(void *)(v29 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 24 * v14;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    int v21 = *(unsigned __int8 *)(v18 + 16);
    sub_1ACE77B18();
    sub_1ACE77B28();
    if (v21 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1ACE76108();
    }
    else
    {
      sub_1ACE77B58();
    }
    uint64_t result = sub_1ACE77B78();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v8 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v11 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
    *(void *)uint64_t v12 = v19;
    *(void *)(v12 + 8) = v20;
    *(unsigned char *)(v12 + 16) = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v30)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_38;
  }
  unint64_t v16 = *(void *)(v29 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v29 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1ACBF21D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACBF223C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F35C8);
  uint64_t v3 = sub_1ACE77218();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_40:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v30 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v15 >= v31) {
      goto LABEL_38;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v31) {
        goto LABEL_38;
      }
      unint64_t v16 = *(void *)(v30 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v31) {
          goto LABEL_38;
        }
        unint64_t v16 = *(void *)(v30 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 24 * v14;
    uint64_t v20 = *(void **)v18;
    uint64_t v19 = *(void *)(v18 + 8);
    int v21 = *(unsigned __int8 *)(v18 + 16);
    sub_1ACE77B18();
    if (v21)
    {
      sub_1ACE77B28();
      if (v21 == 1)
      {
        id v22 = v20;
        sub_1ACE76F78();
        sub_1ACA50D28(v20, v19, 1);
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1ACE76108();
      }
    }
    else
    {
      sub_1ACE77B28();
      sub_1ACE77B58();
    }
    uint64_t result = sub_1ACE77B78();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
    *(void *)uint64_t v12 = v20;
    *(void *)(v12 + 8) = v19;
    *(unsigned char *)(v12 + 16) = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_38:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_40;
  }
  unint64_t v16 = *(void *)(v30 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v31) {
      goto LABEL_38;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1ACBF2574(uint64_t a1)
{
  return sub_1ACBF2580(a1, &qword_1E99F5310);
}

uint64_t sub_1ACBF2580(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_1ACE77218();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v29 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    id v21 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = sub_1ACE76F58();
    uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1ACBF27F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F35C0);
  uint64_t v3 = sub_1ACE77218();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_1ACE77B18();
    sub_1ACE76108();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1ACE77B78();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1ACBF2A98()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F35B8);
  uint64_t v3 = sub_1ACE77218();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v9) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_24:
    sub_1ACA6A09C(*(void *)(v2 + 48) + 40 * v18, (uint64_t)v29);
    uint64_t result = sub_1ACE771D8();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v10 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v14 = *(void *)(v4 + 48) + 40 * v13;
    long long v15 = v29[0];
    long long v16 = v29[1];
    *(void *)(v14 + 32) = v30;
    *(_OWORD *)uint64_t v14 = v15;
    *(_OWORD *)(v14 + 16) = v16;
    ++*(void *)(v4 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v12);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1ACBF2D2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F35B0);
  uint64_t v3 = sub_1ACE77218();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1ACE77B18();
    sub_1ACE77D08();
    uint64_t result = sub_1ACE77B78();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

BOOL _s18PodcastsFoundation23PendingPlaybackMetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  double v8 = *(double *)(a1 + 32);
  double v7 = *(double *)(a1 + 40);
  double v9 = *(double *)(a1 + 48);
  uint64_t v10 = *(void *)(a2 + 24);
  double v12 = *(double *)(a2 + 32);
  double v11 = *(double *)(a2 + 40);
  double v13 = *(double *)(a2 + 48);
  if (v4)
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 == *(void *)a2) {
      char v14 = *(unsigned char *)(a2 + 8);
    }
    else {
      char v14 = 1;
    }
    if (v14) {
      return 0;
    }
  }
  if (!v6)
  {
    if (!v10)
    {
LABEL_17:
      if (v8 != v12 || v7 != v11) {
        return 0;
      }
      return v9 == v13;
    }
    return 0;
  }
  if (!v10) {
    return 0;
  }
  if (v5 == *(void *)(a2 + 16) && v6 == v10) {
    goto LABEL_17;
  }
  char v15 = sub_1ACE77848();
  BOOL result = 0;
  if ((v15 & 1) != 0 && v8 == v12 && v7 == v11) {
    return v9 == v13;
  }
  return result;
}

uint64_t type metadata accessor for PendingPlaybackStore()
{
  return self;
}

uint64_t method lookup function for PendingPlaybackStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PendingPlaybackStore);
}

uint64_t dispatch thunk of PendingPlaybackStore.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t initializeWithCopy for PendingPlaybackMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PendingPlaybackMetadata(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = a2[6];
  return a1;
}

uint64_t assignWithTake for PendingPlaybackMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for PendingPlaybackMetadata(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PendingPlaybackMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)BOOL result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PendingPlaybackMetadata()
{
  return &type metadata for PendingPlaybackMetadata;
}

uint64_t sub_1ACBF32E8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1ACBF3348()
{
  unint64_t result = qword_1EB766C80;
  if (!qword_1EB766C80)
  {
    sub_1ACE75118();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB766C80);
  }
  return result;
}

uint64_t FeedUpdateRequest.isImplicitActionRequest.getter()
{
  uint64_t v1 = v0;
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  uint64_t v3 = MEMORY[0x1F4188790](updated);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = *(unsigned char *)(v1 + *(int *)(v3 + 36));
  sub_1ACAC5F3C(v1, (uint64_t)v5);
  if (v6) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = v5[*(int *)(updated + 44)];
  }
  sub_1ACAC5FA0((uint64_t)v5);
  return v7;
}

uint64_t type metadata accessor for FeedUpdateRequest()
{
  uint64_t result = qword_1EB76B568;
  if (!qword_1EB76B568) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FeedUpdateRequest.feedUrlString.getter()
{
  return sub_1ACE74DD8();
}

uint64_t FeedUpdateRequest.failRequest(_:)(void *a1)
{
  uint64_t v3 = sub_1ACE75DC8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE75E48();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = type metadata accessor for FeedUpdateRequest();
  double v12 = (uint64_t *)(v1 + *(int *)(result + 68));
  uint64_t v13 = *v12;
  if (*v12)
  {
    uint64_t v20 = v7;
    uint64_t v14 = v12[1];
    sub_1ACA51E1C();
    swift_retain();
    uint64_t v19 = sub_1ACE76CF8();
    char v15 = (void *)swift_allocObject();
    v15[2] = v13;
    v15[3] = v14;
    v15[4] = a1;
    aBlock[4] = sub_1ACBF47E4;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = &block_descriptor_38;
    int64_t v16 = _Block_copy(aBlock);
    sub_1ACA6DEC8(v13);
    id v17 = a1;
    swift_release();
    sub_1ACE75E08();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1ACA55D24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    sub_1ACE770E8();
    int64_t v18 = (void *)v19;
    MEMORY[0x1AD118ED0](0, v10, v6, v16);
    _Block_release(v16);

    sub_1ACA76F34(v13);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v20);
  }
  return result;
}

BOOL FeedUpdateRequest.isRetryable.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 52)) & 1) == 0;
}

uint64_t FeedUpdateRequest.copyWithoutCompletion()@<X0>(uint64_t a1@<X8>)
{
  uint64_t updated = (int *)type metadata accessor for FeedUpdateRequest();
  uint64_t v4 = updated[5];
  uint64_t v5 = v1 + v4;
  uint64_t v6 = a1 + v4;
  uint64_t v7 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, v5, v7);
  sub_1ACA615AC(v1 + updated[6], a1 + updated[6]);
  uint64_t v8 = (uint64_t *)(v1 + updated[8]);
  uint64_t v9 = v8[1];
  uint64_t v33 = *v8;
  char v32 = *(unsigned char *)(v1 + updated[10]);
  char v28 = *(unsigned char *)(v1 + updated[11]);
  char v29 = *(unsigned char *)(v1 + updated[9]);
  uint64_t v30 = *(void *)(v1 + updated[7]);
  uint64_t v31 = *(void *)(v1 + updated[12]);
  uint64_t v10 = updated[14];
  char v27 = *(unsigned char *)(v1 + updated[13]);
  uint64_t v11 = *(void *)(v1 + v10);
  uint64_t v12 = *(void *)(v1 + v10 + 8);
  uint64_t v13 = updated[16];
  uint64_t v14 = (uint64_t *)(v1 + updated[15]);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  uint64_t v18 = *(void *)(v1 + v13);
  uint64_t v17 = *(void *)(v1 + v13 + 8);
  uint64_t v19 = updated[18];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB770760);
  uint64_t v20 = swift_allocObject();
  *(_DWORD *)(v20 + 24) = 0;
  *(void *)(v20 + 16) = 0;
  *(void *)(a1 + v19) = v20;
  swift_bridgeObjectRetain();
  sub_1ACA6DEC8(v11);
  sub_1ACA6DEC8(v16);
  sub_1ACA6DEC8(v18);
  uint64_t result = sub_1ACE75108();
  *(void *)(a1 + updated[7]) = v30;
  uint64_t v22 = (void *)(a1 + updated[8]);
  *uint64_t v22 = v33;
  v22[1] = v9;
  *(unsigned char *)(a1 + updated[9]) = v29;
  *(unsigned char *)(a1 + updated[10]) = v32;
  *(unsigned char *)(a1 + updated[11]) = v28;
  *(void *)(a1 + updated[12]) = v31;
  *(unsigned char *)(a1 + updated[13]) = v27;
  unint64_t v23 = (uint64_t *)(a1 + updated[14]);
  *unint64_t v23 = v11;
  v23[1] = v12;
  unint64_t v24 = (uint64_t *)(a1 + updated[15]);
  *unint64_t v24 = v16;
  v24[1] = v15;
  char v25 = (uint64_t *)(a1 + updated[16]);
  *char v25 = v18;
  v25[1] = v17;
  unint64_t v26 = (void *)(a1 + updated[17]);
  *unint64_t v26 = 0;
  v26[1] = 0;
  return result;
}

Swift::Void __swiftcall FeedUpdateRequest.endQueueing()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 72));
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACB3A5EC(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t FeedUpdateRequest.requestIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1ACE75118();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t FeedUpdateRequest.feedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedUpdateRequest() + 20);
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FeedUpdateRequest.cloudSyncFeedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedUpdateRequest() + 24);
  return sub_1ACA615AC(v3, a1);
}

uint64_t FeedUpdateRequest.podcastStoreId.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 28));
}

uint64_t FeedUpdateRequest.triggerBy.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedUpdateRequest.userInitiated.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 36));
}

uint64_t FeedUpdateRequest.forceBootstrap.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 40));
}

uint64_t FeedUpdateRequest.useBackgroundFetch.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 44));
}

uint64_t FeedUpdateRequest.source.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 48));
}

uint64_t FeedUpdateRequest.isSubscribing.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 52));
}

uint64_t FeedUpdateRequest.feedDownloadedHook.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 56));
  sub_1ACA6DEC8(v1);
  return v1;
}

uint64_t FeedUpdateRequest.preProcessFeedHook.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 60));
  sub_1ACA6DEC8(v1);
  return v1;
}

uint64_t FeedUpdateRequest.postProcessFeedHook.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 64));
  sub_1ACA6DEC8(v1);
  return v1;
}

uint64_t FeedUpdateRequest.completion.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 68));
  sub_1ACA6DEC8(v1);
  return v1;
}

uint64_t FeedUpdateRequest.init(feedUrl:cloudSyncFeedUrl:podcastStoreId:triggerBy:userInitiated:forceBootstrap:useBackgroundFetch:source:isSubscribing:feedDownloadedHook:preProcessFeedHook:postProcessFeedHook:completion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t updated = (int *)type metadata accessor for FeedUpdateRequest();
  uint64_t v26 = updated[18];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB770760);
  uint64_t v27 = swift_allocObject();
  *(_DWORD *)(v27 + 24) = 0;
  *(void *)(v27 + 16) = 0;
  *(void *)(a9 + v26) = v27;
  sub_1ACE75108();
  uint64_t v28 = a9 + updated[5];
  uint64_t v29 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v28, a1, v29);
  uint64_t result = sub_1ACA7FAC4(a2, a9 + updated[6]);
  *(void *)(a9 + updated[7]) = a3;
  uint64_t v31 = (void *)(a9 + updated[8]);
  *uint64_t v31 = a4;
  v31[1] = a5;
  *(unsigned char *)(a9 + updated[9]) = a6;
  *(unsigned char *)(a9 + updated[10]) = a7;
  *(unsigned char *)(a9 + updated[11]) = a8;
  *(void *)(a9 + updated[12]) = a10;
  *(unsigned char *)(a9 + updated[13]) = a11;
  char v32 = (void *)(a9 + updated[14]);
  void *v32 = a12;
  v32[1] = a13;
  uint64_t v33 = (void *)(a9 + updated[15]);
  *uint64_t v33 = a14;
  v33[1] = a15;
  v34 = (void *)(a9 + updated[16]);
  void *v34 = a16;
  v34[1] = a17;
  if (a18)
  {
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = a18;
    *(void *)(result + 24) = a19;
    uint64_t v35 = (void (**)(void *, char))(a9 + updated[17]);
    *uint64_t v35 = sub_1ACBF4850;
    v35[1] = (void (*)(void *, char))result;
  }
  else
  {
    int64_t v36 = (void *)(a9 + updated[17]);
    *int64_t v36 = 0;
    v36[1] = 0;
  }
  return result;
}

void sub_1ACBF3F6C(void *a1, char a2, void (*a3)(BOOL, void *))
{
  if (a2)
  {
    uint64_t v5 = a1;
    id v6 = a1;
  }
  else
  {
    uint64_t v5 = 0;
  }
  a3((a2 & 1) == 0, v5);
}

Swift::Void __swiftcall FeedUpdateRequest.beginQueueing()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 72));
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACBF485C(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1ACBF4040(uint64_t *a1)
{
  uint64_t v2 = sub_1ACE753F8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  id v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v27 - v7;
  swift_release();
  uint64_t v9 = sub_1ACE750C8();
  unint64_t v11 = v10;
  if (qword_1EB76D390 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1ACE75438();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB76D378);
  swift_bridgeObjectRetain();
  sub_1ACE753E8();
  uint64_t v13 = sub_1ACE75428();
  int v32 = sub_1ACE76E18();
  uint64_t v14 = v8;
  if (sub_1ACE76FA8())
  {
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    uint64_t v27 = v9;
    uint64_t v28 = v15;
    v15(v6, v8, v2);
    uint64_t v16 = swift_slowAlloc();
    uint64_t v30 = v2;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v31 = a1;
    uint64_t v19 = v18;
    uint64_t v34 = v18;
    uint64_t v29 = v8;
    *(_DWORD *)uint64_t v17 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1ACA3189C(v27, v11, &v34);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    os_signpost_id_t v20 = sub_1ACE753D8();
    uint64_t v14 = v29;
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v13, (os_signpost_type_t)v32, v20, "QueueFeedUpdateRequest", "[identifier=%{name=identifier}s] BEGIN", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v21 = v19;
    a1 = v31;
    MEMORY[0x1AD11B340](v21, -1, -1);
    uint64_t v22 = v17;
    uint64_t v2 = v30;
    MEMORY[0x1AD11B340](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v28(v6, v14, v2);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  }
  sub_1ACE75478();
  swift_allocObject();
  uint64_t v23 = sub_1ACE75468();
  uint64_t v24 = v2;
  uint64_t v25 = v23;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v14, v24);
  *a1 = v25;
  return result;
}

uint64_t sub_1ACBF4388(void *a1)
{
  uint64_t v3 = sub_1ACE75448();
  uint64_t v4 = *(const char **)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1ACE753F8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  unint64_t v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v14 = &v27[-v13];
  uint64_t v35 = a1;
  if (*a1)
  {
    uint64_t v31 = v4;
    uint64_t v33 = result;
    uint64_t v34 = v1;
    uint64_t v32 = sub_1ACE750C8();
    unint64_t v16 = v15;
    if (qword_1EB76D390 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1ACE75438();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EB76D378);
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1ACE75428();
    sub_1ACE75458();
    int v30 = sub_1ACE76E08();
    if (sub_1ACE76FA8())
    {
      os_log_t v29 = v18;
      swift_retain();
      sub_1ACE75488();
      swift_release();
      uint64_t v19 = v31;
      if ((*((unsigned int (**)(unsigned char *, uint64_t))v31 + 11))(v6, v3) == *MEMORY[0x1E4FBD340])
      {
        char v20 = 0;
        int v28 = 0;
        uint64_t v31 = "[Error] Interval already ended";
      }
      else
      {
        (*((void (**)(unsigned char *, uint64_t))v19 + 1))(v6, v3);
        uint64_t v31 = "[identifier=%{name=identifier}s] END";
        int v28 = 2;
        char v20 = 1;
      }
      uint64_t v21 = v33;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v11, v14, v33);
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v37 = v23;
      *(unsigned char *)uint64_t v22 = v28;
      *(unsigned char *)(v22 + 1) = v20;
      *(_WORD *)(v22 + 2) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_1ACA3189C(v32, v16, &v37);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      os_signpost_id_t v24 = sub_1ACE753D8();
      os_log_t v25 = v29;
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v29, (os_signpost_type_t)v30, v24, "QueueFeedUpdateRequest", v31, (uint8_t *)v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v23, -1, -1);
      MEMORY[0x1AD11B340](v22, -1, -1);

      uint64_t v26 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
      v26(v14, v21);
      swift_release();
      uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v26)(v11, v21);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v14, v33);
      uint64_t result = swift_release();
    }
  }
  *uint64_t v35 = 0;
  return result;
}

uint64_t sub_1ACBF47A4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1ACBF47E4()
{
  return (*(uint64_t (**)(void, uint64_t))(v0 + 16))(*(void *)(v0 + 32), 1);
}

uint64_t sub_1ACBF4818()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACBF4850(void *a1, char a2)
{
  sub_1ACBF3F6C(a1, a2 & 1, *(void (**)(BOOL, void *))(v2 + 16));
}

uint64_t sub_1ACBF485C(uint64_t *a1)
{
  return sub_1ACBF4040(a1);
}

void *initializeBufferWithCopyOfBuffer for FeedUpdateRequest(void *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1ACE75118();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_1ACE74F28();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v13(v9, v10, v11);
    uint64_t v14 = a3[6];
    unint64_t v15 = (char *)a1 + v14;
    unint64_t v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    uint64_t v19 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)&a2[a3[7]];
    char v20 = (void *)((char *)a1 + v19);
    uint64_t v21 = &a2[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *char v20 = *(void *)v21;
    v20[1] = v22;
    uint64_t v23 = a3[10];
    *((unsigned char *)a1 + a3[9]) = a2[a3[9]];
    *((unsigned char *)a1 + v23) = a2[v23];
    uint64_t v24 = a3[12];
    *((unsigned char *)a1 + a3[11]) = a2[a3[11]];
    *(void *)((char *)a1 + v24) = *(void *)&a2[v24];
    uint64_t v25 = a3[14];
    *((unsigned char *)a1 + a3[13]) = a2[a3[13]];
    uint64_t v26 = (void *)((char *)a1 + v25);
    uint64_t v27 = &a2[v25];
    uint64_t v28 = *(void *)&a2[v25];
    swift_bridgeObjectRetain();
    if (v28)
    {
      uint64_t v29 = *((void *)v27 + 1);
      *uint64_t v26 = v28;
      v26[1] = v29;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    }
    uint64_t v30 = a3[15];
    uint64_t v31 = (void *)((char *)a1 + v30);
    uint64_t v32 = &a2[v30];
    if (*(void *)v32)
    {
      uint64_t v33 = *((void *)v32 + 1);
      *uint64_t v31 = *(void *)v32;
      v31[1] = v33;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    }
    uint64_t v34 = a3[16];
    uint64_t v35 = (void *)((char *)a1 + v34);
    uint64_t v36 = &a2[v34];
    if (*(void *)v36)
    {
      uint64_t v37 = *((void *)v36 + 1);
      *uint64_t v35 = *(void *)v36;
      v35[1] = v37;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    }
    uint64_t v38 = a3[17];
    v39 = (void *)((char *)a1 + v38);
    v40 = &a2[v38];
    if (*(void *)v40)
    {
      uint64_t v41 = *((void *)v40 + 1);
      void *v39 = *(void *)v40;
      v39[1] = v41;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v39 = *(_OWORD *)v40;
    }
    *(void *)((char *)a1 + a3[18]) = *(void *)&a2[a3[18]];
  }
  swift_retain();
  return a1;
}

uint64_t destroy for FeedUpdateRequest(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1ACE75118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  uint64_t v9 = a1 + a2[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[14])) {
    swift_release();
  }
  if (*(void *)(a1 + a2[15])) {
    swift_release();
  }
  if (*(void *)(a1 + a2[16])) {
    swift_release();
  }
  if (*(void *)(a1 + a2[17])) {
    swift_release();
  }
  return swift_release();
}

uint64_t initializeWithCopy for FeedUpdateRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1ACE75118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  unint64_t v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  uint64_t v17 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  uint64_t v22 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  uint64_t v23 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = a2 + v23;
  uint64_t v26 = *(void *)(a2 + v23);
  swift_bridgeObjectRetain();
  if (v26)
  {
    uint64_t v27 = *(void *)(v25 + 8);
    *uint64_t v24 = v26;
    v24[1] = v27;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  }
  uint64_t v28 = a3[15];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  if (*v30)
  {
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  }
  uint64_t v32 = a3[16];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  if (*v34)
  {
    uint64_t v35 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v35;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  }
  uint64_t v36 = a3[17];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (void *)(a2 + v36);
  if (*v38)
  {
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  }
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FeedUpdateRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1ACE75118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (const void *)(a2 + v13);
  unint64_t v15 = *(uint64_t (**)(void))(v11 + 48);
  v51 = a3;
  v52 = (void *)(a1 + v13);
  LODWORD(a3) = v15();
  int v16 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v15)(v14, 1, v10);
  if (a3)
  {
    if (v16)
    {
      size_t v17 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
      uint64_t v18 = v52;
LABEL_6:
      memcpy(v18, v14, v17);
      goto LABEL_9;
    }
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v52, v14, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v52, 0, 1, v10);
  }
  else
  {
    if (v16)
    {
      (*(void (**)(void *, uint64_t))(v11 + 8))(v52, v10);
      size_t v17 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
      uint64_t v18 = v52;
      goto LABEL_6;
    }
    v12((uint64_t)v52, (uint64_t)v14, v10);
  }
LABEL_9:
  *(void *)(a1 + v51[7]) = *(void *)(a2 + v51[7]);
  uint64_t v19 = v51[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v51[9]) = *(unsigned char *)(a2 + v51[9]);
  *(unsigned char *)(a1 + v51[10]) = *(unsigned char *)(a2 + v51[10]);
  *(unsigned char *)(a1 + v51[11]) = *(unsigned char *)(a2 + v51[11]);
  *(void *)(a1 + v51[12]) = *(void *)(a2 + v51[12]);
  *(unsigned char *)(a1 + v51[13]) = *(unsigned char *)(a2 + v51[13]);
  uint64_t v22 = v51[14];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)(a1 + v22);
  uint64_t v26 = *(void *)(a2 + v22);
  if (v25)
  {
    if (v26)
    {
      uint64_t v27 = *(void *)(v24 + 8);
      *uint64_t v23 = v26;
      v23[1] = v27;
      swift_retain();
      swift_release();
      goto LABEL_16;
    }
    swift_release();
  }
  else if (v26)
  {
    uint64_t v28 = *(void *)(v24 + 8);
    *uint64_t v23 = v26;
    v23[1] = v28;
    swift_retain();
    goto LABEL_16;
  }
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
LABEL_16:
  uint64_t v29 = v51[15];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = a2 + v29;
  uint64_t v32 = *(void *)(a1 + v29);
  uint64_t v33 = *(void *)(a2 + v29);
  if (v32)
  {
    if (v33)
    {
      uint64_t v34 = *(void *)(v31 + 8);
      *uint64_t v30 = v33;
      v30[1] = v34;
      swift_retain();
      swift_release();
      goto LABEL_23;
    }
    swift_release();
  }
  else if (v33)
  {
    uint64_t v35 = *(void *)(v31 + 8);
    *uint64_t v30 = v33;
    v30[1] = v35;
    swift_retain();
    goto LABEL_23;
  }
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
LABEL_23:
  uint64_t v36 = v51[16];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = a2 + v36;
  uint64_t v39 = *(void *)(a1 + v36);
  uint64_t v40 = *(void *)(a2 + v36);
  if (v39)
  {
    if (v40)
    {
      uint64_t v41 = *(void *)(v38 + 8);
      *uint64_t v37 = v40;
      v37[1] = v41;
      swift_retain();
      swift_release();
      goto LABEL_30;
    }
    swift_release();
  }
  else if (v40)
  {
    uint64_t v42 = *(void *)(v38 + 8);
    *uint64_t v37 = v40;
    v37[1] = v42;
    swift_retain();
    goto LABEL_30;
  }
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
LABEL_30:
  uint64_t v43 = v51[17];
  v44 = (void *)(a1 + v43);
  uint64_t v45 = a2 + v43;
  uint64_t v46 = *(void *)(a1 + v43);
  uint64_t v47 = *(void *)(a2 + v43);
  if (!v46)
  {
    if (v47)
    {
      uint64_t v49 = *(void *)(v45 + 8);
      void *v44 = v47;
      v44[1] = v49;
      swift_retain();
      goto LABEL_37;
    }
LABEL_36:
    *(_OWORD *)v44 = *(_OWORD *)v45;
    goto LABEL_37;
  }
  if (!v47)
  {
    swift_release();
    goto LABEL_36;
  }
  uint64_t v48 = *(void *)(v45 + 8);
  void *v44 = v47;
  v44[1] = v48;
  swift_retain();
  swift_release();
LABEL_37:
  *(void *)(a1 + v51[18]) = *(void *)(a2 + v51[18]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for FeedUpdateRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1ACE75118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  unint64_t v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  uint64_t v17 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  uint64_t v18 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  uint64_t v19 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v20 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v23 = *v22;
  if (*v22)
  {
    uint64_t v24 = v22[1];
    *uint64_t v21 = v23;
    v21[1] = v24;
  }
  else
  {
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  }
  uint64_t v25 = a3[15];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v28 = *v27;
  if (*v27)
  {
    uint64_t v29 = v27[1];
    *uint64_t v26 = v28;
    v26[1] = v29;
  }
  else
  {
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  }
  uint64_t v30 = a3[16];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v33 = *v32;
  if (*v32)
  {
    uint64_t v34 = v32[1];
    *uint64_t v31 = v33;
    v31[1] = v34;
  }
  else
  {
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  }
  uint64_t v35 = a3[17];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (uint64_t *)(a2 + v35);
  uint64_t v38 = *v37;
  if (*v37)
  {
    uint64_t v39 = v37[1];
    *uint64_t v36 = v38;
    v36[1] = v39;
  }
  else
  {
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  }
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  return a1;
}

uint64_t assignWithTake for FeedUpdateRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1ACE75118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (const void *)(a2 + v13);
  unint64_t v15 = *(uint64_t (**)(void))(v11 + 48);
  v54 = a3;
  v55 = (void *)(a1 + v13);
  LODWORD(a3) = v15();
  int v16 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v15)(v14, 1, v10);
  if (a3)
  {
    if (v16)
    {
      size_t v17 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
      uint64_t v18 = v55;
LABEL_6:
      memcpy(v18, v14, v17);
      goto LABEL_9;
    }
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v55, v14, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v55, 0, 1, v10);
  }
  else
  {
    if (v16)
    {
      (*(void (**)(void *, uint64_t))(v11 + 8))(v55, v10);
      size_t v17 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
      uint64_t v18 = v55;
      goto LABEL_6;
    }
    v12((uint64_t)v55, (uint64_t)v14, v10);
  }
LABEL_9:
  uint64_t v19 = v54[8];
  *(void *)(a1 + v54[7]) = *(void *)(a2 + v54[7]);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = v54[10];
  *(unsigned char *)(a1 + v54[9]) = *(unsigned char *)(a2 + v54[9]);
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  uint64_t v25 = v54[12];
  *(unsigned char *)(a1 + v54[11]) = *(unsigned char *)(a2 + v54[11]);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);
  uint64_t v26 = v54[14];
  *(unsigned char *)(a1 + v54[13]) = *(unsigned char *)(a2 + v54[13]);
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = a2 + v26;
  uint64_t v29 = *(void *)(a2 + v26);
  if (*(void *)(a1 + v26))
  {
    if (v29)
    {
      uint64_t v30 = *(void *)(v28 + 8);
      *uint64_t v27 = v29;
      v27[1] = v30;
      swift_release();
      goto LABEL_16;
    }
    swift_release();
  }
  else if (v29)
  {
    uint64_t v31 = *(void *)(v28 + 8);
    *uint64_t v27 = v29;
    v27[1] = v31;
    goto LABEL_16;
  }
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
LABEL_16:
  uint64_t v32 = v54[15];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = a2 + v32;
  uint64_t v35 = *(void *)(a1 + v32);
  uint64_t v36 = *(void *)(a2 + v32);
  if (v35)
  {
    if (v36)
    {
      uint64_t v37 = *(void *)(v34 + 8);
      *uint64_t v33 = v36;
      v33[1] = v37;
      swift_release();
      goto LABEL_23;
    }
    swift_release();
  }
  else if (v36)
  {
    uint64_t v38 = *(void *)(v34 + 8);
    *uint64_t v33 = v36;
    v33[1] = v38;
    goto LABEL_23;
  }
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
LABEL_23:
  uint64_t v39 = v54[16];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = a2 + v39;
  uint64_t v42 = *(void *)(a1 + v39);
  uint64_t v43 = *(void *)(a2 + v39);
  if (v42)
  {
    if (v43)
    {
      uint64_t v44 = *(void *)(v41 + 8);
      void *v40 = v43;
      v40[1] = v44;
      swift_release();
      goto LABEL_30;
    }
    swift_release();
  }
  else if (v43)
  {
    uint64_t v45 = *(void *)(v41 + 8);
    void *v40 = v43;
    v40[1] = v45;
    goto LABEL_30;
  }
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
LABEL_30:
  uint64_t v46 = v54[17];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = a2 + v46;
  uint64_t v49 = *(void *)(a1 + v46);
  uint64_t v50 = *(void *)(a2 + v46);
  if (!v49)
  {
    if (v50)
    {
      uint64_t v52 = *(void *)(v48 + 8);
      *uint64_t v47 = v50;
      v47[1] = v52;
      goto LABEL_37;
    }
LABEL_36:
    *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
    goto LABEL_37;
  }
  if (!v50)
  {
    swift_release();
    goto LABEL_36;
  }
  uint64_t v51 = *(void *)(v48 + 8);
  *uint64_t v47 = v50;
  v47[1] = v51;
  swift_release();
LABEL_37:
  *(void *)(a1 + v54[18]) = *(void *)(a2 + v54[18]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedUpdateRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACBF59E8);
}

uint64_t sub_1ACBF59E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1ACE75118();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1ACE74F28();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[18]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedUpdateRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACBF5B60);
}

uint64_t sub_1ACBF5B60(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1ACE75118();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_1ACE74F28();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[18]) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1ACBF5CC0()
{
  sub_1ACE75118();
  if (v0 <= 0x3F)
  {
    sub_1ACE74F28();
    if (v1 <= 0x3F)
    {
      sub_1ACBD7EC8();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1ACBF5E04()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MockPurchaseTask()
{
  return self;
}

uint64_t sub_1ACBF5E60@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MockPurchaseTask();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *a1 = result;
  return result;
}

id sub_1ACBF5E98@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 16);
  *a1 = v4;
  return v4;
}

void sub_1ACBF5EF0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = v2;
}

uint64_t (*sub_1ACBF5F3C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1ACBF5F94(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACBF5FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1ACBF5FDC(a5, a7, a8, a9);
}

uint64_t sub_1ACBF5FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a3;
  uint64_t v5 = sub_1ACE75DC8();
  uint64_t v27 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE75E48();
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE75E88();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  size_t v17 = (char *)&v22 - v16;
  sub_1ACA51E1C();
  uint64_t v18 = (void *)sub_1ACE76CF8();
  sub_1ACE75E78();
  MEMORY[0x1AD1180A0](v15, 3.0);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v23(v15, v11);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v24;
  *(void *)(v19 + 24) = a4;
  aBlock[4] = sub_1ACA564C4;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_39;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1ACE75E08();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1ACA55D24();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA55D7C();
  sub_1ACE770E8();
  MEMORY[0x1AD118E40](v17, v10, v7, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v26);
  return ((uint64_t (*)(char *, uint64_t))v23)(v17, v11);
}

uint64_t sub_1ACBF6348()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1ACBF6478()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s19TaskMetricsDelegateCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s19TaskMetricsDelegateCMa()
{
  return self;
}

void sub_1ACBF6550(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1ACE749B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E99EFF10 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1ACE754C8();
  __swift_project_value_buffer(v8, (uint64_t)qword_1E99F2C40);
  id v9 = a1;
  uint64_t v10 = sub_1ACE75498();
  os_log_type_t v11 = sub_1ACE76C08();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    v19[0] = v2;
    uint64_t v13 = v12;
    *(_DWORD *)uint64_t v12 = 134217984;
    id v14 = objc_msgSend(v9, sel_taskInterval);
    sub_1ACE74998();

    sub_1ACE749A8();
    uint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v19[1] = v16;
    sub_1ACE76FF8();

    _os_log_impl(&dword_1AC9D5000, v10, v11, "MAPI request duration: %fs", v13, 0xCu);
    size_t v17 = v13;
    uint64_t v2 = v19[0];
    MEMORY[0x1AD11B340](v17, -1, -1);
  }
  else
  {
  }
  uint64_t v18 = *(void **)(v2 + OBJC_IVAR____TtCC18PodcastsFoundation20PodcastsMediaLibrary19TaskMetricsDelegate_strongRef);
  *(void *)(v2 + OBJC_IVAR____TtCC18PodcastsFoundation20PodcastsMediaLibrary19TaskMetricsDelegate_strongRef) = 0;
}

uint64_t PerformanceLoadable.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = type metadata accessor for Loadable();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1ACBF6804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for PerformanceLoadable() + 40);
  uint64_t v4 = type metadata accessor for Loadable();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a2, v3, v4);
}

uint64_t PerformanceLoadable.value.setter(uint64_t a1, uint64_t a2)
{
  sub_1ACBF7028(a1, a2);
  uint64_t v3 = type metadata accessor for Loadable();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(a1, v3);
}

uint64_t sub_1ACBF6910(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = type metadata accessor for Loadable();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v17 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  id v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(a2 + 40);
  uint64_t v20 = v2;
  uint64_t v11 = v2 + v10;
  uint64_t v18 = v7;
  uint64_t v12 = &v9[*(int *)(v7 + 48)];
  uint64_t v13 = *(void *)(v5 - 8);
  id v14 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v14(v9, v19, v5);
  v14(v12, v11, v5);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  if (v15(v9, 2, v4) == 1)
  {
    sub_1ACBF6B20();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v12, v5);
  }
  else if (v15(v12, 2, v4) == 1)
  {
    sub_1ACBF6B70(a2);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v9, v5);
  }
  else
  {
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v9, v18);
  }
}

uint64_t sub_1ACBF6B20()
{
  sub_1ACE76E08();
  return sub_1ACE753A8();
}

uint64_t sub_1ACBF6B70(uint64_t a1)
{
  uint64_t v3 = sub_1ACE753F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = *(id *)(v1 + 24);
  sub_1ACE753C8();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 40))(v1 + *(int *)(a1 + 36), v6, v3);
  uint64_t v8 = *(void *)(v1 + 40);
  if (v8)
  {
    uint64_t v9 = *(void *)(v1 + 32);
    swift_bridgeObjectRetain();
    sub_1ACE76E18();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1ACE843F0;
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 64) = sub_1ACADC3A8();
    *(void *)(v10 + 32) = v9;
    *(void *)(v10 + 40) = v8;
    sub_1ACE75398();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ACE76E18();
    return sub_1ACE753A8();
  }
}

void (*PerformanceLoadable.value.modify(void *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  uint64_t v5 = malloc(0x40uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = type metadata accessor for Loadable();
  v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v5[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v5[4] = malloc(v9);
  v5[5] = malloc(v9);
  uint64_t v10 = *(void (**)(void))(v8 + 16);
  v5[6] = v10;
  v5[7] = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v10();
  return sub_1ACBF6E44;
}

void sub_1ACBF6E44(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    uint64_t v4 = *(void **)(v2 + 32);
    uint64_t v3 = *(void **)(v2 + 40);
    uint64_t v5 = *(void *)(v2 + 16);
    uint64_t v6 = *(void *)(v2 + 24);
    uint64_t v7 = *(void *)v2;
    (*(void (**)(void *, void *, uint64_t))(v2 + 48))(v4, v3, v5);
    sub_1ACBF7028((uint64_t)v4, v7);
    uint64_t v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v4, v5);
    v8(v3, v5);
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 32);
    uint64_t v3 = *(void **)(v2 + 40);
    uint64_t v9 = *(void *)(v2 + 16);
    uint64_t v10 = *(void *)(v2 + 24);
    sub_1ACBF7028((uint64_t)v3, *(void *)v2);
    (*(void (**)(void *, uint64_t))(v10 + 8))(v3, v9);
  }
  free(v3);
  free(v4);
  free((void *)v2);
}

void PerformanceLoadable.init(log:signpostName:startMetadata:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v16 = type metadata accessor for PerformanceLoadable();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 56))(a8 + *(int *)(v16 + 40), 1, 2, a7);
  *(void *)(a8 + 24) = a1;
  *(void *)a8 = a2;
  *(void *)(a8 + 8) = a3;
  *(unsigned char *)(a8 + 16) = a4;
  id v17 = a1;
  sub_1ACE753C8();
  *(void *)(a8 + 32) = a5;
  *(void *)(a8 + 40) = a6;
  sub_1ACBF6B70(v16);
}

uint64_t sub_1ACBF7028(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Loadable();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = v2 + *(int *)(a2 + 40);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v11 - v7, v9, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v9, a1, v5);
  sub_1ACBF6910((uint64_t)v8, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t type metadata accessor for PerformanceLoadable()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACBF7168(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PerformanceLoadable();
  return sub_1ACBF7028(a1, v2);
}

uint64_t sub_1ACBF71A8()
{
  return 8;
}

void *sub_1ACBF71B4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1ACBF71C0()
{
  uint64_t result = sub_1ACE753F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Loadable();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1ACBF72B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE753F8();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  unsigned int v12 = *(_DWORD *)(v11 + 84);
  uint64_t v13 = *(_DWORD *)(v11 + 80);
  size_t v14 = *(void *)(v11 + 64);
  size_t v15 = v14;
  if (v12 <= 1)
  {
    if (v14 <= 3)
    {
      unsigned int v17 = (~(-1 << (8 * v14)) - v12 + 2) >> (8 * v14);
      uint64_t v18 = v17 != 0;
      if (v17 >= 0xFF) {
        uint64_t v18 = 2;
      }
      if (v17 <= 0xFFFE) {
        uint64_t v16 = v18;
      }
      else {
        uint64_t v16 = 4;
      }
    }
    else
    {
      uint64_t v16 = 1;
    }
    size_t v15 = v16 + v14;
  }
  if ((v13 | v8) > 7
    || ((*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || v15 + ((v9 + ((v8 + 48) & ~v8) + v13) & ~v13) > 0x18)
  {
    uint64_t v21 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v21 + (((v13 | v8) & 0xF8 ^ 0x1F8) & ((v13 | v8) + 16));
    swift_retain();
  }
  else
  {
    unsigned int v36 = *(_DWORD *)(v11 + 84);
    uint64_t v37 = v10;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t v22 = *(void **)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
    *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = v22;
    uint64_t v23 = (void *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v24 = (void *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v23 = *v24;
    v23[1] = v24[1];
    uint64_t v25 = ((unint64_t)v23 + v8 + 16) & ~v8;
    uint64_t v26 = ((unint64_t)v24 + v8 + 16) & ~v8;
    uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    uint64_t v28 = v6;
    id v29 = v22;
    swift_bridgeObjectRetain();
    v27(v25, v26, v28);
    uint64_t v30 = (void *)((v25 + v9 + v13) & ~v13);
    uint64_t v31 = (const void *)((v26 + v9 + v13) & ~v13);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v31, 2, v37))
    {
      if (v36 <= 1)
      {
        if (v14 <= 3)
        {
          unsigned int v33 = (~(-1 << (8 * v14)) - v36 + 2) >> (8 * v14);
          uint64_t v34 = v33 != 0;
          if (v33 >= 0xFF) {
            uint64_t v34 = 2;
          }
          if (v33 <= 0xFFFE) {
            uint64_t v32 = v34;
          }
          else {
            uint64_t v32 = 4;
          }
        }
        else
        {
          uint64_t v32 = 1;
        }
        v14 += v32;
      }
      memcpy(v30, v31, v14);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v30, v31, v37);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0, 2, v37);
    }
  }
  return a1;
}

uint64_t sub_1ACBF75F4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1 & 0xFFFFFFFFFFFFFFF8;

  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1ACE753F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5 + 8;
  unint64_t v7 = (((v3 + 39) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = (v7 + *(void *)(v6 + 56) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = v9;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 2, v8);
  if (!result)
  {
    unsigned int v12 = *(uint64_t (**)(unint64_t, uint64_t))(v13 + 8);
    return v12(v10, v8);
  }
  return result;
}

uint64_t sub_1ACBF7730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void **)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = v5;
  uint64_t v6 = (void *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = (void *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  v6[1] = v7[1];
  uint64_t v8 = sub_1ACE753F8();
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  uint64_t v11 = v9 + 16;
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = ((unint64_t)v6 + v12 + 16) & ~v12;
  uint64_t v14 = ((unint64_t)v7 + v12 + 16) & ~v12;
  id v15 = v5;
  swift_bridgeObjectRetain();
  v10(v13, v14, v8);
  uint64_t v16 = *(void *)(a3 + 16);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = *(void *)(v11 + 48) + v18;
  uint64_t v20 = (void *)((v19 + v13) & ~v18);
  uint64_t v21 = (const void *)((v19 + v14) & ~v18);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v21, 2, v16))
  {
    unsigned int v22 = *(_DWORD *)(v17 + 84);
    size_t v23 = *(void *)(v17 + 64);
    if (v22 <= 1)
    {
      if (v23 <= 3)
      {
        unsigned int v25 = (~(-1 << (8 * v23)) - v22 + 2) >> (8 * v23);
        uint64_t v26 = v25 != 0;
        if (v25 >= 0xFF) {
          uint64_t v26 = 2;
        }
        if (v25 <= 0xFFFE) {
          uint64_t v24 = v26;
        }
        else {
          uint64_t v24 = 4;
        }
      }
      else
      {
        uint64_t v24 = 1;
      }
      v23 += v24;
    }
    memcpy(v20, v21, v23);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v20, v21, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 2, v16);
  }
  return a1;
}

uint64_t sub_1ACBF7940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void **)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  uint64_t v8 = *(void **)((a1 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = v7;
  id v9 = v7;

  unint64_t v10 = (void *)((v5 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)((v6 + 39) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_1ACE753F8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = v13 + 24;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = ((unint64_t)v10 + v15 + 16) & ~v15;
  uint64_t v17 = ((unint64_t)v11 + v15 + 16) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))(v16, v17, v12);
  uint64_t v18 = *(void *)(v14 + 40);
  uint64_t v19 = *(void *)(a3 + 16);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = v18 + v21;
  size_t v23 = (void *)((v22 + v16) & ~v21);
  uint64_t v24 = (void *)((v22 + v17) & ~v21);
  unsigned int v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  LODWORD(v17) = v25(v23, 2, v19);
  int v26 = v25(v24, 2, v19);
  if (!v17)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 24))(v23, v24, v19);
      return a1;
    }
    unsigned int v33 = *(void (**)(void *, uint64_t))(v20 + 8);
    uint64_t v32 = v20 + 8;
    v33(v23, v19);
    unsigned int v34 = *(_DWORD *)(v32 + 76);
    size_t v28 = *(void *)(v32 + 56);
    if (v34 > 1) {
      goto LABEL_15;
    }
    if (v28 <= 3)
    {
      unsigned int v36 = (~(-1 << (8 * v28)) - v34 + 2) >> (8 * v28);
      if (v36 > 0xFFFE)
      {
        uint64_t v31 = 4;
      }
      else
      {
        BOOL v37 = v36 != 0;
        BOOL v38 = v36 >= 0xFF;
        uint64_t v31 = 2;
        if (!v38) {
          uint64_t v31 = v37;
        }
      }
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (!v26)
  {
    (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v23, v24, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v23, 0, 2, v19);
    return a1;
  }
  unsigned int v27 = *(_DWORD *)(v20 + 84);
  size_t v28 = *(void *)(v20 + 64);
  if (v27 <= 1)
  {
    if (v28 <= 3)
    {
      unsigned int v29 = (~(-1 << (8 * v28)) - v27 + 2) >> (8 * v28);
      uint64_t v30 = v29 != 0;
      if (v29 >= 0xFF) {
        uint64_t v30 = 2;
      }
      if (v29 <= 0xFFFE) {
        uint64_t v31 = v30;
      }
      else {
        uint64_t v31 = 4;
      }
      goto LABEL_14;
    }
LABEL_13:
    uint64_t v31 = 1;
LABEL_14:
    v28 += v31;
  }
LABEL_15:
  memcpy(v23, v24, v28);
  return a1;
}

uint64_t sub_1ACBF7C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  unint64_t v5 = (_OWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (_OWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v5 = *v6;
  uint64_t v7 = sub_1ACE753F8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = ((unint64_t)v5 + v10 + 16) & ~v10;
  uint64_t v12 = ((unint64_t)v6 + v10 + 16) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v12, v7);
  uint64_t v13 = *(void *)(v9 + 32);
  uint64_t v14 = *(void *)(a3 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (void *)((v17 + v11) & ~v16);
  uint64_t v19 = (const void *)((v17 + v12) & ~v16);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v19, 2, v14))
  {
    unsigned int v20 = *(_DWORD *)(v15 + 84);
    size_t v21 = *(void *)(v15 + 64);
    if (v20 <= 1)
    {
      if (v21 <= 3)
      {
        unsigned int v23 = (~(-1 << (8 * v21)) - v20 + 2) >> (8 * v21);
        uint64_t v24 = v23 != 0;
        if (v23 >= 0xFF) {
          uint64_t v24 = 2;
        }
        if (v23 <= 0xFFFE) {
          uint64_t v22 = v24;
        }
        else {
          uint64_t v22 = 4;
        }
      }
      else
      {
        uint64_t v22 = 1;
      }
      v21 += v22;
    }
    memcpy(v18, v19, v21);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v18, v19, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 2, v14);
  }
  return a1;
}

uint64_t sub_1ACBF7E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void **)((a1 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);

  uint64_t v8 = (void *)((v5 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = (void *)((v6 + 39) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1ACE753F8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v11 + 40;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = ((unint64_t)v8 + v13 + 16) & ~v13;
  uint64_t v15 = ((unint64_t)v9 + v13 + 16) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40))(v14, v15, v10);
  uint64_t v16 = *(void *)(v12 + 24);
  uint64_t v17 = *(void *)(a3 + 16);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = v16 + v19;
  size_t v21 = (void *)((v20 + v14) & ~v19);
  uint64_t v22 = (void *)((v20 + v15) & ~v19);
  unsigned int v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v15) = v23(v21, 2, v17);
  int v24 = v23(v22, 2, v17);
  if (!v15)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v21, v22, v17);
      return a1;
    }
    uint64_t v31 = *(void (**)(void *, uint64_t))(v18 + 8);
    uint64_t v30 = v18 + 8;
    v31(v21, v17);
    unsigned int v32 = *(_DWORD *)(v30 + 76);
    size_t v26 = *(void *)(v30 + 56);
    if (v32 > 1) {
      goto LABEL_15;
    }
    if (v26 <= 3)
    {
      unsigned int v34 = (~(-1 << (8 * v26)) - v32 + 2) >> (8 * v26);
      if (v34 > 0xFFFE)
      {
        uint64_t v29 = 4;
      }
      else
      {
        BOOL v35 = v34 != 0;
        BOOL v36 = v34 >= 0xFF;
        uint64_t v29 = 2;
        if (!v36) {
          uint64_t v29 = v35;
        }
      }
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (!v24)
  {
    (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v21, v22, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v21, 0, 2, v17);
    return a1;
  }
  unsigned int v25 = *(_DWORD *)(v18 + 84);
  size_t v26 = *(void *)(v18 + 64);
  if (v25 <= 1)
  {
    if (v26 <= 3)
    {
      unsigned int v27 = (~(-1 << (8 * v26)) - v25 + 2) >> (8 * v26);
      uint64_t v28 = v27 != 0;
      if (v27 >= 0xFF) {
        uint64_t v28 = 2;
      }
      if (v27 <= 0xFFFE) {
        uint64_t v29 = v28;
      }
      else {
        uint64_t v29 = 4;
      }
      goto LABEL_14;
    }
LABEL_13:
    uint64_t v29 = 1;
LABEL_14:
    v26 += v29;
  }
LABEL_15:
  memcpy(v21, v22, v26);
  return a1;
}

uint64_t sub_1ACBF80C4(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_1ACE753F8() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = *(void *)(v8 + 64);
  unsigned int v14 = v9 - 2;
  if (v9 <= 1) {
    unsigned int v14 = 0;
  }
  if (v7 <= v14) {
    unsigned int v15 = v14;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v6 + 84);
  }
  if (v15 <= 0x7FFFFFFF) {
    unsigned int v16 = 0x7FFFFFFF;
  }
  else {
    unsigned int v16 = v15;
  }
  if (v9 <= 1)
  {
    if (v13 <= 3)
    {
      unsigned int v18 = (~(-1 << (8 * v13)) - v9 + 2) >> (8 * v13);
      if (v18 > 0xFFFE)
      {
        uint64_t v17 = 4;
      }
      else
      {
        BOOL v19 = v18 != 0;
        BOOL v20 = v18 >= 0xFF;
        uint64_t v17 = 2;
        if (!v20) {
          uint64_t v17 = v19;
        }
      }
    }
    else
    {
      uint64_t v17 = 1;
    }
    v13 += v17;
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v16) {
    goto LABEL_39;
  }
  uint64_t v21 = v13 + ((v11 + ((v10 + 48) & ~v10) + v12) & ~v12);
  char v22 = 8 * v21;
  if (v21 <= 3)
  {
    unsigned int v25 = ((a2 - v16 + ~(-1 << v22)) >> v22) + 1;
    if (HIWORD(v25))
    {
      int v23 = *(_DWORD *)(a1 + v21);
      if (!v23) {
        goto LABEL_39;
      }
      goto LABEL_29;
    }
    if (v25 > 0xFF)
    {
      int v23 = *(unsigned __int16 *)(a1 + v21);
      if (!*(_WORD *)(a1 + v21)) {
        goto LABEL_39;
      }
      goto LABEL_29;
    }
    if (v25 < 2)
    {
LABEL_39:
      unint64_t v29 = a1 & 0xFFFFFFFFFFFFFFF8;
      if ((v15 & 0x80000000) != 0)
      {
        unint64_t v31 = (((v29 + 39) & 0xFFFFFFFFFFFFFFF8) + v10 + 16) & ~v10;
        if (v7 == v16)
        {
          unsigned int v32 = *(uint64_t (**)(unint64_t))(v6 + 48);
          return v32(v31);
        }
        else
        {
          unsigned int v33 = (*(uint64_t (**)(unint64_t, uint64_t, void, uint64_t))(v8 + 48))((v31 + v11 + v12) & ~v12, v9, *(void *)(a3 + 16), v6);
          if (v33 >= 3) {
            return v33 - 2;
          }
          else {
            return 0;
          }
        }
      }
      else
      {
        unint64_t v30 = *(void *)(v29 + 24);
        if (v30 >= 0xFFFFFFFF) {
          LODWORD(v30) = -1;
        }
        return (v30 + 1);
      }
    }
  }
  int v23 = *(unsigned __int8 *)(a1 + v21);
  if (!*(unsigned char *)(a1 + v21)) {
    goto LABEL_39;
  }
LABEL_29:
  int v26 = (v23 - 1) << v22;
  if (v21 > 3) {
    int v26 = 0;
  }
  if (v21)
  {
    if (v21 <= 3) {
      int v27 = v21;
    }
    else {
      int v27 = 4;
    }
    switch(v27)
    {
      case 2:
        int v28 = *(unsigned __int16 *)a1;
        break;
      case 3:
        int v28 = *(unsigned __int16 *)a1 | (*(unsigned __int8 *)(a1 + 2) << 16);
        break;
      case 4:
        int v28 = *(_DWORD *)a1;
        break;
      default:
        int v28 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v28 = 0;
  }
  return v16 + (v28 | v26) + 1;
}

void sub_1ACBF83D4(unint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_1ACE753F8() - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = *(void *)(v8 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v10 + 64);
  unsigned int v16 = v11 - 2;
  if (v11 <= 1) {
    unsigned int v16 = 0;
  }
  if (v9 <= v16) {
    unsigned int v17 = v16;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v8 + 84);
  }
  if (v17 <= 0x7FFFFFFF) {
    unsigned int v18 = 0x7FFFFFFF;
  }
  else {
    unsigned int v18 = v17;
  }
  if (v11 <= 1)
  {
    if (v15 <= 3)
    {
      unsigned int v20 = (~(-1 << (8 * v15)) - v11 + 2) >> (8 * v15);
      if (v20 > 0xFFFE)
      {
        uint64_t v19 = 4;
      }
      else
      {
        BOOL v21 = v20 != 0;
        BOOL v22 = v20 >= 0xFF;
        uint64_t v19 = 2;
        if (!v22) {
          uint64_t v19 = v21;
        }
      }
    }
    else
    {
      uint64_t v19 = 1;
    }
    v15 += v19;
  }
  size_t v23 = v15 + ((v13 + ((v12 + 48) & ~v12) + v14) & ~v14);
  if (a3 <= v18)
  {
    int v24 = 0;
  }
  else if (v23 <= 3)
  {
    unsigned int v27 = ((a3 - v18 + ~(-1 << (8 * v23))) >> (8 * v23)) + 1;
    if (HIWORD(v27))
    {
      int v24 = 4;
    }
    else if (v27 >= 0x100)
    {
      int v24 = 2;
    }
    else
    {
      int v24 = v27 > 1;
    }
  }
  else
  {
    int v24 = 1;
  }
  if (v18 < a2)
  {
    unsigned int v25 = ~v18 + a2;
    if (v23 < 4)
    {
      int v26 = (v25 >> (8 * v23)) + 1;
      if (v23)
      {
        int v28 = v25 & ~(-1 << (8 * v23));
        bzero((void *)a1, v23);
        if (v23 == 3)
        {
          *(_WORD *)a1 = v28;
          *(unsigned char *)(a1 + 2) = BYTE2(v28);
        }
        else if (v23 == 2)
        {
          *(_WORD *)a1 = v28;
        }
        else
        {
          *(unsigned char *)a1 = v28;
        }
      }
    }
    else
    {
      bzero((void *)a1, v23);
      *(_DWORD *)a1 = v25;
      int v26 = 1;
    }
    switch(v24)
    {
      case 1:
        *(unsigned char *)(a1 + v23) = v26;
        return;
      case 2:
        *(_WORD *)(a1 + v23) = v26;
        return;
      case 3:
        goto LABEL_60;
      case 4:
        *(_DWORD *)(a1 + v23) = v26;
        return;
      default:
        return;
    }
  }
  switch(v24)
  {
    case 1:
      *(unsigned char *)(a1 + v23) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_38;
    case 2:
      *(_WORD *)(a1 + v23) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_38;
    case 3:
LABEL_60:
      __break(1u);
      JUMPOUT(0x1ACBF8774);
    case 4:
      *(_DWORD *)(a1 + v23) = 0;
      goto LABEL_37;
    default:
LABEL_37:
      if (a2)
      {
LABEL_38:
        unint64_t v29 = a1 & 0xFFFFFFFFFFFFFFF8;
        if ((v17 & 0x80000000) != 0)
        {
          unint64_t v31 = (((v29 + 39) & 0xFFFFFFFFFFFFFFF8) + v12 + 16) & ~v12;
          if (v9 == v18)
          {
            unsigned int v32 = *(void (**)(unint64_t, uint64_t))(v8 + 56);
            v32(v31, a2);
          }
          else
          {
            unint64_t v33 = (v31 + v13 + v14) & ~v14;
            unsigned int v34 = *(void (**)(unint64_t, void, uint64_t))(v10 + 56);
            v34(v33, (a2 + 2), v11);
          }
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v30 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v30 = (a2 - 1);
          }
          *(void *)(v29 + 24) = v30;
        }
      }
      return;
  }
}

void sub_1ACBF879C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  unint64_t v3 = v2 + 4;
  uint64_t v4 = v2 + 5;
  os_unfair_lock_lock(v2 + 5);
  sub_1ACA8ADD8(v3, &v8);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = v8;
  os_unfair_lock_lock(v4);
  sub_1ACBF8918(v3);
  os_unfair_lock_unlock(v4);
  uint64_t v6 = *(void (**)(uint64_t, void))(v1 + 24);
  if (v6)
  {
    swift_retain();
    os_unfair_lock_lock(v4);
    sub_1ACA8ADD8(v3, &v7);
    os_unfair_lock_unlock(v4);
    v6(v5, v7);
    sub_1ACA76F34((uint64_t)v6);
  }
}

unsigned char *sub_1ACBF8918(unsigned char *result)
{
  if (*result == 1) {
    *uint64_t result = 0;
  }
  return result;
}

void sub_1ACBF892C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  unint64_t v3 = v2 + 4;
  uint64_t v4 = v2 + 5;
  os_unfair_lock_lock(v2 + 5);
  sub_1ACA8ADD8(v3, &v8);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = v8;
  os_unfair_lock_lock(v4);
  sub_1ACBF8AA8(v3);
  os_unfair_lock_unlock(v4);
  uint64_t v6 = *(void (**)(uint64_t, void))(v1 + 24);
  if (v6)
  {
    swift_retain();
    os_unfair_lock_lock(v4);
    sub_1ACA8ADD8(v3, &v7);
    os_unfair_lock_unlock(v4);
    v6(v5, v7);
    sub_1ACA76F34((uint64_t)v6);
  }
}

unsigned char *sub_1ACBF8AA8(unsigned char *result)
{
  if (!*result) {
    *uint64_t result = 1;
  }
  return result;
}

void sub_1ACBF8AC0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  unint64_t v3 = v2 + 4;
  uint64_t v4 = v2 + 5;
  os_unfair_lock_lock(v2 + 5);
  sub_1ACA8ADD8(v3, &v8);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = v8;
  os_unfair_lock_lock(v4);
  sub_1ACBF8C3C(v3);
  os_unfair_lock_unlock(v4);
  uint64_t v6 = *(void (**)(uint64_t, void))(v1 + 24);
  if (v6)
  {
    swift_retain();
    os_unfair_lock_lock(v4);
    sub_1ACA8ADD8(v3, &v7);
    os_unfair_lock_unlock(v4);
    v6(v5, v7);
    sub_1ACA76F34((uint64_t)v6);
  }
}

unsigned char *sub_1ACBF8C3C(unsigned char *result)
{
  if (*result <= 1u) {
    *uint64_t result = 2;
  }
  return result;
}

uint64_t sub_1ACBF8C54(void *a1, _OWORD *a2)
{
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3720);
  uint64_t v4 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3728);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v32 = v7;
  uint64_t v33 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3730);
  uint64_t v39 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  unsigned int v34 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3738);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v37 = v12;
  uint64_t v38 = v13;
  MEMORY[0x1F4188790](v12);
  BOOL v35 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(swift_allocObject() + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3740);
  swift_allocObject();
  id v15 = a1;
  uint64_t v40 = sub_1ACE75A18();
  sub_1ACA50D4C(0, &qword_1E99F3748);
  sub_1ACA51EA4(&qword_1E99F3750, &qword_1E99F3740);
  sub_1ACE75AE8();
  swift_release();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  long long v17 = a2[1];
  *(_OWORD *)(v16 + 24) = *a2;
  *(_OWORD *)(v16 + 40) = v17;
  *(_OWORD *)(v16 + 56) = a2[2];
  id v18 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3758);
  sub_1ACA51EA4(&qword_1E99F3760, &qword_1E99F3720);
  uint64_t v19 = v31;
  sub_1ACE75C28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  sub_1ACA51EA4(&qword_1E99F3768, &qword_1E99F3728);
  uint64_t v20 = v32;
  uint64_t v21 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v20);
  uint64_t v40 = v21;
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_1ACBFBFE0;
  *(void *)(v23 + 24) = v22;
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3770);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3778);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3780);
  sub_1ACA51EA4(&qword_1E99F3788, &qword_1E99F3770);
  sub_1ACA51EA4(&qword_1E99F3790, &qword_1E99F3780);
  int v24 = v34;
  sub_1ACE75C78();
  swift_release();
  swift_release();
  sub_1ACA51EA4(&qword_1E99F3798, &qword_1E99F3730);
  swift_retain_n();
  uint64_t v25 = v36;
  int v26 = v35;
  sub_1ACE75AF8();
  swift_release_n();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v25);
  sub_1ACA51EA4(&qword_1E99F37A0, &qword_1E99F3738);
  uint64_t v27 = v37;
  uint64_t v28 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v27);
  return v28;
}

uint64_t sub_1ACBF92E4(void *a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F37A8);
  swift_allocObject();
  uint64_t v10 = sub_1ACE758B8();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a3;
  v6[3] = a1;
  v6[4] = a2;
  v6[5] = v10;
  sub_1ACA51EA4(&qword_1E99F37B0, &qword_1E99F37A8);
  swift_retain();
  id v7 = a1;
  id v8 = a2;
  swift_retain();
  sub_1ACE75AF8();
  swift_release();
  return swift_release();
}

uint64_t sub_1ACBF941C(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1ACBF9498(a3, a4, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACBF9498(void *a1, void *a2, uint64_t a3)
{
  uint64_t v7 = sub_1ACE75DC8();
  uint64_t v25 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE75E48();
  uint64_t v23 = *(void *)(v10 - 8);
  uint64_t v24 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v3 + 16);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  id v15 = (void *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = a3;
  uint64_t v16 = *(void *)(v13 + 24);
  *(void *)(v13 + 24) = sub_1ACBFC23C;
  *(void *)(v13 + 32) = v15;
  id v17 = a1;
  id v18 = a2;
  swift_retain();
  sub_1ACA76F34(v16);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v17;
  *(void *)(v19 + 24) = v3;
  aBlock[4] = sub_1ACBFC288;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_40;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = v17;
  swift_retain();
  sub_1ACE75E08();
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1ACBFC344((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v12, v9, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v24);
  return swift_release();
}

void sub_1ACBF97DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(os_unfair_lock_s **)(a2 + 16);
  uint64_t v4 = v3 + 4;
  uint64_t v5 = v3 + 5;
  os_unfair_lock_lock(v3 + 5);
  sub_1ACA8ADD8(v4, &v9);
  os_unfair_lock_unlock(v5);
  uint64_t v6 = v9;
  os_unfair_lock_lock(v5);
  sub_1ACBFC5DC(v4);
  os_unfair_lock_unlock(v5);
  uint64_t v7 = *(void (**)(uint64_t, void))(a2 + 24);
  if (v7)
  {
    swift_retain();
    os_unfair_lock_lock(v5);
    sub_1ACA8ADD8(v4, &v8);
    os_unfair_lock_unlock(v5);
    v7(v6, v8);
    sub_1ACA76F34((uint64_t)v7);
  }
}

void sub_1ACBF9958(uint64_t a1)
{
  unint64_t v2 = *(os_unfair_lock_s **)(a1 + 16);
  uint64_t v3 = v2 + 4;
  uint64_t v4 = v2 + 5;
  os_unfair_lock_lock(v2 + 5);
  sub_1ACA8ADD8(v3, &v8);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = v8;
  os_unfair_lock_lock(v4);
  sub_1ACBF9AD4(v3);
  os_unfair_lock_unlock(v4);
  uint64_t v6 = *(void (**)(uint64_t, void))(a1 + 24);
  if (v6)
  {
    swift_retain();
    os_unfair_lock_lock(v4);
    sub_1ACA8ADD8(v3, &v7);
    os_unfair_lock_unlock(v4);
    v6(v5, v7);
    sub_1ACA76F34((uint64_t)v6);
  }
}

unsigned char *sub_1ACBF9AD4(unsigned char *result)
{
  *uint64_t result = 2;
  return result;
}

uint64_t sub_1ACBF9AE0(uint64_t result, char a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  if (result != 1 && a2 == 1)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_1ACBF9B74(a4, a5, a6);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1ACBF9B74(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1ACE75E48();
  uint64_t v12 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)(v4 + 24);
  id v15 = (void *)swift_allocObject();
  v15[2] = v4;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = a3;
  aBlock[4] = sub_1ACBFC2E4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_35;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  id v17 = a1;
  id v18 = a2;
  swift_retain();
  sub_1ACE75E08();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1ACBFC344((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v14, v11, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v21);
  return swift_release();
}

void sub_1ACBF9E54(void *a1, uint64_t a2)
{
  objc_msgSend(a1, sel_startReading);
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);
  uint64_t v5 = v4 + 4;
  uint64_t v6 = v4 + 5;
  os_unfair_lock_lock(v4 + 5);
  sub_1ACA8ADD8(v5, &v10);
  os_unfair_lock_unlock(v6);
  uint64_t v7 = v10;
  os_unfair_lock_lock(v6);
  sub_1ACBB3288(v5);
  os_unfair_lock_unlock(v6);
  uint64_t v8 = *(void (**)(uint64_t, void))(v3 + 24);
  if (v8)
  {
    swift_retain();
    os_unfair_lock_lock(v6);
    sub_1ACA8ADD8(v5, &v9);
    os_unfair_lock_unlock(v6);
    v8(v7, v9);
    sub_1ACA76F34((uint64_t)v8);
  }
}

void sub_1ACBF9FE0(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v58 = a4;
  id v56 = a3;
  id v59 = a2;
  uint64_t v55 = sub_1ACE76C38();
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a1;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(os_unfair_lock_s **)(v7 + 16);
  unsigned __int8 v9 = v8 + 4;
  unsigned __int8 v10 = v8 + 5;
  os_unfair_lock_lock(v8 + 5);
  sub_1ACA8ADD8(v9, v60);
  os_unfair_lock_unlock(v10);
  if (v60[0] == 1)
  {
    v53 = (void (**)(char *, uint64_t))(v54 + 8);
    uint64_t v48 = &v60[8];
    id v51 = (id)*MEMORY[0x1E4F1CF80];
    long long v50 = xmmword_1ACE843F0;
    uint64_t v52 = v7;
    do
    {
      if (objc_msgSend(v59, sel_status, v48) != (id)1) {
        break;
      }
      uint64_t v11 = (opaqueCMSampleBuffer *)objc_msgSend(v56, sel_copyNextSampleBuffer);
      if (!v11) {
        break;
      }
      uint64_t v12 = v11;
      uint64_t v13 = (void *)MEMORY[0x1AD11A460]();
      if (qword_1E99F0070 != -1) {
        swift_once();
      }
      uint64_t v14 = (void *)qword_1E99F3710;
      uint64_t v15 = v55;
      if (qword_1E99F3710)
      {
        v57 = v13;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F37C0);
        uint64_t v16 = (_OWORD *)swift_allocObject();
        v16[1] = v50;
        id v17 = v14;
        sub_1ACE76C28();
        id v63 = v16;
        sub_1ACBFC344(&qword_1E99F37C8, MEMORY[0x1E4FBCA18]);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F37D0);
        sub_1ACA51EA4(&qword_1E99F37D8, &qword_1E99F37D0);
        uint64_t v18 = sub_1ACE770E8();
        MEMORY[0x1F4188790](v18);
        *(&v48 - 2) = v17;
        id v19 = v51;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F37E0);
        sub_1ACE76C18();
        (*v53)(v6, v15);

        uint64_t v23 = *(void **)v60;
        if (*(void *)v60)
        {
          objc_msgSend(*(id *)v60, sel_setFrameLength_, objc_msgSend(*(id *)v60, sel_frameCapacity));
          CMSampleBufferGetPresentationTimeStamp((CMTime *)v60, v12);
          uint64_t v24 = *(void *)v60;
          uint64_t v25 = *(void *)&v60[16];
          uint64_t v26 = *(void *)&v60[8];
          CMSampleBufferGetDuration((CMTime *)v60, v12);
          uint64_t v27 = *(void *)v60;
          uint64_t v28 = *(void *)&v60[16];
          uint64_t v29 = *(void *)&v60[8];

          *(void *)&long long v72 = v24;
          *((void *)&v72 + 1) = v26;
          *(void *)&long long v73 = v25;
          *((void *)&v73 + 1) = v27;
          *(void *)&long long v74 = v29;
          *((void *)&v74 + 1) = v28;
          uint64_t v30 = v49;
          id v31 = v59;
          sub_1ACE76B68();
          objc_msgSend(v31, sel_timeRange);
          uint64_t v67 = *(void *)v60;
          long long v69 = *(_OWORD *)&v60[16];
          uint64_t v68 = *(void *)&v60[8];
          uint64_t v70 = v61;
          uint64_t v71 = v62;
          sub_1ACE76B68();
          sub_1ACE76B78();
          long long v32 = v65;
          *(_OWORD *)(v30 + 32) = v64;
          *(_OWORD *)(v30 + 48) = v32;
          *(_OWORD *)(v30 + 64) = v66;
          *(unsigned char *)(v30 + 80) = 0;
          *(void *)v60 = v23;
          long long v33 = v73;
          unsigned int v34 = v48;
          *uint64_t v48 = v72;
          v34[1] = v33;
          v34[2] = v74;
          id v35 = v23;
          sub_1ACE75898();

          uint64_t v7 = v52;
          uint64_t v13 = v57;
          goto LABEL_10;
        }

        uint64_t v7 = v52;
        uint64_t v13 = v57;
      }
      objc_msgSend(v59, sel_cancelReading);
      sub_1ACBFC2F0();
      uint64_t v20 = (void *)swift_allocError();
      *(void *)uint64_t v21 = 0;
      *(unsigned char *)(v21 + 8) = 2;
      *(void *)v60 = v20;
      sub_1ACE75888();

LABEL_10:

      uint64_t v22 = *(os_unfair_lock_s **)(v7 + 16);
      unsigned __int8 v9 = v22 + 4;
      unsigned __int8 v10 = v22 + 5;
      os_unfair_lock_lock(v22 + 5);
      sub_1ACA8ADD8(v9, v60);
      os_unfair_lock_unlock(v10);
    }
    while (v60[0] == 1);
  }
  os_unfair_lock_lock(v10);
  sub_1ACA8ADD8(v9, v60);
  os_unfair_lock_unlock(v10);
  if (v60[0] == 2) {
    objc_msgSend(v59, sel_cancelReading);
  }
  if (objc_msgSend(v59, sel_status) == (id)2)
  {
    os_unfair_lock_lock(v10);
    sub_1ACA8ADD8(v9, v60);
    os_unfair_lock_unlock(v10);
    uint64_t v36 = v60[0];
    os_unfair_lock_lock(v10);
    sub_1ACBFA978(v9);
    os_unfair_lock_unlock(v10);
    uint64_t v37 = *(void (**)(uint64_t, void))(v7 + 24);
    if (v37)
    {
      swift_retain();
      os_unfair_lock_lock(v10);
      sub_1ACA8ADD8(v9, v60);
      os_unfair_lock_unlock(v10);
      v37(v36, v60[0]);
      sub_1ACA76F34((uint64_t)v37);
    }
    *(void *)v60 = 0;
    sub_1ACE75888();
  }
  else
  {
    if (objc_msgSend(v59, sel_status) == (id)3)
    {
      id v38 = objc_msgSend(v59, sel_error);
      if (v38)
      {
        *(void *)v60 = v38;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
        sub_1ACA50D4C(0, &qword_1EB771CC0);
        if (swift_dynamicCast())
        {
          id v39 = v63;
          id v40 = objc_msgSend(v63, sel_code);

          if (v40 == (id)-11847)
          {
            id v41 = objc_msgSend(v59, sel_asset);
            sub_1ACBFA984(v41, v58);

            return;
          }
        }
      }
      id v45 = objc_msgSend(v59, sel_error);
      sub_1ACBFC2F0();
      uint64_t v46 = swift_allocError();
      *(void *)uint64_t v47 = v45;
      *(unsigned char *)(v47 + 8) = 1;
      *(void *)v60 = v46;
      sub_1ACE75888();
      uint64_t v44 = (void *)v46;
    }
    else
    {
      os_unfair_lock_lock(v10);
      sub_1ACA8ADD8(v9, v60);
      os_unfair_lock_unlock(v10);
      if (!v60[0]) {
        return;
      }
      sub_1ACBFC2F0();
      uint64_t v42 = swift_allocError();
      *(void *)uint64_t v43 = 1;
      *(unsigned char *)(v43 + 8) = 2;
      *(void *)v60 = v42;
      sub_1ACE75888();
      uint64_t v44 = (void *)v42;
    }
  }
}

unsigned char *sub_1ACBFA978(unsigned char *result)
{
  *uint64_t result = 3;
  return result;
}

uint64_t sub_1ACBFA984(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v64 = a2;
  uint64_t v5 = *v2;
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3720);
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  v57 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3728);
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v58 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E99EFEF0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1ACE754C8();
  __swift_project_value_buffer(v8, (uint64_t)qword_1E99F2C10);
  unsigned __int8 v9 = sub_1ACE75498();
  os_log_type_t v10 = sub_1ACE76C08();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    v66[0] = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_1ACE77D48();
    uint64_t v65 = sub_1ACA3189C(v13, v14, v66);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v9, v10, "[%s]: Reader was invalidated. Attempting to rebuild the asset reader.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v12, -1, -1);
    MEMORY[0x1AD11B340](v11, -1, -1);
  }

  uint64_t v15 = v3[2];
  uint64_t v16 = *(os_unfair_lock_s **)(v15 + 16);
  id v17 = v16 + 4;
  uint64_t v18 = v16 + 5;
  os_unfair_lock_lock(v16 + 5);
  sub_1ACA8ADD8(v17, v66);
  os_unfair_lock_unlock(v18);
  uint64_t v19 = LOBYTE(v66[0]);
  os_unfair_lock_lock(v18);
  sub_1ACBFB138(v17);
  os_unfair_lock_unlock(v18);
  uint64_t v20 = *(void (**)(uint64_t, void))(v15 + 24);
  if (v20)
  {
    swift_retain();
    os_unfair_lock_lock(v18);
    sub_1ACA8ADD8(v17, v66);
    os_unfair_lock_unlock(v18);
    v20(v19, LOBYTE(v66[0]));
    sub_1ACA76F34((uint64_t)v20);
  }
  char v21 = *((unsigned char *)v3 + 80);
  uint64_t v63 = v5;
  if (v21)
  {
    uint64_t v22 = (uint64_t *)MEMORY[0x1E4F1FA30];
    int v23 = *(_DWORD *)(MEMORY[0x1E4F1FA30] + 8);
    int v53 = *(_DWORD *)(MEMORY[0x1E4F1FA30] + 12);
    int v54 = v23;
    uint64_t v24 = (uint64_t *)(MEMORY[0x1E4F1FA30] + 24);
    uint64_t v25 = (uint64_t *)(MEMORY[0x1E4F1FA30] + 40);
    uint64_t v26 = (uint64_t *)(MEMORY[0x1E4F1FA30] + 16);
    int v27 = *(_DWORD *)(MEMORY[0x1E4F1FA30] + 32);
    int v55 = *(_DWORD *)(MEMORY[0x1E4F1FA30] + 36);
    int v56 = v27;
  }
  else
  {
    uint64_t v22 = v3 + 4;
    uint64_t v25 = v3 + 9;
    int v28 = *((_DWORD *)v3 + 16);
    int v55 = *((_DWORD *)v3 + 17);
    int v56 = v28;
    uint64_t v24 = v3 + 7;
    uint64_t v26 = v3 + 6;
    int v29 = *((_DWORD *)v3 + 10);
    int v53 = *((_DWORD *)v3 + 11);
    int v54 = v29;
  }
  uint64_t v30 = a1;
  uint64_t v52 = *v25;
  uint64_t v51 = *v24;
  uint64_t v31 = *v26;
  uint64_t v32 = *v22;
  *(void *)(swift_allocObject() + 16) = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3740);
  swift_allocObject();
  id v33 = v30;
  v66[0] = sub_1ACE75A18();
  sub_1ACA50D4C(0, &qword_1E99F3748);
  sub_1ACA51EA4(&qword_1E99F3750, &qword_1E99F3740);
  unsigned int v34 = v57;
  sub_1ACE75AE8();
  swift_release();
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v33;
  *(void *)(v35 + 24) = v32;
  int v36 = v53;
  *(_DWORD *)(v35 + 32) = v54;
  *(_DWORD *)(v35 + 36) = v36;
  uint64_t v37 = v51;
  *(void *)(v35 + 40) = v31;
  *(void *)(v35 + 48) = v37;
  LODWORD(v37) = v55;
  *(_DWORD *)(v35 + 56) = v56;
  *(_DWORD *)(v35 + 60) = v37;
  *(void *)(v35 + 64) = v52;
  id v38 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3758);
  sub_1ACA51EA4(&qword_1E99F3760, &qword_1E99F3720);
  id v39 = v58;
  uint64_t v40 = v61;
  sub_1ACE75C28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v34, v40);
  sub_1ACA51EA4(&qword_1E99F3768, &qword_1E99F3728);
  uint64_t v41 = v62;
  uint64_t v42 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v39, v41);
  v66[0] = v42;
  uint64_t v43 = swift_allocObject();
  uint64_t v44 = v63;
  *(void *)(v43 + 16) = v63;
  uint64_t v45 = swift_allocObject();
  swift_weakInit();
  uint64_t v46 = (void *)swift_allocObject();
  v46[2] = v45;
  v46[3] = v64;
  v46[4] = v44;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = sub_1ACBFC444;
  *(void *)(v47 + 24) = v46;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3770);
  sub_1ACA51EA4(&qword_1E99F3788, &qword_1E99F3770);
  uint64_t v48 = sub_1ACE75B88();
  swift_release();
  swift_release();
  swift_release();
  v3[11] = v48;
  return swift_release();
}

unsigned char *sub_1ACBFB138(unsigned char *result)
{
  *uint64_t result = 0;
  return result;
}

void sub_1ACBFB140(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    id v2 = v1;
    if (qword_1E99EFEF0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1ACE754C8();
    __swift_project_value_buffer(v3, (uint64_t)qword_1E99F2C10);
    id v4 = v1;
    id v5 = v1;
    oslog = sub_1ACE75498();
    os_log_type_t v6 = sub_1ACE76BE8();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v15 = v9;
      *(_DWORD *)uint64_t v7 = 136315394;
      uint64_t v10 = sub_1ACE77D48();
      sub_1ACA3189C(v10, v11, &v15);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2112;
      id v12 = v1;
      uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
      sub_1ACE76FF8();
      *uint64_t v8 = v14;

      _os_log_impl(&dword_1AC9D5000, oslog, v6, "[%s]: Failed to rebuild the asset reader with error: %@", (uint8_t *)v7, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v8, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v9, -1, -1);
      MEMORY[0x1AD11B340](v7, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_1ACBFB3B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1E99EFEF0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1ACE754C8();
  __swift_project_value_buffer(v7, (uint64_t)qword_1E99F2C10);
  id v8 = a1;
  uint64_t v9 = sub_1ACE75498();
  os_log_type_t v10 = sub_1ACE76C08();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v16 = v12;
    *(_DWORD *)uint64_t v11 = 136315650;
    uint64_t v13 = sub_1ACE77D48();
    sub_1ACA3189C(v13, v14, &v16);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2048;
    objc_msgSend(v8, sel_timeRange);
    sub_1ACE76F48();
    sub_1ACE76FF8();

    *(_WORD *)(v11 + 22) = 2048;
    objc_msgSend(v8, sel_timeRange);
    sub_1ACE76F48();
    sub_1ACE76FF8();

    _os_log_impl(&dword_1AC9D5000, v9, v10, "[%s]: Resuming asset reader from (start: %f, duration: %f).", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v12, -1, -1);
    MEMORY[0x1AD11B340](v11, -1, -1);
  }
  else
  {
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1ACBF9498(v8, a2, a4);
    return swift_release();
  }
  return result;
}

void sub_1ACBFB650(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = *MEMORY[0x1E4F15BA8];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1ACB2DC40;
  *(void *)(v8 + 24) = v6;
  v10[4] = sub_1ACBFC480;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  v10[2] = sub_1ACBFB870;
  v10[3] = &block_descriptor_68;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_loadTracksWithMediaType_completionHandler_, v7, v9);
  _Block_release(v9);
}

void sub_1ACBFB778(unint64_t a1, void *a2, void (*a3)(void *, uint64_t))
{
  if (a1)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1ACE77508();
      swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_4;
      }
    }
    else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      a3((void *)a1, 0);
      return;
    }
  }
  sub_1ACBFC2F0();
  uint64_t v7 = (void *)swift_allocError();
  *(void *)uint64_t v8 = a2;
  *(unsigned char *)(v8 + 8) = 0;
  id v9 = a2;
  a3(v7, 1);
}

uint64_t sub_1ACBFB870(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1ACA50D4C(0, &qword_1E99F37E8);
    uint64_t v4 = sub_1ACE76578();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1ACBFB914(void *a1@<X8>)
{
  if (qword_1E99F0070 != -1) {
    swift_once();
  }
  if (qword_1E99F3710)
  {
    id v2 = (id)qword_1E99F3710;
    swift_bridgeObjectRetain();
    id v3 = objc_msgSend(v2, sel_settings);
    sub_1ACE75FF8();

    id v4 = objc_allocWithZone(MEMORY[0x1E4F16380]);
    sub_1ACA50D4C(0, &qword_1E99F37E8);
    id v5 = (void *)sub_1ACE76558();
    swift_bridgeObjectRelease();
    id v6 = (void *)sub_1ACE75FC8();
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(v4, sel_initWithAudioTracks_audioSettings_, v5, v6);

    objc_msgSend(v7, sel_setAlwaysCopiesSampleData_, 0);
  }
  else
  {
    id v7 = 0;
  }
  *a1 = v7;
}

void sub_1ACBFBA9C(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v6 = *(void **)a3;
  uint64_t v7 = *(void *)(a3 + 8);
  uint64_t v21 = *(void *)(a3 + 24);
  uint64_t v22 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v20 = *(void *)(a3 + 40);
  id v9 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  sub_1ACE761B8();
  uint64_t v24 = v11;
  id v12 = a2;
  sub_1ACE771F8();
  *(void *)(inited + 96) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 72) = 1;
  sub_1ACA364E4(inited);
  id v13 = objc_allocWithZone(MEMORY[0x1E4F16378]);
  unint64_t v14 = (void *)sub_1ACE75FC8();
  swift_bridgeObjectRelease();
  id v23 = 0;
  id v15 = objc_msgSend(v13, sel_initWithAsset_options_error_, v12, v14, &v23);

  if (v15)
  {
    id v16 = v23;

    long long v17 = *(_OWORD *)(MEMORY[0x1E4F1FA30] + 16);
    long long v29 = *MEMORY[0x1E4F1FA30];
    long long v30 = v17;
    long long v31 = *(_OWORD *)(MEMORY[0x1E4F1FA30] + 32);
    if (sub_1ACE76B58())
    {
      id v23 = v6;
      uint64_t v24 = v7;
      uint64_t v25 = v22;
      uint64_t v26 = v21;
      uint64_t v27 = v8;
      uint64_t v28 = v20;
      objc_msgSend(v15, sel_setTimeRange_, &v23);
    }
    objc_msgSend(v15, sel_addOutput_, v9);
    *a4 = v15;
    a4[1] = v9;
    id v18 = v9;
  }
  else
  {
    id v19 = v23;
    sub_1ACE74D78();

    swift_willThrow();
  }
}

uint64_t sub_1ACBFBCE4()
{
  swift_release();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AssetReader()
{
  return self;
}

uint64_t sub_1ACBFBD50()
{
  swift_release();
  sub_1ACA76F34(*(void *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AssetReader.StateController()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for AssetReader.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACBFBE80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetReader.State()
{
  return &type metadata for AssetReader.State;
}

unint64_t sub_1ACBFBEBC()
{
  unint64_t result = qword_1E99F3718;
  if (!qword_1E99F3718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3718);
  }
  return result;
}

uint64_t sub_1ACBFBF10()
{
  return swift_deallocObject();
}

void sub_1ACBFBF48(uint64_t a1, uint64_t a2)
{
  sub_1ACBFB650(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1ACBFBF50()
{
  return swift_deallocObject();
}

void sub_1ACBFBF88(void **a1@<X0>, void *a2@<X8>)
{
  sub_1ACBFBA9C(a1, *(void **)(v2 + 16), v2 + 24, a2);
}

uint64_t sub_1ACBFBFA8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACBFBFE0(void *a1, void *a2)
{
  return sub_1ACBF92E4(a1, a2, v2);
}

uint64_t sub_1ACBFBFE8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACBFC020(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

void sub_1ACBFC050(uint64_t a1)
{
  sub_1ACBF97DC(a1, v1);
}

void sub_1ACBFC058()
{
  sub_1ACBF9958(v0);
}

id sub_1ACBFC060()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153A0]), sel_initStandardFormatWithSampleRate_channels_, 1, 16000.0);
  qword_1E99F3710 = (uint64_t)result;
  return result;
}

void sub_1ACBFC0A4(void *a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  id v5 = a2;
  uint64_t v6 = sub_1ACE75F08();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  id v8 = objc_allocWithZone(MEMORY[0x1E4F153B0]);
  v12[4] = sub_1ACBFC3A8;
  v12[5] = v7;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1ACBFC1D4;
  v12[3] = &block_descriptor_41_0;
  id v9 = _Block_copy(v12);
  id v10 = a1;
  swift_release();
  id v11 = objc_msgSend(v8, sel_initWithPCMFormat_bufferListNoCopy_deallocator_, v5, v6, v9);

  _Block_release(v9);
  *a3 = v11;
}

uint64_t sub_1ACBFC1D4(uint64_t a1, uint64_t a2)
{
  int v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1ACBFC22C(uint64_t a1)
{
  return sub_1ACBF941C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1ACBFC23C(uint64_t a1, char a2)
{
  return sub_1ACBF9AE0(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1ACBFC248()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACBFC288()
{
  sub_1ACBF9E54(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t objectdestroy_21Tm()
{
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1ACBFC2E4()
{
  sub_1ACBF9FE0(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

unint64_t sub_1ACBFC2F0()
{
  unint64_t result = qword_1E99F37B8;
  if (!qword_1E99F37B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F37B8);
  }
  return result;
}

uint64_t sub_1ACBFC344(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1ACBFC38C(void *a1@<X1>, void *a2@<X8>)
{
  sub_1ACBFC0A4(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1ACBFC3A8()
{
  return sub_1ACE75F18();
}

uint64_t sub_1ACBFC3EC()
{
  return swift_deallocObject();
}

void sub_1ACBFC3FC(void **a1)
{
}

uint64_t sub_1ACBFC404()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACBFC444(void *a1, uint64_t a2)
{
  return sub_1ACBFB3B8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1ACBFC450(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

void sub_1ACBFC480(unint64_t a1, void *a2)
{
  sub_1ACBFB778(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t initializeBufferWithCopyOfBuffer for AssetReader.Error(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1ACBFC4D0(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_1ACBFC4D0(id result, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return result;
  }
  return result;
}

void destroy for AssetReader.Error(uint64_t a1)
{
}

void sub_1ACBFC4F4(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
}
  }

uint64_t assignWithCopy for AssetReader.Error(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1ACBFC4D0(*(id *)a2, v4);
  id v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1ACBFC4F4(v5, v6);
  return a1;
}

uint64_t assignWithTake for AssetReader.Error(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1ACBFC4F4(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for AssetReader.Error()
{
  return &type metadata for AssetReader.Error;
}

unsigned char *sub_1ACBFC5DC(unsigned char *a1)
{
  return sub_1ACBFB138(a1);
}

void sub_1ACBFC5F4(void **a1@<X0>, void *a2@<X8>)
{
}

uint64_t static ArtworkURLScheme.resource.getter()
{
  return 0x656372756F736572;
}

uint64_t static ArtworkURLScheme.monogram.getter()
{
  return 0x6D6172676F6E6F6DLL;
}

uint64_t static ArtworkURLScheme.systemGlyph.getter()
{
  return 0x6870796C67;
}

id ArtworkURLScheme.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id ArtworkURLScheme.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArtworkURLScheme();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for ArtworkURLScheme()
{
  return self;
}

id ArtworkURLScheme.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArtworkURLScheme();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t Dictionary.init<A>(probablyUniqueKeysWithValues:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(&v17[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v14);
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  uint64_t v21 = a5;
  uint64_t v22 = a6;
  uint64_t v15 = sub_1ACE76098();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, a4);
  return v15;
}

uint64_t sub_1ACBFC948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 24) - 8) + 16))(a2, a1);
}

uint64_t Dictionary.mapKeys<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v22 = a3;
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  uint64_t v17 = a6;
  uint64_t v18 = a7;
  uint64_t v19 = a8;
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  v13[2] = a4;
  v13[3] = a5;
  v13[4] = a6;
  v13[5] = a7;
  v13[6] = a8;
  v13[7] = sub_1ACBFCAF4;
  v13[8] = &v14;
  uint64_t v8 = sub_1ACE76088();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = sub_1ACB4AA30((void (*)(char *, char *))sub_1ACBFCB78, (uint64_t)v13, v8, TupleTypeMetadata2, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v11);
  sub_1ACE76688();
  swift_getWitnessTable();
  return sub_1ACE76038();
}

uint64_t sub_1ACBFCAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(v4 + 24);
  (*(void (**)(uint64_t))(v4 + 56))(a3);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  return v8(a2, a4, v7);
}

uint64_t sub_1ACBFCB78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  uint64_t v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v5(a2, a2 + *(int *)(TupleTypeMetadata2 + 48), a1, v6);
}

uint64_t Dictionary.compactMapKeys<A>(_:)()
{
  return sub_1ACE76038();
}

uint64_t sub_1ACBFCD60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v22 = a2;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v14 = sub_1ACE76FD8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v21 - v16;
  a3(a1);
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = v23;
  uint64_t v30 = a9;
  uint64_t v31 = v22;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_1ACCC82A8((void (*)(char *, char *))sub_1ACBFCF78, (uint64_t)v25, MEMORY[0x1E4FBC248], TupleTypeMetadata2, v19, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_1ACBFCED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1ACBFCD60(a1, a2, *(void (**)(uint64_t))(v3 + 56), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), a3, *(void *)(v3 + 48));
}

uint64_t sub_1ACBFCF08(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 56);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_1ACBFCF78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  uint64_t v7 = v2[7];
  uint64_t v8 = a2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v8, v7, v5);
}

uint64_t sub_1ACBFD04C(uint64_t a1, void **a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v5; ++i)
    {
      uint64_t v8 = swift_bridgeObjectRetain();
      id v9 = sub_1ACBB5EA8(v8, a2);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      id v10 = v9;
      uint64_t v11 = swift_bridgeObjectRelease();
      if (v10)
      {
        MEMORY[0x1AD118700](v11);
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1ACE765C8();
        }
        sub_1ACE76628();
        sub_1ACE76598();
      }
    }
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

unint64_t sub_1ACBFD174(unint64_t a1, int *a2)
{
  uint64_t v3 = v2;
  id v33 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v28 = *(void *)(v32 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v32);
  uint64_t v31 = (uint64_t)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v27 = (uint64_t)&v25 - v10;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1ACE77508();
    if (v11) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
    {
LABEL_3:
      uint64_t v25 = v3;
      uint64_t v29 = (void (**)(char *, void, uint64_t, uint64_t))(v28 + 56);
      unint64_t v30 = a1 & 0xC000000000000001;
      uint64_t v12 = (unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      unint64_t v13 = MEMORY[0x1E4FBC860];
      uint64_t v14 = 4;
      unint64_t v26 = a1;
      while (1)
      {
        uint64_t v15 = v14 - 4;
        if (v30)
        {
          id v16 = (id)MEMORY[0x1AD119490](v14 - 4, a1);
          uint64_t v3 = v14 - 3;
          if (__OFADD__(v15, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          id v16 = *(id *)(a1 + 8 * v14);
          uint64_t v3 = v14 - 3;
          if (__OFADD__(v15, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        uint64_t v17 = (char *)v16;
        uint64_t v18 = v33;
        uint64_t v19 = v33;
        sub_1ACC55C1C(v17, v18, (uint64_t)v7);
        uint64_t v20 = v32;
        (*v29)(v7, 0, 1, v32);

        if ((*v12)(v7, 1, v20) == 1)
        {
          sub_1ACBFDD74((uint64_t)v7);
        }
        else
        {
          uint64_t v21 = v27;
          sub_1ACA61468((uint64_t)v7, v27);
          sub_1ACA61468(v21, v31);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v13 = sub_1ACA418BC(0, *(void *)(v13 + 16) + 1, 1, v13);
          }
          unint64_t v23 = *(void *)(v13 + 16);
          unint64_t v22 = *(void *)(v13 + 24);
          if (v23 >= v22 >> 1) {
            unint64_t v13 = sub_1ACA418BC(v22 > 1, v23 + 1, 1, v13);
          }
          *(void *)(v13 + 16) = v23 + 1;
          sub_1ACA61468(v31, v13+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v23);
          a1 = v26;
        }
        ++v14;
        if (v3 == v11)
        {
          swift_bridgeObjectRelease();
          return v13;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

_OWORD *sub_1ACBFD4A4()
{
  v22[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1ACE76218();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v22[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE76208();
  uint64_t v4 = sub_1ACE761C8();
  unint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6 >> 60 == 15) {
    return (_OWORD *)MEMORY[0x1E4FBC860];
  }
  uint64_t v7 = self;
  uint64_t v8 = (void *)sub_1ACE74F68();
  v22[0] = 0;
  id v9 = objc_msgSend(v7, sel_JSONObjectWithData_options_error_, v8, 0, v22);

  if (!v9)
  {
    uint64_t v17 = v22[0];
    sub_1ACE74D78();

    swift_willThrow();
    sub_1ACAB2EF0(v4, v6);
    return v17;
  }
  id v10 = v22[0];
  sub_1ACE770C8();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E020);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    sub_1ACAB2EF0(v4, v6);
    return (_OWORD *)MEMORY[0x1E4FBC860];
  }
  uint64_t v11 = v21;
  type metadata accessor for MediaRequestResponseParser();
  unint64_t v12 = static MediaRequestResponseParser.parsePodcastEpisodeResponse(_:)(v11);
  swift_bridgeObjectRelease();
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
  if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_6:
  if ((v12 & 0xC000000000000001) != 0)
  {
    id v13 = (id)MEMORY[0x1AD119490](0, v12);
  }
  else
  {
    if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    id v13 = *(id *)(v12 + 32);
  }
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0CB8);
  uint64_t v15 = *(void *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = (_OWORD *)swift_allocObject();
  v17[1] = xmmword_1ACE843F0;
  uint64_t v18 = v14;
  sub_1ACC55C1C(v18, 0, (uint64_t)v17 + v16);

  sub_1ACAB2EF0(v4, v6);
  return v17;
}

void *sub_1ACBFD81C()
{
  v22[4] = *(void **)MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1ACE76218();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v22[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE76208();
  uint64_t v4 = sub_1ACE761C8();
  unint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6 >> 60 == 15) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v7 = self;
  uint64_t v8 = (void *)sub_1ACE74F68();
  v22[0] = 0;
  id v9 = objc_msgSend(v7, sel_JSONObjectWithData_options_error_, v8, 0, v22);

  if (!v9)
  {
    uint64_t v18 = v22[0];
    sub_1ACE74D78();

    swift_willThrow();
    sub_1ACAB2EF0(v4, v6);
    return v18;
  }
  id v10 = v22[0];
  sub_1ACE770C8();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E020);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    sub_1ACAB2EF0(v4, v6);
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v11 = _s18PodcastsFoundation26MediaRequestResponseParserC11extractDataySaySDys11AnyHashableVypGGSgAGFZ_0(v21);
  if (!v11) {
    goto LABEL_16;
  }
  v22[0] = 0;
  unint64_t v12 = sub_1ACBFD04C(v11, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (!(v12 >> 62))
  {
    if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_7;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (!v19) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v12 & 0xC000000000000001) != 0)
  {
    id v13 = (char *)MEMORY[0x1AD119490](0, v12);
  }
  else
  {
    if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    id v13 = (char *)*(id *)(v12 + 32);
  }
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = &v14[OBJC_IVAR___MTServerPodcast_episodes];
  swift_beginAccess();
  if (!*(void *)v15)
  {

    goto LABEL_17;
  }
  unint64_t v16 = v14;
  unint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = (void *)sub_1ACBFD174(v17, v16);

  sub_1ACAB2EF0(v4, v6);
  swift_bridgeObjectRelease();

  return v18;
}

void *sub_1ACBFDB7C(long long *a1)
{
  long long v1 = a1[11];
  long long v20 = a1[10];
  long long v21 = v1;
  long long v22 = a1[12];
  char v23 = *((unsigned char *)a1 + 208);
  long long v2 = a1[7];
  long long v16 = a1[6];
  long long v17 = v2;
  long long v3 = a1[9];
  long long v18 = a1[8];
  long long v19 = v3;
  long long v4 = a1[3];
  long long v12 = a1[2];
  long long v13 = v4;
  long long v5 = a1[5];
  long long v14 = a1[4];
  long long v15 = v5;
  long long v6 = a1[1];
  long long v10 = *a1;
  long long v11 = v6;
  if (*((void *)&v13 + 1))
  {
    switch((char)v12)
    {
      case 1:
      case 2:
        swift_bridgeObjectRetain();
        sub_1ACA64E8C((uint64_t)&v10);
        uint64_t v7 = sub_1ACBFD4A4();
        goto LABEL_4;
      case 4:
        swift_bridgeObjectRetain();
        sub_1ACA639E4(v10, *((uint64_t *)&v10 + 1), v11, *((uint64_t *)&v11 + 1), 4u);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_11;
      case 5:
      case 6:
      case 7:
        goto LABEL_9;
      case 8:
        if (!((unint64_t)v11 | *((void *)&v10 + 1) | (unint64_t)v10 | *((void *)&v11 + 1))) {
          goto LABEL_7;
        }
LABEL_9:
        swift_bridgeObjectRetain();
LABEL_11:
        sub_1ACE77498();
        __break(1u);
        JUMPOUT(0x1ACBFDD50);
      default:
LABEL_7:
        swift_bridgeObjectRetain();
        sub_1ACA64E8C((uint64_t)&v10);
        uint64_t v7 = sub_1ACBFD81C();
LABEL_4:
        uint64_t v8 = v7;
        swift_bridgeObjectRelease();
        break;
    }
  }
  else
  {
    sub_1ACA64E8C((uint64_t)&v10);
    return 0;
  }
  return v8;
}

uint64_t sub_1ACBFDD74(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t NSManagedObjectContext.channels<A>(for:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v9 = (void *)swift_allocObject();
  v9[2] = a4;
  v9[3] = v8;
  v9[4] = a2;
  v9[5] = a3;
  v9[6] = a1;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  long long v10 = (void *)sub_1ACE76CF8();
  uint64_t v11 = NSManagedObjectContext.performAndPublish<A>(queue:_:)(v10, (uint64_t)sub_1ACBFE214, (uint64_t)v9, a4);
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_1ACBFDEE4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACBFDF1C(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a1 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1AD11B470](v6);
  if (!v7) {
    return a2(MEMORY[0x1E4FBC860]);
  }
  uint64_t v8 = (void *)v7;
  int64_t v9 = *(void *)(a4 + 16);
  if (v9)
  {
    uint64_t v29 = (void *)v7;
    uint64_t v30 = MEMORY[0x1E4FBC860];
    long long v10 = @"MTChannel";
    sub_1ACC82D44(0, v9, 0);
    uint64_t v11 = v30;
    uint64_t v12 = a4 + 32;
    sub_1ACA55E4C();
    do
    {
      v12 += 8;
      uint64_t v13 = sub_1ACE770B8();
      uint64_t v15 = v14;
      unint64_t v17 = *(void *)(v30 + 16);
      unint64_t v16 = *(void *)(v30 + 24);
      if (v17 >= v16 >> 1) {
        sub_1ACC82D44(v16 > 1, v17 + 1, 1);
      }
      *(void *)(v30 + 16) = v17 + 1;
      unint64_t v18 = v30 + 16 * v17;
      *(void *)(v18 + 32) = v13;
      *(void *)(v18 + 40) = v15;
      --v9;
    }
    while (v9);
    uint64_t v8 = v29;
  }
  else
  {
    long long v20 = @"MTChannel";
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  long long v21 = self;
  sub_1ACB02BC0(v11);
  swift_bridgeObjectRelease();
  long long v22 = (void *)sub_1ACE76978();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v21, sel_predicateForChannelStoreIds_, v22);

  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v25 = (void *)sub_1ACE76558();
  id v26 = objc_msgSend(v8, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_, @"MTChannel", v23, v25, 1);

  if (v26)
  {
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
    unint64_t v27 = sub_1ACE76578();

    uint64_t v28 = sub_1ACC2BB3C(v27);
    swift_bridgeObjectRelease();
    if (v28) {
      uint64_t v24 = v28;
    }
  }
  a2(v24);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBFE1CC()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACBFE214()
{
  return sub_1ACBFDF1C(*(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t dispatch thunk of EpisodeAndShowProcessorObserver.processor(_:didReplace:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of EpisodeAndShowProcessorObserver.processor(_:beganEvaluationOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of EpisodeAndShowProcessorObserver.processor(_:finishedEvaluationWithError:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of EpisodeAndShowProcessorObserver.processor(_:encounteredError:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

id AnalyticsUserIdentifier.__allocating_init(clientId:userId:userAllowsPersonalization:userUnder13YearsOld:userIsManagedAccount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, char a7)
{
  uint64_t v15 = objc_allocWithZone(v7);
  unint64_t v16 = &v15[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_clientId];
  *unint64_t v16 = a1;
  v16[1] = a2;
  unint64_t v17 = &v15[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userId];
  *unint64_t v17 = a3;
  v17[1] = a4;
  v15[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userAllowsPersonalization] = a5;
  v15[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userUnder13YearsOld] = a6;
  v15[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userIsManagedAccount] = a7;
  v19.receiver = v15;
  v19.super_class = v7;
  return objc_msgSendSuper2(&v19, sel_init);
}

uint64_t AnalyticsUserIdentifier.clientId.getter()
{
  return sub_1ACBFE3C8(&OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_clientId);
}

id sub_1ACBFE350(uint64_t a1, uint64_t a2, void *a3)
{
  if (*(void *)(a1 + *a3 + 8))
  {
    swift_bridgeObjectRetain();
    long long v3 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v3 = 0;
  }
  return v3;
}

uint64_t AnalyticsUserIdentifier.userId.getter()
{
  return sub_1ACBFE3C8(&OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userId);
}

uint64_t sub_1ACBFE3C8(void *a1)
{
  uint64_t v2 = *(void *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t AnalyticsUserIdentifier.userAllowsPersonalization.getter()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userAllowsPersonalization);
}

uint64_t AnalyticsUserIdentifier.userUnder13YearsOld.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userUnder13YearsOld);
}

uint64_t AnalyticsUserIdentifier.userIsManagedAccount.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userIsManagedAccount);
}

id AnalyticsUserIdentifier.init(clientId:userId:userAllowsPersonalization:userUnder13YearsOld:userIsManagedAccount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, char a7)
{
  ObjectType = (objc_class *)swift_getObjectType();
  unint64_t v16 = &v7[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_clientId];
  *unint64_t v16 = a1;
  v16[1] = a2;
  unint64_t v17 = &v7[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userId];
  *unint64_t v17 = a3;
  v17[1] = a4;
  v7[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userAllowsPersonalization] = a5;
  v7[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userUnder13YearsOld] = a6;
  v7[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userIsManagedAccount] = a7;
  v19.receiver = v7;
  v19.super_class = ObjectType;
  return objc_msgSendSuper2(&v19, sel_init);
}

id AnalyticsUserIdentifier.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AnalyticsUserIdentifier.init()()
{
}

id AnalyticsUserIdentifier.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACBFE638()
{
  uint64_t v0 = sub_1ACE76CE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  long long v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1ACA51E1C();
  sub_1ACE75E08();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1ACC00FBC((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_1ACE76D28();
  qword_1EB76A3B8 = result;
  return result;
}

unint64_t static AnalyticsIdentifierManager.kMTResetIdentifierKey.getter()
{
  return 0xD000000000000018;
}

void sub_1ACBFE8D4(uint64_t a1)
{
}

void sub_1ACBFE8F8(uint64_t a1)
{
}

void sub_1ACBFE918(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v7 = (void *)sub_1ACE76178();
  id v8 = objc_msgSend(self, sel_keyWithName_crossDeviceSync_, v7, a4 & 1);

  *a5 = v8;
}

id sub_1ACBFE988()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AnalyticsIdentifierManager()), sel_init);
  qword_1EB76C5C8 = (uint64_t)result;
  return result;
}

id static AnalyticsIdentifierManager.sharedInstance.getter()
{
  return sub_1ACB60304(&qword_1EB76C5D0, (void **)&qword_1EB76C5C8);
}

void sub_1ACBFEA38()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1ACE761B8();
  }
  id v2 = objc_allocWithZone(MEMORY[0x1E4F4DDC8]);
  long long v3 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithBundleIdentifier_, v3);

  qword_1EB76C588 = (uint64_t)v4;
}

id static AnalyticsIdentifierManager.clientInfo.getter()
{
  return sub_1ACB60304(&qword_1EB76C598, (void **)&qword_1EB76C588);
}

double static AnalyticsIdentifierManager.resetInterval.getter()
{
  return 0.0;
}

id sub_1ACBFEB94()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_identifierPromise);
  swift_beginAccess();
  id v2 = *v1;
  return v2;
}

void sub_1ACBFEC4C(void *a1)
{
  long long v3 = (void **)(v1 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_identifierPromise);
  swift_beginAccess();
  id v4 = *v3;
  *long long v3 = a1;
}

void sub_1ACBFECA0(void **a1, void *a2)
{
  id v2 = *a1;
  long long v3 = (void **)(*a2 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_identifierPromise);
  swift_beginAccess();
  id v4 = *v3;
  *long long v3 = v2;
  id v5 = v2;
}

uint64_t (*sub_1ACBFED04())()
{
  return j__swift_endAccess;
}

id sub_1ACBFED60()
{
  uint64_t v1 = OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_identifierPromise;
  id v2 = objc_allocWithZone(MEMORY[0x1E4F4DDB0]);
  long long v3 = v0;
  *(void *)&v0[v1] = objc_msgSend(v2, sel_init);
  uint64_t v4 = OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_promiseLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  *(void *)&v3[v4] = v5;
  id v6 = objc_msgSend(self, sel_ams_sharedAccountStore);
  uint64_t v7 = OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_accountStore;
  *(void *)&v3[OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_accountStore] = v6;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DD78]), sel_init);
  uint64_t v9 = OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_store;
  *(void *)&v3[OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_store] = v8;
  uint64_t v10 = qword_1EB76C598;
  id v11 = v8;
  if (v10 != -1) {
    swift_once();
  }
  objc_msgSend(v11, sel_setClientInfo_, qword_1EB76C588);

  objc_msgSend(*(id *)&v3[v9], sel_setResetInterval_, 0.0);
  uint64_t v12 = *(void **)&v3[v7];
  id v13 = *(id *)&v3[v9];
  id v14 = objc_msgSend(v12, sel_ams_activeiTunesAccount);
  objc_msgSend(v13, sel_setAccount_, v14);

  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for AnalyticsIdentifierManager();
  id v15 = objc_msgSendSuper2(&v17, sel_init);
  sub_1ACBFFCD8();

  return v15;
}

uint64_t sub_1ACBFEF3C()
{
  return sub_1ACBFF708((uint64_t)sub_1ACBFF3B4, (uint64_t)&block_descriptor_41);
}

uint64_t sub_1ACBFEF5C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1ACBFEF94(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1AD11B470](v1);
  if (v2)
  {
    long long v3 = (char *)v2;
    sub_1ACE76C08();
    if (qword_1EB768FE8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v4 = (id)qword_1EB768FE0;
    sub_1ACE75388();

    uint64_t v5 = *(void **)&v3[OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_store];
    id v6 = self;
    id v7 = v5;
    id v8 = objc_msgSend(v6, sel_ams_sharedAccountStore);
    id v9 = objc_msgSend(v8, sel_ams_activeiTunesAccount);

    objc_msgSend(v7, sel_setAccount_, v9);
    id v10 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_accountStore], sel_ams_activeiTunesAccount);
    id v11 = v10;
    if (v10)
    {
      if (objc_msgSend(v10, sel_ams_accountFlagValueForAccountFlag_, *MEMORY[0x1E4F4D9D8]))
      {
        sub_1ACE770C8();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v16 = 0u;
        long long v17 = 0u;
      }
      sub_1ACA9D6FC((uint64_t)&v16, (uint64_t)&v18);
      if (*((void *)&v19 + 1)) {
        swift_dynamicCast();
      }
      else {
        sub_1ACA65828((uint64_t)&v18);
      }
      if (objc_msgSend(v11, sel_ams_accountFlagValueForAccountFlag_, *MEMORY[0x1E4F4D9E0], v16, v17))
      {
        sub_1ACE770C8();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v16 = 0u;
        long long v17 = 0u;
      }
      sub_1ACA9D6FC((uint64_t)&v16, (uint64_t)&v18);
      if (*((void *)&v19 + 1)) {
        swift_dynamicCast();
      }
      else {
        sub_1ACA65828((uint64_t)&v18);
      }
      if (objc_msgSend(v11, sel_ams_accountFlagValueForAccountFlag_, *MEMORY[0x1E4F4D9D0], v16, v17))
      {
        sub_1ACE770C8();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v16 = 0u;
        long long v17 = 0u;
      }
      sub_1ACA9D6FC((uint64_t)&v16, (uint64_t)&v18);
      if (*((void *)&v19 + 1))
      {
        uint64_t v12 = swift_dynamicCast();
LABEL_24:
        id v13 = *(os_unfair_lock_s **)&v3[OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_promiseLock];
        uint64_t v14 = MEMORY[0x1F4188790](v12);
        MEMORY[0x1F4188790](v14);
        swift_retain();
        os_unfair_lock_lock(v13 + 4);
        sub_1ACAC41F0(v15);
        os_unfair_lock_unlock(v13 + 4);

        swift_release();
        return;
      }
    }
    else
    {
      long long v18 = 0u;
      long long v19 = 0u;
      sub_1ACA65828((uint64_t)&v18);
      long long v18 = 0u;
      long long v19 = 0u;
      sub_1ACA65828((uint64_t)&v18);
      long long v18 = 0u;
      long long v19 = 0u;
    }
    uint64_t v12 = sub_1ACA65828((uint64_t)&v18);
    goto LABEL_24;
  }
}

void sub_1ACBFF3B4()
{
  sub_1ACBFEF94(v0);
}

uint64_t sub_1ACBFF3BC(uint64_t a1, char a2, char a3, char a4)
{
  uint64_t v8 = OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_store;
  uint64_t v9 = qword_1EB76C5C0;
  id v10 = *(id *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_store);
  if (v9 != -1) {
    swift_once();
  }
  id v11 = objc_msgSend(v10, sel_identifierForKey_, qword_1EB76C5B0);

  uint64_t v12 = sub_1ACE761B8();
  uint64_t v14 = v13;

  uint64_t v15 = *(void **)(a1 + v8);
  uint64_t v16 = qword_1EB76C5A8;
  id v17 = v15;
  if (v16 != -1) {
    swift_once();
  }
  id v18 = objc_msgSend(v17, sel_identifierForKey_, qword_1EB76C5A0);

  uint64_t v19 = sub_1ACE761B8();
  uint64_t v21 = v20;

  long long v22 = (objc_class *)type metadata accessor for AnalyticsUserIdentifier();
  id v23 = objc_allocWithZone(v22);
  uint64_t v24 = (uint64_t *)&v23[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_clientId];
  *uint64_t v24 = v12;
  v24[1] = v14;
  uint64_t v25 = (uint64_t *)&v23[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userId];
  *uint64_t v25 = v19;
  v25[1] = v21;
  v23[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userAllowsPersonalization] = a2 & 1;
  v23[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userUnder13YearsOld] = a3 & 1;
  v23[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userIsManagedAccount] = a4 & 1;
  v34.receiver = v23;
  v34.super_class = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v26 = objc_msgSendSuper2(&v34, sel_init);
  unint64_t v27 = (id *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_identifierPromise);
  swift_beginAccess();
  objc_msgSend(*v27, sel_finishWithResult_, v26);
  sub_1ACE76C08();
  if (qword_1EB768FE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v28 = (void *)qword_1EB768FE0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1ACE84820;
  uint64_t v30 = MEMORY[0x1E4FBB1A0];
  *(void *)(v29 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v31 = sub_1ACADC3A8();
  *(void *)(v29 + 32) = v19;
  *(void *)(v29 + 40) = v21;
  *(void *)(v29 + 96) = v30;
  *(void *)(v29 + 104) = v31;
  *(void *)(v29 + 64) = v31;
  *(void *)(v29 + 72) = v12;
  *(void *)(v29 + 80) = v14;
  id v32 = v28;
  sub_1ACE75388();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBFF6E8()
{
  return sub_1ACBFF708((uint64_t)sub_1ACBFFBE0, (uint64_t)&block_descriptor_4);
}

uint64_t sub_1ACBFF708(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE75DC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1ACE75E48();
  uint64_t v8 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  id v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB76A3C8 != -1) {
    swift_once();
  }
  v14[1] = qword_1EB76A3B8;
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = a1;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = a2;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACE75E08();
  uint64_t v16 = MEMORY[0x1E4FBC860];
  sub_1ACC00FBC((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v10, v7, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v15);
  swift_release();
  return swift_release();
}

void sub_1ACBFF9EC(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1AD11B470](v1);
  if (v2)
  {
    long long v3 = (char *)v2;
    sub_1ACE76C08();
    if (qword_1EB768FE8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v4 = (id)qword_1EB768FE0;
    sub_1ACE75388();

    uint64_t v5 = *(os_unfair_lock_s **)&v3[OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_promiseLock];
    uint64_t v7 = MEMORY[0x1F4188790](v6);
    MEMORY[0x1F4188790](v7);
    swift_retain();
    os_unfair_lock_lock(v5 + 4);
    sub_1ACAC38E8(v8);
    os_unfair_lock_unlock(v5 + 4);
    swift_release();
    id v9 = objc_msgSend(self, sel__applePodcastsFoundationSettingsUserDefaults);
    id v10 = (void *)sub_1ACE76178();
    objc_msgSend(v9, sel_setBool_forKey_, 0, v10);

    sub_1ACBFEF3C();
  }
}

void sub_1ACBFFBE0()
{
  sub_1ACBFF9EC(v0);
}

id sub_1ACBFFBE8(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_identifierPromise);
  swift_beginAccess();
  if (objc_msgSend(*v2, sel_isFinished))
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DDB0]), sel_init);
    id v4 = *v2;
    *uint64_t v2 = v3;
  }
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_store), sel_reset);
}

uint64_t sub_1ACBFFCD8()
{
  return sub_1ACBFF708((uint64_t)sub_1ACBFFDC8, (uint64_t)&block_descriptor_8_0);
}

void sub_1ACBFFCF8(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1AD11B470](v1);
  if (v2)
  {
    id v3 = (void *)v2;
    id v4 = objc_msgSend(self, sel__applePodcastsFoundationSettingsUserDefaults);
    uint64_t v5 = (void *)sub_1ACE76178();
    unsigned int v6 = objc_msgSend(v4, sel_BOOLForKey_, v5);

    if (v6)
    {
      sub_1ACBFF6E8();
    }
    else
    {
      sub_1ACBFFE18();
      sub_1ACBFEF3C();
    }
  }
}

void sub_1ACBFFDC8()
{
  sub_1ACBFFCF8(v0);
}

void sub_1ACBFFE18()
{
  uint64_t v4 = sub_1ACE75EC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EB76A3C8 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_1EB76A3B8;
  *uint64_t v7 = qword_1EB76A3B8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  id v9 = v8;
  unint64_t v10 = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  id v11 = self;
  id v12 = objc_msgSend(v11, sel__applePodcastsFoundationSharedUserDefaults);
  uint64_t v13 = (void *)sub_1ACE76178();
  id v1 = objc_msgSend(v12, sel_stringForKey_, v13);

  if (v1)
  {
    uint64_t v3 = sub_1ACE761B8();
    unint64_t v2 = v14;
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v2 = 0;
  }
  id v15 = objc_msgSend(v11, sel__applePodcastsFoundationSharedUserDefaults);
  int v36 = "kMTDeviceIdentifierKey";
  uint64_t v16 = (void *)sub_1ACE76178();
  uint64_t v7 = objc_msgSend(v15, sel_stringForKey_, v16);

  if (v7)
  {
    uint64_t v17 = sub_1ACE761B8();
    unint64_t v10 = v18;
    if (!v2) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v17 = 0;
    unint64_t v10 = 0;
    if (!v2) {
      goto LABEL_18;
    }
  }
  uint64_t v19 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v19 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (v19)
  {
    uint64_t v34 = v17;
    id v35 = v11;
    sub_1ACE76C08();
    if (qword_1EB768FE8 == -1)
    {
LABEL_15:
      swift_beginAccess();
      uint64_t v20 = (void *)qword_1EB768FE0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1ACE843F0;
      *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v21 + 64) = sub_1ACADC3A8();
      *(void *)(v21 + 32) = v3;
      *(void *)(v21 + 40) = v2;
      id v22 = v20;
      sub_1ACE75388();

      swift_bridgeObjectRelease();
      uint64_t v23 = qword_1EB76C5C0;
      id v24 = *(id *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_store);
      if (v23 != -1) {
        swift_once();
      }
      objc_msgSend(v24, sel_setIdentifier_forKey_, v1, qword_1EB76C5B0);

      id v11 = v35;
      id v25 = objc_msgSend(v35, sel__applePodcastsFoundationSharedUserDefaults);
      id v1 = (id)sub_1ACE76178();
      objc_msgSend(v25, sel_setURL_forKey_, 0, v1);

      uint64_t v17 = v34;
LABEL_18:

      if (!v10) {
        goto LABEL_30;
      }
      goto LABEL_19;
    }
LABEL_32:
    swift_once();
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();

  if (!v10) {
    goto LABEL_30;
  }
LABEL_19:
  uint64_t v26 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v26 = v17 & 0xFFFFFFFFFFFFLL;
  }
  if (v26)
  {
    sub_1ACE76C08();
    if (qword_1EB768FE8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    unint64_t v27 = (void *)qword_1EB768FE0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1ACE843F0;
    *(void *)(v28 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v28 + 64) = sub_1ACADC3A8();
    *(void *)(v28 + 32) = v17;
    *(void *)(v28 + 40) = v10;
    id v29 = v27;
    sub_1ACE75388();

    swift_bridgeObjectRelease();
    uint64_t v30 = qword_1EB76C5A8;
    id v31 = *(id *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_store);
    if (v30 != -1) {
      swift_once();
    }
    objc_msgSend(v31, sel_setIdentifier_forKey_, v7, qword_1EB76C5A0);

    id v32 = objc_msgSend(v11, sel__applePodcastsFoundationSharedUserDefaults);
    uint64_t v7 = (void *)sub_1ACE76178();
    objc_msgSend(v32, sel_setURL_forKey_, 0, v7);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_30:
}

uint64_t static AnalyticsIdentifierManager.hashDSIDWithSalt(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1ACE75F68();
  uint64_t v30 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE75F58();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE76218();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1ACE76288() < 1) {
    return 0;
  }
  uint64_t v28 = v8;
  id v29 = v10;
  *(void *)&long long v33 = a1;
  *((void *)&v33 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  sub_1ACE76208();
  uint64_t v15 = sub_1ACE761C8();
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v17 >> 60 == 15) {
    return 0;
  }
  sub_1ACC00FBC(&qword_1EB770598, MEMORY[0x1E4F25170]);
  sub_1ACE75F48();
  uint64_t v19 = v15;
  switch(v17 >> 62)
  {
    case 1uLL:
      uint64_t v20 = v29;
      if (v19 >> 32 < (int)v19) {
        __break(1u);
      }
      sub_1ACA3985C(v19, v17);
      sub_1ACC00AA8((int)v19, v19 >> 32);
      sub_1ACAB2EF0(v19, v17);
      goto LABEL_12;
    case 2uLL:
      uint64_t v21 = *(void *)(v15 + 16);
      uint64_t v22 = *(void *)(v15 + 24);
      sub_1ACA39848(v15, v17);
      swift_retain();
      swift_retain();
      sub_1ACC00AA8(v21, v22);
      swift_release();
      swift_release();
      sub_1ACAB2EF0(v15, v17);
      goto LABEL_11;
    case 3uLL:
      *(void *)((char *)&v33 + 6) = 0;
      *(void *)&long long v33 = 0;
      goto LABEL_10;
    default:
      *(void *)&long long v33 = v15;
      WORD4(v33) = v17;
      BYTE10(v33) = BYTE2(v17);
      BYTE11(v33) = BYTE3(v17);
      BYTE12(v33) = BYTE4(v17);
      BYTE13(v33) = BYTE5(v17);
LABEL_10:
      sub_1ACE75F28();
      sub_1ACAB2EF0(v15, v17);
LABEL_11:
      uint64_t v20 = v29;
LABEL_12:
      sub_1ACE75F38();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v4);
      uint64_t v34 = v7;
      uint64_t v35 = sub_1ACC00FBC(&qword_1EB770590, MEMORY[0x1E4F24F80]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v33);
      uint64_t v24 = v28;
      (*(void (**)(uint64_t *, char *, uint64_t))(v28 + 16))(boxed_opaque_existential_1, v20, v7);
      __swift_project_boxed_opaque_existential_1(&v33, v34);
      sub_1ACE74BF8();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v20, v7);
      uint64_t v25 = v31;
      unint64_t v26 = v32;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v33);
      uint64_t v18 = sub_1ACE74F78();
      sub_1ACA50850(v25, v26);
      sub_1ACAB2EF0(v19, v17);
      break;
  }
  return v18;
}

id AnalyticsIdentifierManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnalyticsIdentifierManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unsigned char *sub_1ACC00A30@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    id result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    id result = (unsigned char *)sub_1ACC00DB4(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    id result = (unsigned char *)sub_1ACC00E78((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    id result = (unsigned char *)sub_1ACC00EF4((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1ACC00AA8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1ACE74B38();
  if (!result || (uint64_t result = sub_1ACE74B58(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1ACE74B48();
      sub_1ACE75F68();
      sub_1ACC00FBC(&qword_1EB770598, MEMORY[0x1E4F25170]);
      return sub_1ACE75F28();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AnalyticsIdentifierManager()
{
  return self;
}

id sub_1ACC00BAC@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_identifierPromise);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t type metadata accessor for AnalyticsUserIdentifier()
{
  return self;
}

uint64_t method lookup function for AnalyticsUserIdentifier(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AnalyticsUserIdentifier);
}

uint64_t dispatch thunk of AnalyticsUserIdentifier.__allocating_init(clientId:userId:userAllowsPersonalization:userUnder13YearsOld:userIsManagedAccount:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t method lookup function for AnalyticsIdentifierManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AnalyticsIdentifierManager);
}

uint64_t dispatch thunk of AnalyticsIdentifierManager.identifierPromise.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of AnalyticsIdentifierManager.identifierPromise.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of AnalyticsIdentifierManager.identifierPromise.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of AnalyticsIdentifierManager.updateIdentifiers()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of AnalyticsIdentifierManager.resetIdentifiers()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of AnalyticsIdentifierManager.resetIfNeeded()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t sub_1ACC00DB4(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_1ACC00E78(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1ACE74B68();
  swift_allocObject();
  uint64_t result = sub_1ACE74B28();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1ACE74F58();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1ACC00EF4(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1ACE74B68();
  swift_allocObject();
  uint64_t result = sub_1ACE74B28();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

id sub_1ACC00F78()
{
  return sub_1ACBFFBE8(*(void *)(v0 + 16));
}

uint64_t sub_1ACC00F94()
{
  return sub_1ACBFF3BC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(unsigned char *)(v0 + 25), *(unsigned char *)(v0 + 26));
}

uint64_t sub_1ACC00FBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACC01004(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1ACBE8078(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1ACC011C4(v5);
  *a1 = v2;
  return result;
}

id PodcastUpdateAverageCalculator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id PodcastUpdateAverageCalculator.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PodcastUpdateAverageCalculator();
  return objc_msgSendSuper2(&v2, sel_init);
}

id PodcastUpdateAverageCalculator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PodcastUpdateAverageCalculator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACC011C4(void *a1)
{
  objc_super v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1ACE777B8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v80 = 0;
      uint64_t v81 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v83 = *(double *)(v81 + 8 * i);
        uint64_t v84 = v80;
        do
        {
          uint64_t v85 = v81 + 8 * v84;
          if (v83 >= *(double *)v85) {
            break;
          }
          if (!v81) {
            goto LABEL_140;
          }
          *(void *)(v85 + 8) = *(void *)v85;
          *(double *)(v81 + 8 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v97 = result;
  uint64_t v98 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (double *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_102:
      uint64_t v96 = v8;
      if (v12 >= 2)
      {
        uint64_t v86 = *v2;
        do
        {
          unint64_t v87 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_131;
          }
          if (!v86) {
            goto LABEL_144;
          }
          v88 = v11;
          v89 = v11 + 32;
          uint64_t v90 = *(void *)&v11[16 * v87 + 32];
          uint64_t v91 = *(void *)&v11[16 * v12 + 24];
          sub_1ACC01858((double *)(v86 + 8 * v90), (double *)(v86 + 8 * *(void *)&v89[16 * v12 - 16]), v86 + 8 * v91, __dst);
          if (v1) {
            break;
          }
          if (v91 < v90) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v88 = sub_1ACBE8028((uint64_t)v88);
          }
          if (v87 >= *((void *)v88 + 2)) {
            goto LABEL_133;
          }
          v92 = &v88[16 * v87 + 32];
          *(void *)v92 = v90;
          *((void *)v92 + 1) = v91;
          unint64_t v93 = *((void *)v88 + 2);
          if (v12 > v93) {
            goto LABEL_134;
          }
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          uint64_t v11 = v88;
          *((void *)v88 + 2) = v93 - 1;
          unint64_t v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(void *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v96 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1ACE76608();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v98;
    uint64_t v96 = v7;
    __dst = (double *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  v94 = v2;
  uint64_t v95 = *v2 - 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v99 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      double v14 = *(double *)(v10 + 8 * v9);
      double v15 = *(double *)(v10 + 8 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        double v16 = v14;
        while (1)
        {
          double v17 = v16;
          double v16 = *(double *)(v10 + 8 * v9);
          if (v14 < v15 == v16 >= v17) {
            break;
          }
          if (v3 == ++v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_137;
        }
        if (v13 < v9)
        {
          uint64_t v18 = (uint64_t *)(v95 + 8 * v9);
          uint64_t v19 = v9;
          uint64_t v20 = v13;
          uint64_t v21 = (uint64_t *)(v10 + 8 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10) {
                goto LABEL_143;
              }
              uint64_t v22 = *v21;
              *uint64_t v21 = *v18;
              *uint64_t v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_135;
    }
    if (v9 - v13 >= v97) {
      goto LABEL_46;
    }
    uint64_t v23 = v13 + v97;
    if (__OFADD__(v13, v97)) {
      goto LABEL_138;
    }
    if (v23 >= v3) {
      uint64_t v23 = v3;
    }
    if (v23 < v13) {
      break;
    }
    if (v9 != v23)
    {
      uint64_t v24 = (double *)(v95 + 8 * v9);
      do
      {
        double v25 = *(double *)(v10 + 8 * v9);
        uint64_t v26 = v13;
        unint64_t v27 = v24;
        do
        {
          double v28 = *v27;
          if (v25 >= *v27) {
            break;
          }
          if (!v10) {
            goto LABEL_141;
          }
          *unint64_t v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      uint64_t v9 = v23;
    }
LABEL_46:
    if (v9 < v13) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1ACBE7A88(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v30 = *((void *)v11 + 2);
    unint64_t v29 = *((void *)v11 + 3);
    unint64_t v12 = v30 + 1;
    uint64_t v10 = v99;
    if (v30 >= v29 >> 1)
    {
      v79 = sub_1ACBE7A88((char *)(v29 > 1), v30 + 1, 1, v11);
      uint64_t v10 = v99;
      uint64_t v11 = v79;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v31 = v11 + 32;
    unint64_t v32 = &v11[16 * v30 + 32];
    *(void *)unint64_t v32 = v13;
    *((void *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        unint64_t v33 = v12 - 1;
        if (v12 >= 4)
        {
          id v38 = &v31[16 * v12];
          uint64_t v39 = *((void *)v38 - 8);
          uint64_t v40 = *((void *)v38 - 7);
          BOOL v44 = __OFSUB__(v40, v39);
          uint64_t v41 = v40 - v39;
          if (v44) {
            goto LABEL_119;
          }
          uint64_t v43 = *((void *)v38 - 6);
          uint64_t v42 = *((void *)v38 - 5);
          BOOL v44 = __OFSUB__(v42, v43);
          uint64_t v36 = v42 - v43;
          char v37 = v44;
          if (v44) {
            goto LABEL_120;
          }
          unint64_t v45 = v12 - 2;
          uint64_t v46 = &v31[16 * v12 - 32];
          uint64_t v48 = *(void *)v46;
          uint64_t v47 = *((void *)v46 + 1);
          BOOL v44 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          if (v44) {
            goto LABEL_122;
          }
          BOOL v44 = __OFADD__(v36, v49);
          uint64_t v50 = v36 + v49;
          if (v44) {
            goto LABEL_125;
          }
          if (v50 >= v41)
          {
            uint64_t v68 = &v31[16 * v33];
            uint64_t v70 = *(void *)v68;
            uint64_t v69 = *((void *)v68 + 1);
            BOOL v44 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v44) {
              goto LABEL_129;
            }
            BOOL v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v62 = *((void *)v11 + 4);
            uint64_t v63 = *((void *)v11 + 5);
            BOOL v44 = __OFSUB__(v63, v62);
            uint64_t v55 = v63 - v62;
            char v56 = v44;
            goto LABEL_77;
          }
          uint64_t v35 = *((void *)v11 + 4);
          uint64_t v34 = *((void *)v11 + 5);
          BOOL v44 = __OFSUB__(v34, v35);
          uint64_t v36 = v34 - v35;
          char v37 = v44;
        }
        if (v37) {
          goto LABEL_121;
        }
        unint64_t v45 = v12 - 2;
        uint64_t v51 = &v31[16 * v12 - 32];
        uint64_t v53 = *(void *)v51;
        uint64_t v52 = *((void *)v51 + 1);
        BOOL v54 = __OFSUB__(v52, v53);
        uint64_t v55 = v52 - v53;
        char v56 = v54;
        if (v54) {
          goto LABEL_124;
        }
        v57 = &v31[16 * v33];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v44 = __OFSUB__(v58, v59);
        uint64_t v60 = v58 - v59;
        if (v44) {
          goto LABEL_127;
        }
        if (__OFADD__(v55, v60)) {
          goto LABEL_128;
        }
        if (v55 + v60 >= v36)
        {
          BOOL v61 = v36 < v60;
LABEL_83:
          if (v61) {
            unint64_t v33 = v45;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v56) {
          goto LABEL_123;
        }
        uint64_t v64 = &v31[16 * v33];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v44 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v44) {
          goto LABEL_126;
        }
        if (v67 < v55) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10) {
          goto LABEL_142;
        }
        long long v73 = &v31[16 * v72];
        uint64_t v74 = *(void *)v73;
        v75 = v31;
        v76 = &v31[16 * v33];
        uint64_t v77 = *((void *)v76 + 1);
        sub_1ACC01858((double *)(v10 + 8 * *(void *)v73), (double *)(v10 + 8 * *(void *)v76), v10 + 8 * v77, __dst);
        if (v1) {
          goto LABEL_113;
        }
        if (v77 < v74) {
          goto LABEL_116;
        }
        if (v33 > *((void *)v11 + 2)) {
          goto LABEL_117;
        }
        *(void *)long long v73 = v74;
        *(void *)&v75[16 * v72 + 8] = v77;
        unint64_t v78 = *((void *)v11 + 2);
        if (v33 >= v78) {
          goto LABEL_118;
        }
        unint64_t v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        uint64_t v31 = v75;
        *((void *)v11 + 2) = v78 - 1;
        uint64_t v10 = v99;
        if (v78 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v98;
    if (v9 >= v98)
    {
      uint64_t v8 = v96;
      objc_super v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

uint64_t sub_1ACC01858(double *__src, double *a2, unint64_t a3, double *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      double v16 = &v4[v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        double v17 = (double *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v17 + 1;
          uint64_t v19 = v6 - 1;
          double v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            uint64_t v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *double v17 = *(v16 - 1);
            }
            --v16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *double v17 = v20;
            }
            uint64_t v24 = --v6;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          --v17;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    double v14 = &v4[v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4) {
            *uint64_t v7 = *v4;
          }
          uint64_t v23 = ++v4;
          double v15 = v6;
        }
        else
        {
          double v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *uint64_t v7 = *v6;
          }
        }
        ++v7;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_1ACBE7D0C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC01AC8(uint64_t result)
{
  if (*(void *)(result + 16))
  {
    uint64_t v2 = result;
    swift_bridgeObjectRetain();
    sub_1ACC01004(&v2);
    unint64_t v1 = *(void *)(v2 + 16);
    if (v1)
    {
      if (v1 >> 1 < v1) {
        return swift_release();
      }
    }
    else
    {
      if (v1 >= 2) {
        return swift_release();
      }
      __break(1u);
    }
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  return result;
}

id sub_1ACC01B78(void *a1, void *a2)
{
  id result = objc_msgSend(a1, sel_uuid);
  if (!result) {
    return result;
  }
  uint64_t v5 = result;
  id v34 = a1;
  uint64_t v6 = self;
  uint64_t v7 = @"MTEpisode";
  id v8 = objc_msgSend(v6, sel_predicateForAllEpisodesOnPodcastUuid_, v5);

  id v9 = objc_msgSend(v6, sel_sortDescriptorsForPubDateAscending_, 0);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  unint64_t v10 = sub_1ACE76578();

  sub_1ACA4E408(v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(a2, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_limit_, v7, v8, v11, 0, 10);

  if (!v12
    || (sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590),
        unint64_t v13 = sub_1ACE76578(),
        v12,
        unint64_t v14 = sub_1ACC2BAC4(v13),
        swift_bridgeObjectRelease(),
        !v14))
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = MEMORY[0x1E4FBC860];
  }
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v15)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1ACE77508();
      id result = (id)swift_bridgeObjectRelease();
      uint64_t v16 = v31 - 1;
      if (!__OFSUB__(v31, 1)) {
        goto LABEL_8;
      }
LABEL_27:
      __break(1u);
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (v15)
    {
      uint64_t v16 = v15 - 1;
      if (!__OFSUB__(v15, 1))
      {
LABEL_8:
        if (v15 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v17 = 0;
        unint64_t v18 = v14 & 0xC000000000000001;
        uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          if (v18) {
            id v20 = (id)MEMORY[0x1AD119490](v17, v14);
          }
          else {
            id v20 = *(id *)(v14 + 8 * v17 + 32);
          }
          uint64_t v21 = v20;
          uint64_t v22 = v17 + 1;
          if (v17 < v16)
          {
            objc_msgSend(v20, sel_pubDate);
            double v24 = v23;
            if (v18) {
              id v25 = (id)MEMORY[0x1AD119490](v17 + 1, v14);
            }
            else {
              id v25 = *(id *)(v14 + 8 * v17 + 40);
            }
            uint64_t v26 = v25;
            objc_msgSend(v25, sel_pubDate);
            double v28 = v27;

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v19 = sub_1ACA43384(0, v19[2] + 1, 1, v19);
            }
            unint64_t v30 = v19[2];
            unint64_t v29 = v19[3];
            if (v30 >= v29 >> 1) {
              uint64_t v19 = sub_1ACA43384((void *)(v29 > 1), v30 + 1, 1, v19);
            }
            void v19[2] = v30 + 1;
            *(double *)&v19[v30 + 4] = vabdd_f64(v24, v28);
          }

          uint64_t v17 = v22;
        }
        while (v15 != v22);
        goto LABEL_29;
      }
      goto LABEL_27;
    }
  }
  uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
LABEL_29:
  swift_bridgeObjectRelease_n();
  sub_1ACC01AC8((uint64_t)v19);
  double v33 = v32;
  swift_bridgeObjectRelease();
  return objc_msgSend(v34, sel_setUpdateAvg_, v33);
}

uint64_t type metadata accessor for PodcastUpdateAverageCalculator()
{
  return self;
}

uint64_t method lookup function for PodcastUpdateAverageCalculator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastUpdateAverageCalculator);
}

uint64_t dispatch thunk of PodcastUpdateAverageCalculator.unsafeSetUpdateAverage(podcast:on:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

uint64_t sub_1ACC01FB8(uint64_t a1)
{
  return a1;
}

uint64_t Publisher.pf_combineLatest(_:)@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1ACC0465C(a1, a1);
  uint64_t v6 = *(void *)(a1 - 8);
  swift_allocObject();
  sub_1ACE765A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v7, v3, a1);
  sub_1ACE76688();
  uint64_t v8 = sub_1ACE765D8();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v8;
  return result;
}

uint64_t Publishers.PFCombineLatestMany.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t Publishers.PFCombineLatestMany.publishers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Publishers.PFCombineLatestMany.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v51 = sub_1ACE757A8();
  uint64_t v53 = *(uint64_t **)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v46 = (char *)v45 - v12;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v63 = v10;
  uint64_t v64 = v13;
  uint64_t v65 = AssociatedTypeWitness;
  uint64_t v66 = a3;
  uint64_t WitnessTable = v9;
  uint64_t v68 = a4;
  uint64_t v55 = _s19PFCombineLatestManyV5InnerC4SideVMa();
  uint64_t v49 = *(void *)(v55 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v55);
  BOOL v54 = (char *)v45 - v15;
  uint64_t v48 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v52 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v59 = sub_1ACE76FD8();
  uint64_t v50 = *(void *)(v59 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v59);
  uint64_t v58 = (char *)v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  id v20 = (void *)((char *)v45 - v19);
  uint64_t v21 = *v5;
  uint64_t v63 = v10;
  uint64_t v64 = v13;
  uint64_t v47 = v13;
  uint64_t v22 = a1;
  uint64_t v65 = AssociatedTypeWitness;
  uint64_t v66 = a3;
  uint64_t v57 = v9;
  uint64_t WitnessTable = v9;
  uint64_t v68 = a4;
  v45[1] = a4;
  uint64_t v23 = _s19PFCombineLatestManyV5InnerCMa();
  uint64_t v24 = MEMORY[0x1AD1187F0](v21, v10);
  id v25 = sub_1ACC04ACC(v22, v24);
  uint64_t v63 = v21;
  uint64_t v56 = v10;
  uint64_t v26 = sub_1ACE76688();
  swift_getWitnessTable();
  if (sub_1ACE76AD8())
  {
    uint64_t v66 = v23;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v63 = (uint64_t)v25;
    swift_retain();
    sub_1ACE75778();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v63);
    uint64_t v63 = sub_1ACE765F8();
    sub_1ACE75788();
    swift_bridgeObjectRelease();
    double v27 = v46;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v46, 1, 1, AssociatedTypeWitness);
    sub_1ACE75768();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v53[1])(v27, v51);
  }
  else
  {
    uint64_t v53 = v25;
    uint64_t v63 = v21;
    uint64_t v29 = swift_getWitnessTable();
    MEMORY[0x1AD1185A0](&v62, v26, v29);
    uint64_t v61 = v62;
    sub_1ACE774F8();
    sub_1ACE774C8();
    uint64_t v30 = sub_1ACE774E8();
    uint64_t v31 = (void (**)(uint64_t *, char *, uint64_t))(v50 + 32);
    uint64_t v32 = TupleTypeMetadata2;
    uint64_t v50 = TupleTypeMetadata2 - 8;
    uint64_t v51 = v30;
    double v33 = (void (**)(char *, char *, uint64_t))(v48 + 32);
    id v34 = (void (**)(void *, uint64_t))(v49 + 8);
    uint64_t v35 = (void (**)(char *, uint64_t))(v48 + 8);
    uint64_t v36 = v54;
    while (1)
    {
      char v37 = v58;
      sub_1ACE774D8();
      (*v31)(v20, v37, v59);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v20, 1, v32) == 1) {
        break;
      }
      uint64_t v38 = *v20;
      uint64_t v39 = (char *)v20 + *(int *)(v32 + 48);
      uint64_t v40 = v52;
      uint64_t v41 = v56;
      (*v33)(v52, v39, v56);
      uint64_t v42 = (uint64_t)v53;
      swift_retain();
      sub_1ACC02758(v38, v42, v36);
      uint64_t v43 = v55;
      swift_getWitnessTable();
      sub_1ACE75D18();
      (*v34)(v36, v43);
      uint64_t v44 = v41;
      uint64_t v32 = TupleTypeMetadata2;
      (*v35)(v40, v44);
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACC02758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  _s19PFCombineLatestManyV5InnerC4SideVMa();
  return sub_1ACE75508();
}

uint64_t sub_1ACC027D0(_OWORD *a1)
{
  uint64_t v3 = sub_1ACE77BB8();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C90);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  (*(void (**)(char *, uint64_t, _OWORD *))(v11 + 16))((char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4B0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1ACE843F0;
  *(void *)(v12 + 32) = 0xD000000000000012;
  *(void *)(v12 + 40) = 0x80000001ACECCA70;
  *(void *)(v12 + 72) = sub_1ACE75518();
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v12 + 48));
  long long v13 = a1[2];
  v16[0] = a1[1];
  v16[1] = v13;
  v16[2] = a1[3];
  _s19PFCombineLatestManyV5InnerCMa();
  swift_getWitnessTable();
  sub_1ACE754E8();
  uint64_t v14 = sub_1ACE77BA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
  sub_1ACA413EC((uint64_t)v5);
  return sub_1ACE77BE8();
}

void sub_1ACC02A48(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = MEMORY[0x1E4FBB1A0];
  strcpy((char *)a1, "CombineLatest");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1ACC02A7C(void *a1)
{
  sub_1ACC02DEC(a1, *v1);
}

void sub_1ACC02AA4(uint64_t a1)
{
  sub_1ACC03114(a1, *v1);
}

void sub_1ACC02ACC(uint64_t a1)
{
  sub_1ACC037FC(a1, *v1);
}

uint64_t sub_1ACC02B00()
{
  return 0x4C656E69626D6F43;
}

uint64_t sub_1ACC02B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 72);
  uint64_t v5 = sub_1ACE75518();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1ACC02B9C()
{
  uint64_t v1 = (_OWORD *)*v0;
  uint64_t v2 = sub_1ACE77BB8();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C90);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v0;
  uint64_t v8 = sub_1ACE77BA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  long long v9 = v1[6];
  v11[0] = v1[5];
  v11[1] = v9;
  v11[2] = v1[7];
  _s19PFCombineLatestManyV5InnerCMa();
  sub_1ACA413EC((uint64_t)v4);
  swift_retain();
  return sub_1ACE77BE8();
}

uint64_t sub_1ACC02D1C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_1ACE77488();
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    if (a2)
    {
      uint64_t v4 = sub_1ACE76608();
      *(void *)(v4 + 16) = v2;
      uint64_t v5 = v4 + 32;
      do
      {
        sub_1ACC05270(a1, v5);
        v5 += 40;
        --v2;
      }
      while (v2);
    }
    else
    {
      uint64_t v4 = MEMORY[0x1E4FBC860];
    }
    sub_1ACC052CC(a1);
    return v4;
  }
  return result;
}

void sub_1ACC02DEC(void *a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  if (*(uint64_t *)((char *)v2 + *(void *)(*v2 + 176)) <= a2)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v4 = a2;
  uint64_t v5 = a1;
  uint64_t v3 = (os_unfair_lock_s *)(*(uint64_t *)((char *)v2 + *(void *)(v7 + 184)) + 16);
  os_unfair_lock_lock(v3);
  uint64_t v8 = (void *)*v2;
  if ((*((unsigned char *)v2 + *(void *)(*v2 + 152)) & 1) != 0
    || (*((unsigned char *)v2 + v8[20]) & 1) != 0
    || (*((unsigned char *)v2 + v8[21]) & 1) != 0)
  {
    goto LABEL_8;
  }
  uint64_t v6 = (uint64_t *)((char *)v2 + v8[18]);
  swift_beginAccess();
  if ((v4 & 0x8000000000000000) != 0) {
    goto LABEL_22;
  }
  if (*(void *)(*v6 + 16) <= v4)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    uint64_t v5 = sub_1ACDE6EB4(v5);
    *uint64_t v6 = (uint64_t)v5;
    goto LABEL_11;
  }
  sub_1ACC05270(*v6 + 40 * v4 + 32, (uint64_t)&v17);
  uint64_t v9 = v19;
  sub_1ACC052CC((uint64_t)&v17);
  if (v9)
  {
LABEL_8:
    os_unfair_lock_unlock(v3);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1ACE75798();
    return;
  }
  sub_1ACA3E158((uint64_t)v5, (uint64_t)&v17);
  swift_beginAccess();
  uint64_t v5 = (void *)*v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v6 = (uint64_t)v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_24;
  }
LABEL_11:
  if (v5[2] > v4)
  {
    sub_1ACC053E4((uint64_t)&v17, (uint64_t)&v5[5 * v4 + 4]);
    uint64_t v11 = *v6;
    swift_endAccess();
    uint64_t v12 = *(void *)(v11 + 16);
    if (!v12)
    {
LABEL_19:
      os_unfair_lock_unlock(v3);
      uint64_t v14 = *(void *)(v7 + 120);
      long long v15 = *(_OWORD *)(v7 + 80);
      uint64_t v18 = *(void *)(v7 + 96);
      long long v16 = *(_OWORD *)(v7 + 104);
      long long v17 = v15;
      long long v19 = v16;
      uint64_t v20 = v14;
      *(void *)&long long v19 = _s19PFCombineLatestManyV5InnerCMa();
      *((void *)&v19 + 1) = swift_getWitnessTable();
      *(void *)&long long v17 = v2;
      swift_retain();
      sub_1ACE75778();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v17);
      return;
    }
    uint64_t v13 = v11 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1ACC05270(v13, (uint64_t)&v17);
      sub_1ACC05270((uint64_t)&v17, (uint64_t)v21);
      if (v22 != 1)
      {
        if (!v22)
        {
          sub_1ACC052CC((uint64_t)&v17);
          swift_bridgeObjectRelease();
          os_unfair_lock_unlock(v3);
          return;
        }
        sub_1ACC052CC((uint64_t)v21);
      }
      sub_1ACC052CC((uint64_t)&v17);
      v13 += 40;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
  }
  __break(1u);
}

void sub_1ACC03114(uint64_t a1, int64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (void *)*v3;
  uint64_t v7 = (void *)*v3;
  uint64_t v8 = *(void *)(*v3 + 88);
  uint64_t v9 = sub_1ACE76FD8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v30 - v11;
  if (*(uint64_t *)((char *)v3 + v6[22]) <= a2)
  {
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v13 = (os_unfair_lock_s *)(*(uint64_t *)((char *)v3 + v7[23]) + 16);
  os_unfair_lock_lock(v13);
  uint64_t v14 = *v3;
  if ((*((unsigned char *)v3 + *(void *)(*v3 + 152)) & 1) != 0
    || (*((unsigned char *)v3 + *(void *)(v14 + 160)) & 1) != 0
    || (*((unsigned char *)v3 + *(void *)(v14 + 168)) & 1) != 0)
  {
    os_unfair_lock_unlock(v13);
    sub_1ACE757C8();
    return;
  }
  uint64_t v15 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v12, a1, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v8);
  long long v16 = (uint64_t *)((char *)v3 + *(void *)(*v3 + 136));
  swift_beginAccess();
  *(void *)&long long v36 = sub_1ACE76688();
  sub_1ACE765E8();
  uint64_t v17 = *v16;
  sub_1ACC046FC(a2, *v16);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 40))(v17+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * a2, v12, v9);
  swift_endAccess();
  uint64_t v35 = (uint64_t)&v30;
  uint64_t v18 = v16;
  uint64_t v42 = *v16;
  MEMORY[0x1F4188790](v42);
  uint64_t v32 = v7[10];
  *(&v30 - 6) = v32;
  *(&v30 - 5) = v8;
  uint64_t v19 = v7[13];
  uint64_t v31 = v7[12];
  *(&v30 - 4) = v31;
  *(&v30 - 3) = v19;
  unint64_t v34 = v19;
  uint64_t v21 = v7[14];
  uint64_t v20 = v7[15];
  *(&v30 - 2) = v21;
  *(&v30 - 1) = v20;
  uint64_t v33 = v20;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  LOBYTE(v16) = sub_1ACE763C8();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    os_unfair_lock_unlock(v13);
    goto LABEL_24;
  }
  uint64_t v35 = (uint64_t)&v30;
  uint64_t v42 = *v18;
  MEMORY[0x1F4188790](v42);
  *(&v30 - 6) = v32;
  *(&v30 - 5) = v8;
  uint64_t v22 = v34;
  *(&v30 - 4) = v31;
  *(&v30 - 3) = v22;
  *(&v30 - 2) = v21;
  *(&v30 - 1) = v33;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1ACE763D8();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v13);
  uint64_t v42 = v23;
  uint64_t v24 = sub_1ACE75788();
  swift_bridgeObjectRelease();
  sub_1ACE757D8();
  uint64_t v35 = v24;
  if (sub_1ACE757B8()) {
    goto LABEL_12;
  }
  if (v35 < 0)
  {
LABEL_28:
    __break(1u);
    return;
  }
  if (!v35)
  {
LABEL_24:
    uint64_t v35 = sub_1ACE757C8();
    return;
  }
LABEL_12:
  os_unfair_lock_lock(v13);
  id v25 = (uint64_t *)((char *)v3 + *(void *)(*v3 + 144));
  swift_beginAccess();
  uint64_t v26 = *v25;
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v13);
  unint64_t v27 = 0;
  unint64_t v28 = *(void *)(v26 + 16);
  long long v36 = xmmword_1ACE8BF20;
  unint64_t v34 = v28;
  while (1)
  {
    if (v27 == v28)
    {
      memset(v41, 0, 32);
      unint64_t v27 = v28;
      v41[2] = v36;
    }
    else
    {
      if (v27 >= *(void *)(v26 + 16)) {
        goto LABEL_27;
      }
      sub_1ACC05270(v26 + 32 + 40 * v27, (uint64_t)v40);
      *(void *)&v41[0] = v27;
      sub_1ACC05320((uint64_t)v40, (uint64_t)v41 + 8);
      ++v27;
    }
    sub_1ACC0537C((uint64_t)v41, (uint64_t)&v42);
    if (v43[3] == 2) {
      break;
    }
    uint64_t v29 = v42;
    sub_1ACC05320((uint64_t)v43, (uint64_t)v41);
    if (v29 == a2)
    {
      sub_1ACC052CC((uint64_t)v41);
    }
    else
    {
      sub_1ACC05270((uint64_t)v41, (uint64_t)&v37);
      if (v38 > 1)
      {
        sub_1ACA3AABC(&v37, (uint64_t)&v39);
        __swift_project_boxed_opaque_existential_1(&v39, v40[2]);
        unint64_t v28 = v34;
        sub_1ACE75808();
        sub_1ACC052CC((uint64_t)v41);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v39);
      }
      else
      {
        sub_1ACC052CC((uint64_t)v41);
        sub_1ACC052CC((uint64_t)&v37);
      }
    }
  }
  swift_bridgeObjectRelease();
}

void sub_1ACC037FC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(*v2 + 96);
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = sub_1ACE757A8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = (os_unfair_lock_s *)(*(uint64_t *)((char *)v2 + *(void *)(v5 + 184)) + 16);
  os_unfair_lock_lock(v14);
  uint64_t v15 = *v2;
  if ((*((unsigned char *)v2 + *(void *)(*v2 + 152)) & 1) != 0
    || (uint64_t v16 = *(void *)(v15 + 160), (*((unsigned char *)v2 + v16) & 1) != 0)
    || (*((unsigned char *)v2 + *(void *)(v15 + 168)) & 1) != 0)
  {
    os_unfair_lock_unlock(v14);
    return;
  }
  uint64_t v24 = *(void *)(v15 + 168);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, a1, v7);
  uint64_t v23 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v13, 1, v6) != 1)
  {
    *((unsigned char *)v2 + v16) = 1;
    sub_1ACC03C00(a1, a2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return;
  }
  memset(v27, 0, sizeof(v27));
  long long v28 = xmmword_1ACE8BD70;
  uint64_t v17 = (void **)((char *)v2 + *(void *)(*v2 + 144));
  swift_beginAccess();
  uint64_t v18 = *v17;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v17 = v18;
  if (isUniquelyReferenced_nonNull_native)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_10;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v18 = sub_1ACDE6EB4(v18);
  *uint64_t v17 = v18;
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_24;
  }
LABEL_10:
  if (v18[2] <= a2)
  {
LABEL_25:
    __break(1u);
    return;
  }
  sub_1ACC053E4((uint64_t)v27, (uint64_t)&v18[5 * a2 + 4]);
  uint64_t v20 = *v17;
  swift_endAccess();
  uint64_t v21 = v20[2];
  if (v21)
  {
    uint64_t v22 = (uint64_t)(v20 + 4);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1ACC05270(v22, (uint64_t)v27);
      sub_1ACC05270((uint64_t)v27, (uint64_t)v25);
      if (v26 != 1) {
        break;
      }
      sub_1ACC052CC((uint64_t)v27);
      v22 += 40;
      if (!--v21)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    if (v26) {
      sub_1ACC052CC((uint64_t)v25);
    }
    sub_1ACC052CC((uint64_t)v27);
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v14);
  }
  else
  {
LABEL_16:
    *((unsigned char *)v2 + v24) = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v11, 1, 1, v6);
    sub_1ACC03C00((uint64_t)v11, a2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
}

void sub_1ACC03C00(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v19 = *v2;
  uint64_t v4 = *(void *)(v19 + 88);
  uint64_t v5 = sub_1ACE76FD8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - v7;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))((char *)&v18 - v7, 1, 1, v4);
  uint64_t v9 = *(uint64_t *)((char *)v2 + *(void *)(*v2 + 176));
  uint64_t v10 = sub_1ACC04750((uint64_t)v8, v9, v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v11 = (uint64_t *)((char *)v2 + *(void *)(*v2 + 136));
  swift_beginAccess();
  *uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t *)((char *)v2 + *(void *)(*v2 + 144));
  swift_beginAccess();
  uint64_t v13 = *v12;
  uint64_t v29 = 0;
  memset(v28, 0, sizeof(v28));
  swift_bridgeObjectRetain();
  *uint64_t v12 = sub_1ACC02D1C((uint64_t)v28, v9);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(*v2 + 184);
  uint64_t v20 = v2;
  os_unfair_lock_unlock((os_unfair_lock_t)(*(uint64_t *)((char *)v2 + v14) + 16));
  unint64_t v15 = 0;
  unint64_t v16 = *(void *)(v13 + 16);
  long long v22 = xmmword_1ACE8BF20;
  while (1)
  {
    if (v15 == v16)
    {
      memset(v27, 0, 32);
      unint64_t v15 = v16;
      v27[2] = v22;
      goto LABEL_7;
    }
    if (v15 >= *(void *)(v13 + 16)) {
      break;
    }
    sub_1ACC05270(v13 + 32 + 40 * v15, (uint64_t)v26);
    *(void *)&v27[0] = v15;
    sub_1ACC05320((uint64_t)v26, (uint64_t)v27 + 8);
    ++v15;
LABEL_7:
    sub_1ACC0537C((uint64_t)v27, (uint64_t)v28);
    if (v29 == 2)
    {
      swift_bridgeObjectRelease();
      sub_1ACE75768();
      return;
    }
    uint64_t v17 = v28[0];
    sub_1ACC05320((uint64_t)&v28[1], (uint64_t)v27);
    if (v17 == a2)
    {
      sub_1ACC052CC((uint64_t)v27);
    }
    else
    {
      sub_1ACC05270((uint64_t)v27, (uint64_t)&v23);
      if (v24 > 1)
      {
        sub_1ACA3AABC(&v23, (uint64_t)&v25);
        __swift_project_boxed_opaque_existential_1(&v25, v26[2]);
        sub_1ACE75798();
        sub_1ACC052CC((uint64_t)v27);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v25);
      }
      else
      {
        sub_1ACC052CC((uint64_t)v27);
        sub_1ACC052CC((uint64_t)&v23);
      }
    }
  }
  __break(1u);
}

void sub_1ACC03FD4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 88);
  uint64_t v3 = sub_1ACE76FD8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v16 - v5;
  uint64_t v7 = (os_unfair_lock_s *)(*(uint64_t *)((char *)v0 + *(void *)(v1 + 184)) + 16);
  os_unfair_lock_lock(v7);
  uint64_t v8 = *(void *)(*v0 + 152);
  if (*((unsigned char *)v0 + v8))
  {
    os_unfair_lock_unlock(v7);
  }
  else
  {
    uint64_t v9 = (uint64_t *)((char *)v0 + *(void *)(*v0 + 144));
    swift_beginAccess();
    uint64_t v10 = *v9;
    *((unsigned char *)v0 + v8) = 1;
    memset(v18, 0, sizeof(v18));
    long long v19 = xmmword_1ACE8BD70;
    uint64_t v11 = *(uint64_t *)((char *)v0 + *(void *)(*v0 + 176));
    swift_bridgeObjectRetain();
    *uint64_t v9 = sub_1ACC02D1C((uint64_t)v18, v11);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v6, 1, 1, v2);
    uint64_t v12 = sub_1ACC04750((uint64_t)v6, v11, v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v13 = (uint64_t *)((char *)v0 + *(void *)(*v0 + 136));
    swift_beginAccess();
    *uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v7);
    uint64_t v14 = *(void *)(v10 + 16);
    if (v14)
    {
      uint64_t v15 = v10 + 32;
      do
      {
        sub_1ACC05270(v15, (uint64_t)&v16);
        if (v17 <= 1)
        {
          sub_1ACC052CC((uint64_t)&v16);
        }
        else
        {
          sub_1ACA3AABC(&v16, (uint64_t)v18);
          __swift_project_boxed_opaque_existential_1(v18, v19);
          sub_1ACE75798();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
        }
        v15 += 40;
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1ACC042DC(uint64_t a1)
{
  sub_1ACE757D8();
  if ((sub_1ACE757B8() & 1) == 0)
  {
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (a1)
    {
      goto LABEL_4;
    }
    __break(1u);
    return;
  }
LABEL_4:
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + *(void *)(*(void *)v1 + 184)) + 16);
  os_unfair_lock_lock(v3);
  uint64_t v4 = *(void **)v1;
  if ((*(unsigned char *)(v1 + *(void *)(*(void *)v1 + 152)) & 1) != 0
    || (*(unsigned char *)(v1 + v4[20]) & 1) != 0
    || (*(unsigned char *)(v1 + v4[21]) & 1) != 0)
  {
    os_unfair_lock_unlock(v3);
  }
  else
  {
    uint64_t v5 = (uint64_t *)(v1 + v4[18]);
    swift_beginAccess();
    uint64_t v6 = *v5;
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v3);
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      uint64_t v8 = v6 + 32;
      do
      {
        sub_1ACC05270(v8, (uint64_t)&v9);
        if (v10 <= 1)
        {
          sub_1ACC052CC((uint64_t)&v9);
        }
        else
        {
          sub_1ACA3AABC(&v9, (uint64_t)v11);
          __swift_project_boxed_opaque_existential_1(v11, v11[3]);
          sub_1ACE75808();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
        }
        v8 += 40;
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACC044A0()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 104) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 128));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1ACC04564()
{
  sub_1ACC044A0();
  return swift_deallocClassInstance();
}

void sub_1ACC045B8(uint64_t a1)
{
}

uint64_t sub_1ACC045DC()
{
  return sub_1ACC02B9C();
}

void sub_1ACC04600(uint64_t a1@<X8>)
{
}

void sub_1ACC04624()
{
}

uint64_t sub_1ACC04648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.PFCombineLatestMany.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t sub_1ACC0465C(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  }
  else
  {
    return MEMORY[0x1F4185768](0, a2);
  }
}

uint64_t _s19PFCombineLatestManyV5InnerC4SideVMa()
{
  return swift_getGenericMetadata();
}

uint64_t _s19PFCombineLatestManyV5InnerCMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1ACC046FC(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1ACC04750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1ACE765F8();
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = result;
    if (a2)
    {
      uint64_t v9 = v7;
      uint64_t v10 = *(void *)(a3 - 8);
      uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      v11(v7, a1, a3);
      uint64_t v12 = a2 - 1;
      if (v12)
      {
        uint64_t v13 = *(void *)(v10 + 72);
        uint64_t v14 = v9 + v13;
        do
        {
          v11(v14, a1, a3);
          v14 += v13;
          --v12;
        }
        while (v12);
      }
    }
    sub_1ACE76688();
    return v8;
  }
  return result;
}

uint64_t *sub_1ACC04854(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(*v2 + 88);
  uint64_t v7 = sub_1ACE76FD8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v15 - v9;
  *((unsigned char *)v2 + *(void *)(v5 + 152)) = 0;
  *((unsigned char *)v2 + *(void *)(*v2 + 160)) = 0;
  *((unsigned char *)v2 + *(void *)(*v2 + 168)) = 0;
  uint64_t v11 = *(void *)(*v2 + 184);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  *(uint64_t *)((char *)v2 + v11) = v12;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v5 + 104) - 8) + 16))((uint64_t)v2 + *(void *)(*v2 + 128), a1);
  *(uint64_t *)((char *)v2 + *(void *)(*v2 + 176)) = a2;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v10, 1, 1, v6);
  uint64_t v13 = sub_1ACC04750((uint64_t)v10, a2, v7);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(uint64_t *)((char *)v2 + *(void *)(*v2 + 136)) = v13;
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  *(uint64_t *)((char *)v2 + *(void *)(*v2 + 144)) = sub_1ACC02D1C((uint64_t)v15, a2);
  return v2;
}

uint64_t *sub_1ACC04ACC(uint64_t a1, uint64_t a2)
{
  return sub_1ACC04854(a1, a2);
}

uint64_t sub_1ACC04B38()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t type metadata accessor for Publishers.PFCombineLatestMany()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACC04B6C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1ACC04C38()
{
  uint64_t result = sub_1ACE75518();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1ACC04CE0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 72);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1ACE75518();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1ACC04DC8(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 72);
  uint64_t v5 = sub_1ACE75518();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_1ACC04E40(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 72);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1ACE75518();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_1ACC04ED8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 72);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1ACE75518();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_1ACC04F74(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 72);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1ACE75518();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *sub_1ACC04FF0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  uint64_t v7 = *(int *)(a3 + 72);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1ACE75518();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1ACC0507C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACC05090);
}

uint64_t sub_1ACC05090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1ACE75518();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 72);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1ACC05140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACC05154);
}

uint64_t sub_1ACC05154(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1ACE75518();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 72);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1ACC051FC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACC05218()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACC05234()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACC05250()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1ACC05270(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ACC052CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACC05320(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ACC0537C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACC053E4(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL sub_1ACC05440(uint64_t a1)
{
  return (*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v1 + 24) - 8) + 48))(a1, 1) != 1;
}

uint64_t sub_1ACC0549C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1ACE76FD8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t ServerPodcast.feedDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void **)(v1 + 104);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v2[3])
  {
    uint64_t v3 = v2[2];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v3 = v2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t ServerPodcast.category.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 208);
  if (!v2 || !*(void *)(v2 + 16)) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 32);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerPodcast.globalImageURL.getter()
{
  return 0;
}

BOOL ServerPodcast.hasEpisodes.getter()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR___MTServerPodcast_episodes);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (!v2) {
    return 0;
  }
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  return v3 != 0;
}

uint64_t _s18PodcastsFoundation13ServerPodcastC6authorSSSgvg_0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerPodcast.updatedFeedURL.getter()
{
  return 0;
}

uint64_t ServerPodcast.resolvedFeedURL.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 72);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerPodcast.title.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 88);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerPodcast.isExplicit.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (v1)
  {
    if (!*(void *)(v1 + 184)
      || (swift_bridgeObjectRetain(), uint64_t v2 = sub_1ACE775B8(), swift_bridgeObjectRelease(), v2 != 1))
    {
      LOBYTE(v2) = sub_1ACE77848();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v2) = 0;
  }
  return v2 & 1;
}

BOOL ServerPodcast.isNotSubscribable.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  int v2 = *(unsigned __int8 *)(v1 + 48);
  return (v2 & 1) == 0 && v2 != 2;
}

uint64_t ServerPodcast.shareURL.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerPodcast.showType.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 136);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerPodcast.webpageURL.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 192);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerPodcast.podcastStoreId.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcast.displayType.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void **)(v1 + 64);
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = v2;
  v4._object = v3;
  PodcastAttributes.DisplayType.init(rawValue:)(v4);
  return *(void *)&aFree_4[8 * v6];
}

uint64_t ServerPodcast.offers.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  unint64_t v2 = *(void *)(v1 + 224);
  if (!v2) {
    return 0;
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (v2 >> 62) {
    goto LABEL_19;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v3; uint64_t v3 = sub_1ACE77508())
  {
    uint64_t v4 = 4;
    while (1)
    {
      uint64_t v5 = v4 - 4;
      if ((v2 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v6 = MEMORY[0x1AD119490](v4 - 4, v2);
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v5, 1)) {
        goto LABEL_18;
      }
LABEL_13:
      uint64_t v12 = v6;
      sub_1ACC06160(&v12, &v11);
      uint64_t v8 = swift_release();
      if (v11)
      {
        MEMORY[0x1AD118700](v8);
        if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1ACE765C8();
        }
        sub_1ACE76628();
        sub_1ACE76598();
      }
      ++v4;
      if (v7 == v3)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = v13;
        goto LABEL_21;
      }
    }
    uint64_t v6 = *(void *)(v2 + 8 * v4);
    swift_retain();
    uint64_t v7 = v4 - 3;
    if (!__OFADD__(v5, 1)) {
      goto LABEL_13;
    }
LABEL_18:
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain_n();
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_21:
  swift_bridgeObjectRelease();
  return v9;
}

void sub_1ACC06160(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  id v4 = objc_msgSend(objc_allocWithZone((Class)IMPodcastOffer), sel_init);
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v5 > 1)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v4, sel_setKind_, v6);

  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = *(void **)(v3 + 24);
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = v7;
  v9._object = v8;
  PriceType.init(rawValue:)(v9);
  switch(v11)
  {
    case 4:
      uint64_t v10 = 0;
      break;
    default:
      uint64_t v10 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      break;
  }
  objc_msgSend(v4, sel_setPriceType_, v10);

  *a2 = v4;
}

uint64_t ServerPodcast.uberBackgroundImageURL.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 152);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = *(void *)(v3 + 48);
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t ServerPodcast.uberBackgroundJoeColor.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 152);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = *(void *)(v3 + 64);
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t ServerPodcast.uberArtworkTextPrimaryColor.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 152);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = *(void *)(v3 + 80);
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t ServerPodcast.uberArtworkTextSecondaryColor.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 152);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = *(void *)(v3 + 96);
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t ServerPodcast.uberArtworkTextTertiaryColor.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 152);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = *(void *)(v3 + 112);
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t ServerPodcast.uberArtworkTextQuaternaryColor.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 152);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = *(void *)(v3 + 128);
  swift_bridgeObjectRetain();
  return v4;
}

id sub_1ACC06890(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    uint64_t v7 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
  }
  return v7;
}

uint64_t ServerPodcast.imageURL.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (v4)
  {
    uint64_t v5 = *(void *)(v4 + 112);
    if (v5)
    {
      if (!*(void *)(v5 + 56) || (*(unsigned char *)(v5 + 24) & 1) != 0 || (*(unsigned char *)(v5 + 40) & 1) != 0)
      {
        uint64_t v6 = sub_1ACE74F28();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 1, 1, v6);
      }
      else
      {
        uint64_t v9 = *(void *)(v5 + 16);
        uint64_t v10 = *(void *)(v5 + 32);
        type metadata accessor for ArtworkFormatter();
        swift_retain();
        static ArtworkFormatter.formatArtworkUrl(string:for:cropCode:fileExtension:)(0, (uint64_t)v3, (double)v9, (double)v10);
        swift_release();
        uint64_t v11 = sub_1ACE74F28();
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v3, 1, v11) != 1)
        {
          uint64_t v7 = sub_1ACE74DD8();
          (*(void (**)(char *, uint64_t))(v12 + 8))(v3, v11);
          return v7;
        }
      }
      sub_1ACA7FA64((uint64_t)v3);
    }
  }
  return 0;
}

uint64_t ServerPodcast.artworkTemplateURL.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 112);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerPodcast.artworkPrimaryColor.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 112);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 64);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerPodcast.artworkTextPrimaryColor.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 112);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 80);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerPodcast.artworkTextSecondaryColor.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 112);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 96);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerPodcast.artworkTextTertiaryColor.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 112);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 112);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerPodcast.artworkTextQuaternaryColor.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 112);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 128);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerPodcast.channelItem.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  unint64_t v3 = *(void *)(v2 + 16);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1ACE77508();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v4)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      return v4;
    }
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v6 = (id)MEMORY[0x1AD119490](0, v3);
    goto LABEL_8;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v6 = *(id *)(v3 + 32);
LABEL_8:
    uint64_t v4 = (uint64_t)v6;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t ServerPodcast.showSpecificUpsellCopy.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 232);
  swift_bridgeObjectRetain();
  return v2;
}

id ServerPodcast.categories.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships);
  if (!v1 || !*(void *)(v1 + 24)) {
    return 0;
  }
  unint64_t v2 = swift_bridgeObjectRetain();
  sub_1ACA4E41C(v2);
  swift_bridgeObjectRelease();
  id v3 = objc_allocWithZone(MEMORY[0x1E4F1CAA0]);
  uint64_t v4 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithArray_, v4);

  return v5;
}

unint64_t sub_1ACC072E4()
{
  unint64_t result = qword_1EB768E98;
  if (!qword_1EB768E98)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB768E98);
  }
  return result;
}

uint64_t *sub_1ACC07324(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    uint64_t v7 = a2 + 1;
    unint64_t v8 = a2[2];
    if (v8 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)v7;
    }
    else
    {
      uint64_t v10 = *v7;
      sub_1ACA3985C(*v7, a2[2]);
      v4[1] = v10;
      v4[2] = v8;
    }
    uint64_t v11 = a2[4];
    v4[3] = a2[3];
    v4[4] = v11;
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1ACE750A8();
    uint64_t v16 = *(void *)(v15 - 8);
    unint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v19 = *(int *)(a3 + 32);
    uint64_t v20 = (uint64_t *)((char *)v4 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1ACC07500(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  if (v4 >> 60 != 15) {
    sub_1ACA50850(*(void *)(a1 + 8), v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC075EC(uint64_t a1, void *a2, uint64_t a3)
{
  *(void *)a1 = *a2;
  uint64_t v6 = a2 + 1;
  unint64_t v7 = a2[2];
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)v6;
  }
  else
  {
    uint64_t v8 = *v6;
    sub_1ACA3985C(*v6, a2[2]);
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v7;
  }
  uint64_t v9 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v9;
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1ACE750A8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = *(int *)(a3 + 32);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1ACC07778(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = a1 + 1;
  unint64_t v7 = a2 + 1;
  unint64_t v8 = a2[2];
  if (a1[2] >> 60 == 15)
  {
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = *v7;
      sub_1ACA3985C(*v7, a2[2]);
      a1[1] = v9;
      a1[2] = v8;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v8 >> 60 == 15)
  {
    sub_1ACC079C8((uint64_t)(a1 + 1));
LABEL_6:
    *uint64_t v6 = *(_OWORD *)v7;
    goto LABEL_8;
  }
  uint64_t v10 = *v7;
  sub_1ACA3985C(*v7, a2[2]);
  uint64_t v11 = a1[1];
  unint64_t v12 = a1[2];
  a1[1] = v10;
  a1[2] = v8;
  sub_1ACA50850(v11, v12);
LABEL_8:
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1ACE750A8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_13;
  }
  if (v20)
  {
LABEL_13:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_14:
  uint64_t v22 = *(int *)(a3 + 32);
  long long v23 = (void *)((char *)a1 + v22);
  unint64_t v24 = (void *)((char *)a2 + v22);
  *long long v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ACC079C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACC07A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 28);
  unint64_t v7 = (void *)(a1 + v6);
  unint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1ACE750A8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 32)) = *(_OWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

void *sub_1ACC07B5C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = a1 + 1;
  unint64_t v7 = a2 + 1;
  unint64_t v8 = a1[2];
  if (v8 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v9 = a2[2];
  if (v9 >> 60 == 15)
  {
    sub_1ACC079C8((uint64_t)(a1 + 1));
LABEL_4:
    *uint64_t v6 = *v7;
    goto LABEL_6;
  }
  uint64_t v10 = a1[1];
  a1[1] = *(void *)v7;
  a1[2] = v9;
  sub_1ACA50850(v10, v8);
LABEL_6:
  uint64_t v11 = a2[4];
  a1[3] = a2[3];
  a1[4] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1ACE750A8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_11;
  }
  if (v19)
  {
LABEL_11:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_12:
  uint64_t v21 = *(int *)(a3 + 32);
  uint64_t v22 = (void *)((char *)a1 + v21);
  long long v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ACC07D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACC07D70);
}

uint64_t sub_1ACC07D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 28);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1ACC07E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACC07E44);
}

uint64_t sub_1ACC07E44(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 32) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for FairPlayMigrationData(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1E99F3838);
}

void sub_1ACC07F10()
{
  sub_1ACA73D00();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_1ACC07FC0(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = (uint64_t)v7;
    uint64_t v8 = a2[2];
    unint64_t v9 = a2[3];
    id v10 = v7;
    sub_1ACA3985C(v8, v9);
    v4[2] = v8;
    v4[3] = v9;
    uint64_t v11 = a3[7];
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_1ACE74F28();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_1ACE750A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = a3[9];
    uint64_t v20 = (uint64_t *)((char *)v4 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1ACC08114(uint64_t a1, uint64_t a2)
{
  sub_1ACA50850(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_1ACE750A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

void *sub_1ACC081EC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[2];
  unint64_t v8 = a2[3];
  id v9 = v6;
  sub_1ACA3985C(v7, v8);
  a1[2] = v7;
  a1[3] = v8;
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_1ACE750A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1ACC082F0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (void *)a2[1];
  uint64_t v7 = (void *)a1[1];
  a1[1] = v6;
  id v8 = v6;

  uint64_t v9 = a2[2];
  unint64_t v10 = a2[3];
  sub_1ACA3985C(v9, v10);
  uint64_t v11 = a1[2];
  unint64_t v12 = a1[3];
  a1[2] = v9;
  a1[3] = v10;
  sub_1ACA50850(v11, v12);
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = a3[8];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_1ACE750A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ACC08420(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1ACE750A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

void *sub_1ACC08508(void *a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = (void *)a1[1];
  *a1 = *(void *)a2;
  a1[1] = v6;

  uint64_t v8 = a1[2];
  unint64_t v9 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1ACA50850(v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1ACE750A8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ACC08610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACC08624);
}

uint64_t sub_1ACC08624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1ACE74F28();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1ACE750A8();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1ACC08750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACC08764);
}

uint64_t sub_1ACC08764(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1ACE74F28();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1ACE750A8();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for FairPlayMigrationData.ValidatedData(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1E99F3848);
}

uint64_t sub_1ACC088B0()
{
  uint64_t result = sub_1ACE74F28();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1ACE750A8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t dispatch thunk of FeedIngesterProviderProtocol.createNewIngester(with:from:updaterJobUUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t ArtworkFormat.fileExtension.getter(char a1)
{
  uint64_t result = 6778480;
  switch(a1)
  {
    case 1:
      uint64_t result = 6778986;
      break;
    case 2:
      uint64_t result = 1734701162;
      break;
    case 3:
      uint64_t result = 1667851624;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t static ArtworkFormat.preferredFormat.getter()
{
  if (qword_1EB773090 != -1) {
    swift_once();
  }
  return byte_1EB773080;
}

uint64_t ArtworkFormat.cgIdentifier.getter(unsigned __int8 a1)
{
  uint64_t v2 = sub_1ACE75378();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 - 1 >= 2)
  {
    if (a1) {
      sub_1ACE75338();
    }
    else {
      sub_1ACE75318();
    }
  }
  else
  {
    sub_1ACE75348();
  }
  sub_1ACE752F8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v6 = sub_1ACE76178();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t static ArtworkFormat.defaultFormat.getter()
{
  return 2;
}

void sub_1ACC08BA0()
{
  CFArrayRef v0 = CGImageDestinationCopyTypeIdentifiers();
  sub_1ACE761B8();
  unint64_t v1 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  unsigned int v2 = [(__CFArray *)v0 containsObject:v1];

  if (v2) {
    char v3 = 3;
  }
  else {
    char v3 = 0;
  }
  byte_1EB773080 = v3;
}

id static ArtworkFormat.heicEncodingSupported()()
{
  CFArrayRef v0 = CGImageDestinationCopyTypeIdentifiers();
  sub_1ACE761B8();
  unint64_t v1 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v2 = [(__CFArray *)v0 containsObject:v1];

  return v2;
}

BOOL static ArtworkFormat.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t ArtworkFormat.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t sub_1ACC08CD0()
{
  uint64_t result = 6778480;
  switch(*v0)
  {
    case 1:
      uint64_t result = 6778986;
      break;
    case 2:
      uint64_t result = 1734701162;
      break;
    case 3:
      uint64_t result = 1667851624;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACC08D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACC0964C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACC08D60(uint64_t a1)
{
  unint64_t v2 = sub_1ACC094A8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC08D9C(uint64_t a1)
{
  unint64_t v2 = sub_1ACC094A8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACC08DD8(uint64_t a1)
{
  unint64_t v2 = sub_1ACC094FC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC08E14(uint64_t a1)
{
  unint64_t v2 = sub_1ACC094FC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACC08E50(uint64_t a1)
{
  unint64_t v2 = sub_1ACC09550();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC08E8C(uint64_t a1)
{
  unint64_t v2 = sub_1ACC09550();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACC08EC8(uint64_t a1)
{
  unint64_t v2 = sub_1ACC095A4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC08F04(uint64_t a1)
{
  unint64_t v2 = sub_1ACC095A4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACC08F40(uint64_t a1)
{
  unint64_t v2 = sub_1ACC095F8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC08F7C(uint64_t a1)
{
  unint64_t v2 = sub_1ACC095F8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ArtworkFormat.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v31 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3858);
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  MEMORY[0x1F4188790](v3);
  long long v28 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3860);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v25 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3868);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3870);
  uint64_t v22 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3878);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC094A8();
  sub_1ACE77C78();
  switch((char)v31)
  {
    case 1:
      char v33 = 1;
      sub_1ACC095A4();
      sub_1ACE776D8();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
      break;
    case 2:
      char v34 = 2;
      sub_1ACC09550();
      uint64_t v17 = v25;
      sub_1ACE776D8();
      uint64_t v19 = v26;
      uint64_t v18 = v27;
      goto LABEL_5;
    case 3:
      char v35 = 3;
      sub_1ACC094FC();
      uint64_t v17 = v28;
      sub_1ACE776D8();
      uint64_t v19 = v29;
      uint64_t v18 = v30;
LABEL_5:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_1ACC095F8();
      sub_1ACE776D8();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t ArtworkFormat.hashValue.getter()
{
  return sub_1ACE77B78();
}

char *ArtworkFormat.init(from:)(void *a1)
{
  return sub_1ACC097C4(a1);
}

char *sub_1ACC09460@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1ACC097C4(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_1ACC0948C(void *a1)
{
  return ArtworkFormat.encode(to:)(a1, *v1);
}

unint64_t sub_1ACC094A8()
{
  unint64_t result = qword_1EB770F10;
  if (!qword_1EB770F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F10);
  }
  return result;
}

unint64_t sub_1ACC094FC()
{
  unint64_t result = qword_1EB770F48;
  if (!qword_1EB770F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F48);
  }
  return result;
}

unint64_t sub_1ACC09550()
{
  unint64_t result = qword_1E99F3880;
  if (!qword_1E99F3880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3880);
  }
  return result;
}

unint64_t sub_1ACC095A4()
{
  unint64_t result = qword_1E99F3888;
  if (!qword_1E99F3888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3888);
  }
  return result;
}

unint64_t sub_1ACC095F8()
{
  unint64_t result = qword_1E99F3890;
  if (!qword_1E99F3890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3890);
  }
  return result;
}

uint64_t sub_1ACC0964C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6778480 && a2 == 0xE300000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6778986 && a2 == 0xE300000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1734701162 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1667851624 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

char *sub_1ACC097C4(void *a1)
{
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771978);
  uint64_t v45 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v44 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771980);
  uint64_t v42 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v43 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771968);
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771970);
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771960);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1ACC094A8();
  uint64_t v15 = v47;
  sub_1ACE77C48();
  if (v15) {
    goto LABEL_7;
  }
  uint64_t v35 = v7;
  long long v36 = v9;
  uint64_t v16 = v43;
  uint64_t v17 = v44;
  uint64_t v47 = 0;
  uint64_t v18 = v45;
  uint64_t v19 = v11;
  uint64_t v20 = v13;
  uint64_t v21 = sub_1ACE776B8();
  uint64_t v22 = (char *)v21;
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v25 = sub_1ACE77328();
    swift_allocError();
    uint64_t v13 = v22;
    uint64_t v26 = v10;
    long long v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0EC8);
    *long long v28 = &type metadata for ArtworkFormat;
    sub_1ACE775E8();
    sub_1ACE77308();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v28, *MEMORY[0x1E4FBBA70], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v26);
LABEL_7:
    uint64_t v29 = (uint64_t)v46;
    goto LABEL_8;
  }
  uint64_t v13 = (char *)*(unsigned __int8 *)(v21 + 32);
  switch(*(unsigned char *)(v21 + 32))
  {
    case 1:
      char v49 = 1;
      sub_1ACC095A4();
      uint64_t v31 = v47;
      sub_1ACE775D8();
      if (v31) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v39);
      goto LABEL_14;
    case 2:
      char v50 = 2;
      sub_1ACC09550();
      uint64_t v32 = v47;
      sub_1ACE775D8();
      if (v32) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v40);
      goto LABEL_14;
    case 3:
      char v51 = 3;
      sub_1ACC094FC();
      uint64_t v33 = v47;
      sub_1ACE775D8();
      if (v33) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
      uint64_t v29 = (uint64_t)v46;
      break;
    default:
      char v48 = 0;
      sub_1ACC095F8();
      uint64_t v23 = v36;
      uint64_t v24 = v47;
      sub_1ACE775D8();
      if (v24)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v35);
LABEL_14:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
      uint64_t v29 = (uint64_t)v46;
      break;
  }
LABEL_8:
  __swift_destroy_boxed_opaque_existential_0(v29);
  return v13;
}

unint64_t sub_1ACC09E00()
{
  unint64_t result = qword_1E99F3898;
  if (!qword_1E99F3898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3898);
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkFormat()
{
  return &type metadata for ArtworkFormat;
}

unsigned char *_s18PodcastsFoundation13ArtworkFormatOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC09F34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkFormat.CodingKeys()
{
  return &type metadata for ArtworkFormat.CodingKeys;
}

ValueMetadata *type metadata accessor for ArtworkFormat.PngCodingKeys()
{
  return &type metadata for ArtworkFormat.PngCodingKeys;
}

ValueMetadata *type metadata accessor for ArtworkFormat.JpgCodingKeys()
{
  return &type metadata for ArtworkFormat.JpgCodingKeys;
}

ValueMetadata *type metadata accessor for ArtworkFormat.JpegCodingKeys()
{
  return &type metadata for ArtworkFormat.JpegCodingKeys;
}

ValueMetadata *type metadata accessor for ArtworkFormat.HeicCodingKeys()
{
  return &type metadata for ArtworkFormat.HeicCodingKeys;
}

unint64_t sub_1ACC09FB0()
{
  unint64_t result = qword_1E99F38A0;
  if (!qword_1E99F38A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F38A0);
  }
  return result;
}

unint64_t sub_1ACC0A008()
{
  unint64_t result = qword_1EB770F40;
  if (!qword_1EB770F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F40);
  }
  return result;
}

unint64_t sub_1ACC0A060()
{
  unint64_t result = qword_1EB770F38;
  if (!qword_1EB770F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F38);
  }
  return result;
}

unint64_t sub_1ACC0A0B8()
{
  unint64_t result = qword_1EB770F30;
  if (!qword_1EB770F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F30);
  }
  return result;
}

unint64_t sub_1ACC0A110()
{
  unint64_t result = qword_1EB770F28;
  if (!qword_1EB770F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F28);
  }
  return result;
}

unint64_t sub_1ACC0A168()
{
  unint64_t result = qword_1EB770F68;
  if (!qword_1EB770F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F68);
  }
  return result;
}

unint64_t sub_1ACC0A1C0()
{
  unint64_t result = qword_1EB770F60;
  if (!qword_1EB770F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F60);
  }
  return result;
}

unint64_t sub_1ACC0A218()
{
  unint64_t result = qword_1EB770F58;
  if (!qword_1EB770F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F58);
  }
  return result;
}

unint64_t sub_1ACC0A270()
{
  unint64_t result = qword_1EB770F50;
  if (!qword_1EB770F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F50);
  }
  return result;
}

unint64_t sub_1ACC0A2C8()
{
  unint64_t result = qword_1EB770F20;
  if (!qword_1EB770F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F20);
  }
  return result;
}

unint64_t sub_1ACC0A320()
{
  unint64_t result = qword_1EB770F18;
  if (!qword_1EB770F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F18);
  }
  return result;
}

uint64_t HexColor.red.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t (*HexColor.red.modify())()
{
  return nullsub_1;
}

uint64_t HexColor.green.getter(unsigned int a1)
{
  return a1 >> 8;
}

uint64_t HexColor.green.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*HexColor.green.modify())()
{
  return nullsub_1;
}

uint64_t HexColor.blue.getter(unsigned int a1)
{
  return HIWORD(a1);
}

uint64_t HexColor.blue.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*HexColor.blue.modify())()
{
  return nullsub_1;
}

uint64_t HexColor.alpha.getter(unsigned int a1)
{
  return HIBYTE(a1);
}

uint64_t HexColor.alpha.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 3) = result;
  return result;
}

uint64_t (*HexColor.alpha.modify())()
{
  return nullsub_1;
}

uint64_t HexColor.init(red:green:blue:alpha:)(unsigned __int8 a1, unsigned __int8 a2, unsigned __int8 a3, int a4)
{
  return (a3 << 16) | (a4 << 24) | (a2 << 8) | a1;
}

BOOL sub_1ACC0A44C(int *a1, int *a2)
{
  return sub_1ACCF4238(*a1, *a2);
}

uint64_t sub_1ACC0A458()
{
  return sub_1ACAE59A0();
}

uint64_t sub_1ACC0A460()
{
  return sub_1ACE77B48();
}

uint64_t sub_1ACC0A490()
{
  return sub_1ACD232FC();
}

uint64_t HexColor.rawValue.getter(unsigned int a1)
{
  return bswap32(a1);
}

uint64_t sub_1ACC0A4A4@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = _s18PodcastsFoundation8HexColorV8rawValueACs6UInt32V_tcfC_0(*a1);
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_1ACC0A4D4(_DWORD *a1@<X8>)
{
  *a1 = bswap32(*v1);
}

unint64_t HexColor.ParseError.description.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t HexColor.init(_:)(uint64_t a1, unint64_t a2)
{
  return sub_1ACC0B428(a1, a2);
}

uint64_t sub_1ACC0A58C()
{
  uint64_t v0 = sub_1ACE74988();
  __swift_allocate_value_buffer(v0, qword_1EB7730B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB7730B0);
  return sub_1ACE74948();
}

uint64_t sub_1ACC0A5F0(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t result = sub_1ACE762A8();
      if ((v1 & 1) == 0)
      {
        uint64_t v2 = result;
        uint64_t result = 15;
        uint64_t v1 = v2;
        return MEMORY[0x1F41838E8](result, v1);
      }
    }
    __break(1u);
    return MEMORY[0x1F41838E8](result, v1);
  }
  return result;
}

uint64_t HexColor.description.getter(unsigned int a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ACE843F0;
  if (HIBYTE(a1) == 255)
  {
    uint64_t v3 = MEMORY[0x1E4FBC530];
    *(void *)(v2 + 56) = MEMORY[0x1E4FBC4C0];
    *(void *)(v2 + 64) = v3;
    unsigned int v4 = bswap32(a1) >> 8;
  }
  else
  {
    unsigned int v4 = bswap32(a1);
    uint64_t v5 = MEMORY[0x1E4FBC530];
    *(void *)(v2 + 56) = MEMORY[0x1E4FBC4C0];
    *(void *)(v2 + 64) = v5;
  }
  *(_DWORD *)(v2 + 32) = v4;
  return sub_1ACE761F8();
}

uint64_t sub_1ACC0A730()
{
  return HexColor.description.getter(*v0);
}

uint64_t HexColor.debugDescription.getter()
{
  sub_1ACE77268();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "HexColor(red: ");
  sub_1ACE777C8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  sub_1ACE777C8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  sub_1ACE777C8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  sub_1ACE777C8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  return v1[0];
}

uint64_t sub_1ACC0A8E4()
{
  return HexColor.debugDescription.getter();
}

uint64_t HexColor.init(from:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  uint64_t v2 = sub_1ACE77858();
  uint64_t v4 = sub_1ACC0B428(v2, v3);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v4;
}

uint64_t sub_1ACC0A9C4@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  uint64_t v5 = sub_1ACE77858();
  int v7 = sub_1ACC0B428(v5, v6);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v7;
  return result;
}

uint64_t HexColor.encode(to:)(void *a1, unsigned int a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  HexColor.description.getter(a2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1ACE778D8();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
}

uint64_t sub_1ACC0AB50(void *a1)
{
  unsigned int v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  HexColor.description.getter(v2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1ACE778D8();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
}

uint64_t HexColor.init(integerLiteral:)(unsigned int a1)
{
  return bswap32(a1);
}

uint64_t sub_1ACC0AC0C@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = _s18PodcastsFoundation8HexColorV8rawValueACs6UInt32V_tcfC_0(*a1);
  *a2 = result;
  return result;
}

CGColorSpaceRef sub_1ACC0AC38()
{
  CGColorSpaceRef result = CGColorSpaceCreateDeviceRGB();
  qword_1E99F38A8 = (uint64_t)result;
  return result;
}

uint64_t HexColor.init(cgColor:)(CGColor *a1)
{
  sub_1ACC0B7D8(a1);
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

uint64_t sub_1ACC0AC84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1ACE76378();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    int v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1ACCCF740();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    int v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    int v7 = (unsigned __int8 *)sub_1ACE77388();
  }
LABEL_7:
  uint64_t v11 = sub_1ACC0AD6C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 | ((((unint64_t)v11 >> 32) & 1) << 32);
}

unsigned __int8 *sub_1ACC0AD6C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            unint64_t v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__CFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            unint64_t v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__CFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          unint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            unint64_t v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (v14 < v15) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t _s18PodcastsFoundation8HexColorV8rawValueACs6UInt32V_tcfC_0(unsigned int a1)
{
  return bswap32(a1);
}

uint64_t sub_1ACC0AFF4(uint64_t a1, unint64_t a2, unsigned int (*a3)(uint64_t))
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v4 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 1;
  }
  uint64_t v17 = a2 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v15 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i < v4; i += v12)
  {
    if ((a2 & 0x1000000000000000) != 0)
    {
      uint64_t v10 = sub_1ACE77258();
      uint64_t v12 = v11;
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0)
      {
        unint64_t v9 = (void *)v15;
        if ((a1 & 0x1000000000000000) == 0) {
          unint64_t v9 = (void *)sub_1ACE77388();
        }
        uint64_t v10 = *((unsigned __int8 *)v9 + i);
        if (*((char *)v9 + i) < 0)
        {
          switch(__clz(v10 ^ 0xFF))
          {
            case 0x1Au:
              goto LABEL_20;
            case 0x1Bu:
              goto LABEL_22;
            case 0x1Cu:
              goto LABEL_24;
            default:
              break;
          }
        }
LABEL_14:
        uint64_t v12 = 1;
        goto LABEL_15;
      }
      v16[0] = a1;
      v16[1] = v17;
      uint64_t v10 = *((unsigned __int8 *)v16 + i);
      if ((*((char *)v16 + i) & 0x80000000) == 0) {
        goto LABEL_14;
      }
      switch(__clz(v10 ^ 0xFF))
      {
        case 0x1Au:
          unint64_t v9 = v16;
LABEL_20:
          uint64_t v10 = *((unsigned char *)v9 + i + 1) & 0x3F | ((v10 & 0x1F) << 6);
          uint64_t v12 = 2;
          break;
        case 0x1Bu:
          unint64_t v9 = v16;
LABEL_22:
          uint64_t v10 = ((v10 & 0xF) << 12) | ((*((unsigned char *)v9 + i + 1) & 0x3F) << 6) | *((unsigned char *)v9 + i + 2) & 0x3F;
          uint64_t v12 = 3;
          break;
        case 0x1Cu:
          unint64_t v9 = v16;
LABEL_24:
          uint64_t v10 = ((v10 & 0xF) << 18) | ((*((unsigned char *)v9 + i + 1) & 0x3F) << 12) | ((*((unsigned char *)v9 + i + 2) & 0x3F) << 6) | *((unsigned char *)v9 + i + 3) & 0x3F;
          uint64_t v12 = 4;
          break;
        default:
          goto LABEL_14;
      }
    }
LABEL_15:
    uint64_t v13 = (v3 == 0) & a3(v10);
    if (v13 != 1) {
      break;
    }
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1ACC0B230(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1ACE74988();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v15 = a1;
  unint64_t v16 = a2;
  swift_bridgeObjectRetain();
  if (sub_1ACE76348())
  {
    uint64_t v7 = sub_1ACE76288();
    sub_1ACC0A5F0(v7);
    a1 = v15;
    a2 = v16;
  }
  uint64_t v8 = qword_1EB772FD8;
  swift_bridgeObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB7730B0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(&v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v9, v4);
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v5 + 32))(v11 + v10, &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v4);
  char v12 = sub_1ACC0AFF4(a1, a2, (unsigned int (*)(uint64_t))sub_1ACC0BCB4);
  swift_release();
  swift_bridgeObjectRelease();
  if (v12) {
    return v15;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1ACC0B428(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  uint64_t v4 = sub_1ACC0B230(a1, a2);
  if (!v5)
  {
    sub_1ACC0BBD0();
    swift_allocError();
    *unint64_t v14 = a1;
LABEL_60:
    v14[1] = v2;
    return swift_willThrow();
  }
  uint64_t v6 = v4;
  unint64_t v7 = v5;
  swift_bridgeObjectRelease();
  uint64_t v8 = HIBYTE(v7) & 0xF;
  uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  if ((v7 & 0x2000000000000000) != 0) {
    uint64_t v10 = HIBYTE(v7) & 0xF;
  }
  else {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (!v10) {
    goto LABEL_59;
  }
  if ((v7 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1ACC0AC84(v6, v7, 16);
    swift_bridgeObjectRelease();
    if ((v13 & 0x100000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_59;
  }
  if ((v7 & 0x2000000000000000) != 0)
  {
    v30[0] = v6;
    v30[1] = v7 & 0xFFFFFFFFFFFFFFLL;
    if (v6 == 43)
    {
      if (v8)
      {
        if (--v8)
        {
          LODWORD(v13) = 0;
          unsigned __int8 v19 = (unsigned __int8 *)v30 + 1;
          while (1)
          {
            int v20 = *v19;
            unsigned __int8 v21 = v20 - 48;
            if ((v20 - 48) >= 0xA)
            {
              if ((v20 - 65) < 6)
              {
                unsigned __int8 v21 = v20 - 55;
              }
              else
              {
                if ((v20 - 97) > 5) {
                  break;
                }
                unsigned __int8 v21 = v20 - 87;
              }
            }
            if (v13 >> 28) {
              break;
            }
            LODWORD(v13) = 16 * v13 + v21;
            ++v19;
            if (!--v8) {
              goto LABEL_49;
            }
          }
LABEL_48:
          LODWORD(v13) = 0;
          LOBYTE(v8) = 1;
LABEL_49:
          if ((v8 & 1) == 0) {
            goto LABEL_50;
          }
        }
LABEL_59:
        sub_1ACC0BBD0();
        swift_allocError();
        *unint64_t v14 = v6;
        unint64_t v2 = v7;
        goto LABEL_60;
      }
    }
    else
    {
      if (v6 != 45)
      {
        if (v8)
        {
          LODWORD(v13) = 0;
          char v22 = (unsigned __int8 *)v30;
          while (1)
          {
            int v23 = *v22;
            unsigned __int8 v24 = v23 - 48;
            if ((v23 - 48) >= 0xA)
            {
              if ((v23 - 65) < 6)
              {
                unsigned __int8 v24 = v23 - 55;
              }
              else
              {
                if ((v23 - 97) > 5) {
                  goto LABEL_48;
                }
                unsigned __int8 v24 = v23 - 87;
              }
            }
            if (v13 >> 28) {
              goto LABEL_48;
            }
            LODWORD(v13) = 16 * v13 + v24;
            ++v22;
            if (!--v8) {
              goto LABEL_49;
            }
          }
        }
        goto LABEL_59;
      }
      if (v8)
      {
        if (--v8)
        {
          LODWORD(v13) = 0;
          uint64_t v15 = (unsigned __int8 *)v30 + 1;
          while (1)
          {
            int v16 = *v15;
            unsigned __int8 v17 = v16 - 48;
            if ((v16 - 48) >= 0xA)
            {
              if ((v16 - 65) < 6)
              {
                unsigned __int8 v17 = v16 - 55;
              }
              else
              {
                if ((v16 - 97) > 5) {
                  goto LABEL_48;
                }
                unsigned __int8 v17 = v16 - 87;
              }
            }
            if (v13 >> 28) {
              goto LABEL_48;
            }
            unsigned int v18 = 16 * v13;
            LODWORD(v13) = 16 * v13 - v17;
            if (v18 < v17) {
              goto LABEL_48;
            }
            ++v15;
            if (!--v8) {
              goto LABEL_49;
            }
          }
        }
        goto LABEL_59;
      }
      __break(1u);
    }
    __break(1u);
    JUMPOUT(0x1ACC0B7C0);
  }
  if ((v6 & 0x1000000000000000) != 0) {
    uint64_t v11 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    uint64_t v11 = (unsigned __int8 *)sub_1ACE77388();
  }
  char v12 = sub_1ACC0AD6C(v11, v9, 16);
  char v31 = BYTE4(v12) & 1;
  if (BYTE4(v12)) {
    goto LABEL_59;
  }
  LODWORD(v13) = v12;
LABEL_50:
  switch(sub_1ACE76288())
  {
    case 3:
      swift_bridgeObjectRelease();
      unsigned int v25 = (v13 >> 8) & 0xF | (16 * ((v13 >> 8) & 0xF));
      LOBYTE(v26) = (v13 >> 4) | (16 * (v13 >> 4));
      int v27 = 255;
      LOBYTE(v28) = v13 & 0xF | (16 * (v13 & 0xF));
      break;
    case 4:
      swift_bridgeObjectRelease();
      LOWORD(v25) = ((unsigned __int16)v13 >> 12) | (16 * ((unsigned __int16)v13 >> 12));
      unsigned int v26 = (v13 >> 8) & 0xF | (16 * ((v13 >> 8) & 0xF));
      LOBYTE(v28) = (v13 >> 4) | (16 * (v13 >> 4));
      int v27 = v13 & 0xF | (16 * (v13 & 0xF));
      break;
    case 6:
      swift_bridgeObjectRelease();
      unsigned int v25 = WORD1(v13);
      unsigned int v26 = v13 >> 8;
      int v27 = 255;
      LOBYTE(v28) = v13;
      break;
    case 8:
      swift_bridgeObjectRelease();
      unsigned int v25 = bswap32(v13);
      unsigned int v26 = v25 >> 8;
      unsigned int v28 = HIWORD(v25);
      int v27 = HIBYTE(v25);
      break;
    default:
      goto LABEL_59;
  }
  return (v28 << 16) | (v27 << 24) | (v26 << 8) | v25;
}

void sub_1ACC0B7D8(CGColor *a1)
{
  unint64_t v2 = CGColorGetColorSpace(a1);
  uint64_t v3 = v2;
  if (qword_1E99F0080 == -1)
  {
    if (!v2) {
      goto LABEL_6;
    }
  }
  else
  {
    swift_once();
    if (!v3) {
      goto LABEL_6;
    }
  }
  uint64_t v4 = (void *)qword_1E99F38A8;
  type metadata accessor for CGColorSpace(0);
  sub_1ACC0BB78();
  id v5 = v4;
  uint64_t v6 = v3;
  char v7 = sub_1ACE752A8();

  if (v7)
  {
    CGColorRef CopyByMatchingToColorSpace = a1;
    goto LABEL_7;
  }
LABEL_6:
  CGColorRef CopyByMatchingToColorSpace = CGColorCreateCopyByMatchingToColorSpace((CGColorSpaceRef)qword_1E99F38A8, kCGRenderingIntentDefault, a1, 0);
  if (!CopyByMatchingToColorSpace)
  {
LABEL_25:

    return;
  }
LABEL_7:
  uint64_t v9 = CopyByMatchingToColorSpace;
  uint64_t v10 = sub_1ACE76B38();

  if (!v10)
  {

    goto LABEL_25;
  }
  unint64_t v11 = *(void *)(v10 + 16);
  if (!v11)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v11 == 1)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v11 < 3)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  double v13 = *(double *)(v10 + 32);
  double v12 = *(double *)(v10 + 40);
  double v14 = *(double *)(v10 + 48);
  swift_bridgeObjectRelease();
  double Alpha = CGColorGetAlpha(a1);

  double v16 = v13 * 255.0;
  if (v13 * 255.0 <= -1.0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v16 >= 256.0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  double v17 = v12 * 255.0;
  if (v12 * 255.0 <= -1.0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v17 >= 256.0)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  double v18 = v14 * 255.0;
  if (v14 * 255.0 <= -1.0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v18 >= 256.0)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if ((*(void *)&v16 & 0x7FF0000000000000) == 0x7FF0000000000000) {
    goto LABEL_35;
  }
  if ((*(void *)&v17 & 0x7FF0000000000000) == 0x7FF0000000000000) {
    goto LABEL_35;
  }
  if ((*(void *)&v18 & 0x7FF0000000000000) == 0x7FF0000000000000) {
    goto LABEL_35;
  }
  double v19 = Alpha * 255.0;
  if ((COERCE_UNSIGNED_INT64(Alpha * 255.0) & 0x7FF0000000000000) == 0x7FF0000000000000) {
    goto LABEL_35;
  }
  if (v19 <= -1.0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v19 >= 256.0) {
LABEL_37:
  }
    __break(1u);
}

unint64_t sub_1ACC0BAA4()
{
  unint64_t result = qword_1E99F38B0;
  if (!qword_1E99F38B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F38B0);
  }
  return result;
}

uint64_t sub_1ACC0BAF8()
{
  return MEMORY[0x1E4FBC528];
}

_DWORD *__swift_memcpy4_1(_DWORD *result, _DWORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HexColor(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HexColor(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 4) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HexColor()
{
  return &type metadata for HexColor;
}

ValueMetadata *type metadata accessor for HexColor.ParseError()
{
  return &type metadata for HexColor.ParseError;
}

unint64_t sub_1ACC0BB78()
{
  unint64_t result = qword_1E99F38B8;
  if (!qword_1E99F38B8)
  {
    type metadata accessor for CGColorSpace(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F38B8);
  }
  return result;
}

unint64_t sub_1ACC0BBD0()
{
  unint64_t result = qword_1E99F38C0;
  if (!qword_1E99F38C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F38C0);
  }
  return result;
}

uint64_t sub_1ACC0BC24()
{
  uint64_t v1 = sub_1ACE74988();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1ACC0BCB4()
{
  return sub_1ACE74968() & 1;
}

unint64_t sub_1ACC0BD1C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2A20);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE74A28();
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  unsigned __int8 v32 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unsigned int v28 = (char *)&v27 - v9;
  uint64_t v29 = v8;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v34 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  uint64_t v13 = v12 & v10;
  int64_t v35 = (unint64_t)(v11 + 63) >> 6;
  double v14 = (void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
  uint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  char v31 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  uint64_t v36 = a1;
  swift_bridgeObjectRetain();
  int64_t v16 = 0;
  unint64_t v33 = MEMORY[0x1E4FBC860];
  char v30 = "okmarkState";
  if (!v13) {
    goto LABEL_7;
  }
LABEL_4:
  for (v13 &= v13 - 1; ; uint64_t v13 = (v18 - 1) & v18)
  {
    swift_bridgeObjectRetain();
    sub_1ACE749F8();
    swift_bridgeObjectRelease();
    (*v14)(v4, 0, 1, v5);
    swift_bridgeObjectRelease();
    if ((*v15)(v4, 1, v5) == 1)
    {
      sub_1ACA50E78((uint64_t)v4, &qword_1E99F2A20);
      if (v13) {
        goto LABEL_4;
      }
    }
    else
    {
      int v20 = *v31;
      unsigned __int8 v21 = v28;
      (*v31)(v28, v4, v5);
      v20(v32, v21, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v33 = sub_1ACA42334(0, *(void *)(v33 + 16) + 1, 1, v33);
      }
      unint64_t v23 = *(void *)(v33 + 16);
      unint64_t v22 = *(void *)(v33 + 24);
      if (v23 >= v22 >> 1) {
        unint64_t v33 = sub_1ACA42334(v22 > 1, v23 + 1, 1, v33);
      }
      unsigned __int8 v24 = v32;
      unint64_t v25 = v33;
      *(void *)(v33 + 16) = v23 + 1;
      v20((char *)(v25+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v23), v24, v5);
      if (v13) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v17 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v17 >= v35) {
      goto LABEL_29;
    }
    uint64_t v18 = *(void *)(v34 + 8 * v17);
    ++v16;
    if (!v18)
    {
      int64_t v16 = v17 + 1;
      if (v17 + 1 >= v35) {
        goto LABEL_29;
      }
      uint64_t v18 = *(void *)(v34 + 8 * v16);
      if (!v18)
      {
        int64_t v16 = v17 + 2;
        if (v17 + 2 >= v35) {
          goto LABEL_29;
        }
        uint64_t v18 = *(void *)(v34 + 8 * v16);
        if (!v18)
        {
          int64_t v16 = v17 + 3;
          if (v17 + 3 >= v35) {
            goto LABEL_29;
          }
          uint64_t v18 = *(void *)(v34 + 8 * v16);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_22:
    ;
  }
  int64_t v19 = v17 + 4;
  if (v19 < v35)
  {
    uint64_t v18 = *(void *)(v34 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        int64_t v16 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          break;
        }
        if (v16 >= v35) {
          goto LABEL_29;
        }
        uint64_t v18 = *(void *)(v34 + 8 * v16);
        ++v19;
        if (v18) {
          goto LABEL_22;
        }
      }
LABEL_31:
      __break(1u);
      JUMPOUT(0x1ACC0C330);
    }
    int64_t v16 = v19;
    goto LABEL_22;
  }
LABEL_29:
  swift_release();
  return v33;
}

PodcastsFoundation::URLTrackIdentifier_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> URLTrackIdentifier.init(string:)(Swift::String string)
{
  uint64_t v84 = v1;
  uint64_t v3 = sub_1ACE74A28();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  v89 = (char *)v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A928);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE74B18();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE74AD8();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1ACA50E78((uint64_t)v8, &qword_1EB76A928);
LABEL_12:
    sub_1ACC0DD70();
    swift_allocError();
    *int64_t v19 = xmmword_1ACE87320;
    int v20 = (void *)swift_willThrow();
    goto LABEL_77;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  sub_1ACE74A78();
  if (!v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_12;
  }
  uint64_t v85 = v3;
  uint64_t v14 = sub_1ACE74AB8();
  if (!v15) {
    goto LABEL_10;
  }
  if (v14 == 0x7374736163646F70 && v15 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v17 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
LABEL_10:
      swift_bridgeObjectRelease();
      sub_1ACC0DD70();
      swift_allocError();
      *uint64_t v18 = xmmword_1ACE87320;
LABEL_16:
      swift_willThrow();
      int v20 = (void *)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      goto LABEL_77;
    }
  }
  sub_1ACC0D848((char *)v88);
  int v22 = LOBYTE(v88[0]);
  if (LOBYTE(v88[0]) == 5)
  {
    sub_1ACC0DD70();
    swift_allocError();
    *unint64_t v23 = 0;
    v23[1] = 0;
    goto LABEL_16;
  }
  uint64_t v24 = sub_1ACE74A48();
  if (!v24)
  {
    char v51 = (void *)sub_1ACA3702C(MEMORY[0x1E4FBC860]);
    int v20 = (void *)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v25 = v84;
    goto LABEL_72;
  }
  v71[2] = v2;
  uint64_t v82 = *(void *)(v24 + 16);
  uint64_t v25 = v84;
  uint64_t v74 = v9;
  uint64_t v75 = v10;
  long long v73 = v12;
  int v72 = v22;
  if (v82)
  {
    uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v26 = v4 + 16;
    unint64_t v79 = v24 + ((*(unsigned __int8 *)(v26 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 64));
    uint64_t v80 = v27;
    uint64_t v81 = v26;
    uint64_t v28 = *(void *)(v26 + 56);
    uint64_t v77 = (void (**)(char *, uint64_t))(v26 - 8);
    uint64_t v78 = v28;
    v71[1] = v24;
    swift_bridgeObjectRetain();
    uint64_t v29 = 0;
    double v83 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v76 = (unint64_t)"okmarkState";
    uint64_t v30 = v85;
    do
    {
      v80(v89, v79 + v78 * v29, v30);
      uint64_t v31 = sub_1ACE74A08();
      uint64_t v33 = v32;
      uint64_t v34 = qword_1F03806A0;
      if (qword_1F03806A0)
      {
        uint64_t v35 = v31;
        uint64_t v36 = &byte_1F03806B0;
        while (1)
        {
          int v38 = *v36++;
          char v37 = v38;
          unint64_t v39 = 0xE800000000000000;
          unint64_t v40 = 0x6461656879616C70;
          switch(v38)
          {
            case 1:
              unint64_t v40 = 0x5565646F73697065;
              goto LABEL_33;
            case 2:
              unint64_t v39 = v76 | 0x8000000000000000;
              unint64_t v40 = 0xD000000000000011;
              break;
            case 3:
              unint64_t v39 = 0xEC00000064496B63;
              unint64_t v40 = 0x61725465726F7473;
              break;
            case 4:
              unint64_t v39 = 0xED0000726564724FLL;
              unint64_t v40 = 0x6B63616279616C70;
              break;
            case 5:
              unint64_t v39 = 0xEE004C5255646565;
              unint64_t v40 = 0x4674736163646F70;
              break;
            case 6:
              unint64_t v39 = 0xE400000000000000;
              unint64_t v40 = 1684632420;
              break;
            case 7:
              unint64_t v39 = 0xED000064496D6574;
              unint64_t v40 = 0x49746E65746E6F63;
              break;
            case 8:
              unint64_t v40 = 0x4765646F73697065;
LABEL_33:
              unint64_t v39 = 0xEB00000000646975;
              break;
            case 9:
              unint64_t v40 = 0x5465646F73697065;
              goto LABEL_42;
            case 10:
              unint64_t v40 = 0x5474736163646F70;
LABEL_42:
              unint64_t v39 = 0xEC000000656C7469;
              break;
            case 11:
              unint64_t v39 = 0xE90000000000006CLL;
              unint64_t v40 = 0x72556D6165727473;
              break;
            case 12:
              break;
            case 13:
              unint64_t v39 = 0xEA00000000006E6FLL;
              unint64_t v40 = 0x7361655279616C70;
              break;
            case 14:
              unint64_t v39 = 0xE700000000000000;
              unint64_t v40 = 0x747865746E6F63;
              break;
            case 15:
              unint64_t v39 = 0xEF6570795474726FLL;
              unint64_t v40 = 0x53747865746E6F63;
              break;
            case 16:
              unint64_t v39 = 0xEC00000044495344;
              unint64_t v40 = 0x7265756575716E65;
              break;
            default:
              unint64_t v40 = 1684632949;
              unint64_t v39 = 0xE400000000000000;
              break;
          }
          v88[0] = v40;
          v88[1] = v39;
          uint64_t v86 = v35;
          uint64_t v87 = v33;
          sub_1ACA4F4AC();
          uint64_t v41 = sub_1ACE77078();
          swift_bridgeObjectRelease();
          if (!v41) {
            break;
          }
          if (!--v34) {
            goto LABEL_20;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v42 = v89;
        uint64_t v43 = sub_1ACE74A18();
        uint64_t v45 = v44;
        (*v77)(v42, v85);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v46 = v83;
        }
        else {
          uint64_t v46 = sub_1ACA42E88(0, v83[2] + 1, 1, v83);
        }
        unint64_t v48 = v46[2];
        unint64_t v47 = v46[3];
        if (v48 >= v47 >> 1) {
          uint64_t v46 = sub_1ACA42E88((void *)(v47 > 1), v48 + 1, 1, v46);
        }
        v46[2] = v48 + 1;
        double v83 = v46;
        char v49 = &v46[3 * v48];
        *((unsigned char *)v49 + 32) = v37;
        v49[5] = v43;
        v49[6] = v45;
        uint64_t v30 = v85;
      }
      else
      {
LABEL_20:
        swift_bridgeObjectRelease();
        uint64_t v30 = v85;
        (*v77)(v89, v85);
      }
      ++v29;
    }
    while (v29 != v82);
    swift_bridgeObjectRelease();
    uint64_t v9 = v74;
    uint64_t v10 = v75;
    char v50 = v83;
    uint64_t v25 = v84;
    uint64_t v12 = v73;
    LOBYTE(v22) = v72;
  }
  else
  {
    char v50 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  char v51 = (void *)sub_1ACA3702C(MEMORY[0x1E4FBC860]);
  uint64_t v52 = v50[2];
  if (!v52) {
    goto LABEL_71;
  }
  double v83 = (void *)swift_bridgeObjectRetain();
  uint64_t v53 = v83 + 6;
  do
  {
    unsigned __int8 v55 = *((unsigned char *)v53 - 16);
    uint64_t v57 = *(v53 - 1);
    uint64_t v56 = *v53;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v88[0] = v51;
    unint64_t v60 = sub_1ACA66344(v55);
    uint64_t v61 = v51[2];
    BOOL v62 = (v59 & 1) == 0;
    uint64_t v63 = v61 + v62;
    if (__OFADD__(v61, v62))
    {
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      sub_1ACE77A68();
      __break(1u);
      JUMPOUT(0x1ACC0CCF0);
    }
    char v64 = v59;
    if (v51[3] >= v63)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        char v51 = (void *)v88[0];
        if (v59) {
          goto LABEL_57;
        }
      }
      else
      {
        sub_1ACD07628();
        char v51 = (void *)v88[0];
        if (v64) {
          goto LABEL_57;
        }
      }
    }
    else
    {
      sub_1ACCFED50(v63, isUniquelyReferenced_nonNull_native);
      unint64_t v65 = sub_1ACA66344(v55);
      if ((v64 & 1) != (v66 & 1)) {
        goto LABEL_75;
      }
      unint64_t v60 = v65;
      char v51 = (void *)v88[0];
      if (v64)
      {
LABEL_57:
        BOOL v54 = (void *)(v51[7] + 16 * v60);
        swift_bridgeObjectRelease();
        void *v54 = v57;
        v54[1] = v56;
        goto LABEL_58;
      }
    }
    v51[(v60 >> 6) + 8] |= 1 << v60;
    *(unsigned char *)(v51[6] + v60) = v55;
    uint64_t v67 = (void *)(v51[7] + 16 * v60);
    *uint64_t v67 = v57;
    v67[1] = v56;
    uint64_t v68 = v51[2];
    BOOL v69 = __OFADD__(v68, 1);
    uint64_t v70 = v68 + 1;
    if (v69) {
      goto LABEL_74;
    }
    v51[2] = v70;
LABEL_58:
    v53 += 3;
    swift_bridgeObjectRelease();
    --v52;
  }
  while (v52);
  swift_bridgeObjectRelease();
  uint64_t v9 = v74;
  uint64_t v10 = v75;
  uint64_t v25 = v84;
  uint64_t v12 = v73;
  LOBYTE(v22) = v72;
LABEL_71:
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  int v20 = (void *)swift_bridgeObjectRelease();
LABEL_72:
  *(void *)uint64_t v25 = v51;
  *(unsigned char *)(v25 + 8) = v22;
LABEL_77:
  result.value.arguments._rawValue = v20;
  result.value.command = v21;
  return result;
}

Swift::String_optional __swiftcall URLTrackIdentifier.valueForArgument(_:)(PodcastsFoundation::URLTrackIdentifier::ArgumentKey a1)
{
  uint64_t v2 = *v1;
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1ACA66344(*(unsigned char *)a1), (v4 & 1) != 0))
  {
    uint64_t v5 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v3);
    uint64_t v6 = *v5;
    uint64_t v7 = (void *)v5[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  uint64_t v8 = v6;
  uint64_t v9 = v7;
  result.value._object = v9;
  result.value._countAndFlagsBits = v8;
  return result;
}

PodcastsFoundation::URLTrackIdentifier __swiftcall URLTrackIdentifier.init(command:arguments:)(PodcastsFoundation::URLTrackIdentifier::Command command, Swift::OpaquePointer arguments)
{
  char v3 = *(unsigned char *)command;
  *(Swift::OpaquePointer *)uint64_t v2 = arguments;
  *(unsigned char *)(v2 + 8) = v3;
  result.command = (PodcastsFoundation::URLTrackIdentifier::Command)arguments._rawValue;
  LOBYTE(result.arguments._rawValue) = command;
  return result;
}

uint64_t URLTrackIdentifier.stringValue.getter()
{
  uint64_t v1 = sub_1ACE74B18();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  char v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(char *)(v0 + 8);
  sub_1ACE74B08();
  sub_1ACE74AC8();
  MEMORY[0x1AD116C40](*(void *)&aPlaypodcplaypo_0[8 * v5], *(void *)&aPlaypodcplaypo_0[8 * v5 + 40]);
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_1ACC0BD1C(v6);
  swift_bridgeObjectRelease();
  sub_1ACE74A58();
  uint64_t v7 = sub_1ACE74AE8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v7;
}

PodcastsFoundation::URLTrackIdentifier::Command_optional __swiftcall URLTrackIdentifier.Command.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1ACE775B8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static URLTrackIdentifier.Command.allCases.getter()
{
  return &unk_1F0380958;
}

uint64_t URLTrackIdentifier.Command.rawValue.getter()
{
  uint64_t result = 0x63646F5079616C70;
  switch(*v0)
  {
    case 2:
      uint64_t result = 0x7461745379616C70;
      break;
    case 3:
      uint64_t result = 0x6269726373627573;
      break;
    case 4:
      uint64_t result = 0x6D65744979616C70;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACC0D00C(unsigned __int8 *a1, char *a2)
{
  return sub_1ACCF5BF4(*a1, *a2);
}

uint64_t sub_1ACC0D018()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC0D128()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC0D214()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::URLTrackIdentifier::Command_optional sub_1ACC0D320(Swift::String *a1)
{
  return URLTrackIdentifier.Command.init(rawValue:)(*a1);
}

void sub_1ACC0D32C(void *a1@<X8>)
{
  unint64_t v2 = 0xEC00000073747361;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000747361;
      goto LABEL_3;
    case 2:
      *a1 = 0x7461745379616C70;
      a1[1] = 0xEB000000006E6F69;
      break;
    case 3:
      *a1 = 0x6269726373627573;
      a1[1] = 0xE900000000000065;
      break;
    case 4:
      *a1 = 0x6D65744979616C70;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = 0x63646F5079616C70;
      a1[1] = v2;
      break;
  }
}

void sub_1ACC0D3F4(void *a1@<X8>)
{
  *a1 = &unk_1F0380980;
}

PodcastsFoundation::URLTrackIdentifier::ArgumentKey_optional __swiftcall URLTrackIdentifier.ArgumentKey.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1ACE779E8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 17;
  if (v3 < 0x11) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

void *static URLTrackIdentifier.ArgumentKey.allCases.getter()
{
  return &unk_1F0380690;
}

unint64_t URLTrackIdentifier.ArgumentKey.rawValue.getter()
{
  unint64_t result = 1684632949;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x5565646F73697065;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x61725465726F7473;
      break;
    case 4:
      unint64_t result = 0x6B63616279616C70;
      break;
    case 5:
      unint64_t result = 0x4674736163646F70;
      break;
    case 6:
      unint64_t result = 1684632420;
      break;
    case 7:
      unint64_t result = 0x49746E65746E6F63;
      break;
    case 8:
      unint64_t result = 0x4765646F73697065;
      break;
    case 9:
      unint64_t result = 0x5465646F73697065;
      break;
    case 0xA:
      unint64_t result = 0x5474736163646F70;
      break;
    case 0xB:
      unint64_t result = 0x72556D6165727473;
      break;
    case 0xC:
      unint64_t result = 0x6461656879616C70;
      break;
    case 0xD:
      unint64_t result = 0x7361655279616C70;
      break;
    case 0xE:
      unint64_t result = 0x747865746E6F63;
      break;
    case 0xF:
      unint64_t result = 0x53747865746E6F63;
      break;
    case 0x10:
      unint64_t result = 0x7265756575716E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACC0D6B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF5DCC(*a1, *a2);
}

PodcastsFoundation::URLTrackIdentifier::ArgumentKey_optional sub_1ACC0D6C0(Swift::String *a1)
{
  return URLTrackIdentifier.ArgumentKey.init(rawValue:)(*a1);
}

unint64_t sub_1ACC0D6CC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = URLTrackIdentifier.ArgumentKey.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1ACC0D6F4()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC0D75C()
{
  URLTrackIdentifier.ArgumentKey.rawValue.getter();
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC0D7C0()
{
  return sub_1ACE77B78();
}

void sub_1ACC0D824(void *a1@<X8>)
{
  *a1 = &unk_1F0380690;
}

uint64_t URLTrackIdentifier.arguments.getter()
{
  return swift_bridgeObjectRetain();
}

void URLTrackIdentifier.command.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

uint64_t sub_1ACC0D848@<X0>(char *a1@<X8>)
{
  char v2 = byte_1F0380688;
  sub_1ACA4F4AC();
  uint64_t v3 = sub_1ACE77078();
  swift_bridgeObjectRelease();
  if (v3)
  {
    char v2 = byte_1F0380689;
    uint64_t v4 = sub_1ACE77078();
    swift_bridgeObjectRelease();
    if (v4)
    {
      char v2 = byte_1F038068A;
      uint64_t v5 = sub_1ACE77078();
      swift_bridgeObjectRelease();
      if (v5)
      {
        char v2 = byte_1F038068B;
        uint64_t v6 = sub_1ACE77078();
        swift_bridgeObjectRelease();
        if (v6)
        {
          char v2 = byte_1F038068C;
          uint64_t v7 = sub_1ACE77078();
          swift_bridgeObjectRelease();
          if (v7) {
            char v2 = 5;
          }
        }
      }
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

unint64_t sub_1ACC0DD70()
{
  unint64_t result = qword_1E99F38C8;
  if (!qword_1E99F38C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F38C8);
  }
  return result;
}

unint64_t sub_1ACC0DDC8()
{
  unint64_t result = qword_1E99F38D0;
  if (!qword_1E99F38D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F38D0);
  }
  return result;
}

uint64_t sub_1ACC0DE1C()
{
  return sub_1ACC0DEC4(&qword_1E99F38D8, &qword_1E99F38E0);
}

unint64_t sub_1ACC0DE48()
{
  unint64_t result = qword_1E99F38E8;
  if (!qword_1E99F38E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F38E8);
  }
  return result;
}

uint64_t sub_1ACC0DE9C()
{
  return sub_1ACC0DEC4(&qword_1E99F38F0, &qword_1E99F38F8);
}

uint64_t sub_1ACC0DEC4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for URLTrackIdentifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for URLTrackIdentifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for URLTrackIdentifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for URLTrackIdentifier()
{
  return &type metadata for URLTrackIdentifier;
}

unint64_t destroy for URLTrackIdentifier.URLTrackIdentifierError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s18PodcastsFoundation18URLTrackIdentifierV23URLTrackIdentifierErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for URLTrackIdentifier.URLTrackIdentifierError(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for URLTrackIdentifier.URLTrackIdentifierError(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for URLTrackIdentifier.URLTrackIdentifierError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for URLTrackIdentifier.URLTrackIdentifierError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for URLTrackIdentifier.URLTrackIdentifierError()
{
  return &type metadata for URLTrackIdentifier.URLTrackIdentifierError;
}

unsigned char *storeEnumTagSinglePayload for URLTrackIdentifier.Command(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC0E2E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for URLTrackIdentifier.Command()
{
  return &type metadata for URLTrackIdentifier.Command;
}

unsigned char *storeEnumTagSinglePayload for URLTrackIdentifier.ArgumentKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC0E3E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for URLTrackIdentifier.ArgumentKey()
{
  return &type metadata for URLTrackIdentifier.ArgumentKey;
}

uint64_t sub_1ACC0E424(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1ACC82D44(0, v1, 0);
    uint64_t v2 = v14;
    unsigned int v4 = (void *)(a1 + 32);
    do
    {
      uint64_t v5 = v4[3];
      uint64_t v6 = v4[4];
      __swift_project_boxed_opaque_existential_1(v4, v5);
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      uint64_t v9 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1ACC82D44(0, *(void *)(v14 + 16) + 1, 1);
      }
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_1ACC82D44(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = v14 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v9;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t CombinedTrace.identifier.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1ACC0E424(v0);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
  sub_1ACA8B0C0();
  uint64_t v1 = sub_1ACE76138();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t CombinedTrace.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CombinedTrace.init(children:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t CombinedTrace.emit(event:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = *v5;
  uint64_t v8 = *(void *)(*v5 + 16);
  if (v8)
  {
    uint64_t v13 = result + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1ACA3E158(v13, (uint64_t)v16);
      uint64_t v14 = v17;
      uint64_t v15 = v18;
      __swift_project_boxed_opaque_existential_1(v16, v17);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(a1, a2, a3, a4, a5, v14, v15);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
      v13 += 40;
      --v8;
    }
    while (v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t CombinedTrace.start(interval:context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v7 = a6;
  uint64_t v8 = *v6;
  int64_t v9 = *(void *)(*v6 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v27 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1ACC83018(0, v9, 0);
    uint64_t v15 = v8 + 32;
    uint64_t v10 = v27;
    do
    {
      sub_1ACA3E158(v15, (uint64_t)v23);
      uint64_t v17 = v24;
      uint64_t v16 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 24))(v26, a1, a2, a3, a4, a5, v17, v16);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1ACC83018(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v27;
      }
      unint64_t v19 = *(void *)(v10 + 16);
      unint64_t v18 = *(void *)(v10 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1ACC83018(v18 > 1, v19 + 1, 1);
        uint64_t v10 = v27;
      }
      *(void *)(v10 + 16) = v19 + 1;
      sub_1ACA3AABC(v26, v10 + 40 * v19 + 32);
      v15 += 40;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    uint64_t v7 = a6;
  }
  uint64_t result = sub_1ACC0E9A4(v10);
  v7[3] = (uint64_t)&type metadata for CombinedTrace.Interval;
  v7[4] = (uint64_t)&off_1F0390070;
  *uint64_t v7 = result;
  return result;
}

uint64_t sub_1ACC0E87C(uint64_t result)
{
  uint64_t v1 = (void *)result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 < 2) {
    return (uint64_t)v1;
  }
  uint64_t v3 = 0;
  unint64_t v4 = 0;
  unint64_t v5 = v2 >> 1;
  unint64_t v6 = v2 - 1;
  uint64_t v7 = 16 * v2 + 16;
  unint64_t v15 = v2 >> 1;
  while (1)
  {
    if (v4 == v6) {
      goto LABEL_4;
    }
    unint64_t v8 = v1[2];
    if (v4 >= v8) {
      break;
    }
    if (v6 >= v8) {
      goto LABEL_13;
    }
    uint64_t v10 = v1[v3 + 4];
    uint64_t v9 = v1[v3 + 5];
    uint64_t v12 = *(void *)((char *)v1 + v7);
    uint64_t v11 = *(void *)((char *)v1 + v7 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v1 = sub_1ACDE6ECC(v1);
    }
    uint64_t v13 = &v1[v3];
    uint64_t result = swift_bridgeObjectRelease();
    v13[4] = v12;
    v13[5] = v11;
    if (v6 >= v1[2]) {
      goto LABEL_14;
    }
    uint64_t v14 = (void *)((char *)v1 + v7);
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v14 = v10;
    v14[1] = v9;
    unint64_t v5 = v15;
LABEL_4:
    ++v4;
    --v6;
    v7 -= 16;
    v3 += 2;
    if (v5 == v4) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1ACC0E9A4(uint64_t result)
{
  uint64_t v1 = (void *)result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 < 2) {
    return (uint64_t)v1;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  unint64_t v5 = v2 - 1;
  uint64_t v6 = 40 * v2 - 8;
  for (uint64_t i = 4; ; i += 5)
  {
    if (v3 == v5) {
      goto LABEL_4;
    }
    unint64_t v8 = v1[2];
    if (v3 >= v8) {
      break;
    }
    uint64_t result = sub_1ACA3E158((uint64_t)&v1[i], (uint64_t)v10);
    if (v5 >= v8) {
      goto LABEL_14;
    }
    sub_1ACA3E158((uint64_t)v1 + v6, (uint64_t)v9);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1ACDE6EF4(v1);
      uint64_t v1 = (void *)result;
    }
    if (v3 >= v1[2]) {
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v1[i]);
    uint64_t result = sub_1ACA3AABC(v9, (uint64_t)&v1[i]);
    if (v5 >= v1[2]) {
      goto LABEL_16;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v1 + v6);
    uint64_t result = sub_1ACA3AABC(v10, (uint64_t)v1 + v6);
LABEL_4:
    ++v3;
    --v5;
    v6 -= 40;
    if (v4 == v3) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1ACC0EAD8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    uint64_t v5 = result;
    uint64_t v6 = (void *)(a3 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v7 = v6[3];
      uint64_t v8 = v6[4];
      __swift_project_boxed_opaque_existential_1(v6, v7);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(v5, a2, v7, v8);
      v6 += 5;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACC0EB9C(uint64_t a1, uint64_t a2)
{
  return sub_1ACC0EAD8(a1, a2, *v2);
}

uint64_t sub_1ACC0EBA4()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1ACC0E424(v0);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
  sub_1ACA8B0C0();
  uint64_t v1 = sub_1ACE76138();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t SignpostAndLogTrace(domain:level:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  int v40 = a2;
  uint64_t v41 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7726E8);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v39 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1ACE753F8();
  uint64_t v38 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE754C8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE75438();
  uint64_t v36 = *(void *)(v12 - 8);
  uint64_t v37 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v35 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17(v11, a1, v8);
  sub_1ACE75418();
  sub_1ACE75428();
  uint64_t v34 = v7;
  sub_1ACE753C8();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB772818);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1ACE84820;
  v17(v11, a1, v8);
  uint64_t v43 = 0;
  unint64_t v44 = 0xE000000000000000;
  sub_1ACE77458();
  uint64_t v20 = v43;
  unint64_t v19 = v44;
  uint64_t v21 = type metadata accessor for LoggerTrace(0);
  *(void *)(v18 + 56) = v21;
  *(void *)(v18 + 64) = &protocol witness table for LoggerTrace;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v18 + 32));
  uint64_t *boxed_opaque_existential_1 = v20;
  boxed_opaque_existential_1[1] = v19;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))((char *)boxed_opaque_existential_1 + *(int *)(v21 + 20), v11, v8);
  *((unsigned char *)boxed_opaque_existential_1 + *(int *)(v21 + 24)) = v40;
  unint64_t v23 = v35;
  uint64_t v24 = v36;
  uint64_t v25 = v37;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v35, v16, v37);
  uint64_t v27 = v38;
  uint64_t v26 = (uint64_t)v39;
  uint64_t v28 = v34;
  uint64_t v29 = v42;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v39, v34, v42);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v26, 0, 1, v29);
  *(void *)(v18 + 96) = type metadata accessor for SignpostTrace(0);
  *(void *)(v18 + 104) = &protocol witness table for SignpostTrace;
  uint64_t v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v18 + 72));
  SignpostTrace.init(domain:identifier:)(v23, v26, (uint64_t)v30);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v16, v25);
  uint64_t v32 = v41;
  _OWORD v41[3] = (uint64_t)&type metadata for CombinedTrace;
  v32[4] = (uint64_t)&protocol witness table for CombinedTrace;
  uint64_t *v32 = v18;
  return result;
}

ValueMetadata *type metadata accessor for CombinedTrace()
{
  return &type metadata for CombinedTrace;
}

ValueMetadata *type metadata accessor for CombinedTrace.Interval()
{
  return &type metadata for CombinedTrace.Interval;
}

BOOL Collection.isNotEmpty.getter()
{
  return (sub_1ACE76A98() & 1) == 0;
}

uint64_t sub_1ACC0F0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACBBE50C(a1, (uint64_t)v9);
  uint64_t v10 = sub_1ACE767F8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1ACBBE574((uint64_t)v9);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_1ACE766D8();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1ACE767E8();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = *v4;
  uint64_t v16 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    uint64_t v16 = v19;
    void v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  v18[2] = v16;
  void v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t Collection<>.concurrentMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  void v6[4] = a2;
  return MEMORY[0x1F4188298](sub_1ACC0F29C, 0, 0);
}

uint64_t sub_1ACC0F29C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 40);
  long long v9 = *(_OWORD *)(v0 + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  long long v5 = *(_OWORD *)(v0 + 24);
  *(void *)(v4 + 16) = v2;
  *(_OWORD *)(v4 + 24) = v9;
  *(void *)(v4 + 40) = v1;
  *(_OWORD *)(v4 + 48) = v5;
  uint64_t v6 = sub_1ACE76688();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1ACC0F3F0;
  return MEMORY[0x1F4188080](v0 + 16, TupleTypeMetadata2, v6, 0, 0, &unk_1E99F3910, v4, TupleTypeMetadata2);
}

uint64_t sub_1ACC0F3F0()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1ACB06B54;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1ACC0F50C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACC0F50C()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1ACC0F528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a3;
  v8[8] = a4;
  v8[5] = a1;
  v8[6] = a2;
  v8[13] = *(void *)(a8 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[14] = AssociatedTypeWitness;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  v8[15] = v10;
  v8[16] = *(void *)(v10 + 64);
  v8[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  v8[18] = swift_task_alloc();
  v8[19] = swift_getTupleTypeMetadata2();
  sub_1ACE76FD8();
  v8[20] = swift_task_alloc();
  v8[21] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  uint64_t v11 = sub_1ACE768D8();
  v8[22] = v11;
  v8[23] = *(void *)(v11 - 8);
  v8[24] = swift_task_alloc();
  v8[25] = swift_getTupleTypeMetadata2();
  uint64_t v12 = sub_1ACE76FD8();
  v8[26] = v12;
  v8[27] = *(void *)(v12 - 8);
  v8[28] = swift_task_alloc();
  v8[29] = swift_task_alloc();
  v8[30] = sub_1ACE774F8();
  v8[31] = swift_task_alloc();
  uint64_t v13 = sub_1ACE774E8();
  v8[32] = v13;
  v8[33] = *(void *)(v13 - 8);
  v8[34] = swift_task_alloc();
  uint64_t v14 = sub_1ACE76FD8();
  v8[35] = v14;
  v8[36] = *(void *)(v14 - 8);
  v8[37] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACC0F8C8, 0, 0);
}

uint64_t sub_1ACC0F8C8()
{
  uint64_t v1 = v0[36];
  uint64_t v2 = v0[37];
  uint64_t v3 = v0[35];
  uint64_t v38 = v0[27];
  uint64_t v4 = v0[25];
  uint64_t v5 = v0[15];
  uint64_t v36 = v0[13];
  uint64_t v6 = v0[10];
  uint64_t v7 = *(void *)(v0[11] - 8);
  v0[38] = v7;
  uint64_t v9 = v7 + 56;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 56);
  v0[39] = v8;
  v0[40] = v9 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v8(v2, 1, 1);
  uint64_t v10 = sub_1ACE76A88();
  uint64_t v11 = sub_1ACC04750(v2, v10, v3);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  v0[2] = v11;
  MEMORY[0x1AD1185A0](v6, v36);
  sub_1ACE774C8();
  uint64_t v30 = v5;
  uint64_t v31 = v4;
  uint64_t v32 = v4 - 8;
  while (1)
  {
    uint64_t v13 = v0[28];
    uint64_t v12 = v0[29];
    uint64_t v15 = v0[25];
    uint64_t v14 = v0[26];
    sub_1ACE774D8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v12, v13, v14);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)v32 + 48))(v12, 1, v15) == 1) {
      break;
    }
    uint64_t v16 = (uint64_t *)v0[29];
    uint64_t v17 = v0[18];
    uint64_t v18 = (char *)v0[17];
    uint64_t v19 = v0[14];
    uint64_t v35 = v0[12];
    uint64_t v20 = v0[9];
    uint64_t v37 = v0[8];
    uint64_t v21 = (char *)v16 + *(int *)(v31 + 48);
    uint64_t v34 = *v16;
    uint64_t v22 = sub_1ACE767F8();
    long long v33 = *((_OWORD *)v0 + 5);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v17, 1, 1, v22);
    unint64_t v23 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v23(v18, v21, v19);
    unint64_t v24 = (*(unsigned __int8 *)(v30 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = 0;
    *(void *)(v25 + 24) = 0;
    *(_OWORD *)(v25 + 32) = v33;
    *(void *)(v25 + 48) = v35;
    *(void *)(v25 + 56) = v34;
    *(void *)(v25 + 64) = v37;
    *(void *)(v25 + 72) = v20;
    v23((char *)(v25 + v24), v18, v19);
    sub_1ACE768E8();
    swift_retain();
    sub_1ACC0F0A0(v17, (uint64_t)&unk_1E99F3938, v25);
    sub_1ACBBE574(v17);
  }
  (*(void (**)(void, void))(v0[33] + 8))(v0[34], v0[32]);
  sub_1ACE76898();
  uint64_t v26 = (void *)swift_task_alloc();
  v0[41] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_1ACC0FCC8;
  uint64_t v27 = v0[22];
  uint64_t v28 = v0[20];
  return MEMORY[0x1F4187E48](v28, 0, 0, v27, v0 + 3);
}

uint64_t sub_1ACC0FCC8()
{
  *(void *)(*(void *)v1 + 336) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1ACC10134;
  }
  else
  {
    uint64_t v2 = sub_1ACC0FDE4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACC0FDE4()
{
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v1 = *(unint64_t **)(v0 + 160);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 80);
    uint64_t v4 = *(uint64_t **)(v0 + 40);
    long long v20 = *(_OWORD *)(v0 + 88);
    (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 176));
    *(void *)(v0 + 32) = *(void *)(v0 + 16);
    uint64_t v5 = swift_task_alloc();
    *(void *)(v5 + 16) = v3;
    *(_OWORD *)(v5 + 24) = v20;
    sub_1ACE76688();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t v6 = sub_1ACE763D8();
    swift_task_dealloc();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *uint64_t v4 = v6;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  else
  {
    uint64_t v9 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 312);
    uint64_t v10 = *(void *)(v0 + 296);
    uint64_t v11 = *(void *)(v0 + 280);
    uint64_t v12 = *(void *)(v0 + 288);
    uint64_t v13 = *(void *)(v0 + 88);
    unint64_t v14 = *v1;
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v0 + 304) + 32))(v10, (char *)v1 + *(int *)(v2 + 48), v13);
    v9(v10, 0, 1, v13);
    uint64_t v15 = sub_1ACE76688();
    sub_1ACE765E8();
    uint64_t v16 = *(void *)(v0 + 16);
    sub_1ACC046FC(v14, v16);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 40))(v16+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v14, v10, v11);
    nullsub_1(v15);
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 328) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1ACC0FCC8;
    uint64_t v18 = *(void *)(v0 + 176);
    uint64_t v19 = *(void *)(v0 + 160);
    return MEMORY[0x1F4187E48](v19, 0, 0, v18, v0 + 24);
  }
}

uint64_t sub_1ACC10134()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1ACC10234(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_1ACA51034;
  return sub_1ACC0F528(a1, a2, v9, v11, v10, v6, v7, v8);
}

uint64_t sub_1ACC10310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a7;
  v7[7] = v9;
  v7[4] = a5;
  v7[5] = a6;
  void v7[2] = a1;
  v7[3] = a4;
  return MEMORY[0x1F4188298](sub_1ACC10340, 0, 0);
}

uint64_t sub_1ACC10340()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = (int *)v0[4];
  uint64_t v3 = (void *)v0[2];
  uint64_t v4 = (char *)v3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *uint64_t v3 = v2;
  uint64_t v8 = (uint64_t (*)(char *, uint64_t))((char *)v1 + *v1);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[8] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1ACC10450;
  uint64_t v6 = v0[6];
  return v8(v4, v6);
}

uint64_t sub_1ACC10450()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t Collection<>.concurrentMap(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  void v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1ACC1056C, 0, 0);
}

uint64_t sub_1ACC1056C()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (void *)swift_allocObject();
  v0[7] = v5;
  void v5[2] = v1;
  v5[3] = v2;
  v5[4] = v4;
  v5[5] = v3;
  swift_retain();
  uint64_t v6 = swift_task_alloc();
  v0[8] = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)uint64_t v6 = v0;
  *(void *)(v6 + 8) = sub_1ACC106A0;
  uint64_t v8 = v0[4];
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(v0 + 5);
  *(void *)(v6 + 40) = v8;
  *(void *)(v6 + 48) = AssociatedTypeWitness;
  *(void *)(v6 + 24) = &unk_1E99F3928;
  *(void *)(v6 + 32) = v5;
  return MEMORY[0x1F4188298](sub_1ACC0F29C, 0, 0);
}

uint64_t sub_1ACC106A0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1ACC107F8, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_1ACC107F8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1ACC1085C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  void v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x1F4188298](sub_1ACC10884, 0, 0);
}

uint64_t sub_1ACC10884()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = (int *)v0[4];
  uint64_t v3 = v0[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v0[8] = AssociatedTypeWitness;
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  v0[9] = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v1, AssociatedTypeWitness);
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[10] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1ACC109D8;
  uint64_t v7 = v0[2];
  return v9(v7);
}

uint64_t sub_1ACC109D8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1ACC10B0C, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1ACC10B0C()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[2], v0[8]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1ACC10B80()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC10BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v2 + 16);
  long long v7 = *(_OWORD *)(v2 + 32);
  *(void *)(v3 + 16) = v6;
  *(void *)uint64_t v6 = v3;
  *(void *)(v6 + 8) = sub_1ACA50B84;
  *(_OWORD *)(v6 + 32) = v7;
  *(_OWORD *)(v6 + 48) = v8;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1ACC10884, 0, 0);
}

uint64_t sub_1ACC10C78()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1ACC10D68(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v8 = swift_task_alloc();
  long long v9 = *(_OWORD *)(v1 + 64);
  *(void *)(v2 + 16) = v8;
  *(void *)uint64_t v8 = v2;
  *(void *)(v8 + 8) = sub_1ACA51034;
  *(void *)(v8 + 48) = v7;
  *(void *)(v8 + 56) = v4;
  *(_OWORD *)(v8 + 32) = v9;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = v6;
  return MEMORY[0x1F4188298](sub_1ACC10340, 0, 0);
}

uint64_t static Platform.preferred<A>(iOS:mac:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1);
}

ValueMetadata *type metadata accessor for Platform()
{
  return &type metadata for Platform;
}

BOOL static ThinClientStateDomain.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ThinClientStateDomain.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t ThinClientStateDomain.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t ThinClientGlobalStateRepository.__allocating_init(thinClientEpisodeStateRepository:thinClientPodcastStateRepository:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t ThinClientGlobalStateRepository.init(thinClientEpisodeStateRepository:thinClientPodcastStateRepository:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t ThinClientGlobalStateRepository.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t ThinClientGlobalStateRepository.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t ThinClientGlobalStateRepository.publisher(for:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  v15[1] = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3940);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3948);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *a1;
  uint64_t v13 = *(void *)(*(void *)(v2 + 16) + 32);
  _OWORD v15[2] = *(void *)(*(void *)(v2 + 24) + 32);
  v15[3] = v13;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(qword_1E99F27C0);
  sub_1ACA51EA4(&qword_1E99F2848, qword_1E99F27C0);
  sub_1ACE756A8();
  *(unsigned char *)(swift_allocObject() + 16) = v12;
  sub_1ACA51EA4(&qword_1E99F3950, &qword_1E99F3940);
  sub_1ACE75C08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  __swift_instantiateConcreteTypeFromMangledName(qword_1E99F1000);
  sub_1ACA51EA4(&qword_1E99F3958, &qword_1E99F3948);
  sub_1ACE75B58();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1ACC112D4()
{
  return swift_deallocObject();
}

BOOL sub_1ACC112E4(unsigned __int8 *a1)
{
  return *a1 == *(unsigned __int8 *)(v1 + 16);
}

uint64_t sub_1ACC112F8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 8);
  return swift_bridgeObjectRetain();
}

unint64_t sub_1ACC11308()
{
  unint64_t result = qword_1E99F3960;
  if (!qword_1E99F3960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3960);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ThinClientStateDomain(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC11428);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ThinClientStateDomain()
{
  return &type metadata for ThinClientStateDomain;
}

uint64_t type metadata accessor for ThinClientGlobalStateRepository()
{
  return self;
}

uint64_t method lookup function for ThinClientGlobalStateRepository(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ThinClientGlobalStateRepository);
}

uint64_t dispatch thunk of ThinClientGlobalStateRepository.__allocating_init(thinClientEpisodeStateRepository:thinClientPodcastStateRepository:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1ACC114B0()
{
  return sub_1ACA51EA4(&qword_1E99F3968, &qword_1E99F3970);
}

uint64_t sub_1ACC1152C()
{
  return 0x7374736163646F50;
}

uint64_t BugReport.Domain.rawValue.getter()
{
  return 0x7374736163646F50;
}

void BugReport.system.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR___PFBugReport_system);
}

unint64_t sub_1ACC115D4()
{
  return PodcastsSystem.rawValue.getter();
}

void BugReport.errorKind.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR___PFBugReport_errorKind);
}

unint64_t sub_1ACC11670()
{
  unint64_t result = 0xD000000000000012;
  switch(*(unsigned char *)(v0 + OBJC_IVAR___PFBugReport_errorKind))
  {
    case 2:
    case 3:
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
      unint64_t result = 0xD000000000000029;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t BugReport.ErrorKind.rawValue.getter()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 2:
    case 3:
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
      unint64_t result = 0xD000000000000029;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t BugReport.forceSubmissionAttempt.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___PFBugReport_forceSubmissionAttempt);
}

id BugReport.__allocating_init(domain:system:errorKind:forceSubmissionAttempt:)(uint64_t a1, unsigned char *a2, char *a3, char a4)
{
  uint64_t v8 = objc_allocWithZone(v4);
  char v9 = *a3;
  v8[OBJC_IVAR___PFBugReport_system] = *a2;
  v8[OBJC_IVAR___PFBugReport_errorKind] = v9;
  v8[OBJC_IVAR___PFBugReport_forceSubmissionAttempt] = a4;
  v11.receiver = v8;
  v11.super_class = v4;
  return objc_msgSendSuper2(&v11, sel_init);
}

id BugReport.init(domain:system:errorKind:forceSubmissionAttempt:)(uint64_t a1, unsigned char *a2, char *a3, char a4)
{
  char v5 = *a3;
  v4[OBJC_IVAR___PFBugReport_system] = *a2;
  v4[OBJC_IVAR___PFBugReport_errorKind] = v5;
  v4[OBJC_IVAR___PFBugReport_forceSubmissionAttempt] = a4;
  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for BugReport();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for BugReport()
{
  return self;
}

uint64_t sub_1ACC11A04()
{
  return 0x7374736163646F50;
}

id BugReport.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void BugReport.init()()
{
}

id BugReport.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BugReport();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t BugReport.Domain.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1ACC11CC8()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC11D1C()
{
  return sub_1ACE76108();
}

uint64_t sub_1ACC11D34()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC11D84@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1ACC11DD8(void *a1@<X8>)
{
  *a1 = 0x7374736163646F50;
  a1[1] = 0xE800000000000000;
}

PodcastsFoundation::BugReport::ErrorKind_optional __swiftcall BugReport.ErrorKind.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1ACE775B8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 10;
  if (v3 < 0xA) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t sub_1ACC11E54()
{
  unint64_t result = qword_1E99F3990;
  if (!qword_1E99F3990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3990);
  }
  return result;
}

uint64_t sub_1ACC11EA8(unsigned __int8 *a1, char *a2)
{
  return sub_1ACCF3FD4(*a1, *a2);
}

unint64_t sub_1ACC11EB8()
{
  unint64_t result = qword_1E99F3998;
  if (!qword_1E99F3998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3998);
  }
  return result;
}

uint64_t sub_1ACC11F0C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC11F54()
{
  return sub_1ACBD4DA0();
}

uint64_t sub_1ACC11F5C()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::BugReport::ErrorKind_optional sub_1ACC11FA0(Swift::String *a1)
{
  return BugReport.ErrorKind.init(rawValue:)(*a1);
}

unint64_t sub_1ACC11FAC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = BugReport.ErrorKind.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t method lookup function for BugReport(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BugReport);
}

uint64_t dispatch thunk of BugReport.domainString.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of BugReport.systemString.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of BugReport.errorKindString.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of BugReport.__allocating_init(domain:system:errorKind:forceSubmissionAttempt:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of BugReport.signature.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

unsigned char *storeEnumTagSinglePayload for BugReport.Domain(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACC1216CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BugReport.Domain()
{
  return &type metadata for BugReport.Domain;
}

unsigned char *storeEnumTagSinglePayload for BugReport.ErrorKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC12270);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BugReport.ErrorKind()
{
  return &type metadata for BugReport.ErrorKind;
}

uint64_t sub_1ACC122A8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1ACC82FB8(0, v1, 0);
    uint64_t v2 = v11;
    unsigned int v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v7 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v8 >> 1) {
        sub_1ACC82FB8(v8 > 1, v7 + 1, 1);
      }
      v4 += 2;
      *(void *)(v11 + 16) = v7 + 1;
      uint64_t v9 = v11 + 24 * v7;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      *(unsigned char *)(v9 + 48) = 2;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t static PendingDownloadRemovals.version.getter()
{
  return 0;
}

uint64_t PendingDownloadRemovals.pendingDeletions.getter()
{
  int64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR___PFPendingDownloadRemovals_episodesPendingDeletion);
  uint64_t v2 = v1 + 4;
  int v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACA6BBEC(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t PendingDownloadRemovals.episodesPendingDeletion.getter()
{
  return swift_retain();
}

id PendingDownloadRemovals.__allocating_init(episodesPendingDeletion:)(uint64_t a1)
{
  int v3 = (char *)objc_allocWithZone(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771930);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = a1;
  *(void *)&v3[OBJC_IVAR___PFPendingDownloadRemovals_episodesPendingDeletion] = v4;
  v6.receiver = v3;
  v6.super_class = v1;
  return objc_msgSendSuper2(&v6, sel_init);
}

id PendingDownloadRemovals.init(episodesPendingDeletion:)(uint64_t a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771930);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = a1;
  *(void *)&v1[OBJC_IVAR___PFPendingDownloadRemovals_episodesPendingDeletion] = v4;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_init);
}

id PendingDownloadRemovals.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return PendingDownloadRemovals.init(from:)(a1);
}

id PendingDownloadRemovals.init(from:)(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = sub_1ACE761B8();
  unint64_t v6 = v5;
  id v7 = v1;
  unint64_t v8 = @"MTEpisodesPendingDeletionDefaultKey";
  uint64_t v9 = (char *)sub_1ACC1280C(v4, v6);
  swift_bridgeObjectRelease();
  if (!v9)
  {
    id v17 = objc_msgSend(a1, sel_objectForKey_, v8);

    if (v17)
    {
      sub_1ACE770C8();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v30, 0, sizeof(v30));
    }
    sub_1ACA9D6FC((uint64_t)v30, (uint64_t)v31);
    if (v31[3])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
      if (swift_dynamicCast())
      {

        uint64_t v18 = sub_1ACC122A8(v28);
        swift_bridgeObjectRelease();
        uint64_t v19 = sub_1ACDF74D0(v18);
        swift_bridgeObjectRelease();
        long long v20 = (char *)objc_allocWithZone(ObjectType);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771930);
        uint64_t v21 = swift_allocObject();
        *(_DWORD *)(v21 + 24) = 0;
        *(void *)(v21 + 16) = v19;
        *(void *)&v20[OBJC_IVAR___PFPendingDownloadRemovals_episodesPendingDeletion] = v21;
        v27.receiver = v20;
        v27.super_class = ObjectType;
        id v22 = objc_msgSendSuper2(&v27, sel_init);
LABEL_11:
        id v16 = v22;
        goto LABEL_12;
      }
    }
    else
    {
      sub_1ACA65828((uint64_t)v31);
    }

    unint64_t v23 = (char *)objc_allocWithZone(ObjectType);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771930);
    uint64_t v24 = swift_allocObject();
    *(_DWORD *)(v24 + 24) = 0;
    *(void *)(v24 + 16) = MEMORY[0x1E4FBC870];
    *(void *)&v23[OBJC_IVAR___PFPendingDownloadRemovals_episodesPendingDeletion] = v24;
    v29.receiver = v23;
    v29.super_class = ObjectType;
    id v22 = objc_msgSendSuper2(&v29, sel_init);
    goto LABEL_11;
  }

  uint64_t v10 = *(os_unfair_lock_s **)&v9[OBJC_IVAR___PFPendingDownloadRemovals_episodesPendingDeletion];
  uint64_t v11 = v10 + 4;
  char v12 = v10 + 6;
  os_unfair_lock_lock(v10 + 6);
  sub_1ACA6BBEC(v11, v31);
  os_unfair_lock_unlock(v12);
  uint64_t v13 = v31[0];
  uint64_t v14 = (char *)objc_allocWithZone(ObjectType);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771930);
  uint64_t v15 = swift_allocObject();
  *(_DWORD *)(v15 + 24) = 0;
  *(void *)(v15 + 16) = v13;
  *(void *)&v14[OBJC_IVAR___PFPendingDownloadRemovals_episodesPendingDeletion] = v15;
  v26.receiver = v14;
  v26.super_class = ObjectType;
  id v16 = objc_msgSendSuper2(&v26, sel_init);

LABEL_12:
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v16;
}

uint64_t sub_1ACC1280C(uint64_t a1, unint64_t a2)
{
  type metadata accessor for PendingDownloadRemovals();
  unint64_t v5 = (void *)sub_1ACE76178();
  id v6 = objc_msgSend(v2, sel_dataForKey_, v5);

  if (v6)
  {
    uint64_t v7 = sub_1ACE74F88();
    unint64_t v9 = v8;

    sub_1ACE74CB8();
    swift_allocObject();
    sub_1ACE74CA8();
    sub_1ACC14994(&qword_1EB771350);
    sub_1ACE74C98();
    swift_release();
    sub_1ACA50850(v7, v9);
    return v16;
  }
  else
  {
    if (qword_1EB768C20 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1ACE754C8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB768C00);
    swift_bridgeObjectRetain_n();
    uint64_t v11 = sub_1ACE75498();
    os_log_type_t v12 = sub_1ACE76BD8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v16 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      swift_bridgeObjectRetain();
      sub_1ACA3189C(a1, a2, &v16);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AC9D5000, v11, v12, "No user defaults value for key '%s'", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v14, -1, -1);
      MEMORY[0x1AD11B340](v13, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
}

void sub_1ACC12CC8(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = (void *)sub_1ACE76178();
  id v8 = objc_msgSend(v3, sel_dataForKey_, v7);

  if (v8)
  {
    uint64_t v9 = sub_1ACE74F88();
    unint64_t v11 = v10;

    sub_1ACE74CB8();
    swift_allocObject();
    sub_1ACE74CA8();
    sub_1ACC14940();
    sub_1ACE74C98();
    swift_release();
    sub_1ACA50850(v9, v11);
  }
  else
  {
    if (qword_1EB768C20 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1ACE754C8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EB768C00);
    swift_bridgeObjectRetain_n();
    uint64_t v13 = sub_1ACE75498();
    os_log_type_t v14 = sub_1ACE76BD8();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      swift_bridgeObjectRetain();
      sub_1ACA3189C(a1, a2, &v17);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AC9D5000, v13, v14, "No user defaults value for key '%s'", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v16, -1, -1);
      MEMORY[0x1AD11B340](v15, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    *a3 = 0;
  }
}

id PendingDownloadRemovals.append(newDeletions:)()
{
  int64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR___PFPendingDownloadRemovals_episodesPendingDeletion);
  uint64_t v2 = (uint64_t)&v1[4];
  id v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACC143B8(v2);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_1ACC13230(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1ACDF74D0(a2);
  swift_bridgeObjectRelease();
  sub_1ACDEA2C4(v3);
}

Swift::Void __swiftcall PendingDownloadRemovals.append(episodes:)(Swift::OpaquePointer episodes)
{
  sub_1ACC122A8((uint64_t)episodes._rawValue);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR___PFPendingDownloadRemovals_episodesPendingDeletion);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_1ACC149D4(v3);
  os_unfair_lock_unlock(v4);
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall PendingDownloadRemovals.write(to:)(NSUserDefaults to)
{
  uint64_t v2 = sub_1ACE761B8();
  sub_1ACC1342C(v1, v2, v3);
  swift_bridgeObjectRelease();
}

uint64_t sub_1ACC1342C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  void v19[2] = a1;
  sub_1ACE74CF8();
  swift_allocObject();
  sub_1ACE74CE8();
  sub_1ACE74CC8();
  type metadata accessor for PendingDownloadRemovals();
  sub_1ACC14994(&qword_1E99F39C0);
  uint64_t v7 = sub_1ACE74CD8();
  unint64_t v9 = v8;
  unint64_t v10 = (void *)sub_1ACE74F68();
  unint64_t v11 = (void *)sub_1ACE76178();
  objc_msgSend(v4, sel_setValue_forKey_, v10, v11);

  if (qword_1EB768C20 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1ACE754C8();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB768C00);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1ACE75498();
  os_log_type_t v14 = sub_1ACE76BD8();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = a2;
    uint64_t v17 = swift_slowAlloc();
    v19[0] = v17;
    *(_DWORD *)uint64_t v15 = 136315138;
    swift_bridgeObjectRetain();
    sub_1ACA3189C(v16, a3, v19);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v13, v14, "Stored value for key '%s'", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v17, -1, -1);
    MEMORY[0x1AD11B340](v15, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  sub_1ACA50850(v7, v9);

  return swift_release();
}

uint64_t sub_1ACC138C8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  void v19[2] = a1;
  sub_1ACE74CF8();
  swift_allocObject();
  sub_1ACE74CE8();
  sub_1ACE74CC8();
  sub_1ACC148EC();
  uint64_t v7 = sub_1ACE74CD8();
  unint64_t v9 = v8;
  unint64_t v10 = (void *)sub_1ACE74F68();
  unint64_t v11 = (void *)sub_1ACE76178();
  objc_msgSend(v4, sel_setValue_forKey_, v10, v11);

  if (qword_1EB768C20 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1ACE754C8();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB768C00);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1ACE75498();
  os_log_type_t v14 = sub_1ACE76BD8();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = a2;
    uint64_t v17 = swift_slowAlloc();
    v19[0] = v17;
    *(_DWORD *)uint64_t v15 = 136315138;
    swift_bridgeObjectRetain();
    sub_1ACA3189C(v16, a3, v19);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v13, v14, "Stored value for key '%s'", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v17, -1, -1);
    MEMORY[0x1AD11B340](v15, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  sub_1ACA50850(v7, v9);

  return swift_release();
}

id PendingDownloadRemovals.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void PendingDownloadRemovals.init()()
{
}

unint64_t sub_1ACC13E5C()
{
  return 0xD000000000000017;
}

uint64_t sub_1ACC13E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACC14864(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1ACC13EA4(uint64_t a1)
{
  unint64_t v2 = sub_1ACC143D4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC13EE0(uint64_t a1)
{
  unint64_t v2 = sub_1ACC143D4();
  return MEMORY[0x1F41862B0](a1, v2);
}

id PendingDownloadRemovals.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t PendingDownloadRemovals.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771AB8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC143D4();
  sub_1ACE77C78();
  v9[1] = *(void *)(v2 + OBJC_IVAR___PFPendingDownloadRemovals_episodesPendingDeletion);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771538);
  sub_1ACC14540(&qword_1EB771528);
  sub_1ACE77788();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void *PendingDownloadRemovals.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return PendingDownloadRemovals.init(from:)(a1);
}

void *PendingDownloadRemovals.init(from:)(void *a1)
{
  id v3 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7719B8);
  uint64_t v5 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC143D4();
  unint64_t v9 = v3;
  sub_1ACE77C48();
  if (v2)
  {

    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771538);
    sub_1ACC14540(&qword_1EB771530);
    uint64_t v11 = v13;
    sub_1ACE77698();
    *(void *)&v9[OBJC_IVAR___PFPendingDownloadRemovals_episodesPendingDeletion] = v16;

    v15.receiver = v9;
    v15.super_class = ObjectType;
    unint64_t v8 = objc_msgSendSuper2(&v15, sel_init);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v11);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v8;
}

void *sub_1ACC14344@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  uint64_t result = PendingDownloadRemovals.init(from:)(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1ACC14394(void *a1)
{
  return PendingDownloadRemovals.encode(to:)(a1);
}

void sub_1ACC143B8(uint64_t a1)
{
  sub_1ACC13230(a1, *(void *)(v1 + 16));
}

unint64_t sub_1ACC143D4()
{
  unint64_t result = qword_1EB771338;
  if (!qword_1EB771338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771338);
  }
  return result;
}

unint64_t sub_1ACC14428()
{
  unint64_t result = qword_1EB771500;
  if (!qword_1EB771500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771500);
  }
  return result;
}

uint64_t sub_1ACC1447C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7718E0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACC144EC()
{
  unint64_t result = qword_1EB7714F8;
  if (!qword_1EB7714F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7714F8);
  }
  return result;
}

uint64_t sub_1ACC14540(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB771538);
    sub_1ACC1447C(&qword_1EB7718F0, (void (*)(void))sub_1ACC14428);
    sub_1ACC1447C(&qword_1EB7718E8, (void (*)(void))sub_1ACC144EC);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for PendingDownloadRemovals()
{
  return self;
}

uint64_t method lookup function for PendingDownloadRemovals(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PendingDownloadRemovals);
}

uint64_t dispatch thunk of PendingDownloadRemovals.__allocating_init(episodesPendingDeletion:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PendingDownloadRemovals.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unsigned char *storeEnumTagSinglePayload for PendingDownloadRemovals.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACC14724);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PendingDownloadRemovals.CodingKeys()
{
  return &type metadata for PendingDownloadRemovals.CodingKeys;
}

unint64_t sub_1ACC14760()
{
  unint64_t result = qword_1E99F39A8;
  if (!qword_1E99F39A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F39A8);
  }
  return result;
}

unint64_t sub_1ACC147B8()
{
  unint64_t result = qword_1EB771348;
  if (!qword_1EB771348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771348);
  }
  return result;
}

unint64_t sub_1ACC14810()
{
  unint64_t result = qword_1EB771340;
  if (!qword_1EB771340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771340);
  }
  return result;
}

uint64_t sub_1ACC14864(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x80000001ACECCE60)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1ACC148EC()
{
  unint64_t result = qword_1E99F39B0;
  if (!qword_1E99F39B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F39B0);
  }
  return result;
}

unint64_t sub_1ACC14940()
{
  unint64_t result = qword_1E99F39B8;
  if (!qword_1E99F39B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F39B8);
  }
  return result;
}

uint64_t sub_1ACC14994(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for PendingDownloadRemovals();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1ACC149D4(uint64_t a1)
{
}

uint64_t NanoPodcastsArtworkToken.key.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___NMTPodcastsArtworkToken_key);
  swift_bridgeObjectRetain();
  return v1;
}

CGColorRef sub_1ACC14ACC()
{
  uint64_t v1 = OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor;
  char v2 = *(CGColor **)(v0 + OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor);
  CGColorRef GenericRGB = v2;
  if (v2 == (CGColor *)1)
  {
    CGColorRef GenericRGB = *(CGColorRef *)(v0 + OBJC_IVAR___NMTPodcastsArtworkToken_backgroundColorString + 8);
    if (GenericRGB)
    {
      uint64_t v4 = *(void *)(v0 + OBJC_IVAR___NMTPodcastsArtworkToken_backgroundColorString);
      swift_bridgeObjectRetain();
      unsigned int v5 = sub_1ACC0B428(v4, (unint64_t)GenericRGB);
      CGColorRef GenericRGB = CGColorCreateGenericRGB((double)v5 / 255.0, (double)BYTE1(v5) / 255.0, (double)BYTE2(v5) / 255.0, (double)HIBYTE(v5) / 255.0);
    }
    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = GenericRGB;
    uint64_t v7 = GenericRGB;
    sub_1ACC14BC0(v6);
  }
  sub_1ACC14BD0(v2);
  return GenericRGB;
}

void sub_1ACC14BC0(id a1)
{
  if (a1 != (id)1) {
}
  }

id sub_1ACC14BD0(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

void sub_1ACC14C24(uint64_t a1)
{
  char v2 = *(void **)(v1 + OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor);
  *(void *)(v1 + OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor) = a1;
  sub_1ACC14BC0(v2);
}

void (*sub_1ACC14C3C(CGColorRef *a1))(uint64_t a1, char a2)
{
  a1[1] = v1;
  *a1 = sub_1ACC14ACC();
  return sub_1ACC14C84;
}

void sub_1ACC14C84(uint64_t a1, char a2)
{
  char v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void **)(v3 + OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor);
  *(void *)(v3 + OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor) = *(void *)a1;
  if (a2)
  {
    id v5 = v2;
    sub_1ACC14BC0(v4);
  }
  else
  {
    sub_1ACC14BC0(v4);
  }
}

id NanoPodcastsArtworkToken.__allocating_init(key:backgroundColorString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v9 = (char *)objc_allocWithZone(v4);
  *(void *)&v9[OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor] = 1;
  uint64_t v10 = &v9[OBJC_IVAR___NMTPodcastsArtworkToken_key];
  *(void *)uint64_t v10 = a1;
  *((void *)v10 + 1) = a2;
  uint64_t v11 = &v9[OBJC_IVAR___NMTPodcastsArtworkToken_backgroundColorString];
  *(void *)uint64_t v11 = a3;
  *((void *)v11 + 1) = a4;
  v13.receiver = v9;
  v13.super_class = v4;
  return objc_msgSendSuper2(&v13, sel_init);
}

id NanoPodcastsArtworkToken.init(key:backgroundColorString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&v4[OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor] = 1;
  id v5 = &v4[OBJC_IVAR___NMTPodcastsArtworkToken_key];
  *(void *)id v5 = a1;
  *((void *)v5 + 1) = a2;
  id v6 = &v4[OBJC_IVAR___NMTPodcastsArtworkToken_backgroundColorString];
  *(void *)id v6 = a3;
  *((void *)v6 + 1) = a4;
  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for NanoPodcastsArtworkToken();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t NanoPodcastsArtworkToken.ErrorState.init(rawValue:)()
{
  return 0;
}

unint64_t static NanoPodcastsArtworkToken.ErrorState._nsErrorDomain.getter()
{
  return 0xD000000000000036;
}

uint64_t sub_1ACC14ED0()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC14F34(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1ACC15518();
  return MEMORY[0x1F40E3B98](a1, a2, v4);
}

uint64_t sub_1ACC14F80(uint64_t a1)
{
  unint64_t v2 = sub_1ACC15518();
  return MEMORY[0x1F40E3BA8](a1, v2);
}

uint64_t sub_1ACC14FBC(uint64_t a1)
{
  unint64_t v2 = sub_1ACC15518();
  return MEMORY[0x1F40E3BA0](a1, v2);
}

unint64_t sub_1ACC14FF8()
{
  return 0xD000000000000036;
}

uint64_t sub_1ACC15014(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1ACC15518();
  return MEMORY[0x1F40E3B90](a1, a2, v4);
}

id NanoPodcastsArtworkToken.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void NanoPodcastsArtworkToken.init()()
{
}

id NanoPodcastsArtworkToken.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NanoPodcastsArtworkToken();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NanoPodcastsArtworkToken()
{
  return self;
}

unint64_t sub_1ACC151BC()
{
  unint64_t result = qword_1E99F39E0;
  if (!qword_1E99F39E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F39E0);
  }
  return result;
}

unint64_t sub_1ACC15214()
{
  unint64_t result = qword_1E99F39E8;
  if (!qword_1E99F39E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F39E8);
  }
  return result;
}

unint64_t sub_1ACC1526C()
{
  unint64_t result = qword_1E99F39F0;
  if (!qword_1E99F39F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F39F0);
  }
  return result;
}

unint64_t sub_1ACC152C4()
{
  unint64_t result = qword_1E99F39F8;
  if (!qword_1E99F39F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F39F8);
  }
  return result;
}

unint64_t sub_1ACC1531C()
{
  unint64_t result = qword_1E99F3A00;
  if (!qword_1E99F3A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3A00);
  }
  return result;
}

unint64_t sub_1ACC15374()
{
  unint64_t result = qword_1E99F3A08;
  if (!qword_1E99F3A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3A08);
  }
  return result;
}

CGColorRef sub_1ACC153C8@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result = sub_1ACC14ACC();
  *a1 = result;
  return result;
}

void sub_1ACC153F4(void **a1, void *a2)
{
  objc_super v2 = *a1;
  uint64_t v3 = *(void **)(*a2 + OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor);
  *(void *)(*a2 + OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor) = *a1;
  id v4 = v2;
  sub_1ACC14BC0(v3);
}

uint64_t method lookup function for NanoPodcastsArtworkToken(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NanoPodcastsArtworkToken);
}

uint64_t dispatch thunk of NanoPodcastsArtworkToken.backgroundColor.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of NanoPodcastsArtworkToken.backgroundColor.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of NanoPodcastsArtworkToken.backgroundColor.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of NanoPodcastsArtworkToken.__allocating_init(key:backgroundColorString:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

ValueMetadata *type metadata accessor for NanoPodcastsArtworkToken.ErrorState()
{
  return &type metadata for NanoPodcastsArtworkToken.ErrorState;
}

unint64_t sub_1ACC15518()
{
  unint64_t result = qword_1E99F3A10;
  if (!qword_1E99F3A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3A10);
  }
  return result;
}

uint64_t NSUserDefaults.observerStream(key:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v42 = a1;
  uint64_t v47 = a3;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770600);
  uint64_t v3 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  id v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770650);
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v46 = v6;
  MEMORY[0x1F4188790](v6);
  objc_super v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770628);
  uint64_t v40 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v40 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  objc_super v15 = (char *)&v40 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v40 - v17;
  MEMORY[0x1F4188790](v16);
  long long v20 = (char *)&v40 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770620);
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
  unint64_t v48 = v20;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBD028], v43);
  uint64_t v23 = v41;
  uint64_t v43 = (uint64_t)v8;
  sub_1ACE76848();
  sub_1ACC15B38((uint64_t)v20, (uint64_t)v18);
  sub_1ACC15B38((uint64_t)v18, (uint64_t)v15);
  unint64_t v24 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = (uint64_t)v15;
  uint64_t v27 = v42;
  sub_1ACC15DB8(v26, v25 + v24);
  uint64_t v28 = (void *)(v25 + ((v10 + v24 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v28 = v27;
  v28[1] = v23;
  objc_super v29 = (objc_class *)type metadata accessor for DefaultsObserver();
  uint64_t v30 = (char *)objc_allocWithZone(v29);
  uint64_t v31 = &v30[OBJC_IVAR____TtC18PodcastsFoundationP33_4984B522253F5D3980999CC4D4B1655C16DefaultsObserver_key];
  *(void *)uint64_t v31 = v27;
  *((void *)v31 + 1) = v23;
  uint64_t v32 = &v30[OBJC_IVAR____TtC18PodcastsFoundationP33_4984B522253F5D3980999CC4D4B1655C16DefaultsObserver_notify];
  *(void *)uint64_t v32 = sub_1ACC15E20;
  *((void *)v32 + 1) = v25;
  v49.receiver = v30;
  v49.super_class = v29;
  swift_bridgeObjectRetain_n();
  id v33 = objc_msgSendSuper2(&v49, sel_init);
  sub_1ACC15B38((uint64_t)v18, (uint64_t)v12);
  uint64_t v40 = v22;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v21) == 1)
  {
    sub_1ACA50E78((uint64_t)v12, &qword_1EB770628);
    uint64_t v34 = v44;
  }
  else
  {
    uint64_t v35 = swift_allocObject();
    uint64_t v34 = v44;
    swift_unknownObjectWeakInit();
    uint64_t v36 = (void *)swift_allocObject();
    v36[2] = v35;
    v36[3] = v33;
    v36[4] = v27;
    v36[5] = v23;
    swift_bridgeObjectRetain();
    id v37 = v33;
    sub_1ACE76808();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v21);
  }
  uint64_t v38 = (void *)sub_1ACE76178();
  objc_msgSend(v34, sel_addObserver_forKeyPath_options_context_, v33, v38, 11, 0);

  sub_1ACA50E78((uint64_t)v18, &qword_1EB770628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v47, v43, v46);
  return sub_1ACA50E78((uint64_t)v20, &qword_1EB770628);
}

uint64_t sub_1ACC15A60(uint64_t a1, uint64_t a2)
{
  sub_1ACA50E78(a2, &qword_1EB770628);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770620);
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, v4);
  id v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  return v5(a2, 0, 1, v4);
}

uint64_t sub_1ACC15B30(uint64_t a1)
{
  return sub_1ACC15A60(a1, *(void *)(v1 + 16));
}

uint64_t sub_1ACC15B38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACC15BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770628);
  MEMORY[0x1F4188790](v6 - 8);
  objc_super v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3A48);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACC15B38(a1, (uint64_t)v8);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770620);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
  {
    sub_1ACA50E78((uint64_t)v8, &qword_1EB770628);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3A50);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
  }
  else
  {
    v17[0] = a2;
    v17[1] = a3;
    swift_bridgeObjectRetain();
    sub_1ACE76818();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3A50);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v11, 0, 1, v15);
  }
  return sub_1ACA50E78((uint64_t)v11, &qword_1E99F3A48);
}

uint64_t sub_1ACC15DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DefaultsObserver()
{
  return self;
}

void sub_1ACC15E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1AD11B470](v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    uint64_t v7 = (void *)sub_1ACE76178();
    objc_msgSend(v6, sel_removeObserver_forKeyPath_, a3, v7);
  }
}

uint64_t NSUserDefaults.observe(keys:performing:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x1F4188298](sub_1ACC15EFC, 0, 0);
}

uint64_t sub_1ACC15EFC()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  id v4 = *(id *)(v0 + 48);
  uint64_t v5 = sub_1ACC16710(v2, v4);
  *(void *)(v0 + 56) = v5;

  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 64) = v6;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v1;
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v7;
  void v7[2] = v5;
  v7[3] = &unk_1E99F3A38;
  v7[4] = v6;
  objc_super v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v8;
  *objc_super v8 = v0;
  v8[1] = sub_1ACC1605C;
  uint64_t v9 = MEMORY[0x1E4FBC848] + 8;
  uint64_t v10 = MEMORY[0x1E4FBC848] + 8;
  uint64_t v11 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188080](v8, v9, v10, 0, 0, &unk_1E99F3A40, v7, v11);
}

uint64_t sub_1ACC1605C()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1ACC161E8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1ACC16178;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACC16178()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v1(1);
}

uint64_t sub_1ACC161E8()
{
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_1ACC16264(void *a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  uint64_t v4 = a1[1];
  v3[5] = *a1;
  v3[6] = v4;
  return MEMORY[0x1F4188298](sub_1ACC1628C, 0, 0);
}

uint64_t sub_1ACC1628C()
{
  uint64_t v15 = v0;
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1ACE754C8();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB768C28);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1ACE75498();
  os_log_type_t v3 = sub_1ACE76BC8();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[6];
  if (v4)
  {
    uint64_t v6 = v0[5];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_1ACA3189C(v6, v5, &v14);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v2, v3, "Updating tip recommendation in response to default key change: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v8, -1, -1);
    MEMORY[0x1AD11B340](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))(v0[3] + *(int *)v0[3]);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[7] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1ACA97C0C;
  uint64_t v11 = v0[5];
  uint64_t v10 = v0[6];
  return v13(v11, v10);
}

uint64_t sub_1ACC166C8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1ACC16704(uint64_t a1)
{
  sub_1ACC15E48(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1ACC16710(uint64_t a1, void *a2)
{
  id v66 = a2;
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770600);
  uint64_t v4 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  char v64 = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770628);
  uint64_t v63 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v63 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v62 = (uint64_t)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v61 = (uint64_t)v53 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v71 = (uint64_t)v53 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v70 = (uint64_t)v53 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770650);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  BOOL v69 = (char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  int64_t v19 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v19)
  {
    unint64_t v60 = (char *)v53 - v18;
    v53[1] = v2;
    uint64_t v74 = MEMORY[0x1E4FBC860];
    sub_1ACC83230(0, v19, 0);
    uint64_t v72 = v74;
    uint64_t v56 = v7 + 7;
    uint64_t v57 = (void (**)(char *, void, uint64_t))(v4 + 104);
    uint64_t v21 = (uint64_t *)(a1 + 40);
    unsigned int v54 = *MEMORY[0x1E4FBD028];
    uint64_t v58 = v15;
    uint64_t v59 = v14;
    unsigned __int8 v55 = (void (**)(char *, char *, uint64_t))(v15 + 32);
    do
    {
      int64_t v68 = v19;
      uint64_t v22 = *(v21 - 1);
      uint64_t v23 = *v21;
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770620);
      uint64_t v67 = *(void *)(v24 - 8);
      uint64_t v25 = v70;
      uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v70, 1, 1, v24);
      MEMORY[0x1F4188790](v26);
      v53[-2] = v25;
      (*v57)(v64, v54, v65);
      swift_bridgeObjectRetain();
      sub_1ACE76848();
      uint64_t v27 = v71;
      sub_1ACC15B38(v25, v71);
      uint64_t v28 = v61;
      sub_1ACC15B38(v27, v61);
      unint64_t v29 = (*(unsigned __int8 *)(v63 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
      unint64_t v30 = (v56 + v29) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v31 = swift_allocObject();
      sub_1ACC15DB8(v28, v31 + v29);
      uint64_t v32 = (void *)(v31 + v30);
      void *v32 = v22;
      v32[1] = v23;
      id v33 = (objc_class *)type metadata accessor for DefaultsObserver();
      uint64_t v34 = (char *)objc_allocWithZone(v33);
      uint64_t v35 = &v34[OBJC_IVAR____TtC18PodcastsFoundationP33_4984B522253F5D3980999CC4D4B1655C16DefaultsObserver_key];
      *(void *)uint64_t v35 = v22;
      *((void *)v35 + 1) = v23;
      uint64_t v36 = &v34[OBJC_IVAR____TtC18PodcastsFoundationP33_4984B522253F5D3980999CC4D4B1655C16DefaultsObserver_notify];
      *(void *)uint64_t v36 = sub_1ACC15E20;
      *((void *)v36 + 1) = v31;
      v73.receiver = v34;
      v73.super_class = v33;
      swift_bridgeObjectRetain_n();
      id v37 = objc_msgSendSuper2(&v73, sel_init);
      uint64_t v38 = v27;
      uint64_t v39 = v67;
      uint64_t v40 = v62;
      sub_1ACC15B38(v38, v62);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v40, 1, v24) == 1)
      {
        sub_1ACA50E78(v40, &qword_1EB770628);
      }
      else
      {
        uint64_t v41 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v42 = (void *)swift_allocObject();
        v42[2] = v41;
        v42[3] = v37;
        v42[4] = v22;
        v42[5] = v23;
        swift_bridgeObjectRetain();
        id v43 = v37;
        sub_1ACE76808();
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v24);
      }
      unint64_t v44 = (void *)sub_1ACE76178();
      objc_msgSend(v66, sel_addObserver_forKeyPath_options_context_, v37, v44, 11, 0);

      sub_1ACA50E78(v71, &qword_1EB770628);
      uint64_t v45 = *v55;
      uint64_t v47 = v59;
      uint64_t v46 = v60;
      (*v55)(v60, v69, v59);
      sub_1ACA50E78(v70, &qword_1EB770628);
      swift_bridgeObjectRelease();
      uint64_t v48 = v72;
      uint64_t v74 = v72;
      unint64_t v50 = *(void *)(v72 + 16);
      unint64_t v49 = *(void *)(v72 + 24);
      uint64_t v51 = v58;
      if (v50 >= v49 >> 1)
      {
        sub_1ACC83230(v49 > 1, v50 + 1, 1);
        uint64_t v46 = v60;
        uint64_t v48 = v74;
      }
      v21 += 2;
      *(void *)(v48 + 16) = v50 + 1;
      unint64_t v52 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
      uint64_t v72 = v48;
      v45((char *)(v48 + v52 + *(void *)(v51 + 72) * v50), v46, v47);
      int64_t v19 = v68 - 1;
    }
    while (v68 != 1);
    return v72;
  }
  return result;
}

uint64_t sub_1ACC16D9C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC16DD4(void *a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1ACA51034;
  *(_OWORD *)(v4 + 24) = v5;
  uint64_t v6 = a1[1];
  *(void *)(v4 + 40) = *a1;
  *(void *)(v4 + 48) = v6;
  return MEMORY[0x1F4188298](sub_1ACC1628C, 0, 0);
}

uint64_t sub_1ACC16E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1ACA50B84;
  return sub_1ACE5866C(a1, a2, v6, v7, v8);
}

unint64_t sub_1ACC16F50()
{
  unint64_t result = qword_1E99F09F8;
  if (!qword_1E99F09F8)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F09F8);
  }
  return result;
}

uint64_t sub_1ACC16FAC()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB770628) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v0 + v2;
  uint64_t v4 = (uint64_t *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  return sub_1ACC15BA0(v3, v5, v6);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1ACC1704C()
{
}

uint64_t sub_1ACC17080(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1ACC82D44(0, v2, 0);
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    unint64_t v5 = 0xD000000000000010;
    uint64_t result = v25;
    unint64_t v6 = (unint64_t)"yItem";
    unint64_t v7 = (unint64_t)"willBeDownloaded";
    unint64_t v8 = (unint64_t)"";
    unint64_t v9 = (unint64_t)"softwareUpdatePurgeable";
    unint64_t v10 = (unint64_t)"highPriorityPurgeable";
    unint64_t v11 = (unint64_t)"mediumPriorityPurgeable";
    do
    {
      int v12 = *v4++;
      unint64_t v13 = 0xEA00000000006465;
      unint64_t v14 = 0x64616F6C6E776F64;
      switch(v12)
      {
        case 1:
          unint64_t v13 = v6 | 0x8000000000000000;
          unint64_t v14 = v5;
          break;
        case 2:
          unint64_t v13 = 0xED00006465766F6DLL;
          unint64_t v14 = 0x655265426C6C6977;
          break;
        case 3:
          unint64_t v13 = v7 | 0x8000000000000000;
          goto LABEL_15;
        case 4:
          unint64_t v13 = 0xEE00646564616F6CLL;
          unint64_t v14 = 0x6E776F4472657375;
          break;
        case 5:
          unint64_t v13 = 0xEE00797261726269;
          unint64_t v14 = 0x4C616964654D6E69;
          break;
        case 6:
          unint64_t v13 = 0xED00006E656B6F54;
          unint64_t v14 = 0x4D524464696C6176;
          break;
        case 7:
          unint64_t v13 = 0xEF6E656B6F544D52;
          unint64_t v14 = 0x4464657269707865;
          break;
        case 8:
          unint64_t v14 = 0xD000000000000017;
          unint64_t v13 = v8 | 0x8000000000000000;
          break;
        case 9:
          unint64_t v14 = 0xD000000000000015;
          unint64_t v13 = v9 | 0x8000000000000000;
          break;
        case 10:
          unint64_t v14 = 0xD000000000000017;
          unint64_t v13 = v10 | 0x8000000000000000;
          break;
        case 11:
          unint64_t v13 = v11 | 0x8000000000000000;
LABEL_15:
          unint64_t v14 = 0xD000000000000014;
          break;
        case 12:
          unint64_t v14 = 0xD000000000000015;
          unint64_t v13 = 0x80000001ACEC4570;
          break;
        case 13:
          unint64_t v14 = 0xD000000000000012;
          unint64_t v13 = 0x80000001ACEC4590;
          break;
        default:
          break;
      }
      uint64_t v26 = result;
      unint64_t v16 = *(void *)(result + 16);
      unint64_t v15 = *(void *)(result + 24);
      if (v16 >= v15 >> 1)
      {
        uint64_t v23 = (char *)v6;
        unint64_t v24 = v5;
        uint64_t v21 = (char *)v8;
        uint64_t v22 = (const char *)v7;
        int64_t v19 = (const char *)v10;
        long long v20 = (const char *)v9;
        uint64_t v18 = (const char *)v11;
        sub_1ACC82D44(v15 > 1, v16 + 1, 1);
        unint64_t v11 = (unint64_t)v18;
        unint64_t v10 = (unint64_t)v19;
        unint64_t v9 = (unint64_t)v20;
        unint64_t v8 = (unint64_t)v21;
        unint64_t v7 = (unint64_t)v22;
        unint64_t v6 = (unint64_t)v23;
        unint64_t v5 = v24;
        uint64_t result = v26;
      }
      *(void *)(result + 16) = v16 + 1;
      uint64_t v17 = result + 16 * v16;
      *(void *)(v17 + 32) = v14;
      *(void *)(v17 + 40) = v13;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1ACC1735C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1ACBE80DC(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1ACC19778(v5);
  *a1 = v2;
  return result;
}

uint64_t DownloadStateReport.collectionTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1ACE750A8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DownloadStateReport.shows.getter()
{
  type metadata accessor for DownloadStateReport();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for DownloadStateReport()
{
  uint64_t result = qword_1E99F3B40;
  if (!qword_1E99F3B40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACC174B0()
{
  if (*v0) {
    return 0x73776F6873;
  }
  else {
    return 0x697463656C6C6F63;
  }
}

uint64_t sub_1ACC174F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACC1BE18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACC1751C(uint64_t a1)
{
  unint64_t v2 = sub_1ACC17790();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC17558(uint64_t a1)
{
  unint64_t v2 = sub_1ACC17790();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DownloadStateReport.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3A58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC17790();
  sub_1ACE77C78();
  char v12 = 0;
  sub_1ACE750A8();
  sub_1ACA4F6F8(&qword_1E99F3A68);
  sub_1ACE77788();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + *(int *)(type metadata accessor for DownloadStateReport() + 20));
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3A70);
    sub_1ACC1A728(&qword_1E99F3A78, &qword_1E99F3A70, (void (*)(void))sub_1ACC177E4);
    sub_1ACE77788();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1ACC17790()
{
  unint64_t result = qword_1E99F3A60;
  if (!qword_1E99F3A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3A60);
  }
  return result;
}

unint64_t sub_1ACC177E4()
{
  unint64_t result = qword_1E99F3A80;
  if (!qword_1E99F3A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3A80);
  }
  return result;
}

uint64_t DownloadStateReport.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v26 = sub_1ACE750A8();
  uint64_t v23 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3A88);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  uint64_t v25 = v7;
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DownloadStateReport();
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC17790();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v21 = v10;
  unint64_t v13 = v12;
  uint64_t v14 = v23;
  char v29 = 0;
  sub_1ACA4F6F8(&qword_1EB770958);
  uint64_t v15 = v26;
  uint64_t v16 = v24;
  sub_1ACE77698();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v20 = (uint64_t)v13;
  v17(v13, v5, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3A70);
  char v28 = 1;
  sub_1ACC1A728(&qword_1E99F3A90, &qword_1E99F3A70, (void (*)(void))sub_1ACC17BC4);
  sub_1ACE77698();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v16);
  uint64_t v18 = v20;
  *(void *)(v20 + *(int *)(v21 + 20)) = v27;
  sub_1ACC17C18(v18, v22);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_1ACB51D78(v18);
}

unint64_t sub_1ACC17BC4()
{
  unint64_t result = qword_1E99F3A98;
  if (!qword_1E99F3A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3A98);
  }
  return result;
}

uint64_t sub_1ACC17C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DownloadStateReport();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACC17C7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DownloadStateReport.init(from:)(a1, a2);
}

uint64_t sub_1ACC17C94(void *a1)
{
  return DownloadStateReport.encode(to:)(a1);
}

uint64_t ShowDownloadReport.showID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ShowDownloadReport.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ShowDownloadReport.episodes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ShowDownloadReport.autoDownloadExplaination.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *a1 = v2;
  return sub_1ACC17CF8(v2);
}

uint64_t sub_1ACC17CF8(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_retain();
  }
  return result;
}

uint64_t ShowDownloadReport.autoRemovalExplaination.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *a1 = v2;
  return sub_1ACC17CF8(v2);
}

void *ShowDownloadReport.asTable()()
{
  uint64_t v1 = *(void **)(v0 + 24);
  if (!v1[2]) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[8];
  uint64_t v5 = v1[9];
  uint64_t v4 = v1[10];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1ACC17CF8(v3);
  sub_1ACC17CF8(v5);
  sub_1ACC17CF8(v4);
  uint64_t v6 = (void *)sub_1ACD0AC6C(v2);
  swift_bridgeObjectRelease();
  unint64_t v13 = v6;
  sub_1ACC1735C((uint64_t *)&v13);
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t)v13;
  swift_retain();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1ACC1A308(v8, v7);
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v13 = &unk_1F03809E0;
  sub_1ACA6FB30(v7);
  uint64_t v10 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0D18);
  uint64_t v11 = (_OWORD *)swift_allocObject();
  v11[1] = xmmword_1ACE843F0;
  *((void *)v11 + 4) = v10;
  unint64_t v13 = v11;
  sub_1ACA703E8(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACC1A508(v3);
  sub_1ACC1A508(v5);
  sub_1ACC1A508(v4);
  return v13;
}

unint64_t EpisodeDownloadReport.DownloadState.rawValue.getter()
{
  unint64_t result = 0x64616F6C6E776F64;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x655265426C6C6977;
      break;
    case 3:
    case 0xB:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x6E776F4472657375;
      break;
    case 5:
      unint64_t result = 0x4C616964654D6E69;
      break;
    case 6:
      unint64_t result = 0x4D524464696C6176;
      break;
    case 7:
      unint64_t result = 0x4464657269707865;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000017;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000015;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACC18098(char a1)
{
  unint64_t result = 0x4449776F6873;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x69747265706F7270;
      break;
    case 2:
      unint64_t result = 0x7365646F73697065;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACC18154()
{
  return sub_1ACC18098(*v0);
}

uint64_t sub_1ACC1815C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACC1BF28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACC18184(uint64_t a1)
{
  unint64_t v2 = sub_1ACC1A520();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC181C0(uint64_t a1)
{
  unint64_t v2 = sub_1ACC1A520();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ShowDownloadReport.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3AA0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v16 = v1[3];
  uint64_t v17 = v7;
  uint64_t v8 = v1[4];
  uint64_t v14 = v1[5];
  uint64_t v15 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC1A520();
  sub_1ACE77C78();
  LOBYTE(v20) = 0;
  uint64_t v9 = v18;
  sub_1ACE77748();
  if (!v9)
  {
    uint64_t v11 = v15;
    uint64_t v10 = v16;
    uint64_t v12 = v14;
    uint64_t v20 = v17;
    char v19 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1AA8);
    sub_1ACC1A5C8(&qword_1E99F3AB0);
    sub_1ACE77788();
    uint64_t v20 = v10;
    char v19 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3AB8);
    sub_1ACC1A728(&qword_1E99F3AC0, &qword_1E99F3AB8, (void (*)(void))sub_1ACC1A574);
    sub_1ACE77788();
    uint64_t v20 = v11;
    char v19 = 3;
    sub_1ACA9F6BC();
    sub_1ACE77728();
    uint64_t v20 = v12;
    char v19 = 4;
    sub_1ACE77728();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ShowDownloadReport.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3AD0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC1A520();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  LOBYTE(v25) = 0;
  uint64_t v9 = sub_1ACE77658();
  uint64_t v11 = v10;
  uint64_t v23 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1AA8);
  char v24 = 1;
  sub_1ACC1A5C8(&qword_1E99F3AD8);
  swift_bridgeObjectRetain();
  sub_1ACE77698();
  uint64_t v12 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3AB8);
  char v24 = 2;
  sub_1ACC1A728(&qword_1E99F3AE0, &qword_1E99F3AB8, (void (*)(void))sub_1ACC1A62C);
  uint64_t v22 = v12;
  swift_bridgeObjectRetain();
  sub_1ACE77698();
  uint64_t v13 = v25;
  char v24 = 3;
  unint64_t v14 = sub_1ACA9F890();
  uint64_t v21 = v13;
  swift_bridgeObjectRetain();
  v20[1] = v14;
  sub_1ACE77638();
  char v24 = 4;
  v20[0] = v25;
  sub_1ACC17CF8(v25);
  sub_1ACE77638();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = v25;
  swift_bridgeObjectRetain();
  uint64_t v17 = v22;
  swift_bridgeObjectRetain();
  uint64_t v18 = v21;
  swift_bridgeObjectRetain();
  uint64_t v19 = v20[0];
  sub_1ACC17CF8(v20[0]);
  sub_1ACC17CF8(v16);
  sub_1ACC1A508(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v23;
  a2[1] = v11;
  a2[2] = v17;
  a2[3] = v18;
  a2[4] = v19;
  a2[5] = v16;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACC1A508(v19);
  return sub_1ACC1A508(v16);
}

uint64_t sub_1ACC189B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ShowDownloadReport.init(from:)(a1, a2);
}

uint64_t sub_1ACC189CC(void *a1)
{
  return ShowDownloadReport.encode(to:)(a1);
}

uint64_t EpisodeDownloadReport.episodeID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EpisodeDownloadReport.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EpisodeDownloadReport.states.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EpisodeDownloadReport.autoDownloadExplanation.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *a1 = v2;
  return sub_1ACC17CF8(v2);
}

uint64_t EpisodeDownloadReport.autoRemovalExplanation.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *a1 = v2;
  return sub_1ACC17CF8(v2);
}

uint64_t EpisodeDownloadReport.cacheDeleteExplanation.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  *a1 = v2;
  return sub_1ACC17CF8(v2);
}

PodcastsFoundation::EpisodeDownloadReport::DownloadState_optional __swiftcall EpisodeDownloadReport.DownloadState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1ACE775B8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 14;
  if (v3 < 0xE) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static EpisodeDownloadReport.DownloadState.allCases.getter()
{
  return &unk_1F0380A10;
}

unint64_t sub_1ACC18AB0(char a1)
{
  unint64_t result = 0x4965646F73697065;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x69747265706F7270;
      break;
    case 2:
      unint64_t result = 0x736574617473;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACC18B80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF5B30(*a1, *a2);
}

uint64_t sub_1ACC18B8C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC18BF4()
{
  EpisodeDownloadReport.DownloadState.rawValue.getter();
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC18C58()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::EpisodeDownloadReport::DownloadState_optional sub_1ACC18CBC(Swift::String *a1)
{
  return EpisodeDownloadReport.DownloadState.init(rawValue:)(*a1);
}

unint64_t sub_1ACC18CC8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = EpisodeDownloadReport.DownloadState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1ACC18CF0(void *a1@<X8>)
{
  *a1 = &unk_1F0380A10;
}

uint64_t sub_1ACC18D00()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACC18D60()
{
  return sub_1ACE764C8();
}

unint64_t sub_1ACC18DB0()
{
  return sub_1ACC18AB0(*v0);
}

uint64_t sub_1ACC18DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACC1C144(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACC18DE0(uint64_t a1)
{
  unint64_t v2 = sub_1ACC1A680();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC18E1C(uint64_t a1)
{
  unint64_t v2 = sub_1ACC1A680();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EpisodeDownloadReport.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3AF0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v19 = v1[3];
  uint64_t v20 = v7;
  uint64_t v8 = v1[4];
  uint64_t v17 = v1[5];
  uint64_t v18 = v8;
  uint64_t v16 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC1A680();
  sub_1ACE77C78();
  LOBYTE(v23) = 0;
  uint64_t v9 = v21;
  sub_1ACE77748();
  if (!v9)
  {
    uint64_t v11 = v18;
    uint64_t v10 = v19;
    uint64_t v12 = v16;
    uint64_t v13 = v17;
    uint64_t v23 = v20;
    char v22 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1AA8);
    sub_1ACC1A5C8(&qword_1E99F3AB0);
    sub_1ACE77788();
    uint64_t v23 = v10;
    char v22 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3B00);
    sub_1ACC1A728(&qword_1E99F3B08, &qword_1E99F3B00, (void (*)(void))sub_1ACC1A6D4);
    sub_1ACE77788();
    uint64_t v23 = v11;
    char v22 = 3;
    sub_1ACA9F6BC();
    sub_1ACE77728();
    uint64_t v23 = v13;
    char v22 = 4;
    sub_1ACE77728();
    uint64_t v23 = v12;
    char v22 = 5;
    sub_1ACE77728();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t EpisodeDownloadReport.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3B18);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC1A680();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  LOBYTE(v30) = 0;
  uint64_t v9 = sub_1ACE77658();
  uint64_t v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1AA8);
  char v29 = 1;
  sub_1ACC1A5C8(&qword_1E99F3AD8);
  swift_bridgeObjectRetain();
  sub_1ACE77698();
  uint64_t v27 = v9;
  char v28 = a2;
  uint64_t v12 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3B00);
  char v29 = 2;
  sub_1ACC1A728(&qword_1E99F3B20, &qword_1E99F3B00, (void (*)(void))sub_1ACC1A794);
  swift_bridgeObjectRetain();
  sub_1ACE77698();
  uint64_t v26 = v12;
  uint64_t v13 = v30;
  char v29 = 3;
  sub_1ACA9F890();
  swift_bridgeObjectRetain();
  uint64_t v25 = 0;
  sub_1ACE77638();
  uint64_t v23 = v13;
  char v29 = 4;
  uint64_t v14 = v30;
  sub_1ACC17CF8(v30);
  sub_1ACE77638();
  uint64_t v24 = v14;
  char v29 = 5;
  uint64_t v22 = v30;
  sub_1ACC17CF8(v30);
  sub_1ACE77638();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = v30;
  swift_bridgeObjectRetain();
  uint64_t v17 = v26;
  swift_bridgeObjectRetain();
  uint64_t v18 = v23;
  swift_bridgeObjectRetain();
  uint64_t v19 = v24;
  sub_1ACC17CF8(v24);
  uint64_t v20 = v22;
  sub_1ACC17CF8(v22);
  sub_1ACC17CF8(v16);
  sub_1ACC1A508(v20);
  sub_1ACC1A508(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v28;
  *char v28 = v27;
  v21[1] = v11;
  v21[2] = v17;
  v21[3] = v18;
  v21[4] = v19;
  v21[5] = v20;
  v21[6] = v16;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACC1A508(v19);
  sub_1ACC1A508(v20);
  return sub_1ACC1A508(v16);
}

uint64_t sub_1ACC19724@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return EpisodeDownloadReport.init(from:)(a1, a2);
}

uint64_t sub_1ACC1973C(void *a1)
{
  return EpisodeDownloadReport.encode(to:)(a1);
}

uint64_t sub_1ACC19754(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_1ACC19764(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = (2 * a2) | 1;
  return result;
}

uint64_t sub_1ACC19778(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1ACE777B8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1ACC19E64(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_1ACC19F34((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_1ACBE8028((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          v100 = &v97[16 * v96 + 32];
          *(void *)v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1ACE76608();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1ACE77848();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1ACE77848()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1ACBE7A88(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_1ACBE7A88((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    id v43 = &v11[16 * v41 + 32];
    *(void *)id v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          unint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            unint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        int64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_1ACC19F34((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      id v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1ACE77848() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

uint64_t sub_1ACC19E64(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_1ACE77848(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACC19F34(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_1ACE77848() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_1ACE77848() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_1ACBE7E9C((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC1A1D0(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1ACC82D44(0, v2, 0);
  uint64_t v3 = v19;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = (uint64_t *)(a1 + 40);
  while (*(void *)(v6 + 16))
  {
    uint64_t v8 = *(v7 - 1);
    uint64_t v9 = *v7;
    swift_bridgeObjectRetain_n();
    uint64_t v10 = sub_1ACA657FC(v8, v9);
    if ((v11 & 1) == 0) {
      goto LABEL_10;
    }
    uint64_t v12 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v10);
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
    unint64_t v16 = *(void *)(v19 + 16);
    unint64_t v15 = *(void *)(v19 + 24);
    if (v16 >= v15 >> 1) {
      sub_1ACC82D44(v15 > 1, v16 + 1, 1);
    }
    *(void *)(v19 + 16) = v16 + 1;
    uint64_t v17 = v19 + 16 * v16;
    *(void *)(v17 + 32) = v14;
    *(void *)(v17 + 40) = v13;
    v7 += 2;
    if (!--v2) {
      return v3;
    }
  }
  __break(1u);
LABEL_10:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1ACC1A308(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1ACC83260(0, v2, 0);
    uint64_t v3 = v19;
    uint64_t v5 = a1 + 32;
    do
    {
      long long v6 = *(_OWORD *)(v5 + 16);
      v17[0] = *(_OWORD *)v5;
      v17[1] = v6;
      void v17[2] = *(_OWORD *)(v5 + 32);
      uint64_t v18 = *(void *)(v5 + 48);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1ACE843F0;
      sub_1ACC1C410(v17);
      uint64_t v8 = swift_bridgeObjectRetain();
      sub_1ACC17080(v8);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
      sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
      uint64_t v9 = sub_1ACE76138();
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v11;
      sub_1ACC1C410(v17);
      uint64_t v12 = sub_1ACC1A1D0(a2, (uint64_t)v17);
      sub_1ACC1C480(v17);
      sub_1ACA6FB30(v12);
      sub_1ACC1C480(v17);
      uint64_t v19 = v3;
      unint64_t v14 = *(void *)(v3 + 16);
      unint64_t v13 = *(void *)(v3 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1ACC83260(v13 > 1, v14 + 1, 1);
        uint64_t v3 = v19;
      }
      *(void *)(v3 + 16) = v14 + 1;
      *(void *)(v3 + 8 * v14 + 32) = v7;
      v5 += 56;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1ACC1A508(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

unint64_t sub_1ACC1A520()
{
  unint64_t result = qword_1E99F3AA8;
  if (!qword_1E99F3AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3AA8);
  }
  return result;
}

unint64_t sub_1ACC1A574()
{
  unint64_t result = qword_1E99F3AC8;
  if (!qword_1E99F3AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3AC8);
  }
  return result;
}

uint64_t sub_1ACC1A5C8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F1AA8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACC1A62C()
{
  unint64_t result = qword_1E99F3AE8;
  if (!qword_1E99F3AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3AE8);
  }
  return result;
}

unint64_t sub_1ACC1A680()
{
  unint64_t result = qword_1E99F3AF8;
  if (!qword_1E99F3AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3AF8);
  }
  return result;
}

unint64_t sub_1ACC1A6D4()
{
  unint64_t result = qword_1E99F3B10;
  if (!qword_1E99F3B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3B10);
  }
  return result;
}

uint64_t sub_1ACC1A728(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACC1A794()
{
  unint64_t result = qword_1E99F3B28;
  if (!qword_1E99F3B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3B28);
  }
  return result;
}

unint64_t sub_1ACC1A7EC()
{
  unint64_t result = qword_1E99F3B30;
  if (!qword_1E99F3B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3B30);
  }
  return result;
}

uint64_t sub_1ACC1A840()
{
  return sub_1ACA51EA4(&qword_1E99F3B38, &qword_1E99F3B00);
}

uint64_t *initializeBufferWithCopyOfBuffer for DownloadStateReport(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1ACE750A8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DownloadStateReport(uint64_t a1)
{
  uint64_t v2 = sub_1ACE750A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DownloadStateReport(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE750A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DownloadStateReport(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE750A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DownloadStateReport(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE750A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for DownloadStateReport(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE750A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadStateReport(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACC1ABE0);
}

uint64_t sub_1ACC1ABE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DownloadStateReport(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACC1ACB4);
}

uint64_t sub_1ACC1ACB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1ACE750A8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1ACC1AD70()
{
  uint64_t result = sub_1ACE750A8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for ShowDownloadReport(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((~*(void *)(a1 + 32) & 0xF000000000000007) != 0) {
    uint64_t result = swift_release();
  }
  if ((~*(void *)(a1 + 40) & 0xF000000000000007) != 0)
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for ShowDownloadReport(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v6 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  a1[4] = v6;
  uint64_t v7 = a2[5];
  if ((~v7 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  a1[5] = v7;
  return a1;
}

void *assignWithCopy for ShowDownloadReport(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 4;
  uint64_t v5 = a2[4];
  unint64_t v6 = v5 & 0xF000000000000007;
  if ((~a1[4] & 0xF000000000000007) == 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *uint64_t v4 = v5;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
    sub_1ACC1B06C((uint64_t)(a1 + 4));
    uint64_t v5 = a2[4];
LABEL_6:
    *uint64_t v4 = v5;
    goto LABEL_8;
  }
  *uint64_t v4 = v5;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v7 = a1 + 5;
  uint64_t v8 = a2[5];
  unint64_t v9 = v8 & 0xF000000000000007;
  if ((~a1[5] & 0xF000000000000007) != 0)
  {
    if (v9 != 0xF000000000000007)
    {
      *uint64_t v7 = v8;
      swift_retain();
      swift_release();
      return a1;
    }
    sub_1ACC1B06C((uint64_t)(a1 + 5));
    uint64_t v8 = a2[5];
    goto LABEL_13;
  }
  if (v9 == 0xF000000000000007)
  {
LABEL_13:
    *uint64_t v7 = v8;
    return a1;
  }
  *uint64_t v7 = v8;
  swift_retain();
  return a1;
}

uint64_t sub_1ACC1B06C(uint64_t a1)
{
  return a1;
}

void *assignWithTake for ShowDownloadReport(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + 4;
  uint64_t v6 = a2[4];
  if ((~a1[4] & 0xF000000000000007) == 0) {
    goto LABEL_4;
  }
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1ACC1B06C((uint64_t)(a1 + 4));
LABEL_4:
    *uint64_t v5 = v6;
    goto LABEL_6;
  }
  *uint64_t v5 = v6;
  swift_release();
LABEL_6:
  uint64_t v7 = a1 + 5;
  uint64_t v8 = a2[5];
  if ((~a1[5] & 0xF000000000000007) != 0)
  {
    if ((~v8 & 0xF000000000000007) != 0)
    {
      *uint64_t v7 = v8;
      swift_release();
      return a1;
    }
    sub_1ACC1B06C((uint64_t)(a1 + 5));
  }
  *uint64_t v7 = v8;
  return a1;
}

ValueMetadata *type metadata accessor for ShowDownloadReport()
{
  return &type metadata for ShowDownloadReport;
}

uint64_t destroy for EpisodeDownloadReport(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((~a1[4] & 0xF000000000000007) != 0) {
    uint64_t result = swift_release();
  }
  if ((~a1[5] & 0xF000000000000007) != 0) {
    uint64_t result = swift_release();
  }
  if ((~a1[6] & 0xF000000000000007) != 0)
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for EpisodeDownloadReport(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v6 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  a1[4] = v6;
  uint64_t v7 = a2[5];
  if ((~v7 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  a1[5] = v7;
  uint64_t v8 = a2[6];
  if ((~v8 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  a1[6] = v8;
  return a1;
}

void *assignWithCopy for EpisodeDownloadReport(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 4;
  uint64_t v5 = a2[4];
  unint64_t v6 = v5 & 0xF000000000000007;
  if ((~a1[4] & 0xF000000000000007) == 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *uint64_t v4 = v5;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
    sub_1ACC1B06C((uint64_t)(a1 + 4));
    uint64_t v5 = a2[4];
LABEL_6:
    *uint64_t v4 = v5;
    goto LABEL_8;
  }
  *uint64_t v4 = v5;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v7 = a1 + 5;
  uint64_t v8 = a2[5];
  unint64_t v9 = v8 & 0xF000000000000007;
  if ((~a1[5] & 0xF000000000000007) == 0)
  {
    if (v9 != 0xF000000000000007)
    {
      *uint64_t v7 = v8;
      swift_retain();
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v9 == 0xF000000000000007)
  {
    sub_1ACC1B06C((uint64_t)(a1 + 5));
    uint64_t v8 = a2[5];
LABEL_13:
    *uint64_t v7 = v8;
    goto LABEL_15;
  }
  *uint64_t v7 = v8;
  swift_retain();
  swift_release();
LABEL_15:
  unint64_t v10 = a1 + 6;
  uint64_t v11 = a2[6];
  unint64_t v12 = v11 & 0xF000000000000007;
  if ((~a1[6] & 0xF000000000000007) != 0)
  {
    if (v12 != 0xF000000000000007)
    {
      *unint64_t v10 = v11;
      swift_retain();
      swift_release();
      return a1;
    }
    sub_1ACC1B06C((uint64_t)(a1 + 6));
    uint64_t v11 = a2[6];
    goto LABEL_20;
  }
  if (v12 == 0xF000000000000007)
  {
LABEL_20:
    *unint64_t v10 = v11;
    return a1;
  }
  *unint64_t v10 = v11;
  swift_retain();
  return a1;
}

void *assignWithTake for EpisodeDownloadReport(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + 4;
  uint64_t v6 = a2[4];
  if ((~a1[4] & 0xF000000000000007) == 0) {
    goto LABEL_4;
  }
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1ACC1B06C((uint64_t)(a1 + 4));
LABEL_4:
    *uint64_t v5 = v6;
    goto LABEL_6;
  }
  *uint64_t v5 = v6;
  swift_release();
LABEL_6:
  uint64_t v7 = a1 + 5;
  uint64_t v8 = a2[5];
  if ((~a1[5] & 0xF000000000000007) == 0)
  {
LABEL_9:
    *uint64_t v7 = v8;
    goto LABEL_11;
  }
  if ((~v8 & 0xF000000000000007) == 0)
  {
    sub_1ACC1B06C((uint64_t)(a1 + 5));
    goto LABEL_9;
  }
  *uint64_t v7 = v8;
  swift_release();
LABEL_11:
  unint64_t v9 = a1 + 6;
  uint64_t v10 = a2[6];
  if ((~a1[6] & 0xF000000000000007) != 0)
  {
    if ((~v10 & 0xF000000000000007) != 0)
    {
      *unint64_t v9 = v10;
      swift_release();
      return a1;
    }
    sub_1ACC1B06C((uint64_t)(a1 + 6));
  }
  *unint64_t v9 = v10;
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeDownloadReport(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeDownloadReport(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeDownloadReport()
{
  return &type metadata for EpisodeDownloadReport;
}

uint64_t getEnumTagSinglePayload for EpisodeDownloadReport.DownloadState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EpisodeDownloadReport.DownloadState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC1B7BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeDownloadReport.DownloadState()
{
  return &type metadata for EpisodeDownloadReport.DownloadState;
}

unsigned char *storeEnumTagSinglePayload for EpisodeDownloadReport.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC1B8C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeDownloadReport.CodingKeys()
{
  return &type metadata for EpisodeDownloadReport.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ShowDownloadReport.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC1B9C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowDownloadReport.CodingKeys()
{
  return &type metadata for ShowDownloadReport.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DownloadStateReport.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC1BAC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadStateReport.CodingKeys()
{
  return &type metadata for DownloadStateReport.CodingKeys;
}

unint64_t sub_1ACC1BB04()
{
  unint64_t result = qword_1E99F3B50;
  if (!qword_1E99F3B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3B50);
  }
  return result;
}

unint64_t sub_1ACC1BB5C()
{
  unint64_t result = qword_1E99F3B58;
  if (!qword_1E99F3B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3B58);
  }
  return result;
}

unint64_t sub_1ACC1BBB4()
{
  unint64_t result = qword_1E99F3B60;
  if (!qword_1E99F3B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3B60);
  }
  return result;
}

unint64_t sub_1ACC1BC0C()
{
  unint64_t result = qword_1E99F3B68;
  if (!qword_1E99F3B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3B68);
  }
  return result;
}

unint64_t sub_1ACC1BC64()
{
  unint64_t result = qword_1E99F3B70;
  if (!qword_1E99F3B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3B70);
  }
  return result;
}

unint64_t sub_1ACC1BCBC()
{
  unint64_t result = qword_1E99F3B78;
  if (!qword_1E99F3B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3B78);
  }
  return result;
}

unint64_t sub_1ACC1BD14()
{
  unint64_t result = qword_1E99F3B80;
  if (!qword_1E99F3B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3B80);
  }
  return result;
}

unint64_t sub_1ACC1BD6C()
{
  unint64_t result = qword_1E99F3B88;
  if (!qword_1E99F3B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3B88);
  }
  return result;
}

unint64_t sub_1ACC1BDC4()
{
  unint64_t result = qword_1E99F3B90;
  if (!qword_1E99F3B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3B90);
  }
  return result;
}

uint64_t sub_1ACC1BE18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x697463656C6C6F63 && a2 == 0xEE00656D69546E6FLL;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73776F6873 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACC1BF28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449776F6873 && a2 == 0xE600000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365646F73697065 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001ACECD070 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001ACECD090)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1ACC1C144(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4965646F73697065 && a2 == 0xE900000000000044;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736574617473 && a2 == 0xE600000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001ACECD0B0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001ACECD0D0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001ACECD0F0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_1ACC1C3BC()
{
  unint64_t result = qword_1E99F3B98;
  if (!qword_1E99F3B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3B98);
  }
  return result;
}

void *sub_1ACC1C410(void *a1)
{
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[5];
  uint64_t v4 = a1[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1ACC17CF8(v2);
  sub_1ACC17CF8(v3);
  sub_1ACC17CF8(v4);
  return a1;
}

void *sub_1ACC1C480(void *a1)
{
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[5];
  uint64_t v4 = a1[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACC1A508(v2);
  sub_1ACC1A508(v3);
  sub_1ACC1A508(v4);
  return a1;
}

void sub_1ACC1C4F0(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1ACE77138();
    sub_1ACB3E8C8();
    sub_1ACC1F124();
    sub_1ACE76A28();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v2 = v20;
    uint64_t v3 = v21;
    unint64_t v4 = v22;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v16 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    uint64_t v12 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!sub_1ACE771A8()) {
      goto LABEL_31;
    }
    sub_1ACB3E8C8();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v10 = v23;
    swift_unknownObjectRelease();
    if (!v23) {
      goto LABEL_31;
    }
LABEL_10:
    unsigned int v11 = objc_msgSend(v10, sel_subscribed);

    if (v11) {
      goto LABEL_31;
    }
  }
  if (v4)
  {
    unint64_t v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v9 = v8 | (v3 << 6);
LABEL_9:
    id v10 = *(id *)(*(void *)(v1 + 48) + 8 * v9);
    if (!v10) {
      goto LABEL_31;
    }
    goto LABEL_10;
  }
  int64_t v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v16) {
      goto LABEL_31;
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    ++v3;
    if (!v14)
    {
      uint64_t v3 = v12 + 2;
      if (v12 + 2 >= v16) {
        goto LABEL_31;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v3);
      if (!v14)
      {
        uint64_t v3 = v12 + 3;
        if (v12 + 3 >= v16) {
          goto LABEL_31;
        }
        unint64_t v14 = *(void *)(v17 + 8 * v3);
        if (!v14)
        {
          uint64_t v3 = v12 + 4;
          if (v12 + 4 >= v16) {
            goto LABEL_31;
          }
          unint64_t v14 = *(void *)(v17 + 8 * v3);
          if (!v14)
          {
            uint64_t v3 = v12 + 5;
            if (v12 + 5 >= v16) {
              goto LABEL_31;
            }
            unint64_t v14 = *(void *)(v17 + 8 * v3);
            if (!v14)
            {
              uint64_t v15 = v12 + 6;
              while (v16 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v3 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_31:
              sub_1ACA50A70();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    unint64_t v4 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v3 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

void sub_1ACC1C7B4(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1ACE77138();
    sub_1ACB3E8C8();
    sub_1ACC1F124();
    sub_1ACE76A28();
    uint64_t v5 = v24;
    uint64_t v23 = v25;
    uint64_t v7 = v26;
    int64_t v8 = v27;
    unint64_t v9 = v28;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v23 = a3 + 56;
    uint64_t v11 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & *(void *)(a3 + 56);
    swift_bridgeObjectRetain();
    uint64_t v7 = v11;
    int64_t v8 = 0;
  }
  int64_t v22 = (unint64_t)(v7 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (sub_1ACE771A8())
  {
    sub_1ACB3E8C8();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v29;
    swift_unknownObjectRelease();
    int64_t v15 = v8;
    uint64_t v16 = v9;
    while (v14)
    {
      id v29 = v14;
      char v20 = a1(&v29);

      if (v4 || (v20 & 1) != 0) {
        break;
      }
      int64_t v8 = v15;
      unint64_t v9 = v16;
      if (v5 < 0) {
        goto LABEL_8;
      }
LABEL_11:
      if (v9)
      {
        uint64_t v16 = (v9 - 1) & v9;
        unint64_t v17 = __clz(__rbit64(v9)) | (v8 << 6);
        int64_t v15 = v8;
      }
      else
      {
        int64_t v15 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          return;
        }
        if (v15 >= v22) {
          break;
        }
        unint64_t v18 = *(void *)(v23 + 8 * v15);
        if (!v18)
        {
          int64_t v19 = v8 + 2;
          if (v8 + 2 >= v22) {
            break;
          }
          unint64_t v18 = *(void *)(v23 + 8 * v19);
          if (v18) {
            goto LABEL_22;
          }
          int64_t v19 = v8 + 3;
          if (v8 + 3 >= v22) {
            break;
          }
          unint64_t v18 = *(void *)(v23 + 8 * v19);
          if (v18) {
            goto LABEL_22;
          }
          int64_t v19 = v8 + 4;
          if (v8 + 4 >= v22) {
            break;
          }
          unint64_t v18 = *(void *)(v23 + 8 * v19);
          if (v18)
          {
LABEL_22:
            int64_t v15 = v19;
          }
          else
          {
            int64_t v15 = v8 + 5;
            if (v8 + 5 >= v22) {
              break;
            }
            unint64_t v18 = *(void *)(v23 + 8 * v15);
            if (!v18)
            {
              int64_t v21 = v8 + 6;
              while (v22 != v21)
              {
                unint64_t v18 = *(void *)(v23 + 8 * v21++);
                if (v18)
                {
                  int64_t v15 = v21 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        uint64_t v16 = (v18 - 1) & v18;
        unint64_t v17 = __clz(__rbit64(v18)) + (v15 << 6);
      }
      id v14 = *(id *)(*(void *)(v5 + 48) + 8 * v17);
    }
  }
  sub_1ACA50A70();
}

void InterestStore.favoriteInterest(forAdamID:force:)(uint64_t a1, char a2)
{
}

uint64_t sub_1ACC1CADC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void InterestStore.unfavoriteInterest(forAdamID:)(uint64_t a1)
{
}

void InterestStore.suggestLess(forAdamID:force:)(uint64_t a1, char a2)
{
}

void sub_1ACC1CB64(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void **)(v5 + 16);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = a1;
  *(unsigned char *)(v12 + 32) = a2;
  v14[4] = a4;
  v14[5] = v12;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  void v14[2] = sub_1ACA6DA9C;
  v14[3] = a5;
  uint64_t v13 = _Block_copy(v14);
  swift_release();
  objc_msgSend(v10, sel_performBlock_, v13);
  _Block_release(v13);
}

void InterestStore.undoSuggestLess(forAdamID:)(uint64_t a1)
{
}

void sub_1ACC1CC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v8 = *(void **)(v4 + 16);
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = a1;
  v12[4] = a3;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1ACA6DA9C;
  v12[3] = a4;
  uint64_t v11 = _Block_copy(v12);
  swift_release();
  objc_msgSend(v8, sel_performBlock_, v11);
  _Block_release(v11);
}

Swift::Void __swiftcall InterestStore.unsafeFavoriteExistingEntitledChannelsIfNeeded(entitledChannels:)(Swift::OpaquePointer entitledChannels)
{
  unint64_t rawValue = (unint64_t)entitledChannels._rawValue;
  uint64_t v1 = sub_1ACE751E8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v53 = sub_1ACE75208();
  uint64_t v5 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE750A8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  int64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v17 = (char *)&v46 - v16;
  sub_1ACE751D8();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4F27BF0], v1);
  sub_1ACE75088();
  sub_1ACE751C8();
  uint64_t v51 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v52 = v12 + 8;
  v51(v15, v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, void))(v5 + 8))(v7, v53);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1ACA3E034((uint64_t)v10);
    if (qword_1EB76A5E8 != -1) {
      goto LABEL_30;
    }
    goto LABEL_3;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
  int64_t v22 = v17;
  uint64_t v47 = v11;
  if (rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1ACE77508();
    if (v23) {
      goto LABEL_8;
    }
LABEL_32:
    swift_bridgeObjectRelease();
    v51(v22, v47);
    return;
  }
  uint64_t v23 = *(void *)((rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v23) {
    goto LABEL_32;
  }
LABEL_8:
  unint64_t v25 = rawValue & 0xC000000000000001;
  char v48 = &v56;
  uint64_t v26 = 4;
  *(void *)&long long v24 = 134217984;
  long long v53 = v24;
  unint64_t v49 = rawValue & 0xC000000000000001;
  uint64_t v50 = v22;
  while (1)
  {
    unint64_t v28 = v25
        ? MEMORY[0x1AD119490](v26 - 4, rawValue)
        : *(id *)(rawValue + 8 * v26);
    int64_t v27 = v28;
    uint64_t v29 = v26 - 3;
    if (__OFADD__(v26 - 4, 1)) {
      break;
    }
    id v30 = [v28 podcasts];
    if (!v30) {
      goto LABEL_20;
    }
    uint64_t v31 = v30;
    sub_1ACB3E8C8();
    sub_1ACC1F124();
    uint64_t v32 = sub_1ACE76988();

    sub_1ACC1C4F0(v32);
    if ((v33 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_20:
      if (qword_1EB76A5E8 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_1ACE754C8();
      __swift_project_value_buffer(v37, (uint64_t)qword_1EB76A5D0);
      uint64_t v38 = v27;
      int64_t v27 = sub_1ACE75498();
      os_log_type_t v39 = sub_1ACE76C08();
      if (os_log_type_enabled(v27, v39))
      {
        uint64_t v40 = swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = v53;
        *(void *)(v40 + 4) = [v38 storeId];

        unint64_t v41 = v27;
        os_log_type_t v42 = v39;
        id v43 = "Existing channel %lld does not have at least one followed show. Not favoriting.";
LABEL_24:
        _os_log_impl(&dword_1AC9D5000, v41, v42, v43, (uint8_t *)v40, 0xCu);
        MEMORY[0x1AD11B340](v40, -1, -1);

        goto LABEL_10;
      }
      goto LABEL_9;
    }
    MEMORY[0x1F4188790](v33);
    *(&v46 - 2) = (uint64_t)v22;
    sub_1ACC1C7B4(sub_1ACC1F17C, (uint64_t)(&v46 - 4), v32);
    char v35 = v34;
    swift_bridgeObjectRelease();
    if (v35)
    {
      uint64_t v36 = (uint64_t)[v27 storeId];
      sub_1ACC1D5D8(v36 & ~(v36 >> 63), 0);
      goto LABEL_10;
    }
    if (qword_1EB76A5E8 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_1ACE754C8();
    __swift_project_value_buffer(v44, (uint64_t)qword_1EB76A5D0);
    uint64_t v38 = v27;
    int64_t v27 = sub_1ACE75498();
    os_log_type_t v45 = sub_1ACE76C08();
    if (os_log_type_enabled(v27, v45))
    {
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = v53;
      id v55 = [v38 storeId];
      unint64_t v25 = v49;
      int64_t v22 = v50;
      sub_1ACE76FF8();

      unint64_t v41 = v27;
      os_log_type_t v42 = v45;
      id v43 = "Existing channel %lld does not have at least one played episodes in the last 90 days.";
      goto LABEL_24;
    }
LABEL_9:

    int64_t v27 = v38;
LABEL_10:

    ++v26;
    if (v29 == v23) {
      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_30:
  swift_once();
LABEL_3:
  uint64_t v18 = sub_1ACE754C8();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EB76A5D0);
  int64_t v19 = sub_1ACE75498();
  os_log_type_t v20 = sub_1ACE76BE8();
  if (os_log_type_enabled(v19, v20))
  {
    int64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v21 = 0;
    _os_log_impl(&dword_1AC9D5000, v19, v20, "Unable to favorite existing entitled channels because could not get a date value for 90 days in the past.", v21, 2u);
    MEMORY[0x1AD11B340](v21, -1, -1);
  }
}

uint64_t InterestStore.__allocating_init(ctx:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t InterestStore.init(ctx:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t InterestStore.deinit()
{
  return v0;
}

uint64_t InterestStore.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1ACC1D564(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1ACC1D5D8(a2, a3 & 1);
    return swift_release();
  }
  return result;
}

void sub_1ACC1D5D8(uint64_t a1, char a2)
{
  uint64_t v5 = sub_1ACE750A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACC1DA98(a1);
  if (v9)
  {
    uint64_t v10 = v9;
    sub_1ACC1DDA4(v9);
    sub_1ACC1E930(v10, (SEL *)&selRef_channelForStoreId_, (SEL *)&selRef_setChannel_, "Could not find channel for interest: %llu. Not configuring relationship to channel.");
    if ((a2 & 1) != 0 || ([v10 interestValue], v11 == 0.0))
    {
      [v10 setInterestValue:1.0];
      sub_1ACE75088();
      uint64_t v12 = (void *)sub_1ACE75008();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      [v10 setLastUpdatedDate:v12];

      objc_msgSend(*(id *)(v2 + 16), sel_saveInCurrentBlock);
LABEL_5:

      return;
    }
    if (qword_1EB76A5E8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1ACE754C8();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EB76A5D0);
    unint64_t v28 = v10;
    uint64_t v10 = sub_1ACE75498();
    os_log_type_t v20 = sub_1ACE76BE8();
    if (os_log_type_enabled(v10, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v29 = a1;
      uint64_t v30 = v22;
      *(_DWORD *)uint64_t v21 = 136315394;
      sub_1ACA55E4C();
      uint64_t v23 = sub_1ACE770B8();
      uint64_t v29 = sub_1ACA3189C(v23, v24, &v30);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2048;
      [v28 interestValue];
      uint64_t v29 = v25;
      sub_1ACE76FF8();

      _os_log_impl(&dword_1AC9D5000, v10, v20, "Cannot favorite interest: %s because the interestValue is not neutral. InterestValue: %f", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v22, -1, -1);
      MEMORY[0x1AD11B340](v21, -1, -1);

      goto LABEL_5;
    }
  }
  else
  {
    if (qword_1EB76A5E8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1ACE754C8();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EB76A5D0);
    unint64_t v28 = sub_1ACE75498();
    os_log_type_t v14 = sub_1ACE76BE8();
    if (os_log_type_enabled(v28, v14))
    {
      int64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v29 = a1;
      uint64_t v30 = v16;
      *(_DWORD *)int64_t v15 = 136315138;
      sub_1ACA55E4C();
      uint64_t v17 = sub_1ACE770B8();
      uint64_t v29 = sub_1ACA3189C(v17, v18, &v30);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v28, v14, "Could not find or create interest for adamID: %s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v16, -1, -1);
      MEMORY[0x1AD11B340](v15, -1, -1);

      return;
    }
  }
  uint64_t v26 = v28;
}

void *sub_1ACC1DA98(uint64_t a1)
{
  uint64_t v3 = sub_1ACE750A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  NSManagedObjectContext.unsafeInterest(forAdamID:)(a1);
  uint64_t v9 = v8;
  if (!v8)
  {
    uint64_t v10 = self;
    double v11 = (void *)sub_1ACE76178();
    id v12 = objc_msgSend(v10, sel_insertNewObjectForEntityForName_inManagedObjectContext_, v11, v7);

    type metadata accessor for MTInterest();
    uint64_t v13 = (void *)swift_dynamicCastClass();
    if (v13)
    {
      uint64_t v9 = v13;
      objc_msgSend(v13, sel_setAdamID_, a1);
      objc_msgSend(v9, sel_setInterestValue_, 0.0);
      sub_1ACE75088();
      os_log_type_t v14 = (void *)sub_1ACE75008();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      objc_msgSend(v9, sel_setLastUpdatedDate_, v14);
    }
    else
    {

      if (qword_1EB76A5E8 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_1ACE754C8();
      __swift_project_value_buffer(v15, (uint64_t)qword_1EB76A5D0);
      uint64_t v16 = sub_1ACE75498();
      os_log_type_t v17 = sub_1ACE76BE8();
      if (os_log_type_enabled(v16, v17))
      {
        unint64_t v18 = (uint8_t *)swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        uint64_t v23 = a1;
        uint64_t v24 = v19;
        *(_DWORD *)unint64_t v18 = 136315138;
        sub_1ACA55E4C();
        uint64_t v20 = sub_1ACE770B8();
        uint64_t v23 = sub_1ACA3189C(v20, v21, &v24);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v16, v17, "Cannot create MTInterest for adamID: %s. Unable to favorite interest.", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v19, -1, -1);
        MEMORY[0x1AD11B340](v18, -1, -1);
      }

      return 0;
    }
  }
  return v9;
}

void sub_1ACC1DDA4(void *a1)
{
  NSManagedObjectContext.unsafeCategory(forAdamID:)((uint64_t)objc_msgSend(a1, sel_adamID));
  if (v2)
  {
    id v7 = v2;
    objc_msgSend(a1, sel_setCategory_);
    objc_msgSend(v7, sel_setInterest_, a1);
  }
  else
  {
    if (qword_1EB76A5E8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1ACE754C8();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB76A5D0);
    id v7 = a1;
    uint64_t v4 = sub_1ACE75498();
    os_log_type_t v5 = sub_1ACE76C08();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 134217984;
      objc_msgSend(v7, sel_adamID);
      sub_1ACE76FF8();

      _os_log_impl(&dword_1AC9D5000, v4, v5, "Could not find category for interest: %llu. Not configuring relationship to category.", v6, 0xCu);
      MEMORY[0x1AD11B340](v6, -1, -1);

      return;
    }
  }
}

void sub_1ACC1DF54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1ACE750A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    uint64_t v9 = sub_1ACC1DA98(a2);
    if (v9)
    {
      id v10 = v9;
      sub_1ACC1DDA4(v9);
      sub_1ACC1E930(v10, (SEL *)&selRef_channelForStoreId_, (SEL *)&selRef_setChannel_, "Could not find channel for interest: %llu. Not configuring relationship to channel.");
      objc_msgSend(v10, sel_interestValue);
      if (v11 == 1.0)
      {
        objc_msgSend(v10, sel_setInterestValue_, 0.0);
        sub_1ACE75088();
        id v12 = (void *)sub_1ACE75008();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        objc_msgSend(v10, sel_setLastUpdatedDate_, v12);

        objc_msgSend(*(id *)(v8 + 16), sel_saveInCurrentBlock);
        swift_release();
      }
      else
      {
        if (qword_1EB76A5E8 != -1) {
          swift_once();
        }
        uint64_t v20 = sub_1ACE754C8();
        __swift_project_value_buffer(v20, (uint64_t)qword_1EB76A5D0);
        id v10 = v10;
        unint64_t v21 = sub_1ACE75498();
        os_log_type_t v22 = sub_1ACE76BE8();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = swift_slowAlloc();
          uint64_t v24 = swift_slowAlloc();
          uint64_t v29 = a2;
          uint64_t v30 = v24;
          *(_DWORD *)uint64_t v23 = 136315394;
          sub_1ACA55E4C();
          uint64_t v25 = sub_1ACE770B8();
          uint64_t v29 = sub_1ACA3189C(v25, v26, &v30);
          sub_1ACE76FF8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v23 + 12) = 2048;
          objc_msgSend(v10, sel_interestValue);
          uint64_t v29 = v27;
          sub_1ACE76FF8();

          _os_log_impl(&dword_1AC9D5000, v21, v22, "Cannot un-favorite interest: %s because the interestValue is not favorited. InterestValue: %f", (uint8_t *)v23, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v24, -1, -1);
          MEMORY[0x1AD11B340](v23, -1, -1);

          swift_release();
          return;
        }

        swift_release();
      }
    }
    else
    {
      if (qword_1EB76A5E8 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_1ACE754C8();
      __swift_project_value_buffer(v13, (uint64_t)qword_1EB76A5D0);
      os_log_type_t v14 = sub_1ACE75498();
      os_log_type_t v15 = sub_1ACE76BE8();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        uint64_t v17 = swift_slowAlloc();
        uint64_t v29 = a2;
        uint64_t v30 = v17;
        *(_DWORD *)uint64_t v16 = 136315138;
        sub_1ACA55E4C();
        uint64_t v18 = sub_1ACE770B8();
        uint64_t v29 = sub_1ACA3189C(v18, v19, &v30);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v14, v15, "Could not find or create interest for adamID: %s", v16, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v17, -1, -1);
        MEMORY[0x1AD11B340](v16, -1, -1);
      }

      swift_release();
    }
  }
}

void sub_1ACC1E418(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = sub_1ACE750A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong;
    double v11 = sub_1ACC1DA98(a2);
    if (v11)
    {
      id v12 = v11;
      sub_1ACC1DDA4(v11);
      sub_1ACC1E930(v12, (SEL *)&selRef_channelForStoreId_, (SEL *)&selRef_setChannel_, "Could not find channel for interest: %llu. Not configuring relationship to channel.");
      sub_1ACC1E930(v12, (SEL *)&selRef_podcastForStoreId_, (SEL *)&selRef_setPodcast_, "Could not find podcast for interest: %llu. Not configuring relationship to podcast.");
      if ((a3 & 1) != 0 || (objc_msgSend(v12, sel_interestValue), v13 == 0.0))
      {
        objc_msgSend(v12, sel_setInterestValue_, -1.0);
        sub_1ACE75088();
        os_log_type_t v14 = (void *)sub_1ACE75008();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        objc_msgSend(v12, sel_setLastUpdatedDate_, v14);

        objc_msgSend(*(id *)(v10 + 16), sel_saveInCurrentBlock);
        swift_release();
LABEL_6:

        return;
      }
      if (qword_1EB76A5E8 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_1ACE754C8();
      __swift_project_value_buffer(v22, (uint64_t)qword_1EB76A5D0);
      id v12 = v12;
      uint64_t v23 = sub_1ACE75498();
      os_log_type_t v24 = sub_1ACE76BE8();
      if (!os_log_type_enabled(v23, v24))
      {

        swift_release();
        goto LABEL_6;
      }
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v31 = a2;
      uint64_t v32 = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      sub_1ACA55E4C();
      uint64_t v27 = sub_1ACE770B8();
      uint64_t v31 = sub_1ACA3189C(v27, v28, &v32);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2048;
      objc_msgSend(v12, sel_interestValue);
      uint64_t v31 = v29;
      sub_1ACE76FF8();

      _os_log_impl(&dword_1AC9D5000, v23, v24, "Cannot Suggest Less for interest: %s because the interestValue is not neutral. InterestValue: %f", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v26, -1, -1);
      MEMORY[0x1AD11B340](v25, -1, -1);
    }
    else
    {
      if (qword_1EB76A5E8 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_1ACE754C8();
      __swift_project_value_buffer(v15, (uint64_t)qword_1EB76A5D0);
      uint64_t v16 = sub_1ACE75498();
      os_log_type_t v17 = sub_1ACE76BE8();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        uint64_t v31 = a2;
        uint64_t v32 = v19;
        *(_DWORD *)uint64_t v18 = 136315138;
        sub_1ACA55E4C();
        uint64_t v20 = sub_1ACE770B8();
        uint64_t v31 = sub_1ACA3189C(v20, v21, &v32);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v16, v17, "Could not find or create interest for adamID: %s", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v19, -1, -1);
        MEMORY[0x1AD11B340](v18, -1, -1);
      }
    }
    swift_release();
  }
}

uint64_t sub_1ACC1E8F8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACC1E930(void *a1, SEL *a2, SEL *a3, const char *a4)
{
  uint64_t v9 = *(void **)(v4 + 16);
  unint64_t v10 = (unint64_t)objc_msgSend(a1, sel_adamID);
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_5;
  }
  id v11 = objc_msgSend(v9, *a2, v10);
  if (v11)
  {
    id v16 = v11;
    [a1 *a3];
    objc_msgSend(v16, sel_setInterest_, a1);
    goto LABEL_8;
  }
  if (qword_1EB76A5E8 != -1) {
    goto LABEL_12;
  }
LABEL_5:
  uint64_t v12 = sub_1ACE754C8();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB76A5D0);
  id v16 = a1;
  double v13 = sub_1ACE75498();
  os_log_type_t v14 = sub_1ACE76C08();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 134217984;
    objc_msgSend(v16, sel_adamID);
    sub_1ACE76FF8();

    _os_log_impl(&dword_1AC9D5000, v13, v14, a4, v15, 0xCu);
    MEMORY[0x1AD11B340](v15, -1, -1);

    return;
  }

LABEL_8:
}

void sub_1ACC1EB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1ACE750A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    uint64_t v9 = sub_1ACC1DA98(a2);
    if (v9)
    {
      id v10 = v9;
      sub_1ACC1DDA4(v9);
      sub_1ACC1E930(v10, (SEL *)&selRef_channelForStoreId_, (SEL *)&selRef_setChannel_, "Could not find channel for interest: %llu. Not configuring relationship to channel.");
      sub_1ACC1E930(v10, (SEL *)&selRef_podcastForStoreId_, (SEL *)&selRef_setPodcast_, "Could not find podcast for interest: %llu. Not configuring relationship to podcast.");
      objc_msgSend(v10, sel_interestValue);
      if (v11 == -1.0)
      {
        objc_msgSend(v10, sel_setInterestValue_, 0.0);
        sub_1ACE75088();
        uint64_t v12 = (void *)sub_1ACE75008();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        objc_msgSend(v10, sel_setLastUpdatedDate_, v12);

        objc_msgSend(*(id *)(v8 + 16), sel_saveInCurrentBlock);
        swift_release();
      }
      else
      {
        if (qword_1EB76A5E8 != -1) {
          swift_once();
        }
        uint64_t v20 = sub_1ACE754C8();
        __swift_project_value_buffer(v20, (uint64_t)qword_1EB76A5D0);
        id v10 = v10;
        unint64_t v21 = sub_1ACE75498();
        os_log_type_t v22 = sub_1ACE76BE8();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = swift_slowAlloc();
          uint64_t v24 = swift_slowAlloc();
          uint64_t v29 = a2;
          uint64_t v30 = v24;
          *(_DWORD *)uint64_t v23 = 136315394;
          sub_1ACA55E4C();
          uint64_t v25 = sub_1ACE770B8();
          uint64_t v29 = sub_1ACA3189C(v25, v26, &v30);
          sub_1ACE76FF8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v23 + 12) = 2048;
          objc_msgSend(v10, sel_interestValue);
          uint64_t v29 = v27;
          sub_1ACE76FF8();

          _os_log_impl(&dword_1AC9D5000, v21, v22, "Cannot Undo Suggest Less for interest: %s because the interestValue is not suggestLess. InterestValue: %f", (uint8_t *)v23, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v24, -1, -1);
          MEMORY[0x1AD11B340](v23, -1, -1);

          swift_release();
          return;
        }

        swift_release();
      }
    }
    else
    {
      if (qword_1EB76A5E8 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_1ACE754C8();
      __swift_project_value_buffer(v13, (uint64_t)qword_1EB76A5D0);
      os_log_type_t v14 = sub_1ACE75498();
      os_log_type_t v15 = sub_1ACE76BE8();
      if (os_log_type_enabled(v14, v15))
      {
        id v16 = (uint8_t *)swift_slowAlloc();
        uint64_t v17 = swift_slowAlloc();
        uint64_t v29 = a2;
        uint64_t v30 = v17;
        *(_DWORD *)id v16 = 136315138;
        sub_1ACA55E4C();
        uint64_t v18 = sub_1ACE770B8();
        uint64_t v29 = sub_1ACA3189C(v18, v19, &v30);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v14, v15, "Could not find or create interest for adamID: %s", v16, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v17, -1, -1);
        MEMORY[0x1AD11B340](v16, -1, -1);
      }

      swift_release();
    }
  }
}

uint64_t sub_1ACC1EFF0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC1F028(id *a1)
{
  uint64_t v2 = sub_1ACE750A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*a1, sel_lastDatePlayed);
  sub_1ACE74FA8();
  char v6 = sub_1ACE75018();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

unint64_t sub_1ACC1F124()
{
  unint64_t result = qword_1E99F22C8;
  if (!qword_1E99F22C8)
  {
    sub_1ACB3E8C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F22C8);
  }
  return result;
}

uint64_t sub_1ACC1F17C(id *a1)
{
  return sub_1ACC1F028(a1) & 1;
}

uint64_t type metadata accessor for InterestStore()
{
  return self;
}

uint64_t method lookup function for InterestStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InterestStore);
}

uint64_t dispatch thunk of InterestStore.__allocating_init(ctx:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1ACC1F1F4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v33 = MEMORY[0x1E4FBC860];
  sub_1ACC82D44(0, v1, 0);
  uint64_t v2 = v33;
  uint64_t result = sub_1ACC25F24(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v26 = v3 + 80;
  int64_t v27 = v1;
  int v28 = v5;
  uint64_t v29 = v3 + 64;
  uint64_t v30 = v3;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v31 = v7;
    uint64_t v12 = *(void **)(*(void *)(v3 + 48) + 8 * v6);
    swift_bridgeObjectRetain();
    uint64_t v32 = v2;
    id v13 = v12;
    swift_bridgeObjectRetain();
    id v14 = objc_msgSend(v13, sel_description);
    uint64_t v15 = sub_1ACE761B8();
    uint64_t v17 = v16;

    sub_1ACE762C8();
    swift_bridgeObjectRetain();
    sub_1ACE762C8();
    uint64_t v2 = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v19 = *(void *)(v32 + 16);
    unint64_t v18 = *(void *)(v32 + 24);
    if (v19 >= v18 >> 1)
    {
      uint64_t result = sub_1ACC82D44(v18 > 1, v19 + 1, 1);
      uint64_t v2 = v32;
    }
    *(void *)(v2 + 16) = v19 + 1;
    uint64_t v20 = v2 + 16 * v19;
    *(void *)(v20 + 32) = v15;
    *(void *)(v20 + 40) = v17;
    uint64_t v3 = v30;
    int64_t v9 = 1 << *(unsigned char *)(v30 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v29;
    uint64_t v21 = *(void *)(v29 + 8 * v11);
    if ((v21 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v28;
    if (*(_DWORD *)(v30 + 36) != v28) {
      goto LABEL_27;
    }
    unint64_t v22 = v21 & (-2 << (v6 & 0x3F));
    if (v22)
    {
      int64_t v9 = __clz(__rbit64(v22)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v27;
    }
    else
    {
      unint64_t v23 = v11 + 1;
      unint64_t v24 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v27;
      if (v11 + 1 < v24)
      {
        unint64_t v25 = *(void *)(v29 + 8 * v23);
        if (v25)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v25)) + (v23 << 6);
        }
        else
        {
          while (v24 - 2 != v11)
          {
            unint64_t v25 = *(void *)(v26 + 8 * v11++);
            if (v25)
            {
              unint64_t v23 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v31 + 1;
    uint64_t v6 = v9;
    if (v31 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_1ACC1F4BC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1;
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1ACC82D44(0, v1, 0);
    uint64_t v4 = sub_1ACC25F24(v2);
    uint64_t v5 = 0;
    uint64_t v6 = v2 + 64;
    uint64_t v19 = v2 + 80;
    int64_t v20 = v1;
    int v21 = v3;
    uint64_t v22 = v2 + 64;
    uint64_t v23 = v2;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(v2 + 32))
    {
      unint64_t v9 = (unint64_t)v4 >> 6;
      if ((*(void *)(v6 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
        goto LABEL_23;
      }
      if (*(_DWORD *)(v2 + 36) != v3) {
        goto LABEL_24;
      }
      uint64_t v24 = v5;
      int64_t v10 = *(void **)(*(void *)(v2 + 48) + 8 * v4);
      swift_bridgeObjectRetain();
      id v25 = v10;
      swift_bridgeObjectRetain();
      sub_1ACE762C8();
      sub_1ACE762C8();
      swift_bridgeObjectRetain();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      unint64_t v12 = *(void *)(v26 + 16);
      unint64_t v11 = *(void *)(v26 + 24);
      if (v12 >= v11 >> 1) {
        sub_1ACC82D44(v11 > 1, v12 + 1, 1);
      }
      *(void *)(v26 + 16) = v12 + 1;
      uint64_t v13 = v26 + 16 * v12;
      *(void *)(v13 + 32) = 91;
      *(void *)(v13 + 40) = 0xE100000000000000;
      uint64_t v2 = v23;
      int64_t v7 = 1 << *(unsigned char *)(v23 + 32);
      if (v4 >= v7) {
        goto LABEL_25;
      }
      uint64_t v6 = v22;
      uint64_t v14 = *(void *)(v22 + 8 * v9);
      if ((v14 & (1 << v4)) == 0) {
        goto LABEL_26;
      }
      int v3 = v21;
      if (*(_DWORD *)(v23 + 36) != v21) {
        goto LABEL_27;
      }
      unint64_t v15 = v14 & (-2 << (v4 & 0x3F));
      if (v15)
      {
        int64_t v7 = __clz(__rbit64(v15)) | v4 & 0xFFFFFFFFFFFFFFC0;
        int64_t v8 = v20;
      }
      else
      {
        unint64_t v16 = v9 + 1;
        unint64_t v17 = (unint64_t)(v7 + 63) >> 6;
        int64_t v8 = v20;
        if (v9 + 1 < v17)
        {
          unint64_t v18 = *(void *)(v22 + 8 * v16);
          if (v18)
          {
LABEL_20:
            int64_t v7 = __clz(__rbit64(v18)) + (v16 << 6);
          }
          else
          {
            while (v17 - 2 != v9)
            {
              unint64_t v18 = *(void *)(v19 + 8 * v9++);
              if (v18)
              {
                unint64_t v16 = v9 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }
      uint64_t v5 = v24 + 1;
      uint64_t v4 = v7;
      if (v24 + 1 == v8) {
        return;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

uint64_t sub_1ACC1F788(uint64_t a1)
{
  *(void *)(v2 + 48) = v1;
  *(void *)(v2 + 56) = a1;
  return MEMORY[0x1F4188298](sub_1ACC1F7A8, 0, 0);
}

uint64_t sub_1ACC1F7A8()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = swift_task_alloc();
  v0[8] = v2;
  *(void *)(v2 + 16) = v0 + 6;
  *(void *)(v2 + 24) = v1;
  int v3 = (void *)swift_task_alloc();
  v0[9] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2018);
  *int v3 = v0;
  v3[1] = sub_1ACC1F8B0;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD000000000000010, 0x80000001ACEC8730, sub_1ACC27C58, v2, v4);
}

uint64_t sub_1ACC1F8B0()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1ACC1F9CC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1ACB072D4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACC1F9CC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1ACC1FA30()
{
  uint64_t v0 = sub_1ACE76CE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACE75E08();
  v10[1] = MEMORY[0x1E4FBC860];
  sub_1ACC27D2C((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t v6 = sub_1ACE76D28();
  int64_t v7 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MediaRequestController()), sel_init);
  int64_t v8 = (void **)&v7[OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_responseQueue];
  swift_beginAccess();
  unint64_t v9 = *v8;
  *int64_t v8 = (void *)v6;

  qword_1E99F3BA0 = (uint64_t)v7;
}

uint64_t sub_1ACC1FCE4()
{
  uint64_t v0 = sub_1ACE76CE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACE75E08();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1ACC27D2C((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_1ACE76D28();
  qword_1EB771C78 = result;
  return result;
}

uint64_t sub_1ACC1FF48(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = sub_1ACE76EC8();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_1ACE75118();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACC20080, 0, 0);
}

uint64_t sub_1ACC20080()
{
  uint64_t v29 = v0;
  uint64_t v1 = v0 + 5;
  unint64_t v2 = v0[5];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1ACE77508()) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_15;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1AD119490](0, *v1);
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_21;
    }
    id v4 = *(id *)(*v1 + 32);
  }
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v4, sel_managedObjectContext);
  v0[15] = v5;

  if (v5)
  {
    sub_1ACE75108();
    if (qword_1EB76D440 == -1)
    {
LABEL_8:
      uint64_t v7 = v0[13];
      uint64_t v6 = v0[14];
      uint64_t v8 = v0[10];
      uint64_t v9 = v0[11];
      uint64_t v10 = sub_1ACE754C8();
      v0[16] = __swift_project_value_buffer(v10, (uint64_t)qword_1EB76D420);
      unint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
      v0[17] = v11;
      v0[18] = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v11(v7, v6, v8);
      unint64_t v12 = sub_1ACE75498();
      os_log_type_t v13 = sub_1ACE76C08();
      BOOL v14 = os_log_type_enabled(v12, v13);
      uint64_t v15 = v0[13];
      uint64_t v16 = v0[10];
      uint64_t v17 = v0[11];
      if (v14)
      {
        unint64_t v18 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        uint64_t v28 = v27;
        *(_DWORD *)unint64_t v18 = 136315138;
        sub_1ACC27D2C(&qword_1EB76A970, MEMORY[0x1E4F27990]);
        uint64_t v19 = sub_1ACE777C8();
        v0[4] = sub_1ACA3189C(v19, v20, &v28);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        int v21 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
        v21(v15, v16);
        _os_log_impl(&dword_1AC9D5000, v12, v13, "[BatchFeedRequest] (%s) Starting", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v27, -1, -1);
        MEMORY[0x1AD11B340](v18, -1, -1);
      }
      else
      {
        int v21 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
        v21(v0[13], v0[10]);
      }

      v0[19] = v21;
      uint64_t v22 = (void *)swift_task_alloc();
      v0[20] = v22;
      *uint64_t v22 = v0;
      v22[1] = sub_1ACC20464;
      uint64_t v23 = v0[5];
      return sub_1ACC262FC(v23);
    }
LABEL_21:
    swift_once();
    goto LABEL_8;
  }
LABEL_16:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v25 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v26 = MEMORY[0x1E4FBC870];
  return v25(v26);
}

uint64_t sub_1ACC20464(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v5 = sub_1ACC207F4;
  }
  else
  {
    *(void *)(v4 + 176) = a1;
    id v5 = sub_1ACC2058C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1ACC2058C()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[6];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772580);
  id v5 = (void *)swift_task_alloc();
  v0[23] = v5;
  uint64_t v5[2] = v1;
  v5[3] = v2;
  v5[4] = v3;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[24] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1ACC206A0;
  return MEMORY[0x1F4188080](v0 + 2, v4, v4, 0, 0, &unk_1E99F3BC0, v5, v4);
}

uint64_t sub_1ACC206A0()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1ACC20DE8;
  }
  else {
    uint64_t v2 = sub_1ACC208A8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACC207F4()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 80);

  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1ACC208A8()
{
  uint64_t v1 = (void *)v0[15];
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[2];
  v0[26] = v6;
  uint64_t v7 = (void *)swift_allocObject();
  v0[27] = v7;
  void v7[2] = v5;
  v7[3] = v6;
  v7[4] = v1;
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E4F1BD78], v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v8 = v1;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[28] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1ACC209F4;
  uint64_t v10 = v0[9];
  uint64_t v11 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F40D7080](v9, v10, sub_1ACC26C2C, v7, v11);
}

uint64_t sub_1ACC209F4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  uint64_t v2 = *(void *)(*(void *)v0 + 64);
  uint64_t v3 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x1F4188298](sub_1ACC20B68, 0, 0);
}

uint64_t sub_1ACC20B68()
{
  uint64_t v18 = v0;
  (*(void (**)(void, void, void))(v0 + 136))(*(void *)(v0 + 96), *(void *)(v0 + 112), *(void *)(v0 + 80));
  uint64_t v1 = sub_1ACE75498();
  os_log_type_t v2 = sub_1ACE76C08();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 152);
    uint64_t v16 = *(void **)(v0 + 120);
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v4 = *(void *)(v0 + 80);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v17 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_1ACC27D2C(&qword_1EB76A970, MEMORY[0x1E4F27990]);
    uint64_t v7 = sub_1ACE777C8();
    *(void *)(v0 + 24) = sub_1ACA3189C(v7, v8, &v17);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    v15(v3, v4);
    _os_log_impl(&dword_1AC9D5000, v1, v2, "[BatchFeedRequest] (%s) Finished", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v6, -1, -1);
    MEMORY[0x1AD11B340](v5, -1, -1);
  }
  else
  {
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 152);
    uint64_t v10 = *(void *)(v0 + 96);
    uint64_t v11 = *(void *)(v0 + 80);

    v9(v10, v11);
  }
  (*(void (**)(void, void))(v0 + 152))(*(void *)(v0 + 112), *(void *)(v0 + 80));
  uint64_t v12 = *(void *)(v0 + 208);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v13(v12);
}

uint64_t sub_1ACC20DE8()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 80);

  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1ACC20E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  uint64_t v6 = sub_1ACE75118();
  v5[14] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[15] = v7;
  v5[16] = *(void *)(v7 + 64);
  v5[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACC20FAC, 0, 0);
}

uint64_t sub_1ACC20FAC()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(v1 + 32);
    uint64_t v29 = *(void *)(v0 + 128) + 7;
    uint64_t v30 = *(void *)(v0 + 120);
    uint64_t v4 = sub_1ACE767F8();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v28 = *(void (**)(void))(v5 + 56);
    uint64_t v27 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v26 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v31 = v2;
      uint64_t v32 = *(void *)(v0 + 152);
      uint64_t v7 = *(void *)(v0 + 136);
      uint64_t v8 = *(void *)(v0 + 112);
      uint64_t v33 = *(void *)(v0 + 104);
      uint64_t v34 = *(void *)(v0 + 144);
      uint64_t v9 = *(void *)(v0 + 96);
      uint64_t v10 = *v3;
      v28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v7, v9, v8);
      unint64_t v11 = (*(unsigned __int8 *)(v30 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v12 = (char *)swift_allocObject();
      *((void *)v12 + 2) = 0;
      *((void *)v12 + 3) = 0;
      *((void *)v12 + 4) = v10;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(&v12[v11], v7, v8);
      *(void *)&v12[(v29 + v11) & 0xFFFFFFFFFFFFFFF8] = v33;
      sub_1ACBBE50C(v32, v34);
      int v13 = (*v27)(v34, 1, v4);
      swift_bridgeObjectRetain();
      uint64_t v14 = *(void *)(v0 + 144);
      if (v13 == 1)
      {
        sub_1ACBBE574(*(void *)(v0 + 144));
      }
      else
      {
        sub_1ACE767E8();
        (*v26)(v14, v4);
      }
      if (*((void *)v12 + 2))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v15 = sub_1ACE766D8();
        uint64_t v17 = v16;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v15 = 0;
        uint64_t v17 = 0;
      }
      uint64_t v18 = **(void **)(v0 + 80);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772580);
      uint64_t v19 = v17 | v15;
      if (v17 | v15)
      {
        uint64_t v19 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v15;
        *(void *)(v0 + 40) = v17;
      }
      uint64_t v6 = *(void *)(v0 + 152);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v19;
      *(void *)(v0 + 64) = v18;
      swift_task_create();
      swift_release();
      sub_1ACBBE574(v6);
      ++v3;
      uint64_t v2 = v31 - 1;
    }
    while (v31 != 1);
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = *(void *)(v0 + 96);
  uint64_t v21 = **(void **)(v0 + 80);
  uint64_t v22 = swift_task_alloc();
  *(void *)(v0 + 160) = v22;
  *(void *)(v22 + 16) = v20;
  char v35 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))((char *)&dword_1E99F3D08 + dword_1E99F3D08);
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_1ACC21350;
  uint64_t v24 = MEMORY[0x1E4FBC870];
  return v35(v24, &unk_1E99F3D00, v22, v21);
}

uint64_t sub_1ACC21350(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1ACC214D0, 0, 0);
  }
  else
  {
    **(void **)(v4 + 72) = a1;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
}

uint64_t sub_1ACC214D0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1ACC21558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a5;
  v6[9] = a6;
  v6[6] = a1;
  v6[7] = a4;
  uint64_t v7 = sub_1ACE75118();
  v6[10] = v7;
  v6[11] = *(void *)(v7 - 8);
  v6[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACC2161C, 0, 0);
}

uint64_t sub_1ACC2161C()
{
  uint64_t v24 = v0;
  sub_1ACC1F4BC(v0[7]);
  v0[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
  sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
  uint64_t v2 = sub_1ACE76138();
  unint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (qword_1EB76D440 != -1) {
    swift_once();
  }
  uint64_t v6 = v0[11];
  uint64_t v5 = v0[12];
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[8];
  uint64_t v9 = sub_1ACE754C8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB76D420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1ACE75498();
  os_log_type_t v11 = sub_1ACE76C08();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v14 = v0[11];
  uint64_t v13 = v0[12];
  uint64_t v15 = v0[10];
  if (v12)
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v23[0] = v22;
    *(_DWORD *)uint64_t v16 = 136315394;
    sub_1ACC27D2C(&qword_1EB76A970, MEMORY[0x1E4F27990]);
    uint64_t v17 = sub_1ACE777C8();
    v0[4] = sub_1ACA3189C(v17, v18, v23);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    *(_WORD *)(v16 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[5] = sub_1ACA3189C(v2, v4, v23);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v10, v11, "[BatchFeedRequest] (%s) Sync tokens for batch - %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v22, -1, -1);
    MEMORY[0x1AD11B340](v16, -1, -1);
  }
  else
  {
    (*(void (**)(void, void))(v14 + 8))(v0[12], v0[10]);
    swift_bridgeObjectRelease_n();
  }

  uint64_t v19 = (void *)swift_task_alloc();
  v0[13] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1ACC21990;
  uint64_t v20 = v0[7];
  return sub_1ACC24DD4(v20);
}

uint64_t sub_1ACC21990(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    return MEMORY[0x1F4188298](sub_1ACC21AE4, 0, 0);
  }
}

uint64_t sub_1ACC21AE4()
{
  **(void **)(v0 + 48) = *(void *)(v0 + 112);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1ACC21B54(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  v3[4] = a1;
  v3[5] = a3;
  uint64_t v5 = sub_1ACE75118();
  v3[6] = v5;
  v3[7] = *(void *)(v5 - 8);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = *a2;
  v3[8] = v6;
  v3[9] = v7;
  return MEMORY[0x1F4188298](sub_1ACC21C1C, 0, 0);
}

uint64_t sub_1ACC21C1C()
{
  uint64_t v23 = v0;
  if (qword_1EB76D440 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[5];
  uint64_t v5 = sub_1ACE754C8();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EB76D420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1ACE75498();
  os_log_type_t v7 = sub_1ACE76C08();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[8];
  uint64_t v11 = v0[6];
  uint64_t v10 = v0[7];
  if (v8)
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = v21;
    *(_DWORD *)uint64_t v12 = 136315394;
    sub_1ACC27D2C(&qword_1EB76A970, MEMORY[0x1E4F27990]);
    uint64_t v13 = sub_1ACE777C8();
    v0[2] = sub_1ACA3189C(v13, v14, &v22);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1ACE76998();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    v0[3] = sub_1ACA3189C(v15, v17, &v22);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v6, v7, "[BatchFeedRequest] (%s) Adding out of date uuids for batch - %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v21, -1, -1);
    MEMORY[0x1AD11B340](v12, -1, -1);
  }
  else
  {
    (*(void (**)(void, void))(v10 + 8))(v0[8], v0[6]);
    swift_bridgeObjectRelease_n();
  }

  uint64_t v18 = swift_bridgeObjectRetain();
  sub_1ACDEA464(v18);
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_1ACC21F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a3;
  v4[7] = a4;
  v4[5] = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3D10);
  v4[8] = v6;
  v4[9] = *(void *)(v6 - 8);
  v4[10] = swift_task_alloc();
  v4[2] = a1;
  return MEMORY[0x1F4188298](sub_1ACC21FEC, 0, 0);
}

uint64_t sub_1ACC21FEC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772580);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
  sub_1ACE76898();
  uint64_t v1 = sub_1ACA51EA4(&qword_1E99F3D18, &qword_1E99F3D10);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1ACC22110;
  uint64_t v3 = *(void *)(v0 + 64);
  return MEMORY[0x1F4187C78](v0 + 32, v3, v1);
}

uint64_t sub_1ACC22110()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = v2[9];
    uint64_t v3 = v2[10];
    uint64_t v5 = v2[8];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_1ACC223B8;
  }
  else
  {
    uint64_t v6 = sub_1ACC22254;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1ACC22254()
{
  uint64_t v1 = v0[4];
  v0[13] = v1;
  if (v1)
  {
    uint64_t v2 = (int *)v0[5];
    v0[3] = v1;
    os_log_type_t v7 = (int *)((char *)v2 + *v2);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[14] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1ACC2241C;
    return ((uint64_t (*)(void *, void *))v7)(v0 + 2, v0 + 3);
  }
  else
  {
    (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
    swift_bridgeObjectRelease();
    uint64_t v5 = v0[2];
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
    return v6(v5);
  }
}

uint64_t sub_1ACC223B8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1ACC2241C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = v2[9];
    uint64_t v3 = v2[10];
    uint64_t v5 = v2[8];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_1ACC22658;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1ACC2257C;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1ACC2257C()
{
  uint64_t v1 = sub_1ACA51EA4(&qword_1E99F3D18, &qword_1E99F3D10);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1ACC22110;
  uint64_t v3 = *(void *)(v0 + 64);
  return MEMORY[0x1F4187C78](v0 + 32, v3, v1);
}

uint64_t sub_1ACC22658()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_1ACC226BC(unint64_t a1, uint64_t a2, void *a3)
{
  id v14 = a3;
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return objc_msgSend(v14, sel_saveInCurrentBlock);
  }
  swift_bridgeObjectRetain();
  id result = (id)sub_1ACE77508();
  uint64_t v4 = (uint64_t)result;
  if (!result) {
    goto LABEL_13;
  }
LABEL_3:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1AD119490](i, a1);
      }
      else {
        id v7 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v8 = v7;
      id v9 = objc_msgSend(v7, sel_uuid, v14);
      if (v9)
      {
        uint64_t v10 = v9;
        uint64_t v11 = sub_1ACE761B8();
        uint64_t v13 = v12;

        LOBYTE(v10) = sub_1ACCEA330(v11, v13, a2);
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0)
        {
          objc_msgSend(self, sel_timeIntervalSinceReferenceDate);
          objc_msgSend(v8, sel_setLastFetchedDate_);
        }
      }
    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACC229A0(int a1, void *aBlock)
{
  v2[2] = _Block_copy(aBlock);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F80);
  uint64_t v3 = sub_1ACE76578();
  v2[3] = v3;
  swift_getObjCClassMetadata();
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1ACC22A7C;
  return sub_1ACC1FF48(v3);
}

uint64_t sub_1ACC22A7C()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v5 = sub_1ACE74D68();

    uint64_t v6 = 0;
    id v7 = (void *)v5;
  }
  else
  {
    uint64_t v6 = sub_1ACE76978();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    id v7 = (void *)v6;
  }
  uint64_t v8 = *(void (***)(void, void, void))(v3 + 16);
  v8[2](v8, v6, v5);

  _Block_release(v8);
  id v9 = *(uint64_t (**)(void))(v4 + 8);
  return v9();
}

uint64_t sub_1ACC22C14(char a1)
{
  *(void *)(v2 + 96) = v1;
  *(unsigned char *)(v2 + 144) = a1;
  return MEMORY[0x1F4188298](sub_1ACC22C38, 0, 0);
}

uint64_t sub_1ACC22C38()
{
  if (qword_1EB76D440 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1ACE754C8();
  *(void *)(v0 + 104) = __swift_project_value_buffer(v1, (uint64_t)qword_1EB76D420);
  uint64_t v2 = sub_1ACE75498();
  os_log_type_t v3 = sub_1ACE76C08();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1AC9D5000, v2, v3, "[BatchFeedRequest] [Full Fetch] Starting", v4, 2u);
    MEMORY[0x1AD11B340](v4, -1, -1);
  }

  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 112) = v5;
  *(void *)uint64_t v5 = v0;
  *(void *)(v5 + 8) = sub_1ACC22DAC;
  char v6 = *(unsigned char *)(v0 + 144);
  *(void *)(v5 + 1352) = *(void *)(v0 + 96);
  *(unsigned char *)(v5 + 1424) = v6;
  return MEMORY[0x1F4188298](sub_1ACC237AC, 0, 0);
}

uint64_t sub_1ACC22DAC(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    char v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(unsigned char *)(v4 + 145) = a1 & 1;
    return MEMORY[0x1F4188298](sub_1ACC22EFC, 0, 0);
  }
}

uint64_t sub_1ACC22EFC()
{
  if (*(unsigned char *)(v0 + 145))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v1;
    void *v1 = v0;
    v1[1] = sub_1ACC23150;
    char v2 = *(unsigned char *)(v0 + 144);
    return sub_1ACC26E6C(v2);
  }
  else
  {
    uint64_t v4 = sub_1ACE75498();
    os_log_type_t v5 = sub_1ACE76BE8();
    if (os_log_type_enabled(v4, v5))
    {
      char v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v6 = 0;
      _os_log_impl(&dword_1AC9D5000, v4, v5, "[BatchFeedRequest] [Full Fetch] Not enough store shows in library", v6, 2u);
      MEMORY[0x1AD11B340](v6, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
    *(void *)(inited + 32) = sub_1ACE761B8();
    *(void *)(inited + 40) = v8;
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = 0xD000000000000039;
    *(void *)(inited + 56) = 0x80000001ACECD140;
    sub_1ACA3625C(inited);
    id v9 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    uint64_t v10 = (void *)sub_1ACE76178();
    uint64_t v11 = (void *)sub_1ACE75FC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_initWithDomain_code_userInfo_, v10, 0, v11);

    swift_willThrow();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_1ACC23150(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  *(void *)(v3 + 128) = a1;
  swift_task_dealloc();
  os_log_type_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 136) = v5;
  *os_log_type_t v5 = v4;
  v5[1] = sub_1ACC232A4;
  return sub_1ACC1FF48(a1);
}

uint64_t sub_1ACC232A4(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  uint64_t v5 = swift_bridgeObjectRelease();
  char v6 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v1) {
    uint64_t v5 = a1;
  }
  return v6(v5);
}

uint64_t sub_1ACC23540(char a1, void *aBlock)
{
  *(void *)(v2 + 16) = _Block_copy(aBlock);
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 24) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_1ACC2360C;
  *(void *)(v5 + 96) = ObjCClassMetadata;
  *(unsigned char *)(v5 + 144) = a1;
  return MEMORY[0x1F4188298](sub_1ACC22C38, 0, 0);
}

uint64_t sub_1ACC2360C()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v5 = sub_1ACE74D68();

    uint64_t v6 = 0;
    uint64_t v7 = (void *)v5;
  }
  else
  {
    uint64_t v6 = sub_1ACE76978();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    uint64_t v7 = (void *)v6;
  }
  uint64_t v8 = *(void (***)(void, void, void))(v3 + 16);
  v8[2](v8, v6, v5);

  _Block_release(v8);
  id v9 = *(uint64_t (**)(void))(v4 + 8);
  return v9();
}

uint64_t sub_1ACC23788(char a1)
{
  *(void *)(v2 + 1352) = v1;
  *(unsigned char *)(v2 + 1424) = a1;
  return MEMORY[0x1F4188298](sub_1ACC237AC, 0, 0);
}

uint64_t sub_1ACC237AC()
{
  uint64_t v1 = *(void *)(v0 + 1352);
  char v2 = *(unsigned char *)(v0 + 1424);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 1360) = v3;
  *(void *)(v3 + 16) = v1;
  swift_retain();
  swift_asyncLet_begin();
  id v4 = sub_1ACC26C4C(v2);
  *(void *)(v0 + 1368) = v4;
  id v5 = objc_msgSend(self, sel_sharedInstance);
  id v6 = objc_msgSend(v5, sel_privateQueueContext);
  *(void *)(v0 + 1376) = v6;

  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 1384) = v7;
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v4;
  id v8 = v6;
  id v9 = v4;
  swift_asyncLet_begin();
  return MEMORY[0x1F41881E0](v0 + 16, v0 + 1336, sub_1ACC23944, v0 + 1296);
}

uint64_t sub_1ACC23944()
{
  char v2 = v1 + 162;
  v1[174] = v0;
  if (v0) {
    return MEMORY[0x1F41881D0](v1 + 2, v1 + 167, sub_1ACC23B18, v2);
  }
  v1[175] = v1[167];
  return MEMORY[0x1F41881E0](v1 + 82, v1 + 168, sub_1ACC23990, v2);
}

uint64_t sub_1ACC23990()
{
  v1[176] = v0;
  if (v0)
  {
    char v2 = sub_1ACC23C50;
  }
  else
  {
    v1[177] = v1[168];
    char v2 = sub_1ACC239D4;
  }
  return MEMORY[0x1F41881D0](v1 + 2, v1 + 167, v2, v1 + 162);
}

uint64_t sub_1ACC239D4()
{
  return MEMORY[0x1F4188298](sub_1ACC239F0, 0, 0);
}

uint64_t sub_1ACC239F0()
{
  uint64_t v1 = *(void **)(v0 + 1368);

  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1344, sub_1ACC23A78, v0 + 16);
}

uint64_t sub_1ACC23A78()
{
  return MEMORY[0x1F4188298](sub_1ACC23A94, 0, 0);
}

uint64_t sub_1ACC23A94()
{
  swift_release_n();
  swift_release();
  uint64_t v1 = (uint64_t (*)(BOOL))v0[1];
  BOOL v2 = v0[175] >= v0[177];
  return v1(v2);
}

uint64_t sub_1ACC23B18()
{
  return MEMORY[0x1F4188298](sub_1ACC23B34, 0, 0);
}

uint64_t sub_1ACC23B34()
{
  uint64_t v1 = *(void **)(v0 + 1368);

  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1344, sub_1ACC23BBC, v0 + 16);
}

uint64_t sub_1ACC23BBC()
{
  return MEMORY[0x1F4188298](sub_1ACC23BD8, 0, 0);
}

uint64_t sub_1ACC23BD8()
{
  swift_release_n();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_1ACC23C50()
{
  return MEMORY[0x1F4188298](sub_1ACC23C6C, 0, 0);
}

uint64_t sub_1ACC23C6C()
{
  uint64_t v1 = *(void **)(v0 + 1368);

  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1344, sub_1ACC23CF4, v0 + 16);
}

uint64_t sub_1ACC23CF4()
{
  return MEMORY[0x1F4188298](sub_1ACC23D10, 0, 0);
}

uint64_t sub_1ACC23D10()
{
  swift_release_n();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_1ACC23D88(uint64_t a1)
{
  *(void *)(v1 + 136) = a1;
  return MEMORY[0x1F4188298](sub_1ACC23DA8, 0, 0);
}

uint64_t sub_1ACC23DA8()
{
  id v1 = objc_msgSend(self, sel_sharedInstance);
  id v2 = objc_msgSend(v1, sel_batchFeedFetchShowCountMinimum);
  v0[18] = v2;

  if (qword_1EB771C30 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EB771C78;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1ACC23F28;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1ACB3B384;
  v0[13] = &block_descriptor_1;
  v0[14] = v4;
  objc_msgSend(v2, sel_asyncValueOnQueue_withCompletion_, v3, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1ACC23F28()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    id v2 = sub_1ACC240C4;
  }
  else {
    id v2 = sub_1ACC24038;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACC24038()
{
  id v2 = (void *)v0[17];
  uint64_t v1 = (void *)v0[18];
  uint64_t v3 = (void *)v0[15];
  id v4 = objc_msgSend(v3, sel_integerValue);

  *id v2 = v4;
  id v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1ACC240C4()
{
  uint64_t v1 = *(void **)(v0 + 144);
  swift_willThrow();

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1ACC24134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = sub_1ACE76EC8();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACC241F8, 0, 0);
}

uint64_t sub_1ACC241F8()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v4 = (void *)v0[4];
  uint64_t v3 = v0[5];
  id v5 = (void *)v0[3];
  uint64_t v6 = swift_allocObject();
  v0[8] = v6;
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4F1BD78], v3);
  id v7 = v5;
  id v8 = v4;
  id v9 = (void *)swift_task_alloc();
  v0[9] = v9;
  *id v9 = v0;
  v9[1] = sub_1ACC24320;
  uint64_t v10 = v0[7];
  uint64_t v11 = v0[2];
  uint64_t v12 = MEMORY[0x1E4FBB550];
  return MEMORY[0x1F40D7080](v11, v10, sub_1ACC283AC, v6, v12);
}

uint64_t sub_1ACC24320()
{
  uint64_t v2 = *(void *)(*v1 + 56);
  uint64_t v3 = *(void *)(*v1 + 48);
  uint64_t v4 = *(void *)(*v1 + 40);
  uint64_t v5 = *v1;
  *(void *)(v5 + 80) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1ACC244E4, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_1ACC244E4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1ACC24548@<X0>(uint64_t *a1@<X8>)
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F80);
  uint64_t result = sub_1ACE76ED8();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1ACC245B0@<X0>(uint64_t *a1@<X8>)
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F80);
  uint64_t result = sub_1ACE76EE8();
  if (v1)
  {

    uint64_t result = MEMORY[0x1E4FBC860];
  }
  *a1 = result;
  return result;
}

uint64_t sub_1ACC2462C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = v3;
  unint64_t v6 = a1;
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v57 = a3;
    if (v8) {
      goto LABEL_3;
    }
LABEL_38:
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
LABEL_39:
    swift_bridgeObjectRelease();
    if (!v5[2])
    {
      uint64_t result = swift_bridgeObjectRelease();
LABEL_45:
      void *v57 = v4;
      return result;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result)
    {
LABEL_41:
      unint64_t v50 = v4[2];
      unint64_t v49 = v4[3];
      if (v50 >= v49 >> 1)
      {
        uint64_t result = (uint64_t)sub_1ACA436F0((void *)(v49 > 1), v50 + 1, 1, v4);
        uint64_t v4 = (void *)result;
      }
      v4[2] = v50 + 1;
      v4[v50 + 4] = v5;
      goto LABEL_45;
    }
LABEL_48:
    uint64_t result = (uint64_t)sub_1ACA436F0(0, v4[2] + 1, 1, v4);
    uint64_t v4 = (void *)result;
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1ACE77508();
  uint64_t v57 = a3;
  if (!v8) {
    goto LABEL_38;
  }
LABEL_3:
  uint64_t v9 = self;
  if (v8 < 1)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v10 = (void *)v9;
  uint64_t v11 = 0;
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v12 = v6 & 0xC000000000000001;
  uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
  unint64_t v59 = v6;
  while (1)
  {
    if (v12) {
      id v13 = (id)MEMORY[0x1AD119490](v11, v6);
    }
    else {
      id v13 = *(id *)(v6 + 8 * v11 + 32);
    }
    uint64_t v14 = v13;
    if (objc_msgSend(v10, sel_isEmpty_, objc_msgSend(v13, sel_storeCollectionId, v51, v52))) {
      goto LABEL_7;
    }
    uint64_t v15 = v8;
    unint64_t v16 = v10;
    unint64_t v17 = (unint64_t)objc_msgSend(v14, sel_storeCollectionId);
    if ((v17 & 0x8000000000000000) == 0)
    {
      if (v17)
      {
        if (v17 != 1000000000000)
        {
          id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedLongLong_, v17);
          if (v18) {
            break;
          }
        }
      }
    }
LABEL_6:
    uint64_t v10 = v16;
    uint64_t v8 = v15;
    unint64_t v6 = v59;
LABEL_7:
    ++v11;

    if (v8 == v11) {
      goto LABEL_39;
    }
  }
  uint64_t v19 = v18;
  uint64_t v58 = v4;
  uint64_t v20 = objc_msgSend(v14, sel_uuid);
  if (!v20)
  {
LABEL_5:

    goto LABEL_6;
  }
  uint64_t v4 = v20;
  uint64_t v53 = sub_1ACE761B8();
  uint64_t v22 = v21;

  uint64_t v23 = objc_msgSend(v14, sel_nextSyncToken);
  uint64_t v54 = v22;
  if (v23)
  {
    uint64_t v4 = v23;
    uint64_t v24 = sub_1ACE761B8();
    uint64_t v51 = v25;
    uint64_t v52 = v24;
  }
  else
  {
    uint64_t v51 = 0;
    uint64_t v52 = 0;
  }
  id v26 = v19;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v55 = (uint64_t)v26;
  unint64_t v29 = sub_1ACA664A4((uint64_t)v26);
  uint64_t v30 = v5[2];
  BOOL v31 = (v28 & 1) == 0;
  uint64_t v32 = v30 + v31;
  if (__OFADD__(v30, v31))
  {
    __break(1u);
    goto LABEL_47;
  }
  char v33 = v28;
  if (v5[3] >= v32)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_1ACD08174();
    }
    uint64_t v34 = (void *)v55;
    if ((v33 & 1) == 0) {
      goto LABEL_24;
    }
LABEL_29:
    os_log_type_t v42 = (uint64_t *)(v5[7] + 32 * v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *os_log_type_t v42 = v52;
    v42[1] = v51;
    v42[2] = v53;
    v42[3] = v54;
LABEL_30:

    swift_bridgeObjectRelease();
    uint64_t v4 = v58;
    if (v5[2] >= a2)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_1ACA436F0(0, v58[2] + 1, 1, v58);
      }
      id v43 = v4;
      unint64_t v44 = v4[2];
      os_log_type_t v45 = v43;
      unint64_t v46 = v43[3];
      if (v44 >= v46 >> 1) {
        os_log_type_t v45 = sub_1ACA436F0((void *)(v46 > 1), v44 + 1, 1, v45);
      }
      void v45[2] = v44 + 1;
      uint64_t v47 = &v45[v44];
      uint64_t v4 = v45;
      v47[4] = v5;
      uint64_t v19 = v34;
      uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
    }
    else
    {
      uint64_t v19 = v14;
      uint64_t v14 = v34;
    }
    goto LABEL_5;
  }
  sub_1ACD007D8(v32, isUniquelyReferenced_nonNull_native);
  uint64_t v34 = (void *)v55;
  unint64_t v35 = sub_1ACA664A4(v55);
  if ((v33 & 1) != (v36 & 1)) {
    goto LABEL_50;
  }
  unint64_t v29 = v35;
  if (v33) {
    goto LABEL_29;
  }
LABEL_24:
  v5[(v29 >> 6) + 8] |= 1 << v29;
  *(void *)(v5[6] + 8 * v29) = v34;
  uint64_t v37 = (uint64_t *)(v5[7] + 32 * v29);
  *uint64_t v37 = v52;
  v37[1] = v51;
  v37[2] = v53;
  v37[3] = v54;
  uint64_t v38 = v5[2];
  BOOL v39 = __OFADD__(v38, 1);
  uint64_t v40 = v38 + 1;
  if (!v39)
  {
    uint64_t v5[2] = v40;
    id v41 = v34;
    goto LABEL_30;
  }
  __break(1u);
LABEL_50:
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACC24AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v31[0] = sub_1ACC1F1F4(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
  sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
  uint64_t v7 = sub_1ACE76138();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v32 = 0;
  memset(v31, 0, sizeof(v31));
  char v33 = 4;
  char v30 = 1;
  char v29 = 1;
  char v28 = 4;
  char v27 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0B50);
  uint64_t inited = swift_initStackObject();
  long long v25 = xmmword_1ACE843F0;
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(unsigned char *)(inited + 32) = 3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = v25;
  *(void *)(v11 + 32) = v7;
  *(void *)(v11 + 40) = v9;
  *(void *)(inited + 40) = v11;
  unint64_t v12 = sub_1ACA3623C(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3C58);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = v25;
  *(unsigned char *)(v13 + 32) = 1;
  *(void *)(v13 + 40) = &unk_1F0380AA8;
  unint64_t v14 = sub_1ACA376D0(v13);
  char v26 = 1;
  uint64_t v15 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  unint64_t v17 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v18 = sub_1ACA35F90(v16);
  unint64_t v19 = sub_1ACA35FB0(v16);
  *((void *)&v24 + 1) = v14;
  *(void *)&long long v24 = v12;
  *((void *)&v23 + 1) = v16;
  *((void *)&v22 + 1) = v16;
  *(void *)&long long v23 = &unk_1F0380A80;
  *((void *)&v21 + 1) = sub_1ACA360BC(v16);
  *(void *)&long long v22 = sub_1ACA360BC(v16);
  *(void *)&long long v21 = &unk_1F0380A40;
  return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(v31, &v30, &v29, &v28, v17, v18, v19, v16, a2, v21, v22, v23, v16, &v27, 0, 1, v24, 0, 1,
           &v26,
           0,
           (uint64_t)v6,
           0,
           0,
           0,
           0,
           0,
           v16,
           0,
           0,
           2);
}

uint64_t sub_1ACC24DD4(uint64_t a1)
{
  v2[17] = a1;
  v2[18] = v1;
  type metadata accessor for MediaRequest.Params();
  v2[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACC24E64, 0, 0);
}

uint64_t sub_1ACC24E64()
{
  sub_1ACC24AD8(v0[17], v0[19]);
  if (qword_1E99F0088 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1E99F3BA0;
  v0[20] = qword_1E99F3BA0;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1E99F3C48 + dword_1E99F3C48);
  v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[21] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1ACC24F68;
  uint64_t v3 = v0[19];
  return v5(v3);
}

uint64_t sub_1ACC24F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void **)v5;
  uint64_t v7 = *(void **)(*(void *)v5 + 160);
  v6[22] = a3;
  v6[23] = a4;
  v6[24] = v4;
  swift_task_dealloc();

  if (v4) {
    uint64_t v8 = sub_1ACC254F8;
  }
  else {
    uint64_t v8 = sub_1ACC25098;
  }
  return MEMORY[0x1F4188298](v8, 0, 0);
}

uint64_t sub_1ACC25098()
{
  uint64_t v1 = v0 + 15;
  unint64_t v3 = v0[23];
  uint64_t v2 = (void *)v0[24];
  uint64_t v4 = v0[22];
  sub_1ACE748C8();
  swift_allocObject();
  sub_1ACA3985C(v4, v3);
  sub_1ACE748B8();
  sub_1ACC27C04();
  sub_1ACE748A8();
  uint64_t v5 = v2;
  sub_1ACA50850(v4, v3);
  swift_release();
  if (v2)
  {
    uint64_t v7 = v0[22];
    unint64_t v6 = v0[23];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
    *(void *)(inited + 32) = sub_1ACE761B8();
    *(void *)(inited + 40) = v9;
    swift_getErrorValue();
    uint64_t v10 = v0[12];
    uint64_t v11 = v0[13];
    *(void *)(inited + 72) = v11;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(boxed_opaque_existential_1, v10, v11);
    sub_1ACA3625C(inited);
    id v13 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    unint64_t v14 = (void *)sub_1ACE76178();
    uint64_t v15 = (void *)sub_1ACE75FC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_initWithDomain_code_userInfo_, v14, 0, v15);

    swift_willThrow();
    sub_1ACA50850(v7, v6);
    sub_1ACA39598(v0[19]);
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
  else
  {
    uint64_t v18 = *(void *)(*v1 + 16);
    unint64_t v19 = MEMORY[0x1E4FBC860];
    if (v18)
    {
      uint64_t v20 = (unsigned char *)(*v1 + 40);
      uint64_t v21 = MEMORY[0x1E4FBC860];
      do
      {
        if ((*v20 & 1) == 0)
        {
          id v25 = *((id *)v20 - 1);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1ACC83290(0, *(void *)(v21 + 16) + 1, 1);
          }
          unint64_t v23 = *(void *)(v21 + 16);
          unint64_t v22 = *(void *)(v21 + 24);
          if (v23 >= v22 >> 1) {
            sub_1ACC83290(v22 > 1, v23 + 1, 1);
          }
          *(void *)(v21 + 16) = v23 + 1;
          uint64_t v24 = v21 + 16 * v23;
          *(void *)(v24 + 32) = v25;
          *(unsigned char *)(v24 + 40) = 0;
        }
        v20 += 16;
        --v18;
      }
      while (v18);
    }
    else
    {
      uint64_t v21 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(v21 + 16);
    if (v26)
    {
      swift_retain();
      uint64_t v27 = 32;
      do
      {
        id v28 = *(id *)(v21 + v27);
        MEMORY[0x1AD118700]();
        if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1ACE765C8();
        }
        sub_1ACE76628();
        sub_1ACE76598();
        v27 += 16;
        --v26;
      }
      while (v26);
      swift_release();
    }
    uint64_t v30 = v0[22];
    unint64_t v29 = v0[23];
    uint64_t v31 = v0[19];
    uint64_t v32 = v0[17];
    swift_release();
    swift_bridgeObjectRetain();
    char v33 = sub_1ACC26138(v19, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_1ACB02BC0((uint64_t)v33);
    swift_bridgeObjectRelease();
    sub_1ACA50850(v30, v29);
    sub_1ACA39598(v31);
    swift_task_dealloc();
    unint64_t v35 = (uint64_t (*)(uint64_t))v0[1];
    return v35(v34);
  }
}

uint64_t sub_1ACC254F8()
{
  swift_willThrow();
  sub_1ACA39598(*(void *)(v0 + 152));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id BatchFeedRequestController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id BatchFeedRequestController.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BatchFeedRequestController();
  return objc_msgSendSuper2(&v2, sel_init);
}

id BatchFeedRequestController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BatchFeedRequestController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACC25658()
{
  return sub_1ACC25A20();
}

uint64_t sub_1ACC25668()
{
  return sub_1ACC25AA0();
}

uint64_t sub_1ACC25678@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA598(a1);
}

uint64_t sub_1ACC25684@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA5F4(a1);
}

uint64_t sub_1ACC25690(uint64_t a1)
{
  unint64_t v2 = sub_1ACC27638();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC256CC(uint64_t a1)
{
  unint64_t v2 = sub_1ACC27638();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1ACC25708@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1ACC274C0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1ACC25734(char *a1, char *a2)
{
  return sub_1ACCF5850(*a1, *a2);
}

uint64_t sub_1ACC25740()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC257B0()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC2580C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC25878@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1ACC258D8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 25705;
  if (*v1) {
    uint64_t v2 = 1635018093;
  }
  unint64_t v3 = 0xE200000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ACC25904()
{
  if (*v0) {
    return 1635018093;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1ACC2592C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1ACC25990(uint64_t a1)
{
  unint64_t v2 = sub_1ACC27B08();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC259CC(uint64_t a1)
{
  unint64_t v2 = sub_1ACC27B08();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACC25A08()
{
  return sub_1ACC25A20();
}

uint64_t sub_1ACC25A20()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC25A70()
{
  return sub_1ACE76108();
}

uint64_t sub_1ACC25A88()
{
  return sub_1ACC25AA0();
}

uint64_t sub_1ACC25AA0()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC25AEC@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA598(a1);
}

void sub_1ACC25AF8(void *a1@<X8>)
{
  *a1 = 0x6465636E79537369;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1ACC25B14()
{
  return 0x6465636E79537369;
}

uint64_t sub_1ACC25B2C@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA5F4(a1);
}

uint64_t sub_1ACC25B38(uint64_t a1)
{
  unint64_t v2 = sub_1ACC27BB0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC25B74(uint64_t a1)
{
  unint64_t v2 = sub_1ACC27BB0();
  return MEMORY[0x1F41862B0](a1, v2);
}

id sub_1ACC25BB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id result = sub_1ACC27754(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
  }
  return result;
}

uint64_t sub_1ACC25BE4(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  char v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *char v4 = v3;
  v4[1] = sub_1ACA51034;
  return v6();
}

uint64_t sub_1ACC25CB0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  char v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *char v5 = v4;
  v5[1] = sub_1ACA51034;
  return v7();
}

uint64_t sub_1ACC25D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE767F8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1ACE767E8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1ACBBE574(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1ACE766D8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1ACC25F24(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1ACC25FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2030);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1ACB07CC0;
  *(void *)(v10 + 24) = v9;
  swift_retain();
  sub_1ACB0443C(a3, 0, (uint64_t)sub_1ACB068BC, v10);
  swift_release();
  return swift_release();
}

void *sub_1ACC26138(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1ACE77508();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      unint64_t v5 = v3 & 0xC000000000000001;
      uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v7 = 4;
      unint64_t v22 = v3 & 0xC000000000000001;
      unint64_t v23 = v3;
      while (1)
      {
        uint64_t v8 = v7 - 4;
        if (v5)
        {
          id v9 = (id)MEMORY[0x1AD119490](v7 - 4, v3);
          uint64_t v10 = v7 - 3;
          if (__OFADD__(v8, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          id v9 = *(id *)(v3 + 8 * v7);
          uint64_t v10 = v7 - 3;
          if (__OFADD__(v8, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        if (*(void *)(a2 + 16))
        {
          id v11 = v9;
          unint64_t v12 = sub_1ACA664A4((uint64_t)v11);
          if (v13)
          {
            uint64_t v14 = v4;
            uint64_t v15 = *(void *)(a2 + 56) + 32 * v12;
            uint64_t v16 = *(void *)(v15 + 16);
            uint64_t v17 = *(void *)(v15 + 24);
            swift_bridgeObjectRetain();

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v6 = sub_1ACA41EA0(0, v6[2] + 1, 1, v6);
            }
            unint64_t v19 = v6[2];
            unint64_t v18 = v6[3];
            if (v19 >= v18 >> 1) {
              uint64_t v6 = sub_1ACA41EA0((void *)(v18 > 1), v19 + 1, 1, v6);
            }
            v6[2] = v19 + 1;
            uint64_t v20 = &v6[2 * v19];
            v20[4] = v16;
            v20[5] = v17;
            uint64_t v4 = v14;
            unint64_t v3 = v23;
            unint64_t v5 = v22;
          }
          else
          {
          }
        }
        else
        {
        }
        ++v7;
        if (v10 == v4) {
          goto LABEL_22;
        }
      }
    }
  }
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
LABEL_22:
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1ACC262FC(uint64_t a1)
{
  v1[18] = a1;
  uint64_t v2 = sub_1ACE76EC8();
  v1[19] = v2;
  v1[20] = *(void *)(v2 - 8);
  v1[21] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACC263BC, 0, 0);
}

uint64_t sub_1ACC263BC()
{
  unint64_t v2 = v0[18];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1ACE77508()) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1AD119490](0, v0[18]);
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_18;
    }
    id v4 = *(id *)(v0[18] + 32);
  }
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v4, sel_managedObjectContext);
  v0[22] = v5;

  if (v5)
  {
    unint64_t v1 = v0 + 15;
    id v6 = objc_msgSend(self, sel_sharedInstance);
    unint64_t v2 = (unint64_t)objc_msgSend(v6, sel_batchFeedFetchShowBatchSize);
    v0[23] = v2;

    if (qword_1EB771C30 == -1)
    {
LABEL_8:
      uint64_t v7 = qword_1EB771C78;
      v0[2] = v0;
      v0[7] = v1;
      v0[3] = sub_1ACC26644;
      uint64_t v8 = swift_continuation_init();
      v0[10] = MEMORY[0x1E4F143A8];
      v0[11] = 0x40000000;
      v0[12] = sub_1ACB3B384;
      v0[13] = &block_descriptor_101;
      v0[14] = v8;
      objc_msgSend((id)v2, sel_asyncValueOnQueue_withCompletion_, v7, v0 + 10);
      return MEMORY[0x1F41881E8](v0 + 2);
    }
LABEL_18:
    swift_once();
    goto LABEL_8;
  }
LABEL_13:
  swift_task_dealloc();
  id v9 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v10 = MEMORY[0x1E4FBC860];
  return v9(v10);
}

uint64_t sub_1ACC26644()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 192) = v1;
  if (v1) {
    unint64_t v2 = sub_1ACC26A98;
  }
  else {
    unint64_t v2 = sub_1ACC26754;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACC26754()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v3 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v5 = v0[18];
  uint64_t v4 = v0[19];
  id v6 = (void *)v0[15];
  id v7 = objc_msgSend(v6, sel_integerValue);

  uint64_t v8 = swift_allocObject();
  v0[25] = v8;
  *(void *)(v8 + 16) = v5;
  *(void *)(v8 + 24) = v7;
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E4F1BD78], v4);
  swift_bridgeObjectRetain();
  id v9 = (void *)swift_task_alloc();
  v0[26] = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3D20);
  *id v9 = v0;
  v9[1] = sub_1ACC268B0;
  uint64_t v11 = v0[21];
  return MEMORY[0x1F40D7080](v0 + 17, v11, sub_1ACC286B8, v8, v10);
}

uint64_t sub_1ACC268B0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  uint64_t v2 = *(void *)(*(void *)v0 + 160);
  uint64_t v3 = *(void *)(*(void *)v0 + 152);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x1F4188298](sub_1ACC26A24, 0, 0);
}

uint64_t sub_1ACC26A24()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1ACC26A98()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = (void *)v0[22];
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1ACC26B20(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  id v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *id v9 = v3;
  v9[1] = sub_1ACA51034;
  return sub_1ACC20E9C(a1, a2, v6, v7, v8);
}

uint64_t sub_1ACC26BE4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1ACC26C2C()
{
  return sub_1ACC226BC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

id sub_1ACC26C4C(char a1)
{
  sub_1ACE761B8();
  id v2 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v3 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_predicateForAreMediaAPI_, 1);
  id v7 = objc_msgSend(v5, sel_predicateForNotHiddenPodcasts);
  id v8 = objc_msgSend(v6, sel_AND_, v7);

  if ((a1 & 1) == 0)
  {
    id v9 = v8;
    id v10 = objc_msgSend(v5, sel_predicateForNotImplicitlyFollowedPodcasts);
    id v8 = objc_msgSend(v9, sel_AND_, v10);
  }
  objc_msgSend(v4, sel_setPredicate_, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769598);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1ACE84470;
  uint64_t v12 = sub_1ACE761B8();
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v14;
  uint64_t v15 = sub_1ACE761B8();
  *(void *)(v11 + 88) = v13;
  *(void *)(v11 + 64) = v15;
  *(void *)(v11 + 72) = v16;
  uint64_t v17 = sub_1ACE761B8();
  *(void *)(v11 + 120) = v13;
  *(void *)(v11 + 96) = v17;
  *(void *)(v11 + 104) = v18;
  unint64_t v19 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setPropertiesToFetch_, v19);

  return v4;
}

uint64_t sub_1ACC26E6C(char a1)
{
  *(unsigned char *)(v1 + 80) = a1;
  uint64_t v2 = sub_1ACE76EC8();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = *(void *)(v2 - 8);
  *(void *)(v1 + 40) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACC26F2C, 0, 0);
}

uint64_t sub_1ACC26F2C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 24);
  id v4 = sub_1ACC26C4C(*(unsigned char *)(v0 + 80));
  *(void *)(v0 + 48) = v4;
  id v5 = objc_msgSend(self, sel_sharedInstance);
  id v6 = objc_msgSend(v5, sel_privateQueueContext);
  *(void *)(v0 + 56) = v6;

  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 64) = v7;
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v4;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4F1BD78], v3);
  v6;
  id v8 = v4;
  id v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3CC0);
  *id v9 = v0;
  v9[1] = sub_1ACC270C0;
  uint64_t v11 = *(void *)(v0 + 40);
  return MEMORY[0x1F40D7080](v0 + 16, v11, sub_1ACC28228, v7, v10);
}

uint64_t sub_1ACC270C0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 32);
  uint64_t v3 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x1F4188298](sub_1ACC27234, 0, 0);
}

uint64_t sub_1ACC27234()
{
  uint64_t v1 = *(void **)(v0 + 56);

  uint64_t v2 = *(void *)(v0 + 16);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t type metadata accessor for BatchFeedRequestController()
{
  return self;
}

uint64_t method lookup function for BatchFeedRequestController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BatchFeedRequestController);
}

uint64_t dispatch thunk of static BatchFeedRequestController.fetchOutOfDateShowUUIDs(with:)(uint64_t a1)
{
  id v6 = (uint64_t (*)(uint64_t))(*(void *)(v1 + 80) + **(int **)(v1 + 80));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_1ACC28C6C;
  return v6(a1);
}

uint64_t dispatch thunk of static BatchFeedRequestController.fetchOutOfDateShowUUIDs(includeImplicit:)(uint64_t a1)
{
  id v6 = (uint64_t (*)(uint64_t))(*(void *)(v1 + 88) + **(int **)(v1 + 88));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_1ACB7B504;
  return v6(a1);
}

void *sub_1ACC274C0(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3BF8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC27638();
  sub_1ACE77C48();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3C08);
    sub_1ACC2768C();
    sub_1ACE77698();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1ACC27638()
{
  unint64_t result = qword_1E99F3C00;
  if (!qword_1E99F3C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3C00);
  }
  return result;
}

unint64_t sub_1ACC2768C()
{
  unint64_t result = qword_1E99F3C10;
  if (!qword_1E99F3C10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F3C08);
    sub_1ACC27700();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3C10);
  }
  return result;
}

unint64_t sub_1ACC27700()
{
  unint64_t result = qword_1E99F3C18;
  if (!qword_1E99F3C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3C18);
  }
  return result;
}

id sub_1ACC27754(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3C20);
  uint64_t v23 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3C28);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = (id)a1[3];
  uint64_t v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v10);
  sub_1ACC27B08();
  sub_1ACE77C48();
  if (!v1)
  {
    uint64_t v21 = v5;
    uint64_t v22 = v7;
    char v26 = 0;
    unint64_t v11 = sub_1ACE77658();
    uint64_t v13 = sub_1ACD1C588(v11, v12);
    uint64_t v14 = v22;
    id v10 = (id)v13;
    swift_bridgeObjectRelease();
    if (v10) {
      BOOL v15 = v10 == (id)1000000000000;
    }
    else {
      BOOL v15 = 1;
    }
    if (!v15)
    {
      id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedLongLong_, v10);
      if (v17)
      {
        uint64_t v18 = v17;
        char v25 = 1;
        sub_1ACC27BB0();
        id v10 = v18;
        unint64_t v19 = v21;
        sub_1ACE775D8();
        sub_1ACE77668();
        uint64_t v20 = v22;
        (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v3);
        (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v6);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);

        return v10;
      }
    }
    sub_1ACC27B5C();
    swift_allocError();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v6);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
  return v10;
}

unint64_t sub_1ACC27B08()
{
  unint64_t result = qword_1E99F3C30;
  if (!qword_1E99F3C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3C30);
  }
  return result;
}

unint64_t sub_1ACC27B5C()
{
  unint64_t result = qword_1E99F3C38;
  if (!qword_1E99F3C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3C38);
  }
  return result;
}

unint64_t sub_1ACC27BB0()
{
  unint64_t result = qword_1E99F3C40;
  if (!qword_1E99F3C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3C40);
  }
  return result;
}

unint64_t sub_1ACC27C04()
{
  unint64_t result = qword_1E99F3C50;
  if (!qword_1E99F3C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3C50);
  }
  return result;
}

uint64_t sub_1ACC27C58(uint64_t a1)
{
  return sub_1ACC25FAC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1ACC27C60()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2030);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1ACC27CF4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC27D2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACC27D74()
{
  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1ACC27DAC()
{
  char v2 = *(unsigned char *)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1ACA50B84;
  uint64_t v5 = (uint64_t (*)(char, void *))((char *)&dword_1E99F3C60 + dword_1E99F3C60);
  return v5(v2, v3);
}

uint64_t sub_1ACC27E64()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1ACA51034;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1E99F3C70 + dword_1E99F3C70);
  return v6(v2, v3, v4);
}

uint64_t sub_1ACC27F28(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1ACA51034;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1E99F3C80 + dword_1E99F3C80);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1ACC27FF4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1ACA51034;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E99F3C90 + dword_1E99F3C90);
  return v6(a1, v4);
}

uint64_t sub_1ACC280AC()
{
  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1ACC280EC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1ACA51034;
  uint64_t v5 = (uint64_t (*)(int, void *))((char *)&dword_1E99F3CA0 + dword_1E99F3CA0);
  return v5(v2, v3);
}

uint64_t objectdestroy_32Tm_0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC281E8()
{
  return swift_deallocObject();
}

uint64_t sub_1ACC28228@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACC245B0(a1);
}

uint64_t sub_1ACC28244()
{
  return swift_deallocObject();
}

uint64_t sub_1ACC28254(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1ACA51034;
  v3[17] = a1;
  return MEMORY[0x1F4188298](sub_1ACC23DA8, 0, 0);
}

uint64_t sub_1ACC28300(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1ACA51034;
  return sub_1ACC24134(a1, v5, v4);
}

uint64_t sub_1ACC283AC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACC24548(a1);
}

uint64_t sub_1ACC283C8()
{
  uint64_t v1 = sub_1ACE75118();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1ACC284A8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1ACE75118() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *unint64_t v11 = v2;
  v11[1] = sub_1ACA50B84;
  return sub_1ACC21558(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_1ACC285D4(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1ACA51034;
  return sub_1ACC21B54(a1, a2, v6);
}

uint64_t sub_1ACC28680()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACC286B8@<X0>(void *a1@<X8>)
{
  return sub_1ACC2462C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

ValueMetadata *type metadata accessor for BatchFeedRequestReponse.DecodingError()
{
  return &type metadata for BatchFeedRequestReponse.DecodingError;
}

unsigned char *storeEnumTagSinglePayload for BatchFeedRequestReponse.ShowData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC287B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchFeedRequestReponse.ShowData.CodingKeys()
{
  return &type metadata for BatchFeedRequestReponse.ShowData.CodingKeys;
}

ValueMetadata *type metadata accessor for BatchFeedRequestReponse.ShowData.MetadataCodingKeys()
{
  return &type metadata for BatchFeedRequestReponse.ShowData.MetadataCodingKeys;
}

unsigned char *_s18PodcastsFoundation23BatchFeedRequestReponseV13DecodingErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACC28898);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchFeedRequestReponse.CodingKeys()
{
  return &type metadata for BatchFeedRequestReponse.CodingKeys;
}

ValueMetadata *type metadata accessor for BatchFeedRequestReponse()
{
  return &type metadata for BatchFeedRequestReponse;
}

ValueMetadata *type metadata accessor for BatchFeedRequestReponse.ShowData()
{
  return &type metadata for BatchFeedRequestReponse.ShowData;
}

unint64_t sub_1ACC288F4()
{
  unint64_t result = qword_1E99F3D28;
  if (!qword_1E99F3D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3D28);
  }
  return result;
}

unint64_t sub_1ACC2894C()
{
  unint64_t result = qword_1E99F3D30;
  if (!qword_1E99F3D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3D30);
  }
  return result;
}

unint64_t sub_1ACC289A4()
{
  unint64_t result = qword_1E99F3D38;
  if (!qword_1E99F3D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3D38);
  }
  return result;
}

unint64_t sub_1ACC289FC()
{
  unint64_t result = qword_1E99F3D40;
  if (!qword_1E99F3D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3D40);
  }
  return result;
}

unint64_t sub_1ACC28A54()
{
  unint64_t result = qword_1E99F3D48;
  if (!qword_1E99F3D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3D48);
  }
  return result;
}

unint64_t sub_1ACC28AAC()
{
  unint64_t result = qword_1E99F3D50;
  if (!qword_1E99F3D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3D50);
  }
  return result;
}

unint64_t sub_1ACC28B04()
{
  unint64_t result = qword_1E99F3D58;
  if (!qword_1E99F3D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3D58);
  }
  return result;
}

unint64_t sub_1ACC28B5C()
{
  unint64_t result = qword_1E99F3D60;
  if (!qword_1E99F3D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3D60);
  }
  return result;
}

unint64_t sub_1ACC28BB4()
{
  unint64_t result = qword_1E99F3D68;
  if (!qword_1E99F3D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3D68);
  }
  return result;
}

unint64_t sub_1ACC28C0C()
{
  unint64_t result = qword_1E99F3D70;
  if (!qword_1E99F3D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3D70);
  }
  return result;
}

void *InterestStateController.__allocating_init(dataSource:)(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (void *)swift_allocObject();
  unint64_t v5 = sub_1ACA3A6A8(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8A0);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(void *)(v6 + 16) = v5;
  v4[4] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8B0);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 20) = 0;
  *(unsigned char *)(v7 + 16) = 0;
  v4[5] = v7;
  v4[2] = a1;
  v4[3] = a2;
  return v4;
}

void *InterestStateController.init(dataSource:)(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_1ACA3A6A8(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8A0);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(void *)(v6 + 16) = v5;
  v2[4] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8B0);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 20) = 0;
  *(unsigned char *)(v7 + 16) = 0;
  v2[5] = v7;
  v2[2] = a1;
  v2[3] = a2;
  return v2;
}

void sub_1ACC28D9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(os_unfair_lock_s **)(v0 + 40);
  int v3 = (char *)&v2[4];
  unsigned int v4 = v2 + 5;
  os_unfair_lock_lock(v2 + 5);
  sub_1ACC28E68(v3, &v9);
  os_unfair_lock_unlock(v4);
  if (v9)
  {
    uint64_t v5 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v5 + 24);
    uint64_t v8 = swift_unknownObjectRetain();
    v7(v8, &protocol witness table for InterestStateController, ObjectType, v5);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
  }
}

char *sub_1ACC28E68@<X0>(char *result@<X0>, BOOL *a2@<X8>)
{
  char v2 = *result;
  *unint64_t result = 1;
  *a2 = (v2 & 1) == 0;
  return result;
}

uint64_t InterestStateController.stateMachine(for:)()
{
  sub_1ACC28D9C();
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 32);
  char v2 = (uint64_t *)&v1[4];
  int v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACC29480(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1ACC28EEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *a1;
  if (*(void *)(*a1 + 16) && (uint64_t v9 = sub_1ACA65CC4(a2), (v10 & 1) != 0))
  {
    *a4 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
    return swift_retain();
  }
  else
  {
    uint64_t v12 = *(void *)(a3 + 24);
    uint64_t ObjectType = swift_getObjectType();
    char v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(a2, ObjectType, v12);
    if (v14 == 4) {
      char v15 = 3;
    }
    else {
      char v15 = v14;
    }
    type metadata accessor for InterestStateMachine();
    uint64_t v16 = swift_allocObject();
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28FD0]), sel_init);
    *(void *)(v16 + 40) = MEMORY[0x1E4FBC860];
    *(void *)(v16 + 16) = v17;
    *(void *)(v16 + 24) = a2;
    *(unsigned char *)(v16 + 32) = v15;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *a1;
    *a1 = 0x8000000000000000;
    sub_1ACD0E014(v16, a2, isUniquelyReferenced_nonNull_native);
    *a1 = v19;
    uint64_t result = swift_bridgeObjectRelease();
    *a4 = v16;
  }
  return result;
}

uint64_t sub_1ACC2902C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  unsigned __int8 v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(a1, ObjectType, v3);
  int v6 = v5;
  char v7 = v5;
  sub_1ACC28D9C();
  MEMORY[0x1F4188790](v8);
  char v10 = (uint64_t *)&v9[4];
  unint64_t v11 = v9 + 6;
  os_unfair_lock_lock(v9 + 6);
  sub_1ACC29500(v10, v23);
  os_unfair_lock_unlock(v11);
  uint64_t v12 = v23[0];
  swift_beginAccess();
  objc_msgSend(*(id *)(v12 + 16), sel_lock);
  if ((sub_1ACCF4500(*(unsigned char *)(v12 + 32), v7) & 1) == 0)
  {
    *(unsigned char *)(v12 + 32) = v7;
    sub_1ACC2AD88();
  }
  objc_msgSend(*(id *)(v12 + 16), sel_unlock);
  if (qword_1EB76A5E8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1ACE754C8();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EB76A5D0);
  char v14 = sub_1ACE75498();
  os_log_type_t v15 = sub_1ACE76C08();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v22 = v17;
    *(_DWORD *)uint64_t v16 = 136315394;
    sub_1ACA55E4C();
    uint64_t v18 = sub_1ACE770B8();
    sub_1ACA3189C(v18, v19, &v22);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    unint64_t v20 = 0xEB00000000737365;
    uint64_t result = 0x4C74736567677573;
    switch(v6)
    {
      case 0:
        goto LABEL_10;
      case 1:
        unint64_t v20 = 0xE700000000000000;
        uint64_t result = 0x6C61727475656ELL;
        goto LABEL_10;
      case 2:
        unint64_t v20 = 0xE900000000000064;
        uint64_t result = 0x657469726F766166;
        goto LABEL_10;
      case 3:
        unint64_t v20 = 0xE700000000000000;
        uint64_t result = 0x6E776F6E6B6E75;
LABEL_10:
        sub_1ACA3189C(result, v20, &v22);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v14, v15, "Successfully transition interest with adamID %s to %s state.", (uint8_t *)v16, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v17, -1, -1);
        MEMORY[0x1AD11B340](v16, -1, -1);
        break;
      default:
        return result;
    }
  }

  return swift_release();
}

Swift::Void __swiftcall InterestStateController.refreshStates(for:)(Swift::OpaquePointer a1)
{
  uint64_t v1 = *((void *)a1._rawValue + 2);
  if (v1)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v1; ++i)
    {
      uint64_t v4 = *((void *)a1._rawValue + i + 4);
      sub_1ACC2902C(v4);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t InterestStateController.deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t InterestStateController.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACC29480@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACC28EEC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t dispatch thunk of InterestStateDataSourceDelegate.refreshStates(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for InterestStateController()
{
  return self;
}

uint64_t method lookup function for InterestStateController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InterestStateController);
}

uint64_t dispatch thunk of InterestStateController.__allocating_init(dataSource:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1ACC29500@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACC29480(a1, a2);
}

uint64_t dispatch thunk of InMemorySizable.inMemorySize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

BOOL sub_1ACC2952C(uint64_t a1)
{
  return *(void *)(a1 + 16) != 0;
}

uint64_t sub_1ACC2953C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v11 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1ACC878F4(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    unint64_t v5 = 0;
    uint64_t v3 = v11;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)sub_1ACC2A0B0(v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      id v7 = v6;
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_1ACC878F4(v8 > 1, v9 + 1, 1);
      }
      ++v5;
      *(void *)(v11 + 16) = v9 + 1;
      uint64_t v10 = v11 + 24 * v9;
      *(void *)(v10 + 32) = v7;
      *(void *)(v10 + 40) = 0;
      *(unsigned char *)(v10 + 48) = 1;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACC29698(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1ACC878F4(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v7 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v8 >> 1) {
        sub_1ACC878F4(v8 > 1, v7 + 1, 1);
      }
      v4 += 2;
      *(void *)(v11 + 16) = v7 + 1;
      uint64_t v9 = v11 + 24 * v7;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      *(unsigned char *)(v9 + 48) = 2;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t GroupedContentIDs.adamIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*GroupedContentIDs.adamIDs.modify())()
{
  return nullsub_1;
}

uint64_t GroupedContentIDs.managedObjectIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GroupedContentIDs.managedObjectIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*GroupedContentIDs.managedObjectIDs.modify())()
{
  return nullsub_1;
}

uint64_t GroupedContentIDs.uuids.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GroupedContentIDs.uuids.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*GroupedContentIDs.uuids.modify())()
{
  return nullsub_1;
}

uint64_t static GroupedContentIDs.== infix(_:_:)(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  if (!sub_1ACA87A68(a1, a4) || (sub_1ACA87AD4(a2, a5) & 1) == 0) {
    return 0;
  }
  return sub_1ACA87D64(a3, a6);
}

uint64_t sub_1ACC29900(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  if (!sub_1ACA87A68(*(void **)a1, *(void **)a2) || (sub_1ACA87AD4(v2, v4) & 1) == 0) {
    return 0;
  }
  return sub_1ACA87D64(v3, v5);
}

uint64_t GroupedContentIDs.localIDs.getter(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1ACC2953C(a2);
  swift_bridgeObjectRelease();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1ACC29698(v4);
  swift_bridgeObjectRelease();
  sub_1ACA70558(v5);
  return v3;
}

void *Array<A>.group()(uint64_t a1)
{
  uint64_t v14 = MEMORY[0x1E4FBC860];
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = (unsigned char *)(swift_bridgeObjectRetain() + 48);
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v5 = (void *)*((void *)v2 - 2);
    if (*v2)
    {
      uint64_t v6 = *((void *)v2 - 1);
      if (*v2 == 1)
      {
        id v7 = v5;
        MEMORY[0x1AD118700]();
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1ACE765C8();
        }
        sub_1ACE76628();
        sub_1ACE76598();
        sub_1ACA50D28(v5, v6, 1);
      }
      else
      {
        sub_1ACA50CB8(*((id *)v2 - 2), *((void *)v2 - 1), 2);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1ACA41EA0(0, v3[2] + 1, 1, v3);
        }
        unint64_t v11 = v3[2];
        unint64_t v10 = v3[3];
        if (v11 >= v10 >> 1) {
          uint64_t v3 = sub_1ACA41EA0((void *)(v10 > 1), v11 + 1, 1, v3);
        }
        v3[2] = v11 + 1;
        uint64_t v12 = &v3[2 * v11];
        v12[4] = v5;
        v12[5] = v6;
        sub_1ACA50D28(v5, v6, 2);
      }
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_1ACA41D90(0, v4[2] + 1, 1, v4);
      }
      unint64_t v9 = v4[2];
      unint64_t v8 = v4[3];
      if (v9 >= v8 >> 1) {
        uint64_t v4 = sub_1ACA41D90((void *)(v8 > 1), v9 + 1, 1, v4);
      }
      v4[2] = v9 + 1;
      v4[v9 + 4] = v5;
    }
    v2 += 24;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v4;
}

id Array<A>.episodeCoreDataPredicate()(uint64_t a1)
{
  return sub_1ACC29C54(a1, (uint64_t)off_1E5E60B18, (SEL *)&selRef_predicateForEpisodeStoreTrackIds_);
}

id Array<A>.showCoreDataPredicate()(uint64_t a1)
{
  return sub_1ACC29C54(a1, (uint64_t)off_1E5E60B90, (SEL *)&selRef_predicateForPodcastStoreIDs_);
}

id sub_1ACC29C54(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v5 = Array<A>.group()(a1);
  unint64_t v6 = v4;
  uint64_t v8 = v7;
  unint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v25 = MEMORY[0x1E4FBC860];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (!v24) {
      goto LABEL_6;
    }
  }
  else if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_6;
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1ACE843F0;
  *(void *)(v10 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705D0);
  *(void *)(v10 + 64) = sub_1ACC2A29C();
  *(void *)(v10 + 32) = v6;
  swift_bridgeObjectRetain();
  sub_1ACE76B88();
  MEMORY[0x1AD118700]();
  if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1ACE765C8();
  }
  sub_1ACE76628();
  sub_1ACE76598();
LABEL_6:
  uint64_t v11 = v5[2];
  if (v11)
  {
    swift_bridgeObjectRetain();
    sub_1ACE773D8();
    uint64_t v12 = 0;
    do
    {
      uint64_t v13 = v12 + 1;
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedLongLong_, v5[v12 + 4]);
      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
      uint64_t v12 = v13;
    }
    while (v11 != v13);
    swift_bridgeObjectRelease();
    uint64_t v14 = self;
    sub_1ACDF7264(v9);
    swift_release();
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
    sub_1ACB19998();
    os_log_type_t v15 = (void *)sub_1ACE76978();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v14, *a3, v15);

    MEMORY[0x1AD118700]();
    if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1ACE765C8();
    }
    sub_1ACE76628();
    sub_1ACE76598();
  }
  if (*(void *)(v8 + 16))
  {
    uint64_t v17 = self;
    uint64_t v18 = swift_bridgeObjectRetain();
    sub_1ACB02BC0(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    unint64_t v19 = (void *)sub_1ACE76978();
    swift_bridgeObjectRelease();
    id v20 = objc_msgSend(v17, sel_predicateForEpisodeUuids_, v19);

    MEMORY[0x1AD118700]();
    if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1ACE765C8();
    }
    sub_1ACE76628();
    sub_1ACE76598();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  uint64_t v21 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v21);

  return v22;
}

uint64_t sub_1ACC2A0B0(unint64_t a1, unint64_t a2)
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
  if (a2 >> 62)
  {
    uint64_t v4 = sub_1ACE77528();
    self;
    if (swift_dynamicCastObjCClass()) {
      return v4;
    }
  }
  else
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
      swift_unknownObjectRetain();
      self;
      if (!swift_dynamicCastObjCClass()) {
        goto LABEL_10;
      }
      return v4;
    }
    __break(1u);
  }
LABEL_10:
  sub_1ACE77268();
  sub_1ACE762C8();
  sub_1ACE77D48();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_1ACE77D48();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1ACE774A8();
  __break(1u);
  return result;
}

unint64_t sub_1ACC2A29C()
{
  unint64_t result = qword_1EB7705D8;
  if (!qword_1EB7705D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7705D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7705D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupedContentIDs()
{
  return &type metadata for GroupedContentIDs;
}

uint64_t MetricsPageID.rawValue.getter(uint64_t a1)
{
  return a1;
}

uint64_t MetricsPageID.init(_:)()
{
  return sub_1ACE770B8();
}

uint64_t MetricsPageID.adamID.getter(unint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1ACD1C588(a1, a2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t static MetricsPageID.unique()()
{
  uint64_t v0 = sub_1ACE75118();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE75108();
  sub_1ACE750C8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v4 = sub_1ACE76238();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  void v9[4] = v4;
  v9[5] = v6;
  void v9[2] = 45;
  v9[3] = 0xE100000000000000;
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1ACA4F4AC();
  uint64_t v7 = sub_1ACE77068();
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t MetricsPageID.debugDescription.getter()
{
  return 0xD000000000000019;
}

unint64_t sub_1ACC2A604()
{
  return MetricsPageID.debugDescription.getter();
}

uint64_t MetricsPageID.description.getter(uint64_t a1)
{
  return a1;
}

uint64_t MetricsPageID.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_1ACE77858();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsPageID.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE778D8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsPageID.browse.getter()
{
  return 0x6573776F7242;
}

uint64_t static MetricsPageID.categories.getter()
{
  return 0x69726F6765746143;
}

uint64_t static MetricsPageID.channels.getter()
{
  return 0x736C656E6E616843;
}

uint64_t static MetricsPageID.downloaded.getter()
{
  return 0x64616F6C6E776F44;
}

uint64_t static MetricsPageID.focus.getter()
{
  return 0x7375636F66;
}

uint64_t static MetricsPageID.fromYourShows.getter()
{
  return 0x72756F596D6F7246;
}

uint64_t static MetricsPageID.hints.getter()
{
  return 0x73746E6968;
}

uint64_t static MetricsPageID.latestEpisodes.getter()
{
  return 0x704574736574614CLL;
}

uint64_t static MetricsPageID.library.getter()
{
  return 0x7972617262694CLL;
}

uint64_t static MetricsPageID.listenNow.getter()
{
  return 0x6F4E6E657473696CLL;
}

unint64_t static MetricsPageID.manageCategories.getter()
{
  return 0xD000000000000010;
}

unint64_t static MetricsPageID.multipleSubscriptionsFound.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t static MetricsPageID.nowPlaying.getter()
{
  return 0x6979616C50776F4ELL;
}

uint64_t static MetricsPageID.recentlyPlayed.getter()
{
  return 0x796C746E65636552;
}

unint64_t static MetricsPageID.recentlySearched.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsPageID.recentlyUpdated.getter()
{
  return 0x796C746E65636552;
}

uint64_t static MetricsPageID.saved.getter()
{
  return 0x6465766153;
}

uint64_t static MetricsPageID.search.getter()
{
  return 0x686372616553;
}

uint64_t static MetricsPageID.sharedWithYou.getter()
{
  return 0x6957646572616853;
}

uint64_t static MetricsPageID.shows.getter()
{
  return 0x73776F6853;
}

uint64_t static MetricsPageID.station.getter()
{
  return 0x6E6F6974617453;
}

uint64_t static MetricsPageID.stationSettings.getter()
{
  return 0x536E6F6974617453;
}

unint64_t static MetricsPageID.subscriptionFAQs.getter()
{
  return 0xD000000000000010;
}

unint64_t static MetricsPageID.subscriptionsFound.getter()
{
  return 0xD000000000000012;
}

unint64_t static MetricsPageID.subscriptionRequired.getter()
{
  return 0xD000000000000014;
}

uint64_t static MetricsPageID.upNext.getter()
{
  return 0x7478654E7055;
}

uint64_t static MetricsPageID.unknown.getter()
{
  return 0x6E776F6E6B6E55;
}

uint64_t static MetricsPageID.welcomeSheet.getter()
{
  return 0x53656D6F636C6557;
}

unint64_t sub_1ACC2AAA0()
{
  unint64_t result = qword_1E99F3D78;
  if (!qword_1E99F3D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3D78);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsPageID()
{
  return &type metadata for MetricsPageID;
}

uint64_t InterestStateMachine.__allocating_init(identifier:initialState:)(uint64_t a1, char a2)
{
  uint64_t v4 = swift_allocObject();
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28FD0]), sel_init);
  *(void *)(v4 + 40) = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = a1;
  *(unsigned char *)(v4 + 32) = a2;
  return v4;
}

Swift::Bool __swiftcall InterestStateMachine.transition(to:)(PodcastsFoundation::InterestState to)
{
  swift_beginAccess();
  objc_msgSend(*(id *)(v1 + 16), sel_lock);
  if ((sub_1ACCF4500(*(unsigned char *)(v1 + 32), to) & 1) == 0)
  {
    *(unsigned char *)(v1 + 32) = to;
    sub_1ACC2AD88();
  }
  objc_msgSend(*(id *)(v1 + 16), sel_unlock);
  return 1;
}

uint64_t InterestStateMachine.lock.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t InterestStateMachine.lock.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*InterestStateMachine.lock.modify())()
{
  return j__swift_endAccess;
}

uint64_t InterestStateMachine.currentState.getter()
{
  swift_beginAccess();
  objc_msgSend(*(id *)(v0 + 16), sel_lock);
  uint64_t v1 = *(unsigned __int8 *)(v0 + 32);
  objc_msgSend(*(id *)(v0 + 16), sel_unlock);
  return v1;
}

uint64_t InterestStateMachine.init(identifier:initialState:)(uint64_t a1, char a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28FD0]), sel_init);
  *(void *)(v2 + 40) = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 16) = v5;
  *(void *)(v2 + 24) = a1;
  *(unsigned char *)(v2 + 32) = a2;
  return v2;
}

uint64_t sub_1ACC2AD88()
{
  uint64_t v1 = sub_1ACE75DC8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE75E48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA51E1C();
  unint64_t v9 = (void *)sub_1ACE76CF8();
  aBlock[4] = sub_1ACC2B9F8;
  uint64_t v13 = v0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_43;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1ACE75E08();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1ACC2BA64((unint64_t *)&qword_1EB7734E0, 255, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA55D7C();
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v8, v4, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id InterestStateMachine.addStateTransitionObserver(_:action:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  objc_msgSend(*(id *)(v3 + 16), sel_lock);
  swift_unknownObjectWeakInit();
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  sub_1ACC2B780((uint64_t)v13, (uint64_t)v12);
  uint64_t v6 = (void *)(v3 + 40);
  swift_beginAccess();
  uint64_t v7 = *(void **)(v3 + 40);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v3 + 40) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_1ACA43848(0, v7[2] + 1, 1, (unint64_t)v7);
    *uint64_t v6 = v7;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    uint64_t v7 = sub_1ACA43848((void *)(v9 > 1), v10 + 1, 1, (unint64_t)v7);
    *uint64_t v6 = v7;
  }
  void v7[2] = v10 + 1;
  sub_1ACC2B810((uint64_t)v12, (uint64_t)&v7[3 * v10 + 4]);
  swift_endAccess();
  sub_1ACC2B84C((uint64_t)v13);
  return objc_msgSend(*(id *)(v3 + 16), sel_unlock);
}

id InterestStateMachine.removeStateTransitionActions(for:)(uint64_t a1)
{
  uint64_t v3 = (id *)(v1 + 16);
  swift_beginAccess();
  objc_msgSend(*(id *)(v1 + 16), sel_lock);
  uint64_t v4 = (void *)(v1 + 40);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v20 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(v5 + 16);
  id result = (id)swift_bridgeObjectRetain();
  if (!v7)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    *uint64_t v4 = v6;
    swift_bridgeObjectRelease();
    return objc_msgSend(*v3, sel_unlock);
  }
  uint64_t v17 = (id *)(v1 + 16);
  unint64_t v9 = 0;
  uint64_t v10 = v5 + 32;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  while (v9 < *(void *)(v5 + 16))
  {
    sub_1ACC2B780(v10, (uint64_t)v19);
    uint64_t v12 = MEMORY[0x1AD11B470](v19);
    swift_unknownObjectRelease();
    sub_1ACC2B780((uint64_t)v19, (uint64_t)v18);
    if (v12)
    {
      uint64_t v13 = MEMORY[0x1AD11B470](v18);
      if (!v13)
      {
        sub_1ACC2B84C((uint64_t)v18);
LABEL_12:
        sub_1ACC2B810((uint64_t)v19, (uint64_t)v18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1ACC832C0(0, *(void *)(v11 + 16) + 1, 1);
        }
        uint64_t v11 = v20;
        unint64_t v16 = *(void *)(v20 + 16);
        unint64_t v15 = *(void *)(v20 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_1ACC832C0(v15 > 1, v16 + 1, 1);
          uint64_t v11 = v20;
        }
        *(void *)(v11 + 16) = v16 + 1;
        id result = (id)sub_1ACC2B810((uint64_t)v18, v11 + 24 * v16 + 32);
        goto LABEL_5;
      }
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      sub_1ACC2B84C((uint64_t)v18);
      if (v14 != a1) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_1ACC2B84C((uint64_t)v18);
    }
    id result = (id)sub_1ACC2B84C((uint64_t)v19);
LABEL_5:
    ++v9;
    v10 += 24;
    if (v7 == v9)
    {
      uint64_t v6 = v20;
      uint64_t v3 = v17;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACC2B360(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 16);
  swift_beginAccess();
  objc_msgSend(*(id *)(a1 + 16), sel_lock);
  uint64_t v3 = (uint64_t *)(a1 + 40);
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v27 = v2;
  if (v6)
  {
    unint64_t v8 = 0;
    uint64_t v9 = v4 + 32;
    while (v8 < *(void *)(v4 + 16))
    {
      sub_1ACC2B780(v9, (uint64_t)v29);
      uint64_t v10 = MEMORY[0x1AD11B470](v29);
      swift_unknownObjectRelease();
      if (v10)
      {
        sub_1ACC2B810((uint64_t)v29, (uint64_t)v28);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1ACC832C0(0, *(void *)(v5 + 16) + 1, 1);
        }
        uint64_t v5 = v30;
        unint64_t v12 = *(void *)(v30 + 16);
        unint64_t v11 = *(void *)(v30 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_1ACC832C0(v11 > 1, v12 + 1, 1);
          uint64_t v5 = v30;
        }
        *(void *)(v5 + 16) = v12 + 1;
        uint64_t result = sub_1ACC2B810((uint64_t)v28, v5 + 24 * v12 + 32);
      }
      else
      {
        uint64_t result = sub_1ACC2B84C((uint64_t)v29);
      }
      ++v8;
      v9 += 24;
      if (v6 == v8)
      {
        uint64_t v5 = v30;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    swift_bridgeObjectRelease();
    uint64_t v13 = *v3;
    int64_t v14 = *(void *)(*v3 + 16);
    uint64_t v15 = MEMORY[0x1E4FBC860];
    if (v14)
    {
      v28[0] = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1ACC832F0(0, v14, 0);
      uint64_t v16 = v13 + 32;
      uint64_t v15 = v28[0];
      do
      {
        sub_1ACC2B780(v16, (uint64_t)v29);
        uint64_t v18 = v29[1];
        uint64_t v17 = v29[2];
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = v18;
        *(void *)(v19 + 24) = v17;
        swift_retain();
        sub_1ACC2B84C((uint64_t)v29);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1ACC832F0(0, *(void *)(v15 + 16) + 1, 1);
          uint64_t v15 = v28[0];
        }
        unint64_t v21 = *(void *)(v15 + 16);
        unint64_t v20 = *(void *)(v15 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_1ACC832F0(v20 > 1, v21 + 1, 1);
          uint64_t v15 = v28[0];
        }
        *(void *)(v15 + 16) = v21 + 1;
        uint64_t v22 = v15 + 16 * v21;
        *(void *)(v22 + 32) = sub_1ACC2BA38;
        *(void *)(v22 + 40) = v19;
        v16 += 24;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
    }
    objc_msgSend(*v27, sel_unlock);
    uint64_t v23 = *(void *)(v15 + 16);
    if (v23)
    {
      uint64_t v24 = v15 + 40;
      do
      {
        uint64_t v25 = *(void (**)(void *))(v24 - 8);
        v29[0] = a1;
        swift_retain();
        v25(v29);
        swift_release();
        v24 += 16;
        --v23;
      }
      while (v23);
    }
    swift_bridgeObjectRelease();
    sub_1ACC2BA64((unint64_t *)&unk_1E99F3D80, v26, (void (*)(uint64_t))type metadata accessor for InterestStateMachine);
    sub_1ACE75868();
    sub_1ACE75968();
    return swift_release();
  }
  return result;
}

uint64_t InterestStateMachine.deinit()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InterestStateMachine.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACC2B73C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1ACC2B780(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyInit();
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  *(void *)(a2 + 16) = v4;
  swift_retain();
  return a2;
}

uint64_t sub_1ACC2B7C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1ACE75868();
  *a1 = result;
  return result;
}

uint64_t sub_1ACC2B810(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  return a2;
}

uint64_t sub_1ACC2B84C(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for InterestStateMachine()
{
  return self;
}

uint64_t method lookup function for InterestStateMachine(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InterestStateMachine);
}

uint64_t dispatch thunk of InterestStateMachine.__allocating_init(identifier:initialState:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t destroy for StateMachineChangeObserverAction()
{
  swift_unknownObjectWeakDestroy();
  return swift_release();
}

uint64_t initializeWithCopy for StateMachineChangeObserverAction(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyInit();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for StateMachineChangeObserverAction(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyAssign();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for StateMachineChangeObserverAction(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_unknownObjectWeakTakeInit();
  __n128 result = *(__n128 *)(a2 + 8);
  *(__n128 *)(v3 + 8) = result;
  return result;
}

uint64_t assignWithTake for StateMachineChangeObserverAction(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *_s18PodcastsFoundation32StateMachineChangeObserverActionVMa_1()
{
  return &_s18PodcastsFoundation32StateMachineChangeObserverActionVN_0;
}

uint64_t sub_1ACC2B9F8()
{
  return sub_1ACC2B360(v0);
}

uint64_t sub_1ACC2BA00()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC2BA38(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1ACC2BA64(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACC2BAAC(unint64_t a1)
{
  return sub_1ACC2BB48(a1, (void (*)(void))type metadata accessor for ServerChannel);
}

uint64_t sub_1ACC2BAC4(unint64_t a1)
{
  return sub_1ACC2C320(a1);
}

uint64_t sub_1ACC2BAD0(unint64_t a1)
{
  return sub_1ACC2BD5C(a1);
}

uint64_t sub_1ACC2BADC(unint64_t a1)
{
  return sub_1ACC2BB48(a1, (void (*)(void))type metadata accessor for ServerPodcastEpisode);
}

uint64_t sub_1ACC2BAF4(unint64_t a1)
{
  return sub_1ACC2BB48(a1, (void (*)(void))type metadata accessor for ServerTranscript);
}

uint64_t sub_1ACC2BB0C(unint64_t a1)
{
  return sub_1ACC2BB48(a1, (void (*)(void))type metadata accessor for ServerPodcast);
}

uint64_t sub_1ACC2BB24(unint64_t a1)
{
  return sub_1ACC2BB48(a1, (void (*)(void))type metadata accessor for ServerPodcastStation);
}

uint64_t sub_1ACC2BB3C(unint64_t a1)
{
  return sub_1ACC2C320(a1);
}

uint64_t sub_1ACC2BB48(unint64_t a1, void (*a2)(void))
{
  uint64_t v3 = a1;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1ACE773D8();
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1AD119490](i, v3);
        uint64_t v6 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        a2(0);
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1ACE773A8();
        sub_1ACE773E8();
        sub_1ACE773F8();
        sub_1ACE773B8();
        if (v6 == v4) {
          return v11;
        }
      }
      __break(1u);
    }
    else
    {
      for (uint64_t j = 0; ; ++j)
      {
        uint64_t v8 = j + 1;
        if (__OFADD__(j, 1)) {
          break;
        }
        a2(0);
        uint64_t v9 = swift_dynamicCastClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v3 = v9;
        swift_unknownObjectRetain();
        sub_1ACE773A8();
        sub_1ACE773E8();
        sub_1ACE773F8();
        sub_1ACE773B8();
        if (v8 == v4) {
          return v11;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1ACE77508();
    swift_bridgeObjectRelease();
    sub_1ACE773D8();
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1ACC2BD38(unint64_t a1)
{
  return sub_1ACC2C320(a1);
}

uint64_t sub_1ACC2BD44(unint64_t a1)
{
  return sub_1ACC2BD5C(a1);
}

uint64_t sub_1ACC2BD50(unint64_t a1)
{
  return sub_1ACC2BD5C(a1);
}

uint64_t sub_1ACC2BD5C(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1ACE773D8();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1AD119490](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1ACE773A8();
        sub_1ACE773E8();
        sub_1ACE773F8();
        sub_1ACE773B8();
        if (v4 == v2) {
          return v9;
        }
      }
      __break(1u);
    }
    else
    {
      for (uint64_t j = 0; ; ++j)
      {
        uint64_t v6 = j + 1;
        if (__OFADD__(j, 1)) {
          break;
        }
        self;
        uint64_t v7 = swift_dynamicCastObjCClass();
        if (!v7)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v7;
        swift_unknownObjectRetain();
        sub_1ACE773A8();
        sub_1ACE773E8();
        sub_1ACE773F8();
        sub_1ACE773B8();
        if (v6 == v2) {
          return v9;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1ACE77508();
    swift_bridgeObjectRelease();
    sub_1ACE773D8();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t sub_1ACC2BF44(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1ACC831D0(0, v3 & ~(v3 >> 63), 0);
  uint64_t v4 = v12;
  if (!v2)
  {
    unint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      return v4;
    }
LABEL_7:
    for (uint64_t i = 4; ; ++i)
    {
      uint64_t v6 = i - 4;
      if ((a1 & 0xC000000000000001) != 0)
      {
        MEMORY[0x1AD119490](i - 4, a1);
        uint64_t v7 = i - 3;
        if (__OFADD__(v6, 1)) {
          goto LABEL_22;
        }
      }
      else
      {
        swift_unknownObjectRetain();
        uint64_t v7 = i - 3;
        if (__OFADD__(v6, 1))
        {
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E1A0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E020);
      if (!swift_dynamicCast())
      {
        swift_release();
        swift_bridgeObjectRelease();
        return 0;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1ACC831D0(0, *(void *)(v4 + 16) + 1, 1);
        uint64_t v4 = v12;
      }
      unint64_t v9 = *(void *)(v4 + 16);
      unint64_t v8 = *(void *)(v4 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1ACC831D0(v8 > 1, v9 + 1, 1);
        uint64_t v4 = v12;
      }
      *(void *)(v4 + 16) = v9 + 1;
      *(void *)(v4 + 8 * v9 + 32) = v11;
      if (v7 == v2) {
        return v4;
      }
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v2 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (v2) {
    goto LABEL_7;
  }
  return v4;
}

uint64_t sub_1ACC2C134(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1ACE773D8();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1AD119490](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        type metadata accessor for MTCategory();
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1ACE773A8();
        sub_1ACE773E8();
        sub_1ACE773F8();
        sub_1ACE773B8();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        unint64_t v8 = *(void **)(v6 + 8 * v5);
        type metadata accessor for MTCategory();
        uint64_t v9 = swift_dynamicCastClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_1ACE773A8();
        sub_1ACE773E8();
        sub_1ACE773F8();
        sub_1ACE773B8();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1ACE77508();
    swift_bridgeObjectRelease();
    sub_1ACE773D8();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_1ACC2C314(unint64_t a1)
{
  return sub_1ACC2C320(a1);
}

uint64_t sub_1ACC2C320(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1ACE773D8();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1AD119490](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1ACE773A8();
        sub_1ACE773E8();
        sub_1ACE773F8();
        sub_1ACE773B8();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        unint64_t v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_1ACE773A8();
        sub_1ACE773E8();
        sub_1ACE773F8();
        sub_1ACE773B8();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1ACE77508();
    swift_bridgeObjectRelease();
    sub_1ACE773D8();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  return v12;
}

id SearchRequest.__allocating_init(term:contentTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return SearchRequest.init(term:contentTypes:)(a1, a2, a3);
}

id SearchRequest.init(term:contentTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (char **)&v3[OBJC_IVAR___MTSearchRequest_contentTypes];
  *(void *)&v3[OBJC_IVAR___MTSearchRequest_contentTypes] = MEMORY[0x1E4FBC860];
  uint64_t v6 = &v3[OBJC_IVAR___MTSearchRequest_limit];
  *(void *)uint64_t v6 = 0;
  v6[8] = 1;
  id v7 = &v3[OBJC_IVAR___MTSearchRequest_term];
  *(void *)id v7 = a1;
  *((void *)v7 + 1) = a2;
  uint64_t v8 = *(void *)(a3 + 16);
  if (v8)
  {
    uint64_t v37 = v3;
    for (uint64_t i = 0; i != v8; ++i)
    {
      switch(*(void *)(a3 + 8 * i + 32))
      {
        case 0:
          swift_beginAccess();
          uint64_t v12 = *v5;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v5 = v12;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v12 = sub_1ACA4385C(0, *((void *)v12 + 2) + 1, 1, v12);
            *uint64_t v5 = v12;
          }
          unint64_t v15 = *((void *)v12 + 2);
          unint64_t v14 = *((void *)v12 + 3);
          if (v15 >= v14 >> 1)
          {
            uint64_t v12 = sub_1ACA4385C((char *)(v14 > 1), v15 + 1, 1, v12);
            *uint64_t v5 = v12;
          }
          *((void *)v12 + 2) = v15 + 1;
          v12[v15 + 32] = 1;
          goto LABEL_5;
        case 1:
          swift_beginAccess();
          uint64_t v16 = *v5;
          char v17 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v5 = v16;
          if ((v17 & 1) == 0)
          {
            uint64_t v16 = sub_1ACA4385C(0, *((void *)v16 + 2) + 1, 1, v16);
            *uint64_t v5 = v16;
          }
          unint64_t v19 = *((void *)v16 + 2);
          unint64_t v18 = *((void *)v16 + 3);
          if (v19 >= v18 >> 1)
          {
            uint64_t v16 = sub_1ACA4385C((char *)(v18 > 1), v19 + 1, 1, v16);
            *uint64_t v5 = v16;
          }
          *((void *)v16 + 2) = v19 + 1;
          v16[v19 + 32] = 0;
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          unint64_t v20 = *v5;
          char v21 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v5 = v20;
          if ((v21 & 1) == 0)
          {
            unint64_t v20 = sub_1ACA4385C(0, *((void *)v20 + 2) + 1, 1, v20);
            *uint64_t v5 = v20;
          }
          unint64_t v23 = *((void *)v20 + 2);
          unint64_t v22 = *((void *)v20 + 3);
          if (v23 >= v22 >> 1)
          {
            unint64_t v20 = sub_1ACA4385C((char *)(v22 > 1), v23 + 1, 1, v20);
            *uint64_t v5 = v20;
          }
          *((void *)v20 + 2) = v23 + 1;
          id v10 = &v20[v23];
          char v11 = 3;
          goto LABEL_4;
        case 3:
          swift_beginAccess();
          uint64_t v24 = *v5;
          char v25 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v5 = v24;
          if ((v25 & 1) == 0)
          {
            uint64_t v24 = sub_1ACA4385C(0, *((void *)v24 + 2) + 1, 1, v24);
            *uint64_t v5 = v24;
          }
          unint64_t v27 = *((void *)v24 + 2);
          unint64_t v26 = *((void *)v24 + 3);
          if (v27 >= v26 >> 1)
          {
            uint64_t v24 = sub_1ACA4385C((char *)(v26 > 1), v27 + 1, 1, v24);
            *uint64_t v5 = v24;
          }
          *((void *)v24 + 2) = v27 + 1;
          id v10 = &v24[v27];
          char v11 = 2;
          goto LABEL_4;
        case 4:
          swift_beginAccess();
          id v28 = *v5;
          char v29 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v5 = v28;
          if ((v29 & 1) == 0)
          {
            id v28 = sub_1ACA4385C(0, *((void *)v28 + 2) + 1, 1, v28);
            *uint64_t v5 = v28;
          }
          unint64_t v31 = *((void *)v28 + 2);
          unint64_t v30 = *((void *)v28 + 3);
          if (v31 >= v30 >> 1)
          {
            id v28 = sub_1ACA4385C((char *)(v30 > 1), v31 + 1, 1, v28);
            *uint64_t v5 = v28;
          }
          *((void *)v28 + 2) = v31 + 1;
          id v10 = &v28[v31];
          char v11 = 4;
LABEL_4:
          v10[32] = v11;
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          uint64_t v32 = *v5;
          char v33 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v5 = v32;
          if ((v33 & 1) == 0)
          {
            uint64_t v32 = sub_1ACA4385C(0, *((void *)v32 + 2) + 1, 1, v32);
            *uint64_t v5 = v32;
          }
          unint64_t v35 = *((void *)v32 + 2);
          unint64_t v34 = *((void *)v32 + 3);
          if (v35 >= v34 >> 1)
          {
            uint64_t v32 = sub_1ACA4385C((char *)(v34 > 1), v35 + 1, 1, v32);
            *uint64_t v5 = v32;
          }
          *((void *)v32 + 2) = v35 + 1;
          v32[v35 + 32] = 5;
LABEL_5:
          swift_endAccess();
          break;
        default:
          continue;
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v38.receiver = v3;
  v38.super_class = (Class)type metadata accessor for SearchRequest();
  return objc_msgSendSuper2(&v38, sel_init);
}

uint64_t type metadata accessor for SearchRequest()
{
  return self;
}

uint64_t sub_1ACC2CA64(uint64_t result)
{
  uint64_t v2 = v1 + OBJC_IVAR___MTSearchRequest_limit;
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = 0;
  return result;
}

uint64_t sub_1ACC2CA94(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v3 = sub_1ACE754C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MediaRequest.Params();
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v39 = v9;
  uint64_t v40 = (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v34 - v10;
  uint64_t v12 = *(void *)&v2[OBJC_IVAR___MTSearchRequest_term];
  unint64_t v13 = *(void *)&v2[OBJC_IVAR___MTSearchRequest_term + 8];
  unint64_t v14 = (uint64_t *)&v2[OBJC_IVAR___MTSearchRequest_contentTypes];
  swift_beginAccess();
  uint64_t v15 = *v14;
  uint64_t v16 = *(void *)&v2[OBJC_IVAR___MTSearchRequest_limit];
  char v17 = v2[OBJC_IVAR___MTSearchRequest_limit + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v37 = v12;
  MediaRequest.Params.init(searchTerm:contentTypes:limit:)(v12, v13, v15, v16, v17, (uint64_t)v11);
  if (qword_1E99F0048 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v3, (uint64_t)qword_1E99F2E88);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v18, v3);
  unint64_t v19 = v2;
  unint64_t v20 = sub_1ACE75498();
  os_log_type_t v21 = sub_1ACE76C08();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v36 = v3;
    unint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    v44[0] = v24;
    unint64_t v35 = v6;
    *(_DWORD *)unint64_t v23 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1ACA3189C(v37, v13, v44);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v20, v21, "Searching for term (%s)...", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v24, -1, -1);
    MEMORY[0x1AD11B340](v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v35, v36);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v25 = (uint64_t)&v19[OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController];
  swift_beginAccess();
  sub_1ACA3E158(v25, (uint64_t)v44);
  uint64_t v26 = v45;
  uint64_t v27 = v46;
  __swift_project_boxed_opaque_existential_1(v44, v45);
  uint64_t v28 = v40;
  sub_1ACA394B0((uint64_t)v11, v40);
  unint64_t v29 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v42;
  *(void *)(v30 + 16) = v41;
  *(void *)(v30 + 24) = v31;
  sub_1ACA56190(v28, v30 + v29);
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t, uint64_t))(v27 + 56);
  swift_retain();
  v32(v11, sub_1ACC2F108, v30, v26, v27);
  swift_release();
  sub_1ACA39598((uint64_t)v11);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
}

void sub_1ACC2CF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(void, void), uint64_t a7, uint64_t a8)
{
  uint64_t v13 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1ACE754C8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  unint64_t v20 = (char *)v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)v49 - v21;
  if (a5)
  {
    id v23 = a5;
    if (qword_1E99F0048 != -1) {
      swift_once();
    }
    uint64_t v24 = __swift_project_value_buffer(v16, (uint64_t)qword_1E99F2E88);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v22, v24, v16);
    id v25 = a5;
    id v26 = a5;
    uint64_t v27 = sub_1ACE75498();
    os_log_type_t v28 = sub_1ACE76BE8();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      v49[1] = a7;
      uint64_t v30 = (uint8_t *)v29;
      uint64_t v31 = swift_slowAlloc();
      unint64_t v50 = a6;
      uint64_t v32 = v31;
      uint64_t v52 = v31;
      *(_DWORD *)uint64_t v30 = 136315138;
      v49[0] = v30 + 4;
      swift_getErrorValue();
      uint64_t v33 = sub_1ACE77A98();
      uint64_t v51 = sub_1ACA3189C(v33, v34, &v52);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AC9D5000, v27, v28, "Search resulted in error: %s", v30, 0xCu);
      swift_arrayDestroy();
      uint64_t v35 = v32;
      a6 = v50;
      MEMORY[0x1AD11B340](v35, -1, -1);
      MEMORY[0x1AD11B340](v30, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    id v39 = a5;
    a6(0, a5);
  }
  else if (a3)
  {
    sub_1ACA394B0(a8, (uint64_t)v15);
    uint64_t v36 = (objc_class *)type metadata accessor for SearchResponse();
    uint64_t v37 = (char *)objc_allocWithZone(v36);
    *(void *)&v37[OBJC_IVAR___MTSearchResponse_response] = a3;
    sub_1ACA394B0((uint64_t)v15, (uint64_t)&v37[OBJC_IVAR___MTSearchResponse_params]);
    *(void *)&v37[OBJC_IVAR___MTSearchResponse_parsedObjectsCache] = sub_1ACA3A7A8(MEMORY[0x1E4FBC860]);
    v53.receiver = v37;
    v53.super_class = v36;
    swift_bridgeObjectRetain();
    id v38 = objc_msgSendSuper2(&v53, sel_init);
    sub_1ACA39598((uint64_t)v15);
    a6(v38, 0);
  }
  else
  {
    if (qword_1E99F0048 != -1) {
      swift_once();
    }
    uint64_t v40 = __swift_project_value_buffer(v16, (uint64_t)qword_1E99F2E88);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v40, v16);
    uint64_t v41 = sub_1ACE75498();
    os_log_type_t v42 = sub_1ACE76C08();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl(&dword_1AC9D5000, v41, v42, "Search returned no results", v43, 2u);
      MEMORY[0x1AD11B340](v43, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    unint64_t v44 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v45 = sub_1ACA364E4(MEMORY[0x1E4FBC860]);
    sub_1ACA394B0(a8, (uint64_t)v15);
    uint64_t v46 = (objc_class *)type metadata accessor for SearchResponse();
    uint64_t v47 = (char *)objc_allocWithZone(v46);
    *(void *)&v47[OBJC_IVAR___MTSearchResponse_response] = v45;
    sub_1ACA394B0((uint64_t)v15, (uint64_t)&v47[OBJC_IVAR___MTSearchResponse_params]);
    *(void *)&v47[OBJC_IVAR___MTSearchResponse_parsedObjectsCache] = sub_1ACA3A7A8(v44);
    v54.receiver = v47;
    v54.super_class = v46;
    id v48 = objc_msgSendSuper2(&v54, sel_init);
    sub_1ACA39598((uint64_t)v15);
    a6(v48, 0);
  }
}

id SearchRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SearchRequest.init()()
{
}

uint64_t sub_1ACC2D5D0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id SearchRequest.__deallocating_deinit(uint64_t a1)
{
  return sub_1ACC2EEC0(a1, type metadata accessor for SearchRequest);
}

uint64_t sub_1ACC2D67C(unint64_t a1, unint64_t a2)
{
  uint64_t v5 = OBJC_IVAR___MTSearchResponse_params;
  uint64_t v6 = type metadata accessor for MediaRequest.Params();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(v2 + v5 + *(int *)(v6 + 120));
  if (*(void *)(v7 + 16) <= a1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t result = sub_1ACC2DE04(qword_1ACE977D8[*(char *)(v7 + a1 + 32)]);
  uint64_t v2 = result;
  if ((result & 0xC000000000000001) != 0)
  {
LABEL_10:
    uint64_t v9 = MEMORY[0x1AD119490](a2, v2);
    goto LABEL_7;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v9 = *(void *)(result + 8 * a2 + 32);
    swift_unknownObjectRetain();
LABEL_7:
    swift_bridgeObjectRelease();
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACC2D7AC(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v2 = result;
  uint64_t v3 = v1 + OBJC_IVAR___MTSearchResponse_params;
  uint64_t result = type metadata accessor for MediaRequest.Params();
  uint64_t v4 = *(void *)(v3 + *(int *)(result + 120));
  if (*(void *)(v4 + 16) <= v2)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v5 = sub_1ACC2E954(qword_1ACE977D8[*(char *)(v4 + v2 + 32)]);
  uint64_t v6 = v5;
  if (v5)
  {
    uint64_t v7 = _s18PodcastsFoundation26MediaRequestResponseParserC11extractDataySaySDys11AnyHashableVypGGSgAGFZ_0(v5);
    swift_bridgeObjectRelease();
    if (v7)
    {
      uint64_t v6 = *(void *)(v7 + 16);
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  return v6;
}

uint64_t sub_1ACC2D894()
{
  uint64_t v1 = v0 + OBJC_IVAR___MTSearchResponse_params;
  return *(void *)(*(void *)(v1 + *(int *)(type metadata accessor for MediaRequest.Params() + 120)) + 16);
}

uint64_t sub_1ACC2D90C(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = result;
    uint64_t v3 = v1 + OBJC_IVAR___MTSearchResponse_params;
    uint64_t result = type metadata accessor for MediaRequest.Params();
    uint64_t v4 = *(void *)(v3 + *(int *)(result + 120));
    if (*(void *)(v4 + 16) > v2)
    {
      uint64_t v5 = qword_1ACE977D8[*(char *)(v4 + v2 + 32)];
      uint64_t v6 = sub_1ACC2DA8C(v5);
      uint64_t v8 = v7;
      uint64_t v9 = (objc_class *)type metadata accessor for SearchSeeAllSection();
      uint64_t v10 = (char *)objc_allocWithZone(v9);
      *(void *)&v10[OBJC_IVAR___MTSearchSeeAllSection_contentType] = v5;
      char v11 = (uint64_t *)&v10[OBJC_IVAR___MTSearchSeeAllSection_nextPage];
      *char v11 = v6;
      v11[1] = v8;
      v12.receiver = v10;
      v12.super_class = v9;
      return (uint64_t)objc_msgSendSuper2(&v12, sel_init);
    }
  }
  __break(1u);
  return result;
}

id SearchSeeAllSection.__allocating_init(contentType:nextPage:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  *(void *)&v7[OBJC_IVAR___MTSearchSeeAllSection_contentType] = a1;
  uint64_t v8 = &v7[OBJC_IVAR___MTSearchSeeAllSection_nextPage];
  *(void *)uint64_t v8 = a2;
  *((void *)v8 + 1) = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t sub_1ACC2DA8C(uint64_t a1)
{
  uint64_t v3 = sub_1ACE754C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = 0;
  unint64_t v32 = 0;
  uint64_t v7 = sub_1ACC2E954(a1);
  if (v7)
  {
    uint64_t PageySSSgSDys11AnyHashableVypGFZ_0 = _s18PodcastsFoundation26MediaRequestResponseParserC15extractNextPageySSSgSDys11AnyHashableVypGFZ_0(v7);
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    uint64_t v31 = PageySSSgSDys11AnyHashableVypGFZ_0;
    unint64_t v32 = v10;
  }
  if (qword_1E99F0048 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v3, (uint64_t)qword_1E99F2E88);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v11, v3);
  uint64_t v13 = v31;
  unint64_t v12 = v32;
  swift_bridgeObjectRetain_n();
  uint64_t v14 = v1;
  uint64_t v15 = sub_1ACE75498();
  os_log_type_t v16 = sub_1ACE76C08();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v26 = v13;
    uint64_t v28 = v3;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    v30[0] = v27;
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v18 = &v14[OBJC_IVAR___MTSearchResponse_params];
    uint64_t v19 = (uint64_t *)&v18[*(int *)(type metadata accessor for MediaRequest.Params() + 116)];
    if (v19[1])
    {
      uint64_t v20 = *v19;
      unint64_t v21 = v19[1];
    }
    else
    {
      uint64_t v20 = 0;
      unint64_t v21 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1ACA3189C(v20, v21, v30);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    if (v12) {
      uint64_t v22 = v26;
    }
    else {
      uint64_t v22 = 0;
    }
    if (v12) {
      unint64_t v23 = v12;
    }
    else {
      unint64_t v23 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1ACA3189C(v22, v23, v30);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v15, v16, "Parsing nextPage for term (%s) returned %s", (uint8_t *)v17, 0x16u);
    uint64_t v24 = v27;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v24, -1, -1);
    MEMORY[0x1AD11B340](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v28);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  swift_beginAccess();
  return v31;
}

uint64_t sub_1ACC2DE04(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_1ACE754C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t *)&v1[OBJC_IVAR___MTSearchResponse_parsedObjectsCache];
  swift_beginAccess();
  uint64_t v9 = *v8;
  if (!*(void *)(*v8 + 16) || (uint64_t v10 = sub_1ACA665AC(a1), (v11 & 1) == 0))
  {
    unint64_t v14 = MEMORY[0x1E4FBC860];
    unint64_t v69 = MEMORY[0x1E4FBC860];
    uint64_t v15 = sub_1ACC2E954(a1);
    if (v15)
    {
      uint64_t v16 = v15;
      type metadata accessor for MediaRequestResponseParser();
      _s18PodcastsFoundation26MediaRequestResponseParserC15extractNextPageySSSgSDys11AnyHashableVypGFZ_0(v16);
      if (v17) {
        swift_bridgeObjectRelease();
      }
      sub_1ACBB4E48(v16, (uint64_t)v68);
      if (v68[1])
      {
        swift_bridgeObjectRelease();
        unint64_t v18 = MEMORY[0x1E4FBC860];
      }
      else
      {
        LOBYTE(v67[0]) = v68[0];
        unint64_t v18 = sub_1ACBB4F88(v16, v67);
        uint64_t v20 = v19;
        swift_bridgeObjectRelease();
      }
      unint64_t v69 = v18;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v67[0] = *v8;
      *uint64_t v8 = 0x8000000000000000;
      sub_1ACD0E168(v18, a1, isUniquelyReferenced_nonNull_native);
      *uint64_t v8 = v67[0];
      swift_bridgeObjectRelease();
      swift_endAccess();
    }
    if (qword_1E99F0048 != -1) {
      swift_once();
    }
    uint64_t v22 = __swift_project_value_buffer(v4, (uint64_t)qword_1E99F2E88);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v22, v4);
    unint64_t v23 = v69;
    id v24 = v2;
    swift_bridgeObjectRetain_n();
    uint64_t v25 = v5;
    uint64_t v26 = (char *)v24;
    uint64_t v27 = sub_1ACE75498();
    int v28 = sub_1ACE76C08();
    if (os_log_type_enabled(v27, (os_log_type_t)v28))
    {
      int v64 = v28;
      uint64_t v65 = v25;
      uint64_t v29 = swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      v67[0] = v63;
      *(_DWORD *)uint64_t v29 = 136315650;
      uint64_t v30 = &v26[OBJC_IVAR___MTSearchResponse_params];
      uint64_t v31 = (uint64_t *)&v30[*(int *)(type metadata accessor for MediaRequest.Params() + 116)];
      if (v31[1])
      {
        uint64_t v32 = *v31;
        unint64_t v33 = v31[1];
      }
      else
      {
        uint64_t v32 = 0;
        unint64_t v33 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_1ACA3189C(v32, v33, v67);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2048;
      if (v23 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v34 = sub_1ACE77508();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v34 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      unint64_t v14 = MEMORY[0x1E4FBC860];
      uint64_t v35 = v65;
      swift_bridgeObjectRelease();
      uint64_t v66 = v34;
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 22) = 2080;
      unint64_t v36 = 0xE700000000000000;
      uint64_t v37 = 0x74736163646F70;
      switch(a1)
      {
        case 0:
          goto LABEL_34;
        case 1:
          unint64_t v36 = 0xEE0065646F736970;
          uint64_t v37 = 0x4574736163646F70;
          goto LABEL_34;
        case 2:
          unint64_t v36 = 0xEE006C656E6E6168;
          uint64_t v37 = 0x4374736163646F70;
          goto LABEL_34;
        case 3:
          unint64_t v36 = 0xEE006E6F69746174;
          uint64_t v37 = 0x5374736163646F70;
          goto LABEL_34;
        case 4:
          unint64_t v36 = 0xEB00000000737470;
          uint64_t v40 = 0x63736E617274;
          goto LABEL_33;
        case 5:
          unint64_t v36 = 0xEA00000000007365;
          uint64_t v40 = 0x6F6765746163;
LABEL_33:
          uint64_t v37 = v40 & 0xFFFFFFFFFFFFLL | 0x6972000000000000;
LABEL_34:
          uint64_t v66 = sub_1ACA3189C(v37, v36, v67);
          sub_1ACE76FF8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1AC9D5000, v27, (os_log_type_t)v64, "Parsing results for term (%s) created %ld %s objects.", (uint8_t *)v29, 0x20u);
          uint64_t v41 = v63;
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v41, -1, -1);
          MEMORY[0x1AD11B340](v29, -1, -1);

          (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v4);
          break;
        default:
          uint64_t v66 = a1;
LABEL_104:
          sub_1ACE77A18();
          __break(1u);
          JUMPOUT(0x1ACC2E8B8);
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v4);
    }
    switch(a1)
    {
      case 0:
        swift_beginAccess();
        uint64_t v42 = sub_1ACC2BB48(v69, (void (*)(void))type metadata accessor for ServerPodcast);
        swift_bridgeObjectRelease();
        if (v42) {
          unint64_t v43 = v42;
        }
        else {
          unint64_t v43 = v14;
        }
        if (v43 >> 62) {
          goto LABEL_99;
        }
        uint64_t v13 = v43 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        sub_1ACE779C8();
        if (swift_dynamicCastMetatype()) {
          goto LABEL_91;
        }
        uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v44) {
          goto LABEL_91;
        }
        unint64_t v45 = (void *)(v13 + 32);
        while (*v45)
        {
          ++v45;
          if (!--v44) {
            goto LABEL_91;
          }
        }
        goto LABEL_98;
      case 1:
        swift_beginAccess();
        uint64_t v55 = sub_1ACC2BB48(v69, (void (*)(void))type metadata accessor for ServerPodcastEpisode);
        swift_bridgeObjectRelease();
        if (v55) {
          unint64_t v43 = v55;
        }
        else {
          unint64_t v43 = v14;
        }
        if (v43 >> 62) {
          goto LABEL_99;
        }
        uint64_t v13 = v43 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        sub_1ACE779C8();
        if (swift_dynamicCastMetatype()) {
          goto LABEL_91;
        }
        uint64_t v56 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v56) {
          goto LABEL_91;
        }
        uint64_t v57 = (void *)(v13 + 32);
        while (*v57)
        {
          ++v57;
          if (!--v56) {
            goto LABEL_91;
          }
        }
        goto LABEL_98;
      case 2:
        swift_beginAccess();
        uint64_t v49 = sub_1ACC2BB48(v69, (void (*)(void))type metadata accessor for ServerChannel);
        swift_bridgeObjectRelease();
        if (v49) {
          unint64_t v43 = v49;
        }
        else {
          unint64_t v43 = v14;
        }
        if (v43 >> 62) {
          goto LABEL_99;
        }
        uint64_t v13 = v43 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        sub_1ACE779C8();
        if (swift_dynamicCastMetatype()) {
          goto LABEL_91;
        }
        uint64_t v50 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v50) {
          goto LABEL_91;
        }
        uint64_t v51 = (void *)(v13 + 32);
        while (*v51)
        {
          ++v51;
          if (!--v50) {
            goto LABEL_91;
          }
        }
        goto LABEL_98;
      case 3:
        swift_beginAccess();
        uint64_t v52 = sub_1ACC2BB48(v69, (void (*)(void))type metadata accessor for ServerPodcastStation);
        swift_bridgeObjectRelease();
        if (v52) {
          unint64_t v43 = v52;
        }
        else {
          unint64_t v43 = v14;
        }
        if (v43 >> 62) {
          goto LABEL_99;
        }
        uint64_t v13 = v43 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        sub_1ACE779C8();
        if (swift_dynamicCastMetatype()) {
          goto LABEL_91;
        }
        uint64_t v53 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v53) {
          goto LABEL_91;
        }
        objc_super v54 = (void *)(v13 + 32);
        while (*v54)
        {
          ++v54;
          if (!--v53) {
            goto LABEL_91;
          }
        }
        goto LABEL_98;
      case 4:
        swift_beginAccess();
        uint64_t v46 = sub_1ACC2BB48(v69, (void (*)(void))type metadata accessor for ServerTranscript);
        swift_bridgeObjectRelease();
        if (v46) {
          unint64_t v43 = v46;
        }
        else {
          unint64_t v43 = v14;
        }
        if (v43 >> 62) {
          goto LABEL_99;
        }
        uint64_t v13 = v43 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        sub_1ACE779C8();
        if (swift_dynamicCastMetatype()) {
          goto LABEL_91;
        }
        uint64_t v47 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v47) {
          goto LABEL_91;
        }
        id v48 = (void *)(v13 + 32);
        break;
      case 5:
        swift_beginAccess();
        uint64_t v58 = sub_1ACC2BB48(v69, (void (*)(void))type metadata accessor for ServerCategory);
        swift_bridgeObjectRelease();
        if (v58) {
          unint64_t v43 = v58;
        }
        else {
          unint64_t v43 = v14;
        }
        if (v43 >> 62)
        {
LABEL_99:
          swift_bridgeObjectRetain();
          unint64_t v12 = sub_1ACE774B8();
          swift_bridgeObjectRelease_n();
          return v12;
        }
        uint64_t v13 = v43 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        sub_1ACE779C8();
        if (!swift_dynamicCastMetatype())
        {
          uint64_t v60 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v60)
          {
            uint64_t v61 = (void *)(v13 + 32);
            do
            {
              if (!*v61) {
                goto LABEL_98;
              }
              ++v61;
              --v60;
            }
            while (v60);
          }
        }
        goto LABEL_91;
      default:
        v67[0] = a1;
        goto LABEL_104;
    }
    while (*v48)
    {
      ++v48;
      if (!--v47)
      {
LABEL_91:
        swift_bridgeObjectRelease();
        return v43;
      }
    }
    goto LABEL_98;
  }
  unint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_1ACE774B8();
    swift_bridgeObjectRelease();
    return v62;
  }
  uint64_t v13 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n();
  sub_1ACE779C8();
  if (!swift_dynamicCastMetatype())
  {
    uint64_t v38 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v38)
    {
      id v39 = (void *)(v13 + 32);
      while (*v39)
      {
        ++v39;
        if (!--v38) {
          goto LABEL_5;
        }
      }
LABEL_98:
      swift_bridgeObjectRelease();
      return v13 | 1;
    }
  }
LABEL_5:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1ACC2E954(uint64_t a1)
{
  sub_1ACE771F8();
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___MTSearchResponse_response);
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v4 = sub_1ACA65B48((uint64_t)v12);
    if (v5)
    {
      sub_1ACA33128(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v13);
    }
    else
    {
      long long v13 = 0u;
      long long v14 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  sub_1ACA6A0F8((uint64_t)v12);
  if (!*((void *)&v14 + 1))
  {
LABEL_21:
    sub_1ACA65828((uint64_t)&v13);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E020);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = 0xD000000000000010;
  switch(a1)
  {
    case 0:
      uint64_t v6 = 0x7374736163646F70;
      goto LABEL_14;
    case 1:
    case 2:
    case 3:
      goto LABEL_14;
    case 4:
      uint64_t v7 = 0x63736E617274;
      goto LABEL_13;
    case 5:
      uint64_t v7 = 0x6F6765746163;
LABEL_13:
      uint64_t v6 = v7 & 0xFFFFFFFFFFFFLL | 0x6972000000000000;
LABEL_14:
      uint64_t v11 = v6;
      sub_1ACE771F8();
      if (MEMORY[0x73746C75736582] && (unint64_t v8 = sub_1ACA65B48((uint64_t)v12), (v9 & 1) != 0))
      {
        sub_1ACA33128(MEMORY[0x73746C757365AA] + 32 * v8, (uint64_t)&v13);
      }
      else
      {
        long long v13 = 0u;
        long long v14 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1ACA6A0F8((uint64_t)v12);
      if (!*((void *)&v14 + 1)) {
        goto LABEL_21;
      }
      if ((swift_dynamicCast() & 1) == 0) {
        return 0;
      }
      uint64_t result = v11;
      break;
    default:
      v12[0] = a1;
      sub_1ACE77A18();
      __break(1u);
      JUMPOUT(0x1ACC2EBC4);
  }
  return result;
}

void SearchResponse.init()()
{
}

id SearchResponse.__deallocating_deinit()
{
  return sub_1ACC2EEC0(0, type metadata accessor for SearchResponse);
}

uint64_t SearchSeeAllSection.contentType.getter()
{
  return *(void *)(v0 + OBJC_IVAR___MTSearchSeeAllSection_contentType);
}

uint64_t SearchSeeAllSection.nextPage.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___MTSearchSeeAllSection_nextPage);
  swift_bridgeObjectRetain();
  return v1;
}

id SearchSeeAllSection.init(contentType:nextPage:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR___MTSearchSeeAllSection_contentType] = a1;
  unint64_t v4 = &v3[OBJC_IVAR___MTSearchSeeAllSection_nextPage];
  *(void *)unint64_t v4 = a2;
  *((void *)v4 + 1) = a3;
  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for SearchSeeAllSection();
  return objc_msgSendSuper2(&v6, sel_init);
}

void SearchSeeAllSection.init()()
{
}

id SearchSeeAllSection.__deallocating_deinit(uint64_t a1)
{
  return sub_1ACC2EEC0(a1, type metadata accessor for SearchSeeAllSection);
}

id sub_1ACC2EEC0(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_1ACC2EF0C()
{
  uint64_t v1 = type metadata accessor for MediaRequest.Params();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  sub_1ACA39518(*(void *)(v0 + v2), *(void *)(v0 + v2 + 8), *(void *)(v0 + v2 + 16), *(void *)(v0 + v2 + 24), *(void *)(v0 + v2 + 32), *(unsigned char *)(v0 + v2 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + *(int *)(v1 + 104);
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACC2F108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v11 = *(void *)(type metadata accessor for MediaRequest.Params() - 8);
  unint64_t v12 = *(void (**)(void, void))(v5 + 16);
  uint64_t v13 = *(void *)(v5 + 24);
  uint64_t v14 = v5 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  sub_1ACC2CF20(a1, a2, a3, a4, a5, v12, v13, v14);
}

uint64_t sub_1ACC2F1AC@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for SearchSeeAllSection()
{
  return self;
}

uint64_t type metadata accessor for SearchResponse()
{
  uint64_t result = qword_1E99F3DD8;
  if (!qword_1E99F3DD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t method lookup function for SearchRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SearchRequest);
}

uint64_t dispatch thunk of SearchRequest.__allocating_init(term:contentTypes:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of SearchRequest.setLimit(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of SearchRequest.perform(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t sub_1ACC2F2E0()
{
  return type metadata accessor for SearchResponse();
}

uint64_t sub_1ACC2F2E8()
{
  uint64_t result = type metadata accessor for MediaRequest.Params();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SearchResponse(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SearchResponse);
}

uint64_t dispatch thunk of SearchResponse.item(in:at:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of SearchResponse.numberOfItems(in:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of SearchResponse.numberOfSections()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of SearchResponse.section(at:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of SearchResponse.items(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t method lookup function for SearchSeeAllSection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SearchSeeAllSection);
}

uint64_t dispatch thunk of SearchSeeAllSection.__allocating_init(contentType:nextPage:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1ACC2F4D0()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

double AssetProcessingStep.metadataTrace.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D370);
  if (swift_dynamicCast())
  {
    uint64_t v7 = *((void *)&v11 + 1);
    uint64_t v8 = v12;
    __swift_project_boxed_opaque_existential_1(&v10, *((uint64_t *)&v11 + 1));
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v10);
  }
  else
  {
    uint64_t v12 = 0;
    long long v10 = 0u;
    long long v11 = 0u;
    sub_1ACC2F654((uint64_t)&v10);
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1ACC2F654(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7693C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AssetProcessingStep.signposter.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACC2F724(&qword_1EB771BE8, MEMORY[0x1E4FBD330], (uint64_t)qword_1EB771BD0, a1);
}

uint64_t AssetProcessingStep.log.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACC2F724(&qword_1EB772EF0, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB772ED0, a1);
}

uint64_t sub_1ACC2F724@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  return v9(a4, v8, v7);
}

uint64_t dispatch thunk of AssetProcessingStep.metadata.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AssetProcessingStep.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t static CaseIterable<>.cases(excluding:)()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  sub_1ACE77288();
  swift_getAssociatedConformanceWitness();
  sub_1ACE76A48();
  sub_1ACE76688();
  swift_getWitnessTable();
  return sub_1ACE769B8();
}

uint64_t dispatch thunk of DonationModel.itemInstance()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t PFProducer.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_getAssociatedTypeWitness();
  uint64_t v10 = type metadata accessor for ProducerInner();
  long long v11 = sub_1ACC2FAE4(v5, a2, a3, a4, a5);
  uint64_t v13 = v12;
  uint64_t v14 = sub_1ACC2FC18(v5, a2, a3, a4, a5);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1ACC2FD4C(v5, a2, a3, a4, a5);
  uint64_t v19 = v18;
  swift_allocObject();
  uint64_t v20 = sub_1ACC31880(a1, (uint64_t)v11, v13, (uint64_t)v14, v16, (uint64_t)v17, v19);
  void v23[3] = v10;
  uint64_t v23[4] = swift_getWitnessTable();
  v23[0] = v20;
  sub_1ACE75778();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
}

uint64_t type metadata accessor for ProducerInner()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t (*sub_1ACC2FAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9 = *(void *)(a2 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __n128 v11 = MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v9 + 16))(v12, v11);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = a2;
  *((void *)v14 + 3) = a3;
  *((void *)v14 + 4) = a4;
  *((void *)v14 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v14[v13], v12, a2);
  return sub_1ACC352E0;
}

uint64_t (*sub_1ACC2FC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9 = *(void *)(a2 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __n128 v11 = MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v9 + 16))(v12, v11);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = a2;
  *((void *)v14 + 3) = a3;
  *((void *)v14 + 4) = a4;
  *((void *)v14 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v14[v13], v12, a2);
  return sub_1ACC3526C;
}

uint64_t (*sub_1ACC2FD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9 = *(void *)(a2 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __n128 v11 = MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v9 + 16))(v12, v11);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = a2;
  *((void *)v14 + 3) = a3;
  *((void *)v14 + 4) = a4;
  *((void *)v14 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v14[v13], v12, a2);
  return sub_1ACC351F8;
}

uint64_t sub_1ACC2FE80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(a9, a1, a11);
  active = (int *)type metadata accessor for ProducerInner.ActiveState();
  uint64_t v18 = a9 + active[11];
  uint64_t v19 = sub_1ACE76FD8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a2, v19);
  unint64_t v21 = (void *)(a9 + active[12]);
  *unint64_t v21 = a3;
  v21[1] = a4;
  uint64_t v22 = (void *)(a9 + active[13]);
  *uint64_t v22 = a5;
  v22[1] = a6;
  unint64_t v23 = (void *)(a9 + active[14]);
  *unint64_t v23 = a7;
  v23[1] = a8;
  *(void *)(a9 + active[15]) = a10;
  return result;
}

void sub_1ACC2FFB0(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*v1 + 88);
  uint64_t v83 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v78 = (char *)&v57 - v5;
  uint64_t v81 = sub_1ACE76FD8();
  uint64_t v85 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v7 = (char *)&v57 - v6;
  uint64_t v8 = type metadata accessor for ProducerInner.State();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v80 = (char *)&v57 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v57 - v15;
  active = (int *)type metadata accessor for ProducerInner.ActiveState();
  uint64_t v18 = *((void *)active - 1);
  MEMORY[0x1F4188790](active);
  uint64_t v84 = (char *)&v57 - v19;
  sub_1ACE757D8();
  if ((sub_1ACE757B8() & 1) == 0)
  {
    if (((unint64_t)a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (a1)
    {
      goto LABEL_4;
    }
    __break(1u);
    goto LABEL_23;
  }
LABEL_4:
  unint64_t v69 = a1;
  uint64_t v77 = v12;
  uint64_t v20 = (os_unfair_lock_s *)(v2[2] + 16);
  os_unfair_lock_lock(v20);
  unint64_t v21 = (char *)v2 + *(void *)(*v2 + 112);
  swift_beginAccess();
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v82 = v21;
  uint64_t v75 = v22;
  uint64_t v76 = v9 + 16;
  v22(v16, v21, v8);
  uint64_t v74 = *(unsigned int (**)(char *, uint64_t, int *))(v18 + 48);
  if (v74(v16, 1, active) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
    os_unfair_lock_unlock(v20);
    return;
  }
  uint64_t v61 = v18 + 48;
  uint64_t v71 = v9;
  uint64_t v72 = v8;
  uint64_t v73 = v4;
  uint64_t v79 = v18;
  unint64_t v23 = v84;
  (*(void (**)(char *, char *, int *))(v18 + 32))(v84, v16, active);
  uint64_t v24 = active[15];
  uint64_t v25 = *(void *)&v23[v24];
  sub_1ACE757D8();
  char v26 = sub_1ACE757B8();
  uint64_t v27 = v85;
  os_unfair_lock_t v70 = v20;
  if (v26) {
    goto LABEL_15;
  }
  sub_1ACE757D8();
  char v28 = sub_1ACE757B8();
  uint64_t v29 = sub_1ACE757D8();
  if ((v28 & 1) == 0)
  {
    uint64_t v30 = v69;
    if (sub_1ACE757B8())
    {
LABEL_12:
      uint64_t v29 = sub_1ACE757D8();
      goto LABEL_14;
    }
    if (((v25 | (unint64_t)v30) & 0x8000000000000000) == 0)
    {
      uint64_t v29 = (uint64_t)&v30[v25];
      if (!__OFADD__(v25, v30))
      {
        if ((v29 & 0x8000000000000000) == 0) {
          goto LABEL_14;
        }
LABEL_24:
        __break(1u);
        return;
      }
      goto LABEL_12;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
LABEL_14:
  *(void *)&v23[v24] = v29;
LABEL_15:
  uint64_t v31 = *(void (**)(char *))(v27 + 16);
  unint64_t v69 = &v23[active[11]];
  uint64_t v32 = v81;
  v31(v7);
  uint64_t v33 = v83;
  uint64_t v34 = v73;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 48))(v7, 1, v73);
  unint64_t v36 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v85 = v27 + 8;
  uint64_t v62 = v36;
  v36(v7, v32);
  uint64_t v37 = v79;
  uint64_t v38 = v80;
  id v39 = *(void (**)(char *, char *, int *))(v79 + 16);
  uint64_t v68 = v79 + 16;
  char v67 = v39;
  v39(v80, v23, active);
  uint64_t v40 = *(void (**)(char *, void, uint64_t, int *))(v37 + 56);
  uint64_t v66 = v37 + 56;
  uint64_t v65 = v40;
  v40(v38, 0, 1, active);
  uint64_t v41 = v82;
  swift_beginAccess();
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v71 + 40);
  uint64_t v64 = v71 + 40;
  uint64_t v63 = v42;
  v42(v41, v38, v72);
  swift_endAccess();
  os_unfair_lock_unlock(v70);
  if (v35 == 1)
  {
    unint64_t v43 = *(void (**)(uint64_t))&v23[active[12]];
    uint64_t v44 = swift_retain();
    uint64_t v45 = v34;
    uint64_t v46 = v32;
    uint64_t v47 = v78;
    v43(v44);
    swift_release();
    id v48 = v69;
    v62(v69, v46);
    uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    uint64_t v57 = v33 + 16;
    v58(v48, v47, v45);
    uint64_t v49 = *(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56);
    uint64_t v60 = v33 + 56;
    unint64_t v59 = v49;
    v49(v48, 0, 1, v45);
    uint64_t v50 = v70;
    os_unfair_lock_lock(v70);
    v67(v38, v23, active);
    v65(v38, 0, 1, active);
    uint64_t v51 = v82;
    swift_beginAccess();
    uint64_t v52 = v72;
    v63(v51, v38, v72);
    swift_endAccess();
    os_unfair_lock_unlock(v50);
    uint64_t v53 = *(void (**)(char *, void (*)(void (*)(char *, char *, uint64_t)), void *, void (*)(uint64_t), void *))&v23[active[13]];
    swift_retain_n();
    swift_retain();
    v53(v47, sub_1ACC351F0, v2, sub_1ACC351EC, v2);
    uint64_t v54 = v73;
    swift_release();
    swift_release_n();
    os_unfair_lock_lock(v50);
    uint64_t v55 = v77;
    v75(v77, v51, v52);
    LODWORD(v48) = v74(v55, 1, active);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v55, v52);
    if (v48 != 1)
    {
      uint64_t v56 = v69;
      v62(v69, v81);
      v58(v56, v47, v54);
      v59(v56, 0, 1, v54);
      v67(v38, v84, active);
      v65(v38, 0, 1, active);
      swift_beginAccess();
      v63(v51, v38, v52);
      swift_endAccess();
    }
    os_unfair_lock_unlock(v50);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v47, v54);
    unint64_t v23 = v84;
  }
  (*(void (**)(char *, int *))(v79 + 8))(v23, active);
}

void sub_1ACC30904(void (*a1)(char *, char *, uint64_t))
{
  uint64_t v62 = a1;
  uint64_t v2 = *(void *)(*v1 + 80);
  uint64_t v3 = *(void *)(*v1 + 96);
  uint64_t v4 = type metadata accessor for ProducerInner.State();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  unint64_t v59 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v63 = (char *)&v45 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v60 = v3;
  uint64_t v61 = v2;
  uint64_t active = type metadata accessor for ProducerInner.ActiveState();
  uint64_t v13 = *(void *)(active - 8);
  uint64_t v14 = MEMORY[0x1F4188790](active);
  uint64_t v56 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v45 - v16;
  uint64_t v18 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v18);
  uint64_t v19 = (char *)v1 + *(void *)(*v1 + 112);
  swift_beginAccess();
  uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v58(v11, v19, v4);
  uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v57(v11, 1, active) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    os_unfair_lock_unlock(v18);
    return;
  }
  uint64_t v54 = v19;
  os_unfair_lock_t v55 = v18;
  uint64_t v53 = v4;
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v20(v17, v11, active);
  uint64_t v21 = *(int *)(active + 60);
  uint64_t v22 = *(void *)&v17[v21];
  sub_1ACE757C8();
  if (sub_1ACE757B8())
  {
    os_unfair_lock_unlock(v55);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, active);
    return;
  }
  uint64_t v51 = v20;
  sub_1ACE757D8();
  char v23 = sub_1ACE757B8();
  uint64_t v24 = v55;
  if ((v23 & 1) == 0)
  {
    sub_1ACE757D8();
    if (sub_1ACE757B8())
    {
      uint64_t v25 = sub_1ACE757D8();
    }
    else
    {
      if (v22 < 0)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      if (!v22)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      uint64_t v25 = v22 - 1;
    }
    *(void *)&v17[v21] = v25;
  }
  uint64_t v50 = v13 + 32;
  char v26 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v27 = v63;
  uint64_t v48 = v13 + 16;
  uint64_t v46 = v26;
  v26(v63, v17, active);
  char v28 = *(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56);
  uint64_t v52 = active;
  uint64_t v49 = v13 + 56;
  uint64_t v47 = v28;
  v28(v27, 0, 1, active);
  uint64_t v29 = v54;
  swift_beginAccess();
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v5 + 40);
  v30(v29, v27, v53);
  swift_endAccess();
  os_unfair_lock_unlock(v24);
  uint64_t v31 = sub_1ACE75788();
  sub_1ACE757D8();
  if (sub_1ACE757B8()) {
    goto LABEL_15;
  }
  if (v31 < 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (!v31)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v52);
    return;
  }
LABEL_15:
  uint64_t v62 = v30;
  os_unfair_lock_lock(v24);
  uint64_t v32 = v59;
  uint64_t v33 = v24;
  uint64_t v34 = v53;
  v58(v59, v54, v53);
  uint64_t v35 = v52;
  if (v57(v32, 1, v52) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v32, v34);
    os_unfair_lock_unlock(v33);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v35);
    return;
  }
  unint64_t v36 = v56;
  v51(v56, v32, v35);
  uint64_t v37 = *(int *)(v35 + 60);
  uint64_t v38 = *(void *)&v36[v37];
  sub_1ACE757D8();
  if (sub_1ACE757B8()) {
    goto LABEL_27;
  }
  sub_1ACE757D8();
  char v39 = sub_1ACE757B8();
  uint64_t v40 = sub_1ACE757D8();
  if ((v39 & 1) == 0)
  {
    if (sub_1ACE757B8())
    {
LABEL_23:
      uint64_t v40 = sub_1ACE757D8();
      goto LABEL_26;
    }
    if (((v38 | v31) & 0x8000000000000000) == 0)
    {
      uint64_t v40 = v38 + v31;
      if (!__OFADD__(v38, v31))
      {
        if ((v40 & 0x8000000000000000) == 0) {
          goto LABEL_26;
        }
LABEL_33:
        __break(1u);
        return;
      }
      goto LABEL_23;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
LABEL_26:
  *(void *)&v36[v37] = v40;
LABEL_27:
  uint64_t v41 = v63;
  uint64_t v42 = v52;
  v46(v63, v36, v52);
  v47(v41, 0, 1, v42);
  unint64_t v43 = v54;
  swift_beginAccess();
  v62(v43, v41, v34);
  swift_endAccess();
  os_unfair_lock_unlock(v55);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v13 + 8);
  v44(v36, v42);
  v44(v17, v42);
}

void sub_1ACC30F5C(uint64_t a1)
{
  v16[1] = a1;
  uint64_t v2 = *(void *)(*v1 + 80);
  uint64_t v3 = type metadata accessor for ProducerInner.State();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v16 - v8;
  v16[0] = v2;
  uint64_t active = type metadata accessor for ProducerInner.ActiveState();
  uint64_t v11 = *(void *)(active - 8);
  MEMORY[0x1F4188790](active);
  uint64_t v13 = (char *)v16 - v12;
  uint64_t v14 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v14);
  uint64_t v15 = (char *)v1 + *(void *)(*v1 + 112);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v9, v15, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, active) == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    os_unfair_lock_unlock(v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, active);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v7, 1, 1, active);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v4 + 40))(v15, v7, v3);
    swift_endAccess();
    os_unfair_lock_unlock(v14);
    sub_1ACE75768();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, active);
  }
}

void sub_1ACC31260()
{
  uint64_t v1 = *(void *)(*v0 + 88);
  uint64_t v29 = sub_1ACE76FD8();
  uint64_t v27 = *(void *)(v29 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v29);
  char v26 = (char *)&v24 - v3;
  uint64_t v28 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v25 = (char *)&v24 - v4;
  uint64_t v5 = type metadata accessor for ProducerInner.State();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t active = type metadata accessor for ProducerInner.ActiveState();
  uint64_t v13 = *(void *)(active - 8);
  MEMORY[0x1F4188790](active);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = (os_unfair_lock_s *)(v0[2] + 16);
  os_unfair_lock_lock(v16);
  uint64_t v17 = (char *)v0 + *(void *)(*v0 + 112);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v17, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, active) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    os_unfair_lock_unlock(v16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, active);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v9, 1, 1, active);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v6 + 40))(v17, v9, v5);
    swift_endAccess();
    os_unfair_lock_unlock(v16);
    uint64_t v19 = v26;
    uint64_t v18 = v27;
    uint64_t v20 = v29;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v26, &v15[*(int *)(active + 44)], v29);
    uint64_t v21 = v28;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v19, 1, v1) == 1)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, active);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v20);
    }
    else
    {
      uint64_t v22 = v25;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v25, v19, v1);
      char v23 = *(void (**)(char *))&v15[*(int *)(active + 56)];
      swift_retain();
      v23(v22);
      swift_release();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v1);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, active);
    }
  }
}

uint64_t sub_1ACC31724()
{
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 112);
  uint64_t v2 = type metadata accessor for ProducerInner.State();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1ACC317E4()
{
  sub_1ACC31724();
  return swift_deallocClassInstance();
}

void sub_1ACC31838(char *a1)
{
}

void sub_1ACC3185C()
{
}

char *sub_1ACC31880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v32 = a6;
  uint64_t v33 = a7;
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v27 = a1;
  uint64_t v8 = *(void *)v7;
  uint64_t v9 = *(void *)(*(void *)v7 + 88);
  uint64_t v10 = sub_1ACE76FD8();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = *(void *)(v8 + 80);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = type metadata accessor for ProducerInner.State();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v26 - v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v22 = swift_allocObject();
  *(_DWORD *)(v22 + 16) = 0;
  *((void *)v7 + 2) = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v27, v13);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v12, 1, 1, v9);
  uint64_t v23 = sub_1ACE757C8();
  sub_1ACC2FE80((uint64_t)v17, (uint64_t)v12, v28, v29, v30, v31, v32, v33, (uint64_t)v21, v23, v13);
  uint64_t active = type metadata accessor for ProducerInner.ActiveState();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(active - 8) + 56))(v21, 0, 1, active);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v7[*(void *)(*(void *)v7 + 112)], v21, v18);
  return v7;
}

uint64_t dispatch thunk of PFProducer.makeContext()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PFProducer.setupContext(_:eventHandler:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 32))();
}

uint64_t dispatch thunk of PFProducer.invalidateContext(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1ACC31BA0()
{
  uint64_t result = type metadata accessor for ProducerInner.State();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ProducerInner.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACC31C60()
{
  uint64_t result = type metadata accessor for ProducerInner.ActiveState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1ACC31CE0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t v10 = v9;
  unsigned int v11 = *(_DWORD *)(v9 + 84);
  unsigned int v12 = v11 - 1;
  if (!v11) {
    unsigned int v12 = 0;
  }
  if (v12 <= v8) {
    unsigned int v13 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v13 = v12;
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  uint64_t v14 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v15 = *(_DWORD *)(v9 + 80);
  uint64_t v16 = v14 + v15;
  uint64_t v17 = (v14 + v15) & ~v15;
  if (v11) {
    size_t v18 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    size_t v18 = *(void *)(*(void *)(v5 - 8) + 64) + 1;
  }
  size_t v19 = v18 + 7;
  size_t v20 = ((((((((v18 + 7 + v17) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unsigned int v21 = v15 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v21 > 7 || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0 || v20 > 0x18)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + (((v21 | 7) + 16) & ~(unint64_t)(v21 | 7)));
LABEL_36:
    swift_retain();
    return a1;
  }
  uint64_t v25 = ~v15;
  uint64_t v40 = v25;
  if (v8 == v13)
  {
    if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, v8, v6))
    {
LABEL_31:
      char v39 = (const void *)(((unint64_t)a2 + v16) & v40);
      goto LABEL_32;
    }
  }
  else
  {
    unint64_t v26 = ((unint64_t)a2 + v16) & v25;
    if (v12 == v13)
    {
      char v39 = (const void *)(((unint64_t)a2 + v16) & v25);
      if (v11 < 2 || (*(unsigned int (**)(unint64_t))(v9 + 48))(v26) < 2)
      {
LABEL_32:
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
        uint64_t v28 = (void *)(((unint64_t)a1 + v16) & v40);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v39, 1, v5))
        {
          memcpy(v28, v39, v18);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v28, v39, v5);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v5);
        }
        uint64_t v29 = (void *)(((unint64_t)v28 + v19) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v30 = (void *)(((unint64_t)v39 + v19) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v31 = v30[1];
        *uint64_t v29 = *v30;
        v29[1] = v31;
        uint64_t v32 = (void *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v33 = (void *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v34 = v33[1];
        void *v32 = *v33;
        v32[1] = v34;
        uint64_t v35 = (void *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v36 = (void *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v37 = v36[1];
        *uint64_t v35 = *v36;
        v35[1] = v37;
        *(void *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
        swift_retain();
        swift_retain();
        goto LABEL_36;
      }
    }
    else
    {
      unint64_t v27 = *(void *)((v19 + v26) & 0xFFFFFFFFFFFFFFF8);
      if (v27 >= 0xFFFFFFFF) {
        LODWORD(v27) = -1;
      }
      if (v27 == -1) {
        goto LABEL_31;
      }
    }
  }
  memcpy(a1, a2, v20);
  return a1;
}

uint64_t sub_1ACC32034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned int *)(v8 + 84);
  unsigned int v11 = v10 - 1;
  if (!v10) {
    unsigned int v11 = 0;
  }
  if (v11 <= v6) {
    unsigned int v12 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v12 = v11;
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  uint64_t v13 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v14 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = ~v14;
  uint64_t v16 = *(void *)(v8 + 64);
  if (v6 == v12)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(v5 + 48))(a1);
    if (result) {
      return result;
    }
    goto LABEL_21;
  }
  uint64_t v18 = (v13 + v14 + a1) & v15;
  if (v11 == v12)
  {
    if (v10 >= 2)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))((v13 + v14 + a1) & v15, v10, v7);
      if (result >= 2) {
        return result;
      }
    }
    goto LABEL_22;
  }
  uint64_t v19 = 7;
  if (!v10) {
    uint64_t v19 = 8;
  }
  unint64_t v20 = *(void *)((v19 + v16 + v18) & 0xFFFFFFFFFFFFFFF8);
  if (v20 >= 0xFFFFFFFF) {
    LODWORD(v20) = -1;
  }
  uint64_t result = (v20 + 1);
  if (v20 == -1)
  {
LABEL_21:
    uint64_t v18 = (v13 + v14 + a1) & v15;
LABEL_22:
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v18, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v18, v7);
    }
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void *sub_1ACC322B4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v4 - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned int *)(v8 + 84);
  unsigned int v11 = v10 - 1;
  if (!v10) {
    unsigned int v11 = 0;
  }
  if (v11 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = v11;
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = ~v13;
  uint64_t v15 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v13;
  size_t v33 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v7 == v12)
  {
    if (!(*(unsigned int (**)(const void *))(v6 + 48))(a2))
    {
LABEL_23:
      uint64_t v16 = (const void *)(((unint64_t)a2 + v15) & v14);
LABEL_24:
      unsigned int v21 = a1;
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v16, 1, v4))
      {
        if (v10) {
          size_t v22 = v33;
        }
        else {
          size_t v22 = v33 + 1;
        }
        memcpy((void *)(((unint64_t)a1 + v15) & v14), v16, v22);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))(((unint64_t)a1 + v15) & v14, v16, v4);
        (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v9 + 56))(((unint64_t)a1 + v15) & v14, 0, 1, v4);
        if (v10) {
          size_t v22 = v33;
        }
        else {
          size_t v22 = v33 + 1;
        }
      }
      uint64_t v23 = (void *)((v22 + 7 + (((unint64_t)a1 + v15) & v14)) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v24 = (void *)(((unint64_t)v16 + v22 + 7) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v25 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v25;
      unint64_t v26 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v27 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v28 = v27[1];
      *unint64_t v26 = *v27;
      v26[1] = v28;
      uint64_t v29 = (void *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v30 = (void *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v31 = v30[1];
      *uint64_t v29 = *v30;
      v29[1] = v31;
      *(void *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
      swift_retain();
      swift_retain();
      swift_retain();
      return v21;
    }
  }
  else
  {
    uint64_t v16 = (const void *)(((unint64_t)a2 + v15) & v14);
    if (v11 == v12)
    {
      if (v10 < 2
        || (*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(((unint64_t)a2 + v15) & v14, v10, v4) < 2)
      {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v17 = 7;
      if (!v10) {
        uint64_t v17 = 8;
      }
      unint64_t v18 = *(void *)(((unint64_t)v16 + v17 + *(void *)(*(void *)(v4 - 8) + 64)) & 0xFFFFFFFFFFFFFFF8);
      if (v18 >= 0xFFFFFFFF) {
        LODWORD(v18) = -1;
      }
      if (v18 == -1) {
        goto LABEL_23;
      }
    }
  }
  uint64_t v19 = v15 & ~v13;
  uint64_t v20 = 7;
  if (!v10) {
    uint64_t v20 = 8;
  }
  unsigned int v21 = a1;
  memcpy(a1, a2, ((((((((v20 + v33 + v19) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 8);
  return v21;
}

void *sub_1ACC325E8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t v10 = (void *)*(unsigned int *)(v9 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = v11;
  }
  if (v12 <= 0x7FFFFFFF) {
    int v13 = 0x7FFFFFFF;
  }
  else {
    int v13 = v12;
  }
  uint64_t v14 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v81 = *(void *)(v6 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = ~v15;
  uint64_t v17 = v14 + v15;
  size_t v18 = *(void *)(v9 + 64);
  uint64_t v79 = (v14 + v15) & ~v15;
  uint64_t v80 = ~v15;
  uint64_t v82 = v14 + v15;
  if (v8 == v13)
  {
    uint64_t v78 = *(void *)(*(void *)(a3 + 16) - 8);
    uint64_t v19 = *(void *)(a3 + 24);
    size_t v20 = *(void *)(v9 + 64);
    int v21 = *(_DWORD *)(v9 + 84);
    uint64_t v10 = a1;
    size_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v23 = *(void *)(a3 + 16);
    int v24 = v22(a1, v8, v5);
    uint64_t v25 = v8;
    uint64_t v26 = v23;
    int v27 = v22(a2, v25, v23);
    uint64_t v4 = v10;
    LODWORD(v10) = v21;
    size_t v18 = v20;
    uint64_t v6 = v19;
    if (v24)
    {
      if (v27)
      {
LABEL_13:
        uint64_t v28 = 7;
        if (!v10) {
          uint64_t v28 = 8;
        }
        memcpy(v4, a2, ((((((((v28 + v18 + v79) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 8);
        return v4;
      }
      goto LABEL_51;
    }
    goto LABEL_35;
  }
  unint64_t v29 = ((unint64_t)a1 + v17) & v16;
  if (v11 == v13)
  {
    if (v10 >= 2)
    {
      uint64_t v30 = *(void *)(a3 + 16);
      uint64_t v31 = v14 + v15;
      unsigned int v32 = (*(uint64_t (**)(unint64_t, void *, uint64_t))(v9 + 48))(v29, v10, v6);
      uint64_t v17 = v31;
      uint64_t v5 = v30;
      uint64_t v16 = v80;
      if (v32 >= 2)
      {
LABEL_19:
        size_t v33 = (const void *)(((unint64_t)a2 + v17) & v16);
        uint64_t v78 = v7;
        uint64_t v26 = v5;
        if (v11 == v13)
        {
          if (v10 >= 2
            && (*(unsigned int (**)(const void *, void *, uint64_t))(v81 + 48))(v33, v10, v6) >= 2)
          {
            goto LABEL_13;
          }
          goto LABEL_52;
        }
        uint64_t v51 = 7;
        if (!v10) {
          uint64_t v51 = 8;
        }
        unint64_t v52 = *(void *)(((unint64_t)v33 + v51 + v18) & 0xFFFFFFFFFFFFFFF8);
        if (v52 >= 0xFFFFFFFF) {
          LODWORD(v52) = -1;
        }
        if (v52 != -1) {
          goto LABEL_13;
        }
LABEL_51:
        size_t v33 = (const void *)(((unint64_t)a2 + v82) & v80);
LABEL_52:
        (*(void (**)(void *, void *, uint64_t))(v78 + 16))(v4, a2, v26);
        uint64_t v53 = (void *)(((unint64_t)v4 + v82) & v80);
        uint64_t v54 = v4;
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v81 + 48))(v33, 1, v6))
        {
          if (v10) {
            size_t v55 = v18;
          }
          else {
            size_t v55 = v18 + 1;
          }
          memcpy(v53, v33, v55);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v81 + 16))(v53, v33, v6);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v81 + 56))(v53, 0, 1, v6);
          if (v10) {
            size_t v55 = v18;
          }
          else {
            size_t v55 = v18 + 1;
          }
        }
        uint64_t v68 = (void *)(((unint64_t)v53 + v55 + 7) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v69 = (void *)(((unint64_t)v33 + v55 + 7) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v70 = v69[1];
        *uint64_t v68 = *v69;
        v68[1] = v70;
        uint64_t v71 = (void *)(((unint64_t)v68 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v72 = (void *)(((unint64_t)v69 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v73 = v72[1];
        *uint64_t v71 = *v72;
        v71[1] = v73;
        uint64_t v74 = (void *)(((unint64_t)v71 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v75 = (void *)(((unint64_t)v72 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v76 = v75[1];
        *uint64_t v74 = *v75;
        v74[1] = v76;
        *(void *)(((unint64_t)v74 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v75 + 23) & 0xFFFFFFFFFFFFFFF8);
        swift_retain();
        swift_retain();
        swift_retain();
        return v54;
      }
    }
  }
  else
  {
    uint64_t v34 = 7;
    if (!v10) {
      uint64_t v34 = 8;
    }
    if (*(void *)((v34 + v18 + v29) & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFuLL) {
      goto LABEL_19;
    }
  }
  uint64_t v35 = (void *)(((unint64_t)a2 + v17) & v16);
  if (v11 == v13)
  {
    if (v10 >= 2)
    {
      unint64_t v36 = ((unint64_t)a2 + v17) & v16;
      uint64_t v37 = v16;
      uint64_t v38 = v5;
      unsigned int v39 = (*(uint64_t (**)(unint64_t, void *, uint64_t))(v81 + 48))(v36, v10, v6);
      uint64_t v5 = v38;
      uint64_t v16 = v37;
      if (v39 >= 2) {
        goto LABEL_36;
      }
    }
LABEL_43:
    (*(void (**)(void *, void *, uint64_t))(v7 + 24))(v4, a2, v5);
    uint64_t v46 = v4;
    uint64_t v47 = (void *)(((unint64_t)v4 + v82) & v16);
    uint64_t v48 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v81 + 48);
    int v49 = v48(v47, 1, v6);
    int v50 = v48(v35, 1, v6);
    if (v49)
    {
      if (!v50)
      {
        (*(void (**)(void *, void *, uint64_t))(v81 + 16))(v47, v35, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v81 + 56))(v47, 0, 1, v6);
LABEL_63:
        if (v10) {
          size_t v57 = v18;
        }
        else {
          size_t v57 = v18 + 1;
        }
        size_t v58 = v57 + 7;
        unint64_t v59 = (void *)(((unint64_t)v47 + v58) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v60 = (void *)(((unint64_t)v35 + v58) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v61 = v60[1];
        *unint64_t v59 = *v60;
        v59[1] = v61;
        swift_retain();
        swift_release();
        uint64_t v62 = (void *)(((unint64_t)v59 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v63 = (void *)(((unint64_t)v60 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v64 = v63[1];
        *uint64_t v62 = *v63;
        v62[1] = v64;
        swift_retain();
        swift_release();
        uint64_t v65 = (void *)(((unint64_t)v62 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v66 = (void *)(((unint64_t)v63 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v67 = v66[1];
        *uint64_t v65 = *v66;
        v65[1] = v67;
        swift_retain();
        swift_release();
        *(void *)(((unint64_t)v65 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v66 + 23) & 0xFFFFFFFFFFFFFFF8);
        return v46;
      }
    }
    else
    {
      if (!v50)
      {
        (*(void (**)(void *, void *, uint64_t))(v81 + 24))(v47, v35, v6);
        goto LABEL_63;
      }
      (*(void (**)(void *, uint64_t))(v81 + 8))(v47, v6);
    }
    if (v10) {
      size_t v56 = v18;
    }
    else {
      size_t v56 = v18 + 1;
    }
    memcpy(v47, v35, v56);
    goto LABEL_63;
  }
  uint64_t v78 = v7;
  uint64_t v26 = v5;
  uint64_t v40 = 7;
  if (!v10) {
    uint64_t v40 = 8;
  }
  unint64_t v41 = *(void *)((v40 + v18 + (((unint64_t)a2 + v17) & v16)) & 0xFFFFFFFFFFFFFFF8);
  if (v41 >= 0xFFFFFFFF) {
    LODWORD(v41) = -1;
  }
  int v27 = v41 + 1;
LABEL_35:
  uint64_t v5 = v26;
  uint64_t v7 = v78;
  uint64_t v16 = v80;
  if (!v27)
  {
    uint64_t v35 = (void *)(((unint64_t)a2 + v82) & v80);
    goto LABEL_43;
  }
LABEL_36:
  uint64_t v42 = a2;
  (*(void (**)(void *, uint64_t))(v7 + 8))(v4, v5);
  unint64_t v43 = ((unint64_t)v4 + v82) & v16;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v81 + 48))(v43, 1, v6)) {
    (*(void (**)(unint64_t, uint64_t))(v81 + 8))(v43, v6);
  }
  if (v10) {
    size_t v44 = v18;
  }
  else {
    size_t v44 = v18 + 1;
  }
  size_t v45 = v44 + 7;
  swift_release();
  swift_release();
  swift_release();
  memcpy(v4, v42, ((((((((v45 + v79) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 8);
  return v4;
}

void *sub_1ACC32D2C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v4 - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned int *)(v8 + 84);
  unsigned int v11 = v10 - 1;
  if (!v10) {
    unsigned int v11 = 0;
  }
  if (v11 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = v11;
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = ~v13;
  uint64_t v15 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v13;
  size_t v30 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v7 == v12)
  {
    if (!(*(unsigned int (**)(const void *))(v6 + 48))(a2))
    {
LABEL_23:
      uint64_t v16 = (const void *)(((unint64_t)a2 + v15) & v14);
LABEL_24:
      int v21 = a1;
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v16, 1, v4))
      {
        if (v10) {
          size_t v22 = v30;
        }
        else {
          size_t v22 = v30 + 1;
        }
        memcpy((void *)(((unint64_t)a1 + v15) & v14), v16, v22);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 32))(((unint64_t)a1 + v15) & v14, v16, v4);
        (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v9 + 56))(((unint64_t)a1 + v15) & v14, 0, 1, v4);
        if (v10) {
          size_t v22 = v30;
        }
        else {
          size_t v22 = v30 + 1;
        }
      }
      uint64_t v23 = (_OWORD *)((v22 + 7 + (((unint64_t)a1 + v15) & v14)) & 0xFFFFFFFFFFFFFFF8);
      int v24 = (_OWORD *)(((unint64_t)v16 + v22 + 7) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v23 = *v24;
      uint64_t v25 = (_OWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v26 = (_OWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v25 = *v26;
      int v27 = (_OWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v28 = (_OWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
      *int v27 = *v28;
      *(void *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
      return v21;
    }
  }
  else
  {
    uint64_t v16 = (const void *)(((unint64_t)a2 + v15) & v14);
    if (v11 == v12)
    {
      if (v10 < 2
        || (*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(((unint64_t)a2 + v15) & v14, v10, v4) < 2)
      {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v17 = 7;
      if (!v10) {
        uint64_t v17 = 8;
      }
      unint64_t v18 = *(void *)(((unint64_t)v16 + v17 + *(void *)(*(void *)(v4 - 8) + 64)) & 0xFFFFFFFFFFFFFFF8);
      if (v18 >= 0xFFFFFFFF) {
        LODWORD(v18) = -1;
      }
      if (v18 == -1) {
        goto LABEL_23;
      }
    }
  }
  uint64_t v19 = v15 & ~v13;
  uint64_t v20 = 7;
  if (!v10) {
    uint64_t v20 = 8;
  }
  int v21 = a1;
  memcpy(a1, a2, ((((((((v20 + v30 + v19) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 8);
  return v21;
}

void *sub_1ACC33034(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t v10 = (void *)*(unsigned int *)(v9 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = v11;
  }
  if (v12 <= 0x7FFFFFFF) {
    int v13 = 0x7FFFFFFF;
  }
  else {
    int v13 = v12;
  }
  uint64_t v14 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v75 = *(void *)(v6 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = ~v15;
  uint64_t v17 = v14 + v15;
  size_t v18 = *(void *)(v9 + 64);
  uint64_t v74 = (v14 + v15) & ~v15;
  uint64_t v76 = v14 + v15;
  if (v8 == v13)
  {
    uint64_t v71 = *(void *)(a3 + 24);
    uint64_t v73 = *(void *)(*(void *)(a3 + 16) - 8);
    size_t v19 = *(void *)(v9 + 64);
    int v20 = *(_DWORD *)(v9 + 84);
    uint64_t v10 = a1;
    int v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v22 = *(void *)(a3 + 16);
    int v23 = v21(a1, v8, v5);
    uint64_t v24 = v8;
    uint64_t v25 = v22;
    int v26 = v21(a2, v24, v22);
    uint64_t v4 = v10;
    LODWORD(v10) = v20;
    size_t v18 = v19;
    uint64_t v6 = v71;
    if (v23)
    {
      if (v26)
      {
LABEL_13:
        uint64_t v27 = 7;
        if (!v10) {
          uint64_t v27 = 8;
        }
        memcpy(v4, a2, ((((((((v27 + v18 + v74) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 8);
        return v4;
      }
      goto LABEL_51;
    }
    goto LABEL_35;
  }
  unint64_t v28 = ((unint64_t)a1 + v17) & v16;
  if (v11 == v13)
  {
    if (v10 >= 2)
    {
      uint64_t v72 = ~v15;
      uint64_t v29 = *(void *)(a3 + 16);
      uint64_t v30 = v14 + v15;
      unsigned int v31 = (*(uint64_t (**)(unint64_t, void *, uint64_t))(v9 + 48))(v28, v10, v6);
      uint64_t v17 = v30;
      uint64_t v5 = v29;
      uint64_t v16 = v72;
      if (v31 >= 2)
      {
LABEL_19:
        uint64_t v73 = v7;
        if (v11 == v13)
        {
          unsigned int v32 = (const void *)(((unint64_t)a2 + v17) & v16);
          uint64_t v25 = v5;
          if (v10 >= 2
            && (*(unsigned int (**)(const void *, void *, uint64_t))(v75 + 48))(v32, v10, v6) >= 2)
          {
            goto LABEL_13;
          }
          goto LABEL_52;
        }
        uint64_t v25 = v5;
        uint64_t v51 = 7;
        if (!v10) {
          uint64_t v51 = 8;
        }
        unint64_t v52 = *(void *)((v51 + v18 + (((unint64_t)a2 + v17) & v16)) & 0xFFFFFFFFFFFFFFF8);
        if (v52 >= 0xFFFFFFFF) {
          LODWORD(v52) = -1;
        }
        if (v52 != -1) {
          goto LABEL_13;
        }
LABEL_51:
        unsigned int v32 = (const void *)(((unint64_t)a2 + v76) & v16);
LABEL_52:
        (*(void (**)(void *, void *, uint64_t))(v73 + 32))(v4, a2, v25);
        uint64_t v53 = (void *)(((unint64_t)v4 + v76) & v16);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v75 + 48))(v32, 1, v6))
        {
          if (v10) {
            size_t v54 = v18;
          }
          else {
            size_t v54 = v18 + 1;
          }
          memcpy(v53, v32, v54);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v75 + 32))(v53, v32, v6);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v53, 0, 1, v6);
          if (v10) {
            size_t v54 = v18;
          }
          else {
            size_t v54 = v18 + 1;
          }
        }
        uint64_t v64 = (_OWORD *)(((unint64_t)v53 + v54 + 7) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v65 = (_OWORD *)(((unint64_t)v32 + v54 + 7) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v64 = *v65;
        uint64_t v66 = (_OWORD *)(((unint64_t)v64 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v67 = (_OWORD *)(((unint64_t)v65 + 23) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v66 = *v67;
        uint64_t v68 = (_OWORD *)(((unint64_t)v66 + 23) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v69 = (_OWORD *)(((unint64_t)v67 + 23) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v68 = *v69;
        *(void *)(((unint64_t)v68 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v69 + 23) & 0xFFFFFFFFFFFFFFF8);
        return v4;
      }
    }
  }
  else
  {
    uint64_t v33 = 7;
    if (!v10) {
      uint64_t v33 = 8;
    }
    if (*(void *)((v33 + v18 + v28) & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFuLL) {
      goto LABEL_19;
    }
  }
  uint64_t v34 = (char *)(((unint64_t)a2 + v17) & v16);
  if (v11 == v13)
  {
    if (v10 >= 2)
    {
      unint64_t v35 = ((unint64_t)a2 + v17) & v16;
      uint64_t v36 = v16;
      uint64_t v37 = v5;
      unsigned int v38 = (*(uint64_t (**)(unint64_t, void *, uint64_t))(v75 + 48))(v35, v10, v6);
      uint64_t v5 = v37;
      uint64_t v16 = v36;
      if (v38 >= 2) {
        goto LABEL_36;
      }
    }
LABEL_43:
    int v45 = (int)v10;
    (*(void (**)(void *, void *, uint64_t))(v7 + 40))(v4, a2, v5);
    uint64_t v46 = v4;
    uint64_t v47 = (void *)(((unint64_t)v4 + v76) & v16);
    uint64_t v48 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v75 + 48);
    int v49 = v48(v47, 1, v6);
    int v50 = v48(v34, 1, v6);
    if (v49)
    {
      if (!v50)
      {
        (*(void (**)(void *, char *, uint64_t))(v75 + 32))(v47, v34, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v47, 0, 1, v6);
LABEL_63:
        uint64_t v4 = v46;
        if (v45) {
          size_t v56 = v18;
        }
        else {
          size_t v56 = v18 + 1;
        }
        size_t v57 = v56 + 7;
        size_t v58 = (_OWORD *)(((unint64_t)v47 + v57) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v59 = (unint64_t)&v34[v57];
        unint64_t v60 = (v59 & 0xFFFFFFFFFFFFFFF8) + 23;
        *size_t v58 = *(_OWORD *)(v59 & 0xFFFFFFFFFFFFFFF8);
        swift_release();
        uint64_t v61 = (_OWORD *)(((unint64_t)v58 + 23) & 0xFFFFFFFFFFFFFFF8);
        v60 &= 0xFFFFFFFFFFFFFFF8;
        *uint64_t v61 = *(_OWORD *)v60;
        swift_release();
        uint64_t v62 = (_OWORD *)(((unint64_t)v61 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v63 = (_OWORD *)((v60 + 23) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v62 = *v63;
        swift_release();
        *(void *)(((unint64_t)v62 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v63 + 23) & 0xFFFFFFFFFFFFFFF8);
        return v4;
      }
    }
    else
    {
      if (!v50)
      {
        (*(void (**)(void *, char *, uint64_t))(v75 + 40))(v47, v34, v6);
        goto LABEL_63;
      }
      (*(void (**)(void *, uint64_t))(v75 + 8))(v47, v6);
    }
    if (v45) {
      size_t v55 = v18;
    }
    else {
      size_t v55 = v18 + 1;
    }
    memcpy(v47, v34, v55);
    goto LABEL_63;
  }
  uint64_t v73 = v7;
  uint64_t v25 = v5;
  uint64_t v39 = 7;
  if (!v10) {
    uint64_t v39 = 8;
  }
  unint64_t v40 = *(void *)((v39 + v18 + (((unint64_t)a2 + v17) & v16)) & 0xFFFFFFFFFFFFFFF8);
  if (v40 >= 0xFFFFFFFF) {
    LODWORD(v40) = -1;
  }
  int v26 = v40 + 1;
LABEL_35:
  uint64_t v5 = v25;
  uint64_t v7 = v73;
  if (!v26)
  {
    uint64_t v34 = (char *)(((unint64_t)a2 + v76) & v16);
    goto LABEL_43;
  }
LABEL_36:
  unint64_t v41 = a2;
  (*(void (**)(void *, uint64_t))(v7 + 8))(v4, v5);
  unint64_t v42 = ((unint64_t)v4 + v76) & v16;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v75 + 48))(v42, 1, v6)) {
    (*(void (**)(unint64_t, uint64_t))(v75 + 8))(v42, v6);
  }
  if (v10) {
    size_t v43 = v18;
  }
  else {
    size_t v43 = v18 + 1;
  }
  size_t v44 = v43 + 7;
  swift_release();
  swift_release();
  swift_release();
  memcpy(v4, v41, ((((((((v44 + v74) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 8);
  return v4;
}

uint64_t sub_1ACC33724(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  if (v9 <= v6) {
    unsigned int v10 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v10 = v9;
  }
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  if (a2)
  {
    uint64_t v13 = *(void *)(*(void *)(v4 - 8) + 64) + v11;
    uint64_t v14 = v12 + 7;
    if (v10 - 1 < a2)
    {
      unint64_t v15 = ((((((((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 8;
      unsigned int v16 = a2 - v10 + 2;
      if ((v15 & 0xFFFFFFF8) != 0) {
        unsigned int v16 = 2;
      }
      if (v16 >= 0x10000) {
        unsigned int v17 = 4;
      }
      else {
        unsigned int v17 = 2;
      }
      if (v16 < 0x100) {
        unsigned int v17 = 1;
      }
      if (v16 >= 2) {
        uint64_t v18 = v17;
      }
      else {
        uint64_t v18 = 0;
      }
      switch(v18)
      {
        case 1:
          int v19 = *((unsigned __int8 *)a1 + v15);
          if (!*((unsigned char *)a1 + v15)) {
            break;
          }
          goto LABEL_27;
        case 2:
          int v19 = *(unsigned __int16 *)((char *)a1 + v15);
          if (*(_WORD *)((char *)a1 + v15)) {
            goto LABEL_27;
          }
          break;
        case 3:
          __break(1u);
          JUMPOUT(0x1ACC3395CLL);
        case 4:
          int v19 = *(_DWORD *)((char *)a1 + v15);
          if (!v19) {
            break;
          }
LABEL_27:
          int v20 = v19 - 1;
          if ((v15 & 0xFFFFFFF8) != 0)
          {
            int v20 = 0;
            int v21 = *a1;
          }
          else
          {
            int v21 = 0;
          }
          return (v21 | v20) + v10;
        default:
          break;
      }
    }
    if (v6 == v10)
    {
      unsigned int v22 = (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v5 + 48))(a1, v6, v4);
      goto LABEL_39;
    }
    unint64_t v23 = ((unint64_t)a1 + v13) & ~v11;
    if (v9 != v10)
    {
      unint64_t v25 = *(void *)((v14 + v23) & 0xFFFFFFFFFFFFFFF8);
      if (v25 >= 0xFFFFFFFF) {
        LODWORD(v25) = -1;
      }
      unsigned int v22 = v25 + 1;
LABEL_39:
      BOOL v26 = v22 != 0;
      uint64_t result = v22 - 1;
      if (result != 0 && v26) {
        return result;
      }
      return 0;
    }
    if (v8 >= 2)
    {
      unsigned int v24 = (*(uint64_t (**)(unint64_t))(v7 + 48))(v23);
      if (v24 >= 2)
      {
        unsigned int v22 = v24 - 1;
        goto LABEL_39;
      }
    }
  }
  return 0;
}

void sub_1ACC33970(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(*(void *)(a4 + 24) - 8);
  int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  if (v11) {
    unsigned int v14 = v11 - 1;
  }
  else {
    unsigned int v14 = 0;
  }
  if (v14 <= v9) {
    unsigned int v15 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v15 = v14;
  }
  if (v15 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  unsigned int v16 = v15 - 1;
  uint64_t v17 = v12 + v13;
  uint64_t v18 = (v12 + v13) & ~v13;
  if (v11) {
    uint64_t v19 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v10 + 64) + 1;
  }
  int v20 = v18 + v19;
  size_t v21 = ((((((((v18 + v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v16 < a3)
  {
    unsigned int v22 = a3 - v15 + 2;
    if (((((((((v18 + v19 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8) {
      unsigned int v22 = 2;
    }
    if (v22 >= 0x10000) {
      int v23 = 4;
    }
    else {
      int v23 = 2;
    }
    if (v22 < 0x100) {
      int v23 = 1;
    }
    if (v22 >= 2) {
      int v6 = v23;
    }
    else {
      int v6 = 0;
    }
  }
  if (v16 < a2)
  {
    unsigned int v24 = a2 - v15;
    if (v21) {
      int v25 = 1;
    }
    else {
      int v25 = v24 + 1;
    }
    if (v21)
    {
      bzero(a1, v21);
      *(_DWORD *)a1 = v24;
    }
    switch(v6)
    {
      case 1:
        a1[v21] = v25;
        return;
      case 2:
        *(_WORD *)&a1[v21] = v25;
        return;
      case 3:
        goto LABEL_57;
      case 4:
        *(_DWORD *)&a1[v21] = v25;
        return;
      default:
        return;
    }
  }
  uint64_t v26 = ~v13;
  switch(v6)
  {
    case 1:
      a1[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_38;
    case 2:
      *(_WORD *)&a1[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_38;
    case 3:
LABEL_57:
      __break(1u);
      JUMPOUT(0x1ACC33C88);
    case 4:
      *(_DWORD *)&a1[v21] = 0;
      goto LABEL_37;
    default:
LABEL_37:
      if (a2)
      {
LABEL_38:
        if (a2 + 1 <= v15)
        {
          if (a2 != -1)
          {
            if (v9 == v15)
            {
              unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
              uint64_t v29 = a2 + 1;
              v28(a1, v29, v9, v7);
            }
            else
            {
              unint64_t v30 = (unint64_t)&a1[v17] & v26;
              if (v14 == v15)
              {
                uint64_t v31 = a2 + 2;
                unsigned int v32 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
                v32(v30, v31);
              }
              else
              {
                uint64_t v33 = (void *)((v19 + v30 + 7) & 0xFFFFFFFFFFFFFFF8);
                if (((a2 + 1) & 0x80000000) != 0)
                {
                  uint64_t v34 = a2 - 0x7FFFFFFF;
                  v33[1] = 0;
                }
                else
                {
                  uint64_t v34 = a2;
                }
                *uint64_t v33 = v34;
              }
            }
          }
        }
        else if (((((((((v20 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
        {
          unsigned int v27 = a2 - v15;
          bzero(a1, ((((((((v20 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 8);
          *(_DWORD *)a1 = v27;
        }
      }
      return;
  }
}

uint64_t sub_1ACC33CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned int *)(v3 + 84);
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = v5;
  unsigned int v7 = *(_DWORD *)(v5 + 84);
  unsigned int v8 = v7 - 1;
  if (!v7) {
    unsigned int v8 = 0;
  }
  if (v8 <= v4) {
    unsigned int v9 = *(_DWORD *)(v3 + 84);
  }
  else {
    unsigned int v9 = v8;
  }
  uint64_t v10 = *(void *)(v5 + 64);
  if (v9 <= 0x7FFFFFFF) {
    int v11 = 0x7FFFFFFF;
  }
  else {
    int v11 = v9;
  }
  if (v4 == v11)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    return v12(a1, v4, v2);
  }
  else
  {
    unint64_t v14 = (*(void *)(v3 + 64) + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    if (v8 == v11)
    {
      if (v7 >= 2)
      {
        unsigned int v17 = (*(uint64_t (**)(unint64_t))(v6 + 48))(v14);
        if (v17 >= 2) {
          return v17 - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        return 0;
      }
    }
    else
    {
      if (v7) {
        uint64_t v15 = v10;
      }
      else {
        uint64_t v15 = v10 + 1;
      }
      unint64_t v16 = *(void *)((v15 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v16 >= 0xFFFFFFFF) {
        LODWORD(v16) = -1;
      }
      return (v16 + 1);
    }
  }
}

void sub_1ACC33E0C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4;
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(v4 + 64);
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = *(void *)(v7 + 64);
  if (v8) {
    unsigned int v12 = v8 - 1;
  }
  else {
    unsigned int v12 = 0;
  }
  if (v12 <= v6) {
    unsigned int v13 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v13 = v12;
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  uint64_t v14 = ~v10;
  uint64_t v15 = v9 + v10;
  if (!v8) {
    ++v11;
  }
  if (v13 >= a2)
  {
    if (a2)
    {
      if (v6 == v13)
      {
        unsigned int v17 = *(void (**)(void))(v5 + 56);
        v17();
      }
      else
      {
        unint64_t v18 = ((unint64_t)a1 + v15) & v14;
        if (v12 == v13)
        {
          uint64_t v19 = a2 + 1;
          int v20 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
          v20(v18, v19);
        }
        else
        {
          size_t v21 = (void *)((v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            *size_t v21 = a2 ^ 0x80000000;
            v21[1] = 0;
          }
          else
          {
            *size_t v21 = a2 - 1;
          }
        }
      }
    }
  }
  else if ((((((((((v15 & v14) + v11 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) {
            + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
  }
  {
    int v16 = ~v13 + a2;
    bzero(a1, (((((((((v15 & v14) + v11 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)+ 23) & 0xFFFFFFF8)+ 8);
    *a1 = v16;
  }
}

uint64_t type metadata accessor for ProducerInner.ActiveState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACC33FFC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1ACE76FD8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1ACC340EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  int v10 = *(_DWORD *)(v8 + 80);
  uint64_t v11 = v10;
  uint64_t v12 = v6 + v10;
  uint64_t v13 = (v6 + v11) & ~v11;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v14 = *(void *)(v8 + 64);
  }
  else {
    size_t v14 = *(void *)(v8 + 64) + 1;
  }
  unint64_t v15 = ((((((((v14 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unsigned int v16 = v10 | *(_DWORD *)(v5 + 80) & 0xF8;
  int v17 = (*(_DWORD *)(v5 + 80) | v10) & 0x100000;
  if (v16 > 7 || v17 != 0 || v15 > 0x18)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v20 + (((v16 | 7) + 16) & ~(unint64_t)(v16 | 7)));
  }
  else
  {
    uint64_t v21 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unsigned int v22 = (const void *)(((unint64_t)a2 + v12) & v21);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v22, 1, v7))
    {
      memcpy((void *)(((unint64_t)v4 + v12) & v21), v22, v14);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))(((unint64_t)v4 + v12) & v21, v22, v7);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v9 + 56))(((unint64_t)v4 + v12) & v21, 0, 1, v7);
    }
    int v23 = (void *)(((((unint64_t)v4 + v12) & v21) + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v24 = (void *)(((unint64_t)v22 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v25 = v24[1];
    *int v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v27 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = (void *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v30 = (void *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    *(void *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1ACC34360(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (v5 + a1 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6)) {
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v8, v6);
  }
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ACC3448C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (void *)((v11 + a1) & ~v10);
  uint64_t v13 = (const void *)((v11 + a2) & ~v10);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
  {
    int v14 = *(_DWORD *)(v9 + 84);
    size_t v15 = *(void *)(v9 + 64);
    if (v14) {
      size_t v16 = v15;
    }
    else {
      size_t v16 = v15 + 1;
    }
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v12, v13, v8);
    unint64_t v18 = *(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56);
    uint64_t v17 = v9 + 56;
    v18(v12, 0, 1, v8);
    int v14 = *(_DWORD *)(v17 + 28);
    size_t v15 = *(void *)(v17 + 8);
  }
  if (v14) {
    size_t v19 = v15;
  }
  else {
    size_t v19 = v15 + 1;
  }
  uint64_t v20 = (void *)(((unint64_t)v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)(((unint64_t)v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  int v23 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v24 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = v24[1];
  *int v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v27 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  *(void *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1ACC34650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (void *)((v10 + a1) & ~v9);
  uint64_t v12 = (void *)((v10 + a2) & ~v9);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v14 = v13(v11, 1, v7);
  int v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v11, v12, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      goto LABEL_12;
    }
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v11, v12, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  if (v16) {
    size_t v18 = v17;
  }
  else {
    size_t v18 = v17 + 1;
  }
  memcpy(v11, v12, v18);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v19 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v20 = (void *)(((unint64_t)v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)(((unint64_t)v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_retain();
  swift_release();
  int v23 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v24 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = v24[1];
  *int v23 = *v24;
  v23[1] = v25;
  swift_retain();
  swift_release();
  uint64_t v26 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v27 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  swift_retain();
  swift_release();
  *(void *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1ACC348AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (void *)((v11 + a1) & ~v10);
  uint64_t v13 = (const void *)((v11 + a2) & ~v10);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
  {
    int v14 = *(_DWORD *)(v9 + 84);
    size_t v15 = *(void *)(v9 + 64);
    if (v14) {
      size_t v16 = v15;
    }
    else {
      size_t v16 = v15 + 1;
    }
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v12, v13, v8);
    size_t v18 = *(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56);
    uint64_t v17 = v9 + 56;
    v18(v12, 0, 1, v8);
    int v14 = *(_DWORD *)(v17 + 28);
    size_t v15 = *(void *)(v17 + 8);
  }
  if (v14) {
    size_t v19 = v15;
  }
  else {
    size_t v19 = v15 + 1;
  }
  uint64_t v20 = (_OWORD *)(((unint64_t)v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (_OWORD *)(((unint64_t)v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v20 = *v21;
  uint64_t v22 = (_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v23 = (_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v22 = *v23;
  unsigned int v24 = (_OWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = (_OWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v24 = *v25;
  *(void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1ACC34A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (void *)((v10 + a1) & ~v9);
  uint64_t v12 = (void *)((v10 + a2) & ~v9);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v14 = v13(v11, 1, v7);
  int v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v11, v12, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      goto LABEL_12;
    }
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v11, v12, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  if (v16) {
    size_t v18 = v17;
  }
  else {
    size_t v18 = v17 + 1;
  }
  memcpy(v11, v12, v18);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v19 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v20 = (_OWORD *)(((unint64_t)v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (uint64_t)v12 + v19 + 7;
  unint64_t v22 = (v21 & 0xFFFFFFFFFFFFFFF8) + 23;
  *uint64_t v20 = *(_OWORD *)(v21 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  int v23 = (_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v22 &= 0xFFFFFFFFFFFFFFF8;
  *int v23 = *(_OWORD *)v22;
  swift_release();
  unsigned int v24 = (_OWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = (_OWORD *)((v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v24 = *v25;
  swift_release();
  *(void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1ACC34C7C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  if (v9 <= v6) {
    unsigned int v10 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v10 = v9;
  }
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)(v4 - 8) + 64) + v11;
  uint64_t v14 = v12 + 7;
  if (v10 < a2)
  {
    unint64_t v15 = ((((((((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    if ((v15 & 0xFFFFFFF8) != 0) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = a2 - v10 + 1;
    }
    if (v16 >= 0x10000) {
      unsigned int v17 = 4;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v16 < 0x100) {
      unsigned int v17 = 1;
    }
    if (v16 >= 2) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v15);
        if (!*((unsigned char *)a1 + v15)) {
          break;
        }
        goto LABEL_28;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v15);
        if (*(_WORD *)((char *)a1 + v15)) {
          goto LABEL_28;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1ACC34EC4);
      case 4:
        int v19 = *(_DWORD *)((char *)a1 + v15);
        if (!v19) {
          break;
        }
LABEL_28:
        int v20 = v19 - 1;
        if ((v15 & 0xFFFFFFF8) != 0)
        {
          int v20 = 0;
          int v21 = *a1;
        }
        else
        {
          int v21 = 0;
        }
        return v10 + (v21 | v20) + 1;
      default:
        break;
    }
  }
  if (v6 == v10)
  {
    unint64_t v22 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v5 + 48);
    return v22(a1, v6, v4);
  }
  unint64_t v24 = ((unint64_t)a1 + v13) & ~v11;
  if (v9 == v10)
  {
    if (v8 >= 2)
    {
      unsigned int v26 = (*(uint64_t (**)(unint64_t))(v7 + 48))(v24);
      if (v26 >= 2) {
        return v26 - 1;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
  unint64_t v25 = *(void *)((v14 + v24) & 0xFFFFFFFFFFFFFFF8);
  if (v25 >= 0xFFFFFFFF) {
    LODWORD(v25) = -1;
  }
  return (v25 + 1);
}

void sub_1ACC34ED8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(*(void *)(a4 + 24) - 8);
  int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (v10) {
    unsigned int v13 = v10 - 1;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v13 <= v8) {
    unsigned int v14 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v14 = v13;
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  uint64_t v15 = v11 + v12;
  uint64_t v16 = (v11 + v12) & ~v12;
  if (v10) {
    uint64_t v17 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v18 = v17 + 7;
  size_t v19 = ((((((((v18 + v16) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v14 < a3)
  {
    unsigned int v20 = a3 - v14;
    if (((((((((v18 + v16) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v21 = v20 + 1;
    }
    else {
      unsigned int v21 = 2;
    }
    if (v21 >= 0x10000) {
      int v22 = 4;
    }
    else {
      int v22 = 2;
    }
    if (v21 < 0x100) {
      int v22 = 1;
    }
    if (v21 >= 2) {
      int v6 = v22;
    }
    else {
      int v6 = 0;
    }
  }
  if (a2 > v14)
  {
    if (v19) {
      int v23 = 1;
    }
    else {
      int v23 = a2 - v14;
    }
    if (v19)
    {
      int v24 = ~v14 + a2;
      bzero(a1, v19);
      *(_DWORD *)a1 = v24;
    }
    switch(v6)
    {
      case 1:
        a1[v19] = v23;
        return;
      case 2:
        *(_WORD *)&a1[v19] = v23;
        return;
      case 3:
        goto LABEL_54;
      case 4:
        *(_DWORD *)&a1[v19] = v23;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_39;
    case 2:
      *(_WORD *)&a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_39;
    case 3:
LABEL_54:
      __break(1u);
      JUMPOUT(0x1ACC3518CLL);
    case 4:
      *(_DWORD *)&a1[v19] = 0;
      goto LABEL_38;
    default:
LABEL_38:
      if (a2)
      {
LABEL_39:
        if (v8 == v14)
        {
          unint64_t v25 = *(void (**)(char *))(v7 + 56);
          v25(a1);
        }
        else
        {
          unint64_t v26 = (unint64_t)&a1[v15] & ~v12;
          if (v13 == v14)
          {
            uint64_t v27 = a2 + 1;
            uint64_t v28 = *(void (**)(unint64_t, uint64_t))(v9 + 56);
            v28(v26, v27);
          }
          else
          {
            uint64_t v29 = (void *)((v18 + v26) & 0xFFFFFFFFFFFFFFF8);
            if ((a2 & 0x80000000) != 0)
            {
              uint64_t v30 = a2 ^ 0x80000000;
              v29[1] = 0;
            }
            else
            {
              uint64_t v30 = a2 - 1;
            }
            *uint64_t v29 = v30;
          }
        }
      }
      return;
  }
}

uint64_t sub_1ACC351B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACC351D0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACC351F8()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 32) + 40))();
}

uint64_t sub_1ACC3526C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 32) + 32))();
}

uint64_t sub_1ACC352E0()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 32) + 24))();
}

void *sub_1ACC35350(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1ACE77508())
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AD119490](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      int v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = objc_msgSend(v5, sel_contentAdamId);
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v10 = sub_1ACE761B8();
        uint64_t v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1ACA41EA0(0, v3[2] + 1, 1, v3);
        }
        unint64_t v14 = v3[2];
        unint64_t v13 = v3[3];
        if (v14 >= v13 >> 1) {
          uint64_t v3 = sub_1ACA41EA0((void *)(v13 > 1), v14 + 1, 1, v3);
        }
        v3[2] = v14 + 1;
        uint64_t v15 = &v3[2 * v14];
        void v15[4] = v10;
        v15[5] = v12;
      }
      else
      {
      }
      ++v4;
      if (v7 == v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1ACC354E8()
{
  uint64_t v0 = sub_1ACE76CE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACE75E08();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1ACC453E8((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_1ACE76D28();
  qword_1EB7681F0 = result;
  return result;
}

id sub_1ACC3574C()
{
  uint64_t v1 = OBJC_IVAR___MTSecureDownloadRenewalManager____lazy_storage___secureKeyLoader;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___MTSecureDownloadRenewalManager____lazy_storage___secureKeyLoader);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___MTSecureDownloadRenewalManager____lazy_storage___secureKeyLoader);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)IMAVSecureKeyLoader), sel_initWithRecipient_useCase_account_urlProtocolDelegate_, 0, 1, 0, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id SecureDownloadRenewalManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id SecureDownloadRenewalManager.init()()
{
  return objc_msgSend(v0, sel_initWithDelegate_, 0);
}

id SecureDownloadRenewalManager.__allocating_init(delegate:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1ACC41944(a1);
  swift_unknownObjectRelease();
  return v4;
}

id SecureDownloadRenewalManager.init(delegate:)(uint64_t a1)
{
  id v1 = sub_1ACC41944(a1);
  swift_unknownObjectRelease();
  return v1;
}

void sub_1ACC358E4(void (*a1)(void), uint64_t a2)
{
  uint64_t v43 = a2;
  size_t v44 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1ACE75DC8();
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v39 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1ACE75E48();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  id v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE754C8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)&v37 - v12;
  id v14 = objc_msgSend(self, sel_sharedInstance);
  id v15 = objc_msgSend(v14, sel_mainOrPrivateContext);

  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = v15;
  _OWORD v17[3] = v16;
  v17[4] = ObjectType;
  int v50 = sub_1ACC41AD8;
  uint64_t v51 = v17;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v47 = 1107296256;
  uint64_t v48 = sub_1ACA6DA9C;
  int v49 = &block_descriptor_44;
  uint64_t v18 = _Block_copy(&aBlock);
  id v19 = v15;
  swift_retain();
  swift_release();
  objc_msgSend(v19, sel_performBlockAndWaitWithSave_, v18);
  _Block_release(v18);
  swift_beginAccess();
  uint64_t v20 = *(void *)(v16 + 16);
  swift_release();
  if (v20 < 1)
  {
    if (qword_1EB768FD8 != -1) {
      swift_once();
    }
    uint64_t v33 = __swift_project_value_buffer(v7, (uint64_t)qword_1EB768FB8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v33, v7);
    uint64_t v34 = sub_1ACE75498();
    os_log_type_t v35 = sub_1ACE76C08();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_1AC9D5000, v34, v35, "Did not locate any orphaned key data", v36, 2u);
      MEMORY[0x1AD11B340](v36, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    if (v44) {
      v44(MEMORY[0x1E4FBC860]);
    }
  }
  else
  {
    if (qword_1EB768FD8 != -1) {
      swift_once();
    }
    uint64_t v21 = __swift_project_value_buffer(v7, (uint64_t)qword_1EB768FB8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, v21, v7);
    int v22 = sub_1ACE75498();
    os_log_type_t v23 = sub_1ACE76C08();
    if (os_log_type_enabled(v22, v23))
    {
      int v24 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)int v24 = 134217984;
      uint64_t aBlock = v20;
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v22, v23, "Did locate %ld orphaned key data", v24, 0xCu);
      MEMORY[0x1AD11B340](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    if (qword_1EB7681F8 != -1) {
      swift_once();
    }
    unint64_t v25 = (void *)swift_allocObject();
    unint64_t v26 = v37;
    uint64_t v27 = v43;
    uint64_t v28 = (uint64_t)v44;
    v25[2] = v37;
    v25[3] = v28;
    v25[4] = v27;
    int v50 = (void (*)())sub_1ACC41AE8;
    uint64_t v51 = v25;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v47 = 1107296256;
    uint64_t v48 = sub_1ACA6DA9C;
    int v49 = &block_descriptor_9_0;
    uint64_t v29 = _Block_copy(&aBlock);
    id v30 = v26;
    sub_1ACA6DEC8(v28);
    sub_1ACE75E08();
    uint64_t v45 = MEMORY[0x1E4FBC860];
    sub_1ACC453E8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    uint64_t v31 = v39;
    uint64_t v32 = v42;
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v6, v31, v29);
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v31, v32);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v40);
    swift_release();
  }
}

uint64_t sub_1ACC360E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_1ACE75DC8();
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE75E48();
  uint64_t v25 = *(void *)(v10 - 8);
  uint64_t v26 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(self, sel_sharedInstance);
  id v14 = objc_msgSend(v13, sel_mainOrPrivateContext);

  id v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a1;
  v15[3] = v14;
  void v15[4] = a2;
  v15[5] = a3;
  v15[6] = ObjectType;
  uint64_t v34 = sub_1ACC41B34;
  os_log_type_t v35 = v15;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v31 = 1107296256;
  uint64_t v32 = sub_1ACA6DA9C;
  uint64_t v33 = &block_descriptor_15_0;
  uint64_t v16 = _Block_copy(&aBlock);
  id v17 = v14;
  sub_1ACA6DEC8(a2);
  swift_release();
  objc_msgSend(v17, sel_performBlockAndWaitWithSave_, v16);
  _Block_release(v16);
  if (qword_1EB7681F8 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)swift_allocObject();
  id v19 = v24;
  v18[2] = v24;
  void v18[3] = a2;
  void v18[4] = a3;
  uint64_t v34 = sub_1ACC41AE8;
  os_log_type_t v35 = v18;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v31 = 1107296256;
  uint64_t v32 = sub_1ACA6DA9C;
  uint64_t v33 = &block_descriptor_21_0;
  uint64_t v20 = _Block_copy(&aBlock);
  sub_1ACA6DEC8(a2);
  id v21 = v19;
  sub_1ACE75E08();
  uint64_t v29 = MEMORY[0x1E4FBC860];
  sub_1ACC453E8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  uint64_t v22 = v28;
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v12, v9, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v22);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v26);
  return swift_release();
}

void sub_1ACC364F8(uint64_t a1, void *a2, void (*a3)(void))
{
  uint64_t v6 = sub_1ACE754C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s18PodcastsFoundation28SecureDownloadRenewalManagerC16inContextKeyData3for3ctxSo09MTOfflineiJ0CSgs5Int64V_So015NSManagedObjectH0CtFZ_0(a1, a2);
  if (v10)
  {
    id v17 = v10;
    objc_msgSend(v10, sel_setPendingDeletion_, 1);
    uint64_t v11 = v17;
  }
  else
  {
    if (qword_1EB768FD8 != -1) {
      swift_once();
    }
    uint64_t v12 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB768FB8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v12, v6);
    id v13 = sub_1ACE75498();
    os_log_type_t v14 = sub_1ACE76BE8();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v15 = 134217984;
      uint64_t v18 = a1;
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v13, v14, "Did not locate key data for episode adam id %lld", v15, 0xCu);
      MEMORY[0x1AD11B340](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (a3) {
      a3(MEMORY[0x1E4FBC860]);
    }
  }
}

void sub_1ACC36814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  id v9 = objc_msgSend(self, sel_sharedInstance);
  id v10 = objc_msgSend(v9, sel_mainOrPrivateContext);

  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  _OWORD v11[3] = v10;
  void v11[4] = v4;
  v11[5] = a2;
  v11[6] = a3;
  v11[7] = ObjectType;
  void v15[4] = sub_1ACC41E3C;
  v15[5] = v11;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  _OWORD v15[2] = sub_1ACA6DA9C;
  v15[3] = &block_descriptor_27_0;
  uint64_t v12 = _Block_copy(v15);
  swift_bridgeObjectRetain();
  id v13 = v10;
  id v14 = v4;
  sub_1ACA6DEC8(a2);
  swift_release();
  objc_msgSend(v13, sel_performBlock_, v12);
  _Block_release(v12);
}

uint64_t sub_1ACC3697C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v40 = a3;
  uint64_t v7 = sub_1ACE754C8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE75DC8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1ACE75E48();
  uint64_t v43 = *(void *)(v15 - 8);
  uint64_t v44 = v15;
  MEMORY[0x1F4188790](v15);
  id v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    uint64_t v37 = v10;
    uint64_t v38 = v8;
    uint64_t v39 = v7;
    uint64_t v36 = v12;
    swift_bridgeObjectRetain();
    uint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *(void *)(a1 + 8 * v19 + 32);
      _s18PodcastsFoundation28SecureDownloadRenewalManagerC16inContextKeyData3for3ctxSo09MTOfflineiJ0CSgs5Int64V_So015NSManagedObjectH0CtFZ_0(v20, a2);
      if (!v21) {
        break;
      }
      uint64_t v22 = v21;
      ++v19;
      objc_msgSend(v21, sel_setPendingDeletion_, 1);

      if (v18 == v19)
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v36;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    if (qword_1EB768FD8 != -1) {
      swift_once();
    }
    uint64_t v29 = v39;
    uint64_t v30 = __swift_project_value_buffer(v39, (uint64_t)qword_1EB768FB8);
    swift_beginAccess();
    uint64_t v32 = v37;
    uint64_t v31 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, v30, v29);
    uint64_t v33 = sub_1ACE75498();
    os_log_type_t v34 = sub_1ACE76BE8();
    if (os_log_type_enabled(v33, v34))
    {
      os_log_type_t v35 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v35 = 134217984;
      uint64_t v46 = v20;
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v33, v34, "Did not locate key data for episode adam id %lld", v35, 0xCu);
      MEMORY[0x1AD11B340](v35, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v32, v29);
  }
  else
  {
LABEL_6:
    objc_msgSend(a2, sel_saveInCurrentBlock);
    if (qword_1EB7681F8 != -1) {
      swift_once();
    }
    os_log_type_t v23 = (void *)swift_allocObject();
    uint64_t v25 = v40;
    uint64_t v24 = v41;
    uint64_t v23[2] = v40;
    void v23[3] = v24;
    uint64_t v23[4] = v42;
    aBlock[4] = sub_1ACC41AE8;
    void aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = &block_descriptor_228;
    uint64_t v26 = _Block_copy(aBlock);
    id v27 = v25;
    sub_1ACA6DEC8(v24);
    sub_1ACE75E08();
    uint64_t v46 = MEMORY[0x1E4FBC860];
    sub_1ACC453E8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v17, v14, v26);
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v44);
    return swift_release();
  }
}

void sub_1ACC36F74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  id v7 = objc_msgSend(self, sel_sharedInstance);
  id v8 = objc_msgSend(v7, sel_privateQueueContext);

  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v8;
  v9[3] = v3;
  void v9[4] = a1;
  v9[5] = a2;
  void v9[6] = ObjectType;
  v13[4] = sub_1ACC41E9C;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1ACA6DA9C;
  v13[3] = &block_descriptor_33_0;
  id v10 = _Block_copy(v13);
  id v11 = v8;
  id v12 = v3;
  sub_1ACA6DEC8(a1);
  swift_release();
  objc_msgSend(v11, sel_performBlock_, v10);
  _Block_release(v10);
}

unint64_t sub_1ACC370C8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a4;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v5 = sub_1ACE75DC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1ACE75E48();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ACE761B8();
  id v13 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v14 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v13, sel_initWithEntityName_, v14);

  sub_1ACA50D4C(0, &qword_1EB772598);
  id v30 = a1;
  unint64_t result = sub_1ACE76EE8();
  uint64_t v34 = v10;
  id v31 = v15;
  unint64_t v17 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1ACE77508();
    unint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = v35;
    if (v18) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v18 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v19 = v35;
  if (!v18) {
    goto LABEL_11;
  }
LABEL_3:
  if (v18 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v29 = v9;
  for (uint64_t i = 0; i != v18; ++i)
  {
    if ((v17 & 0xC000000000000001) != 0) {
      id v21 = (id)MEMORY[0x1AD119490](i, v17);
    }
    else {
      id v21 = *(id *)(v17 + 8 * i + 32);
    }
    uint64_t v22 = v21;
    objc_msgSend(v21, sel_setPendingDeletion_, 1);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = v29;
  uint64_t v19 = v35;
LABEL_12:
  objc_msgSend(v30, sel_saveInCurrentBlock);
  if (qword_1EB7681F8 != -1) {
    swift_once();
  }
  os_log_type_t v23 = (void *)swift_allocObject();
  uint64_t v25 = v32;
  uint64_t v24 = v33;
  uint64_t v23[2] = v32;
  void v23[3] = v24;
  uint64_t v23[4] = v19;
  aBlock[4] = sub_1ACC41AE8;
  void aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_222;
  uint64_t v26 = _Block_copy(aBlock);
  id v27 = v25;
  sub_1ACA6DEC8(v24);
  sub_1ACE75E08();
  uint64_t v36 = MEMORY[0x1E4FBC860];
  sub_1ACC453E8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v12, v8, v26);
  _Block_release(v26);

  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v12, v9);
  return swift_release();
}

void sub_1ACC37730(void (*a1)(void), uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = OBJC_IVAR___MTSecureDownloadRenewalManager_removalLock;
  if ((v2[OBJC_IVAR___MTSecureDownloadRenewalManager_removalLock] & 1) != 0
    || v2[OBJC_IVAR___MTSecureDownloadRenewalManager_renewalLock] == 1)
  {
    if (a1) {
      a1(MEMORY[0x1E4FBC860]);
    }
    return;
  }
  uint64_t v22 = ObjectType;
  v2[OBJC_IVAR___MTSecureDownloadRenewalManager_removalLock] = 1;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v7 = (void *)(v23 + 16);
  id v8 = objc_msgSend(self, sel_sharedInstance);
  id v9 = objc_msgSend(v8, sel_mainOrPrivateContext);

  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = v2;
  v10[3] = v9;
  void v10[4] = v23 + 16;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1ACC44C64;
  *(void *)(v11 + 24) = v10;
  uint64_t v28 = sub_1ACADC690;
  uint64_t v29 = (void *)v11;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v25 = 1107296256;
  uint64_t v26 = sub_1ACC525DC;
  id v27 = &block_descriptor_150;
  id v12 = _Block_copy(&aBlock);
  id v21 = v2;
  id v13 = v9;
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performBlockAndWait_, v12);
  _Block_release(v12);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  if (*v7 >> 62) {
    goto LABEL_10;
  }
  if (*(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_8:
    id v15 = sub_1ACC3574C();
    sub_1ACA50D4C(0, (unint64_t *)&unk_1E99F3EC0);
    swift_bridgeObjectRetain();
    uint64_t v16 = (void *)sub_1ACE76558();
    swift_bridgeObjectRelease();
    unint64_t v17 = (void *)swift_allocObject();
    void v17[2] = v21;
    _OWORD v17[3] = v23;
    v17[4] = a1;
    v17[5] = a2;
    v17[6] = v22;
    uint64_t v28 = sub_1ACC44C9C;
    uint64_t v29 = v17;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v25 = 1107296256;
    uint64_t v26 = sub_1ACC38BA0;
    id v27 = &block_descriptor_156;
    uint64_t v18 = _Block_copy(&aBlock);
    uint64_t v19 = v21;
    swift_retain();
    sub_1ACA6DEC8((uint64_t)a1);
    swift_release();
    objc_msgSend(v15, sel_securelyInvalidateOfflineDataForRequests_completion_, v16, v18);
    _Block_release(v18);
    swift_release();
    swift_release();

    return;
  }
LABEL_11:
  v2[v6] = 0;
  if (a1) {
    a1(MEMORY[0x1E4FBC860]);
  }
  swift_release();
  swift_release();
}

uint64_t sub_1ACC37B08(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = sub_1ACE754C8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  size_t v58 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v48 - v9;
  unint64_t v11 = sub_1ACC41EB4(a2);
  if (qword_1EB768FD8 != -1) {
LABEL_26:
  }
    swift_once();
  uint64_t v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1EB768FB8);
  swift_beginAccess();
  id v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v53 = v6 + 16;
  uint64_t v54 = v12;
  uint64_t v57 = v5;
  unint64_t v52 = v13;
  v13(v10, v12, v5);
  swift_bridgeObjectRetain_n();
  id v14 = sub_1ACE75498();
  os_log_type_t v15 = sub_1ACE76C08();
  BOOL v16 = os_log_type_enabled(v14, v15);
  unint64_t v17 = v11 >> 62;
  uint64_t v18 = v6;
  unint64_t v56 = v11;
  if (v16)
  {
    uint64_t v19 = a3;
    unint64_t v11 = swift_slowAlloc();
    *(_DWORD *)unint64_t v11 = 134217984;
    if (v17)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1ACE77508();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    id v59 = (id)v20;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v14, v15, "Removing %ld HLS keys", (uint8_t *)v11, 0xCu);
    MEMORY[0x1AD11B340](v11, -1, -1);

    a3 = v19;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v51 = *(void (**)(char *, uint64_t))(v18 + 8);
  v51(v10, v57);
  uint64_t v55 = v18 + 8;
  if (v17)
  {
    unint64_t v22 = v56;
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_9;
    }
  }
  else
  {
    unint64_t v22 = v56;
    uint64_t v6 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
LABEL_9:
      unint64_t v23 = v22 & 0xC000000000000001;
      uint64_t v24 = 4;
      *(void *)&long long v21 = 134217984;
      long long v48 = v21;
      unint64_t v49 = v22 & 0xC000000000000001;
      uint64_t v50 = v6;
      do
      {
        uint64_t v10 = (char *)(v24 - 4);
        if (v23)
        {
          id v26 = (id)MEMORY[0x1AD119490](v24 - 4, v22);
          uint64_t v5 = v24 - 3;
          if (__OFADD__(v10, 1)) {
            goto LABEL_25;
          }
        }
        else
        {
          id v26 = *(id *)(v22 + 8 * v24);
          uint64_t v5 = v24 - 3;
          if (__OFADD__(v10, 1))
          {
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        id v27 = v26;
        id v28 = objc_msgSend(v27, sel_keyUri);
        id v25 = v27;
        if (v28)
        {
          uint64_t v29 = v28;
          id v30 = objc_msgSend(v27, sel_data);
          if (v30)
          {
            id v31 = v30;
            uint64_t v32 = a3;
            uint64_t v33 = sub_1ACE74F88();
            unint64_t v35 = v34;

            id v36 = objc_msgSend(objc_allocWithZone((Class)MTKeyRequestData), sel_init);
            objc_msgSend(v36, sel_setKeyIdentifier_, v29);

            uint64_t v37 = (void *)sub_1ACE74F68();
            objc_msgSend(v36, sel_setKeyData_, v37);

            id v59 = objc_msgSend(v27, sel_storeTrackId);
            sub_1ACE777C8();
            uint64_t v38 = (void *)sub_1ACE76178();
            swift_bridgeObjectRelease();
            objc_msgSend(v36, sel_setContentAdamId_, v38);

            uint64_t v39 = v57;
            id v40 = objc_msgSend(v27, sel_secureInvalidationDsid);
            id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithLongLong_, v40);
            objc_msgSend(v36, sel_setSecureInvalidationDsid_, v41);

            sub_1ACA50850(v33, v35);
            v52(v58, v54, v39);
            uint64_t v42 = v27;
            uint64_t v43 = sub_1ACE75498();
            os_log_type_t v44 = sub_1ACE76C08();
            if (os_log_type_enabled(v43, v44))
            {
              uint64_t v45 = swift_slowAlloc();
              *(_DWORD *)uint64_t v45 = v48;
              *(void *)(v45 + 4) = [v42 storeTrackId];

              _os_log_impl(&dword_1AC9D5000, v43, v44, "Removing HLS key for episode adam id %lld", (uint8_t *)v45, 0xCu);
              uint64_t v46 = v45;
              uint64_t v39 = v57;
              MEMORY[0x1AD11B340](v46, -1, -1);
            }
            else
            {

              uint64_t v43 = v42;
            }

            v51(v58, v39);
            id v25 = v36;
            a3 = v32;
            MEMORY[0x1AD118700]();
            unint64_t v11 = *(void *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v11 >= *(void *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1ACE765C8();
            }
            sub_1ACE76628();
            sub_1ACE76598();
            unint64_t v22 = v56;
            unint64_t v23 = v49;
            uint64_t v6 = v50;
          }
          else
          {

            id v25 = v27;
          }
        }

        ++v24;
      }
      while (v5 != v6);
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC38114(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1ACE75DC8();
  uint64_t v22 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1ACE75E48();
  uint64_t v13 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  os_log_type_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB7681F8 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_1EB7681F0;
  BOOL v16 = (void *)swift_allocObject();
  void v16[2] = a2;
  void v16[3] = a3;
  v16[4] = a1;
  v16[5] = a4;
  v16[6] = a5;
  aBlock[4] = sub_1ACC44D04;
  void aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_162;
  unint64_t v17 = _Block_copy(aBlock);
  id v18 = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1ACA6DEC8(a4);
  sub_1ACE75E08();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1ACC453E8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v15, v12, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v21);
  return swift_release();
}

uint64_t sub_1ACC3843C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v54 = a5;
  uint64_t v9 = sub_1ACE754C8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v61 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = ((char *)&v54 - v13);
  os_log_type_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a1;
  v15[3] = a2;
  void v15[4] = a3;
  uint64_t v55 = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1ACC42030((uint64_t)sub_1ACC44D64, (uint64_t)v15);
  swift_release();
  if (qword_1EB768FD8 != -1) {
LABEL_35:
  }
    swift_once();
  uint64_t v16 = __swift_project_value_buffer(v9, (uint64_t)qword_1EB768FB8);
  swift_beginAccess();
  uint64_t v17 = v10;
  id v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v66 = v10 + 16;
  uint64_t v67 = v16;
  uint64_t v65 = v18;
  v18((char *)v14, v16, v9);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1ACE75498();
  uint64_t v10 = sub_1ACE76C08();
  BOOL v20 = os_log_type_enabled(v19, (os_log_type_t)v10);
  uint64_t v21 = v9;
  unint64_t v56 = (void (*)(uint64_t))a4;
  if (v20)
  {
    uint64_t v68 = v9;
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 134218240;
    swift_beginAccess();
    unint64_t v23 = *(void *)(a2 + 16);
    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      a4 = sub_1ACE77508();
      swift_bridgeObjectRelease();
    }
    else
    {
      a4 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v69 = a4;
    sub_1ACE76FF8();
    swift_release();
    *(_WORD *)(v22 + 12) = 2048;
    uint64_t v69 = *(void *)(a3 + 16);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v19, (os_log_type_t)v10, "Finished invalidating %ld key data requests with %ld failed requests", (uint8_t *)v22, 0x16u);
    MEMORY[0x1AD11B340](v22, -1, -1);

    uint64_t v21 = v68;
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_release();
  }
  a2 = v17 + 8;
  uint64_t v64 = *(void (**)(NSObject *, uint64_t))(v17 + 8);
  v64(v14, v21);
  uint64_t v24 = *(void *)(a3 + 64);
  uint64_t v62 = a3 + 64;
  uint64_t v25 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  uint64_t v9 = v26 & v24;
  int64_t v63 = (unint64_t)(v25 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v27 = 0;
  *(void *)&long long v28 = 136315394;
  long long v58 = v28;
  uint64_t v57 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v29 = v61;
  uint64_t v59 = a2;
  uint64_t v60 = a3;
  while (1)
  {
    if (v9)
    {
      unint64_t v30 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      uint64_t v68 = v27;
      unint64_t v31 = v30 | (v27 << 6);
      goto LABEL_28;
    }
    int64_t v32 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v32 >= v63) {
      goto LABEL_30;
    }
    unint64_t v33 = *(void *)(v62 + 8 * v32);
    int64_t v34 = v27 + 1;
    if (!v33)
    {
      int64_t v34 = v27 + 2;
      if (v27 + 2 >= v63) {
        goto LABEL_30;
      }
      unint64_t v33 = *(void *)(v62 + 8 * v34);
      if (!v33)
      {
        int64_t v34 = v27 + 3;
        if (v27 + 3 >= v63) {
          goto LABEL_30;
        }
        unint64_t v33 = *(void *)(v62 + 8 * v34);
        if (!v33) {
          break;
        }
      }
    }
LABEL_27:
    uint64_t v9 = (v33 - 1) & v33;
    uint64_t v68 = v34;
    unint64_t v31 = __clz(__rbit64(v33)) + (v34 << 6);
LABEL_28:
    id v36 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v31);
    uint64_t v10 = *v36;
    unint64_t v37 = v36[1];
    uint64_t v38 = *(void **)(*(void *)(a3 + 56) + 8 * v31);
    v65(v29, v67, v21);
    id v39 = v38;
    id v40 = v38;
    swift_bridgeObjectRetain();
    id v41 = v38;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1ACE75498();
    os_log_type_t v42 = sub_1ACE76BE8();
    a4 = v42;
    if (os_log_type_enabled(v14, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v44 = v21;
      uint64_t v45 = (void *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v69 = v46;
      *(_DWORD *)uint64_t v43 = v58;
      swift_bridgeObjectRetain();
      *(void *)(v43 + 4) = sub_1ACA3189C(v10, v37, &v69);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v43 + 12) = 2112;
      uint64_t v47 = sub_1ACE74D68();
      *(void *)(v43 + 14) = v47;
      *uint64_t v45 = v47;

      _os_log_impl(&dword_1AC9D5000, v14, (os_log_type_t)a4, "Failed to invalidate download for episode adam id %s with error %@", (uint8_t *)v43, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      long long v48 = v45;
      uint64_t v21 = v44;
      uint64_t v29 = v61;
      MEMORY[0x1AD11B340](v48, -1, -1);
      swift_arrayDestroy();
      uint64_t v49 = v46;
      a2 = v59;
      MEMORY[0x1AD11B340](v49, -1, -1);
      uint64_t v50 = v43;
      a3 = v60;
      MEMORY[0x1AD11B340](v50, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v64(v29, v21);
    uint64_t v27 = v68;
  }
  uint64_t v35 = v27 + 4;
  if (v27 + 4 < v63)
  {
    unint64_t v33 = *(void *)(v62 + 8 * v35);
    if (!v33)
    {
      while (1)
      {
        int64_t v34 = v35 + 1;
        if (__OFADD__(v35, 1)) {
          goto LABEL_34;
        }
        if (v34 >= v63) {
          goto LABEL_30;
        }
        unint64_t v33 = *(void *)(v62 + 8 * v34);
        ++v35;
        if (v33) {
          goto LABEL_27;
        }
      }
    }
    int64_t v34 = v27 + 4;
    goto LABEL_27;
  }
LABEL_30:
  uint64_t result = swift_release();
  v55[OBJC_IVAR___MTSecureDownloadRenewalManager_removalLock] = 0;
  unint64_t v52 = v56;
  if (v56)
  {
    swift_bridgeObjectRetain();
    sub_1ACA6DEC8((uint64_t)v52);
    uint64_t v53 = sub_1ACD0AC6C(a3);
    swift_bridgeObjectRelease();
    v52(v53);
    swift_release();
    return sub_1ACA76F34((uint64_t)v52);
  }
  return result;
}

uint64_t sub_1ACC38B34@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v2 = swift_bridgeObjectRetain();
  sub_1ACC38C28(v2, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC38BA0(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t))(a1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
  uint64_t v2 = sub_1ACE75FF8();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC38C28@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1ACC35350(a1);
  uint64_t v4 = sub_1ACB02BC0((uint64_t)v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1ACDF59C0(v5);
  if (*(void *)(v6 + 16) <= *(void *)(v4 + 16) >> 3) {
    sub_1ACC416A4(v6);
  }
  else {
    uint64_t v4 = sub_1ACB88D10(v6, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = sub_1ACC38E14;
  v7[3] = 0;
  v7[4] = v4;
  v7[5] = sub_1ACC38D90;
  v7[6] = 0;
  v7[7] = sub_1ACC38DFC;
  v7[8] = 0;
  v7[9] = sub_1ACC4184C;
  v7[10] = 0;
  v7[11] = sub_1ACC4185C;
  v7[12] = 0;
  *a2 = v4;
  a2[1] = (uint64_t)sub_1ACC38D90;
  a2[2] = 0;
  a2[3] = (uint64_t)sub_1ACC38DFC;
  a2[4] = 0;
  a2[5] = (uint64_t)sub_1ACC4184C;
  a2[6] = 0;
  a2[7] = (uint64_t)sub_1ACC44B78;
  a2[8] = (uint64_t)v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACC38D90@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1ACD1C588(v3, v4);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

void *sub_1ACC38DFC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  if ((*result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *(void *)a2 = *result;
    *(unsigned char *)(a2 + 8) = 0;
  }
  return result;
}

id sub_1ACC38E14@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithLongLong_, *a1);
  *a2 = result;
  return result;
}

void sub_1ACC38E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = objc_msgSend(self, sel_sharedInstance);
  id v9 = objc_msgSend(v8, sel_loggingContext);

  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a3;
  v10[3] = a4;
  void v10[4] = v9;
  v10[5] = a1;
  void v10[6] = a2;
  v13[4] = sub_1ACC44DF8;
  v13[5] = v10;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1ACA6DA9C;
  v13[3] = &block_descriptor_177;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  id v12 = v9;
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlock_, v11);
  _Block_release(v11);
}

void sub_1ACC38FA4(void (*a1)(uint64_t *__return_ptr), uint64_t a2, void *a3, void (*a4)(void))
{
  v24[22] = *MEMORY[0x1E4F143B8];
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  id v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  id v8 = self;
  a1(v24);
  sub_1ACDF5698(v24);
  uint64_t v9 = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
  sub_1ACC42D88((unint64_t *)&qword_1EB76E300, (unint64_t *)&qword_1EB768F50);
  uint64_t v10 = (void *)sub_1ACE76978();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v8, sel_predicateForEpisodeStoreTrackIds_, v10);

  id v12 = objc_msgSend(v8, sel_predicateForDownloaded_excludeHidden_, 1, 1);
  id v13 = objc_msgSend(v11, sel_AND_, v12);

  objc_msgSend(v7, sel_setPredicate_, v13);
  v23[0] = 0;
  id v14 = objc_msgSend(a3, sel_countForFetchRequest_error_, v7, v23);
  if (v23[0])
  {
    id v15 = v23[0];
    swift_willThrow();
    if (qword_1EB768C20 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1ACE754C8();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EB768C00);
    uint64_t v17 = sub_1ACE75498();
    os_log_type_t v18 = sub_1ACE76BC8();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_1AC9D5000, v17, v18, "Failed to count downloaded episodes for deleted secure keys. Unable to assess misalignment", v19, 2u);
      MEMORY[0x1AD11B340](v19, -1, -1);
    }
  }
  else
  {
    id v20 = v14;
    if ((uint64_t)v14 > 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4D0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
      v23[0] = (id)0xD000000000000025;
      v23[1] = (id)0x80000001ACECD720;
      sub_1ACE771F8();
      id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, v20);
      *(void *)(inited + 96) = v9;
      *(void *)(inited + 72) = v22;
      sub_1ACA364E4(inited);
      a4();
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1ACC39310()
{
  return sub_1ACC42210(0, 0);
}

uint64_t sub_1ACC39370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ACC42210(a2, a3);
}

uint64_t sub_1ACC3937C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  void v6[4] = a3;
  id v7 = a1;
  sub_1ACA6DEC8(a2);
  sub_1ACC39BE4((uint64_t)sub_1ACC44FB4, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_1ACC39414(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1EB768C20 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1ACE754C8();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EB768C00);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_1ACE75498();
  os_log_type_t v10 = sub_1ACE76BC8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 134349314;
    uint64_t v21 = v19;
    sub_1ACE76FF8();
    *(_WORD *)(v11 + 12) = 2080;
    uint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v13 = MEMORY[0x1AD118740](v12, MEMORY[0x1E4FBB1A0]);
    uint64_t v20 = a3;
    uint64_t v14 = a4;
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    sub_1ACA3189C(v13, v16, &v21);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    a4 = v14;
    a3 = v20;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v9, v10, "Finished request for missing keys for shows (%{public}ld): %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v19, -1, -1);
    MEMORY[0x1AD11B340](v11, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = a2;
  sub_1ACA6DEC8(a3);
  sub_1ACC427A4(v17, v17, a1, a3, a4);
  sub_1ACA76F34(a3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC3966C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1EB768C20 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1ACE754C8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB768C00);
  swift_bridgeObjectRetain_n();
  os_log_type_t v10 = sub_1ACE75498();
  os_log_type_t v11 = sub_1ACE76BC8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v25 = a2;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 134349314;
    uint64_t v26 = v24;
    sub_1ACE76FF8();
    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = a3;
    uint64_t v15 = a5;
    uint64_t v16 = MEMORY[0x1AD118740](v13, MEMORY[0x1E4FBB1A0]);
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v19 = v16;
    a5 = v15;
    a3 = v14;
    sub_1ACA3189C(v19, v18, &v26);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v10, v11, "Finished renewal & removal of existing DRM keys (%{public}ld: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v24, -1, -1);
    uint64_t v20 = v12;
    a2 = v25;
    MEMORY[0x1AD11B340](v20, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a2;
  v21[3] = a3;
  v21[4] = a4;
  v21[5] = a5;
  id v22 = a2;
  swift_bridgeObjectRetain();
  sub_1ACA6DEC8(a4);
  sub_1ACC358E4(sub_1ACC453A8, (uint64_t)v21);
  return swift_release();
}

void sub_1ACC398E8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (qword_1EB768C20 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1ACE754C8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB768C00);
  swift_bridgeObjectRetain_n();
  id v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76BC8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 134349314;
    uint64_t v16 = v14;
    sub_1ACE76FF8();
    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = MEMORY[0x1AD118740](v10, MEMORY[0x1E4FBB1A0]);
    uint64_t v15 = a3;
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    sub_1ACA3189C(v11, v13, &v16);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    a3 = v15;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v7, v8, "Finished removal of orphan DRM keys. episodes that failed removal: (%{public}ld) %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v14, -1, -1);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1ACC3B0AC(a3);
  if (a4) {
    a4();
  }
}

void sub_1ACC39BE4(uint64_t a1, uint64_t a2)
{
  id v5 = objc_msgSend(self, sel_sharedInstance);
  id v6 = objc_msgSend(v5, sel_mainOrPrivateContext);

  id v7 = (void *)swift_allocObject();
  void v7[2] = v2;
  v7[3] = v6;
  v7[4] = a1;
  v7[5] = a2;
  void v11[4] = sub_1ACC44AEC;
  v11[5] = v7;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_1ACA6DA9C;
  _OWORD v11[3] = &block_descriptor_135;
  os_log_type_t v8 = _Block_copy(v11);
  id v9 = v2;
  id v10 = v6;
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_performBlock_, v8);
  _Block_release(v8);
}

uint64_t sub_1ACC39D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v3 = sub_1ACE75DC8();
  uint64_t v52 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE75E48();
  id v7 = *(NSObject **)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = sub_1ACC42C04();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E1A0);
  unint64_t v11 = sub_1ACE76EE8();
  uint64_t v49 = v9;
  uint64_t v50 = v5;
  os_log_t v51 = v7;

  unint64_t v12 = sub_1ACC2BD44(v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (v12)
  {
    unint64_t v14 = MEMORY[0x1E4FBC860];
    uint64_t v15 = (void *)sub_1ACC42DCC(v12);
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1ACE76EE8();
    os_log_t v17 = v51;
    unint64_t v18 = v53;
    unint64_t v19 = v16;
    uint64_t v48 = v6;

    uint64_t v20 = sub_1ACC2BD44(v19);
    swift_bridgeObjectRelease();
    uint64_t v13 = v14;
    if (v20) {
      unint64_t v21 = v20;
    }
    else {
      unint64_t v21 = v14;
    }
    uint64_t v22 = v55;
    unint64_t v23 = v18;
  }
  else
  {
    unint64_t v21 = MEMORY[0x1E4FBC860];
    uint64_t v22 = v55;
    uint64_t v48 = v6;
    os_log_t v17 = v51;
    unint64_t v23 = v53;
  }
  uint64_t v24 = v52;
  uint64_t v25 = v3;
  if (qword_1EB768C20 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1ACE754C8();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EB768C00);
  swift_bridgeObjectRetain_n();
  uint64_t v27 = sub_1ACE75498();
  int v28 = sub_1ACE76BC8();
  BOOL v29 = os_log_type_enabled(v27, (os_log_type_t)v28);
  unint64_t v30 = v50;
  if (v29)
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    aBlock[0] = v32;
    *(_DWORD *)uint64_t v31 = 134349314;
    os_log_t v51 = v27;
    int v47 = v28;
    uint64_t v46 = v32;
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_1ACE77508();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v33 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v57 = v33;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    uint64_t v45 = v31 + 14;
    unint64_t v34 = swift_bridgeObjectRetain();
    sub_1ACDF7578(v34);
    swift_bridgeObjectRelease();
    sub_1ACA50D4C(0, &qword_1EB76E0F0);
    sub_1ACC42D88((unint64_t *)&unk_1E99F3EA0, &qword_1EB76E0F0);
    uint64_t v35 = sub_1ACE76998();
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t v57 = sub_1ACA3189C(v35, v37, aBlock);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v38 = v51;
    _os_log_impl(&dword_1AC9D5000, v51, (os_log_type_t)v47, "Found %{public}ld episodes missing DRM keys: %s", (uint8_t *)v31, 0x16u);
    uint64_t v39 = v46;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v39, -1, -1);
    MEMORY[0x1AD11B340](v31, -1, -1);

    uint64_t v22 = v55;
    uint64_t v24 = v52;
    unint64_t v23 = v53;
    id v40 = v49;
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  else
  {

    swift_bridgeObjectRelease_n();
    id v40 = v49;
  }
  if (qword_1EB7681F8 != -1) {
    swift_once();
  }
  id v41 = (void *)swift_allocObject();
  v41[2] = v21;
  _OWORD v41[3] = v23;
  v41[4] = v54;
  v41[5] = v22;
  aBlock[4] = (uint64_t)sub_1ACC42D7C;
  void aBlock[5] = (uint64_t)v41;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1ACA6DA9C;
  aBlock[3] = (uint64_t)&block_descriptor_86;
  os_log_type_t v42 = _Block_copy(aBlock);
  id v43 = v23;
  swift_retain();
  sub_1ACE75E08();
  uint64_t v57 = v13;
  sub_1ACC453E8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v40, v30, v42);
  _Block_release(v42);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v25);
  ((void (*)(char *, uint64_t))v17[1].isa)(v40, v48);
  return swift_release();
}

uint64_t sub_1ACC3A53C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A910);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (uint64_t *)((char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A908);
  uint64_t v43 = *(void *)(v45 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v45);
  uint64_t v44 = (uint64_t)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v37 - v13;
  unint64_t v38 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_1ACE77508();
  }
  else
  {
    uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  uint64_t v40 = a4;
  uint64_t v41 = a2;
  uint64_t v39 = a3;
  if (v15)
  {
    if (v15 < 1)
    {
      __break(1u);
LABEL_29:
      swift_once();
LABEL_23:
      uint64_t v24 = sub_1ACE754C8();
      __swift_project_value_buffer(v24, (uint64_t)qword_1EB768C00);
      swift_bridgeObjectRetain_n();
      uint64_t v25 = sub_1ACE75498();
      os_log_type_t v26 = sub_1ACE76BE8();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        int v28 = (void *)swift_slowAlloc();
        int v47 = v28;
        *(_DWORD *)uint64_t v27 = 141558275;
        uint64_t v46 = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v27 + 12) = 2081;
        uint64_t v29 = sub_1ACA50D4C(0, &qword_1EB76E0F0);
        uint64_t v30 = swift_bridgeObjectRetain();
        uint64_t v31 = MEMORY[0x1AD118740](v30, v29);
        unint64_t v33 = v32;
        swift_bridgeObjectRelease();
        uint64_t v46 = sub_1ACA3189C(v31, v33, (uint64_t *)&v47);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v25, v26, "Invalid data found in episode DB: %{private,mask.hash}s.", (uint8_t *)v27, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v28, -1, -1);
        MEMORY[0x1AD11B340](v27, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      goto LABEL_26;
    }
    uint64_t v16 = 0;
    unint64_t v17 = a1 & 0xC000000000000001;
    unint64_t v18 = (unsigned int (**)(void *, uint64_t, uint64_t))(v43 + 48);
    a3 = MEMORY[0x1E4FBC860];
    unint64_t v42 = a1;
    do
    {
      if (v17) {
        id v19 = (id)MEMORY[0x1AD119490](v16, a1);
      }
      else {
        id v19 = *(id *)(a1 + 8 * v16 + 32);
      }
      uint64_t v20 = v19;
      int v47 = v19;
      sub_1ACC3AAB8(&v47, v10);

      if ((*v18)(v10, 1, v45) == 1)
      {
        sub_1ACA50E78((uint64_t)v10, &qword_1EB76A910);
      }
      else
      {
        sub_1ACA50E14((uint64_t)v10, (uint64_t)v14, &qword_1EB76A908);
        sub_1ACA50E14((uint64_t)v14, v44, &qword_1EB76A908);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          a3 = sub_1ACA42D44(0, *(void *)(a3 + 16) + 1, 1, a3);
        }
        unint64_t v22 = *(void *)(a3 + 16);
        unint64_t v21 = *(void *)(a3 + 24);
        if (v22 >= v21 >> 1) {
          a3 = sub_1ACA42D44(v21 > 1, v22 + 1, 1, a3);
        }
        *(void *)(a3 + 16) = v22 + 1;
        sub_1ACA50E14(v44, a3+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v22, &qword_1EB76A908);
        a1 = v42;
      }
      ++v16;
    }
    while (v15 != v16);
  }
  else
  {
    a3 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease_n();
  if (v38)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v23 != *(void *)(a3 + 16))
  {
    if (qword_1EB768C20 == -1) {
      goto LABEL_23;
    }
    goto LABEL_29;
  }
LABEL_26:
  uint64_t v34 = sub_1ACA4E650(a3);
  uint64_t v35 = (void *)swift_allocObject();
  v35[2] = v39;
  v35[3] = v40;
  v35[4] = a3;
  swift_retain();
  sub_1ACC3B360(v34, (uint64_t (*)(uint64_t))sub_1ACC432B0, (uint64_t)v35);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1ACC3AAB8@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v23 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  *(void *)&long long v25 = sub_1ACE761B8();
  *((void *)&v25 + 1) = v10;
  swift_bridgeObjectRetain();
  id v11 = objc_msgSend(v9, sel___swift_objectForKeyedSubscript_, sub_1ACE77A28());
  swift_unknownObjectRelease();
  if (v11)
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v25 = 0u;
    long long v26 = 0u;
  }
  sub_1ACA50E14((uint64_t)&v25, (uint64_t)v27, qword_1EB7725E0);
  if (!v28) {
    goto LABEL_13;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  uint64_t v22 = v24;
  swift_bridgeObjectRelease();
  *(void *)&long long v25 = sub_1ACE761B8();
  *((void *)&v25 + 1) = v12;
  swift_bridgeObjectRetain();
  id v13 = objc_msgSend(v9, sel___swift_objectForKeyedSubscript_, sub_1ACE77A28());
  swift_unknownObjectRelease();
  if (v13)
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v25 = 0u;
    long long v26 = 0u;
  }
  sub_1ACA50E14((uint64_t)&v25, (uint64_t)v27, qword_1EB7725E0);
  if (!v28)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    sub_1ACA50E78((uint64_t)v27, qword_1EB7725E0);
LABEL_15:
    uint64_t v16 = v29;
    goto LABEL_16;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  sub_1ACE74EF8();
  swift_bridgeObjectRelease();
  uint64_t v14 = v23;
  int v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v5, 1, v6);
  uint64_t v16 = v29;
  if (v15 != 1)
  {
    id v19 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v19(v8, v5, v6);
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A908);
    unint64_t v21 = (char *)v16 + *(int *)(v20 + 48);
    *uint64_t v16 = v22;
    v19(v21, v8, v6);
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v16, 0, 1, v20);
  }
  sub_1ACA50E78((uint64_t)v5, &qword_1EB7731B0);
LABEL_16:
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A908);
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
}

uint64_t sub_1ACC3AEB0(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A908);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (void *)((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    v21[1] = a2;
    uint64_t v22 = a1;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1ACC82D44(0, v10, 0);
    uint64_t v12 = *(unsigned __int8 *)(v7 + 80);
    v21[0] = a3;
    uint64_t v13 = a3 + ((v12 + 32) & ~v12);
    uint64_t v23 = *(void *)(v7 + 72);
    uint64_t v11 = v25;
    do
    {
      sub_1ACA3AAD4(v13, (uint64_t)v9, &qword_1EB76A908);
      uint64_t v24 = *v9;
      uint64_t v14 = sub_1ACE777C8();
      uint64_t v16 = v15;
      sub_1ACA50E78((uint64_t)v9, &qword_1EB76A908);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1ACC82D44(0, *(void *)(v11 + 16) + 1, 1);
        uint64_t v11 = v25;
      }
      unint64_t v18 = *(void *)(v11 + 16);
      unint64_t v17 = *(void *)(v11 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1ACC82D44(v17 > 1, v18 + 1, 1);
        uint64_t v11 = v25;
      }
      *(void *)(v11 + 16) = v18 + 1;
      uint64_t v19 = v11 + 16 * v18;
      *(void *)(v19 + 32) = v14;
      *(void *)(v19 + 40) = v16;
      v13 += v23;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    a1 = v22;
  }
  a1(v11);
  return swift_bridgeObjectRelease();
}

void sub_1ACC3B0AC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F3E90);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
    *(void *)(inited + 32) = 0xD000000000000014;
    *(void *)(inited + 40) = 0x80000001ACECD6C0;
    *(void *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, v3);
    unint64_t v5 = sub_1ACA37800(inited);
    sub_1ACA3E158(v2 + OBJC_IVAR___MTSecureDownloadRenewalManager_bugReporter, (uint64_t)v20);
    uint64_t v6 = v21;
    uint64_t v7 = v22;
    __swift_project_boxed_opaque_existential_1(v20, (uint64_t)v21);
    uint64_t v8 = (objc_class *)type metadata accessor for BugReport();
    uint64_t v9 = objc_allocWithZone(v8);
    v9[OBJC_IVAR___PFBugReport_system] = 1;
    v9[OBJC_IVAR___PFBugReport_errorKind] = 3;
    v9[OBJC_IVAR___PFBugReport_forceSubmissionAttempt] = 0;
    v25.receiver = v9;
    v25.super_class = v8;
    id v10 = objc_msgSendSuper2(&v25, sel_init);
    char v24 = 1;
    uint64_t v11 = sub_1ACACB860(v5);
    (*((void (**)(id, char *, uint64_t, void *, uint64_t (*)()))v7 + 2))(v10, &v24, v11, v6, v7);
    swift_bridgeObjectRelease();

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
    uint64_t v12 = *(void **)(v2 + OBJC_IVAR___MTSecureDownloadRenewalManager_analyticsChannel);
    swift_unknownObjectRetain();
    sub_1ACACBC14(v5);
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    id v15 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v14;
    uint64_t v22 = sub_1ACB19A38;
    uint64_t v23 = v16;
    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 1107296256;
    uint64_t v20[2] = sub_1ACDD55C4;
    unint64_t v21 = &block_descriptor_80;
    unint64_t v17 = _Block_copy(v20);
    unint64_t v18 = @"com.apple.podcasts.DRMKeysRecovered";
    swift_bridgeObjectRetain();
    swift_release();
    id v19 = objc_msgSend(v15, sel_initWithName_generator_, v18, v17);

    _Block_release(v17);
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_sendEvent_, v19);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1ACC3B360(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F3EB0);
  uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  id v10 = (uint64_t *)((char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (uint64_t *)((char *)&v45 - v12);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  if (!*(void *)(a1 + 16)) {
    return a2(v14);
  }
  unint64_t v56 = (char *)&v45 + *(int *)(v7 + 48) - v16;
  uint64_t v52 = a2;
  uint64_t v53 = ObjectType;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (uint64_t *)((char *)&v45 - v16);
  uint64_t v54 = (uint64_t)&v45 - v16;
  uint64_t v19 = a1;
  sub_1ACA3AAD4(a1 + ((v17 + 32) & ~v17), (uint64_t)v13, (uint64_t *)&unk_1E99F3EB0);
  uint64_t v20 = *(int *)(v7 + 48);
  uint64_t v51 = a3;
  unint64_t v21 = (char *)v13 + v20;
  uint64_t v22 = *v13;
  *unint64_t v18 = *v13;
  uint64_t v48 = v22;
  uint64_t v23 = sub_1ACE74F28();
  uint64_t v24 = *(void *)(v23 - 8);
  objc_super v25 = v56;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v56, v21, v23);
  long long v26 = (char *)v10 + *(int *)(v7 + 48);
  *id v10 = v22;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  v46(v26, v25, v23);
  id v27 = objc_allocWithZone(MEMORY[0x1E4F166C8]);
  uint64_t v49 = v19;
  id v28 = v27;
  uint64_t v29 = (void *)sub_1ACE74E18();
  id v47 = objc_msgSend(v28, sel_initWithURL_options_, v29, 0);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  uint64_t v30 = v55;
  id v50 = *(id *)&v55[OBJC_IVAR___MTSecureDownloadRenewalManager_metadataLoader];
  uint64_t v31 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v32 = (char *)v10 + *(int *)(v7 + 48);
  *id v10 = v48;
  v46(v32, v56, v23);
  uint64_t v33 = (v17 + 48) & ~v17;
  unint64_t v34 = (v8 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = (void *)swift_allocObject();
  uint64_t v38 = v51;
  uint64_t v37 = v52;
  v36[2] = v31;
  v36[3] = v37;
  uint64_t v39 = v47;
  v36[4] = v38;
  v36[5] = v39;
  sub_1ACA50E14((uint64_t)v10, (uint64_t)v36 + v33, (uint64_t *)&unk_1E99F3EB0);
  uint64_t v40 = v30;
  *(void *)((char *)v36 + v34) = v30;
  *(void *)((char *)v36 + v35) = v49;
  *(void *)((char *)v36 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8)) = v53;
  aBlock[4] = sub_1ACC43430;
  void aBlock[5] = v36;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC3C930;
  aBlock[3] = &block_descriptor_98;
  uint64_t v41 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  id v42 = v39;
  id v43 = v40;
  swift_release();
  objc_msgSend(v50, sel_keyIdentifiersFrom_completion_, v42, v41);
  _Block_release(v41);

  return sub_1ACA50E78(v54, (uint64_t *)&unk_1E99F3EB0);
}

uint64_t sub_1ACC3B768(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v66 = a6;
  uint64_t v64 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F3EB0);
  uint64_t v13 = *(void *)(*(void *)(v12 - 8) + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char **)((char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  unint64_t v18 = (uint64_t *)((char *)&v54 - v17);
  uint64_t result = MEMORY[0x1F4188790](v16);
  if (a4 >> 1 == a3) {
    return a5(result);
  }
  int64_t v63 = a5;
  if ((uint64_t)(a4 >> 1) <= a3)
  {
    __break(1u);
  }
  else
  {
    uint64_t v22 = (char *)&v54 + *(int *)(v12 + 48) - v20;
    uint64_t v23 = *(void *)(v21 + 72);
    unint64_t v61 = a4;
    uint64_t v62 = (uint64_t)&v54 - v20;
    uint64_t v24 = (uint64_t *)((char *)&v54 - v20);
    uint64_t v58 = v21;
    sub_1ACA3AAD4(a2 + v23 * a3, (uint64_t)v18, (uint64_t *)&unk_1E99F3EB0);
    uint64_t v25 = *(int *)(v12 + 48);
    uint64_t v60 = a2;
    long long v26 = (char *)v18 + v25;
    uint64_t v27 = *v18;
    *uint64_t v24 = *v18;
    uint64_t v28 = v27;
    uint64_t v56 = v27;
    uint64_t v29 = sub_1ACE74F28();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v54 = v7;
    uint64_t v55 = v22;
    uint64_t v31 = v30;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v22, v26, v29);
    unint64_t v32 = (char *)v15 + *(int *)(v12 + 48);
    *uint64_t v15 = v28;
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v33(v32, v22, v29);
    id v34 = objc_allocWithZone(MEMORY[0x1E4F166C8]);
    uint64_t v57 = a3;
    id v35 = v34;
    unint64_t v36 = (void *)sub_1ACE74E18();
    id v37 = objc_msgSend(v35, sel_initWithURL_options_, v36, 0);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v29);
    uint64_t v38 = v54;
    id v59 = *(id *)&v54[OBJC_IVAR___MTSecureDownloadRenewalManager_metadataLoader];
    uint64_t v39 = swift_allocObject();
    uint64_t v40 = v38;
    swift_unknownObjectWeakInit();
    uint64_t v41 = (char *)v15 + *(int *)(v12 + 48);
    id v42 = v55;
    *uint64_t v15 = v56;
    v33(v41, v42, v29);
    unint64_t v43 = (*(unsigned __int8 *)(v58 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    unint64_t v44 = (v13 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v46 = (void *)swift_allocObject();
    id v47 = v63;
    v46[2] = v39;
    v46[3] = v47;
    v46[4] = v66;
    v46[5] = v37;
    sub_1ACA50E14((uint64_t)v15, (uint64_t)v46 + v43, (uint64_t *)&unk_1E99F3EB0);
    *(void *)((char *)v46 + v44) = v40;
    uint64_t v48 = (void *)((char *)v46 + v45);
    uint64_t v49 = v60;
    *uint64_t v48 = v64;
    v48[1] = v49;
    unint64_t v50 = v61;
    v48[2] = v57;
    v48[3] = v50;
    *(void *)((char *)v46 + ((v45 + 39) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
    aBlock[4] = sub_1ACC44308;
    void aBlock[5] = v46;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACC3C930;
    aBlock[3] = &block_descriptor_117;
    uint64_t v51 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_retain();
    id v52 = v37;
    id v53 = v40;
    swift_release();
    objc_msgSend(v59, sel_keyIdentifiersFrom_completion_, v52, v51);
    _Block_release(v51);

    return sub_1ACA50E78(v62, (uint64_t *)&unk_1E99F3EB0);
  }
  return result;
}

uint64_t sub_1ACC3BB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  int64_t v7 = a5 >> 1;
  if (__OFSUB__(a5 >> 1, a4))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v12 = a4;
  if (a5 >> 1 == a4) {
    goto LABEL_6;
  }
  uint64_t v12 = a4 + 1;
  if (__OFADD__(a4, 1))
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (v7 < v12) {
    goto LABEL_11;
  }
  if (v12 < a4)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
LABEL_6:
  if (v7 < a4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v13 = swift_unknownObjectRetain();
  sub_1ACC3B768(v13, a3, v12, a5, a6, a7);
  return swift_unknownObjectRelease();
}

void sub_1ACC3BC5C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t *a6, void *a7, uint64_t a8, void *a9)
{
  uint64_t v74 = a7;
  uint64_t v75 = a8;
  uint64_t v76 = a4;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F3EB0);
  uint64_t v71 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v71 + 64);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (uint64_t *)((char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (uint64_t *)((char *)&v65 - v19);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (uint64_t *)((char *)&v65 - v21);
  swift_beginAccess();
  uint64_t v23 = (char *)MEMORY[0x1AD11B470](a2 + 16);
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v72 = a3;
    uint64_t v73 = v23;
    if (a1 && *(void *)(a1 + 16))
    {
      uint64_t v70 = a9;
      swift_bridgeObjectRetain();
      id v25 = sub_1ACC3574C();
      objc_msgSend(v25, sel_setDelegate_, 0);

      id v26 = objc_msgSend(objc_allocWithZone((Class)IMAVSecureKeyLoader), sel_initWithRecipient_useCase_account_urlProtocolDelegate_, a5, 1, 0, 0);
      uint64_t v27 = *(void **)&v24[OBJC_IVAR___MTSecureDownloadRenewalManager____lazy_storage___secureKeyLoader];
      *(void *)&v24[OBJC_IVAR___MTSecureDownloadRenewalManager____lazy_storage___secureKeyLoader] = v26;

      id v69 = sub_1ACC3574C();
      uint64_t v68 = sub_1ACE76178();
      swift_bridgeObjectRelease();
      uint64_t v67 = v14;
      uint64_t v28 = *(int *)(v14 + 48);
      uint64_t v29 = (char *)v22 + v28;
      uint64_t v30 = (char *)a6 + v28;
      uint64_t v66 = (char *)a6 + v28;
      uint64_t v31 = *a6;
      *uint64_t v22 = *a6;
      uint64_t v32 = sub_1ACE74F28();
      uint64_t v33 = *(void *)(v32 - 8);
      id v34 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
      v34(v29, v30, v32);
      uint64_t aBlock = v31;
      sub_1ACE777C8();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v32);
      id v35 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      unint64_t v36 = v66;
      id v37 = (char *)v22 + *(int *)(v67 + 48);
      *uint64_t v22 = *a6;
      v34(v37, v36, v32);
      unint64_t v38 = (*(unsigned __int8 *)(v71 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
      unint64_t v39 = (v15 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v40 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v42 = swift_allocObject();
      sub_1ACA50E14((uint64_t)v22, v42 + v38, (uint64_t *)&unk_1E99F3EB0);
      unint64_t v43 = v74;
      uint64_t v44 = v75;
      *(void *)(v42 + v39) = v74;
      *(void *)(v42 + v40) = v44;
      unint64_t v45 = (void (**)(void))(v42 + v41);
      uint64_t v46 = v76;
      *unint64_t v45 = v72;
      v45[1] = (void (*)(void))v46;
      *(void *)(v42 + ((v41 + 23) & 0xFFFFFFFFFFFFFFF8)) = v70;
      v78[3] = sub_1ACC43934;
      v78[4] = v42;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      v78[0] = 1107296256;
      v78[1] = sub_1ACCB9FCC;
      v78[2] = &block_descriptor_104;
      id v47 = _Block_copy(&aBlock);
      id v48 = v43;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      unint64_t v50 = (void *)v68;
      id v49 = v69;
      objc_msgSend(v69, sel_startKeyLoadingProcessWithKeyIdentifier_contentAdamId_isRenewal_completion_, v68, v35, 0, v47);

      _Block_release(v47);
    }
    else
    {
      uint64_t v51 = v14;
      if (qword_1EB768C20 != -1) {
        swift_once();
      }
      uint64_t v52 = sub_1ACE754C8();
      __swift_project_value_buffer(v52, (uint64_t)qword_1EB768C00);
      uint64_t v53 = *(int *)(v14 + 48);
      uint64_t v54 = (char *)v20 + v53;
      uint64_t v55 = (char *)a6 + v53;
      *uint64_t v20 = *a6;
      uint64_t v56 = sub_1ACE74F28();
      uint64_t v57 = *(void *)(v56 - 8);
      uint64_t v71 = *(void *)(v57 + 16);
      ((void (*)(char *, char *, uint64_t))v71)(v54, v55, v56);
      sub_1ACA50E14((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_1E99F3EB0);
      uint64_t v58 = sub_1ACE75498();
      os_log_type_t v59 = sub_1ACE76BE8();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = swift_slowAlloc();
        *(_DWORD *)uint64_t v60 = 141558275;
        uint64_t aBlock = 1752392040;
        uint64_t v70 = v78;
        sub_1ACE76FF8();
        *(_WORD *)(v60 + 12) = 2049;
        id v69 = (id)(v60 + 14);
        uint64_t v61 = *(int *)(v51 + 48);
        uint64_t v62 = (char *)v22 + v61;
        uint64_t v63 = *v17;
        *uint64_t v22 = *v17;
        ((void (*)(char *, char *, uint64_t))v71)((char *)v22 + v61, (char *)v17 + v61, v56);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v62, v56);
        sub_1ACA50E78((uint64_t)v17, (uint64_t *)&unk_1E99F3EB0);
        uint64_t aBlock = v63;
        sub_1ACE76FF8();
        _os_log_impl(&dword_1AC9D5000, v58, v59, "Unable to load keyIdentifier for adamID: %{private,mask.hash}lld.", (uint8_t *)v60, 0x16u);
        MEMORY[0x1AD11B340](v60, -1, -1);
      }
      else
      {
        sub_1ACA50E78((uint64_t)v17, (uint64_t *)&unk_1E99F3EB0);
      }
      uint64_t v64 = (uint64_t)v72;

      sub_1ACC434F0(v74, v75, v64, v76);
    }
  }
  else
  {
    a3();
  }
}

void sub_1ACC3C2A4(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  uint64_t v80 = a7;
  uint64_t v81 = a8;
  uint64_t v82 = a4;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F3EB0);
  uint64_t v74 = *(void *)(v17 - 8);
  uint64_t v18 = *(void *)(v74 + 64);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (uint64_t *)((char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (uint64_t *)((char *)&v69 - v22);
  MEMORY[0x1F4188790](v21);
  id v25 = (uint64_t *)((char *)&v69 - v24);
  swift_beginAccess();
  id v26 = (char *)MEMORY[0x1AD11B470](a2 + 16);
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v77 = a10;
    uint64_t v78 = a3;
    uint64_t v75 = a11;
    uint64_t v76 = a9;
    uint64_t v79 = v26;
    if (a1 && *(void *)(a1 + 16))
    {
      uint64_t v73 = a12;
      swift_bridgeObjectRetain();
      id v28 = sub_1ACC3574C();
      objc_msgSend(v28, sel_setDelegate_, 0);

      id v29 = objc_msgSend(objc_allocWithZone((Class)IMAVSecureKeyLoader), sel_initWithRecipient_useCase_account_urlProtocolDelegate_, a5, 1, 0, 0);
      uint64_t v30 = *(void **)&v27[OBJC_IVAR___MTSecureDownloadRenewalManager____lazy_storage___secureKeyLoader];
      *(void *)&v27[OBJC_IVAR___MTSecureDownloadRenewalManager____lazy_storage___secureKeyLoader] = v29;

      id v72 = sub_1ACC3574C();
      uint64_t v71 = sub_1ACE76178();
      swift_bridgeObjectRelease();
      uint64_t v70 = v17;
      uint64_t v31 = *(int *)(v17 + 48);
      uint64_t v32 = (char *)v25 + v31;
      uint64_t v33 = (char *)a6 + v31;
      id v69 = (char *)a6 + v31;
      uint64_t v34 = *a6;
      *id v25 = *a6;
      uint64_t v35 = sub_1ACE74F28();
      uint64_t v36 = *(void *)(v35 - 8);
      id v37 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
      v37(v32, v33, v35);
      uint64_t aBlock = v34;
      sub_1ACE777C8();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v35);
      unint64_t v38 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      unint64_t v39 = (char *)v25 + *(int *)(v70 + 48);
      *id v25 = *a6;
      v37(v39, v69, v35);
      unint64_t v40 = (*(unsigned __int8 *)(v74 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
      unint64_t v41 = (v18 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v42 = (v41 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v43 = (v42 + 39) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v44 = swift_allocObject();
      sub_1ACA50E14((uint64_t)v25, v44 + v40, (uint64_t *)&unk_1E99F3EB0);
      unint64_t v45 = v80;
      *(void *)(v44 + v41) = v80;
      uint64_t v46 = (void *)(v44 + v42);
      uint64_t v47 = v82;
      uint64_t v48 = v76;
      *uint64_t v46 = v81;
      v46[1] = v48;
      uint64_t v49 = v75;
      v46[2] = v77;
      v46[3] = v49;
      unint64_t v50 = (void (**)(void))(v44 + v43);
      *unint64_t v50 = v78;
      v50[1] = (void (*)(void))v47;
      *(void *)(v44 + ((v43 + 23) & 0xFFFFFFFFFFFFFFF8)) = v73;
      v84[3] = sub_1ACC4450C;
      v84[4] = v44;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      v84[0] = 1107296256;
      v84[1] = sub_1ACCB9FCC;
      v84[2] = &block_descriptor_123;
      uint64_t v51 = _Block_copy(&aBlock);
      id v52 = v45;
      swift_unknownObjectRetain();
      swift_retain();
      swift_release();
      uint64_t v54 = (void *)v71;
      id v53 = v72;
      objc_msgSend(v72, sel_startKeyLoadingProcessWithKeyIdentifier_contentAdamId_isRenewal_completion_, v71, v38, 0, v51);

      _Block_release(v51);
    }
    else
    {
      if (qword_1EB768C20 != -1) {
        swift_once();
      }
      uint64_t v55 = sub_1ACE754C8();
      __swift_project_value_buffer(v55, (uint64_t)qword_1EB768C00);
      uint64_t v56 = v17;
      uint64_t v57 = *(int *)(v17 + 48);
      uint64_t v58 = (char *)v23 + v57;
      os_log_type_t v59 = (char *)a6 + v57;
      *uint64_t v23 = *a6;
      uint64_t v60 = sub_1ACE74F28();
      uint64_t v61 = *(void *)(v60 - 8);
      uint64_t v74 = *(void *)(v61 + 16);
      ((void (*)(char *, char *, uint64_t))v74)(v58, v59, v60);
      sub_1ACA50E14((uint64_t)v23, (uint64_t)v20, (uint64_t *)&unk_1E99F3EB0);
      uint64_t v62 = sub_1ACE75498();
      os_log_type_t v63 = sub_1ACE76BE8();
      if (os_log_type_enabled(v62, v63))
      {
        uint64_t v64 = swift_slowAlloc();
        *(_DWORD *)uint64_t v64 = 141558275;
        uint64_t aBlock = 1752392040;
        uint64_t v73 = v84;
        sub_1ACE76FF8();
        *(_WORD *)(v64 + 12) = 2049;
        id v72 = (id)(v64 + 14);
        uint64_t v65 = *(int *)(v56 + 48);
        uint64_t v66 = (char *)v25 + v65;
        uint64_t v67 = *v20;
        *id v25 = *v20;
        ((void (*)(char *, char *, uint64_t))v74)((char *)v25 + v65, (char *)v20 + v65, v60);
        (*(void (**)(char *, uint64_t))(v61 + 8))(v66, v60);
        sub_1ACA50E78((uint64_t)v20, (uint64_t *)&unk_1E99F3EB0);
        uint64_t aBlock = v67;
        sub_1ACE76FF8();
        _os_log_impl(&dword_1AC9D5000, v62, v63, "Unable to load keyIdentifier for adamID: %{private,mask.hash}lld.", (uint8_t *)v64, 0x16u);
        MEMORY[0x1AD11B340](v64, -1, -1);
      }
      else
      {
        sub_1ACA50E78((uint64_t)v20, (uint64_t *)&unk_1E99F3EB0);
      }
      uint64_t v68 = (uint64_t)v78;

      sub_1ACC439F0(v80, v81, v76, v77, v75, v68, v82);
    }
  }
  else
  {
    a3();
  }
}

uint64_t sub_1ACC3C930(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2) {
    uint64_t v3 = sub_1ACE76578();
  }
  else {
    uint64_t v3 = 0;
  }
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC3C9AC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = sub_1ACE754C8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v47 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v39 - v9;
  unint64_t v11 = sub_1ACC4521C(a2);
  if (qword_1EB768FD8 != -1) {
    goto LABEL_21;
  }
  while (1)
  {
    uint64_t v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1EB768FB8);
    swift_beginAccess();
    uint64_t v13 = *(void (**)(char *, uint64_t, unint64_t))(v6 + 16);
    uint64_t v45 = v12;
    unint64_t v46 = v5;
    unint64_t v43 = v13;
    uint64_t v44 = v6 + 16;
    v13(v10, v12, v5);
    swift_bridgeObjectRetain_n();
    uint64_t v14 = sub_1ACE75498();
    os_log_type_t v15 = sub_1ACE76C08();
    unint64_t v16 = v11 >> 62;
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v17 = v6;
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 134217984;
      if (v16)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1ACE77508();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v19 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      id v48 = (id)v19;
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v14, v15, "Renewing %ld HLS keys", v18, 0xCu);
      MEMORY[0x1AD11B340](v18, -1, -1);

      uint64_t v6 = v17;
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v20 = *(void (**)(char *, unint64_t))(v6 + 8);
    v6 += 8;
    unint64_t v42 = v20;
    v20(v10, v46);
    if (v16) {
      break;
    }
    uint64_t v5 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5) {
      return swift_bridgeObjectRelease();
    }
LABEL_9:
    unint64_t v41 = v11 & 0xC000000000000001;
    uint64_t v22 = 4;
    *(void *)&long long v21 = 134217984;
    long long v39 = v21;
    unint64_t v40 = v11;
    while (1)
    {
      id v10 = (char *)(v22 - 4);
      id v25 = v41 ? (id)MEMORY[0x1AD119490](v22 - 4, v11) : *(id *)(v11 + 8 * v22);
      id v26 = v25;
      uint64_t v27 = v22 - 3;
      unint64_t v11 = v46;
      if (__OFADD__(v10, 1)) {
        break;
      }
      uint64_t v28 = v5;
      uint64_t v29 = v6;
      id v30 = objc_msgSend(objc_allocWithZone((Class)MTKeyRequestData), sel_init);
      id v31 = objc_msgSend(v26, sel_keyUri);
      objc_msgSend(v30, sel_setKeyIdentifier_, v31);

      id v48 = objc_msgSend(v26, sel_storeTrackId);
      sub_1ACE777C8();
      uint64_t v32 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      objc_msgSend(v30, sel_setContentAdamId_, v32);

      uint64_t v33 = v30;
      MEMORY[0x1AD118700]();
      if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1ACE765C8();
      }
      sub_1ACE76628();
      sub_1ACE76598();
      v43(v47, v45, v11);
      uint64_t v34 = v26;
      uint64_t v24 = sub_1ACE75498();
      os_log_type_t v35 = sub_1ACE76C08();
      if (os_log_type_enabled(v24, v35))
      {
        uint64_t v36 = swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = v39;
        *(void *)(v36 + 4) = [v34 storeTrackId];

        _os_log_impl(&dword_1AC9D5000, v24, v35, "Renewing HLS key for episode adam id:%lld", (uint8_t *)v36, 0xCu);
        uint64_t v37 = v36;
        unint64_t v11 = v46;
        MEMORY[0x1AD11B340](v37, -1, -1);
        uint64_t v23 = v33;
      }
      else
      {

        uint64_t v23 = v34;
        uint64_t v24 = v33;
      }

      uint64_t v6 = v29;
      v42(v47, v11);
      ++v22;
      uint64_t v5 = v28;
      unint64_t v11 = v40;
      if (v27 == v28) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_21:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (v5) {
    goto LABEL_9;
  }
  return swift_bridgeObjectRelease();
}

void sub_1ACC3CED0(uint64_t a1, unint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = sub_1ACE754C8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v16 = (char *)&v42 - v15;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)sub_1ACE77508();
    swift_bridgeObjectRelease();
    if ((uint64_t)v17 > a1)
    {
LABEL_3:
      if ((a2 & 0xC000000000000001) == 0)
      {
        if (a1 < 0)
        {
          __break(1u);
        }
        else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
        {
          id v18 = *(id *)(a2 + 8 * a1 + 32);
          goto LABEL_7;
        }
        __break(1u);
        goto LABEL_24;
      }
      id v18 = (id)MEMORY[0x1AD119490](a1, a2);
LABEL_7:
      uint64_t v17 = v18;
      uint64_t v47 = a3;
      if (qword_1EB768FD8 == -1)
      {
LABEL_8:
        uint64_t v19 = __swift_project_value_buffer(v10, (uint64_t)qword_1EB768FB8);
        swift_beginAccess();
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v16, v19, v10);
        id v20 = v17;
        long long v21 = sub_1ACE75498();
        int v22 = sub_1ACE76C08();
        if (os_log_type_enabled(v21, (os_log_type_t)v22))
        {
          int v43 = v22;
          os_log_t v44 = v21;
          uint64_t v45 = v5;
          uint64_t v46 = a4;
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          uint64_t v42 = swift_slowAlloc();
          aBlock[0] = v42;
          *(_DWORD *)uint64_t v23 = 136315138;
          id v24 = objc_msgSend(v20, sel_contentAdamId);
          if (v24)
          {
            id v25 = v24;
            uint64_t v26 = sub_1ACE761B8();
            unint64_t v28 = v27;
          }
          else
          {
            uint64_t v26 = 0;
            unint64_t v28 = 0xE000000000000000;
          }
          uint64_t v49 = sub_1ACA3189C(v26, v28, aBlock);
          sub_1ACE76FF8();

          swift_bridgeObjectRelease();
          os_log_t v29 = v44;
          _os_log_impl(&dword_1AC9D5000, v44, (os_log_type_t)v43, "[Key Loading] Starting from Key RenewalManager for episode adam id %s", v23, 0xCu);
          uint64_t v30 = v42;
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v30, -1, -1);
          MEMORY[0x1AD11B340](v23, -1, -1);

          (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
          uint64_t v5 = v45;
          a4 = v46;
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
        }
        id v31 = v47;
        id v32 = sub_1ACC3574C();
        uint64_t v33 = (void *)swift_allocObject();
        v33[2] = v20;
        v33[3] = v5;
        v33[4] = a1;
        v33[5] = a2;
        v33[6] = v31;
        v33[7] = a4;
        v33[8] = ObjectType;
        aBlock[4] = (uint64_t)sub_1ACC4270C;
        void aBlock[5] = (uint64_t)v33;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_1ACCB9FCC;
        aBlock[3] = (uint64_t)&block_descriptor_68_0;
        uint64_t v34 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        id v35 = v20;
        id v36 = v5;
        swift_retain();
        swift_release();
        objc_msgSend(v32, sel_startKeyLoadingProcessWithKeyRequestData_isRenewal_completion_, v35, 1, v34);
        _Block_release(v34);

        return;
      }
LABEL_24:
      swift_once();
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v17 = *(void **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((uint64_t)v17 > a1) {
      goto LABEL_3;
    }
  }
  if (qword_1EB768FD8 != -1) {
    swift_once();
  }
  uint64_t v37 = a3;
  uint64_t v38 = __swift_project_value_buffer(v10, (uint64_t)qword_1EB768FB8);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v38, v10);
  long long v39 = sub_1ACE75498();
  os_log_type_t v40 = sub_1ACE76C08();
  if (os_log_type_enabled(v39, v40))
  {
    unint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v41 = 0;
    _os_log_impl(&dword_1AC9D5000, v39, v40, "Renewals ended. Unlocking renewal.", v41, 2u);
    MEMORY[0x1AD11B340](v41, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  *((unsigned char *)v5 + OBJC_IVAR___MTSecureDownloadRenewalManager_renewalLock) = 0;
  sub_1ACC37730(0, 0);
  sub_1ACC35350(a2);
  v37();
  swift_bridgeObjectRelease();
}

uint64_t sub_1ACC3D498(id a1, void *a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v90 = a7;
  uint64_t v88 = a6;
  uint64_t v89 = a5;
  uint64_t v87 = a4;
  unint64_t v96 = a3;
  uint64_t v9 = sub_1ACE75DC8();
  uint64_t v95 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v93 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1ACE75E48();
  uint64_t v92 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v91 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE754C8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v81 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v99 = (char *)&v81 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v81 - v18;
  if (qword_1EB768FD8 != -1) {
    swift_once();
  }
  uint64_t v20 = __swift_project_value_buffer(v12, (uint64_t)qword_1EB768FB8);
  swift_beginAccess();
  long long v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v86 = v20;
  uint64_t v85 = v13 + 16;
  uint64_t v84 = v21;
  v21(v19, v20, v12);
  id v22 = a2;
  uint64_t v23 = sub_1ACE75498();
  os_log_type_t v24 = sub_1ACE76C08();
  BOOL v25 = os_log_type_enabled(v23, v24);
  id v97 = a1;
  uint64_t v98 = v13;
  if (v25)
  {
    uint64_t v82 = v12;
    uint64_t v83 = v9;
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    aBlock[0] = v27;
    *(_DWORD *)uint64_t v26 = 136315138;
    id v28 = objc_msgSend(v22, sel_contentAdamId);
    if (v28)
    {
      os_log_t v29 = v28;
      uint64_t v30 = sub_1ACE761B8();
      unint64_t v32 = v31;
    }
    else
    {
      uint64_t v30 = 0;
      unint64_t v32 = 0xE000000000000000;
    }
    uint64_t v100 = sub_1ACA3189C(v30, v32, aBlock);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v23, v24, "[Key Loading] Ending from Key RenewalManager for episode adam id %s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v27, -1, -1);
    MEMORY[0x1AD11B340](v26, -1, -1);

    uint64_t v33 = *(void (**)(char *, uint64_t))(v98 + 8);
    uint64_t v12 = v82;
    v33(v19, v82);
    uint64_t v9 = v83;
    a1 = v97;
    uint64_t v34 = v99;
    if (!v97) {
      goto LABEL_33;
    }
LABEL_10:
    v84(v34, v86, v12);
    id v35 = a1;
    id v36 = v22;
    id v37 = a1;
    id v38 = v36;
    id v39 = a1;
    os_log_type_t v40 = sub_1ACE75498();
    os_log_type_t v41 = sub_1ACE76BE8();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v83 = v9;
      uint64_t v42 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      aBlock[0] = v43;
      *(_DWORD *)uint64_t v42 = 136315394;
      id v44 = objc_msgSend(v38, sel_contentAdamId);
      uint64_t v82 = v12;
      if (v44)
      {
        uint64_t v45 = v44;
        uint64_t v46 = sub_1ACE761B8();
        unint64_t v48 = v47;
      }
      else
      {
        uint64_t v46 = 0;
        unint64_t v48 = 0xE000000000000000;
      }
      uint64_t v100 = sub_1ACA3189C(v46, v48, aBlock);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2080;
      a1 = v97;
      swift_getErrorValue();
      uint64_t v49 = sub_1ACE77A98();
      uint64_t v100 = sub_1ACA3189C(v49, v50, aBlock);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AC9D5000, v40, v41, "Failed to renew %s with error %s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v43, -1, -1);
      MEMORY[0x1AD11B340](v42, -1, -1);

      uint64_t v12 = v82;
      v33(v99, v82);
      uint64_t v9 = v83;
    }
    else
    {

      v33(v34, v12);
    }
    id v51 = a1;
    id v52 = (void *)sub_1ACE74D68();
    id v53 = objc_msgSend(v38, sel_contentAdamId);
    if (!v53)
    {
      id v59 = v51;
LABEL_32:

      goto LABEL_33;
    }
    uint64_t v54 = v53;
    id v55 = objc_msgSend(v52, sel_domain);
    uint64_t v56 = sub_1ACE761B8();
    uint64_t v58 = v57;

    if (v56 == 0xD000000000000036 && v58 == 0x80000001ACECB820)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v60 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      if ((v60 & 1) == 0)
      {
LABEL_31:

        id v59 = v97;
        goto LABEL_32;
      }
    }
    if (objc_msgSend(v52, sel_code) == (id)-1002)
    {
      uint64_t v61 = v81;
      v84(v81, v86, v12);
      id v62 = v38;
      os_log_type_t v63 = sub_1ACE75498();
      int v64 = sub_1ACE76BE8();
      if (os_log_type_enabled(v63, (os_log_type_t)v64))
      {
        LODWORD(v86) = v64;
        uint64_t v99 = (char *)v33;
        uint64_t v83 = v9;
        uint64_t v65 = (uint8_t *)swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        aBlock[0] = v66;
        *(_DWORD *)uint64_t v65 = 136315138;
        id v67 = objc_msgSend(v62, sel_contentAdamId);
        if (v67)
        {
          uint64_t v68 = v67;
          uint64_t v69 = sub_1ACE761B8();
          unint64_t v71 = v70;
        }
        else
        {
          uint64_t v69 = 0;
          unint64_t v71 = 0xE000000000000000;
        }
        uint64_t v100 = sub_1ACA3189C(v69, v71, aBlock);
        sub_1ACE76FF8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v63, (os_log_type_t)v86, "Removing download and key for episode %s without entitlement.", v65, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v66, -1, -1);
        MEMORY[0x1AD11B340](v65, -1, -1);

        ((void (*)(char *, uint64_t))v99)(v81, v12);
        uint64_t v9 = v83;
      }
      else
      {

        v33(v61, v12);
      }
      if (*(void *)&v96[OBJC_IVAR___MTSecureDownloadRenewalManager_delegate])
      {
        objc_msgSend((id)swift_unknownObjectRetain(), sel_removeDownloadOf_, v54);

        swift_unknownObjectRelease();
        goto LABEL_33;
      }
    }
    goto LABEL_31;
  }

  uint64_t v33 = *(void (**)(char *, uint64_t))(v13 + 8);
  v33(v19, v12);
  uint64_t v34 = v99;
  if (a1) {
    goto LABEL_10;
  }
LABEL_33:
  if (qword_1EB7681F8 != -1) {
    swift_once();
  }
  id v72 = (void *)swift_allocObject();
  uint64_t v73 = v96;
  uint64_t v74 = v87;
  v72[2] = v96;
  v72[3] = v74;
  uint64_t v75 = v88;
  v72[4] = v89;
  v72[5] = v75;
  v72[6] = v90;
  aBlock[4] = (uint64_t)sub_1ACC42768;
  void aBlock[5] = (uint64_t)v72;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1ACA6DA9C;
  aBlock[3] = (uint64_t)&block_descriptor_74;
  uint64_t v76 = _Block_copy(aBlock);
  id v77 = v73;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v78 = v91;
  sub_1ACE75E08();
  uint64_t v100 = MEMORY[0x1E4FBC860];
  sub_1ACC453E8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  uint64_t v79 = v93;
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v78, v79, v76);
  _Block_release(v76);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v79, v9);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v78, v94);
  return swift_release();
}

void sub_1ACC3E0D8(void *a1, char *a2)
{
  unint64_t v101 = a2;
  uint64_t v3 = sub_1ACE754C8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v99 = v3;
  uint64_t v100 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  unint64_t v96 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  id v97 = (char *)&v93 - v8;
  MEMORY[0x1F4188790](v7);
  *(void *)&long long v95 = (char *)&v93 - v9;
  uint64_t v10 = self;
  uint64_t v11 = @"MTOfflineKeyData";
  id v12 = objc_msgSend(v10, sel_truePredicate);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v14 = (void *)sub_1ACE76558();
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769598);
  uint64_t v15 = swift_allocObject();
  long long v102 = xmmword_1ACE843F0;
  *(_OWORD *)(v15 + 16) = xmmword_1ACE843F0;
  uint64_t v16 = sub_1ACE761B8();
  *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v15 + 32) = v16;
  *(void *)(v15 + 40) = v17;
  uint64_t v18 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  uint64_t v98 = a1;
  id v19 = objc_msgSend(a1, sel_objectDictionariesInEntity_predicate_sortDescriptors_propertiesToFetch_includeObjectId_, v11, v12, v14, v18, 0);

  if (!v19)
  {
    __break(1u);
LABEL_51:
    __break(1u);
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770968);
  uint64_t v20 = sub_1ACE76578();

  int64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    uint64_t v105 = v13;
    sub_1ACC83340(0, v21, 0);
    uint64_t v22 = 0;
    uint64_t v23 = v105;
    do
    {
      uint64_t v24 = *(void *)(v20 + 8 * v22 + 32);
      uint64_t v25 = sub_1ACE761B8();
      uint64_t v27 = v26;
      if (*(void *)(v24 + 16))
      {
        uint64_t v28 = v25;
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_1ACA657FC(v28, v27);
        if (v30)
        {
          sub_1ACA33128(*(void *)(v24 + 56) + 32 * v29, (uint64_t)&v106);
        }
        else
        {
          long long v106 = 0u;
          long long v107 = 0u;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v106 = 0u;
        long long v107 = 0u;
      }
      swift_bridgeObjectRelease();
      uint64_t v105 = v23;
      unint64_t v32 = *(void *)(v23 + 16);
      unint64_t v31 = *(void *)(v23 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1ACC83340(v31 > 1, v32 + 1, 1);
        uint64_t v23 = v105;
      }
      ++v22;
      *(void *)(v23 + 16) = v32 + 1;
      sub_1ACA50E14((uint64_t)&v106, v23 + 32 * v32 + 32, qword_1EB7725E0);
    }
    while (v21 != v22);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = MEMORY[0x1E4FBC860];
  }
  id v33 = objc_msgSend(self, sel_predicateForDownloaded_excludeHidden_, 0, 0);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1ACE84820;
  uint64_t v35 = sub_1ACE761B8();
  uint64_t v37 = v36;
  uint64_t v38 = MEMORY[0x1E4FBB1A0];
  *(void *)(v34 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v34 + 64) = sub_1ACADC3A8();
  *(void *)(v34 + 32) = v35;
  *(void *)(v34 + 40) = v37;
  *(void *)(v34 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7709E0);
  *(void *)(v34 + 104) = sub_1ACA51EA4(&qword_1EB7709E8, &qword_1EB7709E0);
  *(void *)(v34 + 72) = v23;
  id v39 = (void *)sub_1ACE76B88();
  id v40 = objc_msgSend(v33, sel_AND_, v39);

  os_log_type_t v41 = @"MTEpisode";
  id v42 = v40;
  uint64_t v43 = MEMORY[0x1E4FBC860];
  id v44 = (void *)sub_1ACE76558();
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = v102;
  uint64_t v46 = sub_1ACE761B8();
  *(void *)(v45 + 56) = v38;
  *(void *)(v45 + 32) = v46;
  *(void *)(v45 + 40) = v47;
  unint64_t v48 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  id v49 = objc_msgSend(v98, sel_objectDictionariesInEntity_predicate_sortDescriptors_propertiesToFetch_includeObjectId_, v41, v42, v44, v48, 0);

  if (!v49) {
    goto LABEL_51;
  }
  id v94 = v42;
  unint64_t v50 = v101 + 16;
  uint64_t v51 = sub_1ACE76578();

  int64_t v52 = *(void *)(v51 + 16);
  if (v52)
  {
    uint64_t v105 = v43;
    sub_1ACC83340(0, v52, 0);
    uint64_t v53 = 0;
    uint64_t v54 = v105;
    do
    {
      uint64_t v55 = *(void *)(v51 + 8 * v53 + 32);
      uint64_t v56 = sub_1ACE761B8();
      uint64_t v58 = v57;
      if (*(void *)(v55 + 16))
      {
        uint64_t v59 = v56;
        swift_bridgeObjectRetain();
        uint64_t v60 = sub_1ACA657FC(v59, v58);
        if (v61)
        {
          sub_1ACA33128(*(void *)(v55 + 56) + 32 * v60, (uint64_t)&v106);
        }
        else
        {
          long long v106 = 0u;
          long long v107 = 0u;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v106 = 0u;
        long long v107 = 0u;
      }
      swift_bridgeObjectRelease();
      uint64_t v105 = v54;
      unint64_t v63 = *(void *)(v54 + 16);
      unint64_t v62 = *(void *)(v54 + 24);
      if (v63 >= v62 >> 1)
      {
        sub_1ACC83340(v62 > 1, v63 + 1, 1);
        uint64_t v54 = v105;
      }
      ++v53;
      *(void *)(v54 + 16) = v63 + 1;
      sub_1ACA50E14((uint64_t)&v106, v54 + 32 * v63 + 32, qword_1EB7725E0);
    }
    while (v52 != v53);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v54 = MEMORY[0x1E4FBC860];
  }
  uint64_t v64 = *(void *)(v54 + 16);
  swift_beginAccess();
  *unint64_t v50 = v64;
  uint64_t v65 = v99;
  uint64_t v66 = v95;
  if (qword_1EB768FD8 != -1) {
    swift_once();
  }
  uint64_t v67 = __swift_project_value_buffer(v65, (uint64_t)qword_1EB768FB8);
  swift_beginAccess();
  uint64_t v68 = *(char **)(v100 + 16);
  uint64_t v103 = v67;
  unint64_t v101 = v68;
  *(void *)&long long v102 = v100 + 16;
  ((void (*)(uint64_t, uint64_t, uint64_t))v68)(v66, v67, v65);
  swift_bridgeObjectRetain_n();
  uint64_t v69 = sub_1ACE75498();
  os_log_type_t v70 = sub_1ACE76C08();
  if (os_log_type_enabled(v69, v70))
  {
    unint64_t v71 = (uint8_t *)swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    *(void *)&long long v106 = v72;
    *(_DWORD *)unint64_t v71 = 136315138;
    uint64_t v65 = v99;
    unint64_t v93 = v71 + 4;
    swift_bridgeObjectRetain();
    uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB7725E0);
    uint64_t v74 = MEMORY[0x1AD118740](v54, v73);
    unint64_t v76 = v75;
    swift_bridgeObjectRelease();
    uint64_t v104 = sub_1ACA3189C(v74, v76, (uint64_t *)&v106);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v69, v70, "Found orphaned keys for storeTrackIds: %s", v71, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v72, -1, -1);
    MEMORY[0x1AD11B340](v71, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v77 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
  v77(v66, v65);
  uint64_t v79 = v97;
  uint64_t v80 = *(void *)(v54 + 16);
  if (v80)
  {
    uint64_t v81 = v54 + 32;
    uint64_t v100 = MEMORY[0x1E4FBC840] + 8;
    *(void *)&long long v78 = 134217984;
    long long v95 = v78;
    while (1)
    {
      sub_1ACA3AAD4(v81, (uint64_t)&v106, qword_1EB7725E0);
      if (!*((void *)&v107 + 1)) {
        break;
      }
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_43;
      }
      uint64_t v82 = v104;
      _s18PodcastsFoundation28SecureDownloadRenewalManagerC16inContextKeyData3for3ctxSo09MTOfflineiJ0CSgs5Int64V_So015NSManagedObjectH0CtFZ_0(v104, v98);
      if (v83)
      {
        uint64_t v84 = v83;
        objc_msgSend(v83, sel_setPendingDeletion_, 1);
      }
      else
      {
        ((void (*)(char *, uint64_t, uint64_t))v101)(v96, v103, v65);
        uint64_t v89 = sub_1ACE75498();
        os_log_type_t v90 = sub_1ACE76C08();
        if (os_log_type_enabled(v89, v90))
        {
          uint64_t v91 = swift_slowAlloc();
          *(_DWORD *)uint64_t v91 = v95;
          *(void *)(v91 + 4) = v82;
          _os_log_impl(&dword_1AC9D5000, v89, v90, "Did not locate orphaned key data for storeTrackId %lld", (uint8_t *)v91, 0xCu);
          uint64_t v92 = v91;
          uint64_t v65 = v99;
          MEMORY[0x1AD11B340](v92, -1, -1);
        }

        v77((uint64_t)v96, v65);
      }
      uint64_t v79 = v97;
LABEL_37:
      v81 += 32;
      if (!--v80) {
        goto LABEL_49;
      }
    }
    sub_1ACA50E78((uint64_t)&v106, qword_1EB7725E0);
LABEL_43:
    ((void (*)(char *, uint64_t, uint64_t))v101)(v79, v103, v65);
    uint64_t v85 = sub_1ACE75498();
    os_log_type_t v86 = sub_1ACE76BE8();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v87 = 0;
      _os_log_impl(&dword_1AC9D5000, v85, v86, "Found orphaned key with invalid storeTrackId type", v87, 2u);
      uint64_t v88 = v87;
      uint64_t v65 = v99;
      MEMORY[0x1AD11B340](v88, -1, -1);
    }

    v77((uint64_t)v79, v65);
    goto LABEL_37;
  }
LABEL_49:

  swift_bridgeObjectRelease();
}

id SecureDownloadRenewalManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SecureDownloadRenewalManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACC3EC7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1ACE75118();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1ACC453E8((unint64_t *)&qword_1EB766C80, MEMORY[0x1E4F27990]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_1ACE760E8();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_1ACC453E8((unint64_t *)&unk_1E99F3ED0, MEMORY[0x1E4F27990]);
      char v19 = sub_1ACE76168();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    int64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *int64_t v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1ACBEF2FC();
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_1ACC3FE20(v12);
    *int64_t v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

double sub_1ACC3EF5C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_1ACE77B18();
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  int v10 = *((unsigned __int8 *)a1 + 24);
  swift_bridgeObjectRetain();
  uint64_t v42 = v8;
  uint64_t v43 = v7;
  sub_1ACE76108();
  int v40 = v10;
  sub_1ACE77B38();
  if (v10 != 1) {
    sub_1ACE77B58();
  }
  sub_1ACA8F4F4((uint64_t)(a1 + 4), (uint64_t)v47);
  sub_1ACA8F4F4((uint64_t)v47, (uint64_t)v57);
  uint64_t v37 = v3;
  uint64_t v38 = a2;
  uint64_t v39 = v9;
  if (v58 > 2)
  {
    sub_1ACE77B28();
    sub_1ACE77B38();
    sub_1ACE76108();
    sub_1ACE77B38();
    sub_1ACE77B58();
  }
  else
  {
    sub_1ACE77B28();
  }
  uint64_t v11 = sub_1ACE77B78();
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v14 = v6 + 56;
  if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    *(void *)(v38 + 64) = 0;
    double result = 0.0;
    *(_OWORD *)(v38 + 32) = 0u;
    *(_OWORD *)(v38 + 48) = 0u;
    *(_OWORD *)uint64_t v38 = 0u;
    *(_OWORD *)(v38 + 16) = 0u;
    return result;
  }
  uint64_t v41 = ~v12;
  uint64_t v15 = *(void *)(v6 + 48);
  while (1)
  {
    uint64_t v16 = v15 + 72 * v13;
    uint64_t v17 = *(void *)(v16 + 16);
    char v18 = *(unsigned char *)(v16 + 24);
    uint64_t v19 = *(void *)(v16 + 32);
    uint64_t v20 = *(void *)(v16 + 40);
    uint64_t v21 = *(void *)(v16 + 48);
    uint64_t v22 = *(void *)(v16 + 56);
    uint64_t v23 = *(void *)(v16 + 64);
    BOOL v24 = *(void *)v16 == v43 && *(void *)(v16 + 8) == v42;
    if (!v24 && (sub_1ACE77848() & 1) == 0) {
      goto LABEL_9;
    }
    if (v18)
    {
      if (!v40) {
        goto LABEL_9;
      }
    }
    else
    {
      char v25 = v40;
      if (v17 != v39) {
        char v25 = 1;
      }
      if (v25) {
        goto LABEL_9;
      }
    }
    if (!v21)
    {
      sub_1ACA8F4F4((uint64_t)v47, (uint64_t)v48);
      if (!v49) {
        goto LABEL_37;
      }
      goto LABEL_9;
    }
    if (v21 != 1) {
      break;
    }
    sub_1ACA8F4F4((uint64_t)v47, (uint64_t)v50);
    if (v51 == 1) {
      goto LABEL_37;
    }
LABEL_9:
    unint64_t v13 = (v13 + 1) & v41;
    if (((*(void *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
      goto LABEL_40;
    }
  }
  if (v21 == 2)
  {
    sub_1ACA8F4F4((uint64_t)v47, (uint64_t)v45);
    if (v46 == 2) {
      goto LABEL_37;
    }
    goto LABEL_9;
  }
  sub_1ACA8F4F4((uint64_t)v47, (uint64_t)v52);
  if (v54 < 3 || ((v19 & 1) == 0) == v52[0]) {
    goto LABEL_9;
  }
  int v26 = v55;
  uint64_t v27 = v56;
  BOOL v28 = v20 == v53 && v21 == v54;
  if (!v28 && (sub_1ACE77848() & 1) == 0 || ((v22 ^ v26) & 1) != 0 || v23 != v27) {
    goto LABEL_9;
  }
LABEL_37:
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v30 = *v37;
  uint64_t v44 = *v37;
  *uint64_t v37 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1ACBEF5A0();
    uint64_t v30 = v44;
  }
  uint64_t v31 = *(void *)(v30 + 48) + 72 * v13;
  uint64_t v32 = *(void *)(v31 + 16);
  char v33 = *(unsigned char *)(v31 + 24);
  uint64_t v34 = *(void *)(v31 + 64);
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v31;
  *(void *)(v38 + 16) = v32;
  *(unsigned char *)(v38 + 24) = v33;
  long long v35 = *(_OWORD *)(v31 + 48);
  *(_OWORD *)(v38 + 32) = *(_OWORD *)(v31 + 32);
  *(_OWORD *)(v38 + 48) = v35;
  *(void *)(v38 + 64) = v34;
  sub_1ACC4013C(v13);
  *uint64_t v37 = v44;
  swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1ACC3F2FC(uint64_t a1, __int16 a2)
{
  uint64_t v3 = v2;
  char v4 = a2;
  char v6 = a2;
  uint64_t v23 = HIBYTE(a2);
  uint64_t v7 = *v3;
  sub_1ACE77B18();
  sub_1ACE77B38();
  if ((v4 & 1) == 0) {
    sub_1ACE77B58();
  }
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1ACE77B78();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v22 = v3;
  uint64_t v11 = ~v9;
  while (1)
  {
    uint64_t v13 = *(void *)(v7 + 48) + 16 * v10;
    if ((*(unsigned char *)(v13 + 8) & 1) == 0) {
      break;
    }
    if (v6) {
      goto LABEL_12;
    }
LABEL_6:
    unint64_t v10 = (v10 + 1) & v11;
    if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      goto LABEL_25;
    }
  }
  if ((v6 & 1) != 0 || *(void *)v13 != a1) {
    goto LABEL_6;
  }
LABEL_12:
  unint64_t v14 = 0xEB00000000737365;
  uint64_t v15 = 0x4C74736567677573;
  switch(*(unsigned char *)(v13 + 9))
  {
    case 1:
      unint64_t v14 = 0xE700000000000000;
      uint64_t v15 = 0x6C61727475656ELL;
      break;
    case 2:
      uint64_t v15 = 0x657469726F766166;
      unint64_t v14 = 0xE900000000000064;
      break;
    case 3:
      unint64_t v14 = 0xE700000000000000;
      uint64_t v15 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  uint64_t v16 = 0x4C74736567677573;
  unint64_t v17 = 0xEB00000000737365;
  switch(v23)
  {
    case 1:
      unint64_t v17 = 0xE700000000000000;
      if (v15 == 0x6C61727475656ELL) {
        goto LABEL_21;
      }
      goto LABEL_5;
    case 2:
      uint64_t v16 = 0x657469726F766166;
      unint64_t v17 = 0xE900000000000064;
      goto LABEL_20;
    case 3:
      unint64_t v17 = 0xE700000000000000;
      if (v15 != 0x6E776F6E6B6E75) {
        goto LABEL_5;
      }
      goto LABEL_21;
    default:
LABEL_20:
      if (v15 != v16) {
        goto LABEL_5;
      }
LABEL_21:
      if (v14 == v17)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_27;
      }
LABEL_5:
      char v12 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0) {
        goto LABEL_6;
      }
      swift_bridgeObjectRelease();
LABEL_27:
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v20 = *v22;
      uint64_t v24 = *v22;
      *uint64_t v22 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1ACBEF7C8();
        uint64_t v20 = v24;
      }
      uint64_t v18 = *(void *)(*(void *)(v20 + 48) + 16 * v10);
      sub_1ACC4042C(v10);
      *uint64_t v22 = v24;
      swift_bridgeObjectRelease();
      break;
  }
  return v18;
}

uint64_t sub_1ACC3F6E8(void *a1)
{
  uint64_t v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v4 = a1;
    char v5 = sub_1ACE771B8();

    if (v5)
    {
      uint64_t v6 = sub_1ACC3FC84();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1ACE76F58();
  uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    goto LABEL_12;
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
  id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
  char v11 = sub_1ACE76F68();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v12;
      if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_12;
      }
      id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
      char v14 = sub_1ACE76F68();
    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v1;
  uint64_t v18 = *v1;
  uint64_t *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1ACBEF978();
    uint64_t v16 = v18;
  }
  uint64_t v6 = *(void *)(*(void *)(v16 + 48) + 8 * v9);
  sub_1ACC406C4(v9);
  uint64_t *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1ACC3F8C0(uint64_t a1)
{
  objc_super v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1ACE77B08();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(v4 + 48);
  if (*(void *)(v8 + 8 * v7) != a1)
  {
    uint64_t v9 = ~v6;
    do
    {
      unint64_t v7 = (v7 + 1) & v9;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(v8 + 8 * v7) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v2;
  uint64_t v14 = *v2;
  *objc_super v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1ACBEF164();
    uint64_t v11 = v14;
  }
  uint64_t v12 = *(void *)(*(void *)(v11 + 48) + 8 * v7);
  sub_1ACC40868(v7);
  *objc_super v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1ACC3F9CC(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_1ACE77B18();
  sub_1ACE77B58();
  uint64_t v4 = sub_1ACE77B78();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v7 = *(void *)(v3 + 48);
  if (*(void *)(v7 + 8 * v6) != a1)
  {
    uint64_t v8 = ~v5;
    do
    {
      unint64_t v6 = (v6 + 1) & v8;
      if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(v7 + 8 * v6) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v1;
  uint64_t v13 = *v1;
  uint64_t *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1ACBEEE1C();
    uint64_t v10 = v13;
  }
  uint64_t v11 = *(void *)(*(void *)(v10 + 48) + 8 * v6);
  sub_1ACC409F0(v6);
  uint64_t *v1 = v13;
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1ACC3FAF4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1ACE77B18();
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  uint64_t v6 = sub_1ACE77B78();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1ACE77848() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1ACE77848() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *objc_super v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1ACBEEC68();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_1ACC40B9C(v8);
  *objc_super v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1ACC3FC84()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1ACE77178();
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v4 = sub_1ACD32618(v3, v2);
  uint64_t v15 = v4;
  swift_retain();
  uint64_t v5 = sub_1ACE76F58();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
    id v8 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
    char v9 = sub_1ACE76F68();

    if (v9)
    {
LABEL_6:
      swift_release();
      uint64_t v13 = *(void *)(*(void *)(v4 + 48) + 8 * v7);
      sub_1ACC406C4(v7);
      if (sub_1ACE76F68())
      {
        uint64_t *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      uint64_t v10 = ~v6;
      while (1)
      {
        unint64_t v7 = (v7 + 1) & v10;
        if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          break;
        }
        id v11 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
        char v12 = sub_1ACE76F68();

        if (v12) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1ACC3FE20(int64_t a1)
{
  uint64_t v3 = sub_1ACE75118();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = sub_1ACE770F8();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      uint64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_1ACC453E8((unint64_t *)&qword_1EB766C80, MEMORY[0x1E4F27990]);
        uint64_t v21 = sub_1ACE760E8();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

unint64_t sub_1ACC4013C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v26 = (v8 + 1) & v7;
      uint64_t v27 = v7;
      uint64_t v24 = v3;
      uint64_t v25 = v4;
      do
      {
        int64_t v28 = v2;
        uint64_t v9 = *(void *)(v3 + 48) + 72 * v6;
        int v10 = *(unsigned __int8 *)(v9 + 24);
        uint64_t v11 = *(void *)(v9 + 32);
        uint64_t v12 = *(void *)(v9 + 40);
        unint64_t v13 = *(void *)(v9 + 48);
        sub_1ACE77B18();
        swift_bridgeObjectRetain();
        uint64_t v29 = v11;
        sub_1ACA50D88(v11, v12, v13);
        sub_1ACE76108();
        sub_1ACE77B38();
        if (v10 != 1) {
          sub_1ACE77B58();
        }
        uint64_t v3 = v24;
        uint64_t v4 = v25;
        uint64_t v14 = v12;
        if (v13)
        {
          uint64_t v15 = v27;
          int64_t v2 = v28;
          if (v13 == 1 || v13 == 2)
          {
            sub_1ACE77B28();
          }
          else
          {
            sub_1ACE77B28();
            sub_1ACE77B38();
            sub_1ACE76108();
            sub_1ACE77B38();
            sub_1ACE77B58();
          }
        }
        else
        {
          sub_1ACE77B28();
          uint64_t v15 = v27;
          int64_t v2 = v28;
        }
        uint64_t v16 = sub_1ACE77B78();
        swift_bridgeObjectRelease();
        sub_1ACA50D9C(v29, v14, v13);
        unint64_t v17 = v16 & v15;
        if (v2 >= (uint64_t)v26)
        {
          if (v17 < v26) {
            goto LABEL_5;
          }
        }
        else if (v17 >= v26)
        {
          goto LABEL_20;
        }
        if (v2 >= (uint64_t)v17)
        {
LABEL_20:
          uint64_t v18 = *(void *)(v24 + 48);
          uint64_t v19 = (char *)(v18 + 72 * v2);
          int64_t v20 = (char *)(v18 + 72 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v19 >= v20 + 72))
          {
            memmove(v19, v20, 0x48uLL);
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v15;
      }
      while (((*(void *)(v25 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v21 = *(void *)(v3 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v23;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1ACC4042C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = 16 * v6;
        int v11 = *(unsigned __int8 *)(*(void *)(v3 + 48) + 16 * v6 + 8);
        sub_1ACE77B18();
        sub_1ACE77B38();
        if (v11 != 1) {
          sub_1ACE77B58();
        }
        sub_1ACE76108();
        swift_bridgeObjectRelease();
        unint64_t v12 = sub_1ACE77B78() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 < v9) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v9)
        {
          goto LABEL_13;
        }
        if (v2 >= (uint64_t)v12)
        {
LABEL_13:
          uint64_t v13 = *(void *)(v3 + 48);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v2);
          uint64_t v15 = (_OWORD *)(v13 + v10);
          if (16 * v2 != v10 || (int64_t v2 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
    JUMPOUT(0x1ACC406B4);
  }
  *(void *)(v3 + 16) = v18;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_1ACC406C4(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        uint64_t v11 = sub_1ACE76F58();

        unint64_t v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(v3 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v2);
            BOOL v17 = (void *)(v15 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v16 >= v17 + 1))
            {
              *uint64_t v16 = *v17;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1ACC40868(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(v3 + 48);
        uint64_t v11 = (void *)(v10 + 8 * v6);
        uint64_t v12 = sub_1ACE77B08() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            uint64_t v15 = (void *)(v10 + 8 * v2);
            if (v2 != v6 || (int64_t v2 = v6, v15 >= v11 + 1))
            {
              *uint64_t v15 = *v11;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1ACC409F0(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1ACE77B18();
        sub_1ACE77B58();
        unint64_t v10 = sub_1ACE77B78() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v3 + 48);
          uint64_t v12 = (void *)(v11 + 8 * v2);
          uint64_t v13 = (void *)(v11 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v12 >= v13 + 1))
          {
            *uint64_t v12 = *v13;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFSUB__(v14, 1);
  uint64_t v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1ACC40B9C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1ACE77B18();
        swift_bridgeObjectRetain();
        sub_1ACE76108();
        uint64_t v10 = sub_1ACE77B78();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1ACC40D64(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v15 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v15 >= v7) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v3 + 8 * v15);
    ++v8;
    if (!v16)
    {
      int64_t v8 = v15 + 1;
      if (v15 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v16 = *(void *)(v3 + 8 * v8);
      if (!v16)
      {
        int64_t v8 = v15 + 2;
        if (v15 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v16 = *(void *)(v3 + 8 * v8);
        if (!v16)
        {
          int64_t v8 = v15 + 3;
          if (v15 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v16 = *(void *)(v3 + 8 * v8);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v16 - 1) & v16;
    unint64_t v10 = __clz(__rbit64(v16)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = *(void *)(v2 + 48) + 72 * v10;
    v19[0] = *(_OWORD *)v11;
    long long v13 = *(_OWORD *)(v11 + 32);
    long long v12 = *(_OWORD *)(v11 + 48);
    long long v14 = *(_OWORD *)(v11 + 16);
    uint64_t v20 = *(void *)(v11 + 64);
    void v19[2] = v13;
    uint64_t v19[3] = v12;
    v19[1] = v14;
    sub_1ACB99C68(v19);
    sub_1ACC3EF5C((uint64_t *)v19, (uint64_t)v18);
    sub_1ACC44ECC(v18[0], v18[1], v18[2], v18[3], v18[4], v18[5], v18[6]);
    uint64_t result = (uint64_t)sub_1ACC44F40(v19);
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v7) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v3 + 8 * v17);
  if (v16)
  {
    int64_t v8 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v8 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v8 >= v7) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v3 + 8 * v8);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1ACC40F20(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v11 >= v7) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    uint64_t result = sub_1ACC3F2FC(*(void *)(*(void *)(v2 + 48) + 16 * v10), *(unsigned __int8 *)(*(void *)(v2 + 48) + 16 * v10 + 8) | (unsigned __int16)(*(unsigned __int8 *)(*(void *)(v2 + 48) + 16 * v10 + 9) << 8));
  }
  int64_t v13 = v11 + 4;
  if (v13 < v7)
  {
    unint64_t v12 = *(void *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

void sub_1ACC410B0(uint64_t a1)
{
  if ((*(void *)v1 & 0xC000000000000001) != 0)
  {
    if (!sub_1ACE77178()) {
      return;
    }
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1ACE77138();
      sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
      sub_1ACC42D88((unint64_t *)&unk_1EB768EE0, (unint64_t *)&qword_1EB768ED8);
      sub_1ACE76A28();
      a1 = v20;
      uint64_t v18 = v21;
      uint64_t v3 = v22;
      uint64_t v4 = v23;
      unint64_t v5 = v24;
    }
    else
    {
      uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v18 = a1 + 56;
      uint64_t v3 = ~v6;
      uint64_t v7 = -v6;
      if (v7 < 64) {
        uint64_t v8 = ~(-1 << v7);
      }
      else {
        uint64_t v8 = -1;
      }
      unint64_t v5 = v8 & *(void *)(a1 + 56);
      swift_bridgeObjectRetain();
      uint64_t v4 = 0;
    }
    int64_t v9 = (unint64_t)(v3 + 64) >> 6;
    if (a1 < 0) {
      goto LABEL_14;
    }
    while (1)
    {
      if (v5)
      {
        uint64_t v10 = (v5 - 1) & v5;
        unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
        uint64_t v12 = v4;
      }
      else
      {
        int64_t v14 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          return;
        }
        if (v14 >= v9) {
          goto LABEL_36;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v14);
        uint64_t v12 = v4 + 1;
        if (!v15)
        {
          uint64_t v12 = v4 + 2;
          if (v4 + 2 >= v9) {
            goto LABEL_36;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v4 + 3;
            if (v4 + 3 >= v9) {
              goto LABEL_36;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              uint64_t v12 = v4 + 4;
              if (v4 + 4 >= v9) {
                goto LABEL_36;
              }
              unint64_t v15 = *(void *)(v18 + 8 * v12);
              if (!v15)
              {
                uint64_t v12 = v4 + 5;
                if (v4 + 5 >= v9) {
                  goto LABEL_36;
                }
                unint64_t v15 = *(void *)(v18 + 8 * v12);
                if (!v15)
                {
                  uint64_t v16 = v4 + 6;
                  while (v9 != v16)
                  {
                    unint64_t v15 = *(void *)(v18 + 8 * v16++);
                    if (v15)
                    {
                      uint64_t v12 = v16 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_36:
                  sub_1ACA50A70();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      id v13 = *(id *)(*(void *)(a1 + 48) + 8 * v11);
      if (!v13) {
        goto LABEL_36;
      }
      while (1)
      {
        int64_t v17 = (void *)sub_1ACC3F6E8(v13);

        uint64_t v4 = v12;
        unint64_t v5 = v10;
        if ((a1 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_14:
        if (sub_1ACE771A8())
        {
          sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v13 = v19;
          swift_unknownObjectRelease();
          uint64_t v12 = v4;
          uint64_t v10 = v5;
          if (v19) {
            continue;
          }
        }
        goto LABEL_36;
      }
    }
  }
  if (*(void *)(*(void *)v1 + 16)) {
    goto LABEL_5;
  }
}

uint64_t sub_1ACC413BC(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v11 >= v7) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    uint64_t result = sub_1ACC3F8C0(*(void *)(*(void *)(v2 + 48) + 8 * v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 < v7)
  {
    unint64_t v12 = *(void *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_1ACC41530(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v11 >= v7) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    uint64_t result = sub_1ACC3F9CC(*(void *)(*(void *)(v2 + 48) + 8 * v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 < v7)
  {
    unint64_t v12 = *(void *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_1ACC416A4(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    int64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1ACC3FAF4(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

BOOL sub_1ACC4184C(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 8) & 1) == 0;
}

uint64_t sub_1ACC4185C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (*(unsigned char *)(result + 8)) {
    __break(1u);
  }
  else {
    *a2 = *(void *)result;
  }
  return result;
}

uint64_t sub_1ACC41874(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *(void *)(*a2 + 16);
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F3EB0) - 8);
  uint64_t v9 = v6 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_1ACC3B768(v10, v9, v7 != 0, (2 * v7) | 1, a3, a4);
  return swift_bridgeObjectRelease();
}

id sub_1ACC41944(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR___MTSecureDownloadRenewalManager_analyticsChannel;
  id v4 = objc_allocWithZone((Class)PFCoreAnalyticsChannel);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  uint64_t v6 = &v5[OBJC_IVAR___MTSecureDownloadRenewalManager_bugReporter];
  id v7 = objc_msgSend(self, sel_sharedInstance);
  *((void *)v6 + 3) = sub_1ACA50D4C(0, &qword_1EB76E0E0);
  *((void *)v6 + 4) = &protocol witness table for PFAutoBugCaptureBugReporter;
  *(void *)uint64_t v6 = v7;
  uint64_t v8 = OBJC_IVAR___MTSecureDownloadRenewalManager_delegate;
  *(void *)&v5[OBJC_IVAR___MTSecureDownloadRenewalManager_delegate] = 0;
  *(void *)&v5[OBJC_IVAR___MTSecureDownloadRenewalManager____lazy_storage___secureKeyLoader] = 0;
  v5[OBJC_IVAR___MTSecureDownloadRenewalManager_removalLock] = 0;
  v5[OBJC_IVAR___MTSecureDownloadRenewalManager_renewalLock] = 0;
  *(void *)&v5[v8] = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)&v5[OBJC_IVAR___MTSecureDownloadRenewalManager_metadataLoader] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MediaItemMetadataLoader()), sel_init);

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for SecureDownloadRenewalManager();
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t sub_1ACC41A88()
{
  return swift_deallocObject();
}

uint64_t sub_1ACC41A98()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACC41AD8()
{
  sub_1ACC3E0D8(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_1ACC41AEC()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1ACC41B34()
{
  return sub_1ACC44E10((uint64_t (*)(void, void, void, void, void))sub_1ACC364F8);
}

void _s18PodcastsFoundation28SecureDownloadRenewalManagerC16inContextKeyData3for3ctxSo09MTOfflineiJ0CSgs5Int64V_So015NSManagedObjectH0CtFZ_0(uint64_t a1, void *a2)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithLongLong_, a1);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ACE84820;
  uint64_t v5 = sub_1ACE761B8();
  uint64_t v7 = v6;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1ACADC3A8();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  *(void *)(v4 + 96) = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
  *(void *)(v4 + 104) = sub_1ACC42D88((unint64_t *)&qword_1EB768F60, (unint64_t *)&qword_1EB768F50);
  *(void *)(v4 + 72) = v3;
  uint64_t v8 = @"MTOfflineKeyData";
  id v9 = v3;
  objc_super v10 = (void *)sub_1ACE76B88();
  int64_t v11 = (void *)sub_1ACE76558();
  id v12 = objc_msgSend(a2, sel_objectsInEntity_predicate_sortDescriptors_, v8, v10, v11);

  if (!v12) {
    goto LABEL_11;
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
  unint64_t v13 = sub_1ACE76578();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_4;
    }
    goto LABEL_10;
  }
  if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:

    return;
  }
LABEL_4:
  if ((v13 & 0xC000000000000001) != 0)
  {
    id v14 = (id)MEMORY[0x1AD119490](0, v13);
  }
  else
  {
    if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v14 = *(id *)(v13 + 32);
  }
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();

  self;
  if (!swift_dynamicCastObjCClass()) {
}
  }

uint64_t sub_1ACC41DE4()
{
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1ACC41E3C()
{
  return sub_1ACC3697C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1ACC41E4C()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1ACC41E9C()
{
  return sub_1ACC44E10((uint64_t (*)(void, void, void, void, void))sub_1ACC370C8);
}

uint64_t sub_1ACC41EB4(void *a1)
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ACE843F0;
  uint64_t v3 = sub_1ACE761B8();
  uint64_t v5 = v4;
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = sub_1ACADC3A8();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v5;
  uint64_t v6 = @"MTOfflineKeyData";
  uint64_t v7 = (void *)sub_1ACE76B88();
  uint64_t v8 = MEMORY[0x1E4FBC860];
  id v9 = (void *)sub_1ACE76558();
  id v10 = objc_msgSend(a1, sel_objectsInEntity_predicate_sortDescriptors_, v6, v7, v9);

  if (v10)
  {
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
    unint64_t v11 = sub_1ACE76578();

    uint64_t v12 = sub_1ACC2BD38(v11);
    swift_bridgeObjectRelease();
    if (v12) {
      return v12;
    }
  }
  return v8;
}

void sub_1ACC42030(uint64_t a1, uint64_t a2)
{
  if (os_feature_enabled_download_consistency_checks())
  {
    if (qword_1EB76C580 == -1)
    {
      if (_s18PodcastsFoundation25FairPlayRolloutControllerC9isEnabledSbyF_0()) {
        return;
      }
    }
    else
    {
      swift_once();
      if (_s18PodcastsFoundation25FairPlayRolloutControllerC9isEnabledSbyF_0()) {
        return;
      }
    }
    uint64_t v4 = (objc_class *)type metadata accessor for BugReport();
    uint64_t v5 = objc_allocWithZone(v4);
    v5[OBJC_IVAR___PFBugReport_system] = 1;
    v5[OBJC_IVAR___PFBugReport_errorKind] = 2;
    v5[OBJC_IVAR___PFBugReport_forceSubmissionAttempt] = 0;
    v11.receiver = v5;
    v11.super_class = v4;
    id v6 = objc_msgSendSuper2(&v11, sel_init);
    id v7 = objc_msgSend(self, sel_sharedInstance);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a1;
    *(void *)(v8 + 24) = a2;
    void v10[4] = sub_1ACC44DA8;
    v10[5] = v8;
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 1107296256;
    long long v10[2] = sub_1ACE70098;
    v10[3] = &block_descriptor_171;
    id v9 = _Block_copy(v10);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v7, sel_submitBugReport_userInfo_withMaximumSubmissionCadence_, v6, v9, 3600.0);
    _Block_release(v9);
    swift_release();
  }
}

uint64_t sub_1ACC42210(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1ACE75DC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE75E48();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB7681F8 != -1) {
    swift_once();
  }
  v17[0] = qword_1EB7681F0;
  unint64_t v13 = (void *)swift_allocObject();
  v13[2] = v2;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_1ACC44FA4;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_197;
  id v14 = _Block_copy(aBlock);
  id v15 = v2;
  sub_1ACA6DEC8(a1);
  sub_1ACE75E08();
  v17[1] = MEMORY[0x1E4FBC860];
  sub_1ACC453E8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t type metadata accessor for SecureDownloadRenewalManager()
{
  return self;
}

uint64_t method lookup function for SecureDownloadRenewalManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SecureDownloadRenewalManager);
}

uint64_t dispatch thunk of SecureDownloadRenewalManager.__allocating_init(delegate:)()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of SecureDownloadRenewalManager.requestSecureDeletionOfOrphanedKeys(completionHandler:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of SecureDownloadRenewalManager.requestSecureDeletion(of:completionHandler:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of SecureDownloadRenewalManager.requestSecureDeletionOfAllKeys(completionHandler:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of SecureDownloadRenewalManager.updateDRMKeysForDownloads()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of SecureDownloadRenewalManager.updateDRMKeysForDownloads(urlProtocolDelegate:completionHandler:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t sub_1ACC426BC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC4270C(void *a1)
{
  return sub_1ACC3D498(a1, *(void **)(v1 + 16), *(char **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1ACC42720()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC42768()
{
  uint64_t v1 = v0[3];
  uint64_t result = v1 + 1;
  if (!__OFADD__(v1, 1)) {
    return sub_1ACC3CED0(result, v0[4], v0[5], v0[6]);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACC427A4(unsigned char *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1ACE754C8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = (void *)swift_allocObject();
  void v14[2] = a2;
  v14[3] = a3;
  v14[4] = a4;
  v14[5] = a5;
  if (a1[OBJC_IVAR___MTSecureDownloadRenewalManager_renewalLock] == 1)
  {
    id v15 = a2;
    swift_bridgeObjectRetain();
    sub_1ACA6DEC8(a4);
    sub_1ACC3966C(MEMORY[0x1E4FBC860], v15, a3, a4, a5);
    return swift_release();
  }
  a1[OBJC_IVAR___MTSecureDownloadRenewalManager_renewalLock] = 1;
  unint64_t v32 = MEMORY[0x1E4FBC860];
  int64_t v17 = self;
  id v18 = a2;
  swift_bridgeObjectRetain();
  sub_1ACA6DEC8(a4);
  id v19 = objc_msgSend(v17, sel_sharedInstance);
  id v20 = objc_msgSend(v19, sel_mainOrPrivateContext);

  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = a1;
  v21[3] = v20;
  v21[4] = &v32;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1ACC44FE8;
  *(void *)(v22 + 24) = v21;
  aBlock[4] = sub_1ACB58DC4;
  void aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC525DC;
  aBlock[3] = &block_descriptor_213;
  uint64_t v23 = _Block_copy(aBlock);
  a1;
  id v24 = v20;
  swift_retain();
  swift_release();
  objc_msgSend(v24, sel_performBlockAndWait_, v23);
  _Block_release(v23);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v23)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (qword_1EB768FD8 != -1) {
LABEL_11:
  }
    swift_once();
  uint64_t v25 = __swift_project_value_buffer(v10, (uint64_t)qword_1EB768FB8);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v25, v10);
  unint64_t v26 = sub_1ACE75498();
  os_log_type_t v27 = sub_1ACE76C08();
  if (os_log_type_enabled(v26, v27))
  {
    int64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v28 = 0;
    _os_log_impl(&dword_1AC9D5000, v26, v27, "Renewals started.", v28, 2u);
    MEMORY[0x1AD11B340](v28, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  unint64_t v29 = v32;
  swift_bridgeObjectRetain();
  sub_1ACC3CED0(0, v29, (void (*)(void))sub_1ACC44FDC, (uint64_t)v14);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

id sub_1ACC42C04()
{
  sub_1ACE761B8();
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  objc_msgSend(v2, sel_setResultType_, 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769598);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1ACE84820;
  uint64_t v4 = sub_1ACE761B8();
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v6;
  uint64_t v7 = sub_1ACE761B8();
  *(void *)(v3 + 88) = v5;
  *(void *)(v3 + 64) = v7;
  *(void *)(v3 + 72) = v8;
  uint64_t v9 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setPropertiesToFetch_, v9);

  return v2;
}

uint64_t sub_1ACC42D34()
{
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC42D7C()
{
  return sub_1ACC3A53C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1ACC42D88(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1ACA50D4C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACC42DCC(unint64_t a1)
{
  id v2 = self;
  swift_bridgeObjectRetain_n();
  id v3 = objc_msgSend(v2, sel_predicateForDRMKeyRequired);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
  sub_1ACC42D88((unint64_t *)&qword_1EB76E300, (unint64_t *)&qword_1EB768F50);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1ACE769C8();
  uint64_t v34 = result;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1ACE77508();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
LABEL_22:
    uint64_t v14 = MEMORY[0x1E4FBB1A0];
    id v15 = (void *)sub_1ACE76978();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v2, sel_predicateForEpisodeStoreTrackIds_, v15);

    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
    id v17 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
    objc_msgSend(v17, sel_setResultType_, 2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769598);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1ACE84470;
    uint64_t v19 = sub_1ACE761B8();
    *(void *)(v18 + 56) = v14;
    *(void *)(v18 + 32) = v19;
    *(void *)(v18 + 40) = v20;
    uint64_t v21 = sub_1ACE761B8();
    *(void *)(v18 + 88) = v14;
    *(void *)(v18 + 64) = v21;
    *(void *)(v18 + 72) = v22;
    uint64_t v23 = sub_1ACE761B8();
    *(void *)(v18 + 120) = v14;
    *(void *)(v18 + 96) = v23;
    *(void *)(v18 + 104) = v24;
    uint64_t v25 = (void *)sub_1ACE76558();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_setPropertiesToFetch_, v25);

    id v26 = [v16 NOT];
    id v27 = objc_msgSend(v3, sel_AND_, v26);

    objc_msgSend(v17, sel_setPredicate_, v27);
    swift_bridgeObjectRelease_n();

    return (uint64_t)v17;
  }
  if (v5 >= 1)
  {
    int64_t v28 = v2;
    id v29 = v3;
    uint64_t v6 = 0;
    unint64_t v7 = a1 & 0xC000000000000001;
    unint64_t v8 = a1;
    do
    {
      if (v7) {
        id v9 = (id)MEMORY[0x1AD119490](v6, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * v6 + 32);
      }
      uint64_t v10 = v9;
      *(void *)&v30[0] = sub_1ACE761B8();
      *((void *)&v30[0] + 1) = v11;
      swift_bridgeObjectRetain();
      id v12 = objc_msgSend(v10, sel___swift_objectForKeyedSubscript_, sub_1ACE77A28());
      swift_unknownObjectRelease();
      if (v12)
      {
        sub_1ACE770C8();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v30, 0, sizeof(v30));
      }
      sub_1ACA50E14((uint64_t)v30, (uint64_t)v31, qword_1EB7725E0);
      if (v31[3])
      {
        char v13 = swift_dynamicCast();
        if ((v13 & 1) == 0) {
          uint64_t v32 = 0;
        }
        char v33 = v13 ^ 1;

        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1ACA50E78((uint64_t)v31, qword_1EB7725E0);
        uint64_t v32 = 0;
        char v33 = 1;
      }
      a1 = v8;
      if ((v33 & 1) == 0)
      {
        sub_1ACD2FDB0(v31, objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithLongLong_, v32));
      }
      ++v6;
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
    id v2 = v28;
    id v3 = v29;
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACC43270()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACC432B0()
{
  return sub_1ACC3AEB0(*(void (**)(void))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1ACC432BC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACC432F4()
{
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F3EB0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();

  unint64_t v4 = v0 + v1[14] + v2;
  uint64_t v5 = sub_1ACE74F28();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACC43430(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F3EB0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1ACC3BC5C(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t *)(v1 + v4), *(void **)(v1 + v5), *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1ACC434F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE75E48();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB7681F8 != -1) {
    swift_once();
  }
  v20[0] = qword_1EB7681F0;
  id v16 = (void *)swift_allocObject();
  void v16[2] = a1;
  void v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  aBlock[4] = sub_1ACC441BC;
  void aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_110;
  id v17 = _Block_copy(aBlock);
  id v18 = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1ACE75E08();
  v20[1] = MEMORY[0x1E4FBC860];
  sub_1ACC453E8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_1ACC43800()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F3EB0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = v0 + *(int *)(v1 + 48) + v3;
  uint64_t v6 = sub_1ACE74F28();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC43934(void *a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F3EB0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void **)(v1 + v5);
  uint64_t v8 = (void *)(v1 + v4);
  uint64_t v9 = (uint64_t *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = *(void *)(v1 + v6);
  return sub_1ACC43D18(a1, v8, v7, v12, v10, v11);
}

uint64_t sub_1ACC439F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v12 = sub_1ACE75DC8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1ACE75E48();
  uint64_t v16 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  id v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB7681F8 != -1) {
    swift_once();
  }
  uint64_t v27 = qword_1EB7681F0;
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = a1;
  uint64_t v19[3] = a2;
  _OWORD v19[4] = a3;
  v19[5] = a4;
  uint64_t v20 = v26;
  v19[6] = v25;
  v19[7] = v20;
  v19[8] = a7;
  aBlock[4] = sub_1ACC44A90;
  void aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_129;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = a1;
  swift_unknownObjectRetain();
  swift_retain();
  sub_1ACE75E08();
  uint64_t v29 = MEMORY[0x1E4FBC860];
  sub_1ACC453E8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v18, v15, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v28);
  return swift_release();
}

uint64_t sub_1ACC43D18(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F3EB0);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v45 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (uint64_t *)((char *)&v45 - v18);
  MEMORY[0x1F4188790](v17);
  id v22 = (uint64_t *)((char *)&v45 - v21);
  if (a1)
  {
    int64_t v52 = v20;
    uint64_t v53 = a3;
    uint64_t v54 = a4;
    uint64_t v55 = a5;
    uint64_t v56 = a6;
    id v23 = a1;
    if (qword_1EB768C20 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1ACE754C8();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EB768C00);
    uint64_t v25 = *(int *)(v12 + 48);
    uint64_t v26 = (char *)v22 + v25;
    uint64_t v50 = v12;
    uint64_t v27 = (char *)a2 + v25;
    *id v22 = *a2;
    uint64_t v28 = sub_1ACE74F28();
    uint64_t v51 = *(void *)(v28 - 8);
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
    v49(v26, v27, v28);
    sub_1ACA3AAD4((uint64_t)v22, (uint64_t)v19, (uint64_t *)&unk_1E99F3EB0);
    sub_1ACA50E14((uint64_t)v22, (uint64_t)v16, (uint64_t *)&unk_1E99F3EB0);
    id v29 = a1;
    id v30 = a1;
    uint64_t v31 = sub_1ACE75498();
    os_log_type_t v32 = sub_1ACE76BE8();
    int v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v34 = swift_slowAlloc();
      int v47 = v33;
      uint64_t v35 = v34;
      uint64_t v36 = swift_slowAlloc();
      uint64_t v48 = v36;
      *(_DWORD *)uint64_t v35 = 141558531;
      uint64_t v57 = 1752392040;
      uint64_t v58 = v36;
      uint64_t v46 = v16;
      sub_1ACE76FF8();
      *(_WORD *)(v35 + 12) = 2049;
      uint64_t v37 = *(int *)(v50 + 48);
      uint64_t v38 = v52;
      uint64_t v39 = (char *)v52 + v37;
      uint64_t v40 = *v19;
      uint64_t *v52 = *v19;
      v49((char *)v38 + v37, (char *)v19 + v37, v28);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v28);
      sub_1ACA50E78((uint64_t)v19, (uint64_t *)&unk_1E99F3EB0);
      uint64_t v57 = v40;
      sub_1ACE76FF8();
      sub_1ACA50E78((uint64_t)v46, (uint64_t *)&unk_1E99F3EB0);
      *(_WORD *)(v35 + 22) = 2082;
      swift_getErrorValue();
      uint64_t v41 = sub_1ACE77A98();
      uint64_t v57 = sub_1ACA3189C(v41, v42, &v58);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AC9D5000, v31, (os_log_type_t)v47, "Unable to load key for adamID: %{private,mask.hash}lld, with error: %{public}s.", (uint8_t *)v35, 0x20u);
      uint64_t v43 = v48;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v43, -1, -1);
      MEMORY[0x1AD11B340](v35, -1, -1);
    }
    else
    {
      sub_1ACA50E78((uint64_t)v19, (uint64_t *)&unk_1E99F3EB0);

      sub_1ACA50E78((uint64_t)v16, (uint64_t *)&unk_1E99F3EB0);
    }
    a5 = v55;
    a6 = v56;
    a3 = v53;
    a4 = v54;
  }
  return sub_1ACC434F0(a3, a4, a5, a6);
}

uint64_t sub_1ACC44174()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC441BC()
{
  return sub_1ACC41874(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1ACC441CC()
{
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F3EB0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();

  unint64_t v4 = v0 + v1[14] + v2;
  uint64_t v5 = sub_1ACE74F28();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1ACC44308(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F3EB0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1ACC3C2A4(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t *)(v1 + v4), *(void **)(v1 + v5), *(void *)(v1 + v6), *(void *)(v1 + v6 + 8), *(void *)(v1 + v6 + 16), *(void *)(v1 + v6 + 24), *(void **)(v1 + ((v6 + 39) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1ACC443D8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F3EB0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = v0 + *(int *)(v1 + 48) + v3;
  uint64_t v6 = sub_1ACE74F28();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC4450C(void *a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F3EB0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1ACC445D0(a1, (void *)(v1 + v4), *(void **)(v1 + v5), *(void *)(v1 + v6), *(void *)(v1 + v6 + 8), *(void *)(v1 + v6 + 16), *(void *)(v1 + v6 + 24), *(void *)(v1 + ((v6 + 39) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v6 + 39) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1ACC445D0(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v65 = a3;
  uint64_t v66 = a4;
  uint64_t v15 = a9;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F3EB0);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v64 = (uint64_t)v53 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  id v22 = (void *)((char *)v53 - v21);
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v26 = (void *)((char *)v53 - v25);
  if (a1)
  {
    uint64_t v58 = v24;
    uint64_t v59 = a9;
    uint64_t v27 = v23;
    uint64_t v60 = a5;
    uint64_t v61 = a6;
    uint64_t v62 = a7;
    uint64_t v63 = a8;
    id v28 = a1;
    if (qword_1EB768C20 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1ACE754C8();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EB768C00);
    os_log_t v57 = (os_log_t)v27;
    uint64_t v30 = *(int *)(v27 + 48);
    uint64_t v31 = (char *)v26 + v30;
    os_log_type_t v32 = (char *)a2 + v30;
    *uint64_t v26 = *a2;
    uint64_t v33 = sub_1ACE74F28();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    v56(v31, v32, v33);
    sub_1ACA3AAD4((uint64_t)v26, (uint64_t)v22, (uint64_t *)&unk_1E99F3EB0);
    uint64_t v35 = v64;
    sub_1ACA50E14((uint64_t)v26, v64, (uint64_t *)&unk_1E99F3EB0);
    id v36 = a1;
    id v37 = a1;
    uint64_t v38 = sub_1ACE75498();
    os_log_type_t v39 = sub_1ACE76BE8();
    int v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      uint64_t v55 = v42;
      *(_DWORD *)uint64_t v41 = 141558531;
      uint64_t v67 = 1752392040;
      uint64_t v68 = v42;
      sub_1ACE76FF8();
      *(_WORD *)(v41 + 12) = 2049;
      int v54 = v40;
      v53[1] = v41 + 14;
      uint64_t v43 = v58;
      uint64_t isa_low = SLODWORD(v57[6].isa);
      uint64_t v45 = (char *)v58 + isa_low;
      os_log_t v57 = v38;
      uint64_t v46 = v35;
      uint64_t v47 = *v22;
      *uint64_t v58 = *v22;
      v56((char *)v43 + isa_low, (char *)v22 + isa_low, v33);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v45, v33);
      sub_1ACA50E78((uint64_t)v22, (uint64_t *)&unk_1E99F3EB0);
      uint64_t v67 = v47;
      sub_1ACE76FF8();
      sub_1ACA50E78(v46, (uint64_t *)&unk_1E99F3EB0);
      *(_WORD *)(v41 + 22) = 2082;
      swift_getErrorValue();
      uint64_t v48 = sub_1ACE77A98();
      uint64_t v67 = sub_1ACA3189C(v48, v49, &v68);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();

      os_log_t v50 = v57;
      _os_log_impl(&dword_1AC9D5000, v57, (os_log_type_t)v54, "Unable to load key for adamID: %{private,mask.hash}lld, with error: %{public}s.", (uint8_t *)v41, 0x20u);
      uint64_t v51 = v55;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v51, -1, -1);
      MEMORY[0x1AD11B340](v41, -1, -1);
    }
    else
    {
      sub_1ACA50E78((uint64_t)v22, (uint64_t *)&unk_1E99F3EB0);

      sub_1ACA50E78(v35, (uint64_t *)&unk_1E99F3EB0);
    }
    a7 = v62;
    a8 = v63;
    a5 = v60;
    a6 = v61;
    uint64_t v15 = v59;
  }
  return sub_1ACC439F0(v65, v66, a5, a6, a7, a8, v15);
}

uint64_t sub_1ACC44A48()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC44A90()
{
  return sub_1ACC3BB90(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_1ACC44AA4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC44AEC()
{
  return sub_1ACC39D20(v0[3], v0[4], v0[5]);
}

uint64_t sub_1ACC44B18()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void *sub_1ACC44B78@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  void *(*v4)(uint64_t *__return_ptr, uint64_t *);
  char v5;
  void (*v6)(uint64_t *__return_ptr, uint64_t *);
  void *result;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  unint64_t v4 = *(void *(**)(uint64_t *__return_ptr, uint64_t *))(v2 + 16);
  unint64_t v5 = *((unsigned char *)a1 + 8);
  unint64_t v6 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(v2 + 88);
  uint64_t v9 = *a1;
  uint64_t v10 = v5;
  v6(&v8, &v9);
  uint64_t result = v4(&v11, &v8);
  *a2 = v11;
  return result;
}

uint64_t sub_1ACC44BEC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACC44C24()
{
  return swift_deallocObject();
}

uint64_t sub_1ACC44C64()
{
  return sub_1ACC37B08(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1ACC44C70()
{
  return swift_deallocObject();
}

uint64_t sub_1ACC44C80()
{
  return objectdestroy_152Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1ACC44C9C(uint64_t a1)
{
  return sub_1ACC38114(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1ACC44CAC()
{
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1ACC44D04()
{
  return sub_1ACC44E10((uint64_t (*)(void, void, void, void, void))sub_1ACC3843C);
}

uint64_t sub_1ACC44D1C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACC44D64@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACC38B34(a1);
}

uint64_t sub_1ACC44D70()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACC44DA8(uint64_t a1, uint64_t a2)
{
  sub_1ACC38E58(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1ACC44DB0()
{
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC44DF8()
{
  return sub_1ACC44E10((uint64_t (*)(void, void, void, void, void))sub_1ACC38FA4);
}

uint64_t sub_1ACC44E10(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1ACC44E28()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1ACC44E60()
{
  return sub_1ACD68218(*(void *)(v0 + 16));
}

void sub_1ACC44E6C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = (id)sub_1ACE76558();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_1ACC44ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_1ACA50D9C(a5, a6, a7);
  }
}

void *sub_1ACC44F40(void *a1)
{
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[5];
  unint64_t v4 = a1[6];
  swift_bridgeObjectRelease();
  sub_1ACA50D9C(v2, v3, v4);
  return a1;
}

uint64_t sub_1ACC44FA4()
{
  return sub_1ACC3937C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1ACC44FB4(uint64_t a1)
{
  return sub_1ACC39414(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1ACC44FC0()
{
  return objectdestroy_152Tm(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1ACC44FDC(uint64_t a1)
{
  return sub_1ACC3966C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1ACC44FE8()
{
  return sub_1ACC3C9AC(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1ACC44FF4()
{
  return swift_deallocObject();
}

id sub_1ACC45004()
{
  uint64_t v0 = sub_1ACE750A8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE761B8();
  sub_1ACE75098();
  unint64_t v4 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  unint64_t v5 = (void *)sub_1ACE75008();
  id v6 = objc_msgSend(self, sel_predicateForDateKey_isLessThanDate_, v4, v5);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1ACE84820;
  uint64_t v8 = sub_1ACE761B8();
  uint64_t v10 = v9;
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v12 = sub_1ACADC3A8();
  *(void *)(v7 + 64) = v12;
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v10;
  uint64_t v13 = sub_1ACE761B8();
  *(void *)(v7 + 96) = v11;
  *(void *)(v7 + 104) = v12;
  *(void *)(v7 + 72) = v13;
  *(void *)(v7 + 80) = v14;
  uint64_t v15 = (void *)sub_1ACE76B88();
  id v16 = objc_msgSend(v6, sel_AND_, v15);

  return v16;
}

uint64_t sub_1ACC4521C(void *a1)
{
  id v2 = sub_1ACC45004();
  uint64_t v3 = @"MTOfflineKeyData";
  id v4 = v2;
  unint64_t v5 = (void *)sub_1ACE76558();
  id v6 = objc_msgSend(a1, sel_objectsInEntity_predicate_sortDescriptors_, v3, v4, v5);

  if (!v6)
  {

LABEL_5:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
  unint64_t v7 = sub_1ACE76578();

  uint64_t v8 = sub_1ACC2BD38(v7);
  swift_bridgeObjectRelease();

  if (!v8) {
    goto LABEL_5;
  }
  return v8;
}

uint64_t sub_1ACC45320()
{
  return objectdestroy_152Tm(MEMORY[0x1E4FBC898]);
}

uint64_t objectdestroy_152Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));
  if (*(void *)(v1 + 32)) {
    swift_release();
  }
  return swift_deallocObject();
}

void sub_1ACC453A8(uint64_t a1)
{
  sub_1ACC398E8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

void sub_1ACC453BC()
{
  sub_1ACC37730(*(void (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1ACC453E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACC454E4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  if (!*(void *)(*a1 + 16)) {
    goto LABEL_18;
  }
  unint64_t v4 = sub_1ACA66344(3u);
  if ((v5 & 1) == 0
    || (id v6 = (unint64_t *)(*(void *)(v3 + 56) + 16 * v4), (v7 = v6[1]) == 0)
    || ((unint64_t v8 = *v6, swift_bridgeObjectRetain(), v9 = sub_1ACD1C588(v8, v7), swift_bridgeObjectRelease(), v9)
      ? (BOOL v10 = v9 == 1000000000000)
      : (BOOL v10 = 1),
        v10))
  {
    if (*(void *)(v3 + 16))
    {
      unint64_t v11 = sub_1ACA66344(8u);
      if (v12)
      {
        uint64_t v13 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v11);
        uint64_t v18 = v13[1];
        if (v18)
        {
          if (*(void *)(v3 + 16))
          {
            uint64_t v9 = *v13;
            swift_bridgeObjectRetain();
            unint64_t v14 = sub_1ACA66344(5u);
            if (v15)
            {
              id v16 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v14);
              uint64_t v19 = *v16;
              uint64_t v20 = v16[1];
              swift_bridgeObjectRetain();
              uint64_t result = swift_bridgeObjectRelease();
              if (v20)
              {
                char v21 = 1;
                goto LABEL_17;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
        }
      }
    }
LABEL_18:
    uint64_t result = swift_bridgeObjectRelease();
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    char v21 = -1;
    goto LABEL_19;
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  char v21 = 0;
LABEL_17:
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v18;
  *(void *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v20;
LABEL_19:
  *(unsigned char *)(a2 + 32) = v21;
  return result;
}

PodcastsFoundation::URLTrackIdentifier __swiftcall UniversalEpisodeIdentifier.urlTrackIdentifier()()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  if (*((unsigned char *)v1 + 32) == 1)
  {
    uint64_t v5 = v1[2];
    uint64_t v4 = v1[3];
    uint64_t v6 = v1[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3EE0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1ACE84820;
    *(unsigned char *)(inited + 32) = 8;
    *(void *)(inited + 40) = v3;
    *(void *)(inited + 48) = v6;
    *(unsigned char *)(inited + 56) = 5;
    *(void *)(inited + 64) = v5;
    *(void *)(inited + 72) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3EE0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
    *(unsigned char *)(inited + 32) = 3;
    sub_1ACA55E4C();
    *(void *)(inited + 40) = sub_1ACE770B8();
    *(void *)(inited + 48) = v8;
  }
  uint64_t v9 = (void *)sub_1ACA3702C(inited);
  *(void *)uint64_t v2 = v9;
  *(unsigned char *)(v2 + 8) = 4;
  result.arguments._unint64_t rawValue = v9;
  result.command = v10;
  return result;
}

uint64_t sub_1ACC45754(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3F28);
  uint64_t v17 = *(void *)(v2 - 8);
  uint64_t v18 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3F30);
  uint64_t v16 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3F38);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC4676C();
  sub_1ACE77C78();
  sub_1ACBE79D4(v19, (uint64_t)&v21);
  uint64_t v12 = v21;
  if (v22)
  {
    LOBYTE(v23) = 1;
    sub_1ACC467C0();
    sub_1ACE776D8();
    LOBYTE(v23) = 0;
    uint64_t v13 = v18;
    uint64_t v14 = v20;
    sub_1ACE77748();
    if (!v14)
    {
      LOBYTE(v23) = 1;
      sub_1ACE77748();
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v13);
  }
  else
  {
    LOBYTE(v23) = 0;
    sub_1ACC46814();
    sub_1ACE776D8();
    uint64_t v23 = v12;
    sub_1ACA80994();
    sub_1ACE77788();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1ACC45A90(uint64_t a1)
{
  unint64_t v2 = sub_1ACC46814();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC45ACC(uint64_t a1)
{
  unint64_t v2 = sub_1ACC46814();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACC45B08()
{
  if (*v0) {
    return 1684632935;
  }
  else {
    return 0x44496D616461;
  }
}

uint64_t sub_1ACC45B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACC46868(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACC45B60(uint64_t a1)
{
  unint64_t v2 = sub_1ACC4676C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC45B9C(uint64_t a1)
{
  unint64_t v2 = sub_1ACC4676C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACC45BD8()
{
  if (*v0) {
    return 12639;
  }
  else {
    return 12383;
  }
}

uint64_t sub_1ACC45BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACC46944(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACC45C1C(uint64_t a1)
{
  unint64_t v2 = sub_1ACC467C0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC45C58(uint64_t a1)
{
  unint64_t v2 = sub_1ACC467C0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACC45C94(long long *a1, long long *a2)
{
  sub_1ACBE79D4(a1, (uint64_t)v4);
  sub_1ACBE79D4(a2, (uint64_t)v5);
  return sub_1ACC46194(v4, v5) & 1;
}

uint64_t sub_1ACC45CE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1ACC46A08(a1, (uint64_t *)v5);
  if (!v2) {
    return sub_1ACBE79D4(v5, a2);
  }
  return result;
}

uint64_t sub_1ACC45D28(void *a1)
{
  sub_1ACBE79D4(v1, (uint64_t)v4);
  return sub_1ACC45754(a1);
}

uint64_t sub_1ACC45D7C()
{
  return 25705;
}

uint64_t sub_1ACC45D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1ACE77848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ACC45E08(uint64_t a1)
{
  unint64_t v2 = sub_1ACC46340();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC45E44(uint64_t a1)
{
  unint64_t v2 = sub_1ACC46340();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t UniversalEpisodeIdentifier.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3EE8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *v1;
  uint64_t v8 = *((void *)v1 + 2);
  uint64_t v7 = *((void *)v1 + 3);
  int v11 = *((unsigned __int8 *)v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC46340();
  sub_1ACE77C78();
  long long v13 = v12;
  uint64_t v14 = v8;
  uint64_t v15 = v7;
  char v16 = v11;
  sub_1ACC46394();
  sub_1ACE77788();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t UniversalEpisodeIdentifier.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3F00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC46340();
  sub_1ACE77C48();
  if (!v2)
  {
    sub_1ACC463E8();
    sub_1ACE77698();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v9 = v13;
    long long v10 = v12[1];
    *(_OWORD *)a2 = v12[0];
    *(_OWORD *)(a2 + 16) = v10;
    *(unsigned char *)(a2 + 32) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1ACC46164@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return UniversalEpisodeIdentifier.init(from:)(a1, a2);
}

uint64_t sub_1ACC4617C(void *a1)
{
  return UniversalEpisodeIdentifier.encode(to:)(a1);
}

uint64_t sub_1ACC46194(long long *a1, long long *a2)
{
  sub_1ACBE79D4(a1, (uint64_t)v15);
  uint64_t v3 = v15[0];
  if ((v16 & 1) == 0)
  {
    sub_1ACBE79D4(a2, (uint64_t)v13);
    if ((v14 & 1) == 0)
    {
      char v11 = v3 == v13[0];
      return v11 & 1;
    }
    goto LABEL_12;
  }
  uint64_t v5 = v15[1];
  uint64_t v4 = v15[2];
  uint64_t v6 = v15[3];
  sub_1ACBE79D4(a2, (uint64_t)v13);
  if (v14 != 1)
  {
LABEL_12:
    char v11 = 0;
    return v11 & 1;
  }
  uint64_t v7 = v13[2];
  uint64_t v8 = v13[3];
  BOOL v9 = v3 == v13[0] && v5 == v13[1];
  if (v9 || (char v10 = sub_1ACE77848(), v11 = 0, (v10 & 1) != 0))
  {
    if (v4 == v7 && v6 == v8) {
      char v11 = 1;
    }
    else {
      char v11 = sub_1ACE77848();
    }
  }
  return v11 & 1;
}

uint64_t _s18PodcastsFoundation26UniversalEpisodeIdentifierV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 32);
  if (*((unsigned char *)a1 + 32) == 1)
  {
    if ((a2[4] & 1) == 0) {
      return 0;
    }
    uint64_t v6 = a1[2];
    uint64_t v7 = a1[3];
    uint64_t v8 = a2[2];
    uint64_t v9 = a2[3];
    BOOL v10 = v3 == v4 && a1[1] == a2[1];
    if (!v10 && (sub_1ACE77848() & 1) == 0) {
      return 0;
    }
    BOOL v11 = v6 == v8 && v7 == v9;
    if (!v11 && (sub_1ACE77848() & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (v3 != v4) {
      char v5 = 1;
    }
    if (v5) {
      return 0;
    }
  }
  return 1;
}

unint64_t sub_1ACC46340()
{
  unint64_t result = qword_1E99F3EF0;
  if (!qword_1E99F3EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3EF0);
  }
  return result;
}

unint64_t sub_1ACC46394()
{
  unint64_t result = qword_1E99F3EF8;
  if (!qword_1E99F3EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3EF8);
  }
  return result;
}

unint64_t sub_1ACC463E8()
{
  unint64_t result = qword_1E99F3F08;
  if (!qword_1E99F3F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3F08);
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalEpisodeIdentifier()
{
  return &type metadata for UniversalEpisodeIdentifier;
}

uint64_t _s18PodcastsFoundation26UniversalEpisodeIdentifierV10IdentifierOwxx_0(uint64_t a1)
{
  return sub_1ACA633B0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t _s18PodcastsFoundation26UniversalEpisodeIdentifierV10IdentifierOwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1ACA626E4(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t _s18PodcastsFoundation26UniversalEpisodeIdentifierV10IdentifierOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1ACA626E4(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_1ACA633B0(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t _s18PodcastsFoundation26UniversalEpisodeIdentifierV10IdentifierOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = v3;
  sub_1ACA633B0(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for RSSFeedUpdater.Result(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RSSFeedUpdater.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1ACC4662C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1ACC46634(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for UniversalEpisodeIdentifier.Identifier()
{
  return &type metadata for UniversalEpisodeIdentifier.Identifier;
}

ValueMetadata *type metadata accessor for UniversalEpisodeIdentifier.CodingKeys()
{
  return &type metadata for UniversalEpisodeIdentifier.CodingKeys;
}

unint64_t sub_1ACC46668()
{
  unint64_t result = qword_1E99F3F10;
  if (!qword_1E99F3F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3F10);
  }
  return result;
}

unint64_t sub_1ACC466C0()
{
  unint64_t result = qword_1E99F3F18;
  if (!qword_1E99F3F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3F18);
  }
  return result;
}

unint64_t sub_1ACC46718()
{
  unint64_t result = qword_1E99F3F20;
  if (!qword_1E99F3F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3F20);
  }
  return result;
}

unint64_t sub_1ACC4676C()
{
  unint64_t result = qword_1E99F3F40;
  if (!qword_1E99F3F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3F40);
  }
  return result;
}

unint64_t sub_1ACC467C0()
{
  unint64_t result = qword_1E99F3F48;
  if (!qword_1E99F3F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3F48);
  }
  return result;
}

unint64_t sub_1ACC46814()
{
  unint64_t result = qword_1E99F3F50;
  if (!qword_1E99F3F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3F50);
  }
  return result;
}

uint64_t sub_1ACC46868(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496D616461 && a2 == 0xE600000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632935 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACC46944(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACC46A08@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v36 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3F58);
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3F60);
  uint64_t v37 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3F68);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  int v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1ACC4676C();
  uint64_t v14 = v41;
  sub_1ACE77C48();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  }
  uint64_t v41 = v6;
  uint64_t v15 = v39;
  uint64_t v16 = v10;
  uint64_t v17 = sub_1ACE776B8();
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v21 = sub_1ACE77328();
    swift_allocError();
    uint64_t v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0EC8);
    *uint64_t v23 = &type metadata for UniversalEpisodeIdentifier.Identifier;
    sub_1ACE775E8();
    sub_1ACE77308();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x1E4FBBA70], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v9);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  }
  int v18 = *(unsigned __int8 *)(v17 + 32);
  if (v18)
  {
    uint64_t v41 = v17;
    char v47 = 1;
    sub_1ACC467C0();
    sub_1ACE775D8();
    int v43 = v18;
    char v46 = 0;
    uint64_t v19 = v15;
    uint64_t v20 = v5;
    uint64_t v26 = sub_1ACE77658();
    uint64_t v28 = v27;
    uint64_t v37 = v9;
    char v45 = 1;
    uint64_t v29 = sub_1ACE77658();
    uint64_t v30 = v20;
    uint64_t v32 = v31;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v30, v19);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v37);
    uint64_t v33 = v32;
  }
  else
  {
    int v43 = *(unsigned __int8 *)(v17 + 32);
    char v44 = 0;
    sub_1ACC46814();
    sub_1ACE775D8();
    sub_1ACA80CD4();
    uint64_t v25 = v41;
    sub_1ACE77698();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v25);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v9);
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v33 = 0;
    uint64_t v26 = v42;
  }
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  uint64_t v34 = v36;
  *id v36 = v26;
  v34[1] = v28;
  v34[2] = v29;
  v34[3] = v33;
  *((unsigned char *)v34 + 32) = v43;
  return result;
}

ValueMetadata *type metadata accessor for UniversalEpisodeIdentifier.Identifier.CodingKeys()
{
  return &type metadata for UniversalEpisodeIdentifier.Identifier.CodingKeys;
}

unsigned char *_s18PodcastsFoundation26UniversalEpisodeIdentifierV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACC4704CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalEpisodeIdentifier.Identifier.AdamIDCodingKeys()
{
  return &type metadata for UniversalEpisodeIdentifier.Identifier.AdamIDCodingKeys;
}

unsigned char *_s18PodcastsFoundation26UniversalEpisodeIdentifierV10IdentifierO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC47150);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalEpisodeIdentifier.Identifier.GuidCodingKeys()
{
  return &type metadata for UniversalEpisodeIdentifier.Identifier.GuidCodingKeys;
}

unint64_t sub_1ACC4718C()
{
  unint64_t result = qword_1E99F3F70;
  if (!qword_1E99F3F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3F70);
  }
  return result;
}

unint64_t sub_1ACC471E4()
{
  unint64_t result = qword_1E99F3F78;
  if (!qword_1E99F3F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3F78);
  }
  return result;
}

unint64_t sub_1ACC4723C()
{
  unint64_t result = qword_1E99F3F80;
  if (!qword_1E99F3F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3F80);
  }
  return result;
}

unint64_t sub_1ACC47294()
{
  unint64_t result = qword_1E99F3F88;
  if (!qword_1E99F3F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3F88);
  }
  return result;
}

unint64_t sub_1ACC472EC()
{
  unint64_t result = qword_1E99F3F90;
  if (!qword_1E99F3F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3F90);
  }
  return result;
}

unint64_t sub_1ACC47344()
{
  unint64_t result = qword_1E99F3F98;
  if (!qword_1E99F3F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3F98);
  }
  return result;
}

unint64_t sub_1ACC4739C()
{
  unint64_t result = qword_1E99F3FA0;
  if (!qword_1E99F3FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3FA0);
  }
  return result;
}

unint64_t sub_1ACC473F4()
{
  unint64_t result = qword_1E99F3FA8;
  if (!qword_1E99F3FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3FA8);
  }
  return result;
}

unint64_t sub_1ACC4744C()
{
  unint64_t result = qword_1E99F3FB0;
  if (!qword_1E99F3FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3FB0);
  }
  return result;
}

id FairPlayAsset.__allocating_init(adamID:avAsset:)(uint64_t a1, void *a2)
{
  int v3 = v2;
  unsigned int v6 = (char *)objc_allocWithZone(v3);
  *(void *)&v6[OBJC_IVAR___PFFairPlayAsset_adamID] = a1;
  *(void *)&v6[OBJC_IVAR___PFFairPlayAsset_avAsset] = a2;
  sub_1ACA90040();
  id v7 = a2;
  char v8 = v6;
  *(void *)&v8[OBJC_IVAR___PFFairPlayAsset_keyStore] = sub_1ACC47E5C(v7);

  v11.receiver = v8;
  v11.super_class = v3;
  id v9 = objc_msgSendSuper2(&v11, sel_init);

  return v9;
}

Swift::Bool __swiftcall FairPlayAsset.requiresRenewal()()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1ACE754C8();
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB76D598);
  char v8 = v0;
  id v9 = sub_1ACE75498();
  os_log_type_t v10 = sub_1ACE76BD8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v39 = v7;
    uint64_t v12 = v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v37 = v5;
    uint64_t v14 = v13;
    aBlock[0] = v13;
    *(_DWORD *)uint64_t v12 = 136315651;
    uint64_t v41 = sub_1ACA3189C(0xD000000000000023, 0x80000001ACECD7A0, aBlock);
    uint64_t v38 = v3;
    sub_1ACE76FF8();
    *(_WORD *)(v12 + 12) = 2160;
    uint64_t v41 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v12 + 22) = 2081;
    uint64_t v15 = FairPlayAsset.description.getter();
    uint64_t v41 = sub_1ACA3189C(v15, v16, aBlock);
    uint64_t v3 = v38;
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v9, v10, "%s Determining renewal status for: %{private,mask.hash}s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy();
    uint64_t v17 = v14;
    uint64_t v5 = v37;
    MEMORY[0x1AD11B340](v17, -1, -1);
    MEMORY[0x1AD11B340](v12, -1, -1);
  }
  else
  {
  }
  int v18 = *(void **)&v8[OBJC_IVAR___PFFairPlayAsset_keyStore];
  if (!v18) {
    goto LABEL_12;
  }
  uint64_t v19 = *(void **)&v8[OBJC_IVAR___PFFairPlayAsset_avAsset];
  swift_unknownObjectRetain();
  id v20 = objc_msgSend(v19, sel_URL);
  sub_1ACE74E98();

  LOBYTE(v20) = sub_1ACE74D98();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v20 & 1) == 0)
  {
    swift_unknownObjectRelease();
LABEL_12:
    uint64_t v32 = sub_1ACE75498();
    os_log_type_t v33 = sub_1ACE76BE8();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      aBlock[0] = v35;
      *(_DWORD *)uint64_t v34 = 136315138;
      uint64_t v41 = sub_1ACA3189C(0xD000000000000023, 0x80000001ACECD7A0, aBlock);
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v32, v33, "%s Unsupported use-case, or invalid data for renewal check.", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v35, -1, -1);
      MEMORY[0x1AD11B340](v34, -1, -1);
    }

    return 0;
  }
  unsigned __int8 v43 = 1;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = &v43;
  *(void *)(v21 + 24) = ObjectType;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1ACC48A1C;
  *(void *)(v22 + 24) = v21;
  aBlock[4] = (uint64_t)sub_1ACC48A34;
  void aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1ACC48764;
  aBlock[3] = (uint64_t)&block_descriptor_45;
  uint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v18, sel_enumerateKeyEntriesUsingBlock_, v23);
  _Block_release(v23);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  Swift::Bool result = swift_release();
  if ((v23 & 1) == 0)
  {
    uint64_t v25 = v8;
    uint64_t v26 = sub_1ACE75498();
    os_log_type_t v27 = sub_1ACE76BD8();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      aBlock[0] = v29;
      *(_DWORD *)uint64_t v28 = 136315907;
      uint64_t v41 = sub_1ACA3189C(0xD000000000000023, 0x80000001ACECD7A0, aBlock);
      sub_1ACE76FF8();
      *(_WORD *)(v28 + 12) = 1026;
      swift_beginAccess();
      LODWORD(v40) = v43;
      sub_1ACE76FF8();
      *(_WORD *)(v28 + 18) = 2160;
      uint64_t v40 = 1752392040;
      sub_1ACE76FF8();
      *(_WORD *)(v28 + 28) = 2081;
      uint64_t v30 = FairPlayAsset.description.getter();
      uint64_t v40 = sub_1ACA3189C(v30, v31, aBlock);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v26, v27, "%s Renewal required (%{BOOL,public}d) for: %{private,mask.hash}s.", (uint8_t *)v28, 0x26u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v29, -1, -1);
      MEMORY[0x1AD11B340](v28, -1, -1);
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
    swift_beginAccess();
    Swift::Bool v36 = v43;
    swift_release();
    return v36;
  }
  __break(1u);
  return result;
}

uint64_t FairPlayAsset.description.getter()
{
  sub_1ACE77268();
  swift_bridgeObjectRelease();
  sub_1ACE777C8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___PFFairPlayAsset_avAsset), sel_description);
  sub_1ACE761B8();

  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  return 0x203A44496D616441;
}

id FairPlayAsset.init(adamID:avAsset:)(uint64_t a1, void *a2)
{
  id v3 = sub_1ACC4895C(a1, a2);

  return v3;
}

id sub_1ACC47E5C(void *a1)
{
  uint64_t v2 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(a1, sel_URL);
  sub_1ACE74E98();

  LOBYTE(v6) = sub_1ACE74D98();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v3 + 8);
  v7(v5, v2);
  if (v6)
  {
    id v8 = objc_msgSend(a1, sel_URL);
    sub_1ACE74E98();

    sub_1ACE74EB8();
    v7(v5, v2);
    id v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    os_log_type_t v10 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v9, sel_initWithPath_, v10);
  }
  else
  {

    return 0;
  }
  return v11;
}

uint64_t FairPlayAsset.isOfflineAsset.getter()
{
  uint64_t v1 = sub_1ACE74F28();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___PFFairPlayAsset_avAsset), sel_URL);
  sub_1ACE74E98();

  LOBYTE(v5) = sub_1ACE74D98();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5 & 1;
}

uint64_t sub_1ACC48254(void *a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE750A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v36 - v13;
  id v15 = objc_msgSend(a1, sel_renewalDate);
  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    return sub_1ACA50E78((uint64_t)v7, (uint64_t *)&unk_1EB773140);
  }
  unint64_t v16 = v15;
  sub_1ACE75078();

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v17(v7, v12, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_1ACA50E78((uint64_t)v7, (uint64_t *)&unk_1EB773140);
  }
  v17(v14, v7, v8);
  sub_1ACE75088();
  char v18 = sub_1ACE75018();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v12, v8);
  if ((v18 & 1) == 0) {
    return ((uint64_t (*)(char *, uint64_t))v19)(v14, v8);
  }
  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1ACE754C8();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EB76D598);
  id v21 = a1;
  uint64_t v22 = sub_1ACE75498();
  os_log_type_t v23 = sub_1ACE76BD8();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    int v41 = v24;
    uint64_t v26 = v25;
    uint64_t v40 = swift_slowAlloc();
    uint64_t v43 = v40;
    *(_DWORD *)uint64_t v26 = 136315651;
    uint64_t v42 = sub_1ACA3189C(0xD000000000000023, 0x80000001ACECD7A0, &v43);
    uint64_t v38 = &v43;
    sub_1ACE76FF8();
    *(_WORD *)(v26 + 12) = 2160;
    uint64_t v42 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v26 + 22) = 2081;
    id v27 = objc_msgSend(v21, sel_dictionaryRepresentation, v26 + 24);
    os_log_t v37 = v22;
    uint64_t v28 = a3;
    id v29 = v27;
    sub_1ACE75FF8();
    uint64_t v39 = (uint64_t (*)(char *, uint64_t))v19;

    a3 = v28;
    uint64_t v30 = sub_1ACE76008();
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_1ACA3189C(v30, v32, &v43);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    os_log_t v33 = v37;
    _os_log_impl(&dword_1AC9D5000, v37, (os_log_type_t)v41, "%s Key renewal not required %{private,mask.hash}s", (uint8_t *)v26, 0x20u);
    uint64_t v34 = v40;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v34, -1, -1);
    MEMORY[0x1AD11B340](v26, -1, -1);

    uint64_t result = v39(v14, v8);
  }
  else
  {

    uint64_t result = ((uint64_t (*)(char *, uint64_t))v19)(v14, v8);
  }
  *a3 = 0;
  return result;
}

uint64_t sub_1ACC4873C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

void sub_1ACC48764(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

id FairPlayAsset.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void FairPlayAsset.init()()
{
}

id FairPlayAsset.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACC488D8(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1ACC48904(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1ACC4892C@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

id sub_1ACC4895C(uint64_t a1, void *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR___PFFairPlayAsset_adamID] = a1;
  *(void *)&v2[OBJC_IVAR___PFFairPlayAsset_avAsset] = a2;
  sub_1ACA90040();
  id v6 = a2;
  uint64_t v7 = v2;
  *(void *)&v7[OBJC_IVAR___PFFairPlayAsset_keyStore] = sub_1ACC47E5C(v6);

  v9.receiver = v7;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_1ACC48A0C()
{
  return swift_deallocObject();
}

uint64_t sub_1ACC48A1C(void *a1, uint64_t a2)
{
  return sub_1ACC48254(a1, a2, *(unsigned char **)(v2 + 16));
}

uint64_t sub_1ACC48A24()
{
  return swift_deallocObject();
}

uint64_t sub_1ACC48A34()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t type metadata accessor for FairPlayAsset()
{
  return self;
}

uint64_t method lookup function for FairPlayAsset(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FairPlayAsset);
}

uint64_t dispatch thunk of FairPlayAsset.__allocating_init(adamID:avAsset:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

id sub_1ACC48AAC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v7 = MEMORY[0x1F4188790](v5).n128_u64[0];
  objc_super v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(a1, sel_assetURL, v7);
  if (!v10)
  {
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1ACE754C8();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB76D598);
    id v22 = a1;
    unint64_t v16 = sub_1ACE75498();
    os_log_type_t v23 = sub_1ACE76BE8();
    if (!os_log_type_enabled(v16, v23))
    {

      return 0;
    }
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 141558275;
    uint64_t v37 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v24 + 12) = 2049;
    uint64_t v37 = (uint64_t)objc_msgSend(v22, sel_storeTrackId);
    sub_1ACE76FF8();

    _os_log_impl(&dword_1AC9D5000, v16, v23, "Missing assetURL for episode: %{private,mask.hash}lld", (uint8_t *)v24, 0x16u);
    uint64_t v20 = v24;
LABEL_11:
    MEMORY[0x1AD11B340](v20, -1, -1);

    return 0;
  }
  uint64_t v11 = v10;
  uint64_t v12 = sub_1ACE761B8();
  unint64_t v14 = v13;

  sub_1ACE74EF8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1ACA50E78((uint64_t)v4, &qword_1EB7731B0);
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1ACE754C8();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EB76D598);
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_1ACE75498();
    os_log_type_t v17 = sub_1ACE76BE8();
    if (!os_log_type_enabled(v16, v17))
    {

      swift_bridgeObjectRelease_n();
      return 0;
    }
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 141558275;
    uint64_t v36 = 1752392040;
    uint64_t v37 = v19;
    sub_1ACE76FF8();
    *(_WORD *)(v18 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_1ACA3189C(v12, v14, &v37);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v16, v17, "Malformed assetURL: %{private,mask.hash}s.", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v19, -1, -1);
    uint64_t v20 = v18;
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
  id v25 = objc_msgSend(a1, sel_storeTrackId);
  id v26 = objc_allocWithZone(MEMORY[0x1E4F166C8]);
  id v27 = (void *)sub_1ACE74E18();
  id v28 = objc_msgSend(v26, sel_initWithURL_options_, v27, 0);

  id v29 = (objc_class *)type metadata accessor for FairPlayAsset();
  uint64_t v30 = (char *)objc_allocWithZone(v29);
  *(void *)&v30[OBJC_IVAR___PFFairPlayAsset_adamID] = v25;
  *(void *)&v30[OBJC_IVAR___PFFairPlayAsset_avAsset] = v28;
  sub_1ACA90040();
  id v31 = v28;
  unint64_t v32 = v30;
  *(void *)&v32[OBJC_IVAR___PFFairPlayAsset_keyStore] = sub_1ACC47E5C(v31);

  v35.receiver = v32;
  v35.super_class = v29;
  id v33 = objc_msgSendSuper2(&v35, sel_init);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v33;
}

uint64_t sub_1ACC48FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v75 = a1;
  uint64_t v72 = a4;
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  MEMORY[0x1F4188790](v71);
  double v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for EpisodePlayState();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v73 = v8;
  uint64_t v74 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v69 = (uint64_t)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v70 = (uint64_t)&v68 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v68 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3FD0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  os_log_type_t v23 = (char *)&v68 - v22;
  MEMORY[0x1F4188790](v21);
  id v25 = (char *)&v68 - v24;
  if (*(void *)(a3 + 16))
  {
    uint64_t v26 = sub_1ACA65CC4(v75);
    if (v27)
    {
      uint64_t v28 = *(void *)(*(void *)(a3 + 56) + 8 * v26);
      uint64_t v29 = *(void *)(v28 + 16);
      if (v29)
      {
        uint64_t v30 = (uint64_t)&v25[*(int *)(v16 + 48)];
        sub_1ACA3AAD4(v28+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * (v29 - 1), (uint64_t)v23, &qword_1E99F3FD0);
        uint64_t v31 = (uint64_t)&v23[*(int *)(v16 + 48)];
        uint64_t v32 = sub_1ACE75118();
        uint64_t v33 = *(void *)(v32 - 8);
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v25, v23, v32);
        sub_1ACC4A800(v31, v30);
        uint64_t v34 = (uint64_t)&v20[*(int *)(v16 + 48)];
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v20, v25, v32);
        sub_1ACAFDB90(v30, v34);
        objc_super v35 = v15;
        sub_1ACC4A800(v34, (uint64_t)v15);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v32);
        if (qword_1E99EFEE8 != -1) {
          swift_once();
        }
        uint64_t v36 = sub_1ACE754C8();
        __swift_project_value_buffer(v36, (uint64_t)qword_1E99F2BF8);
        uint64_t v37 = (uint64_t)v15;
        uint64_t v38 = v70;
        sub_1ACAFDB90(v37, v70);
        uint64_t v39 = sub_1ACE75498();
        os_log_type_t v40 = sub_1ACE76BD8();
        if (os_log_type_enabled(v39, v40))
        {
          uint64_t v41 = swift_slowAlloc();
          uint64_t v42 = swift_slowAlloc();
          *(_DWORD *)uint64_t v41 = 136315394;
          uint64_t v76 = v75;
          uint64_t v77 = v42;
          sub_1ACA55E4C();
          uint64_t v43 = sub_1ACE770B8();
          uint64_t v76 = sub_1ACA3189C(v43, v44, &v77);
          sub_1ACE76FF8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v41 + 12) = 2080;
          sub_1ACAFDB90(v38, v69);
          uint64_t v45 = sub_1ACE76228();
          uint64_t v76 = sub_1ACA3189C(v45, v46, &v77);
          sub_1ACE76FF8();
          swift_bridgeObjectRelease();
          sub_1ACAFDCDC(v38);
          _os_log_impl(&dword_1AC9D5000, v39, v40, "[StateCache] state for %s (in-flight) -> %s", (uint8_t *)v41, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v42, -1, -1);
          MEMORY[0x1AD11B340](v41, -1, -1);
        }
        else
        {

          sub_1ACAFDCDC(v38);
        }
        sub_1ACA50E78((uint64_t)v25, &qword_1E99F3FD0);
        uint64_t v66 = (uint64_t)v35;
        uint64_t v51 = v72;
        sub_1ACC4A800(v66, v72);
        goto LABEL_23;
      }
    }
  }
  if (qword_1E99EFEE8 != -1) {
    swift_once();
  }
  uint64_t v47 = sub_1ACE754C8();
  __swift_project_value_buffer(v47, (uint64_t)qword_1E99F2BF8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v48 = sub_1ACE75498();
  os_log_type_t v49 = sub_1ACE76BD8();
  BOOL v50 = os_log_type_enabled(v48, v49);
  uint64_t v51 = v72;
  if (v50)
  {
    uint64_t v52 = swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    uint64_t v70 = v53;
    *(_DWORD *)uint64_t v52 = 136315394;
    uint64_t v54 = v75;
    uint64_t v76 = v75;
    uint64_t v77 = v53;
    sub_1ACA55E4C();
    uint64_t v55 = sub_1ACE770B8();
    uint64_t v76 = sub_1ACA3189C(v55, v56, &v77);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v52 + 12) = 2080;
    if (*(void *)(a2 + 16) && (uint64_t v57 = sub_1ACA65CC4(v54), (v58 & 1) != 0))
    {
      sub_1ACAFDB90(*(void *)(a2 + 56) + *(void *)(v74 + 72) * v57, (uint64_t)v7);
      uint64_t v59 = 0;
    }
    else
    {
      uint64_t v59 = 1;
    }
    uint64_t v51 = v72;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v7, v59, 1, v73);
    uint64_t v60 = sub_1ACE76228();
    uint64_t v76 = sub_1ACA3189C(v60, v61, &v77);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v48, v49, "[StateCache] state for %s (consolidated) -> %s", (uint8_t *)v52, 0x16u);
    uint64_t v62 = v70;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v62, -1, -1);
    MEMORY[0x1AD11B340](v52, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  if (*(void *)(a2 + 16))
  {
    uint64_t v63 = sub_1ACA65CC4(v75);
    if (v64)
    {
      sub_1ACAFDB90(*(void *)(a2 + 56) + *(void *)(v74 + 72) * v63, v51);
LABEL_23:
      uint64_t v65 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v51, v65, 1, v73);
    }
  }
  uint64_t v65 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v51, v65, 1, v73);
}

void sub_1ACC497B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2FD0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = &v67[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = &v67[-v14];
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = &v67[-v16];
  if (!*(void *)(a3 + 16)
    || (uint64_t v18 = sub_1ACA65CC4(a1), (v19 & 1) == 0)
    || (uint64_t v20 = *(void *)(*(void *)(a3 + 56) + 8 * v18), (v21 = *(void *)(v20 + 16)) == 0))
  {
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_1ACE754C8();
    __swift_project_value_buffer(v46, (uint64_t)qword_1E99F2BF8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v47 = sub_1ACE75498();
    int v48 = sub_1ACE76BD8();
    if (os_log_type_enabled(v47, (os_log_type_t)v48))
    {
      LODWORD(v70) = v48;
      uint64_t v72 = a4;
      uint64_t v49 = swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      uint64_t v78 = v69;
      *(_DWORD *)uint64_t v49 = 136315394;
      uint64_t v73 = a1;
      sub_1ACA55E4C();
      uint64_t v50 = sub_1ACE770B8();
      uint64_t v73 = sub_1ACA3189C(v50, v51, &v78);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2080;
      uint64_t v52 = *(void *)(a2 + 16);
      uint64_t v71 = a1;
      if (v52 && (uint64_t v53 = sub_1ACA65CC4(a1), (v54 & 1) != 0))
      {
        uint64_t v55 = (uint64_t *)(*(void *)(a2 + 56) + 40 * v53);
        uint64_t v56 = *v55;
        uint64_t v57 = v55[1];
        unint64_t v58 = v55[2];
        uint64_t v59 = v55[3];
        uint64_t v60 = v55[4];
        sub_1ACA50D88(*v55, v57, v58);
      }
      else
      {
        uint64_t v56 = 0;
        uint64_t v57 = 0;
        uint64_t v59 = 0;
        uint64_t v60 = 0;
        unint64_t v58 = 3;
      }
      uint64_t v73 = v56;
      uint64_t v74 = v57;
      unint64_t v75 = v58;
      uint64_t v76 = v59;
      uint64_t v77 = v60;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB766C98);
      uint64_t v61 = sub_1ACE76228();
      uint64_t v73 = sub_1ACA3189C(v61, v62, &v78);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v47, (os_log_type_t)v70, "[StateCache] state for %s (consolidated) -> %s", (uint8_t *)v49, 0x16u);
      uint64_t v63 = v69;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v63, -1, -1);
      MEMORY[0x1AD11B340](v49, -1, -1);

      a1 = v71;
      a4 = v72;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_20;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      if (!*(void *)(a2 + 16)) {
        goto LABEL_20;
      }
    }
    uint64_t v64 = sub_1ACA65CC4(a1);
    if (v65)
    {
      uint64_t v66 = (uint64_t *)(*(void *)(a2 + 56) + 40 * v64);
      uint64_t v35 = *v66;
      uint64_t v28 = v66[1];
      unint64_t v30 = v66[2];
      uint64_t v29 = v66[3];
      uint64_t v31 = v66[4];
      sub_1ACA50D88(*v66, v28, v30);
      goto LABEL_23;
    }
LABEL_20:
    uint64_t v35 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v31 = 0;
    unint64_t v30 = 3;
    goto LABEL_23;
  }
  uint64_t v71 = a1;
  uint64_t v72 = a4;
  uint64_t v22 = (uint64_t *)&v17[*(int *)(v8 + 48)];
  sub_1ACA3AAD4(v20+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * (v21 - 1), (uint64_t)v15, &qword_1E99F2FD0);
  os_log_type_t v23 = (uint64_t *)&v15[*(int *)(v8 + 48)];
  uint64_t v24 = sub_1ACE75118();
  uint64_t v25 = (uint64_t)v17;
  uint64_t v26 = *(void *)(v24 - 8);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v26 + 32))(v25, v15, v24);
  uint64_t v27 = *v23;
  uint64_t v28 = v23[1];
  unint64_t v30 = v23[2];
  uint64_t v29 = v23[3];
  uint64_t v31 = v23[4];
  *uint64_t v22 = v27;
  v22[1] = v28;
  v22[2] = v30;
  v22[3] = v29;
  v22[4] = v31;
  uint64_t v32 = (uint64_t *)&v12[*(int *)(v8 + 48)];
  uint64_t v33 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v26 + 16);
  uint64_t v70 = v25;
  uint64_t v34 = v25;
  uint64_t v35 = v27;
  v33(v12, v34, v24);
  uint64_t *v32 = v35;
  v32[1] = v28;
  v32[2] = v30;
  v32[3] = v29;
  v32[4] = v31;
  sub_1ACA50D88(v35, v28, v30);
  (*(void (**)(unsigned char *, uint64_t))(v26 + 8))(v12, v24);
  if (qword_1E99EFEE8 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1ACE754C8();
  __swift_project_value_buffer(v36, (uint64_t)qword_1E99F2BF8);
  sub_1ACA50D88(v35, v28, v30);
  sub_1ACA50D88(v35, v28, v30);
  uint64_t v37 = sub_1ACE75498();
  os_log_type_t v38 = sub_1ACE76BD8();
  int v39 = v38;
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v40 = swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    uint64_t v78 = v69;
    *(_DWORD *)uint64_t v40 = 136315394;
    int v68 = v39;
    uint64_t v73 = v71;
    sub_1ACA55E4C();
    uint64_t v41 = sub_1ACE770B8();
    uint64_t v73 = sub_1ACA3189C(v41, v42, &v78);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    uint64_t v73 = v35;
    uint64_t v74 = v28;
    unint64_t v75 = v30;
    uint64_t v76 = v29;
    uint64_t v77 = v31;
    sub_1ACA50D88(v35, v28, v30);
    uint64_t v43 = sub_1ACE76228();
    uint64_t v73 = sub_1ACA3189C(v43, v44, &v78);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACA50D9C(v35, v28, v30);
    sub_1ACA50D9C(v35, v28, v30);
    _os_log_impl(&dword_1AC9D5000, v37, (os_log_type_t)v68, "[StateCache] state for %s (in-flight) -> %s", (uint8_t *)v40, 0x16u);
    uint64_t v45 = v69;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v45, -1, -1);
    MEMORY[0x1AD11B340](v40, -1, -1);
  }
  else
  {

    sub_1ACA50D9C(v35, v28, v30);
    sub_1ACA50D9C(v35, v28, v30);
  }
  sub_1ACA50E78(v70, &qword_1E99F2FD0);
  a4 = v72;
LABEL_23:
  *a4 = v35;
  a4[1] = v28;
  a4[2] = v30;
  a4[3] = v29;
  a4[4] = v31;
}

uint64_t InMemoryPodcastStateDataSource.delegate.getter()
{
  swift_beginAccess();
  return MEMORY[0x1AD11B470](v0 + 16);
}

uint64_t InMemoryPodcastStateDataSource.delegate.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*InMemoryPodcastStateDataSource.delegate.modify(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1AD11B470](v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1ACBAA570;
}

void *InMemoryPodcastStateDataSource.__allocating_init(inMemoryFollowStateStore:)(uint64_t a1)
{
  swift_allocObject();
  uint64_t v2 = sub_1ACC4A574(a1);
  swift_release();
  return v2;
}

void *InMemoryPodcastStateDataSource.init(inMemoryFollowStateStore:)(uint64_t a1)
{
  uint64_t v1 = sub_1ACC4A574(a1);
  swift_release();
  return v1;
}

Swift::Void __swiftcall InMemoryPodcastStateDataSource.startObservingChanges()()
{
  uint64_t v1 = v0;
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0FF8);
  sub_1ACBAADE8();
  uint64_t v2 = sub_1ACE75D58();
  swift_release();
  swift_release();
  *(void *)(v1 + 40) = v2;
  swift_release();
}

double InMemoryPodcastStateDataSource.state(for:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)(v1 + 32) + 16);
  uint64_t v4 = (uint64_t *)&v3[4];
  uint64_t v5 = v3 + 8;
  os_unfair_lock_lock(v3 + 8);
  sub_1ACC4A690(v4, (uint64_t)v9);
  os_unfair_lock_unlock(v5);
  uint64_t v6 = v10;
  double result = *(double *)v9;
  long long v8 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v8;
  *(void *)(a1 + 32) = v6;
  return result;
}

uint64_t InMemoryPodcastStateDataSource.state(for:)@<X0>(uint64_t a1@<X8>)
{
  sub_1ACC4A3B4(v3);
  return sub_1ACB9B34C((uint64_t)v3, a1);
}

uint64_t InMemoryPodcastStateDataSource.deinit()
{
  sub_1ACA8EF4C(v0 + 16);
  swift_release();
  swift_release();
  return v0;
}

uint64_t InMemoryPodcastStateDataSource.__deallocating_deinit()
{
  sub_1ACA8EF4C(v0 + 16);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

double sub_1ACC4A300@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)(v1 + 32) + 16);
  uint64_t v4 = (uint64_t *)&v3[4];
  uint64_t v5 = v3 + 8;
  os_unfair_lock_lock(v3 + 8);
  sub_1ACC4A690(v4, (uint64_t)v9);
  os_unfair_lock_unlock(v5);
  uint64_t v6 = v10;
  double result = *(double *)v9;
  long long v8 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v8;
  *(void *)(a1 + 32) = v6;
  return result;
}

uint64_t sub_1ACC4A378@<X0>(uint64_t a1@<X8>)
{
  sub_1ACC4A3B4(v3);
  return sub_1ACB9B34C((uint64_t)v3, a1);
}

uint64_t sub_1ACC4A3B4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_1ACE754C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E99EFFD8 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1E99F2DE8);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  double v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76BF8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1AC9D5000, v7, v8, "We should never be handling UUIDs on a thin client", v9, 2u);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = 0;
  a1[1] = 0;
  a1[3] = 0;
  a1[4] = 0;
  a1[2] = 3;
  return result;
}

void *sub_1ACC4A574(uint64_t a1)
{
  uint64_t v2 = v1;
  v2[3] = 0;
  swift_unknownObjectWeakInit();
  v2[4] = a1;
  v2[5] = 0;
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0FF8);
  sub_1ACBAADE8();
  uint64_t v4 = sub_1ACE75D58();
  swift_release();
  swift_release();
  v2[5] = v4;
  swift_release();
  return v2;
}

uint64_t sub_1ACC4A658()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACC4A690@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACC4A7B0(a1, a2);
}

uint64_t sub_1ACC4A6A8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1AD11B470](v4);
  uint64_t v6 = *(void *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1ACC4A704(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t type metadata accessor for InMemoryPodcastStateDataSource()
{
  return self;
}

uint64_t method lookup function for InMemoryPodcastStateDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InMemoryPodcastStateDataSource);
}

uint64_t dispatch thunk of InMemoryPodcastStateDataSource.__allocating_init(inMemoryFollowStateStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1ACC4A7B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1ACC497B4(*(void *)(v2 + 16), *a1, a1[1], v5);
  return sub_1ACB9B34C((uint64_t)v5, a2);
}

uint64_t sub_1ACC4A800(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodePlayState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id FairPlayKeyResponseData.__allocating_init(renewalDate:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = &v3[OBJC_IVAR___PFFairPlayKeyResponseData_renewalDate];
  uint64_t v5 = sub_1ACE750A8();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  v9.receiver = v3;
  v9.super_class = v1;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

id FairPlayKeyResponseData.init(renewalDate:)(uint64_t a1)
{
  uint64_t v3 = &v1[OBJC_IVAR___PFFairPlayKeyResponseData_renewalDate];
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for FairPlayKeyResponseData();
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v6;
}

uint64_t type metadata accessor for FairPlayKeyResponseData()
{
  uint64_t result = qword_1E99F3FD8;
  if (!qword_1E99F3FD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id FairPlayKeyResponseData.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void FairPlayKeyResponseData.init()()
{
}

id FairPlayKeyResponseData.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FairPlayKeyResponseData();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACC4ABB0()
{
  return type metadata accessor for FairPlayKeyResponseData();
}

uint64_t sub_1ACC4ABB8()
{
  uint64_t result = sub_1ACE750A8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FairPlayKeyResponseData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FairPlayKeyResponseData);
}

uint64_t dispatch thunk of FairPlayKeyResponseData.__allocating_init(renewalDate:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t DefaultPodcastStateDataSource.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  return v0;
}

uint64_t DefaultPodcastStateDataSource.init()()
{
  *(void *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  return v0;
}

double sub_1ACC4ACE0@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t DefaultPodcastStateDataSource.deinit()
{
  sub_1ACA8EF4C(v0 + 16);
  return v0;
}

uint64_t DefaultPodcastStateDataSource.__deallocating_deinit()
{
  sub_1ACA8EF4C(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1ACC4AD48@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1AD11B470](v4);
  uint64_t v6 = *(void *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1ACC4ADA4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t type metadata accessor for DefaultPodcastStateDataSource()
{
  return self;
}

uint64_t method lookup function for DefaultPodcastStateDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DefaultPodcastStateDataSource);
}

uint64_t dispatch thunk of DefaultPodcastStateDataSource.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of DefaultPodcastStateDataSource.delegate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of DefaultPodcastStateDataSource.delegate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DefaultPodcastStateDataSource.delegate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DefaultPodcastStateDataSource.activate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DefaultPodcastStateDataSource.state(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t PodcastState.init(isFollowed:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = 0x64696C61766E69;
  if ((result & 1) == 0) {
    uint64_t v2 = 0;
  }
  *a2 = result & 1;
  a2[1] = v2;
  a2[3] = 0;
  a2[4] = 0;
  if (result) {
    unint64_t v3 = 0xE700000000000000;
  }
  else {
    unint64_t v3 = 0;
  }
  a2[2] = v3;
  return result;
}

id ContentKeyResponse.__allocating_init(request:keyData:renewalDate:error:)(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = (char *)objc_allocWithZone(v6);
  uint64_t v12 = (void **)&v11[OBJC_IVAR___MTContentKeyResponse_error];
  *(void *)&v11[OBJC_IVAR___MTContentKeyResponse_error] = 0;
  uint64_t v13 = (uint64_t *)&v11[OBJC_IVAR___MTContentKeyResponse_keyData];
  *(_OWORD *)&v11[OBJC_IVAR___MTContentKeyResponse_keyData] = xmmword_1ACE91EF0;
  *(void *)&v11[OBJC_IVAR___MTContentKeyResponse_request] = a1;
  swift_beginAccess();
  uint64_t v15 = *v13;
  unint64_t v14 = v13[1];
  *uint64_t v13 = a2;
  v13[1] = a3;
  id v16 = a1;
  uint64_t v17 = v11;
  sub_1ACA39848(a2, a3);
  sub_1ACAB2EF0(v15, v14);
  sub_1ACA72A5C(a4, (uint64_t)&v17[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
  swift_beginAccess();
  uint64_t v18 = *v12;
  *uint64_t v12 = a5;
  id v19 = a5;

  v23.receiver = v17;
  v23.super_class = v6;
  id v20 = objc_msgSendSuper2(&v23, sel_init);
  sub_1ACA3E034(a4);

  sub_1ACAB2EF0(a2, a3);
  return v20;
}

id ContentKeyResponse.__allocating_init(request:error:)(void *a1, void *a2)
{
  unint64_t v3 = v2;
  id v6 = objc_allocWithZone(v3);
  if (a2) {
    id v7 = (void *)sub_1ACE74D68();
  }
  else {
    id v7 = 0;
  }
  id v8 = objc_msgSend(v6, sel_initWithRequest_keyData_renewalDate_error_, a1, 0, 0, v7);

  return v8;
}

unint64_t ContentKeyRequest.RequestType.init(rawValue:)(unint64_t a1)
{
  return sub_1ACBDE644(a1);
}

uint64_t ContentKeyRequest.keyIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___MTContentKeyRequest_keyIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContentKeyRequest.adamId.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___MTContentKeyRequest_adamId);
  swift_bridgeObjectRetain();
  return v1;
}

void *ContentKeyRequest.secureInvalidationDsid.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___MTContentKeyRequest_secureInvalidationDsid);
  id v2 = v1;
  return v1;
}

uint64_t sub_1ACC4B248()
{
  return sub_1ACC4BB98(&OBJC_IVAR___MTContentKeyRequest_requestData);
}

uint64_t sub_1ACC4B260(uint64_t a1, uint64_t a2)
{
  return sub_1ACC4BCA4(a1, a2, &OBJC_IVAR___MTContentKeyRequest_requestData);
}

uint64_t (*sub_1ACC4B26C())()
{
  return j__swift_endAccess;
}

id ContentKeyRequest.__allocating_init(keyIdentifier:adamId:requestType:offlineRequest:secureInvalidationDsid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, void *a7)
{
  id v15 = objc_allocWithZone(v7);
  id v16 = sub_1ACC4C37C(a1, a2, a3, a4, a5, a6, a7);

  return v16;
}

id ContentKeyRequest.init(keyIdentifier:adamId:requestType:offlineRequest:secureInvalidationDsid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, void *a7)
{
  id v8 = sub_1ACC4C37C(a1, a2, a3, a4, a5, a6, a7);

  return v8;
}

char *sub_1ACC4B428(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR___MTContentKeyRequest_keyIdentifier);
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR___MTContentKeyRequest_keyIdentifier + 8);
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR___MTContentKeyRequest_adamId);
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR___MTContentKeyRequest_adamId + 8);
  int v8 = *(unsigned __int8 *)(v2 + OBJC_IVAR___MTContentKeyRequest_offlineRequest);
  objc_super v9 = *(void **)(v2 + OBJC_IVAR___MTContentKeyRequest_secureInvalidationDsid);
  objc_allocWithZone((Class)type metadata accessor for ContentKeyRequest(0));
  id v10 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = (char *)sub_1ACC4C37C(v4, v5, v6, v7, a1, v8, v9);

  *(void *)&v11[OBJC_IVAR___MTContentKeyRequest_requestID] = *(void *)(v2 + OBJC_IVAR___MTContentKeyRequest_requestID);
  uint64_t v12 = (uint64_t *)(v2 + OBJC_IVAR___MTContentKeyRequest_requestData);
  swift_beginAccess();
  uint64_t v14 = *v12;
  unint64_t v13 = v12[1];
  id v15 = (uint64_t *)&v11[OBJC_IVAR___MTContentKeyRequest_requestData];
  swift_beginAccess();
  uint64_t v16 = *v15;
  unint64_t v17 = v15[1];
  *id v15 = v14;
  v15[1] = v13;
  sub_1ACA39848(v14, v13);
  sub_1ACAB2EF0(v16, v17);
  return v11;
}

id ContentKeyRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ContentKeyRequest.init()()
{
}

id ContentKeyRequest.__deallocating_deinit()
{
  return sub_1ACC4C190(type metadata accessor for ContentKeyRequest);
}

void *ContentKeyResponse.request.getter()
{
  id v1 = *(void **)(v0 + OBJC_IVAR___MTContentKeyResponse_request);
  id v2 = v1;
  return v1;
}

uint64_t ContentKeyResponse.renewalDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA72A5C(v1 + OBJC_IVAR___MTContentKeyResponse_renewalDate, a1);
}

void *sub_1ACC4B910()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___MTContentKeyResponse_error);
  swift_beginAccess();
  id v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1ACC4B9C8(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___MTContentKeyResponse_error);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

void sub_1ACC4BA1C(void **a1, void *a2)
{
  id v2 = *a1;
  id v3 = (void **)(*a2 + OBJC_IVAR___MTContentKeyResponse_error);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = v2;
  id v5 = v2;
}

uint64_t (*sub_1ACC4BA88())()
{
  return j_j__swift_endAccess;
}

id sub_1ACC4BAF0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = (uint64_t *)(a1 + *a3);
  swift_beginAccess();
  uint64_t v4 = 0;
  unint64_t v5 = v3[1];
  if (v5 >> 60 != 15)
  {
    uint64_t v6 = *v3;
    sub_1ACA3985C(v6, v5);
    uint64_t v4 = (void *)sub_1ACE74F68();
    sub_1ACAB2EF0(v6, v5);
  }
  return v4;
}

uint64_t sub_1ACC4BB8C()
{
  return sub_1ACC4BB98(&OBJC_IVAR___MTContentKeyResponse_keyData);
}

uint64_t sub_1ACC4BB98(void *a1)
{
  uint64_t v2 = v1 + *a1;
  swift_beginAccess();
  uint64_t v3 = *(void *)v2;
  sub_1ACA39848(*(void *)v2, *(void *)(v2 + 8));
  return v3;
}

void sub_1ACC4BBFC(char *a1, uint64_t a2, void *a3, void *a4)
{
  unint64_t v5 = a3;
  if (a3)
  {
    uint64_t v7 = a1;
    id v8 = v5;
    unint64_t v5 = (void *)sub_1ACE74F88();
    unint64_t v10 = v9;
  }
  else
  {
    uint64_t v11 = a1;
    unint64_t v10 = 0xF000000000000000;
  }
  uint64_t v12 = (uint64_t *)&a1[*a4];
  swift_beginAccess();
  uint64_t v13 = *v12;
  unint64_t v14 = v12[1];
  *uint64_t v12 = (uint64_t)v5;
  v12[1] = v10;
  sub_1ACAB2EF0(v13, v14);
}

uint64_t sub_1ACC4BC98(uint64_t a1, uint64_t a2)
{
  return sub_1ACC4BCA4(a1, a2, &OBJC_IVAR___MTContentKeyResponse_keyData);
}

uint64_t sub_1ACC4BCA4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (uint64_t *)(v3 + *a3);
  swift_beginAccess();
  uint64_t v7 = *v6;
  unint64_t v8 = v6[1];
  *uint64_t v6 = a1;
  v6[1] = a2;
  return sub_1ACAB2EF0(v7, v8);
}

uint64_t sub_1ACC4BD00@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4 = (uint64_t *)(*a1 + *a2);
  swift_beginAccess();
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  *a3 = *v4;
  a3[1] = v6;
  return sub_1ACA39848(v5, v6);
}

uint64_t sub_1ACC4BD54(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  uint64_t v7 = (uint64_t *)(*a2 + *a5);
  swift_beginAccess();
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];
  *uint64_t v7 = v5;
  v7[1] = v6;
  sub_1ACA39848(v5, v6);
  return sub_1ACAB2EF0(v8, v9);
}

uint64_t (*sub_1ACC4BDCC())()
{
  return j_j__swift_endAccess;
}

id ContentKeyResponse.init(request:error:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  if (a2) {
    unint64_t v6 = (void *)sub_1ACE74D68();
  }
  else {
    unint64_t v6 = 0;
  }
  id v7 = objc_msgSend(v3, sel_initWithRequest_keyData_renewalDate_error_, a1, 0, 0, v6);

  return v7;
}

id ContentKeyResponse.init(request:keyData:renewalDate:error:)(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5)
{
  id v9 = sub_1ACC4C240(a1, a2, a3, a4, a5);

  sub_1ACAB2EF0(a2, a3);
  return v9;
}

void ContentKeyResponse.init()()
{
}

id ContentKeyResponse.__deallocating_deinit()
{
  return sub_1ACC4C190(type metadata accessor for ContentKeyResponse);
}

id sub_1ACC4C190(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

id sub_1ACC4C240(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v11 = (void **)&v5[OBJC_IVAR___MTContentKeyResponse_error];
  *(void *)&v5[OBJC_IVAR___MTContentKeyResponse_error] = 0;
  uint64_t v12 = (uint64_t *)&v5[OBJC_IVAR___MTContentKeyResponse_keyData];
  *(_OWORD *)&v5[OBJC_IVAR___MTContentKeyResponse_keyData] = xmmword_1ACE91EF0;
  *(void *)&v5[OBJC_IVAR___MTContentKeyResponse_request] = a1;
  swift_beginAccess();
  uint64_t v13 = *v12;
  unint64_t v14 = v12[1];
  *uint64_t v12 = a2;
  v12[1] = a3;
  id v15 = a1;
  uint64_t v16 = v5;
  sub_1ACA39848(a2, a3);
  sub_1ACAB2EF0(v13, v14);
  sub_1ACA72A5C(a4, (uint64_t)&v16[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
  swift_beginAccess();
  unint64_t v17 = *v11;
  *uint64_t v11 = a5;
  id v18 = a5;

  v21.receiver = v16;
  v21.super_class = (Class)type metadata accessor for ContentKeyResponse(0);
  id v19 = objc_msgSendSuper2(&v21, sel_init);
  sub_1ACA3E034(a4);
  return v19;
}

id sub_1ACC4C37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, void *a7)
{
  int v26 = a6;
  uint64_t v14 = sub_1ACE750A8();
  uint64_t v15 = *(void *)(v14 - 8);
  id result = (id)MEMORY[0x1F4188790](v14);
  id v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)&v7[OBJC_IVAR___MTContentKeyRequest_requestData] = xmmword_1ACE91EF0;
  id v19 = &v7[OBJC_IVAR___MTContentKeyRequest_keyIdentifier];
  *id v19 = a1;
  v19[1] = a2;
  id v20 = &v7[OBJC_IVAR___MTContentKeyRequest_adamId];
  *id v20 = a3;
  v20[1] = a4;
  *(void *)&v7[OBJC_IVAR___MTContentKeyRequest_requestType] = a5;
  v7[OBJC_IVAR___MTContentKeyRequest_offlineRequest] = v26;
  *(void *)&v7[OBJC_IVAR___MTContentKeyRequest_secureInvalidationDsid] = a7;
  uint64_t v21 = qword_1E99F3FE8 + 1;
  if (__OFADD__(qword_1E99F3FE8, 1))
  {
    __break(1u);
  }
  else
  {
    ++qword_1E99F3FE8;
    *(void *)&v7[OBJC_IVAR___MTContentKeyRequest_requestID] = v21;
    id v22 = a7;
    objc_super v23 = v7;
    sub_1ACE75098();
    (*(void (**)(unsigned char *, char *, uint64_t))(v15 + 32))(&v23[OBJC_IVAR___MTContentKeyRequest_requestDate], v18, v14);

    uint64_t v24 = (objc_class *)type metadata accessor for ContentKeyRequest(0);
    v27.receiver = v23;
    v27.super_class = v24;
    return objc_msgSendSuper2(&v27, sel_init);
  }
  return result;
}

uint64_t type metadata accessor for ContentKeyRequest(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1E99F4030);
}

uint64_t type metadata accessor for ContentKeyResponse(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1E99F4040);
}

unint64_t sub_1ACC4C570()
{
  unint64_t result = qword_1E99F4020;
  if (!qword_1E99F4020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4020);
  }
  return result;
}

uint64_t sub_1ACC4C5C4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACC4BD00(a1, &OBJC_IVAR___MTContentKeyRequest_requestData, a2);
}

uint64_t sub_1ACC4C5E4(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACC4BD54(a1, a2, a3, a4, &OBJC_IVAR___MTContentKeyRequest_requestData);
}

id sub_1ACC4C604@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  objc_super v3 = (void **)(*a1 + OBJC_IVAR___MTContentKeyResponse_error);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1ACC4C660@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACC4BD00(a1, &OBJC_IVAR___MTContentKeyResponse_keyData, a2);
}

uint64_t sub_1ACC4C680(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACC4BD54(a1, a2, a3, a4, &OBJC_IVAR___MTContentKeyResponse_keyData);
}

uint64_t sub_1ACC4C6A0()
{
  return type metadata accessor for ContentKeyRequest(0);
}

uint64_t sub_1ACC4C6A8()
{
  uint64_t result = sub_1ACE750A8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ContentKeyRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ContentKeyRequest);
}

uint64_t dispatch thunk of ContentKeyRequest.requestData.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ContentKeyRequest.requestData.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ContentKeyRequest.requestData.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ContentKeyRequest.__allocating_init(keyIdentifier:adamId:requestType:offlineRequest:secureInvalidationDsid:)()
{
  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t dispatch thunk of ContentKeyRequest.copy(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

ValueMetadata *type metadata accessor for ContentKeyRequest.RequestType()
{
  return &type metadata for ContentKeyRequest.RequestType;
}

uint64_t sub_1ACC4C884()
{
  return type metadata accessor for ContentKeyResponse(0);
}

void sub_1ACC4C88C()
{
  sub_1ACA73D00();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ContentKeyResponse(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ContentKeyResponse);
}

uint64_t dispatch thunk of ContentKeyResponse.error.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ContentKeyResponse.error.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ContentKeyResponse.error.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ContentKeyResponse.keyData.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ContentKeyResponse.keyData.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ContentKeyResponse.keyData.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ContentKeyResponse.__allocating_init(request:keyData:renewalDate:error:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t InterestState.rawValue.getter(char a1)
{
  uint64_t result = 0x4C74736567677573;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C61727475656ELL;
      break;
    case 2:
      uint64_t result = 0x657469726F766166;
      break;
    case 3:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACC4CB40(unsigned __int8 *a1, unsigned char *a2)
{
  unint64_t v2 = 0xEB00000000737365;
  uint64_t v3 = 0x4C74736567677573;
  uint64_t v4 = *a1;
  uint64_t v5 = 0x4C74736567677573;
  unint64_t v6 = 0xEB00000000737365;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x6C61727475656ELL;
      break;
    case 2:
      uint64_t v5 = 0x657469726F766166;
      unint64_t v6 = 0xE900000000000064;
      break;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  switch(*a2)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x6C61727475656ELL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x657469726F766166;
      unint64_t v2 = 0xE900000000000064;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x6E776F6E6B6E75) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1ACC4CCEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s18PodcastsFoundation13InterestStateO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1ACC4CD1C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEB00000000737365;
  uint64_t v3 = 0x4C74736567677573;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x6C61727475656ELL;
      goto LABEL_3;
    case 2:
      *a1 = 0x657469726F766166;
      a1[1] = 0xE900000000000064;
      break;
    case 3:
      *a1 = 0x6E776F6E6B6E75;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1ACC4CDC4()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC4CEAC()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC4CF7C()
{
  return sub_1ACE77B78();
}

uint64_t _s18PodcastsFoundation13InterestStateO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1ACC4D0B0()
{
  unint64_t result = qword_1E99F4050;
  if (!qword_1E99F4050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4050);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InterestState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC4D1D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InterestState()
{
  return &type metadata for InterestState;
}

uint64_t ShazamSignatureRequest.init(remoteUrl:priority:fileName:lifetime:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  char v10 = *a2;
  char v11 = *a5;
  uint64_t v12 = (int *)type metadata accessor for ShazamSignatureRequest();
  uint64_t v13 = a6 + v12[9];
  *(void *)(v13 + 32) = 0;
  *(_OWORD *)uint64_t v13 = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  uint64_t result = sub_1ACA7FAC4(a1, a6);
  *(unsigned char *)(a6 + v12[5]) = v10;
  uint64_t v15 = (void *)(a6 + v12[6]);
  *uint64_t v15 = a3;
  v15[1] = a4;
  *(unsigned char *)(a6 + v12[8]) = v11;
  *(unsigned char *)(a6 + v12[7]) = 6;
  return result;
}

uint64_t type metadata accessor for ShazamSignatureRequest()
{
  uint64_t result = qword_1EB76A3A0;
  if (!qword_1EB76A3A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ShazamSignatureRequest.remoteUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA3AAD4(v1, a1, &qword_1EB7731B0);
}

uint64_t ShazamSignatureRequest.priority.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ShazamSignatureRequest();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t ShazamSignatureRequest.fileFormat.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ShazamSignatureRequest();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t ShazamSignatureRequest.lifetime.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ShazamSignatureRequest();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t ShazamSignatureRequest.trace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ShazamSignatureRequest();
  return sub_1ACA3AAD4(v1 + *(int *)(v3 + 36), a1, &qword_1EB772EA0);
}

uint64_t ShazamSignatureRequest.trace.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShazamSignatureRequest() + 36);
  return sub_1ACBB135C(a1, v3);
}

uint64_t (*ShazamSignatureRequest.trace.modify())(void)
{
  return nullsub_1;
}

uint64_t _s18PodcastsFoundation22ShazamSignatureRequestV8fileNameSSvg_0()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ShazamSignatureRequest() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

double ShazamSignatureRequest.init(generatedFrom:adamID:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E498);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84820;
  *(void *)(inited + 32) = 0xD000000000000010;
  *(void *)(inited + 40) = 0x80000001ACECDB80;
  Swift::String_optional v5 = URL.md5()();
  *(Swift::String_optional *)(inited + 48) = v5;
  unsigned int v6 = sub_1ACA41EA0(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v8 = v6[2];
  unint64_t v7 = v6[3];
  unint64_t v9 = v8 + 1;
  if (v8 >= v7 >> 1) {
    unsigned int v6 = sub_1ACA41EA0((void *)(v7 > 1), v8 + 1, 1, v6);
  }
  v6[2] = v9;
  char v10 = &v6[2 * v8];
  void v10[4] = 0xD000000000000010;
  v10[5] = 0x80000001ACECDB80;
  if (v5.value._object)
  {
    unint64_t v11 = v6[3];
    swift_bridgeObjectRetain();
    if (v9 >= v11 >> 1) {
      unsigned int v6 = sub_1ACA41EA0((void *)(v11 > 1), v8 + 2, 1, v6);
    }
    v6[2] = v8 + 2;
    *(Swift::String_optional *)&v6[2 * v9 + 4] = v5;
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
  sub_1ACA8B0C0();
  uint64_t v12 = sub_1ACE76138();
  uint64_t v14 = v13;
  uint64_t v15 = sub_1ACE74F28();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v15);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a2, 1, 1, v15);
  uint64_t v17 = (int *)type metadata accessor for ShazamSignatureRequest();
  uint64_t v18 = a2 + v17[9];
  *(void *)(v18 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)uint64_t v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(unsigned char *)(a2 + v17[5]) = 2;
  id v20 = (uint64_t *)(a2 + v17[6]);
  *id v20 = v12;
  v20[1] = v14;
  *(unsigned char *)(a2 + v17[8]) = 1;
  *(unsigned char *)(a2 + v17[7]) = 6;
  return result;
}

uint64_t sub_1ACC4D714()
{
  uint64_t result = 0x725565746F6D6572;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x797469726F697270;
      break;
    case 2:
      uint64_t result = 0x656D614E656C6966;
      break;
    case 3:
      uint64_t result = 0x6D726F46656C6966;
      break;
    case 4:
      uint64_t result = 0x656D69746566696CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACC4D7C8(uint64_t a1)
{
  unint64_t v2 = sub_1ACC4EDC0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC4D804(uint64_t a1)
{
  unint64_t v2 = sub_1ACC4EDC0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ShazamSignatureRequest.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  Swift::String_optional v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA3AAD4(v1, (uint64_t)v8, &qword_1EB7731B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1ACE77B38();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1ACE77B38();
    sub_1ACC4F4C4(&qword_1E99F1C88, MEMORY[0x1E4F276F0]);
    sub_1ACE760F8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  type metadata accessor for ShazamSignatureRequest();
  sub_1ACE77B48();
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  return sub_1ACBD5730();
}

void *ShazamSignatureRequest.encode(_:)(uint64_t a1)
{
  v5[1] = *(id *)MEMORY[0x1E4F143B8];
  v5[0] = 0;
  id v1 = objc_msgSend(self, sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, v5);
  id v2 = v5[0];
  if (v1)
  {
    uint64_t v3 = (void *)sub_1ACE74F88();
  }
  else
  {
    uint64_t v3 = v2;
    sub_1ACE74D78();

    swift_willThrow();
  }
  return v3;
}

id ShazamSignatureRequest.decode(_:)(uint64_t a1, unint64_t a2)
{
  if (qword_1E99EFEF0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1ACE754C8();
  __swift_project_value_buffer(v5, (uint64_t)qword_1E99F2C10);
  uint64_t v6 = sub_1ACE75498();
  os_log_type_t v7 = sub_1ACE76BC8();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v8 = 0;
    _os_log_impl(&dword_1AC9D5000, v6, v7, "Attempting signature unarchiving", v8, 2u);
    MEMORY[0x1AD11B340](v8, -1, -1);
  }

  sub_1ACA50D4C(0, &qword_1EB770BA0);
  sub_1ACA50D4C(0, &qword_1E99F13D0);
  unint64_t v9 = (void *)sub_1ACE76C48();
  if (v2)
  {
  }
  else if (v9)
  {
    id v14 = v9;
    uint64_t v16 = sub_1ACE75498();
    os_log_type_t v17 = sub_1ACE76BC8();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_1AC9D5000, v16, v17, "Preferring keyed archiver object.", v18, 2u);
      MEMORY[0x1AD11B340](v18, -1, -1);
    }
    else
    {
    }
    return v14;
  }
  uint64_t v10 = sub_1ACE75498();
  os_log_type_t v11 = sub_1ACE76BC8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_1AC9D5000, v10, v11, "failed secure unarchiving, attempting dataRepresentation decoder...", v12, 2u);
    MEMORY[0x1AD11B340](v12, -1, -1);
  }

  id v13 = objc_allocWithZone(MEMORY[0x1E4F3BEA8]);
  sub_1ACA3985C(a1, a2);
  id v14 = sub_1ACC4ED00();
  sub_1ACA50850(a1, a2);
  return v14;
}

uint64_t static ShazamSignatureRequest.SignatureError.== infix(_:_:)()
{
  return 1;
}

uint64_t ShazamSignatureRequest.SignatureError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t ShazamSignatureRequest.SignatureError.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t ShazamSignatureRequest.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4058);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC4EDC0();
  sub_1ACE77C78();
  v11[15] = 0;
  sub_1ACE74F28();
  sub_1ACC4F4C4(&qword_1E99F0E98, MEMORY[0x1E4F276F0]);
  sub_1ACE77728();
  if (!v2)
  {
    unint64_t v9 = (int *)type metadata accessor for ShazamSignatureRequest();
    v11[14] = *(unsigned char *)(v3 + v9[5]);
    v11[13] = 1;
    sub_1ACBB1480();
    sub_1ACE77788();
    v11[12] = 2;
    sub_1ACE77748();
    v11[11] = *(unsigned char *)(v3 + v9[7]);
    v11[10] = 3;
    sub_1ACBD7008();
    sub_1ACE77788();
    v11[9] = *(unsigned char *)(v3 + v9[8]);
    v11[8] = 4;
    sub_1ACBB14D4();
    sub_1ACE77788();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ShazamSignatureRequest.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t ShazamSignatureRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4068);
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for ShazamSignatureRequest();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = &v13[*(int *)(v11 + 36)];
  *((void *)v14 + 4) = 0;
  *(_OWORD *)id v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  uint64_t v27 = (uint64_t)v14;
  uint64_t v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC4EDC0();
  sub_1ACE77C48();
  if (v2)
  {
    uint64_t v18 = v27;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    return sub_1ACA50E78(v18, &qword_1EB772EA0);
  }
  else
  {
    uint64_t v15 = v25;
    uint64_t v16 = (uint64_t)v13;
    sub_1ACE74F28();
    char v36 = 0;
    sub_1ACC4F4C4(&qword_1E99F0ED0, MEMORY[0x1E4F276F0]);
    uint64_t v17 = v26;
    sub_1ACE77638();
    sub_1ACA7FAC4((uint64_t)v6, v16);
    char v34 = 1;
    sub_1ACBB1528();
    sub_1ACE77698();
    *(unsigned char *)(v16 + v10[5]) = v35;
    char v33 = 2;
    uint64_t v19 = sub_1ACE77658();
    id v20 = (uint64_t *)(v16 + v10[6]);
    *id v20 = v19;
    v20[1] = v21;
    char v31 = 3;
    sub_1ACBD705C();
    sub_1ACE77698();
    *(unsigned char *)(v16 + v10[7]) = v32;
    char v29 = 4;
    sub_1ACBB157C();
    sub_1ACE77698();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v17);
    *(unsigned char *)(v16 + v10[8]) = v30;
    sub_1ACC4EE14(v16, v24);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    return sub_1ACC4EE78(v16);
  }
}

uint64_t sub_1ACC4E548@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ShazamSignatureRequest.init(from:)(a1, a2);
}

uint64_t sub_1ACC4E560(void *a1)
{
  return ShazamSignatureRequest.encode(to:)(a1);
}

uint64_t sub_1ACC4E578()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC4E5BC()
{
  return sub_1ACE77B78();
}

void *sub_1ACC4E5FC(uint64_t *a1)
{
  return ShazamSignatureRequest.encode(_:)(*a1);
}

id sub_1ACC4E618@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  id result = ShazamSignatureRequest.decode(_:)(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t ShazamSignatureRequest.inMemorySize.getter()
{
  return 1;
}

uint64_t _s18PodcastsFoundation22ShazamSignatureRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = type metadata accessor for ShazamSignatureRequest();
  MEMORY[0x1F4188790](v56);
  uint64_t v59 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v58 = (char *)&v55 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v57 = (uint64_t)&v55 - v8;
  MEMORY[0x1F4188790](v9);
  unint64_t v62 = (char *)&v55 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v61 = (uint64_t)&v55 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v60 = (uint64_t)&v55 - v14;
  uint64_t v15 = sub_1ACE74F28();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v55 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3478);
  uint64_t v19 = v18 - 8;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v55 - v26;
  MEMORY[0x1F4188790](v28);
  char v30 = (char *)&v55 - v29;
  uint64_t v63 = a1;
  sub_1ACA3AAD4(a1, (uint64_t)&v55 - v29, &qword_1EB7731B0);
  uint64_t v64 = a2;
  sub_1ACA3AAD4(a2, (uint64_t)v27, &qword_1EB7731B0);
  uint64_t v31 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_1ACA3AAD4((uint64_t)v30, (uint64_t)v21, &qword_1EB7731B0);
  sub_1ACA3AAD4((uint64_t)v27, v31, &qword_1EB7731B0);
  char v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v32((uint64_t)v21, 1, v15) == 1)
  {
    sub_1ACA50E78((uint64_t)v27, &qword_1EB7731B0);
    sub_1ACA50E78((uint64_t)v30, &qword_1EB7731B0);
    if (v32(v31, 1, v15) == 1)
    {
      sub_1ACA50E78((uint64_t)v21, &qword_1EB7731B0);
      uint64_t v33 = v63;
      uint64_t v34 = v60;
      sub_1ACC4EE14(v63, v60);
      uint64_t v35 = v64;
      uint64_t v36 = v61;
      sub_1ACC4EE14(v64, v61);
      uint64_t v37 = (uint64_t)v62;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1ACA3AAD4((uint64_t)v21, (uint64_t)v24, &qword_1EB7731B0);
  if (v32(v31, 1, v15) == 1)
  {
    sub_1ACA50E78((uint64_t)v27, &qword_1EB7731B0);
    sub_1ACA50E78((uint64_t)v30, &qword_1EB7731B0);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v15);
LABEL_6:
    sub_1ACA50E78((uint64_t)v21, &qword_1E99F3478);
    uint64_t v33 = v63;
    uint64_t v34 = v60;
    sub_1ACC4EE14(v63, v60);
    uint64_t v35 = v64;
    uint64_t v36 = v61;
    sub_1ACC4EE14(v64, v61);
    uint64_t v37 = (uint64_t)v62;
LABEL_12:
    sub_1ACC4EE78(v36);
    sub_1ACC4EE78(v34);
    sub_1ACC4EE14(v33, v37);
    uint64_t v45 = v57;
    sub_1ACC4EE14(v35, v57);
    uint64_t v47 = (uint64_t)v58;
    uint64_t v46 = (uint64_t)v59;
    goto LABEL_13;
  }
  os_log_type_t v38 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v55, v31, v15);
  sub_1ACC4F4C4(&qword_1EB770E98, MEMORY[0x1E4F276F0]);
  char v39 = sub_1ACE76168();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v16 + 8);
  v40(v38, v15);
  sub_1ACA50E78((uint64_t)v27, &qword_1EB7731B0);
  sub_1ACA50E78((uint64_t)v30, &qword_1EB7731B0);
  v40(v24, v15);
  sub_1ACA50E78((uint64_t)v21, &qword_1EB7731B0);
  uint64_t v33 = v63;
  uint64_t v34 = v60;
  sub_1ACC4EE14(v63, v60);
  uint64_t v35 = v64;
  uint64_t v36 = v61;
  sub_1ACC4EE14(v64, v61);
  uint64_t v37 = (uint64_t)v62;
  if ((v39 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_8:
  uint64_t v41 = v56;
  uint64_t v42 = *(int *)(v56 + 20);
  float v43 = flt_1ACE852C0[*(char *)(v34 + v42)];
  float v44 = flt_1ACE852C0[*(char *)(v36 + v42)];
  sub_1ACC4EE78(v36);
  sub_1ACC4EE78(v34);
  sub_1ACC4EE14(v33, v37);
  uint64_t v45 = v57;
  sub_1ACC4EE14(v35, v57);
  uint64_t v47 = (uint64_t)v58;
  uint64_t v46 = (uint64_t)v59;
  if (v43 != v44)
  {
LABEL_13:
    sub_1ACC4EE78(v37);
    sub_1ACC4EE78(v45);
    sub_1ACC4EE14(v33, v47);
    sub_1ACC4EE14(v35, v46);
    char v52 = 0;
    goto LABEL_14;
  }
  uint64_t v48 = *(int *)(v41 + 24);
  uint64_t v49 = *(void *)(v37 + v48);
  uint64_t v50 = *(void *)(v37 + v48 + 8);
  unint64_t v51 = (void *)(v45 + v48);
  if (v49 == *v51 && v50 == v51[1])
  {
    sub_1ACC4EE78(v37);
    sub_1ACC4EE78(v45);
    sub_1ACC4EE14(v33, v47);
    sub_1ACC4EE14(v35, v46);
LABEL_16:
    char v52 = sub_1ACCF58E4(*(unsigned char *)(v47 + *(int *)(v41 + 28)), *(unsigned char *)(v46 + *(int *)(v41 + 28)));
    goto LABEL_14;
  }
  char v54 = sub_1ACE77848();
  sub_1ACC4EE78(v37);
  sub_1ACC4EE78(v45);
  sub_1ACC4EE14(v33, v47);
  sub_1ACC4EE14(v35, v46);
  char v52 = 0;
  if (v54) {
    goto LABEL_16;
  }
LABEL_14:
  sub_1ACC4EE78(v46);
  sub_1ACC4EE78(v47);
  return v52 & 1;
}

id sub_1ACC4ED00()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)sub_1ACE74F68();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initWithDataRepresentation_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_1ACE74D78();

    swift_willThrow();
  }
  return v2;
}

unint64_t sub_1ACC4EDC0()
{
  unint64_t result = qword_1E99F4060;
  if (!qword_1E99F4060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4060);
  }
  return result;
}

uint64_t sub_1ACC4EE14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShazamSignatureRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACC4EE78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShazamSignatureRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1ACC4EED8()
{
  unint64_t result = qword_1E99F4070;
  if (!qword_1E99F4070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4070);
  }
  return result;
}

uint64_t sub_1ACC4EF2C()
{
  return sub_1ACC4F4C4(&qword_1EB76A398, (void (*)(uint64_t))type metadata accessor for ShazamSignatureRequest);
}

uint64_t getEnumTagSinglePayload for ShazamSignatureRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACC4EF88);
}

uint64_t sub_1ACC4EF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ShazamSignatureRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACC4F064);
}

uint64_t sub_1ACC4F064(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

void sub_1ACC4F128()
{
  sub_1ACBD7EC8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for ShazamSignatureRequest.SignatureError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACC4F280);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamSignatureRequest.SignatureError()
{
  return &type metadata for ShazamSignatureRequest.SignatureError;
}

unsigned char *storeEnumTagSinglePayload for ShazamSignatureRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC4F384);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamSignatureRequest.CodingKeys()
{
  return &type metadata for ShazamSignatureRequest.CodingKeys;
}

unint64_t sub_1ACC4F3C0()
{
  unint64_t result = qword_1E99F4078;
  if (!qword_1E99F4078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4078);
  }
  return result;
}

unint64_t sub_1ACC4F418()
{
  unint64_t result = qword_1E99F4080;
  if (!qword_1E99F4080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4080);
  }
  return result;
}

unint64_t sub_1ACC4F470()
{
  unint64_t result = qword_1E99F4088;
  if (!qword_1E99F4088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4088);
  }
  return result;
}

uint64_t sub_1ACC4F4C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void static CGImageResizer.convertImage(at:to:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t CGImageResizer.resizeOptions(size:displayScale:)(double a1, double a2, double a3)
{
  sub_1ACC5040C();
  unsigned int v6 = (void *)*MEMORY[0x1E4F2FF68];
  if (a1 > a2) {
    double v7 = a1;
  }
  else {
    double v7 = a2;
  }
  uint64_t v14 = MEMORY[0x1E4FBC958];
  v13[0] = v7 * a3;
  sub_1ACA3AA44(v13, v12);
  id v8 = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1ACD0C98C(v12, v8, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  type metadata accessor for CFString(0);
  sub_1ACC5069C(&qword_1EB770678, type metadata accessor for CFString);
  uint64_t v10 = sub_1ACE75FC8();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t CGImageResizer.resizedImage(at:to:displayScale:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v80 = a2;
  uint64_t v9 = sub_1ACE74F28();
  uint64_t v81 = *(void *)(v9 - 8);
  uint64_t v10 = ((uint64_t (*)(uint64_t))MEMORY[0x1F4188790])(v9);
  uint64_t v12 = (char *)v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = ((uint64_t (*)(uint64_t))MEMORY[0x1F4188790])(v10);
  uint64_t v15 = (char *)v77 - v14;
  uint64_t v16 = ((uint64_t (*)(uint64_t))MEMORY[0x1F4188790])(v13);
  uint64_t v18 = (char *)v77 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)v77 - v19;
  uint64_t v21 = (void *)CGImageResizer.resizeOptions(size:displayScale:)(a3, a4, a5);
  if (qword_1EB773090 != -1) {
    swift_once();
  }
  sub_1ACC50080((uint64_t)v20);
  CFURLRef v22 = (const __CFURL *)sub_1ACE74E18();
  id v83 = v21;
  CGImageSourceRef v23 = CGImageSourceCreateWithURL(v22, (CFDictionaryRef)v21);

  uint64_t v82 = v20;
  if (!v23)
  {
    uint64_t v36 = v9;
    if (qword_1EB772F18 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_1ACE754C8();
    __swift_project_value_buffer(v39, (uint64_t)qword_1EB772EF8);
    uint64_t v35 = v81;
    (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v12, a1, v36);
    uint64_t v40 = sub_1ACE75498();
    os_log_type_t v41 = sub_1ACE76BE8();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v85 = v43;
      *(_DWORD *)uint64_t v42 = 136315138;
      sub_1ACC5069C((unint64_t *)&qword_1EB771B10, MEMORY[0x1E4F276F0]);
      uint64_t v44 = sub_1ACE777C8();
      uint64_t v84 = sub_1ACA3189C(v44, v45, &v85);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      uint64_t v46 = *(void (**)(char *, uint64_t))(v35 + 8);
      v46(v12, v36);
      _os_log_impl(&dword_1AC9D5000, v40, v41, "Unable to create CGSource from URL: %s", v42, 0xCu);
      uint64_t v38 = 1;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v43, -1, -1);
      MEMORY[0x1AD11B340](v42, -1, -1);

      v46(v82, v36);
LABEL_30:
      uint64_t v37 = v80;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v37, v38, 1, v36);
    }

    unint64_t v58 = *(void (**)(char *, uint64_t))(v35 + 8);
    v58(v12, v36);

    v58(v82, v36);
LABEL_29:
    uint64_t v38 = 1;
    goto LABEL_30;
  }
  uint64_t v24 = v23;
  CFURLRef v25 = (const __CFURL *)sub_1ACE74E18();
  uint64_t v26 = (__CFString *)ArtworkFormat.cgIdentifier.getter(byte_1EB773080);
  CGImageDestinationRef v27 = CGImageDestinationCreateWithURL(v25, v26, 1uLL, 0);

  uint64_t v28 = v9;
  if (v27)
  {
    uint64_t v29 = v27;
    char v30 = v24;
    id v31 = v83;
    ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(v24, 0, (CFDictionaryRef)v83);
    if (ThumbnailAtIndex)
    {
      uint64_t v33 = ThumbnailAtIndex;
      CGImageDestinationAddImage(v29, ThumbnailAtIndex, 0);
      BOOL v34 = CGImageDestinationFinalize(v29);
      uint64_t v35 = v81;
      uint64_t v36 = v28;
      if (v34)
      {

        uint64_t v37 = v80;
        (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v80, v82, v28);
        uint64_t v38 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v37, v38, 1, v36);
      }
      uint64_t v69 = v31;
      if (qword_1EB772F18 != -1) {
        swift_once();
      }
      uint64_t v70 = sub_1ACE754C8();
      __swift_project_value_buffer(v70, (uint64_t)qword_1EB772EF8);
      uint64_t v71 = sub_1ACE75498();
      os_log_type_t v72 = sub_1ACE76BE8();
      if (os_log_type_enabled(v71, v72))
      {
        uint64_t v73 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v73 = 0;
        _os_log_impl(&dword_1AC9D5000, v71, v72, "Encountered unspecified error finalizing resize destination.", v73, 2u);
        MEMORY[0x1AD11B340](v73, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v35 + 8))(v82, v36);
      goto LABEL_29;
    }
    uint64_t v35 = v81;
    uint64_t v36 = v28;
    if (qword_1EB772F18 != -1) {
      swift_once();
    }
    uint64_t v59 = sub_1ACE754C8();
    __swift_project_value_buffer(v59, (uint64_t)qword_1EB772EF8);
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v18, a1, v28);
    uint64_t v60 = sub_1ACE75498();
    os_log_type_t v61 = sub_1ACE76BE8();
    if (os_log_type_enabled(v60, v61))
    {
      unint64_t v62 = (uint8_t *)swift_slowAlloc();
      uint64_t v79 = swift_slowAlloc();
      uint64_t v85 = v79;
      uint64_t v78 = v62;
      *(_DWORD *)unint64_t v62 = 136315138;
      v77[1] = v62 + 4;
      sub_1ACC5069C((unint64_t *)&qword_1EB771B10, MEMORY[0x1E4F276F0]);
      uint64_t v63 = sub_1ACE777C8();
      uint64_t v84 = sub_1ACA3189C(v63, v64, &v85);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      char v65 = v30;
      uint64_t v66 = *(void (**)(char *, uint64_t))(v35 + 8);
      v66(v18, v28);
      uint64_t v67 = v78;
      _os_log_impl(&dword_1AC9D5000, v60, v61, "Unable to create thumbnail from artwork at URL: %s", v78, 0xCu);
      uint64_t v38 = 1;
      uint64_t v68 = v79;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v68, -1, -1);
      MEMORY[0x1AD11B340](v67, -1, -1);

      uint64_t v36 = v28;
      v66(v82, v28);
      goto LABEL_30;
    }

    unint64_t v75 = *(void (**)(char *, uint64_t))(v35 + 8);
    v75(v18, v28);

    v75(v82, v28);
    goto LABEL_29;
  }
  id v47 = v83;
  if (qword_1EB772F18 != -1) {
    swift_once();
  }
  uint64_t v48 = sub_1ACE754C8();
  __swift_project_value_buffer(v48, (uint64_t)qword_1EB772EF8);
  uint64_t v49 = v81;
  uint64_t v50 = v82;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v15, v82, v28);
  unint64_t v51 = sub_1ACE75498();
  os_log_type_t v52 = sub_1ACE76BE8();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    uint64_t v85 = v54;
    *(_DWORD *)uint64_t v53 = 136315138;
    uint64_t v79 = (uint64_t)(v53 + 4);
    sub_1ACC5069C((unint64_t *)&qword_1EB771B10, MEMORY[0x1E4F276F0]);
    uint64_t v55 = sub_1ACE777C8();
    uint64_t v84 = sub_1ACA3189C(v55, v56, &v85);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    uint64_t v57 = *(void (**)(char *, uint64_t))(v49 + 8);
    v57(v15, v28);
    _os_log_impl(&dword_1AC9D5000, v51, v52, "Unable to create destination for temporary URL: %s", v53, 0xCu);
    uint64_t v38 = 1;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v54, -1, -1);
    MEMORY[0x1AD11B340](v53, -1, -1);

    v57(v82, v28);
  }
  else
  {

    uint64_t v74 = *(void (**)(char *, uint64_t))(v49 + 8);
    v74(v15, v28);

    v74(v50, v28);
    uint64_t v38 = 1;
  }
  uint64_t v37 = v80;
  uint64_t v35 = v49;
  uint64_t v36 = v28;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v37, v38, 1, v36);
}

uint64_t sub_1ACC50080@<X0>(uint64_t a1@<X8>)
{
  v16[1] = a1;
  uint64_t v1 = sub_1ACE75118();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unsigned int v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v16 - v10;
  id v12 = objc_msgSend(self, sel_defaultManager);
  id v13 = objc_msgSend(v12, sel_temporaryDirectory);

  sub_1ACE74E98();
  sub_1ACE75108();
  sub_1ACE750C8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1ACE74E38();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  void v16[2] = 0x697365722E706D74;
  void v16[3] = 0xEB000000002E657ALL;
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE74E48();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
}

BOOL static CGImageResizer.ConversionError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CGImageResizer.ConversionError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t CGImageResizer.ConversionError.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC503F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  return CGImageResizer.resizedImage(at:to:displayScale:)(a1, a2, a3, a4, a5);
}

unint64_t sub_1ACC5040C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7707C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84630;
  uint64_t v1 = (void *)*MEMORY[0x1E4F2FF00];
  *(void *)(inited + 32) = *MEMORY[0x1E4F2FF00];
  uint64_t v2 = MEMORY[0x1E4FBB390];
  uint64_t v3 = (void **)MEMORY[0x1E4F2FE28];
  *(unsigned char *)(inited + 40) = 1;
  unsigned int v4 = *v3;
  *(void *)(inited + 64) = v2;
  *(void *)(inited + 72) = v4;
  uint64_t v5 = (void **)MEMORY[0x1E4F2FE48];
  *(unsigned char *)(inited + 80) = 1;
  uint64_t v6 = *v5;
  *(void *)(inited + 104) = v2;
  *(void *)(inited + 112) = v6;
  uint64_t v7 = (void **)MEMORY[0x1E4F2FF88];
  *(unsigned char *)(inited + 120) = 1;
  uint64_t v8 = *v7;
  *(void *)(inited + 144) = v2;
  *(void *)(inited + 152) = v8;
  *(void *)(inited + 184) = v2;
  *(unsigned char *)(inited + 160) = 1;
  id v9 = v1;
  id v10 = v4;
  id v11 = v6;
  id v12 = v8;
  return sub_1ACA36998(inited);
}

void sub_1ACC504D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1ACC5040C();
  type metadata accessor for CFString(0);
  sub_1ACC5069C(&qword_1EB770678, type metadata accessor for CFString);
  CFDictionaryRef v4 = (const __CFDictionary *)sub_1ACE75FC8();
  swift_bridgeObjectRelease();
  sub_1ACE74EC8();
  uint64_t v5 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)CGImageSourceCreateWithFile();

  if (!v6) {
    goto LABEL_6;
  }
  CFURLRef v7 = (const __CFURL *)sub_1ACE74E18();
  uint64_t v8 = (__CFString *)ArtworkFormat.cgIdentifier.getter(*(unsigned char *)(a3 + 152));
  id v9 = CGImageDestinationCreateWithURL(v7, v8, 1uLL, v4);

  if (!v9)
  {

LABEL_6:
    sub_1ACC50850();
    swift_allocError();
    *id v10 = 0;
    swift_willThrow();
    goto LABEL_8;
  }
  CGImageDestinationAddImageFromSource(v9, (CGImageSourceRef)v6, 0, v4);
  if (CGImageDestinationFinalize(v9))
  {

    return;
  }
  sub_1ACC50850();
  swift_allocError();
  *id v11 = 1;
  swift_willThrow();

  CFDictionaryRef v4 = v9;
LABEL_8:
}

uint64_t sub_1ACC5069C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACC506E8()
{
  unint64_t result = qword_1E99F4090;
  if (!qword_1E99F4090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4090);
  }
  return result;
}

ValueMetadata *type metadata accessor for CGImageResizer()
{
  return &type metadata for CGImageResizer;
}

unsigned char *storeEnumTagSinglePayload for CGImageResizer.ConversionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC50818);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CGImageResizer.ConversionError()
{
  return &type metadata for CGImageResizer.ConversionError;
}

unint64_t sub_1ACC50850()
{
  unint64_t result = qword_1E99F4098;
  if (!qword_1E99F4098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4098);
  }
  return result;
}

BOOL static ArtworkAspectRule.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ArtworkAspectRule.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t ArtworkAspectRule.hashValue.getter()
{
  return sub_1ACE77B78();
}

unint64_t sub_1ACC50934()
{
  unint64_t result = qword_1E99F40A0;
  if (!qword_1E99F40A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F40A0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ArtworkAspectRule(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC50A54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkAspectRule()
{
  return &type metadata for ArtworkAspectRule;
}

uint64_t sub_1ACC50A8C(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE750A8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1ACA50E78(a1, (uint64_t *)&unk_1EB773140);
    sub_1ACA6949C(a2, (uint64_t)v8);
    return sub_1ACA50E78((uint64_t)v8, (uint64_t *)&unk_1EB773140);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *int v3 = 0x8000000000000000;
    sub_1ACD0CF10((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *int v3 = v16;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACC50C48(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB76B3A0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StoreFeedUpdater.Update(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1ACA50E78(a1, qword_1EB76B3A0);
    uint64_t v13 = sub_1ACA6A1FC(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *int v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1ACD071BC();
        uint64_t v17 = v21;
      }
      sub_1ACC52554(*(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, (uint64_t)v8, type metadata accessor for StoreFeedUpdater.Update);
      sub_1ACB1BFE4(v15, v17);
      *int v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_1ACA50E78((uint64_t)v8, qword_1EB76B3A0);
  }
  else
  {
    sub_1ACC52554(a1, (uint64_t)v12, type metadata accessor for StoreFeedUpdater.Update);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *int v3 = 0x8000000000000000;
    sub_1ACD0D22C((uint64_t)v12, a2, v18);
    *int v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACC50EA8(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB76B2F8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StoreFeedUpdater.Retry(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1ACA50E78(a1, qword_1EB76B2F8);
    uint64_t v13 = sub_1ACA6A1FC(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *int v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1ACD071FC();
        uint64_t v17 = v21;
      }
      sub_1ACC52554(*(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, (uint64_t)v8, type metadata accessor for StoreFeedUpdater.Retry);
      sub_1ACB1C194(v15, v17);
      *int v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_1ACA50E78((uint64_t)v8, qword_1EB76B2F8);
  }
  else
  {
    sub_1ACC52554(a1, (uint64_t)v12, type metadata accessor for StoreFeedUpdater.Retry);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *int v3 = 0x8000000000000000;
    sub_1ACD0D3E8((uint64_t)v12, a2, v18);
    *int v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACC51108(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1EC8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ThinClientEpisodeStateModel();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1ACA50E78(a1, &qword_1E99F1EC8);
    uint64_t v13 = sub_1ACA65CC4(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *int v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1ACD07DB8();
        uint64_t v17 = v21;
      }
      sub_1ACC52554(*(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
      sub_1ACB1C4A4(v15, v17);
      *int v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_1ACA50E78((uint64_t)v8, &qword_1E99F1EC8);
  }
  else
  {
    sub_1ACC52554(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *int v3 = 0x8000000000000000;
    sub_1ACD0DA10((uint64_t)v12, a2, v18);
    *int v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACC51368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_1ACA3AA44((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *int v3 = 0x8000000000000000;
    sub_1ACD0E2A4(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *int v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ACA50E78(a1, qword_1EB7725E0);
    sub_1ACA696D0(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_1ACA50E78((uint64_t)v9, qword_1EB7725E0);
  }
}

uint64_t sub_1ACC51440(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771B08);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE74898();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1ACA50E78(a1, &qword_1EB771B08);
    unint64_t v13 = sub_1ACA65E48(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *int v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1ACD08F7C();
        uint64_t v17 = v21;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, v9);
      sub_1ACB1D418(v15, v17);
      *int v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_1ACA50E78((uint64_t)v8, &qword_1EB771B08);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *int v3 = 0x8000000000000000;
    sub_1ACD0E93C((uint64_t)v12, a2, v18);
    *int v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACC5169C(uint64_t a1, unsigned __int8 a2)
{
  int v3 = v2;
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1ACD0EDC4(a1, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1ACA65B8C(a2);
    char v9 = v8;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      return result;
    }
    int v11 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v2;
    uint64_t v14 = *v3;
    *int v3 = 0x8000000000000000;
    if (!v11)
    {
      sub_1ACD094AC();
      uint64_t v12 = v14;
    }
    sub_1ACB1D908(v7, v12);
    *int v3 = v12;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC51794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *int v3 = 0x8000000000000000;
    sub_1ACD0EEFC(a1, a2, a3, isUniquelyReferenced_nonNull_native);
    *int v3 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1ACA657FC(a2, a3);
    char v11 = v10;
    swift_bridgeObjectRelease();
    if (v11)
    {
      char v12 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v13 = *v3;
      uint64_t v16 = *v4;
      *unsigned int v4 = 0x8000000000000000;
      if ((v12 & 1) == 0)
      {
        sub_1ACD09650();
        uint64_t v13 = v16;
      }
      swift_bridgeObjectRelease();
      sub_1ACB1B6A4(v9, v13);
      *unsigned int v4 = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
    {
      __break(0xC471u);
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t Dictionary<>.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  if (*(void *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_1ACC524A8(a1, a2);
    if (v13)
    {
      sub_1ACA33128(*(void *)(a3 + 56) + 32 * v12, (uint64_t)&v15);
      swift_bridgeObjectRelease();
      if (*((void *)&v16 + 1))
      {
        sub_1ACA3AA44(&v15, v17);
        sub_1ACA33128((uint64_t)v17, (uint64_t)&v15);
        (*(void (**)(long long *, uint64_t, uint64_t))(a5 + 8))(&v15, a4, a5);
        return __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
      }
    }
    else
    {
      long long v15 = 0u;
      long long v16 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  sub_1ACA50E78((uint64_t)&v15, qword_1EB7725E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(a6, 1, 1, a4);
}

uint64_t sub_1ACC51A2C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(uint64_t *)((char *)a3 + a4 - 16);
  uint64_t v6 = *(uint64_t *)((char *)a3 + a4 - 8);
  uint64_t v7 = *a3;
  uint64_t v8 = a3[1];
  swift_bridgeObjectRetain();
  j___sSD18PodcastsFoundationSSRszypRs_rlE8addValue_8forFieldyqd__Sg_AA07MetricsF0Vyqd__GtAA0gF13RepresentableRd__lF(a1, v7, v8, v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t Dictionary<>.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  j___sSD18PodcastsFoundationSSRszypRs_rlE8addValue_8forFieldyqd__Sg_AA07MetricsF0Vyqd__GtAA0gF13RepresentableRd__lF(a1, a2, a3, a4, a5);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1ACE76FD8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(a1, v6);
}

uint64_t Dictionary<>.addValue<A>(_:forField:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v20)(void *__return_ptr, uint64_t, uint64_t);
  void v22[4];

  uint64_t v10 = sub_1ACE76FD8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v13 = (char *)v22 - v12;
  uint64_t v14 = *(void *)(a4 - 8);
  __n128 v16 = MEMORY[0x1F4188790](v15);
  char v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v13, a1, v10, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return Dictionary<>.removeValue<A>(forField:)(a2, a3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v13, a4);
    uint64_t v20 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 16);
    swift_bridgeObjectRetain();
    v20(v22, a4, a5);
    sub_1ACC51368((uint64_t)v22, a2, a3);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v18, a4);
  }
}

{
  void (*v9)(void *__return_ptr, uint64_t, uint64_t);
  void v11[4];

  uint64_t v9 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 16);
  swift_bridgeObjectRetain();
  v9(v11, a4, a5);
  return sub_1ACC51368((uint64_t)v11, a2, a3);
}

void (*Dictionary<>.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  uint64_t v11 = malloc(0x48uLL);
  *a1 = v11;
  _OWORD v11[3] = a5;
  void v11[4] = v5;
  v11[1] = a3;
  v11[2] = a4;
  *uint64_t v11 = a2;
  uint64_t v12 = sub_1ACE76FD8();
  v11[5] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  void v11[6] = v13;
  size_t v14 = *(void *)(v13 + 64);
  v11[7] = malloc(v14);
  uint64_t v15 = malloc(v14);
  v11[8] = v15;
  Dictionary<>.subscript.getter(a2, a3, *v5, a4, a5, (uint64_t)v15);
  return sub_1ACC51E58;
}

void sub_1ACC51E58(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  int v3 = (void *)(*a1)[7];
  unsigned int v4 = (void *)(*a1)[8];
  uint64_t v5 = (*a1)[5];
  uint64_t v6 = (*a1)[6];
  uint64_t v7 = (*a1)[3];
  uint64_t v8 = (*a1)[1];
  uint64_t v9 = (*a1)[2];
  uint64_t v10 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[7], v4, v5);
    swift_bridgeObjectRetain();
    Dictionary<>.addValue<A>(_:forField:)((uint64_t)v3, v10, v8, v9, v7);
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void (**)(void *, uint64_t))(v6 + 8);
    v11(v3, v5);
    v11(v4, v5);
  }
  else
  {
    swift_bridgeObjectRetain();
    Dictionary<>.addValue<A>(_:forField:)((uint64_t)v4, v10, v8, v9, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t Dictionary<>.addingValue<A>(_:forField:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v10)(void *__return_ptr, uint64_t, uint64_t);
  void v13[4];

  swift_bridgeObjectRetain();
  uint64_t v10 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a6 + 16);
  swift_bridgeObjectRetain();
  v10(v13, a5, a6);
  sub_1ACC51368((uint64_t)v13, a2, a3);
  return a4;
}

{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  CFURLRef v22 = a6;
  uint64_t v11 = sub_1ACE76FD8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  size_t v14 = (char *)&v22 - v13;
  uint64_t v15 = *(void *)(a5 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))(v14, a1, v11, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    CGImageSourceRef v23 = a4;
    swift_bridgeObjectRetain();
    Dictionary<>.removeValue<A>(forField:)(a2, a3);
    return v23;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v14, a5);
    uint64_t v20 = Dictionary<>.addingValue<A>(_:forField:)((uint64_t)v19, a2, a3, a4, a5, v22);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, a5);
  }
  return v20;
}

uint64_t Dictionary<>.removeValue<A>(forField:)(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_1ACA696D0(a1, a2, v5);
  swift_bridgeObjectRelease();
  return sub_1ACA50E78((uint64_t)v5, qword_1EB7725E0);
}

uint64_t Dictionary<>.removingValue<A>(forField:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t Dictionary<>.init(metricsFieldValue:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770968);
  if (swift_dynamicCast()) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t Dictionary<>.metricsFieldRepresentation()@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770968);
  *a2 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACC5243C@<X0>(void *a1@<X8>)
{
  uint64_t result = swift_dynamicCast();
  uint64_t v3 = v4;
  if (!result) {
    uint64_t v3 = 0;
  }
  *a1 = v3;
  return result;
}

uint64_t sub_1ACC52494@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *v2;
  a2[3] = a1;
  *a2 = v3;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1ACC524A8(uint64_t a1, uint64_t a2)
{
  sub_1ACE77B18();
  sub_1ACE76108();
  uint64_t v4 = sub_1ACE77B78();
  return sub_1ACA669A4(a1, a2, v4);
}

uint64_t sub_1ACC52524@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return Dictionary<>.subscript.getter(*a2, a2[1], *a1, *(uint64_t *)((char *)a2 + a3 - 16), *(uint64_t *)((char *)a2 + a3 - 8), a4);
}

uint64_t sub_1ACC5253C()
{
  return 16;
}

__n128 sub_1ACC52548(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1ACC52554(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t NSManagedObjectContext.performAndPublish<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ACC53264(a1, a2, a3);
}

uint64_t sub_1ACC525DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1ACC52604@<X0>(void (*a1)(unsigned char *)@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1ACE77C08();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v11[-v8];
  a1(v5);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v7 + 32))(a2, v9, v6);
}

uint64_t NSManagedObjectContext.performAndWait<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v21 = a4;
  uint64_t v22 = sub_1ACE76FD8();
  uint64_t v9 = *(void *)(v22 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v22);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  size_t v14 = (char *)&v21 - v13;
  uint64_t v15 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))((char *)&v21 - v13, 1, 1, a3);
  __n128 v16 = (void *)swift_allocObject();
  void v16[2] = a3;
  void v16[3] = v14;
  void v16[4] = a1;
  v16[5] = a2;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1ACC53474;
  *(void *)(v17 + 24) = v16;
  aBlock[4] = sub_1ACB5C124;
  void aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC525DC;
  aBlock[3] = &block_descriptor_46;
  char v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_performBlockAndWait_, v18);
  _Block_release(v18);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v5)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = v22;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v22);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, a3);
    if (result != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v21, v12, a3);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v20);
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t NSManagedObjectContext.performAndPublish<A>(queue:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1ACE759E8();
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = a4;
  v9[3] = v4;
  void v9[4] = a2;
  v9[5] = a3;
  void v9[6] = a1;
  id v10 = v4;
  swift_retain();
  id v11 = a1;
  return sub_1ACE759F8();
}

uint64_t sub_1ACC52B54(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1ACE76FD8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v13 - v10;
  a2(v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(v11, 0, 1, a4);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 40))(a1, v11, v7);
}

void sub_1ACC52C74(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  size_t v14 = (void *)swift_allocObject();
  void v14[2] = a7;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = a6;
  void v14[6] = a1;
  v14[7] = a2;
  v17[4] = sub_1ACC54078;
  v17[5] = v14;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  _OWORD v17[2] = sub_1ACA6DA9C;
  _OWORD v17[3] = &block_descriptor_39_0;
  uint64_t v15 = _Block_copy(v17);
  swift_retain();
  id v16 = a6;
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_performBlock_, v15);
  _Block_release(v15);
}

uint64_t sub_1ACC52D8C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v34 = a3;
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v33 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE75E48();
  uint64_t v31 = *(void *)(v11 - 8);
  uint64_t v32 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  size_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a6 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = MEMORY[0x1F4188790](v12);
  char v18 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v28 - v20;
  a1(v19);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v21, a6);
  unint64_t v22 = (*(unsigned __int8 *)(v15 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  CGImageSourceRef v23 = (char *)swift_allocObject();
  uint64_t v24 = v29;
  uint64_t v25 = v30;
  *((void *)v23 + 2) = a6;
  *((void *)v23 + 3) = v24;
  *((void *)v23 + 4) = v25;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v23[v22], v18, a6);
  aBlock[4] = sub_1ACC5414C;
  void aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_45_1;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACE75E08();
  uint64_t v35 = MEMORY[0x1E4FBC860];
  sub_1ACA55D24();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA55D7C();
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v14, v10, v26);
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v32);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v21, a6);
  return swift_release();
}

uint64_t sub_1ACC53108(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1ACE77C08();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))((char *)&v12 - v9, a3, a4);
  swift_storeEnumTagMultiPayload();
  a1(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t NSManagedObjectContext.perform<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ACC53264(a1, a2, a3);
}

uint64_t sub_1ACC53264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  sub_1ACE759E8();
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = a3;
  v7[3] = v3;
  v7[4] = a1;
  v7[5] = a2;
  id v8 = v3;
  swift_retain();
  return sub_1ACE759F8();
}

void sub_1ACC5330C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a6;
  void v16[3] = a1;
  void v16[4] = a2;
  v16[5] = a4;
  v16[6] = a5;
  v16[7] = a3;
  _OWORD v19[4] = a8;
  v19[5] = v16;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 1107296256;
  void v19[2] = sub_1ACA6DA9C;
  uint64_t v19[3] = a9;
  uint64_t v17 = _Block_copy(v19);
  swift_retain();
  swift_retain();
  id v18 = a3;
  swift_release();
  objc_msgSend(v18, sel_performBlock_, v17);
  _Block_release(v17);
}

void sub_1ACC53414(uint64_t a1, uint64_t a2)
{
  sub_1ACC5330C(a1, a2, *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 16), (uint64_t)&unk_1F0392808, (uint64_t)sub_1ACC54000, (uint64_t)&block_descriptor_51_0);
}

uint64_t sub_1ACC53464()
{
  return swift_deallocObject();
}

uint64_t sub_1ACC53474()
{
  return sub_1ACC52B54(*(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 16));
}

uint64_t sub_1ACC53480()
{
  return swift_deallocObject();
}

uint64_t sub_1ACC53490()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACC534D8(uint64_t a1, uint64_t a2)
{
  sub_1ACC52C74(a1, a2, *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48), *(void *)(v2 + 16));
}

void sub_1ACC534EC(uint64_t a1, uint64_t a2)
{
  sub_1ACC5330C(a1, a2, *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 16), (uint64_t)&unk_1F0392718, (uint64_t)sub_1ACC54000, (uint64_t)&block_descriptor_33_1);
}

uint64_t sub_1ACC5353C(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(unsigned char *))
{
  v18[1] = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  uint64_t v13 = sub_1ACE77C08();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v18 - v15;
  void v18[4] = a6;
  v18[5] = a3;
  v18[6] = a4;
  uint64_t v18[7] = a5;
  sub_1ACC52604(a7, (uint64_t)v18 - v15);
  a1(v16);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t NSManagedObjectContext.fetchListAndPublish<A, B>(entityName:predicate:sortDescriptors:limit:receiveOn:transform:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1ACE759E8();
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = a9;
  _OWORD v17[3] = a10;
  v17[4] = v10;
  v17[5] = a1;
  void v17[6] = a2;
  v17[7] = a3;
  v17[8] = a4;
  v17[9] = a5;
  v17[10] = a7;
  v17[11] = a8;
  v17[12] = a6;
  id v18 = v10;
  swift_bridgeObjectRetain();
  id v19 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  id v20 = a6;
  return sub_1ACE759F8();
}

void sub_1ACC53780(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13)
{
  id v19 = (void *)swift_allocObject();
  void v19[2] = a12;
  uint64_t v19[3] = a13;
  _OWORD v19[4] = a4;
  v19[5] = a5;
  void v19[6] = a6;
  v19[7] = a7;
  v19[8] = a8;
  v19[9] = a3;
  v19[10] = a9;
  v19[11] = a10;
  v19[12] = a11;
  v19[13] = a1;
  v19[14] = a2;
  aBlock[4] = sub_1ACC53E6C;
  void aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_21_1;
  id v20 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v21 = a6;
  swift_bridgeObjectRetain();
  id v22 = a3;
  swift_retain();
  id v23 = a11;
  swift_retain();
  swift_release();
  objc_msgSend(v22, sel_performBlock_, v20);
  _Block_release(v20);
}

uint64_t sub_1ACC538EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1ACC5394C(uint64_t a1, uint64_t a2)
{
  sub_1ACC53780(a1, a2, *(void **)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void **)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88), *(void **)(v2 + 96), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1ACC53990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v39 = a8;
  uint64_t v40 = a7;
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  v36[1] = a4;
  uint64_t v41 = a10;
  uint64_t v42 = a11;
  uint64_t v46 = a9;
  uint64_t v14 = sub_1ACE75DC8();
  uint64_t v47 = *(void *)(v14 - 8);
  uint64_t v48 = v14;
  MEMORY[0x1F4188790](v14);
  unint64_t v45 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1ACE75E48();
  uint64_t v43 = *(void *)(v16 - 8);
  uint64_t v44 = v16;
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a12;
  uint64_t v19 = *(void *)(a12 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  MEMORY[0x1F4188790](v21);
  id v22 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)v36 - v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768EA0);
  swift_bridgeObjectRetain();
  id v26 = sub_1ACD934C8();
  objc_msgSend(v26, sel_setPredicate_, a3);
  sub_1ACC53EB4();
  CGImageDestinationRef v27 = (void *)sub_1ACE76558();
  objc_msgSend(v26, sel_setSortDescriptors_, v27);

  objc_msgSend(v26, sel_setFetchLimit_, v37);
  sub_1ACE76EE8();
  v40();
  swift_bridgeObjectRelease();
  uint64_t v28 = v49;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v22, v25, v49);
  unint64_t v29 = (*(unsigned __int8 *)(v19 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v30 = (char *)swift_allocObject();
  *((void *)v30 + 2) = v28;
  *((void *)v30 + 3) = a13;
  uint64_t v31 = v42;
  *((void *)v30 + 4) = v41;
  *((void *)v30 + 5) = v31;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v30[v29], v22, v28);
  aBlock[4] = sub_1ACC53FB8;
  void aBlock[5] = v30;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_27_1;
  uint64_t v32 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACE75E08();
  uint64_t v50 = MEMORY[0x1E4FBC860];
  sub_1ACA55D24();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA55D7C();
  uint64_t v33 = v45;
  uint64_t v34 = v48;
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v18, v33, v32);
  _Block_release(v32);

  (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v34);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v44);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v28);
  return swift_release();
}

uint64_t sub_1ACC53E04()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC53E6C()
{
  return sub_1ACC53990(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void (**)(void))(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_1ACC53EB4()
{
  unint64_t result = qword_1EB768EB0;
  if (!qword_1EB768EB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB768EB0);
  }
  return result;
}

uint64_t sub_1ACC53EF4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1ACC53FB8()
{
  return sub_1ACC53108(*(void (**)(char *))(v0 + 32), *(void *)(v0 + 40), v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)), *(void *)(v0 + 16));
}

uint64_t sub_1ACC54000()
{
  return sub_1ACC54194((void (*)(unsigned char *))sub_1ACC54018);
}

uint64_t sub_1ACC54018(void *a1)
{
  return sub_1ACC541BC(a1);
}

uint64_t sub_1ACC54030()
{
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC54078()
{
  return sub_1ACC52D8C(*(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 16));
}

uint64_t sub_1ACC54088()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1ACC5414C()
{
  return sub_1ACC53108(*(void (**)(char *))(v0 + 24), *(void *)(v0 + 32), v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)), *(void *)(v0 + 16));
}

uint64_t sub_1ACC54194(void (*a1)(unsigned char *))
{
  return sub_1ACC5353C(*(void (**)(char *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16), a1);
}

uint64_t sub_1ACC541BC(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 24))(*(void *)(v1 + 40));
  if (v2) {
    *a1 = v2;
  }
  return result;
}

uint64_t StationDonationModel.stationUUID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StationDonationModel.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

PodcastsFoundation::StationDonationModel __swiftcall StationDonationModel.init(stationUUID:name:)(Swift::String stationUUID, Swift::String name)
{
  *uint64_t v2 = stationUUID;
  v2[1] = name;
  result.name = name;
  result.stationUUID = stationUUID;
  return result;
}

id sub_1ACC54280()
{
  return StationDonationModel.itemInstance()();
}

id StationDonationModel.itemInstance()()
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v2 = *(id *)(v0 + 8);
  id v3 = objc_allocWithZone(MEMORY[0x1E4F70B18]);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v22 = 0;
  id v5 = objc_msgSend(v3, sel_initWithName_error_, v4, &v22);

  id v6 = v22;
  if (v5)
  {
    id v7 = objc_allocWithZone(MEMORY[0x1E4F70B08]);
    id v22 = 0;
    id v8 = v5;
    id v9 = v6;
    id v10 = objc_msgSend(v7, sel_initWithEntity_entityType_error_, v8, 2, &v22);
    if (v10)
    {
      uint64_t v11 = v10;
      id v12 = v22;

      id v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1ACE77268();
      swift_bridgeObjectRelease();
      id v22 = (id)0xD000000000000029;
      unint64_t v23 = 0x80000001ACECDBA0;
      swift_bridgeObjectRetain();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      id v2 = (id)v23;
      id v13 = objc_allocWithZone(MEMORY[0x1E4F70B10]);
      id v14 = sub_1ACC54538();
      if (v1)
      {
      }
      else
      {
        id v18 = v14;
        id v19 = objc_allocWithZone(MEMORY[0x1E4F57F98]);
        id v22 = 0;
        id v20 = objc_msgSend(v19, sel_initWithContent_metaContent_error_, v11, v18, &v22);
        if (v20)
        {
          id v2 = v20;
          id v21 = v22;
        }
        else
        {
          id v2 = v22;
          sub_1ACE74D78();

          swift_willThrow();
        }
      }
    }
    else
    {
      id v16 = v22;
      sub_1ACE74D78();

      swift_willThrow();
    }
  }
  else
  {
    id v15 = v22;
    sub_1ACE74D78();

    swift_willThrow();
  }
  return v2;
}

id sub_1ACC54538()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initWithSourceItemIdentifier_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_1ACE74D78();

    swift_willThrow();
  }
  return v2;
}

void *initializeWithCopy for TranscriptModel.Speaker(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TranscriptModel.Speaker(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for TranscriptModel.Speaker(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptModel.Speaker(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptModel.Speaker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)PodcastsFoundation::StationDonationModel result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StationDonationModel()
{
  return &type metadata for StationDonationModel;
}

void sub_1ACC54794(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v4 - 8);
  v160 = (char *)&v158 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(a1, sel_title);
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = sub_1ACE761B8();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v10;
  id v11 = objc_msgSend(a1, sel_assetURL);
  if (v11 || (id v11 = objc_msgSend(a1, sel_enclosureURL)) != 0)
  {
    uint64_t v12 = sub_1ACE761B8();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  *(void *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = v14;
  id v15 = objc_msgSend(a1, sel_podcast);
  id v16 = v15;
  if (v15)
  {
    id v17 = objc_msgSend(v15, sel_feedURL);

    if (v17)
    {
      id v16 = (void *)sub_1ACE761B8();
      uint64_t v19 = v18;

      goto LABEL_12;
    }
    id v16 = 0;
  }
  uint64_t v19 = 0;
LABEL_12:
  *(void *)(a2 + 32) = v16;
  *(void *)(a2 + 40) = v19;
  id v20 = objc_msgSend(a1, sel_storeTrackId);
  if (v20)
  {
    uint64_t v21 = (uint64_t)objc_msgSend(a1, sel_storeTrackId);
    uint64_t v22 = v21 & ~(v21 >> 63);
  }
  else
  {
    uint64_t v22 = 0;
  }
  *(void *)(a2 + 48) = v22;
  *(unsigned char *)(a2 + 56) = v20 == 0;
  id v23 = objc_msgSend(a1, sel_podcast);
  if (!v23) {
    goto LABEL_18;
  }
  uint64_t v24 = v23;
  if (objc_msgSend(self, sel_isEmpty_, objc_msgSend(v23, sel_storeCollectionId)))
  {

LABEL_18:
    uint64_t v25 = 0;
    char v26 = 1;
    goto LABEL_20;
  }
  uint64_t v27 = (uint64_t)objc_msgSend(v24, sel_storeCollectionId);

  char v26 = 0;
  uint64_t v25 = v27 & ~(v27 >> 63);
LABEL_20:
  *(void *)(a2 + 64) = v25;
  *(unsigned char *)(a2 + 72) = v26;
  id v28 = objc_msgSend(a1, sel_podcast);
  unint64_t v29 = v28;
  if (v28)
  {
    id v30 = objc_msgSend(v28, sel_title);

    if (v30)
    {
      unint64_t v29 = (void *)sub_1ACE761B8();
      uint64_t v32 = v31;

      goto LABEL_25;
    }
    unint64_t v29 = 0;
  }
  uint64_t v32 = 0;
LABEL_25:
  uint64_t v33 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v34 = (void *)(a2 + v33[13]);
  void *v34 = v29;
  v34[1] = v32;
  objc_msgSend(a1, sel_duration);
  *(void *)(a2 + v33[14]) = v35;
  id v36 = objc_msgSend(a1, sel_podcast);
  if (v36)
  {
    uint64_t v37 = v36;
    char v38 = objc_msgSend(v36, sel_isSerialShowTypeInFeed);
  }
  else
  {
    char v38 = 0;
  }
  *(unsigned char *)(a2 + v33[31]) = v38;
  *(void *)(a2 + v33[29]) = objc_msgSend(a1, sel_episodeNumber);
  *(void *)(a2 + v33[30]) = objc_msgSend(a1, sel_seasonNumber);
  id v39 = objc_msgSend(a1, sel_podcast);
  if (v39
    && (v40 = v39, id v41 = objc_msgSend(v39, sel_imageURL), v40, v41))
  {
    sub_1ACE761B8();

    sub_1ACE74EF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v42 = a2 + v33[16];
    uint64_t v43 = sub_1ACE74F28();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 1, 1, v43);
  }
  id v44 = objc_msgSend(a1, sel_podcast);
  if (v44)
  {
    unint64_t v45 = v44;
    id v46 = objc_msgSend(v44, sel_artworkTemplateURL);

    if (v46) {
      goto LABEL_36;
    }
  }
  id v47 = objc_msgSend(a1, sel_podcast);
  uint64_t v48 = v47;
  if (v47)
  {
    id v46 = objc_msgSend(v47, sel_imageURL);

    if (v46)
    {
LABEL_36:
      uint64_t v48 = (void *)sub_1ACE761B8();
      uint64_t v50 = v49;

      goto LABEL_39;
    }
    uint64_t v48 = 0;
  }
  uint64_t v50 = 0;
LABEL_39:
  unint64_t v51 = (void *)(a2 + v33[32]);
  void *v51 = v48;
  v51[1] = v50;
  id v52 = objc_msgSend(a1, sel_uuid);
  if (v52)
  {
    uint64_t v53 = v52;
    uint64_t v54 = sub_1ACE761B8();
    uint64_t v56 = v55;
  }
  else
  {
    uint64_t v54 = 0;
    uint64_t v56 = 0;
  }
  *(void *)(a2 + 80) = v54;
  *(void *)(a2 + 88) = v56;
  id v57 = objc_msgSend(a1, sel_guid);
  if (v57)
  {
    unint64_t v58 = v57;
    uint64_t v59 = sub_1ACE761B8();
    uint64_t v61 = v60;
  }
  else
  {
    uint64_t v59 = 0;
    uint64_t v61 = 0;
  }
  *(void *)(a2 + 96) = v59;
  *(void *)(a2 + 104) = v61;
  id v62 = objc_msgSend(self, sel_validatedIdNumberFromStoreId_, objc_msgSend(a1, sel_storeTrackId));
  if (v62)
  {
    uint64_t v63 = v62;
    id v64 = objc_msgSend(v62, sel_stringValue);
    uint64_t v65 = sub_1ACE761B8();
    uint64_t v67 = v66;
  }
  else
  {
    uint64_t v65 = 0;
    uint64_t v67 = 0;
  }
  *(void *)(a2 + 112) = v65;
  *(void *)(a2 + 120) = v67;
  objc_msgSend(a1, sel_playhead);
  uint64_t v69 = a2 + v33[15];
  *(double *)uint64_t v69 = v68;
  *(unsigned char *)(v69 + 8) = 0;
  *(unsigned char *)(a2 + v33[19]) = 1;
  id v70 = objc_msgSend(a1, sel_itemDescriptionWithoutHTML);
  if (v70)
  {
    uint64_t v71 = v70;
    uint64_t v72 = sub_1ACE761B8();
    uint64_t v74 = v73;
  }
  else
  {
    uint64_t v72 = 0;
    uint64_t v74 = 0;
  }
  unint64_t v75 = (uint64_t *)(a2 + v33[17]);
  uint64_t *v75 = v72;
  v75[1] = v74;
  uint64_t v76 = a2 + v33[20];
  objc_msgSend(a1, sel_pubDate);
  sub_1ACE74FA8();
  uint64_t v77 = sub_1ACE750A8();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v76, 0, 1, v77);
  uint64_t v78 = sub_1ACD1987C((uint64_t)objc_msgSend(a1, sel_episodeNumber), (uint64_t)objc_msgSend(a1, sel_seasonNumber), v38, v76);
  uint64_t v79 = (uint64_t *)(a2 + v33[21]);
  uint64_t *v79 = v78;
  v79[1] = v80;
  id v81 = objc_msgSend(a1, sel_podcast);
  if (v81
    && (v82 = v81, id v83 = objc_msgSend(v81, sel_channel), v82, v83))
  {
    unsigned int v84 = objc_msgSend(v83, sel_subscriptionActive);
  }
  else
  {
    unsigned int v84 = 0;
  }
  *(unsigned char *)(a2 + v33[22]) = v84;
  unsigned int v85 = objc_msgSend(a1, sel_isExplicit);
  *(unsigned char *)(a2 + v33[23]) = v85;
  *(unsigned char *)(a2 + v33[25]) = objc_msgSend(a1, sel_isEntitled) ^ 1;
  uint64_t v86 = a2 + v33[12];
  id v87 = objc_msgSend(a1, sel_objectID);
  id v88 = objc_msgSend(v87, sel_URIRepresentation);

  sub_1ACE74E98();
  uint64_t v89 = sub_1ACE74F28();
  uint64_t v90 = *(void *)(v89 - 8);
  uint64_t v91 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56);
  uint64_t v161 = v90 + 56;
  v91(v86, 0, 1, v89);
  BOOL v92 = 0;
  if (v85)
  {
    if (qword_1EB7712B0 != -1) {
      swift_once();
    }
    unint64_t v93 = *(os_unfair_lock_s **)(qword_1EB7712A0 + OBJC_IVAR___PFRestrictionsController__state);
    id v94 = v93 + 4;
    long long v95 = v93 + 6;
    os_unfair_lock_lock(v93 + 6);
    sub_1ACA30C84(v94, &v162);
    os_unfair_lock_unlock(v95);
    BOOL v92 = v162 != 0;
  }
  *(unsigned char *)(a2 + v33[24]) = v92;
  if (objc_msgSend(a1, sel_isAudio))
  {
    char v96 = 0;
  }
  else if (objc_msgSend(a1, sel_isVideo))
  {
    char v96 = 1;
  }
  else if (objc_msgSend(a1, sel_isExternalType))
  {
    char v96 = 4;
  }
  else
  {
    char v96 = 5;
  }
  *(unsigned char *)(a2 + v33[28]) = v96;
  id v97 = objc_msgSend(a1, sel_priceType);
  if (v97)
  {
    uint64_t v98 = v97;
    uint64_t v99 = sub_1ACE761B8();
    unint64_t v101 = v100;

    v102._countAndFlagsBits = v99;
    v102._object = v101;
    PriceType.init(rawValue:)(v102);
    char v103 = v162;
  }
  else
  {
    char v103 = 4;
  }
  *(unsigned char *)(a2 + v33[27]) = v103;
  *(unsigned char *)(a2 + v33[26]) = objc_msgSend(a1, sel_isDownloaded);
  *(void *)(a2 + v33[18]) = 0;
  id v104 = objc_msgSend(a1, sel_podcastUuid);
  if (v104)
  {
    uint64_t v105 = v104;
    uint64_t v106 = sub_1ACE761B8();
    uint64_t v108 = v107;
  }
  else
  {
    uint64_t v106 = 0;
    uint64_t v108 = 0;
  }
  v109 = (uint64_t *)(a2 + v33[37]);
  uint64_t *v109 = v106;
  v109[1] = v108;
  id v110 = objc_msgSend(a1, sel_podcast);
  if (v110)
  {
    v111 = v110;
    char v112 = MTPodcast.episodeSortType.getter();
  }
  else
  {
    char v112 = 1;
  }
  *(unsigned char *)(a2 + v33[39]) = v112;
  *(void *)(a2 + v33[33]) = sub_1ACC5B850();
  id v113 = objc_msgSend(a1, sel_podcast);
  if (v113)
  {
    v114 = v113;
    int v115 = objc_msgSend(v113, sel_hidesPlayedEpisodes);

    LOBYTE(v113) = MTPodcastHidesPlayedEpisodesResolved(v115);
  }
  *(unsigned char *)(a2 + v33[40]) = (_BYTE)v113;
  id v116 = objc_msgSend(a1, sel_transcriptIdentifier);
  if (v116)
  {
    v117 = v116;
    uint64_t v118 = sub_1ACE761B8();
    uint64_t v120 = v119;
  }
  else
  {
    uint64_t v118 = 0;
    uint64_t v120 = 0;
  }
  v121 = (uint64_t *)(a2 + v33[34]);
  uint64_t *v121 = v118;
  v121[1] = v120;
  id v122 = objc_msgSend(a1, sel_podcast);
  v123 = v122;
  if (v122)
  {
    id v124 = objc_msgSend(v122, sel_channel);

    if (v124)
    {
      id v125 = objc_msgSend(v124, sel_subscriptionOfferAppType);

      if (v125)
      {
        uint64_t v126 = sub_1ACE761B8();
        uint64_t v128 = v127;

        if (v126 == 1937204590 && v128 == 0xE400000000000000)
        {
          swift_bridgeObjectRelease();
          LOBYTE(v123) = 1;
        }
        else
        {
          LOBYTE(v123) = sub_1ACE77848();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        LOBYTE(v123) = 0;
      }
    }
    else
    {
      LOBYTE(v123) = 0;
    }
  }
  *(unsigned char *)(a2 + v33[41]) = v123 & 1;
  id v129 = objc_msgSend(a1, sel_podcast);
  v130 = v129;
  if (v129)
  {
    id v131 = objc_msgSend(v129, sel_channel);

    if (v131
      && (id v132 = objc_msgSend(v131, sel_subscriptionOfferAppType),
          v131,
          v132))
    {
      uint64_t v159 = v89;
      uint64_t v133 = sub_1ACE761B8();
      uint64_t v135 = v134;

      if (v133 == 0x636973756DLL && v135 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        LOBYTE(v130) = 1;
      }
      else
      {
        LOBYTE(v130) = sub_1ACE77848();
        swift_bridgeObjectRelease();
      }
      uint64_t v89 = v159;
    }
    else
    {
      LOBYTE(v130) = 0;
    }
  }
  *(unsigned char *)(a2 + v33[42]) = v130 & 1;
  if (v84) {
    id v136 = objc_msgSend(a1, sel_entitledTranscriptProvider);
  }
  else {
    id v136 = objc_msgSend(a1, sel_freeTranscriptProvider);
  }
  id v137 = v136;
  if (v137)
  {
    uint64_t v138 = sub_1ACE761B8();
    uint64_t v140 = v139;
  }
  else
  {
    uint64_t v138 = 0;
    uint64_t v140 = 0;
  }
  v141 = (uint64_t *)(a2 + v33[35]);
  uint64_t *v141 = v138;
  v141[1] = v140;
  v142 = (void *)(a2 + v33[38]);
  void *v142 = 0;
  v142[1] = 0;
  *(unsigned char *)(a2 + v33[43]) = 0;
  id v143 = objc_msgSend(a1, sel_podcast);
  if (v143
    && (v144 = v143,
        id v145 = objc_msgSend(v143, sel_storeCollectionId),
        v144,
        (uint64_t)objc_msgSend(a1, sel_storeTrackId) >= 1))
  {
    id v146 = objc_msgSend(self, sel_productURLForStoreCollectionId_storeTrackId_, v145, objc_msgSend(a1, sel_storeTrackId));
    if (v146)
    {
      v147 = v146;
      uint64_t v148 = (uint64_t)v160;
      sub_1ACE74E98();

      uint64_t v149 = 0;
    }
    else
    {
      uint64_t v149 = 1;
      uint64_t v148 = (uint64_t)v160;
    }
    v91(v148, v149, 1, v89);
    sub_1ACA50E14(v148, a2 + v33[36], &qword_1EB7731B0);
  }
  else
  {
    v91(a2 + v33[36], 1, 1, v89);
  }
  *(unsigned char *)(a2 + v33[44]) = objc_msgSend(a1, sel_feedDeleted);
  id v150 = objc_msgSend(a1, sel_podcast);
  if (v150)
  {
    v151 = v150;
    char v152 = sub_1ACC5BBC4();
  }
  else
  {
    char v152 = 4;
  }
  *(unsigned char *)(a2 + v33[45]) = v152;
  if (qword_1EB76EDD0 != -1) {
    swift_once();
  }
  uint64_t v153 = PageContextTracker.value.getter();
  uint64_t v155 = v154;

  if (v155) {
    uint64_t v156 = v153;
  }
  else {
    uint64_t v156 = 0;
  }
  v157 = (uint64_t *)(a2 + v33[46]);
  uint64_t *v157 = v156;
  v157[1] = v155;
}

uint64_t sub_1ACC55648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v92 = a1;
  uint64_t v93 = a2;
  uint64_t v102 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v57 - v11;
  uint64_t v79 = (uint64_t)&v57 - v11;
  uint64_t v13 = *(void *)v3;
  uint64_t v100 = *(void *)(v3 + 8);
  uint64_t v101 = v13;
  uint64_t v14 = *(void *)(v3 + 16);
  uint64_t v98 = *(void *)(v3 + 24);
  uint64_t v99 = v14;
  uint64_t v15 = *(void *)(v3 + 32);
  uint64_t v96 = *(void *)(v3 + 40);
  uint64_t v97 = v15;
  uint64_t v95 = *(void *)(v3 + 48);
  int v94 = *(unsigned __int8 *)(v3 + 56);
  uint64_t v91 = *(void *)(v3 + 64);
  int v90 = *(unsigned __int8 *)(v3 + 72);
  uint64_t v16 = *(void *)(v3 + 80);
  uint64_t v88 = *(void *)(v3 + 88);
  uint64_t v89 = v16;
  uint64_t v17 = *(void *)(v3 + 96);
  uint64_t v86 = *(void *)(v3 + 104);
  uint64_t v87 = v17;
  uint64_t v85 = *(void *)(v3 + 112);
  uint64_t v84 = *(void *)(v3 + 120);
  uint64_t v18 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v19 = v18[14];
  id v20 = (uint64_t *)(v3 + v18[13]);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  uint64_t v83 = v22;
  uint64_t v82 = v21;
  double v23 = *(double *)(v3 + v19);
  uint64_t v24 = v18[16];
  uint64_t v25 = v3 + v18[15];
  uint64_t v81 = *(void *)v25;
  int v80 = *(unsigned __int8 *)(v25 + 8);
  sub_1ACA3AAD4(v3 + v24, (uint64_t)v12, &qword_1EB7731B0);
  char v26 = (uint64_t *)(v3 + v18[17]);
  uint64_t v75 = *(void *)(v3 + v18[18]);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  uint64_t v77 = v28;
  uint64_t v76 = v27;
  uint64_t v29 = v18[20];
  int v73 = *(unsigned __int8 *)(v3 + v18[19]);
  sub_1ACA3AAD4(v3 + v29, (uint64_t)v6, (uint64_t *)&unk_1EB773140);
  id v30 = (uint64_t *)(v3 + v18[21]);
  int v68 = *(unsigned __int8 *)(v3 + v18[22]);
  uint64_t v31 = v18[24];
  int v67 = *(unsigned __int8 *)(v3 + v18[23]);
  int v66 = *(unsigned __int8 *)(v3 + v31);
  uint64_t v32 = v18[26];
  int v64 = *(unsigned __int8 *)(v3 + v18[25]);
  char v33 = *(unsigned char *)(v3 + v32);
  uint64_t v35 = *v30;
  uint64_t v34 = v30[1];
  uint64_t v65 = v35;
  uint64_t v103 = v34;
  v106[0] = v33;
  uint64_t v36 = v18[28];
  char v105 = *(unsigned char *)(v3 + v18[27]);
  char v104 = *(unsigned char *)(v3 + v36);
  uint64_t v37 = v18[30];
  uint64_t v63 = *(void *)(v3 + v18[29]);
  uint64_t v62 = *(void *)(v3 + v37);
  uint64_t v38 = v18[32];
  int v60 = *(unsigned __int8 *)(v3 + v18[31]);
  uint64_t v39 = *(void *)(v3 + v38 + 8);
  uint64_t v59 = *(void *)(v3 + v38);
  uint64_t v69 = v39;
  uint64_t v40 = v18[34];
  uint64_t v70 = *(void *)(v3 + v18[33]);
  uint64_t v41 = v70;
  uint64_t v42 = *(void *)(v3 + v40 + 8);
  uint64_t v58 = *(void *)(v3 + v40);
  uint64_t v71 = v42;
  char v43 = *(unsigned char *)(v3 + v18[41]);
  LOBYTE(v12) = *(unsigned char *)(v3 + v18[42]);
  id v44 = (uint64_t *)(v3 + v18[35]);
  uint64_t v45 = v3 + v18[36];
  uint64_t v47 = *v44;
  uint64_t v74 = v44[1];
  uint64_t v46 = v74;
  sub_1ACA3AAD4(v45, (uint64_t)v10, &qword_1EB7731B0);
  uint64_t v48 = (uint64_t *)(v3 + v18[37]);
  uint64_t v49 = *v48;
  uint64_t v78 = v48[1];
  LOBYTE(v48) = *(unsigned char *)(v3 + v18[43]);
  char v50 = *(unsigned char *)(v3 + v18[44]);
  char v51 = *(unsigned char *)(v3 + v18[45]);
  id v52 = (uint64_t *)(v3 + v18[46]);
  uint64_t v53 = *v52;
  uint64_t v61 = v52[1];
  *((void *)&v56 + 1) = v86;
  *(void *)&long long v56 = v87;
  *((void *)&v55 + 1) = v88;
  *(void *)&long long v55 = v89;
  PodcastsMediaLibrary.MediaItem.init(title:assetURL:feedURL:storeTrackId:podcastStoreId:uuid:guid:externalContentID:author:duration:playhead:artworkURL:itemDescription:serverArtwork:isSubscribable:releaseDate:album:isSubscriptionActive:isExplicit:isRestricted:subscriptionRequired:itemType:priceType:mediaKind:episodeNumber:seasonNumber:podcastIsSerial:showArtworkTemplateURL:artworkInfo:transcriptIdentifier:isAppleNewsEpisode:isAppleMusicEpisode:transcriptSource:shareURL:podcastUUID:restorationContentItemID:isShallow:feedDeleted:podcastSubscriptionState:podcastPageContext:)(v101, v100, v99, v98, v97, v96, v95, v94, v102, v23, v91, v90, v55, v56, v85, v84, v83, v82, v81,
    v80,
    v79,
    v77,
    v76,
    v75,
    v73,
    (uint64_t)v72,
    v65,
    v103,
    v68,
    v67,
    v66,
    v64,
    v106,
    &v105,
    &v104,
    v63,
    v62,
    v60,
    v59,
    v39,
    v41,
    v58,
    v42,
    v43,
    (char)v12,
    v47,
    v46,
    (uint64_t)v10,
    v49,
    v78,
    v92,
    v93,
    (char)v48,
    v50,
    v51,
    v53,
    v61);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_1ACC55C1C(char *a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (int *)((char *)&v145 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v145 - v11;
  id v13 = objc_msgSend(a1, sel_title);
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = sub_1ACE761B8();
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = 0;
  }
  *(void *)a3 = v15;
  *(void *)(a3 + 8) = v17;
  unint64_t v19 = *(void *)&a1[OBJC_IVAR___MTServerPodcastEpisode_id];
  unint64_t v18 = *(void *)&a1[OBJC_IVAR___MTServerPodcastEpisode_id + 8];
  id v146 = (unint64_t *)&a1[OBJC_IVAR___MTServerPodcastEpisode_id];
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1ACD1C588(v19, v18);
  swift_bridgeObjectRelease();
  *(void *)(a3 + 48) = v20;
  *(unsigned char *)(a3 + 56) = 0;
  uint64_t v21 = (id *)&a1[OBJC_IVAR___MTServerPodcastEpisode_relationships];
  swift_beginAccess();
  if (!*v21) {
    goto LABEL_14;
  }
  uint64_t v22 = *(void *)((char *)*v21 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_playbackPosition);
  if (!v22) {
    goto LABEL_14;
  }
  unint64_t v23 = *(void *)(v22 + 16);
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1ACE77508()) {
      goto LABEL_8;
    }
    goto LABEL_13;
  }
  uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v24)
  {
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v30 = *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 60);
    *(void *)(a3 + v30) = 0;
    char v29 = 1;
    goto LABEL_15;
  }
LABEL_8:
  if ((v23 & 0xC000000000000001) != 0)
  {
    uint64_t v25 = MEMORY[0x1AD119490](0, v23);
  }
  else
  {
    if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_72;
    }
    uint64_t v25 = *(void *)(v23 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(v25 + 64);
  swift_retain();
  swift_release();
  double v27 = *(double *)(v26 + 16);
  swift_release();
  uint64_t v28 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  char v29 = 0;
  uint64_t v30 = *(int *)(v28 + 60);
  *(double *)(a3 + v30) = v27 / 1000.0;
LABEL_15:
  *(unsigned char *)(a3 + v30 + 8) = v29;
  uint64_t v31 = (char *)*v21;
  id v145 = (char *)v10;
  if (v31
    && (uint64_t v32 = &v31[OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast],
        swift_beginAccess(),
        *(void *)v32))
  {
    char v33 = (id **)(*(void *)v32 + OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data);
    swift_beginAccess();
    uint64_t v21 = *v33;
    if ((unint64_t)v21 >> 62)
    {
      int v80 = a2;
      swift_bridgeObjectRetain();
      if (sub_1ACE77508())
      {
LABEL_19:
        if (((unint64_t)v21 & 0xC000000000000001) == 0)
        {
          if (!*(void *)(((unint64_t)v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_74;
          }
          uint64_t v36 = (int *)v21[4];
          goto LABEL_22;
        }
LABEL_72:
        uint64_t v36 = (int *)MEMORY[0x1AD119490](0, v21);
LABEL_22:
        uint64_t v10 = v36;
        swift_bridgeObjectRelease();

        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v34 = *(void *)(((unint64_t)v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v35 = a2;
      swift_bridgeObjectRetain();
      if (v34) {
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v37 = a2;
  }
  uint64_t v10 = a2;
LABEL_25:
  *(void *)(a3 + 80) = 0;
  *(void *)(a3 + 88) = 0;
  uint64_t v3 = OBJC_IVAR___MTServerPodcastEpisode_attributes;
  uint64_t v38 = *(void *)&a1[OBJC_IVAR___MTServerPodcastEpisode_attributes];
  uint64_t v39 = *(void *)(v38 + 328);
  *(void *)(a3 + 96) = *(void *)(v38 + 320);
  *(void *)(a3 + 104) = v39;
  swift_bridgeObjectRetain();
  *(void *)(a3 + 112) = sub_1ACC5B324();
  *(void *)(a3 + 120) = v40;
  uint64_t v149 = a2;
  if (v10)
  {
    unint64_t v42 = *(void *)((char *)v10 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id);
    unint64_t v41 = *(void *)((char *)v10 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id + 8);
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1ACD1C588(v42, v41);
    swift_bridgeObjectRelease();
    *(void *)(a3 + 64) = v43;
    *(unsigned char *)(a3 + 72) = 0;
    uint64_t v44 = *(void *)((char *)v10 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
    if (v44)
    {
      unint64_t v45 = *(void *)(v44 + 96);
      if (v45)
      {
        uint64_t v46 = *(void *)(v44 + 88);
        swift_bridgeObjectRetain();
        goto LABEL_32;
      }
    }
  }
  else
  {
    *(void *)(a3 + 64) = 0;
    *(unsigned char *)(a3 + 72) = 1;
  }
  swift_bridgeObjectRelease();
  uint64_t v46 = 0;
  unint64_t v45 = 0xE000000000000000;
LABEL_32:
  a2 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v47 = (void *)(a3 + a2[13]);
  *uint64_t v47 = v46;
  v47[1] = v45;
  uint64_t v48 = *(void *)(*(void *)&a1[v3] + 112);
  if (v48)
  {
    uint64_t v49 = *(void *)(v48 + 16);
    uint64_t v50 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v49 = 0;
    uint64_t v50 = 0;
  }
  char v51 = (void *)(a3 + a2[17]);
  void *v51 = v49;
  v51[1] = v50;
  if (v10
    && (uint64_t v52 = *(void *)((char *)v10 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes)) != 0
    && (uint64_t v53 = *(void *)(v52 + 112)) != 0)
  {
    if (!*(void *)(v53 + 56) || (*(unsigned char *)(v53 + 24) & 1) != 0 || (*(unsigned char *)(v53 + 40) & 1) != 0)
    {
      uint64_t v54 = sub_1ACE74F28();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v12, 1, 1, v54);
    }
    else
    {
      v151 = *(void **)(v53 + 48);
      uint64_t v76 = v3;
      uint64_t v77 = *(void *)(v53 + 16);
      uint64_t v78 = *(void *)(v53 + 32);
      uint64_t v150 = type metadata accessor for ArtworkFormatter();
      double v79 = (double)v77;
      uint64_t v3 = v76;
      swift_retain();
      static ArtworkFormatter.formatArtworkUrl(string:for:cropCode:fileExtension:)(0, (uint64_t)v12, v79, (double)v78);
      swift_release();
    }
    sub_1ACA50E14((uint64_t)v12, a3 + a2[16], &qword_1EB7731B0);
  }
  else
  {
    uint64_t v55 = sub_1ACE74F28();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v12, 1, 1, v55);
    sub_1ACA50E14((uint64_t)v12, a3 + a2[16], &qword_1EB7731B0);
    if (!v10)
    {
LABEL_47:
      uint64_t v58 = 0;
      uint64_t v59 = 0;
      goto LABEL_48;
    }
  }
  uint64_t v56 = *(void *)((char *)v10 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v56) {
    goto LABEL_47;
  }
  uint64_t v57 = *(void *)(v56 + 112);
  if (!v57) {
    goto LABEL_47;
  }
  uint64_t v58 = *(void *)(v57 + 48);
  uint64_t v59 = swift_bridgeObjectRetain();
LABEL_48:
  int v60 = (void *)(a3 + a2[32]);
  *int v60 = v58;
  v60[1] = v59;
  *(void *)(a3 + a2[18]) = *(void *)(*(void *)&a1[v3] + 136);
  if (v10 && (uint64_t v61 = *(void *)((char *)v10 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes)) != 0) {
    char v62 = (*(unsigned char *)(v61 + 48) == 2) | *(unsigned char *)(v61 + 48);
  }
  else {
    char v62 = 1;
  }
  *(unsigned char *)(a3 + a2[19]) = v62 & 1;
  uint64_t v63 = a3 + a2[20];
  swift_retain();
  swift_retain();
  PodcastEpisodeAttributes.releaseDateResolved.getter(v63);
  swift_release();
  if (v10)
  {
    uint64_t v64 = *(void *)((char *)v10 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
    if (v64)
    {
      uint64_t v65 = *(void **)(v64 + 144);
      swift_retain();
      if (v65) {
        uint64_t v65 = (void *)sub_1ACE76178();
      }
      id v66 = objc_msgSend(self, sel_showTypeFromString_, v65);
      swift_release();

      LOBYTE(v64) = v66 == (id)2;
    }
  }
  else
  {
    LOBYTE(v64) = 0;
  }
  *(unsigned char *)(a3 + a2[31]) = v64;
  *(void *)(a3 + a2[29]) = objc_msgSend(a1, sel_episodeNumber, v145);
  *(void *)(a3 + a2[30]) = objc_msgSend(a1, sel_seasonNumber);
  uint64_t v67 = sub_1ACD1987C((uint64_t)objc_msgSend(a1, sel_episodeNumber), (uint64_t)objc_msgSend(a1, sel_seasonNumber), v64, v63);
  int v68 = (uint64_t *)(a3 + a2[21]);
  *int v68 = v67;
  v68[1] = v69;
  if (!v10) {
    goto LABEL_76;
  }
  uint64_t v70 = *(void *)((char *)v10 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships);
  if (!v70) {
    goto LABEL_76;
  }
  uint64_t v71 = *(void *)(v70 + 16);
  if (!v71) {
    goto LABEL_76;
  }
  uint64_t v21 = *(id **)(v71 + 16);
  if (!((unint64_t)v21 >> 62))
  {
    uint64_t v72 = *(void *)(((unint64_t)v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v72) {
      goto LABEL_63;
    }
    goto LABEL_75;
  }
LABEL_74:
  swift_bridgeObjectRetain();
  if (!sub_1ACE77508())
  {
LABEL_75:
    swift_bridgeObjectRelease();
LABEL_76:
    int v75 = 0;
    uint64_t v74 = 0;
    goto LABEL_77;
  }
LABEL_63:
  if (((unint64_t)v21 & 0xC000000000000001) != 0) {
    goto LABEL_129;
  }
  if (!*(void *)(((unint64_t)v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_131;
  }
  for (uint64_t i = (char *)v21[4]; ; uint64_t i = (char *)MEMORY[0x1AD119490](0, v21))
  {
    uint64_t v74 = i;
    swift_bridgeObjectRelease();
    int v75 = *(unsigned char *)(*(void *)&v74[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes] + 74) & 1;
LABEL_77:
    *(unsigned char *)(a3 + a2[22]) = v75;
    uint64_t v21 = *(id **)(*(void *)&a1[v3] + 72);
    LODWORD(v150) = v75;
    if (!v21) {
      goto LABEL_89;
    }
    if ((unint64_t)v21 >> 62)
    {
      swift_bridgeObjectRetain();
      if (!sub_1ACE77508())
      {
LABEL_88:
        swift_bridgeObjectRelease();
LABEL_89:
        uint64_t v86 = 0;
        goto LABEL_90;
      }
    }
    else
    {
      uint64_t v81 = *(void *)(((unint64_t)v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v81) {
        goto LABEL_88;
      }
    }
    if (((unint64_t)v21 & 0xC000000000000001) != 0) {
      break;
    }
    if (*(void *)(((unint64_t)v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v82 = (uint64_t)v21[4];
      swift_retain();
      goto LABEL_83;
    }
    __break(1u);
LABEL_129:
    ;
  }
  uint64_t v82 = MEMORY[0x1AD119490](0, v21);
LABEL_83:
  swift_bridgeObjectRelease();
  uint64_t v83 = *(void *)(v82 + 16);
  uint64_t v84 = *(void **)(v82 + 24);
  swift_bridgeObjectRetain();
  v85._countAndFlagsBits = v83;
  v85._object = v84;
  PriceType.init(rawValue:)(v85);
  swift_release();
  uint64_t v86 = 0;
  switch(v154)
  {
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_86;
    case 4:
      break;
    default:
      char v87 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      uint64_t v86 = 0;
      if (v87) {
LABEL_86:
      }
        uint64_t v86 = (Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *)(v150 ^ 1);
      break;
  }
LABEL_90:
  *(unsigned char *)(a3 + a2[25]) = (_BYTE)v86;
  if (v74) {
    uint64_t v86 = (Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *)*(unsigned __int8 *)(*(void *)&v74[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes] + 74);
  }
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(v86, (Swift::Bool)&v154);
  uint64_t v89 = v88;
  uint64_t v91 = v90;
  char v92 = v154;
  objc_msgSend(a1, sel_duration);
  *(void *)(a3 + a2[14]) = v93;
  *(void *)(a3 + 16) = v89;
  *(void *)(a3 + 24) = v91;
  if (v10
    && (uint64_t v94 = *(void *)((char *)v10 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes)) != 0
    && (uint64_t v95 = *(void *)(v94 + 80)) != 0)
  {
    uint64_t v96 = *(void *)(v94 + 72);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v97 = *(void *)&a1[v3];
    uint64_t v96 = *(void *)(v97 + 56);
    uint64_t v95 = *(void *)(v97 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v151 = v74;
  *(void *)(a3 + 32) = v96;
  *(void *)(a3 + 40) = v95;
  *(unsigned char *)(a3 + a2[27]) = v92;
  *(unsigned char *)(a3 + a2[26]) = 0;
  uint64_t v98 = *(void *)&a1[v3];
  uint64_t v99 = *(void **)(v98 + 280);
  v147 = 0;
  if (v99)
  {
    uint64_t v100 = *(void *)(v98 + 272);
    swift_bridgeObjectRetain();
    v101._countAndFlagsBits = v100;
    v101._object = v99;
    PodcastEpisodeAttributes.MediaKind.init(rawValue:)(v101);
    char v102 = v154;
    if (v154 == 5) {
      char v102 = 0;
    }
  }
  else
  {
    char v102 = 0;
  }
  *(unsigned char *)(a3 + a2[28]) = v102;
  *(unsigned char *)(a3 + a2[23]) = objc_msgSend(a1, sel_isExplicit, v145);
  *(unsigned char *)(a3 + a2[24]) = objc_msgSend(a1, sel_isRestricted);
  uint64_t v103 = (void *)(a3 + a2[37]);
  *uint64_t v103 = 0;
  v103[1] = 0;
  *(unsigned char *)(a3 + a2[39]) = 1;
  *(unsigned char *)(a3 + a2[40]) = 0;
  uint64_t v104 = a3 + a2[12];
  uint64_t v105 = sub_1ACE74F28();
  uint64_t v148 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56);
  v148(v104, 1, 1, v105);
  uint64_t v106 = v10;
  uint64_t v107 = sub_1ACC5B410((uint64_t)v10);

  *(void *)(a3 + a2[33]) = v107;
  uint64_t v108 = *(void *)&a1[v3];
  swift_beginAccess();
  uint64_t v109 = *(void *)(v108 + 264);
  if (!v109)
  {
    char v111 = 0;
    *(unsigned char *)(a3 + a2[41]) = 0;
    goto LABEL_111;
  }
  uint64_t v110 = *(void *)(v108 + 256);
  if (v110 == 1937204590 && v109 == 0xE400000000000000)
  {
    *(unsigned char *)(a3 + a2[41]) = 1;
  }
  else
  {
    *(unsigned char *)(a3 + a2[41]) = sub_1ACE77848() & 1;
    if (v110 == 0x636973756DLL && v109 == 0xE500000000000000)
    {
      char v111 = 1;
      goto LABEL_111;
    }
  }
  char v111 = sub_1ACE77848();
LABEL_111:
  char v112 = (Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *)a2[42];
  *((unsigned char *)&v112->priceType + a3) = v111 & 1;
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(v112, (Swift::Bool)&v152);
  swift_bridgeObjectRelease();
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v113, (PodcastsFoundation::PriceType)&v153);
  uint64_t v115 = v114;
  uint64_t v117 = v116;
  swift_bridgeObjectRelease();
  char v118 = v153;
  unsigned int v119 = v153 == 2;
  uint64_t v120 = (void *)(a3 + a2[34]);
  *uint64_t v120 = v115;
  v120[1] = v117;
  int32x2_t v121 = vdup_n_s32((v118 & 1) == 0);
  v122.i64[0] = v121.u32[0];
  v122.i64[1] = v121.u32[1];
  int8x16_t v123 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v122, 0x3FuLL)), (int8x16_t)xmmword_1ACE98A40, (int8x16_t)xmmword_1ACE98A30);
  int32x2_t v124 = vdup_n_s32(v119);
  v122.i64[0] = v124.u32[0];
  v122.i64[1] = v124.u32[1];
  *(int8x16_t *)(a3 + a2[35]) = vandq_s8(v123, (int8x16_t)vcgezq_s64(vshlq_n_s64(v122, 0x3FuLL)));
  id v125 = (void *)(a3 + a2[38]);
  *id v125 = 0;
  v125[1] = 0;
  *(unsigned char *)(a3 + a2[43]) = 0;
  uint64_t v126 = v151;
  if (!v10)
  {
LABEL_115:
    v148(a3 + a2[36], 1, 1, v105);
    goto LABEL_116;
  }
  unint64_t v128 = *(void *)&v106[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id];
  unint64_t v127 = *(void *)&v106[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id + 8];
  swift_bridgeObjectRetain();
  id v129 = v147;
  uint64_t v130 = sub_1ACD1C588(v128, v127);
  if (v129)
  {

    swift_bridgeObjectRelease();
    goto LABEL_115;
  }
  uint64_t v131 = v130;
  swift_bridgeObjectRelease();
  unint64_t v133 = *v146;
  unint64_t v132 = v146[1];
  swift_bridgeObjectRetain();
  uint64_t v139 = sub_1ACD1C588(v133, v132);
  swift_bridgeObjectRelease();
  uint64_t v140 = self;
  if ((v139 | v131) < 0)
  {
LABEL_131:
    __break(1u);
    JUMPOUT(0x1ACC56B0CLL);
  }
  id v141 = objc_msgSend(v140, sel_productURLForStoreCollectionId_storeTrackId_, v131, v139);
  if (v141)
  {
    v142 = v141;
    uint64_t v143 = (uint64_t)v145;
    sub_1ACE74E98();

    uint64_t v144 = 0;
  }
  else
  {
    uint64_t v144 = 1;
    uint64_t v143 = (uint64_t)v145;
  }
  uint64_t v126 = v151;
  v148(v143, v144, 1, v105);
  sub_1ACA50E14(v143, a3 + a2[36], &qword_1EB7731B0);
LABEL_116:
  *(unsigned char *)(a3 + a2[44]) = 0;
  *(unsigned char *)(a3 + a2[45]) = 3;
  if (qword_1EB76EDD0 != -1) {
    swift_once();
  }
  uint64_t v134 = PageContextTracker.value.getter();
  uint64_t v136 = v135;

  if (v136) {
    uint64_t v137 = v134;
  }
  else {
    uint64_t v137 = 0;
  }
  uint64_t v138 = (uint64_t *)(a3 + a2[46]);
  *uint64_t v138 = v137;
  v138[1] = v136;
}

uint64_t sub_1ACC56B20(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC868];
  uint64_t v3 = a1 + 64;
  uint64_t v37 = MEMORY[0x1E4FBC868];
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(63 - v4) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v14 >= v7) {
      goto LABEL_39;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    int64_t v16 = v9 + 1;
    if (!v15)
    {
      int64_t v16 = v9 + 2;
      if (v9 + 2 >= v7) {
        goto LABEL_39;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v9 + 3;
        if (v9 + 3 >= v7) {
          goto LABEL_39;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v9 + 4;
          if (v9 + 4 >= v7) {
            goto LABEL_39;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v16);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v16 << 6);
    int64_t v9 = v16;
LABEL_6:
    long long v12 = *(_OWORD *)(*(void *)(a1 + 56) + 16 * v11);
    unint64_t v13 = *(void *)(*(void *)(a1 + 56) + 16 * v11 + 8);
    if (v13 >> 60 == 15) {
      goto LABEL_7;
    }
    unint64_t v18 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v19 = v18[1];
    uint64_t v36 = *v18;
    unint64_t v20 = *(void *)(v2 + 16);
    long long v35 = *(_OWORD *)(*(void *)(a1 + 56) + 16 * v11);
    if (*(void *)(v2 + 24) <= v20)
    {
      uint64_t v22 = v20 + 1;
      uint64_t v23 = *(void *)(*(void *)(a1 + 56) + 16 * v11);
      sub_1ACA39848(v12, v13);
      sub_1ACA39848(v23, v13);
      swift_bridgeObjectRetain();
      sub_1ACCFB944(v22, 1);
      uint64_t v2 = v37;
    }
    else
    {
      uint64_t v21 = *(void *)(*(void *)(a1 + 56) + 16 * v11);
      sub_1ACA39848(v12, v13);
      sub_1ACA39848(v21, v13);
      swift_bridgeObjectRetain();
    }
    sub_1ACE77B18();
    sub_1ACE76108();
    uint64_t result = sub_1ACE77B78();
    uint64_t v24 = v2 + 64;
    uint64_t v25 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v2 + 64 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      long long v12 = v35;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v24 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_38;
        }
      }
      goto LABEL_41;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v2 + 64 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    long long v12 = v35;
LABEL_38:
    *(void *)(v24 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t v33 = 16 * v28;
    uint64_t v34 = (void *)(*(void *)(v2 + 48) + v33);
    void *v34 = v36;
    v34[1] = v19;
    *(_OWORD *)(*(void *)(v2 + 56) + v33) = v12;
    ++*(void *)(v2 + 16);
LABEL_7:
    uint64_t result = sub_1ACAB2EF0(v12, v13);
  }
  int64_t v17 = v9 + 5;
  if (v9 + 5 >= v7)
  {
LABEL_39:
    sub_1ACA50A70();
    return v2;
  }
  unint64_t v15 = *(void *)(v3 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v9 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v7) {
      goto LABEL_39;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_24;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t URLTrackIdentifier.init(id:playbackContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F40A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(unsigned char *)(inited + 32) = 3;
  *(void *)(inited + 40) = a1;
  *(void *)(inited + 48) = a2;
  unint64_t v9 = sub_1ACA3733C(inited);
  unint64_t v10 = *(void **)(a3 + 40);
  if (v10)
  {
    id v11 = v10;
    id v12 = objc_msgSend(v11, sel_ams_DSID);
    if (v12)
    {
      unint64_t v13 = v12;
      id v14 = objc_msgSend(v12, sel_stringValue);

      uint64_t v15 = sub_1ACE761B8();
      uint64_t v17 = v16;

      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1ACD0DD00(v15, v17, 0x10u, isUniquelyReferenced_nonNull_native);

      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
  uint64_t v19 = sub_1ACACB2F0(v9);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1ACC5E154(a3, (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  *(void *)a4 = v19;
  *(unsigned char *)(a4 + 8) = 4;
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItem.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.assetURL.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.storeTrackId.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t PodcastsMediaLibrary.MediaItem.podcastStoreId.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t PodcastsMediaLibrary.MediaItem.uuid.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.guid.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.externalContentID.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.managedObjectIdentifierURI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACC5C334(type metadata accessor for PodcastsMediaLibrary.MediaItem, a1);
}

uint64_t PodcastsMediaLibrary.MediaItem.author.getter()
{
  return sub_1ACC5C394(type metadata accessor for PodcastsMediaLibrary.MediaItem);
}

double PodcastsMediaLibrary.MediaItem.duration.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 56));
}

uint64_t PodcastsMediaLibrary.MediaItem.playhead.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 60));
}

uint64_t PodcastsMediaLibrary.MediaItem.artworkURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  return sub_1ACA3AAD4(v1 + *(int *)(v3 + 64), a1, &qword_1EB7731B0);
}

uint64_t PodcastsMediaLibrary.MediaItem.itemDescription.getter()
{
  return sub_1ACC5C498(type metadata accessor for PodcastsMediaLibrary.MediaItem);
}

uint64_t PodcastsMediaLibrary.MediaItem.serverArtwork.getter()
{
  type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  return swift_retain();
}

uint64_t PodcastsMediaLibrary.MediaItem.isSubscribable.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 76));
}

uint64_t PodcastsMediaLibrary.MediaItem.releaseDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  return sub_1ACA3AAD4(v1 + *(int *)(v3 + 80), a1, (uint64_t *)&unk_1EB773140);
}

uint64_t PodcastsMediaLibrary.MediaItem.album.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 84));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.isSubscriptionActive.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 88));
}

uint64_t PodcastsMediaLibrary.MediaItem.isExplicit.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 92));
}

uint64_t PodcastsMediaLibrary.MediaItem.isRestricted.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 96));
}

uint64_t PodcastsMediaLibrary.MediaItem.subscriptionRequired.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 100));
}

uint64_t PodcastsMediaLibrary.MediaItem.itemType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 104));
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItem.priceType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 108));
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItem.mediaKind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 112));
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItem.ItemType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItem.ItemType.rawValue.getter()
{
  if (*v0) {
    return 0x64616F6C6E776F64;
  }
  else {
    return 0x6D6165727473;
  }
}

uint64_t sub_1ACC57434(char *a1, char *a2)
{
  return sub_1ACCF78FC(*a1, *a2);
}

uint64_t sub_1ACC57440()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC574C0()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC5752C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC575A8@<X0>(char *a1@<X8>)
{
  return PodcastsMediaLibrary.MediaItem.ItemType.init(rawValue:)(a1);
}

void sub_1ACC575B4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6D6165727473;
  if (*v1) {
    uint64_t v2 = 0x64616F6C6E776F64;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ACC575F0()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACC57650()
{
  return sub_1ACE764C8();
}

uint64_t PodcastsMediaLibrary.MediaItem.episodeNumber.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 116));
}

uint64_t PodcastsMediaLibrary.MediaItem.seasonNumber.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 120));
}

uint64_t PodcastsMediaLibrary.MediaItem.podcastIsSerial.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 124));
}

uint64_t PodcastsMediaLibrary.MediaItem.showArtworkTemplateURL.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 128));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.newsSubscriptionInformation.getter()
{
  uint64_t v1 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t result = 0;
  if (*(unsigned char *)(v0 + *(int *)(v1 + 164)) == 1)
  {
    if (*(unsigned char *)(v0 + *(int *)(v1 + 88))) {
      return 0x2B7377656ELL;
    }
    else {
      return 1701736302;
    }
  }
  return result;
}

void (*PodcastsMediaLibrary.MediaItem.musicSubscriptionInformation.getter())(char *, uint64_t)
{
  uint64_t v1 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t result = 0;
  if (*(unsigned char *)(v0 + *(int *)(v1 + 168)) == 1)
  {
    type metadata accessor for MusicSubscriptionInfoLoader();
    return static MusicSubscriptionInfoLoader.loadIfNeeded()();
  }
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItem.artworkResponseDictionary.getter()
{
  if (!*(void *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 72))) {
    return 0;
  }
  swift_retain();
  uint64_t v1 = sub_1ACC578A0();
  swift_release();
  return v1;
}

uint64_t sub_1ACC578A0()
{
  void v11[4] = *(id *)MEMORY[0x1E4F143B8];
  sub_1ACE74928();
  swift_allocObject();
  sub_1ACE74918();
  sub_1ACC5FCDC(&qword_1EB766D38, (void (*)(uint64_t))type metadata accessor for ServerArtwork);
  uint64_t v1 = sub_1ACE74908();
  unint64_t v3 = v2;
  uint64_t result = swift_release();
  if (!v0)
  {
    uint64_t v5 = self;
    unint64_t v6 = (void *)sub_1ACE74F68();
    v11[0] = 0;
    id v7 = objc_msgSend(v5, sel_JSONObjectWithData_options_error_, v6, 4, v11);

    if (v7)
    {
      id v8 = v11[0];
      sub_1ACE770C8();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770968);
      if (swift_dynamicCast())
      {
        sub_1ACA50850(v1, v3);
        return v10;
      }
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C58]), sel_init);
    }
    else
    {
      id v9 = v11[0];
      sub_1ACE74D78();
    }
    swift_willThrow();
    return sub_1ACA50850(v1, v3);
  }
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItem.artworkInfo.getter()
{
  type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  return swift_bridgeObjectRetain();
}

uint64_t PodcastsMediaLibrary.MediaItem.transcriptIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 136));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.transcriptSource.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 140));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.shareURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  return sub_1ACA3AAD4(v1 + *(int *)(v3 + 144), a1, &qword_1EB7731B0);
}

uint64_t PodcastsMediaLibrary.MediaItem.podcastUUID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 148));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.restorationContentItemID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 152));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.isShallow.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 172));
}

uint64_t PodcastsMediaLibrary.MediaItem.feedDeleted.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 176));
}

uint64_t PodcastsMediaLibrary.MediaItem.podcastSubscriptionState.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 180));
}

uint64_t PodcastsMediaLibrary.MediaItem.podcastPageContext.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 184));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.init(title:assetURL:feedURL:storeTrackId:podcastStoreId:uuid:guid:externalContentID:author:duration:playhead:artworkURL:itemDescription:serverArtwork:isSubscribable:releaseDate:album:isSubscriptionActive:isExplicit:isRestricted:subscriptionRequired:itemType:priceType:mediaKind:episodeNumber:seasonNumber:podcastIsSerial:showArtworkTemplateURL:artworkInfo:transcriptIdentifier:isAppleNewsEpisode:isAppleMusicEpisode:transcriptSource:shareURL:podcastUUID:restorationContentItemID:isShallow:feedDeleted:podcastSubscriptionState:podcastPageContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, char a12, long long a13, long long a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,char a30,char a31,char a32,char *a33,char *a34,char *a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,char a54,char a55,uint64_t a56,uint64_t a57)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8 & 1;
  *(void *)(a9 + 64) = a11;
  *(unsigned char *)(a9 + 72) = a12 & 1;
  *(void *)(a9 + 112) = a15;
  *(void *)(a9 + 120) = a16;
  char v73 = *a33;
  char v74 = *a34;
  char v75 = *a35;
  *(_OWORD *)(a9 + 80) = a13;
  *(_OWORD *)(a9 + 96) = a14;
  uint64_t v59 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  int v60 = (void *)(a9 + v59[13]);
  *int v60 = a17;
  v60[1] = a18;
  *(double *)(a9 + v59[14]) = a10;
  uint64_t v61 = a9 + v59[15];
  *(void *)uint64_t v61 = a19;
  *(unsigned char *)(v61 + 8) = a20 & 1;
  sub_1ACA50E14(a21, a9 + v59[16], &qword_1EB7731B0);
  char v62 = (void *)(a9 + v59[17]);
  *char v62 = a22;
  v62[1] = a23;
  *(void *)(a9 + v59[18]) = a24;
  *(unsigned char *)(a9 + v59[19]) = a25;
  sub_1ACA50E14(a26, a9 + v59[20], (uint64_t *)&unk_1EB773140);
  uint64_t v63 = (void *)(a9 + v59[21]);
  *uint64_t v63 = a27;
  v63[1] = a28;
  *(unsigned char *)(a9 + v59[22]) = a29;
  *(unsigned char *)(a9 + v59[23]) = a30;
  *(unsigned char *)(a9 + v59[24]) = a31;
  *(unsigned char *)(a9 + v59[25]) = a32;
  *(unsigned char *)(a9 + v59[26]) = v73;
  *(unsigned char *)(a9 + v59[27]) = v74;
  *(unsigned char *)(a9 + v59[28]) = v75;
  *(void *)(a9 + v59[29]) = a36;
  *(void *)(a9 + v59[30]) = a37;
  *(unsigned char *)(a9 + v59[31]) = a38;
  uint64_t v64 = (void *)(a9 + v59[32]);
  *uint64_t v64 = a39;
  v64[1] = a40;
  uint64_t v65 = (void *)(a9 + v59[37]);
  *uint64_t v65 = a49;
  v65[1] = a50;
  *(unsigned char *)(a9 + v59[39]) = 1;
  *(void *)(a9 + v59[33]) = a41;
  *(unsigned char *)(a9 + v59[40]) = 0;
  id v66 = (void *)(a9 + v59[34]);
  *id v66 = a42;
  v66[1] = a43;
  *(unsigned char *)(a9 + v59[41]) = a44;
  *(unsigned char *)(a9 + v59[42]) = a45;
  uint64_t v67 = (void *)(a9 + v59[35]);
  *uint64_t v67 = a46;
  v67[1] = a47;
  uint64_t v68 = a9 + v59[12];
  uint64_t v69 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v68, 1, 1, v69);
  uint64_t result = sub_1ACA50E14(a48, a9 + v59[36], &qword_1EB7731B0);
  uint64_t v71 = (void *)(a9 + v59[38]);
  *uint64_t v71 = a51;
  v71[1] = a52;
  *(unsigned char *)(a9 + v59[43]) = a53;
  *(unsigned char *)(a9 + v59[44]) = a54;
  *(unsigned char *)(a9 + v59[45]) = a55;
  uint64_t v72 = (void *)(a9 + v59[46]);
  *uint64_t v72 = a56;
  v72[1] = a57;
  return result;
}

Swift::Bool __swiftcall PodcastsMediaLibrary.MediaItem.isTransferable(deviceCanUseGuidIdentifiers:)(Swift::Bool deviceCanUseGuidIdentifiers)
{
  uint64_t v3 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v1 + *(int *)(v6 + 184)) & 1) == 0)
  {
    if ((*(unsigned char *)(v1 + 56) & 1) == 0)
    {
      uint64_t v7 = *(void *)(v1 + 48);
      if (v7 != 1000000000000 && v7 != 0) {
        return 1;
      }
    }
    if (deviceCanUseGuidIdentifiers)
    {
      uint64_t v9 = *(void *)(v1 + 104);
      sub_1ACA642F8(v1, (uint64_t)v5, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      if (v9)
      {
        uint64_t v10 = *((void *)v5 + 5);
        sub_1ACC5E154((uint64_t)v5, type metadata accessor for PodcastsMediaLibrary.MediaItem);
        if (v10) {
          return 1;
        }
      }
      else
      {
        sub_1ACC5E154((uint64_t)v5, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      }
    }
  }
  return 0;
}

uint64_t sub_1ACC581E8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v31 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v32 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    unint64_t v7 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    int64_t v33 = v3;
    unint64_t v8 = v7 | (v3 << 6);
LABEL_25:
    uint64_t v13 = result;
    id v14 = (uint64_t *)(*(void *)(result + 48) + 16 * v8);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (uint64_t *)(*(void *)(result + 56) + 32 * v8);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v21 = v17[2];
    uint64_t v20 = v17[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1ACA657FC(v15, v16);
    char v24 = v23;
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0
      || ((uint64_t v25 = (void *)(*(void *)(a2 + 56) + 32 * v22), v26 = v25[2], v27 = v25[3], *v25 == v19)
        ? (BOOL v28 = v25[1] == v18)
        : (BOOL v28 = 0),
          !v28 && (sub_1ACE77848() & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v26 == v21 && v27 == v20)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = v13;
      int64_t v3 = v33;
    }
    else
    {
      char v30 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = v13;
      int64_t v3 = v33;
      if ((v30 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v9 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  if (v9 >= v32) {
    return 1;
  }
  unint64_t v10 = *(void *)(v31 + 8 * v9);
  int64_t v11 = v3 + 1;
  if (v10) {
    goto LABEL_24;
  }
  int64_t v11 = v3 + 2;
  if (v3 + 2 >= v32) {
    return 1;
  }
  unint64_t v10 = *(void *)(v31 + 8 * v11);
  if (v10) {
    goto LABEL_24;
  }
  int64_t v11 = v3 + 3;
  if (v3 + 3 >= v32) {
    return 1;
  }
  unint64_t v10 = *(void *)(v31 + 8 * v11);
  if (v10) {
    goto LABEL_24;
  }
  int64_t v11 = v3 + 4;
  if (v3 + 4 >= v32) {
    return 1;
  }
  unint64_t v10 = *(void *)(v31 + 8 * v11);
  if (v10)
  {
LABEL_24:
    unint64_t v6 = (v10 - 1) & v10;
    int64_t v33 = v11;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    goto LABEL_25;
  }
  uint64_t v12 = v3 + 5;
  if (v3 + 5 >= v32) {
    return 1;
  }
  unint64_t v10 = *(void *)(v31 + 8 * v12);
  if (v10)
  {
    int64_t v11 = v3 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v11 >= v32) {
      return 1;
    }
    unint64_t v10 = *(void *)(v31 + 8 * v11);
    ++v12;
    if (v10) {
      goto LABEL_24;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1ACC58488(uint64_t a1, uint64_t a2)
{
  __s2[2] = *MEMORY[0x1E4F143B8];
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v90 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v91 = (unint64_t)(v5 + 63) >> 6;
  while (2)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      int64_t v93 = v4;
      unint64_t v9 = v8 | (v4 << 6);
    }
    else
    {
      int64_t v10 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
        goto LABEL_149;
      }
      if (v10 >= v91) {
        return 1;
      }
      unint64_t v11 = *(void *)(v90 + 8 * v10);
      int64_t v12 = v4 + 1;
      if (!v11)
      {
        int64_t v12 = v4 + 2;
        if (v4 + 2 >= v91) {
          return 1;
        }
        unint64_t v11 = *(void *)(v90 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v4 + 3;
          if (v4 + 3 >= v91) {
            return 1;
          }
          unint64_t v11 = *(void *)(v90 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v4 + 4;
            if (v4 + 4 >= v91) {
              return 1;
            }
            unint64_t v11 = *(void *)(v90 + 8 * v12);
            if (!v11)
            {
              uint64_t v13 = v4 + 5;
              if (v4 + 5 >= v91) {
                return 1;
              }
              unint64_t v11 = *(void *)(v90 + 8 * v13);
              if (!v11)
              {
                while (1)
                {
                  int64_t v12 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    break;
                  }
                  if (v12 >= v91) {
                    return 1;
                  }
                  unint64_t v11 = *(void *)(v90 + 8 * v12);
                  ++v13;
                  if (v11) {
                    goto LABEL_25;
                  }
                }
LABEL_149:
                __break(1u);
LABEL_150:
                __break(1u);
LABEL_151:
                __break(1u);
LABEL_152:
                __break(1u);
LABEL_153:
                __break(1u);
LABEL_154:
                __break(1u);
LABEL_155:
                __break(1u);
LABEL_156:
                __break(1u);
LABEL_157:
                __break(1u);
LABEL_158:
                __break(1u);
LABEL_159:
                __break(1u);
LABEL_160:
                __break(1u);
LABEL_161:
                __break(1u);
LABEL_162:
                __break(1u);
LABEL_163:
                __break(1u);
LABEL_164:
                __break(1u);
LABEL_165:
                __break(1u);
              }
              int64_t v12 = v4 + 5;
            }
          }
        }
      }
LABEL_25:
      unint64_t v7 = (v11 - 1) & v11;
      int64_t v93 = v12;
      unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    }
    uint64_t v14 = 16 * v9;
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    uint64_t v20 = *v18;
    unint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    sub_1ACA3985C(v20, v19);
    uint64_t v21 = sub_1ACA657FC(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0) {
      goto LABEL_139;
    }
    unint64_t v24 = v19 >> 62;
    uint64_t v25 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v21);
    uint64_t v27 = *v25;
    unint64_t v26 = v25[1];
    uint64_t v28 = 0;
    switch(v26 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v27), v27)) {
          goto LABEL_142;
        }
        uint64_t v28 = HIDWORD(v27) - (int)v27;
LABEL_32:
        sub_1ACA3985C(v27, v26);
        break;
      case 2uLL:
        uint64_t v30 = *(void *)(v27 + 16);
        uint64_t v29 = *(void *)(v27 + 24);
        uint64_t v28 = v29 - v30;
        if (!__OFSUB__(v29, v30)) {
          goto LABEL_32;
        }
        goto LABEL_143;
      case 3uLL:
        break;
      default:
        uint64_t v28 = BYTE6(v26);
        break;
    }
    switch((int)v24)
    {
      case 1:
        LODWORD(v31) = HIDWORD(v20) - v20;
        if (__OFSUB__(HIDWORD(v20), v20)) {
          goto LABEL_144;
        }
        uint64_t v31 = (int)v31;
LABEL_38:
        if (v28 == v31)
        {
          if (v28 < 1)
          {
LABEL_7:
            sub_1ACA50850(v27, v26);
            sub_1ACA50850(v20, v19);
            uint64_t v3 = a1;
            int64_t v4 = v93;
          }
          else
          {
            switch(v26 >> 62)
            {
              case 1uLL:
                if ((int)v27 > v27 >> 32) {
                  goto LABEL_146;
                }
                uint64_t v40 = (char *)sub_1ACE74B38();
                if (!v40) {
                  goto LABEL_52;
                }
                uint64_t v41 = sub_1ACE74B58();
                if (__OFSUB__((int)v27, v41)) {
                  goto LABEL_148;
                }
                v40 += (int)v27 - v41;
LABEL_52:
                uint64_t v2 = a2;
                sub_1ACE74B48();
                if (!v24)
                {
                  __s2[0] = v20;
                  LOWORD(__s2[1]) = v19;
                  BYTE2(__s2[1]) = BYTE2(v19);
                  BYTE3(__s2[1]) = BYTE3(v19);
                  BYTE4(__s2[1]) = BYTE4(v19);
                  BYTE5(__s2[1]) = BYTE5(v19);
                  if (!v40) {
                    goto LABEL_177;
                  }
                  size_t v58 = BYTE6(v19);
                  int v60 = __s2;
                  uint64_t v59 = v40;
LABEL_120:
                  int v46 = memcmp(v59, v60, v58);
                  goto LABEL_121;
                }
                if (v24 == 1)
                {
                  if (v20 >> 32 < (int)v20) {
                    goto LABEL_158;
                  }
                  swift_retain();
                  unint64_t v42 = (char *)sub_1ACE74B38();
                  if (v42)
                  {
                    uint64_t v43 = sub_1ACE74B58();
                    if (__OFSUB__((int)v20, v43)) {
                      goto LABEL_165;
                    }
                    v42 += (int)v20 - v43;
                  }
                  uint64_t v2 = a2;
                  uint64_t v44 = sub_1ACE74B48();
                  if (v44 >= (v20 >> 32) - (int)v20) {
                    size_t v45 = (v20 >> 32) - (int)v20;
                  }
                  else {
                    size_t v45 = v44;
                  }
                  if (!v40) {
                    goto LABEL_167;
                  }
                  uint64_t v3 = a1;
                  if (!v42) {
                    goto LABEL_168;
                  }
                  int v46 = memcmp(v40, v42, v45);
                  sub_1ACA50850(v20, v19);
                  sub_1ACA50850(v27, v26);
                  sub_1ACA50850(v20, v19);
                  goto LABEL_123;
                }
                uint64_t v81 = *(void *)(v20 + 16);
                uint64_t v80 = *(void *)(v20 + 24);
                swift_retain();
                swift_retain();
                uint64_t v82 = (char *)sub_1ACE74B38();
                if (v82)
                {
                  uint64_t v83 = sub_1ACE74B58();
                  if (__OFSUB__(v81, v83)) {
                    goto LABEL_164;
                  }
                  v82 += v81 - v83;
                }
                BOOL v34 = __OFSUB__(v80, v81);
                int64_t v84 = v80 - v81;
                if (v34) {
                  goto LABEL_159;
                }
                uint64_t v85 = sub_1ACE74B48();
                if (v85 >= v84) {
                  size_t v86 = v84;
                }
                else {
                  size_t v86 = v85;
                }
                uint64_t v3 = a1;
                if (!v40) {
                  goto LABEL_178;
                }
                uint64_t v2 = a2;
                if (!v82) {
                  goto LABEL_179;
                }
                int v71 = memcmp(v40, v82, v86);
                swift_release();
                swift_release();
                sub_1ACA50850(v27, v26);
                sub_1ACA50850(v20, v19);
LABEL_135:
                int64_t v4 = v93;
                if (v71) {
                  return 0;
                }
                continue;
              case 2uLL:
                uint64_t v47 = *(void *)(v27 + 16);
                swift_retain();
                swift_retain();
                uint64_t v48 = (char *)sub_1ACE74B38();
                if (!v48) {
                  goto LABEL_67;
                }
                uint64_t v49 = sub_1ACE74B58();
                if (__OFSUB__(v47, v49)) {
                  goto LABEL_147;
                }
                v48 += v47 - v49;
LABEL_67:
                uint64_t v2 = a2;
                sub_1ACE74B48();
                if (!v24)
                {
                  __s2[0] = v20;
                  LOWORD(__s2[1]) = v19;
                  BYTE2(__s2[1]) = BYTE2(v19);
                  BYTE3(__s2[1]) = BYTE3(v19);
                  BYTE4(__s2[1]) = BYTE4(v19);
                  BYTE5(__s2[1]) = BYTE5(v19);
                  if (!v48) {
                    goto LABEL_174;
                  }
                  int v46 = memcmp(v48, __s2, BYTE6(v19));
                  goto LABEL_106;
                }
                __s1 = v48;
                if (v24 == 1)
                {
                  if (v20 >> 32 < (int)v20) {
                    goto LABEL_152;
                  }
                  swift_retain();
                  uint64_t v50 = (char *)sub_1ACE74B38();
                  if (v50)
                  {
                    uint64_t v51 = sub_1ACE74B58();
                    if (__OFSUB__((int)v20, v51)) {
                      goto LABEL_163;
                    }
                    v50 += (int)v20 - v51;
                  }
                  uint64_t v2 = a2;
                  uint64_t v52 = sub_1ACE74B48();
                  if (v52 >= (v20 >> 32) - (int)v20) {
                    size_t v53 = (v20 >> 32) - (int)v20;
                  }
                  else {
                    size_t v53 = v52;
                  }
                  if (!v48) {
                    goto LABEL_169;
                  }
                  if (!v50) {
                    goto LABEL_170;
                  }
                  int v46 = memcmp(v48, v50, v53);
                  sub_1ACA50850(v20, v19);
LABEL_106:
                  swift_release();
                  swift_release();
LABEL_121:
                  sub_1ACA50850(v27, v26);
                  sub_1ACA50850(v20, v19);
LABEL_122:
                  uint64_t v3 = a1;
LABEL_123:
                  int64_t v4 = v93;
                  if (v46) {
                    return 0;
                  }
                  continue;
                }
                uint64_t v73 = *(void *)(v20 + 16);
                uint64_t v72 = *(void *)(v20 + 24);
                swift_retain();
                swift_retain();
                char v74 = (char *)sub_1ACE74B38();
                if (v74)
                {
                  uint64_t v75 = sub_1ACE74B58();
                  if (__OFSUB__(v73, v75)) {
                    goto LABEL_162;
                  }
                  v74 += v73 - v75;
                }
                BOOL v34 = __OFSUB__(v72, v73);
                int64_t v76 = v72 - v73;
                if (v34) {
                  goto LABEL_157;
                }
                uint64_t v77 = sub_1ACE74B48();
                if (v77 >= v76) {
                  size_t v78 = v76;
                }
                else {
                  size_t v78 = v77;
                }
                if (!__s1) {
                  goto LABEL_175;
                }
                uint64_t v2 = a2;
                if (!v74) {
                  goto LABEL_176;
                }
                int v79 = memcmp(__s1, v74, v78);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                sub_1ACA50850(v27, v26);
                sub_1ACA50850(v20, v19);
                uint64_t v3 = a1;
                int64_t v4 = v93;
                if (v79) {
                  return 0;
                }
                break;
              case 3uLL:
                memset(__s2, 0, 14);
                if (!v24) {
                  goto LABEL_88;
                }
                if (v24 == 1)
                {
                  uint64_t v35 = (v20 >> 32) - (int)v20;
                  if (v20 >> 32 < (int)v20) {
                    goto LABEL_151;
                  }
                  sub_1ACA3985C(v20, v19);
                  uint64_t v54 = sub_1ACE74B38();
                  if (!v54) {
                    goto LABEL_171;
                  }
                  uint64_t v37 = v54;
                  uint64_t v55 = sub_1ACE74B58();
                  uint64_t v39 = (int)v20 - v55;
                  if (__OFSUB__((int)v20, v55)) {
                    goto LABEL_156;
                  }
LABEL_84:
                  uint64_t v56 = sub_1ACE74B48();
                  if (v56 >= v35) {
                    size_t v57 = v35;
                  }
                  else {
                    size_t v57 = v56;
                  }
                  int v46 = memcmp(__s2, (const void *)(v37 + v39), v57);
                  sub_1ACA50850(v20, v19);
                  sub_1ACA50850(v27, v26);
                  sub_1ACA50850(v20, v19);
                  uint64_t v2 = a2;
                  goto LABEL_122;
                }
                uint64_t v67 = *(void *)(v20 + 16);
                uint64_t v68 = *(void *)(v20 + 24);
                swift_retain();
                swift_retain();
                uint64_t v63 = (char *)sub_1ACE74B38();
                if (v63)
                {
                  uint64_t v69 = sub_1ACE74B58();
                  if (__OFSUB__(v67, v69)) {
                    goto LABEL_161;
                  }
                  v63 += v67 - v69;
                }
                int64_t v65 = v68 - v67;
                if (__OFSUB__(v68, v67)) {
                  goto LABEL_154;
                }
                uint64_t v66 = sub_1ACE74B48();
                uint64_t v3 = a1;
                if (!v63) {
                  goto LABEL_173;
                }
LABEL_100:
                if (v66 >= v65) {
                  size_t v70 = v65;
                }
                else {
                  size_t v70 = v66;
                }
                int v71 = memcmp(__s2, v63, v70);
                swift_release();
                swift_release();
                sub_1ACA50850(v27, v26);
                sub_1ACA50850(v20, v19);
                uint64_t v2 = a2;
                goto LABEL_135;
              default:
                __s2[0] = v27;
                LOWORD(__s2[1]) = v26;
                BYTE2(__s2[1]) = BYTE2(v26);
                BYTE3(__s2[1]) = BYTE3(v26);
                BYTE4(__s2[1]) = BYTE4(v26);
                BYTE5(__s2[1]) = BYTE5(v26);
                if (!v24)
                {
LABEL_88:
                  uint64_t v94 = v20;
                  __int16 v95 = v19;
                  char v96 = BYTE2(v19);
                  char v97 = BYTE3(v19);
                  char v98 = BYTE4(v19);
                  size_t v58 = BYTE6(v19);
                  char v99 = BYTE5(v19);
                  uint64_t v59 = __s2;
                  int v60 = &v94;
                  goto LABEL_120;
                }
                if (v24 == 1)
                {
                  uint64_t v35 = (v20 >> 32) - (int)v20;
                  if (v20 >> 32 < (int)v20) {
                    goto LABEL_150;
                  }
                  sub_1ACA3985C(v20, v19);
                  uint64_t v36 = sub_1ACE74B38();
                  if (!v36)
                  {
                    sub_1ACE74B48();
                    __break(1u);
LABEL_167:
                    __break(1u);
LABEL_168:
                    __break(1u);
LABEL_169:
                    __break(1u);
LABEL_170:
                    __break(1u);
LABEL_171:
                    sub_1ACE74B48();
                    __break(1u);
LABEL_172:
                    __break(1u);
LABEL_173:
                    __break(1u);
LABEL_174:
                    __break(1u);
LABEL_175:
                    __break(1u);
LABEL_176:
                    __break(1u);
LABEL_177:
                    __break(1u);
LABEL_178:
                    __break(1u);
LABEL_179:
                    __break(1u);
                    JUMPOUT(0x1ACC58F44);
                  }
                  uint64_t v37 = v36;
                  uint64_t v38 = sub_1ACE74B58();
                  uint64_t v39 = (int)v20 - v38;
                  if (__OFSUB__((int)v20, v38)) {
                    goto LABEL_155;
                  }
                  goto LABEL_84;
                }
                uint64_t v61 = *(void *)(v20 + 16);
                uint64_t v62 = *(void *)(v20 + 24);
                swift_retain();
                swift_retain();
                uint64_t v63 = (char *)sub_1ACE74B38();
                if (v63)
                {
                  uint64_t v64 = sub_1ACE74B58();
                  if (__OFSUB__(v61, v64)) {
                    goto LABEL_160;
                  }
                  v63 += v61 - v64;
                }
                int64_t v65 = v62 - v61;
                if (__OFSUB__(v62, v61)) {
                  goto LABEL_153;
                }
                uint64_t v66 = sub_1ACE74B48();
                uint64_t v3 = a1;
                if (!v63) {
                  goto LABEL_172;
                }
                goto LABEL_100;
            }
          }
          continue;
        }
LABEL_138:
        sub_1ACA50850(v27, v26);
LABEL_139:
        sub_1ACA50850(v20, v19);
        return 0;
      case 2:
        uint64_t v33 = *(void *)(v20 + 16);
        uint64_t v32 = *(void *)(v20 + 24);
        BOOL v34 = __OFSUB__(v32, v33);
        uint64_t v31 = v32 - v33;
        if (!v34) {
          goto LABEL_38;
        }
        goto LABEL_145;
      case 3:
        if (!v28) {
          goto LABEL_7;
        }
        goto LABEL_138;
      default:
        uint64_t v31 = BYTE6(v19);
        goto LABEL_38;
    }
  }
}

unint64_t sub_1ACC58F74(char a1)
{
  unint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4C52557465737361;
      break;
    case 2:
      unint64_t result = 0x4C525564656566;
      break;
    case 3:
      unint64_t result = 0x61725465726F7473;
      break;
    case 4:
      unint64_t result = 0x5374736163646F70;
      break;
    case 5:
      unint64_t result = 1684632949;
      break;
    case 6:
      unint64_t result = 1684632935;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 9:
      unint64_t result = 0x726F68747561;
      break;
    case 10:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 11:
      unint64_t result = 0x6461656879616C70;
      break;
    case 12:
      unint64_t result = 0x556B726F77747261;
      break;
    case 13:
      unint64_t result = 0x637365446D657469;
      break;
    case 14:
      unint64_t result = 0x7241726576726573;
      break;
    case 15:
      unint64_t result = 0x7263736275537369;
      break;
    case 16:
      unint64_t result = 0x44657361656C6572;
      break;
    case 17:
      unint64_t result = 0x6D75626C61;
      break;
    case 18:
    case 21:
    case 30:
      unint64_t result = 0xD000000000000014;
      break;
    case 19:
      unint64_t result = 0x63696C7078457369;
      break;
    case 20:
      unint64_t result = 0x6972747365527369;
      break;
    case 22:
      unint64_t result = 0x657079546D657469;
      break;
    case 23:
      unint64_t result = 0x7079546563697270;
      break;
    case 24:
      unint64_t result = 0x6E694B616964656DLL;
      break;
    case 25:
      unint64_t result = 0x4E65646F73697065;
      break;
    case 26:
      unint64_t result = 0x754E6E6F73616573;
      break;
    case 27:
      unint64_t result = 0x4974736163646F70;
      break;
    case 28:
      unint64_t result = 0xD000000000000016;
      break;
    case 29:
      unint64_t result = 0x496B726F77747261;
      break;
    case 31:
      unint64_t result = 0xD000000000000010;
      break;
    case 32:
      unint64_t result = 0x4C52556572616873;
      break;
    case 33:
      unint64_t result = 0x5574736163646F70;
      break;
    case 34:
      unint64_t result = 0xD000000000000018;
      break;
    case 35:
      unint64_t result = 0xD000000000000016;
      break;
    case 36:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 37:
      unint64_t result = 0xD000000000000012;
      break;
    case 38:
      unint64_t result = 0xD000000000000013;
      break;
    case 39:
      unint64_t result = 0x6F6C6C6168537369;
      break;
    case 40:
      unint64_t result = 0x656C654464656566;
      break;
    case 41:
      unint64_t result = 0xD000000000000018;
      break;
    case 42:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACC594C4()
{
  return sub_1ACC58F74(*v0);
}

uint64_t sub_1ACC594CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACC64BE4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ACC594F4(unsigned char *a1@<X8>)
{
  *a1 = 43;
}

uint64_t sub_1ACC59500(uint64_t a1)
{
  unint64_t v2 = sub_1ACC5FC88();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC5953C(uint64_t a1)
{
  unint64_t v2 = sub_1ACC5FC88();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PodcastsMediaLibrary.MediaItem.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F40B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC5FC88();
  sub_1ACE77C78();
  LOBYTE(v14) = 0;
  sub_1ACE776E8();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_1ACE776E8();
    LOBYTE(v14) = 2;
    sub_1ACE776E8();
    char v9 = *(unsigned char *)(v3 + 56);
    uint64_t v14 = *(void *)(v3 + 48);
    char v15 = v9;
    char v16 = 3;
    sub_1ACA80994();
    sub_1ACE77728();
    char v10 = *(unsigned char *)(v3 + 72);
    uint64_t v14 = *(void *)(v3 + 64);
    char v15 = v10;
    char v16 = 4;
    sub_1ACE77728();
    LOBYTE(v14) = 5;
    sub_1ACE776E8();
    LOBYTE(v14) = 6;
    sub_1ACE776E8();
    LOBYTE(v14) = 7;
    sub_1ACE776E8();
    unint64_t v11 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    LOBYTE(v14) = 8;
    sub_1ACE74F28();
    sub_1ACC5FCDC(&qword_1E99F0E98, MEMORY[0x1E4F276F0]);
    sub_1ACE77728();
    LOBYTE(v14) = 9;
    sub_1ACE776E8();
    LOBYTE(v14) = 10;
    sub_1ACE77768();
    LOBYTE(v14) = 11;
    sub_1ACE77708();
    LOBYTE(v14) = 12;
    sub_1ACE77728();
    LOBYTE(v14) = 13;
    sub_1ACE776E8();
    uint64_t v14 = *(void *)(v3 + v11[18]);
    char v16 = 14;
    type metadata accessor for ServerArtwork();
    sub_1ACC5FCDC(&qword_1EB766D38, (void (*)(uint64_t))type metadata accessor for ServerArtwork);
    sub_1ACE77728();
    LOBYTE(v14) = 15;
    sub_1ACE77758();
    v13[1] = v3 + v11[20];
    LOBYTE(v14) = 16;
    sub_1ACE750A8();
    sub_1ACC5FCDC(&qword_1E99F3A68, MEMORY[0x1E4F27928]);
    sub_1ACE77728();
    LOBYTE(v14) = 17;
    sub_1ACE776E8();
    LOBYTE(v14) = 18;
    sub_1ACE77758();
    LOBYTE(v14) = 19;
    sub_1ACE77758();
    LOBYTE(v14) = 20;
    sub_1ACE77758();
    LOBYTE(v14) = 21;
    sub_1ACE77758();
    LOBYTE(v14) = *(unsigned char *)(v3 + v11[26]);
    char v16 = 22;
    sub_1ACC5FD24();
    sub_1ACE77728();
    LOBYTE(v14) = *(unsigned char *)(v3 + v11[27]);
    char v16 = 23;
    sub_1ACC5FD78();
    sub_1ACE77728();
    LOBYTE(v14) = *(unsigned char *)(v3 + v11[28]);
    char v16 = 24;
    sub_1ACC5FDCC();
    sub_1ACE77728();
    LOBYTE(v14) = 25;
    sub_1ACE77798();
    LOBYTE(v14) = 26;
    sub_1ACE77798();
    LOBYTE(v14) = 27;
    sub_1ACE77758();
    LOBYTE(v14) = 28;
    sub_1ACE776E8();
    uint64_t v14 = *(void *)(v3 + v11[33]);
    char v16 = 29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F40D8);
    sub_1ACC5FFC4(&qword_1E99F40E0, (void (*)(void))sub_1ACA57B44);
    sub_1ACE77788();
    LOBYTE(v14) = 30;
    sub_1ACE776E8();
    LOBYTE(v14) = 31;
    sub_1ACE776E8();
    LOBYTE(v14) = 32;
    sub_1ACE77728();
    LOBYTE(v14) = 33;
    sub_1ACE776E8();
    LOBYTE(v14) = 34;
    sub_1ACE776E8();
    LOBYTE(v14) = *(unsigned char *)(v3 + v11[39]);
    char v16 = 35;
    sub_1ACC5FE20();
    sub_1ACE77788();
    LOBYTE(v14) = 36;
    sub_1ACE77758();
    LOBYTE(v14) = 37;
    sub_1ACE77758();
    LOBYTE(v14) = 38;
    sub_1ACE77758();
    LOBYTE(v14) = 39;
    sub_1ACE77758();
    LOBYTE(v14) = 40;
    sub_1ACE77758();
    LOBYTE(v14) = *(unsigned char *)(v3 + v11[45]);
    char v16 = 41;
    sub_1ACC5FE74();
    sub_1ACE77728();
    LOBYTE(v14) = 42;
    sub_1ACE776E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PodcastsMediaLibrary.MediaItem.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (char *)&v69 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v69 - v13;
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F40F0);
  uint64_t v15 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  MEMORY[0x1F4188790](v75);
  int64_t v76 = (uint64_t *)((char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = a1[3];
  char v74 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_1ACC5FC88();
  int v71 = v17;
  uint64_t v20 = v73;
  sub_1ACE77C48();
  if (v20) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v74);
  }
  uint64_t v21 = (uint64_t)v5;
  uint64_t v22 = (uint64_t)v8;
  LOBYTE(v77) = 0;
  uint64_t v23 = sub_1ACE775F8();
  unint64_t v24 = v76;
  uint64_t *v76 = v23;
  v24[1] = v25;
  LOBYTE(v77) = 1;
  v24[2] = sub_1ACE775F8();
  v24[3] = v26;
  LOBYTE(v77) = 2;
  v24[4] = sub_1ACE775F8();
  v24[5] = v27;
  char v79 = 3;
  sub_1ACA80CD4();
  sub_1ACE77638();
  char v28 = v78;
  v24[6] = v77;
  *((unsigned char *)v24 + 56) = v28;
  char v79 = 4;
  sub_1ACE77638();
  char v29 = v78;
  v24[8] = v77;
  *((unsigned char *)v24 + 72) = v29;
  LOBYTE(v77) = 5;
  v24[10] = sub_1ACE775F8();
  v24[11] = v30;
  LOBYTE(v77) = 6;
  v24[12] = sub_1ACE775F8();
  v24[13] = v31;
  LOBYTE(v77) = 7;
  uint64_t v32 = sub_1ACE775F8();
  uint64_t v33 = v76;
  v76[14] = v32;
  v33[15] = v34;
  sub_1ACE74F28();
  LOBYTE(v77) = 8;
  uint64_t v73 = sub_1ACC5FCDC(&qword_1E99F0ED0, MEMORY[0x1E4F276F0]);
  sub_1ACE77638();
  sub_1ACA50E14((uint64_t)v14, (uint64_t)v76 + v75[12], &qword_1EB7731B0);
  LOBYTE(v77) = 9;
  uint64_t v35 = sub_1ACE775F8();
  uint64_t v36 = (uint64_t *)((char *)v76 + v75[13]);
  *uint64_t v36 = v35;
  v36[1] = v37;
  LOBYTE(v77) = 10;
  sub_1ACE77678();
  *(uint64_t *)((char *)v76 + v75[14]) = v38;
  LOBYTE(v77) = 11;
  uint64_t v39 = sub_1ACE77618();
  uint64_t v40 = (char *)v76 + v75[15];
  *(void *)uint64_t v40 = v39;
  v40[8] = v41 & 1;
  LOBYTE(v77) = 12;
  sub_1ACE77638();
  sub_1ACA50E14((uint64_t)v11, (uint64_t)v76 + v75[16], &qword_1EB7731B0);
  LOBYTE(v77) = 13;
  uint64_t v42 = sub_1ACE775F8();
  uint64_t v43 = (uint64_t *)((char *)v76 + v75[17]);
  *uint64_t v43 = v42;
  v43[1] = v44;
  type metadata accessor for ServerArtwork();
  char v79 = 14;
  sub_1ACC5FCDC(&qword_1EB766D40, (void (*)(uint64_t))type metadata accessor for ServerArtwork);
  sub_1ACE77638();
  *(uint64_t *)((char *)v76 + v75[18]) = v77;
  LOBYTE(v77) = 15;
  *((unsigned char *)v76 + v75[19]) = sub_1ACE77668() & 1;
  sub_1ACE750A8();
  LOBYTE(v77) = 16;
  sub_1ACC5FCDC(&qword_1EB770958, MEMORY[0x1E4F27928]);
  sub_1ACE77638();
  sub_1ACA50E14(v21, (uint64_t)v76 + v75[20], (uint64_t *)&unk_1EB773140);
  LOBYTE(v77) = 17;
  uint64_t v45 = sub_1ACE775F8();
  int v46 = (uint64_t *)((char *)v76 + v75[21]);
  *int v46 = v45;
  v46[1] = v47;
  LOBYTE(v77) = 18;
  *((unsigned char *)v76 + v75[22]) = sub_1ACE77668() & 1;
  LOBYTE(v77) = 19;
  *((unsigned char *)v76 + v75[23]) = sub_1ACE77668() & 1;
  LOBYTE(v77) = 20;
  *((unsigned char *)v76 + v75[24]) = sub_1ACE77668() & 1;
  LOBYTE(v77) = 21;
  *((unsigned char *)v76 + v75[25]) = sub_1ACE77668() & 1;
  char v79 = 22;
  sub_1ACC5FEC8();
  sub_1ACE77638();
  *((unsigned char *)v76 + v75[26]) = v77;
  char v79 = 23;
  sub_1ACC5FF1C();
  sub_1ACE77638();
  *((unsigned char *)v76 + v75[27]) = v77;
  char v79 = 24;
  sub_1ACC5FF70();
  sub_1ACE77638();
  *((unsigned char *)v76 + v75[28]) = v77;
  LOBYTE(v77) = 25;
  *(uint64_t *)((char *)v76 + v75[29]) = sub_1ACE776A8();
  LOBYTE(v77) = 26;
  *(uint64_t *)((char *)v76 + v75[30]) = sub_1ACE776A8();
  LOBYTE(v77) = 27;
  *((unsigned char *)v76 + v75[31]) = sub_1ACE77668() & 1;
  LOBYTE(v77) = 28;
  uint64_t v48 = sub_1ACE775F8();
  uint64_t v49 = (uint64_t *)((char *)v76 + v75[32]);
  *uint64_t v49 = v48;
  v49[1] = v50;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F40D8);
  char v79 = 29;
  sub_1ACC5FFC4(&qword_1E99F4108, (void (*)(void))sub_1ACA57C40);
  sub_1ACE77698();
  *(uint64_t *)((char *)v76 + v75[33]) = v77;
  LOBYTE(v77) = 30;
  uint64_t v51 = sub_1ACE775F8();
  uint64_t v52 = (uint64_t *)((char *)v76 + v75[34]);
  uint64_t *v52 = v51;
  v52[1] = v53;
  LOBYTE(v77) = 31;
  uint64_t v54 = sub_1ACE775F8();
  uint64_t v55 = (uint64_t *)((char *)v76 + v75[35]);
  uint64_t *v55 = v54;
  v55[1] = v56;
  LOBYTE(v77) = 32;
  sub_1ACE77638();
  sub_1ACA50E14(v22, (uint64_t)v76 + v75[36], &qword_1EB7731B0);
  LOBYTE(v77) = 33;
  uint64_t v57 = sub_1ACE775F8();
  size_t v58 = (uint64_t *)((char *)v76 + v75[37]);
  *size_t v58 = v57;
  v58[1] = v59;
  LOBYTE(v77) = 34;
  uint64_t v60 = sub_1ACE775F8();
  uint64_t v61 = (uint64_t *)((char *)v76 + v75[38]);
  *uint64_t v61 = v60;
  v61[1] = v62;
  char v79 = 35;
  sub_1ACC60040();
  sub_1ACE77698();
  *((unsigned char *)v76 + v75[39]) = v77;
  LOBYTE(v77) = 36;
  *((unsigned char *)v76 + v75[40]) = sub_1ACE77668() & 1;
  LOBYTE(v77) = 37;
  *((unsigned char *)v76 + v75[41]) = sub_1ACE77668() & 1;
  LOBYTE(v77) = 38;
  *((unsigned char *)v76 + v75[42]) = sub_1ACE77668() & 1;
  LOBYTE(v77) = 39;
  *((unsigned char *)v76 + v75[43]) = sub_1ACE77668() & 1;
  LOBYTE(v77) = 40;
  *((unsigned char *)v76 + v75[44]) = sub_1ACE77668() & 1;
  char v79 = 41;
  sub_1ACC60094();
  sub_1ACE77638();
  *((unsigned char *)v76 + v75[45]) = v77;
  LOBYTE(v77) = 42;
  uint64_t v63 = sub_1ACE775F8();
  uint64_t v65 = v64;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v71, v72);
  uint64_t v66 = (uint64_t)v76;
  uint64_t v67 = (uint64_t *)((char *)v76 + v75[46]);
  *uint64_t v67 = v63;
  v67[1] = v65;
  sub_1ACA642F8(v66, v70, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v74);
  return sub_1ACC5E154(v66, type metadata accessor for PodcastsMediaLibrary.MediaItem);
}

uint64_t sub_1ACC5B2F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PodcastsMediaLibrary.MediaItem.init(from:)(a1, a2);
}

uint64_t sub_1ACC5B308(void *a1)
{
  return PodcastsMediaLibrary.MediaItem.encode(to:)(a1);
}

uint64_t sub_1ACC5B324()
{
  uint64_t v1 = v0 + OBJC_IVAR___MTServerPodcastEpisode_id;
  unint64_t v3 = *(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_id);
  unint64_t v2 = *(void *)(v1 + 8);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1ACD1C588(v3, v2);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 < 0)
  {
    __break(1u);
  }
  else
  {
    id v7 = objc_msgSend(self, sel_validatedIdNumberFromStoreId_, v5);
    if (!v7) {
      return 0;
    }
    unint64_t v8 = v7;
    id v9 = objc_msgSend(v7, sel_stringValue);
    uint64_t v4 = sub_1ACE761B8();

    return v4;
  }
  return result;
}

uint64_t sub_1ACC5B410(uint64_t a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F41A0);
  uint64_t inited = swift_initStackObject();
  uint64_t v5 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_1ACE84470;
  *(void *)(inited + 32) = 0xD000000000000019;
  *(void *)(inited + 40) = 0x80000001ACECDBF0;
  if (!a1)
  {
    *(_OWORD *)(inited + 48) = xmmword_1ACE91EF0;
    uint64_t v10 = (uint64_t *)(inited + 80);
    *(void *)(inited + 64) = 0xD000000000000019;
    *(void *)(inited + 72) = 0x80000001ACECDDD0;
    goto LABEL_14;
  }
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v6) {
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(v6 + 112);
  if (!v7)
  {
LABEL_8:
    unint64_t v27 = 0xF000000000000000;
    goto LABEL_9;
  }
  uint64_t v8 = swift_retain();
  id v9 = sub_1ACDEE8BC(v8);
  swift_release();
  if (!v9)
  {
LABEL_7:
    uint64_t v7 = 0;
    goto LABEL_8;
  }
  sub_1ACE74928();
  swift_allocObject();
  sub_1ACE74918();
  type metadata accessor for PlayerArtwork();
  sub_1ACC5FCDC(qword_1EB76EAD8, (void (*)(uint64_t))type metadata accessor for PlayerArtwork);
  uint64_t v7 = sub_1ACE74908();
  unint64_t v27 = v26;

  swift_release();
LABEL_9:
  v5[6] = v7;
  v5[7] = v27;
  v5[8] = 0xD000000000000019;
  v5[9] = 0x80000001ACECDDD0;
  uint64_t v10 = v5 + 10;
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (v11)
  {
    uint64_t v12 = *(void *)(v11 + 152);
    if (v12)
    {
      if (*(void *)(v12 + 16))
      {
        uint64_t v13 = swift_retain();
        id v14 = sub_1ACDEE8BC(v13);
        swift_release();
        if (v14)
        {
          sub_1ACE74928();
          swift_allocObject();
          sub_1ACE74918();
          type metadata accessor for PlayerArtwork();
          sub_1ACC5FCDC(qword_1EB76EAD8, (void (*)(uint64_t))type metadata accessor for PlayerArtwork);
          uint64_t v28 = sub_1ACE74908();
          unint64_t v30 = v29;

          swift_release();
          *uint64_t v10 = v28;
          goto LABEL_15;
        }
      }
    }
  }
LABEL_14:
  *uint64_t v10 = 0;
  unint64_t v30 = 0xF000000000000000;
LABEL_15:
  v5[11] = v30;
  v5[12] = 0xD00000000000001CLL;
  v5[13] = 0x80000001ACECDBD0;
  uint64_t v15 = *(void **)(v2 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  uint64_t v16 = v15[16];
  if (v16)
  {
    BOOL v17 = v15[15] == 0x65646F73697065 && v16 == 0xE700000000000000;
    if (!v17 && (sub_1ACE77848() & 1) == 0) {
      goto LABEL_24;
    }
  }
  uint64_t v18 = v15[17];
  if (!v18)
  {
LABEL_25:
    unint64_t v25 = 0xF000000000000000;
    goto LABEL_26;
  }
  uint64_t v19 = swift_retain();
  id v20 = sub_1ACDEE8BC(v19);
  swift_release();
  if (!v20)
  {
LABEL_24:
    uint64_t v18 = 0;
    goto LABEL_25;
  }
  sub_1ACE74928();
  swift_allocObject();
  sub_1ACE74918();
  type metadata accessor for PlayerArtwork();
  sub_1ACC5FCDC(qword_1EB76EAD8, (void (*)(uint64_t))type metadata accessor for PlayerArtwork);
  uint64_t v18 = sub_1ACE74908();
  unint64_t v25 = v24;

  swift_release();
LABEL_26:
  v5[14] = v18;
  v5[15] = v25;
  unint64_t v21 = sub_1ACA36634((uint64_t)v5);
  uint64_t v22 = sub_1ACC56B20(v21);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1ACC5B850()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F41A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84470;
  *(void *)(inited + 32) = 0xD000000000000019;
  *(void *)(inited + 40) = 0x80000001ACECDBF0;
  id v3 = objc_msgSend(v0, sel_podcast);
  if (!v3) {
    goto LABEL_5;
  }
  id v4 = MTPodcast.artwork.getter();

  if (!v4)
  {
    id v3 = 0;
LABEL_5:
    unint64_t v17 = 0xF000000000000000;
    goto LABEL_6;
  }
  sub_1ACE74928();
  swift_allocObject();
  sub_1ACE74918();
  id v21 = v4;
  type metadata accessor for PlayerArtwork();
  sub_1ACC5FCDC(qword_1EB76EAD8, (void (*)(uint64_t))type metadata accessor for PlayerArtwork);
  id v3 = (id)sub_1ACE74908();
  unint64_t v17 = v16;

  swift_release();
LABEL_6:
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v17;
  *(void *)(inited + 64) = 0xD000000000000019;
  *(void *)(inited + 72) = 0x80000001ACECDDD0;
  id v5 = objc_msgSend(v1, sel_podcast, v21);
  if (v5 && (uint64_t v6 = v5, v7 = MTPodcast.uberArtwork.getter(), v6, v7))
  {
    sub_1ACE74928();
    swift_allocObject();
    sub_1ACE74918();
    type metadata accessor for PlayerArtwork();
    sub_1ACC5FCDC(qword_1EB76EAD8, (void (*)(uint64_t))type metadata accessor for PlayerArtwork);
    uint64_t v18 = sub_1ACE74908();
    unint64_t v20 = v19;

    swift_release();
  }
  else
  {
    uint64_t v18 = 0;
    unint64_t v20 = 0xF000000000000000;
  }
  *(void *)(inited + 80) = v18;
  *(void *)(inited + 88) = v20;
  *(void *)(inited + 96) = 0xD00000000000001CLL;
  *(void *)(inited + 104) = 0x80000001ACECDBD0;
  id v8 = MTEpisode.artwork.getter();
  if (v8)
  {
    id v9 = v8;
    sub_1ACE74928();
    swift_allocObject();
    sub_1ACE74918();
    type metadata accessor for PlayerArtwork();
    sub_1ACC5FCDC(qword_1EB76EAD8, (void (*)(uint64_t))type metadata accessor for PlayerArtwork);
    uint64_t v10 = sub_1ACE74908();
    unint64_t v12 = v11;

    swift_release();
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v12 = 0xF000000000000000;
  }
  *(void *)(inited + 112) = v10;
  *(void *)(inited + 120) = v12;
  unint64_t v13 = sub_1ACA36634(inited);
  uint64_t v14 = sub_1ACC56B20(v13);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1ACC5BBC4()
{
  id v1 = v0;
  id v2 = objc_msgSend(v1, sel_uuid);
  if (!v2) {
    goto LABEL_7;
  }
  id v3 = v2;
  sub_1ACE761B8();

  uint64_t v4 = MTPodcast.identifier.getter();
  if (v6 == 0xFF)
  {
    swift_bridgeObjectRelease();
LABEL_7:

    return 4;
  }
  uint64_t v7 = v4;
  uint64_t v8 = v5;
  unsigned __int8 v9 = v6;
  unsigned int v10 = objc_msgSend(v1, sel_hidden);
  unsigned int v11 = objc_msgSend(v1, sel_subscribed);
  unsigned int v12 = objc_msgSend(v1, sel_isImplicitlyFollowed);

  if (v11)
  {
    if (((v12 | v10) & 1) == 0)
    {
      sub_1ACADC6D8(v7, v8, v9);
      swift_bridgeObjectRelease();
      return 0;
    }
    goto LABEL_11;
  }
  if (v12)
  {
    if (v10)
    {
LABEL_11:
      sub_1ACC6637C();
      uint64_t v14 = (void *)swift_allocError();
      *uint64_t v15 = v11;
      v15[1] = v12;
      _OWORD v15[2] = v10;
      swift_willThrow();
      sub_1ACADC6D8(v7, v8, v9);
      swift_bridgeObjectRelease();
      if (qword_1E99EFF10 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1ACE754C8();
      __swift_project_value_buffer(v16, (uint64_t)qword_1E99F2C40);
      id v17 = v1;
      id v18 = v14;
      id v19 = v17;
      id v20 = v14;
      id v21 = sub_1ACE75498();
      os_log_type_t v22 = sub_1ACE76BE8();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        unint64_t v24 = (void *)swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 141558531;
        uint64_t v29 = v28;
        sub_1ACE76FF8();
        *(_WORD *)(v23 + 12) = 2113;
        id v25 = v19;
        sub_1ACE76FF8();
        *unint64_t v24 = v19;

        *(_WORD *)(v23 + 22) = 2082;
        swift_getErrorValue();
        uint64_t v26 = sub_1ACE77A98();
        sub_1ACA3189C(v26, v27, &v29);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1AC9D5000, v21, v22, "Unable to retrieve subscription state for %{private,mask.hash}@ with error %{public}s.", (uint8_t *)v23, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v24, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v28, -1, -1);
        MEMORY[0x1AD11B340](v23, -1, -1);
      }
      else
      {
      }
      return 4;
    }
    sub_1ACADC6D8(v7, v8, v9);
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    sub_1ACADC6D8(v7, v8, v9);
    swift_bridgeObjectRelease();
    if (v10) {
      return 3;
    }
    else {
      return 1;
    }
  }
}

uint64_t URLTrackIdentifier.init(mediaItem:playbackContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if ((*(unsigned char *)(a1 + 56) & 1) != 0
    || ((uint64_t v6 = *(void *)(a1 + 48)) != 0 ? (v7 = v6 == 1000000000000) : (v7 = 1), v7))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3EE0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1ACE84820;
    *(unsigned char *)(inited + 32) = 5;
    uint64_t v8 = *(void *)(a1 + 40);
    *(void *)(inited + 40) = *(void *)(a1 + 32);
    *(void *)(inited + 48) = v8;
    *(unsigned char *)(inited + 56) = 8;
    uint64_t v9 = *(void *)(a1 + 104);
    *(void *)(inited + 64) = *(void *)(a1 + 96);
    *(void *)(inited + 72) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3EE0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
    *(unsigned char *)(inited + 32) = 3;
    sub_1ACA55E4C();
    *(void *)(inited + 40) = sub_1ACE770B8();
    *(void *)(inited + 48) = v22;
  }
  unint64_t v10 = sub_1ACA3702C(inited);
  unsigned int v11 = *(void **)(a2 + 40);
  if (v11)
  {
    id v12 = v11;
    id v13 = objc_msgSend(v12, sel_ams_DSID);
    if (v13)
    {
      uint64_t v14 = v13;
      id v15 = objc_msgSend(v13, sel_stringValue);

      uint64_t v16 = sub_1ACE761B8();
      uint64_t v18 = v17;

      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1ACD0D728(v16, v18, 0x10u, isUniquelyReferenced_nonNull_native);

      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
  sub_1ACC5E154(a2, (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  uint64_t result = sub_1ACC5E154(a1, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  *(void *)a3 = v10;
  *(unsigned char *)(a3 + 8) = 4;
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.storeTrackId.getter()
{
  return *(void *)v0;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.podcastStoreId.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.uuid.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.podcastUUID.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.managedObjectIdentifierURI.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0);
  return sub_1ACA3AAD4(v1 + *(int *)(v3 + 32), a1, &qword_1EB7731B0);
}

double PodcastsMediaLibrary.MediaItemSnapshot.duration.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0) + 36));
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.author.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0) + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.artworkURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACC5C334(type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot, a1);
}

uint64_t sub_1ACC5C334@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1(0);
  return sub_1ACA3AAD4(v2 + *(int *)(v4 + 48), a2, &qword_1EB7731B0);
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.album.getter()
{
  return sub_1ACC5C394(type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
}

uint64_t sub_1ACC5C394(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 52));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.isExplicit.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0) + 56));
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.contentItemID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0) + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.assetURL.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0) + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.showArtworkTemplateURL.getter()
{
  return sub_1ACC5C498(type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
}

uint64_t sub_1ACC5C498(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 68));
  swift_bridgeObjectRetain();
  return v2;
}

unint64_t sub_1ACC5C4E4(char a1)
{
  unint64_t result = 0x61725465726F7473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x5374736163646F70;
      break;
    case 2:
      unint64_t result = 1684632949;
      break;
    case 3:
      unint64_t result = 0x5574736163646F70;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 5:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 6:
      unint64_t result = 0x656C746974;
      break;
    case 7:
      unint64_t result = 0x726F68747561;
      break;
    case 8:
      unint64_t result = 0x556B726F77747261;
      break;
    case 9:
      unint64_t result = 0x6D75626C61;
      break;
    case 10:
      unint64_t result = 0x63696C7078457369;
      break;
    case 11:
      unint64_t result = 0x49746E65746E6F63;
      break;
    case 12:
      unint64_t result = 0x4C52557465737361;
      break;
    case 13:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACC5C6B8()
{
  return sub_1ACC5C4E4(*v0);
}

uint64_t sub_1ACC5C6C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACC65D78(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ACC5C6E8(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_1ACC5C6F4(uint64_t a1)
{
  unint64_t v2 = sub_1ACC60AA8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC5C730(uint64_t a1)
{
  unint64_t v2 = sub_1ACC60AA8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4120);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC60AA8();
  sub_1ACE77C78();
  char v9 = *((unsigned char *)v3 + 8);
  uint64_t v12 = *v3;
  char v13 = v9;
  char v14 = 0;
  sub_1ACA80994();
  sub_1ACE77728();
  if (!v2)
  {
    char v10 = *((unsigned char *)v3 + 24);
    uint64_t v12 = v3[2];
    char v13 = v10;
    char v14 = 1;
    sub_1ACE77728();
    LOBYTE(v12) = 2;
    sub_1ACE776E8();
    LOBYTE(v12) = 3;
    sub_1ACE776E8();
    type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0);
    LOBYTE(v12) = 4;
    sub_1ACE74F28();
    sub_1ACC5FCDC(&qword_1E99F0E98, MEMORY[0x1E4F276F0]);
    sub_1ACE77728();
    LOBYTE(v12) = 5;
    sub_1ACE77768();
    LOBYTE(v12) = 6;
    sub_1ACE776E8();
    LOBYTE(v12) = 7;
    sub_1ACE776E8();
    LOBYTE(v12) = 8;
    sub_1ACE77728();
    LOBYTE(v12) = 9;
    sub_1ACE776E8();
    LOBYTE(v12) = 10;
    sub_1ACE77758();
    LOBYTE(v12) = 11;
    sub_1ACE77748();
    LOBYTE(v12) = 12;
    sub_1ACE776E8();
    LOBYTE(v12) = 13;
    sub_1ACE776E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v45 - v9;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4130);
  uint64_t v11 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  char v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0);
  MEMORY[0x1F4188790](v50);
  uint64_t v48 = a1;
  uint64_t v49 = (uint64_t *)((char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC60AA8();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
  }
  uint64_t v45 = a2;
  int v46 = v7;
  uint64_t v15 = v11;
  char v53 = 0;
  sub_1ACA80CD4();
  sub_1ACE77638();
  char v16 = v52;
  uint64_t v17 = v49;
  *uint64_t v49 = v51;
  *((unsigned char *)v17 + 8) = v16;
  char v53 = 1;
  sub_1ACE77638();
  char v18 = v52;
  _OWORD v17[2] = v51;
  *((unsigned char *)v17 + 24) = v18;
  LOBYTE(v51) = 2;
  v17[4] = sub_1ACE775F8();
  v17[5] = v19;
  LOBYTE(v51) = 3;
  void v17[6] = sub_1ACE775F8();
  v17[7] = v20;
  sub_1ACE74F28();
  LOBYTE(v51) = 4;
  sub_1ACC5FCDC(&qword_1E99F0ED0, MEMORY[0x1E4F276F0]);
  sub_1ACE77638();
  id v21 = v50;
  sub_1ACA50E14((uint64_t)v10, (uint64_t)v17 + v50[8], &qword_1EB7731B0);
  LOBYTE(v51) = 5;
  sub_1ACE77678();
  *(void *)((char *)v17 + v21[9]) = v22;
  LOBYTE(v51) = 6;
  uint64_t v23 = sub_1ACE775F8();
  unint64_t v24 = (void *)((char *)v17 + v21[10]);
  *unint64_t v24 = v23;
  v24[1] = v25;
  LOBYTE(v51) = 7;
  uint64_t v26 = sub_1ACE775F8();
  unint64_t v27 = (void *)((char *)v17 + v21[11]);
  *unint64_t v27 = v26;
  v27[1] = v28;
  LOBYTE(v51) = 8;
  uint64_t v29 = (uint64_t)v46;
  sub_1ACE77638();
  sub_1ACA50E14(v29, (uint64_t)v17 + v50[12], &qword_1EB7731B0);
  LOBYTE(v51) = 9;
  uint64_t v30 = sub_1ACE775F8();
  uint64_t v31 = (void *)((char *)v49 + v50[13]);
  *uint64_t v31 = v30;
  v31[1] = v32;
  LOBYTE(v51) = 10;
  *((unsigned char *)v49 + v50[14]) = sub_1ACE77668() & 1;
  LOBYTE(v51) = 11;
  uint64_t v33 = sub_1ACE77658();
  uint64_t v34 = (void *)((char *)v49 + v50[15]);
  uint64_t *v34 = v33;
  v34[1] = v35;
  LOBYTE(v51) = 12;
  uint64_t v36 = sub_1ACE775F8();
  uint64_t v37 = (void *)((char *)v49 + v50[16]);
  *uint64_t v37 = v36;
  v37[1] = v38;
  LOBYTE(v51) = 13;
  uint64_t v39 = sub_1ACE775F8();
  uint64_t v41 = v40;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v47);
  uint64_t v42 = (uint64_t)v49;
  uint64_t v43 = (void *)((char *)v49 + v50[17]);
  *uint64_t v43 = v39;
  v43[1] = v41;
  sub_1ACA642F8(v42, v45, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
  return sub_1ACC5E154(v42, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
}

uint64_t sub_1ACC5D43C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PodcastsMediaLibrary.MediaItemSnapshot.init(from:)(a1, a2);
}

uint64_t sub_1ACC5D454(void *a1)
{
  return PodcastsMediaLibrary.MediaItemSnapshot.encode(to:)(a1);
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.init(mediaItem:contentItemID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7 = *(unsigned char *)(a1 + 56);
  *(void *)a4 = *(void *)(a1 + 48);
  *(unsigned char *)(a4 + 8) = v7;
  char v8 = *(unsigned char *)(a1 + 72);
  *(void *)(a4 + 16) = *(void *)(a1 + 64);
  *(unsigned char *)(a4 + 24) = v8;
  uint64_t v9 = *(void *)(a1 + 88);
  *(void *)(a4 + 32) = *(void *)(a1 + 80);
  *(void *)(a4 + 40) = v9;
  char v10 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v11 = a1 + v10[12];
  uint64_t v12 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0);
  sub_1ACA3AAD4(v11, a4 + v12[8], &qword_1EB7731B0);
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = (void *)(a4 + v12[10]);
  *uint64_t v14 = *(void *)a1;
  v14[1] = v13;
  uint64_t v15 = (uint64_t *)(a1 + v10[13]);
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  char v18 = (void *)(a4 + v12[11]);
  *char v18 = v16;
  v18[1] = v17;
  uint64_t v19 = (uint64_t *)(a1 + v10[21]);
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  uint64_t v22 = (void *)(a4 + v12[13]);
  *uint64_t v22 = v20;
  v22[1] = v21;
  sub_1ACA3AAD4(a1 + v10[16], a4 + v12[12], &qword_1EB7731B0);
  uint64_t v23 = (void *)(a4 + v12[15]);
  *uint64_t v23 = a2;
  v23[1] = a3;
  *(unsigned char *)(a4 + v12[14]) = *(unsigned char *)(a1 + v10[23]);
  uint64_t v24 = *(void *)(a1 + 24);
  uint64_t v25 = (void *)(a4 + v12[16]);
  *uint64_t v25 = *(void *)(a1 + 16);
  v25[1] = v24;
  *(void *)(a4 + v12[9]) = *(void *)(a1 + v10[14]);
  uint64_t v26 = (uint64_t *)(a1 + v10[32]);
  uint64_t v27 = *v26;
  uint64_t v28 = v26[1];
  uint64_t v29 = (void *)(a4 + v12[17]);
  *uint64_t v29 = v27;
  v29[1] = v28;
  uint64_t v30 = (uint64_t *)(a1 + v10[37]);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1ACC5E154(a1, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  *(void *)(a4 + 48) = v32;
  *(void *)(a4 + 56) = v31;
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.init(dictionary:)()
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1ACE75FC8();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  id v2 = objc_msgSend(v0, sel_dataWithJSONObject_options_error_, v1, 0, v9);

  id v3 = v9[0];
  if (v2)
  {
    uint64_t v4 = sub_1ACE74F88();
    unint64_t v6 = v5;

    sub_1ACE748C8();
    swift_allocObject();
    sub_1ACE748B8();
    type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0);
    sub_1ACC5FCDC(&qword_1E99F4138, (void (*)(uint64_t))type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
    sub_1ACE748A8();
    sub_1ACA50850(v4, v6);
    return swift_release();
  }
  else
  {
    char v8 = v3;
    sub_1ACE74D78();

    return swift_willThrow();
  }
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.asDictionary()()
{
  v12[4] = *(id *)MEMORY[0x1E4F143B8];
  sub_1ACE74928();
  swift_allocObject();
  sub_1ACE74918();
  type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0);
  sub_1ACC5FCDC(&qword_1E99F4140, (void (*)(uint64_t))type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
  uint64_t v1 = sub_1ACE74908();
  unint64_t v3 = v2;
  uint64_t result = swift_release();
  if (!v0)
  {
    unint64_t v5 = self;
    unint64_t v6 = (void *)sub_1ACE74F68();
    v12[0] = 0;
    id v7 = objc_msgSend(v5, sel_JSONObjectWithData_options_error_, v6, 4, v12);

    if (v7)
    {
      id v8 = v12[0];
      sub_1ACE770C8();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770968);
      if (swift_dynamicCast())
      {
        sub_1ACA50850(v1, v3);
        return v11;
      }
      sub_1ACAB2A08();
      swift_allocError();
      *char v10 = 6;
    }
    else
    {
      id v9 = v12[0];
      sub_1ACE74D78();
    }
    swift_willThrow();
    return sub_1ACA50850(v1, v3);
  }
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItem.episodeArtworkTemplate.getter()
{
  return sub_1ACC5DA10(0xD00000000000001CLL, 0x80000001ACECDBD0);
}

uint64_t sub_1ACC5DA10(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 132));
  if (!*(void *)(v5 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1ACA657FC(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v8 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v6);
  uint64_t v9 = *v8;
  unint64_t v10 = v8[1];
  sub_1ACA3985C(*v8, v10);
  swift_bridgeObjectRelease();
  sub_1ACE748C8();
  swift_allocObject();
  sub_1ACA3985C(v9, v10);
  sub_1ACE748B8();
  type metadata accessor for PlayerArtwork();
  sub_1ACC5FCDC(&qword_1E99F4148, (void (*)(uint64_t))type metadata accessor for PlayerArtwork);
  sub_1ACE748A8();
  sub_1ACA50850(v9, v10);
  sub_1ACA50850(v9, v10);
  swift_release();
  uint64_t v12 = *(void *)&v13[OBJC_IVAR___IMPlayerArtwork_template];
  swift_bridgeObjectRetain();

  return v12;
}

uint64_t PodcastsMediaLibrary.MediaItem.showArtworkTemplate.getter()
{
  return sub_1ACC5DA10(0xD000000000000019, 0x80000001ACECDBF0);
}

uint64_t PodcastsMediaLibrary.MediaItem.preferredArtworkTemplate.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + *(int *)(v5 + 132));
  if (*(void *)(v6 + 16) && (uint64_t v7 = sub_1ACA657FC(0xD00000000000001CLL, 0x80000001ACECDBD0), (v8 & 1) != 0))
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v7);
    uint64_t v10 = *v9;
    unint64_t v11 = v9[1];
    sub_1ACA3985C(*v9, v11);
    sub_1ACA642F8(v1, (uint64_t)v4, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    if (v11 >> 60 != 15) {
      goto LABEL_9;
    }
  }
  else
  {
    sub_1ACA642F8(v1, (uint64_t)v4, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  }
  uint64_t v12 = *(void *)&v4[*(int *)(v2 + 132)];
  if (!*(void *)(v12 + 16) || (uint64_t v13 = sub_1ACA657FC(0xD000000000000019, 0x80000001ACECDBF0), (v14 & 1) == 0))
  {
    sub_1ACC5E154((uint64_t)v4, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    uint64_t v17 = *(void *)(v1 + *(int *)(v2 + 128));
    swift_bridgeObjectRetain();
    return v17;
  }
  uint64_t v15 = (uint64_t *)(*(void *)(v12 + 56) + 16 * v13);
  uint64_t v10 = *v15;
  unint64_t v11 = v15[1];
  sub_1ACA3985C(*v15, v11);
LABEL_9:
  sub_1ACC5E154((uint64_t)v4, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  sub_1ACE748C8();
  swift_allocObject();
  sub_1ACA3985C(v10, v11);
  sub_1ACE748B8();
  type metadata accessor for PlayerArtwork();
  sub_1ACC5FCDC(&qword_1E99F4148, (void (*)(uint64_t))type metadata accessor for PlayerArtwork);
  sub_1ACE748A8();
  sub_1ACAB2EF0(v10, v11);
  sub_1ACAB2EF0(v10, v11);
  swift_release();
  uint64_t v16 = v20;
  uint64_t v17 = *(void *)&v20[OBJC_IVAR___IMPlayerArtwork_template];
  swift_bridgeObjectRetain();

  return v17;
}

unint64_t PodcastsMediaLibrary.MediaItem.preferredArtworkResponseDictionary.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(void *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 72)))
  {
    swift_retain();
    unint64_t v9 = sub_1ACC578A0();
    swift_release();
  }
  else
  {
    PodcastsMediaLibrary.MediaItem.preferredArtworkTemplate.getter();
    if (v8)
    {
      sub_1ACE74EF8();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v7, v3, v4);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4B0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1ACE84470;
        *(void *)(inited + 32) = 0x6874646977;
        *(void *)(inited + 40) = 0xE500000000000000;
        uint64_t v11 = MEMORY[0x1E4FBC958];
        *(void *)(inited + 48) = 0x4082C00000000000;
        *(void *)(inited + 72) = v11;
        *(void *)(inited + 80) = 0x746867696568;
        *(void *)(inited + 88) = 0xE600000000000000;
        *(void *)(inited + 96) = 0x4082C00000000000;
        *(void *)(inited + 120) = v11;
        *(void *)(inited + 128) = 7107189;
        *(void *)(inited + 136) = 0xE300000000000000;
        *(void *)(inited + 168) = v4;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 144));
        (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v5 + 16))(boxed_opaque_existential_1, v7, v4);
        unint64_t v9 = sub_1ACA3625C(inited);
        (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
        return v9;
      }
      sub_1ACA50E78((uint64_t)v3, &qword_1EB7731B0);
    }
    return 0;
  }
  return v9;
}

uint64_t type metadata accessor for PodcastsMediaLibrary.MediaItem(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1EB773338);
}

uint64_t sub_1ACC5E154(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL _s18PodcastsFoundation0A12MediaLibraryC0C4ItemV2eeoiySbAE_AEtFZ_0(char *a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v328 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v307 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v327 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A968);
  MEMORY[0x1F4188790](v327);
  uint64_t v8 = (char *)v307 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v307 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  char v14 = (char *)v307 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v307 - v16;
  uint64_t v18 = sub_1ACE74F28();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v331 = v18;
  uint64_t v332 = v19;
  MEMORY[0x1F4188790](v18);
  v330 = (char *)v307 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3478);
  MEMORY[0x1F4188790](v21);
  uint64_t v326 = (uint64_t)v307 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v329 = (uint64_t)v307 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)v307 - v26;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v28 - 8);
  MEMORY[0x1F4188790](v29);
  MEMORY[0x1F4188790](v30);
  MEMORY[0x1F4188790](v31);
  MEMORY[0x1F4188790](v32);
  MEMORY[0x1F4188790](v33);
  MEMORY[0x1F4188790](v34);
  MEMORY[0x1F4188790](v35);
  MEMORY[0x1F4188790]((char *)v307 - v36);
  int v46 = (char *)v307 - v45;
  uint64_t v47 = *((void *)a1 + 1);
  uint64_t v48 = *(void *)(a2 + 8);
  if (!v47)
  {
    uint64_t v324 = v21;
    uint64_t v325 = v37;
    v322 = v14;
    v323 = v17;
    if (v48) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v48) {
    return 0;
  }
  uint64_t v324 = v21;
  uint64_t v325 = v37;
  v322 = v14;
  v323 = v17;
  if (*(void *)a1 == *(void *)a2 && v47 == v48) {
    goto LABEL_8;
  }
  uint64_t v320 = (uint64_t)v11;
  uint64_t v321 = v38;
  uint64_t v49 = v42;
  uint64_t v50 = v43;
  v318 = v8;
  v319 = v6;
  uint64_t v317 = v4;
  uint64_t v51 = v44;
  uint64_t v52 = v39;
  char v53 = v27;
  uint64_t v54 = v40;
  uint64_t v55 = a2;
  uint64_t v56 = v46;
  uint64_t v57 = v41;
  char v58 = sub_1ACE77848();
  uint64_t v41 = v57;
  int v46 = v56;
  a2 = v55;
  uint64_t v40 = v54;
  uint64_t v27 = v53;
  uint64_t v39 = v52;
  uint64_t v11 = (char *)v320;
  uint64_t v38 = v321;
  uint64_t v44 = v51;
  uint64_t v4 = v317;
  uint64_t v8 = v318;
  uint64_t v6 = v319;
  uint64_t v43 = v50;
  uint64_t v42 = v49;
  char v59 = v58;
  BOOL result = 0;
  if (v59)
  {
LABEL_8:
    uint64_t v61 = *((void *)a1 + 3);
    uint64_t v62 = *(void *)(a2 + 24);
    if (v61)
    {
      if (!v62) {
        return 0;
      }
      if (*((void *)a1 + 2) != *(void *)(a2 + 16) || v61 != v62)
      {
        uint64_t v320 = (uint64_t)v11;
        uint64_t v321 = v38;
        uint64_t v63 = v42;
        uint64_t v64 = v43;
        v318 = v8;
        v319 = v6;
        uint64_t v317 = v4;
        uint64_t v65 = v44;
        uint64_t v66 = v39;
        uint64_t v67 = v27;
        uint64_t v68 = v40;
        uint64_t v69 = a2;
        uint64_t v70 = v46;
        uint64_t v71 = v41;
        char v72 = sub_1ACE77848();
        uint64_t v41 = v71;
        int v46 = v70;
        a2 = v69;
        uint64_t v40 = v68;
        uint64_t v27 = v67;
        uint64_t v39 = v66;
        uint64_t v11 = (char *)v320;
        uint64_t v38 = v321;
        uint64_t v44 = v65;
        uint64_t v4 = v317;
        uint64_t v8 = v318;
        uint64_t v6 = v319;
        uint64_t v43 = v64;
        uint64_t v42 = v63;
        char v73 = v72;
        BOOL result = 0;
        if ((v73 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v62)
    {
      return 0;
    }
    uint64_t v74 = *((void *)a1 + 5);
    uint64_t v75 = *(void *)(a2 + 40);
    if (v74)
    {
      if (!v75) {
        return 0;
      }
      if (*((void *)a1 + 4) != *(void *)(a2 + 32) || v74 != v75)
      {
        uint64_t v320 = (uint64_t)v11;
        uint64_t v321 = v38;
        uint64_t v76 = v42;
        uint64_t v77 = v43;
        v318 = v8;
        v319 = v6;
        uint64_t v317 = v4;
        uint64_t v78 = v44;
        uint64_t v79 = v39;
        uint64_t v80 = v27;
        uint64_t v81 = v40;
        uint64_t v82 = a2;
        uint64_t v83 = v46;
        uint64_t v84 = v41;
        char v85 = sub_1ACE77848();
        uint64_t v41 = v84;
        int v46 = v83;
        a2 = v82;
        uint64_t v40 = v81;
        uint64_t v27 = v80;
        uint64_t v39 = v79;
        uint64_t v11 = (char *)v320;
        uint64_t v38 = v321;
        uint64_t v44 = v78;
        uint64_t v4 = v317;
        uint64_t v8 = v318;
        uint64_t v6 = v319;
        uint64_t v43 = v77;
        uint64_t v42 = v76;
        char v86 = v85;
        BOOL result = 0;
        if ((v86 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v75)
    {
      return 0;
    }
    char v87 = *(unsigned char *)(a2 + 56);
    if (a1[56])
    {
      if (!*(unsigned char *)(a2 + 56)) {
        return 0;
      }
    }
    else
    {
      if (*((void *)a1 + 6) != *(void *)(a2 + 48)) {
        char v87 = 1;
      }
      if (v87) {
        return 0;
      }
    }
    char v88 = *(unsigned char *)(a2 + 72);
    if (a1[72])
    {
      if (!*(unsigned char *)(a2 + 72)) {
        return 0;
      }
    }
    else
    {
      if (*((void *)a1 + 8) != *(void *)(a2 + 64)) {
        char v88 = 1;
      }
      if (v88) {
        return 0;
      }
    }
    uint64_t v89 = *((void *)a1 + 11);
    uint64_t v90 = *(void *)(a2 + 88);
    if (v89)
    {
      if (!v90) {
        return 0;
      }
      if (*((void *)a1 + 10) != *(void *)(a2 + 80) || v89 != v90)
      {
        uint64_t v320 = (uint64_t)v11;
        uint64_t v321 = v38;
        uint64_t v91 = v42;
        uint64_t v92 = v43;
        v318 = v8;
        v319 = v6;
        uint64_t v317 = v4;
        uint64_t v93 = v44;
        uint64_t v94 = v39;
        __int16 v95 = v27;
        uint64_t v96 = v40;
        uint64_t v97 = a2;
        char v98 = v46;
        uint64_t v99 = v41;
        char v100 = sub_1ACE77848();
        uint64_t v41 = v99;
        int v46 = v98;
        a2 = v97;
        uint64_t v40 = v96;
        uint64_t v27 = v95;
        uint64_t v39 = v94;
        uint64_t v11 = (char *)v320;
        uint64_t v38 = v321;
        uint64_t v44 = v93;
        uint64_t v4 = v317;
        uint64_t v8 = v318;
        uint64_t v6 = v319;
        uint64_t v43 = v92;
        uint64_t v42 = v91;
        char v101 = v100;
        BOOL result = 0;
        if ((v101 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v90)
    {
      return 0;
    }
    uint64_t v102 = *((void *)a1 + 13);
    uint64_t v103 = *(void *)(a2 + 104);
    if (v102)
    {
      if (!v103) {
        return 0;
      }
      if (*((void *)a1 + 12) != *(void *)(a2 + 96) || v102 != v103)
      {
        uint64_t v320 = (uint64_t)v11;
        uint64_t v321 = v38;
        uint64_t v104 = v42;
        uint64_t v105 = v43;
        v318 = v8;
        v319 = v6;
        uint64_t v317 = v4;
        uint64_t v106 = v44;
        uint64_t v107 = v39;
        uint64_t v108 = v27;
        uint64_t v109 = v40;
        uint64_t v110 = a2;
        char v111 = v46;
        uint64_t v112 = v41;
        char v113 = sub_1ACE77848();
        uint64_t v41 = v112;
        int v46 = v111;
        a2 = v110;
        uint64_t v40 = v109;
        uint64_t v27 = v108;
        uint64_t v39 = v107;
        uint64_t v11 = (char *)v320;
        uint64_t v38 = v321;
        uint64_t v44 = v106;
        uint64_t v4 = v317;
        uint64_t v8 = v318;
        uint64_t v6 = v319;
        uint64_t v43 = v105;
        uint64_t v42 = v104;
        char v114 = v113;
        BOOL result = 0;
        if ((v114 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v103)
    {
      return 0;
    }
    uint64_t v115 = *((void *)a1 + 15);
    uint64_t v116 = *(void *)(a2 + 120);
    if (v115)
    {
      if (!v116) {
        return 0;
      }
      if (*((void *)a1 + 14) != *(void *)(a2 + 112) || v115 != v116)
      {
        uint64_t v320 = (uint64_t)v11;
        uint64_t v321 = v38;
        uint64_t v117 = v42;
        uint64_t v118 = v43;
        v318 = v8;
        v319 = v6;
        uint64_t v317 = v4;
        uint64_t v119 = v44;
        uint64_t v120 = v39;
        int32x2_t v121 = v27;
        uint64_t v122 = v40;
        uint64_t v123 = a2;
        int32x2_t v124 = v46;
        uint64_t v125 = v41;
        char v126 = sub_1ACE77848();
        uint64_t v41 = v125;
        int v46 = v124;
        a2 = v123;
        uint64_t v40 = v122;
        uint64_t v27 = v121;
        uint64_t v39 = v120;
        uint64_t v11 = (char *)v320;
        uint64_t v38 = v321;
        uint64_t v44 = v119;
        uint64_t v4 = v317;
        uint64_t v8 = v318;
        uint64_t v6 = v319;
        uint64_t v43 = v118;
        uint64_t v42 = v117;
        char v127 = v126;
        BOOL result = 0;
        if ((v127 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v116)
    {
      return 0;
    }
    uint64_t v315 = v41;
    v316 = v46;
    uint64_t v311 = v40;
    uint64_t v314 = v39;
    uint64_t v321 = v38;
    uint64_t v308 = v44;
    uint64_t v309 = v43;
    uint64_t v310 = v42;
    uint64_t v128 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    uint64_t v129 = *(int *)(v128 + 48);
    v318 = a1;
    uint64_t v130 = (uint64_t)v27;
    uint64_t v131 = a2;
    uint64_t v132 = (uint64_t)v316;
    sub_1ACA3AAD4((uint64_t)&a1[v129], (uint64_t)v316, &qword_1EB7731B0);
    v313 = (int *)v128;
    uint64_t v133 = *(int *)(v128 + 48);
    uint64_t v317 = v131;
    uint64_t v134 = v325;
    sub_1ACA3AAD4(v131 + v133, v325, &qword_1EB7731B0);
    uint64_t v135 = v130 + *(int *)(v324 + 48);
    sub_1ACA3AAD4(v132, v130, &qword_1EB7731B0);
    uint64_t v320 = v135;
    sub_1ACA3AAD4(v134, v135, &qword_1EB7731B0);
    uint64_t v136 = v331;
    uint64_t v138 = v332 + 48;
    uint64_t v137 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v332 + 48);
    if (v137(v130, 1, v331) == 1)
    {
      v312 = v137;
      sub_1ACA50E78(v134, &qword_1EB7731B0);
      sub_1ACA50E78(v132, &qword_1EB7731B0);
      if (v312(v320, 1, v136) == 1)
      {
        sub_1ACA50E78(v130, &qword_1EB7731B0);
        goto LABEL_65;
      }
    }
    else
    {
      uint64_t v139 = v315;
      sub_1ACA3AAD4(v130, v315, &qword_1EB7731B0);
      uint64_t v140 = v320;
      if (v137(v320, 1, v136) != 1)
      {
        v312 = v137;
        uint64_t v143 = v330;
        (*(void (**)(char *, uint64_t, uint64_t))(v332 + 32))(v330, v140, v136);
        sub_1ACC5FCDC(&qword_1EB770E98, MEMORY[0x1E4F276F0]);
        LODWORD(v320) = sub_1ACE76168();
        v319 = *(char **)(v332 + 8);
        ((void (*)(char *, uint64_t))v319)(v143, v136);
        sub_1ACA50E78(v325, &qword_1EB7731B0);
        sub_1ACA50E78((uint64_t)v316, &qword_1EB7731B0);
        ((void (*)(uint64_t, uint64_t))v319)(v139, v136);
        sub_1ACA50E78(v130, &qword_1EB7731B0);
        if ((v320 & 1) == 0) {
          return 0;
        }
LABEL_65:
        uint64_t v144 = v313;
        uint64_t v145 = v313[13];
        uint64_t v147 = v317;
        id v146 = v318;
        uint64_t v148 = &v318[v145];
        uint64_t v149 = *(void *)&v318[v145 + 8];
        uint64_t v150 = (void *)(v317 + v145);
        uint64_t v151 = v150[1];
        if (v149)
        {
          uint64_t v152 = v314;
          if (!v151) {
            return 0;
          }
          uint64_t v153 = v138;
          if (*(void *)v148 != *v150 || v149 != v151)
          {
            char v154 = sub_1ACE77848();
            uint64_t v152 = v314;
            id v146 = v318;
            char v155 = v154;
            BOOL result = 0;
            if ((v155 & 1) == 0) {
              return result;
            }
          }
        }
        else
        {
          uint64_t v153 = v138;
          uint64_t v152 = v314;
          if (v151) {
            return 0;
          }
        }
        if (*(double *)&v146[v144[14]] != *(double *)(v147 + v144[14])) {
          return 0;
        }
        uint64_t v156 = v144[15];
        v157 = (double *)&v146[v156];
        char v158 = v146[v156 + 8];
        uint64_t v159 = (double *)(v147 + v156);
        int v160 = *(unsigned __int8 *)(v147 + v156 + 8);
        if (v158)
        {
          uint64_t v161 = v328;
          if (!v160) {
            return 0;
          }
        }
        else
        {
          uint64_t v161 = v328;
          if (*v157 != *v159) {
            LOBYTE(v160) = 1;
          }
          if (v160) {
            return 0;
          }
        }
        v319 = v6;
        uint64_t v320 = (uint64_t)v11;
        uint64_t v162 = v152;
        sub_1ACA3AAD4((uint64_t)&v146[v144[16]], v152, &qword_1EB7731B0);
        uint64_t v163 = v147 + v144[16];
        uint64_t v164 = v311;
        sub_1ACA3AAD4(v163, v311, &qword_1EB7731B0);
        uint64_t v165 = v329;
        uint64_t v166 = v329 + *(int *)(v324 + 48);
        sub_1ACA3AAD4(v162, v329, &qword_1EB7731B0);
        sub_1ACA3AAD4(v164, v166, &qword_1EB7731B0);
        uint64_t v167 = v331;
        v168 = v312;
        unsigned int v169 = v312(v165, 1, v331);
        v307[1] = v153;
        if (v169 == 1)
        {
          sub_1ACA50E78(v311, &qword_1EB7731B0);
          sub_1ACA50E78(v314, &qword_1EB7731B0);
          v170 = v168;
          if (v168(v166, 1, v167) == 1)
          {
            sub_1ACA50E78(v329, &qword_1EB7731B0);
            goto LABEL_86;
          }
        }
        else
        {
          sub_1ACA3AAD4(v329, v321, &qword_1EB7731B0);
          v170 = v168;
          if (v168(v166, 1, v167) != 1)
          {
            uint64_t v172 = v331;
            uint64_t v171 = v332;
            v173 = v330;
            (*(void (**)(char *, uint64_t, uint64_t))(v332 + 32))(v330, v166, v331);
            sub_1ACC5FCDC(&qword_1EB770E98, MEMORY[0x1E4F276F0]);
            uint64_t v174 = v321;
            char v175 = sub_1ACE76168();
            v176 = *(void (**)(char *, uint64_t))(v171 + 8);
            v176(v173, v172);
            sub_1ACA50E78(v311, &qword_1EB7731B0);
            sub_1ACA50E78(v314, &qword_1EB7731B0);
            v176((char *)v174, v172);
            sub_1ACA50E78(v329, &qword_1EB7731B0);
            if ((v175 & 1) == 0) {
              return 0;
            }
LABEL_86:
            uint64_t v177 = v313[17];
            v178 = &v318[v177];
            uint64_t v179 = *(void *)&v318[v177 + 8];
            v180 = (void *)(v317 + v177);
            uint64_t v181 = v180[1];
            if (v179)
            {
              if (!v181) {
                return 0;
              }
              BOOL v182 = *(void *)v178 == *v180;
              uint64_t v184 = v317;
              v183 = v318;
              if (!v182 || v179 != v181)
              {
                char v185 = sub_1ACE77848();
                v183 = v318;
                char v186 = v185;
                BOOL result = 0;
                if ((v186 & 1) == 0) {
                  return result;
                }
              }
            }
            else
            {
              uint64_t v184 = v317;
              v183 = v318;
              if (v181) {
                return 0;
              }
            }
            uint64_t v187 = v161;
            uint64_t v188 = v313[18];
            uint64_t v189 = *(void *)&v183[v188];
            uint64_t v190 = *(void *)(v184 + v188);
            if (v189)
            {
              if (!v190 || (_s18PodcastsFoundation13ServerArtworkC2eeoiySbAC_ACtFZ_0(v189, v190) & 1) == 0) {
                return 0;
              }
            }
            else if (v190)
            {
              return 0;
            }
            if (v318[v313[19]] != *(unsigned char *)(v317 + v313[19])) {
              return 0;
            }
            v191 = v313;
            uint64_t v192 = (uint64_t)v323;
            sub_1ACA3AAD4((uint64_t)&v318[v313[20]], (uint64_t)v323, (uint64_t *)&unk_1EB773140);
            uint64_t v193 = (uint64_t)v322;
            sub_1ACA3AAD4(v317 + v191[20], (uint64_t)v322, (uint64_t *)&unk_1EB773140);
            uint64_t v194 = (uint64_t)&v8[*(int *)(v327 + 48)];
            v323 = (char *)v192;
            sub_1ACA3AAD4(v192, (uint64_t)v8, (uint64_t *)&unk_1EB773140);
            uint64_t v195 = v193;
            sub_1ACA3AAD4(v193, v194, (uint64_t *)&unk_1EB773140);
            v196 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v187 + 48);
            if (v196((uint64_t)v8, 1, v4) == 1)
            {
              sub_1ACA50E78(v195, (uint64_t *)&unk_1EB773140);
              sub_1ACA50E78((uint64_t)v323, (uint64_t *)&unk_1EB773140);
              if (v196(v194, 1, v4) == 1)
              {
                sub_1ACA50E78((uint64_t)v8, (uint64_t *)&unk_1EB773140);
LABEL_107:
                uint64_t v202 = v313[21];
                v203 = &v318[v202];
                uint64_t v204 = *(void *)&v318[v202 + 8];
                v205 = (void *)(v317 + v202);
                uint64_t v206 = v205[1];
                if (v204)
                {
                  if (!v206) {
                    return 0;
                  }
                  BOOL v182 = *(void *)v203 == *v205;
                  uint64_t v208 = v317;
                  v207 = v318;
                  if (!v182 || v204 != v206)
                  {
                    char v209 = sub_1ACE77848();
                    v207 = v318;
                    char v210 = v209;
                    BOOL result = 0;
                    if ((v210 & 1) == 0) {
                      return result;
                    }
                  }
                }
                else
                {
                  uint64_t v208 = v317;
                  v207 = v318;
                  if (v206) {
                    return 0;
                  }
                }
                if (v207[v313[22]] != *(unsigned char *)(v208 + v313[22])
                  || v318[v313[23]] != *(unsigned char *)(v317 + v313[23])
                  || v318[v313[24]] != *(unsigned char *)(v317 + v313[24])
                  || v318[v313[25]] != *(unsigned char *)(v317 + v313[25]))
                {
                  return 0;
                }
                uint64_t v211 = v313[26];
                int v212 = v318[v211];
                int v213 = *(unsigned __int8 *)(v317 + v211);
                if (v212 == 2)
                {
                  uint64_t v214 = v317;
                  v215 = v318;
                  if (v213 != 2) {
                    return 0;
                  }
                }
                else
                {
                  if (v213 == 2) {
                    return 0;
                  }
                  if (v212) {
                    uint64_t v216 = 0x64616F6C6E776F64;
                  }
                  else {
                    uint64_t v216 = 0x6D6165727473;
                  }
                  if (v212) {
                    unint64_t v217 = 0xE800000000000000;
                  }
                  else {
                    unint64_t v217 = 0xE600000000000000;
                  }
                  if (v213) {
                    uint64_t v218 = 0x64616F6C6E776F64;
                  }
                  else {
                    uint64_t v218 = 0x6D6165727473;
                  }
                  if (v213) {
                    unint64_t v219 = 0xE800000000000000;
                  }
                  else {
                    unint64_t v219 = 0xE600000000000000;
                  }
                  if (v216 == v218 && v217 == v219)
                  {
                    swift_bridgeObjectRelease_n();
                    uint64_t v214 = v317;
                    v215 = v318;
                  }
                  else
                  {
                    char v220 = sub_1ACE77848();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    BOOL result = 0;
                    uint64_t v214 = v317;
                    v215 = v318;
                    if ((v220 & 1) == 0) {
                      return result;
                    }
                  }
                }
                uint64_t v221 = v313[27];
                int v222 = v215[v221];
                int v223 = *(unsigned __int8 *)(v214 + v221);
                if (v222 == 4)
                {
                  if (v223 != 4) {
                    return 0;
                  }
                }
                else if (v223 == 4 || (sub_1ACCF3E68(v222, v223) & 1) == 0)
                {
                  return 0;
                }
                uint64_t v224 = v313[28];
                int v225 = v318[v224];
                int v226 = *(unsigned __int8 *)(v317 + v224);
                if (v225 == 5)
                {
                  if (v226 != 5) {
                    return 0;
                  }
                }
                else if (v226 == 5 || (sub_1ACCF4CC4(v225, v226) & 1) == 0)
                {
                  return 0;
                }
                if (*(void *)&v318[v313[29]] != *(void *)(v317 + v313[29])
                  || *(void *)&v318[v313[30]] != *(void *)(v317 + v313[30])
                  || v318[v313[31]] != *(unsigned char *)(v317 + v313[31]))
                {
                  return 0;
                }
                uint64_t v227 = v313[32];
                v228 = &v318[v227];
                uint64_t v229 = *(void *)&v318[v227 + 8];
                v230 = (void *)(v317 + v227);
                uint64_t v231 = v230[1];
                if (v229)
                {
                  if (!v231) {
                    return 0;
                  }
                  BOOL v182 = *(void *)v228 == *v230;
                  uint64_t v233 = v317;
                  v232 = v318;
                  if (!v182 || v229 != v231)
                  {
                    char v234 = sub_1ACE77848();
                    v232 = v318;
                    char v235 = v234;
                    BOOL result = 0;
                    if ((v235 & 1) == 0) {
                      return result;
                    }
                  }
                }
                else
                {
                  uint64_t v233 = v317;
                  v232 = v318;
                  if (v231) {
                    return 0;
                  }
                }
                if ((sub_1ACC58488(*(void *)&v232[v313[33]], *(void *)(v233 + v313[33])) & 1) == 0) {
                  return 0;
                }
                uint64_t v236 = v313[34];
                v237 = &v318[v236];
                uint64_t v238 = *(void *)&v318[v236 + 8];
                v239 = (void *)(v317 + v236);
                uint64_t v240 = v239[1];
                if (v238)
                {
                  if (!v240) {
                    return 0;
                  }
                  uint64_t v242 = v317;
                  v241 = v318;
                  if (*(void *)v237 != *v239 || v238 != v240)
                  {
                    char v243 = sub_1ACE77848();
                    v241 = v318;
                    char v244 = v243;
                    BOOL result = 0;
                    if ((v244 & 1) == 0) {
                      return result;
                    }
                  }
                }
                else
                {
                  uint64_t v242 = v317;
                  v241 = v318;
                  if (v240) {
                    return 0;
                  }
                }
                uint64_t v245 = v313[35];
                v246 = &v241[v245];
                uint64_t v247 = *(void *)&v241[v245 + 8];
                v248 = (void *)(v242 + v245);
                uint64_t v249 = v248[1];
                if (v247)
                {
                  if (!v249) {
                    return 0;
                  }
                  BOOL v182 = *(void *)v246 == *v248;
                  uint64_t v251 = v317;
                  v250 = v318;
                  uint64_t v252 = v309;
                  uint64_t v253 = v308;
                  if (!v182 || v247 != v249)
                  {
                    char v254 = sub_1ACE77848();
                    uint64_t v253 = v308;
                    uint64_t v252 = v309;
                    v250 = v318;
                    char v255 = v254;
                    BOOL result = 0;
                    if ((v255 & 1) == 0) {
                      return result;
                    }
                  }
                }
                else
                {
                  uint64_t v251 = v317;
                  v250 = v318;
                  uint64_t v252 = v309;
                  uint64_t v253 = v308;
                  if (v249) {
                    return 0;
                  }
                }
                v256 = v313;
                sub_1ACA3AAD4((uint64_t)&v250[v313[36]], v252, &qword_1EB7731B0);
                sub_1ACA3AAD4(v251 + v256[36], v253, &qword_1EB7731B0);
                uint64_t v257 = v326;
                uint64_t v258 = v326 + *(int *)(v324 + 48);
                sub_1ACA3AAD4(v252, v326, &qword_1EB7731B0);
                sub_1ACA3AAD4(v253, v258, &qword_1EB7731B0);
                if (v170(v257, 1, v331) == 1)
                {
                  sub_1ACA50E78(v308, &qword_1EB7731B0);
                  sub_1ACA50E78(v309, &qword_1EB7731B0);
                  if (v170(v258, 1, v331) == 1)
                  {
                    sub_1ACA50E78(v326, &qword_1EB7731B0);
LABEL_183:
                    uint64_t v265 = v313[37];
                    v266 = &v318[v265];
                    uint64_t v267 = *(void *)&v318[v265 + 8];
                    v268 = (void *)(v317 + v265);
                    uint64_t v269 = v268[1];
                    if (v267)
                    {
                      if (!v269) {
                        return 0;
                      }
                      uint64_t v271 = v317;
                      v270 = v318;
                      if (*(void *)v266 != *v268 || v267 != v269)
                      {
                        char v272 = sub_1ACE77848();
                        v270 = v318;
                        char v273 = v272;
                        BOOL result = 0;
                        if ((v273 & 1) == 0) {
                          return result;
                        }
                      }
                    }
                    else
                    {
                      uint64_t v271 = v317;
                      v270 = v318;
                      if (v269) {
                        return 0;
                      }
                    }
                    uint64_t v274 = v313[38];
                    v275 = &v270[v274];
                    uint64_t v276 = *(void *)&v270[v274 + 8];
                    v277 = (void *)(v271 + v274);
                    uint64_t v278 = v277[1];
                    if (v276)
                    {
                      if (!v278) {
                        return 0;
                      }
                      BOOL v182 = *(void *)v275 == *v277;
                      uint64_t v280 = v317;
                      v279 = v318;
                      if (!v182 || v276 != v278)
                      {
                        char v281 = sub_1ACE77848();
                        v279 = v318;
                        char v282 = v281;
                        BOOL result = 0;
                        if ((v282 & 1) == 0) {
                          return result;
                        }
                      }
                    }
                    else
                    {
                      uint64_t v280 = v317;
                      v279 = v318;
                      if (v278) {
                        return 0;
                      }
                    }
                    uint64_t v283 = v313[39];
                    char v284 = *(unsigned char *)(v280 + v283);
                    unint64_t v285 = EpisodeSortType.rawValue.getter(v279[v283]);
                    uint64_t v287 = v286;
                    if (v285 == EpisodeSortType.rawValue.getter(v284) && v287 == v288)
                    {
                      swift_bridgeObjectRelease_n();
                      uint64_t v290 = v317;
                      v289 = v318;
                    }
                    else
                    {
                      char v291 = sub_1ACE77848();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      BOOL result = 0;
                      uint64_t v290 = v317;
                      v289 = v318;
                      if ((v291 & 1) == 0) {
                        return result;
                      }
                    }
                    if (v289[v313[40]] == *(unsigned char *)(v290 + v313[40])
                      && v318[v313[41]] == *(unsigned char *)(v317 + v313[41])
                      && v318[v313[42]] == *(unsigned char *)(v317 + v313[42])
                      && v318[v313[43]] == *(unsigned char *)(v317 + v313[43])
                      && v318[v313[44]] == *(unsigned char *)(v317 + v313[44]))
                    {
                      uint64_t v292 = v313[45];
                      uint64_t v293 = v318[v292];
                      int v294 = *(unsigned __int8 *)(v317 + v292);
                      if (v293 == 4)
                      {
                        uint64_t v295 = v317;
                        v296 = v318;
                        if (v294 != 4) {
                          return 0;
                        }
                      }
                      else
                      {
                        unint64_t v297 = 0xE800000000000000;
                        unint64_t v298 = 0x6465776F6C6C6F66;
                        unint64_t v299 = 0x6465776F6C6C6F66;
                        switch(v293)
                        {
                          case 1:
                            unint64_t v297 = 0xE700000000000000;
                            unint64_t v299 = 0x7972617262696CLL;
                            break;
                          case 2:
                            unint64_t v297 = 0x80000001ACEC42D0;
                            unint64_t v299 = 0xD000000000000012;
                            break;
                          case 3:
                            unint64_t v297 = 0xE500000000000000;
                            unint64_t v299 = 0x65726F7473;
                            break;
                          default:
                            break;
                        }
                        unint64_t v300 = 0xE800000000000000;
                        switch(v294)
                        {
                          case 0:
                            break;
                          case 1:
                            unint64_t v300 = 0xE700000000000000;
                            unint64_t v298 = 0x7972617262696CLL;
                            break;
                          case 2:
                            unint64_t v300 = 0x80000001ACEC42D0;
                            unint64_t v298 = 0xD000000000000012;
                            break;
                          case 3:
                            unint64_t v300 = 0xE500000000000000;
                            unint64_t v298 = 0x65726F7473;
                            break;
                          default:
                            return 0;
                        }
                        if (v299 == v298 && v297 == v300)
                        {
                          swift_bridgeObjectRelease_n();
                          uint64_t v295 = v317;
                          v296 = v318;
                        }
                        else
                        {
                          char v301 = sub_1ACE77848();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          BOOL result = 0;
                          uint64_t v295 = v317;
                          v296 = v318;
                          if ((v301 & 1) == 0) {
                            return result;
                          }
                        }
                      }
                      uint64_t v302 = v313[46];
                      v303 = &v296[v302];
                      uint64_t v304 = *(void *)&v296[v302 + 8];
                      v305 = (void *)(v295 + v302);
                      uint64_t v306 = v305[1];
                      if (v304) {
                        return v306 && (*(void *)v303 == *v305 && v304 == v306 || (sub_1ACE77848() & 1) != 0);
                      }
                      if (!v306) {
                        return 1;
                      }
                    }
                    return 0;
                  }
                }
                else
                {
                  sub_1ACA3AAD4(v326, v310, &qword_1EB7731B0);
                  if (v170(v258, 1, v331) != 1)
                  {
                    uint64_t v259 = v331;
                    uint64_t v260 = v332;
                    v261 = v330;
                    (*(void (**)(char *, uint64_t, uint64_t))(v332 + 32))(v330, v258, v331);
                    sub_1ACC5FCDC(&qword_1EB770E98, MEMORY[0x1E4F276F0]);
                    uint64_t v262 = v310;
                    char v263 = sub_1ACE76168();
                    v264 = *(void (**)(char *, uint64_t))(v260 + 8);
                    v264(v261, v259);
                    sub_1ACA50E78(v308, &qword_1EB7731B0);
                    sub_1ACA50E78(v309, &qword_1EB7731B0);
                    v264((char *)v262, v259);
                    sub_1ACA50E78(v326, &qword_1EB7731B0);
                    if ((v263 & 1) == 0) {
                      return 0;
                    }
                    goto LABEL_183;
                  }
                  sub_1ACA50E78(v308, &qword_1EB7731B0);
                  sub_1ACA50E78(v309, &qword_1EB7731B0);
                  (*(void (**)(uint64_t, uint64_t))(v332 + 8))(v310, v331);
                }
                id v141 = &qword_1E99F3478;
                uint64_t v142 = v326;
LABEL_61:
                sub_1ACA50E78(v142, v141);
                return 0;
              }
            }
            else
            {
              sub_1ACA3AAD4((uint64_t)v8, v320, (uint64_t *)&unk_1EB773140);
              if (v196(v194, 1, v4) != 1)
              {
                uint64_t v197 = v187;
                v198 = v319;
                (*(void (**)(char *, uint64_t, uint64_t))(v187 + 32))(v319, v194, v4);
                sub_1ACC5FCDC((unint64_t *)&unk_1E99F3590, MEMORY[0x1E4F27928]);
                uint64_t v199 = v320;
                char v200 = sub_1ACE76168();
                v201 = *(void (**)(char *, uint64_t))(v197 + 8);
                v201(v198, v4);
                sub_1ACA50E78(v195, (uint64_t *)&unk_1EB773140);
                sub_1ACA50E78((uint64_t)v323, (uint64_t *)&unk_1EB773140);
                v201((char *)v199, v4);
                sub_1ACA50E78((uint64_t)v8, (uint64_t *)&unk_1EB773140);
                if ((v200 & 1) == 0) {
                  return 0;
                }
                goto LABEL_107;
              }
              sub_1ACA50E78(v195, (uint64_t *)&unk_1EB773140);
              sub_1ACA50E78((uint64_t)v323, (uint64_t *)&unk_1EB773140);
              (*(void (**)(uint64_t, uint64_t))(v187 + 8))(v320, v4);
            }
            id v141 = &qword_1EB76A968;
            uint64_t v142 = (uint64_t)v8;
            goto LABEL_61;
          }
          sub_1ACA50E78(v311, &qword_1EB7731B0);
          sub_1ACA50E78(v314, &qword_1EB7731B0);
          (*(void (**)(uint64_t, uint64_t))(v332 + 8))(v321, v331);
        }
        id v141 = &qword_1E99F3478;
        uint64_t v142 = v329;
        goto LABEL_61;
      }
      sub_1ACA50E78(v325, &qword_1EB7731B0);
      sub_1ACA50E78((uint64_t)v316, &qword_1EB7731B0);
      (*(void (**)(uint64_t, uint64_t))(v332 + 8))(v139, v136);
    }
    id v141 = &qword_1E99F3478;
    uint64_t v142 = v130;
    goto LABEL_61;
  }
  return result;
}

unint64_t sub_1ACC5FC88()
{
  unint64_t result = qword_1E99F40B8;
  if (!qword_1E99F40B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F40B8);
  }
  return result;
}

uint64_t sub_1ACC5FCDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACC5FD24()
{
  unint64_t result = qword_1E99F40C0;
  if (!qword_1E99F40C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F40C0);
  }
  return result;
}

unint64_t sub_1ACC5FD78()
{
  unint64_t result = qword_1E99F40C8;
  if (!qword_1E99F40C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F40C8);
  }
  return result;
}

unint64_t sub_1ACC5FDCC()
{
  unint64_t result = qword_1E99F40D0;
  if (!qword_1E99F40D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F40D0);
  }
  return result;
}

unint64_t sub_1ACC5FE20()
{
  unint64_t result = qword_1EB771100;
  if (!qword_1EB771100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771100);
  }
  return result;
}

unint64_t sub_1ACC5FE74()
{
  unint64_t result = qword_1E99F40E8;
  if (!qword_1E99F40E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F40E8);
  }
  return result;
}

unint64_t sub_1ACC5FEC8()
{
  unint64_t result = qword_1E99F40F8;
  if (!qword_1E99F40F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F40F8);
  }
  return result;
}

unint64_t sub_1ACC5FF1C()
{
  unint64_t result = qword_1EB76A560;
  if (!qword_1EB76A560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A560);
  }
  return result;
}

unint64_t sub_1ACC5FF70()
{
  unint64_t result = qword_1E99F4100;
  if (!qword_1E99F4100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4100);
  }
  return result;
}

uint64_t sub_1ACC5FFC4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F40D8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACC60040()
{
  unint64_t result = qword_1E99F4110;
  if (!qword_1E99F4110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4110);
  }
  return result;
}

unint64_t sub_1ACC60094()
{
  unint64_t result = qword_1E99F4118;
  if (!qword_1E99F4118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4118);
  }
  return result;
}

uint64_t type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1E99F4158);
}

BOOL _s18PodcastsFoundation0A12MediaLibraryC0C12ItemSnapshotV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v101 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v100 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3478);
  MEMORY[0x1F4188790](v6);
  uint64_t v99 = (uint64_t)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v90 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v11 - 8);
  MEMORY[0x1F4188790](v12);
  char v14 = (char *)&v90 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v90 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v90 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v90 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v90 - v26;
  char v28 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 != *(void *)a2) {
      char v28 = 1;
    }
    if (v28) {
      return 0;
    }
  }
  char v29 = *(unsigned char *)(a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      char v29 = 1;
    }
    if (v29) {
      return 0;
    }
  }
  uint64_t v30 = *(void *)(a1 + 40);
  uint64_t v31 = *(void *)(a2 + 40);
  if (!v30)
  {
    uint64_t v97 = v25;
    uint64_t v98 = v4;
    if (v31) {
      return 0;
    }
    goto LABEL_20;
  }
  if (!v31) {
    return 0;
  }
  uint64_t v97 = v25;
  uint64_t v98 = v4;
  if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && v30 == v31
    || (v32 = sub_1ACE77848(), BOOL result = 0, (v32 & 1) != 0))
  {
LABEL_20:
    uint64_t v34 = *(void *)(a1 + 56);
    uint64_t v35 = *(void *)(a2 + 56);
    if (v34)
    {
      if (!v35) {
        return 0;
      }
      if (*(void *)(a1 + 48) != *(void *)(a2 + 48) || v34 != v35)
      {
        char v36 = sub_1ACE77848();
        BOOL result = 0;
        if ((v36 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v35)
    {
      return 0;
    }
    uint64_t v37 = type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0);
    sub_1ACA3AAD4(a1 + *(int *)(v37 + 32), (uint64_t)v27, &qword_1EB7731B0);
    uint64_t v94 = (int *)v37;
    sub_1ACA3AAD4(a2 + *(int *)(v37 + 32), (uint64_t)v23, &qword_1EB7731B0);
    uint64_t v38 = (uint64_t)&v10[*(int *)(v6 + 48)];
    sub_1ACA3AAD4((uint64_t)v27, (uint64_t)v10, &qword_1EB7731B0);
    uint64_t v96 = v38;
    sub_1ACA3AAD4((uint64_t)v23, v38, &qword_1EB7731B0);
    uint64_t v39 = v101 + 48;
    __int16 v95 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48);
    if (v95((uint64_t)v10, 1, v98) == 1)
    {
      sub_1ACA50E78((uint64_t)v23, &qword_1EB7731B0);
      sub_1ACA50E78((uint64_t)v27, &qword_1EB7731B0);
      uint64_t v40 = v98;
      if (v95(v96, 1, v98) == 1)
      {
        sub_1ACA50E78((uint64_t)v10, &qword_1EB7731B0);
LABEL_35:
        uint64_t v45 = v94;
        if (*(double *)(a1 + v94[9]) != *(double *)(a2 + v94[9])) {
          return 0;
        }
        uint64_t v46 = v40;
        uint64_t v47 = v94[10];
        uint64_t v48 = (void *)(a1 + v47);
        uint64_t v49 = *(void *)(a1 + v47 + 8);
        uint64_t v50 = (void *)(a2 + v47);
        uint64_t v51 = v50[1];
        if (v49)
        {
          if (!v51) {
            return 0;
          }
          if (*v48 != *v50 || v49 != v51)
          {
            char v52 = sub_1ACE77848();
            BOOL result = 0;
            if ((v52 & 1) == 0) {
              return result;
            }
          }
        }
        else if (v51)
        {
          return 0;
        }
        uint64_t v53 = v45[11];
        uint64_t v54 = (void *)(a1 + v53);
        uint64_t v55 = *(void *)(a1 + v53 + 8);
        uint64_t v56 = (void *)(a2 + v53);
        uint64_t v57 = v56[1];
        if (v55)
        {
          if (!v57) {
            return 0;
          }
          if (*v54 != *v56 || v55 != v57)
          {
            char v58 = sub_1ACE77848();
            BOOL result = 0;
            if ((v58 & 1) == 0) {
              return result;
            }
          }
        }
        else if (v57)
        {
          return 0;
        }
        sub_1ACA3AAD4(a1 + v45[12], (uint64_t)v17, &qword_1EB7731B0);
        sub_1ACA3AAD4(a2 + v45[12], (uint64_t)v14, &qword_1EB7731B0);
        uint64_t v59 = *(int *)(v6 + 48);
        uint64_t v60 = v99;
        uint64_t v61 = v99 + v59;
        sub_1ACA3AAD4((uint64_t)v17, v99, &qword_1EB7731B0);
        sub_1ACA3AAD4((uint64_t)v14, v61, &qword_1EB7731B0);
        uint64_t v62 = v95;
        if (v95(v60, 1, v46) == 1)
        {
          sub_1ACA50E78((uint64_t)v14, &qword_1EB7731B0);
          sub_1ACA50E78((uint64_t)v17, &qword_1EB7731B0);
          if (v62(v61, 1, v46) == 1)
          {
            sub_1ACA50E78(v60, &qword_1EB7731B0);
LABEL_59:
            uint64_t v68 = v45[13];
            uint64_t v69 = (void *)(a1 + v68);
            uint64_t v70 = *(void *)(a1 + v68 + 8);
            uint64_t v71 = (void *)(a2 + v68);
            uint64_t v72 = v71[1];
            if (v70)
            {
              if (!v72) {
                return 0;
              }
              if (*v69 != *v71 || v70 != v72)
              {
                char v73 = sub_1ACE77848();
                BOOL result = 0;
                if ((v73 & 1) == 0) {
                  return result;
                }
              }
            }
            else if (v72)
            {
              return 0;
            }
            if (*(unsigned __int8 *)(a1 + v45[14]) == *(unsigned __int8 *)(a2 + v45[14]))
            {
              uint64_t v74 = v45[15];
              uint64_t v75 = *(void *)(a1 + v74);
              uint64_t v76 = *(void *)(a1 + v74 + 8);
              uint64_t v77 = (void *)(a2 + v74);
              if (v75 != *v77 || v76 != v77[1])
              {
                char v78 = sub_1ACE77848();
                BOOL result = 0;
                if ((v78 & 1) == 0) {
                  return result;
                }
              }
              uint64_t v79 = v45[16];
              uint64_t v80 = (void *)(a1 + v79);
              uint64_t v81 = *(void *)(a1 + v79 + 8);
              uint64_t v82 = (void *)(a2 + v79);
              uint64_t v83 = v82[1];
              if (v81)
              {
                if (!v83) {
                  return 0;
                }
                if (*v80 != *v82 || v81 != v83)
                {
                  char v84 = sub_1ACE77848();
                  BOOL result = 0;
                  if ((v84 & 1) == 0) {
                    return result;
                  }
                }
              }
              else if (v83)
              {
                return 0;
              }
              uint64_t v85 = v45[17];
              char v86 = (void *)(a1 + v85);
              uint64_t v87 = *(void *)(a1 + v85 + 8);
              char v88 = (void *)(a2 + v85);
              uint64_t v89 = v88[1];
              if (v87) {
                return v89 && (*v86 == *v88 && v87 == v89 || (sub_1ACE77848() & 1) != 0);
              }
              if (!v89) {
                return 1;
              }
            }
            return 0;
          }
        }
        else
        {
          uint64_t v63 = v97;
          sub_1ACA3AAD4(v60, v97, &qword_1EB7731B0);
          uint64_t v64 = v46;
          if (v62(v61, 1, v46) != 1)
          {
            uint64_t v65 = v100;
            uint64_t v66 = v101;
            (*(void (**)(char *, uint64_t, uint64_t))(v101 + 32))(v100, v61, v64);
            sub_1ACC5FCDC(&qword_1EB770E98, MEMORY[0x1E4F276F0]);
            LODWORD(v96) = sub_1ACE76168();
            uint64_t v67 = *(void (**)(char *, uint64_t))(v66 + 8);
            v67(v65, v64);
            sub_1ACA50E78((uint64_t)v14, &qword_1EB7731B0);
            sub_1ACA50E78((uint64_t)v17, &qword_1EB7731B0);
            v67((char *)v63, v64);
            uint64_t v45 = v94;
            sub_1ACA50E78(v60, &qword_1EB7731B0);
            if ((v96 & 1) == 0) {
              return 0;
            }
            goto LABEL_59;
          }
          sub_1ACA50E78((uint64_t)v14, &qword_1EB7731B0);
          sub_1ACA50E78((uint64_t)v17, &qword_1EB7731B0);
          (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v63, v46);
        }
        uint64_t v41 = v60;
LABEL_33:
        sub_1ACA50E78(v41, &qword_1E99F3478);
        return 0;
      }
    }
    else
    {
      sub_1ACA3AAD4((uint64_t)v10, (uint64_t)v20, &qword_1EB7731B0);
      uint64_t v93 = v39;
      if (v95(v96, 1, v98) != 1)
      {
        uint64_t v42 = v98;
        (*(void (**)(char *, uint64_t, uint64_t))(v101 + 32))(v100, v96, v98);
        sub_1ACC5FCDC(&qword_1EB770E98, MEMORY[0x1E4F276F0]);
        int v43 = sub_1ACE76168();
        uint64_t v98 = v42;
        int v92 = v43;
        uint64_t v91 = *(void (**)(char *, uint64_t))(v101 + 8);
        uint64_t v96 = v101 + 8;
        v91(v100, v42);
        sub_1ACA50E78((uint64_t)v23, &qword_1EB7731B0);
        sub_1ACA50E78((uint64_t)v27, &qword_1EB7731B0);
        uint64_t v44 = v20;
        uint64_t v40 = v98;
        v91(v44, v98);
        sub_1ACA50E78((uint64_t)v10, &qword_1EB7731B0);
        if ((v92 & 1) == 0) {
          return 0;
        }
        goto LABEL_35;
      }
      sub_1ACA50E78((uint64_t)v23, &qword_1EB7731B0);
      sub_1ACA50E78((uint64_t)v27, &qword_1EB7731B0);
      (*(void (**)(char *, uint64_t))(v101 + 8))(v20, v98);
    }
    uint64_t v41 = (uint64_t)v10;
    goto LABEL_33;
  }
  return result;
}

unint64_t sub_1ACC60AA8()
{
  unint64_t result = qword_1E99F4128;
  if (!qword_1E99F4128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4128);
  }
  return result;
}

unint64_t sub_1ACC60B00()
{
  unint64_t result = qword_1E99F4150;
  if (!qword_1E99F4150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4150);
  }
  return result;
}

void *_s9MediaItemVwCP(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = a2[6];
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v10 = a2[8];
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(void *)(a1 + 64) = v10;
    uint64_t v11 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    uint64_t v12 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v12;
    uint64_t v13 = a2[15];
    uint64_t v14 = a3[12];
    char v84 = (char *)a2 + v14;
    __dst = (void *)(a1 + v14);
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v13;
    uint64_t v15 = sub_1ACE74F28();
    uint64_t v88 = *(void *)(v15 - 8);
    uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v89 = v16;
    if (v16(v84, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(__dst, v84, *(void *)(*(void *)(v17 - 8) + 64));
      uint64_t v18 = v88;
    }
    else
    {
      uint64_t v18 = v88;
      (*(void (**)(void *, char *, uint64_t))(v88 + 16))(__dst, v84, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v88 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v20 = a3[13];
    uint64_t v21 = a3[14];
    uint64_t v22 = (void *)((char *)v4 + v20);
    uint64_t v23 = (uint64_t *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    *(void *)((char *)v4 + v21) = *(uint64_t *)((char *)a2 + v21);
    uint64_t v25 = a3[15];
    uint64_t v26 = a3[16];
    uint64_t v27 = (char *)v4 + v25;
    uint64_t v28 = (uint64_t)a2 + v25;
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = *(unsigned char *)(v28 + 8);
    char v29 = (char *)v4 + v26;
    uint64_t v30 = (char *)a2 + v26;
    swift_bridgeObjectRetain();
    uint64_t v87 = v15;
    if (v16(v30, 1, v15))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v29, v30, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v29, 0, 1, v15);
    }
    uint64_t v32 = a3[17];
    uint64_t v33 = a3[18];
    uint64_t v34 = (void *)((char *)v4 + v32);
    uint64_t v35 = (uint64_t *)((char *)a2 + v32);
    uint64_t v36 = v35[1];
    void *v34 = *v35;
    v34[1] = v36;
    *(void *)((char *)v4 + v33) = *(uint64_t *)((char *)a2 + v33);
    uint64_t v37 = a3[20];
    *((unsigned char *)v4 + a3[19]) = *((unsigned char *)a2 + a3[19]);
    __dsta = (char *)v4 + v37;
    uint64_t v38 = (char *)a2 + v37;
    uint64_t v39 = sub_1ACE750A8();
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v41(v38, 1, v39))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(__dsta, v38, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(__dsta, v38, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(__dsta, 0, 1, v39);
    }
    uint64_t v43 = a3[21];
    uint64_t v44 = a3[22];
    uint64_t v45 = (void *)((char *)v4 + v43);
    uint64_t v46 = (uint64_t *)((char *)a2 + v43);
    uint64_t v47 = v46[1];
    *uint64_t v45 = *v46;
    v45[1] = v47;
    *((unsigned char *)v4 + v44) = *((unsigned char *)a2 + v44);
    uint64_t v48 = a3[24];
    *((unsigned char *)v4 + a3[23]) = *((unsigned char *)a2 + a3[23]);
    *((unsigned char *)v4 + v48) = *((unsigned char *)a2 + v48);
    uint64_t v49 = a3[26];
    *((unsigned char *)v4 + a3[25]) = *((unsigned char *)a2 + a3[25]);
    *((unsigned char *)v4 + v49) = *((unsigned char *)a2 + v49);
    uint64_t v50 = a3[28];
    *((unsigned char *)v4 + a3[27]) = *((unsigned char *)a2 + a3[27]);
    *((unsigned char *)v4 + v50) = *((unsigned char *)a2 + v50);
    uint64_t v51 = a3[30];
    *(void *)((char *)v4 + a3[29]) = *(uint64_t *)((char *)a2 + a3[29]);
    *(void *)((char *)v4 + v51) = *(uint64_t *)((char *)a2 + v51);
    uint64_t v52 = a3[32];
    *((unsigned char *)v4 + a3[31]) = *((unsigned char *)a2 + a3[31]);
    uint64_t v53 = (void *)((char *)v4 + v52);
    uint64_t v54 = (uint64_t *)((char *)a2 + v52);
    uint64_t v55 = v54[1];
    *uint64_t v53 = *v54;
    v53[1] = v55;
    uint64_t v56 = a3[34];
    *(void *)((char *)v4 + a3[33]) = *(uint64_t *)((char *)a2 + a3[33]);
    uint64_t v57 = (void *)((char *)v4 + v56);
    char v58 = (uint64_t *)((char *)a2 + v56);
    uint64_t v59 = v58[1];
    void *v57 = *v58;
    v57[1] = v59;
    uint64_t v60 = a3[35];
    uint64_t v61 = a3[36];
    uint64_t v62 = (void *)((char *)v4 + v60);
    uint64_t v63 = (uint64_t *)((char *)a2 + v60);
    uint64_t v64 = v63[1];
    *uint64_t v62 = *v63;
    v62[1] = v64;
    uint64_t v65 = (char *)v4 + v61;
    uint64_t v66 = (char *)a2 + v61;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v89(v66, 1, v87))
    {
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v65, v66, v87);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v65, 0, 1, v87);
    }
    uint64_t v68 = a3[37];
    uint64_t v69 = a3[38];
    uint64_t v70 = (void *)((char *)v4 + v68);
    uint64_t v71 = (uint64_t *)((char *)a2 + v68);
    uint64_t v72 = v71[1];
    *uint64_t v70 = *v71;
    v70[1] = v72;
    char v73 = (void *)((char *)v4 + v69);
    uint64_t v74 = (uint64_t *)((char *)a2 + v69);
    uint64_t v75 = v74[1];
    *char v73 = *v74;
    v73[1] = v75;
    uint64_t v76 = a3[40];
    *((unsigned char *)v4 + a3[39]) = *((unsigned char *)a2 + a3[39]);
    *((unsigned char *)v4 + v76) = *((unsigned char *)a2 + v76);
    uint64_t v77 = a3[42];
    *((unsigned char *)v4 + a3[41]) = *((unsigned char *)a2 + a3[41]);
    *((unsigned char *)v4 + v77) = *((unsigned char *)a2 + v77);
    uint64_t v78 = a3[44];
    *((unsigned char *)v4 + a3[43]) = *((unsigned char *)a2 + a3[43]);
    *((unsigned char *)v4 + v78) = *((unsigned char *)a2 + v78);
    uint64_t v79 = a3[46];
    *((unsigned char *)v4 + a3[45]) = *((unsigned char *)a2 + a3[45]);
    uint64_t v80 = (void *)((char *)v4 + v79);
    uint64_t v81 = (uint64_t *)((char *)a2 + v79);
    uint64_t v82 = v81[1];
    *uint64_t v80 = *v81;
    v80[1] = v82;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t _s9MediaItemVwxx(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[12];
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[16];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v9 = a1 + a2[20];
  uint64_t v10 = sub_1ACE750A8();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + a2[36];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s9MediaItemVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v9;
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v11;
  uint64_t v12 = *(void *)(a2 + 120);
  uint64_t v13 = a3[12];
  uint64_t v82 = (const void *)(a2 + v13);
  __dst = (void *)(a1 + v13);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  uint64_t v14 = sub_1ACE74F28();
  uint64_t v86 = *(void *)(v14 - 8);
  uint64_t v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v86 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v87 = v15;
  if (v15(v82, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(__dst, v82, *(void *)(*(void *)(v16 - 8) + 64));
    uint64_t v17 = v86;
  }
  else
  {
    uint64_t v17 = v86;
    (*(void (**)(void *, const void *, uint64_t))(v86 + 16))(__dst, v82, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(__dst, 0, 1, v14);
  }
  uint64_t v18 = a3[13];
  uint64_t v19 = a3[14];
  uint64_t v20 = (void *)(a1 + v18);
  uint64_t v21 = (void *)(a2 + v18);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v23 = a3[15];
  uint64_t v24 = a3[16];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  uint64_t v27 = (void *)(a1 + v24);
  uint64_t v28 = (const void *)(a2 + v24);
  swift_bridgeObjectRetain();
  uint64_t v85 = v14;
  if (v15(v28, 1, v14))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v27, v28, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v27, 0, 1, v14);
  }
  uint64_t v30 = a3[17];
  uint64_t v31 = a3[18];
  uint64_t v32 = (void *)(a1 + v30);
  uint64_t v33 = (void *)(a2 + v30);
  uint64_t v34 = v33[1];
  void *v32 = *v33;
  v32[1] = v34;
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  uint64_t v35 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  __dsta = (void *)(a1 + v35);
  uint64_t v36 = (const void *)(a2 + v35);
  uint64_t v37 = sub_1ACE750A8();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v39(v36, 1, v37))
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    memcpy(__dsta, v36, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v38 + 16))(__dsta, v36, v37);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(__dsta, 0, 1, v37);
  }
  uint64_t v41 = a3[21];
  uint64_t v42 = a3[22];
  uint64_t v43 = (void *)(a1 + v41);
  uint64_t v44 = (void *)(a2 + v41);
  uint64_t v45 = v44[1];
  *uint64_t v43 = *v44;
  v43[1] = v45;
  *(unsigned char *)(a1 + v42) = *(unsigned char *)(a2 + v42);
  uint64_t v46 = a3[24];
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(unsigned char *)(a1 + v46) = *(unsigned char *)(a2 + v46);
  uint64_t v47 = a3[26];
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(unsigned char *)(a1 + v47) = *(unsigned char *)(a2 + v47);
  uint64_t v48 = a3[28];
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  *(unsigned char *)(a1 + v48) = *(unsigned char *)(a2 + v48);
  uint64_t v49 = a3[30];
  *(void *)(a1 + a3[29]) = *(void *)(a2 + a3[29]);
  *(void *)(a1 + v49) = *(void *)(a2 + v49);
  uint64_t v50 = a3[32];
  *(unsigned char *)(a1 + a3[31]) = *(unsigned char *)(a2 + a3[31]);
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (void *)(a2 + v50);
  uint64_t v53 = v52[1];
  void *v51 = *v52;
  v51[1] = v53;
  uint64_t v54 = a3[34];
  *(void *)(a1 + a3[33]) = *(void *)(a2 + a3[33]);
  uint64_t v55 = (void *)(a1 + v54);
  uint64_t v56 = (void *)(a2 + v54);
  uint64_t v57 = v56[1];
  void *v55 = *v56;
  v55[1] = v57;
  uint64_t v58 = a3[35];
  uint64_t v59 = a3[36];
  uint64_t v60 = (void *)(a1 + v58);
  uint64_t v61 = (void *)(a2 + v58);
  uint64_t v62 = v61[1];
  *uint64_t v60 = *v61;
  v60[1] = v62;
  uint64_t v63 = (void *)(a1 + v59);
  uint64_t v64 = (const void *)(a2 + v59);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v87(v64, 1, v85))
  {
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v86 + 16))(v63, v64, v85);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v63, 0, 1, v85);
  }
  uint64_t v66 = a3[37];
  uint64_t v67 = a3[38];
  uint64_t v68 = (void *)(a1 + v66);
  uint64_t v69 = (void *)(a2 + v66);
  uint64_t v70 = v69[1];
  *uint64_t v68 = *v69;
  v68[1] = v70;
  uint64_t v71 = (void *)(a1 + v67);
  uint64_t v72 = (void *)(a2 + v67);
  uint64_t v73 = v72[1];
  *uint64_t v71 = *v72;
  v71[1] = v73;
  uint64_t v74 = a3[40];
  *(unsigned char *)(a1 + a3[39]) = *(unsigned char *)(a2 + a3[39]);
  *(unsigned char *)(a1 + v74) = *(unsigned char *)(a2 + v74);
  uint64_t v75 = a3[42];
  *(unsigned char *)(a1 + a3[41]) = *(unsigned char *)(a2 + a3[41]);
  *(unsigned char *)(a1 + v75) = *(unsigned char *)(a2 + v75);
  uint64_t v76 = a3[44];
  *(unsigned char *)(a1 + a3[43]) = *(unsigned char *)(a2 + a3[43]);
  *(unsigned char *)(a1 + v76) = *(unsigned char *)(a2 + v76);
  uint64_t v77 = a3[46];
  *(unsigned char *)(a1 + a3[45]) = *(unsigned char *)(a2 + a3[45]);
  uint64_t v78 = (void *)(a1 + v77);
  uint64_t v79 = (void *)(a2 + v77);
  uint64_t v80 = v79[1];
  *uint64_t v78 = *v79;
  v78[1] = v80;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s9MediaItemVwca(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[12];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1ACE74F28();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = a3[13];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  uint64_t v20 = a3[15];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  char v23 = *(unsigned char *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = v23;
  uint64_t v24 = a3[16];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  int v27 = v13((void *)(a1 + v24), 1, v11);
  int v28 = v13(v26, 1, v11);
  uint64_t v71 = v12;
  uint64_t v72 = v11;
  uint64_t v70 = v13;
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v25, v26, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v25, v11);
LABEL_12:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v25, v26, v11);
LABEL_13:
  uint64_t v30 = a3[17];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  uint64_t v33 = a3[20];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  uint64_t v36 = sub_1ACE750A8();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v37 + 48);
  int v39 = v38(v34, 1, v36);
  int v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v37 + 16))(v34, v35, v36);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v40)
  {
    (*(void (**)(void *, uint64_t))(v37 + 8))(v34, v36);
LABEL_18:
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    memcpy(v34, v35, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v37 + 24))(v34, v35, v36);
LABEL_19:
  uint64_t v42 = a3[21];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (void *)(a2 + v42);
  *uint64_t v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  *(unsigned char *)(a1 + a3[28]) = *(unsigned char *)(a2 + a3[28]);
  *(void *)(a1 + a3[29]) = *(void *)(a2 + a3[29]);
  *(void *)(a1 + a3[30]) = *(void *)(a2 + a3[30]);
  *(unsigned char *)(a1 + a3[31]) = *(unsigned char *)(a2 + a3[31]);
  uint64_t v45 = a3[32];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  *uint64_t v46 = *v47;
  v46[1] = v47[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[33]) = *(void *)(a2 + a3[33]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[34];
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = (void *)(a2 + v48);
  *uint64_t v49 = *v50;
  v49[1] = v50[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = a3[35];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (void *)(a2 + v51);
  void *v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v54 = a3[36];
  uint64_t v55 = (void *)(a1 + v54);
  uint64_t v56 = (void *)(a2 + v54);
  int v57 = v70((void *)(a1 + v54), 1, v72);
  int v58 = v70(v56, 1, v72);
  if (!v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v71 + 24))(v55, v56, v72);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v71 + 8))(v55, v72);
    goto LABEL_24;
  }
  if (v58)
  {
LABEL_24:
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v71 + 16))(v55, v56, v72);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v71 + 56))(v55, 0, 1, v72);
LABEL_25:
  uint64_t v60 = a3[37];
  uint64_t v61 = (void *)(a1 + v60);
  uint64_t v62 = (void *)(a2 + v60);
  *uint64_t v61 = *v62;
  v61[1] = v62[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = a3[38];
  uint64_t v64 = (void *)(a1 + v63);
  uint64_t v65 = (void *)(a2 + v63);
  *uint64_t v64 = *v65;
  v64[1] = v65[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[39]) = *(unsigned char *)(a2 + a3[39]);
  *(unsigned char *)(a1 + a3[40]) = *(unsigned char *)(a2 + a3[40]);
  *(unsigned char *)(a1 + a3[41]) = *(unsigned char *)(a2 + a3[41]);
  *(unsigned char *)(a1 + a3[42]) = *(unsigned char *)(a2 + a3[42]);
  *(unsigned char *)(a1 + a3[43]) = *(unsigned char *)(a2 + a3[43]);
  *(unsigned char *)(a1 + a3[44]) = *(unsigned char *)(a2 + a3[44]);
  *(unsigned char *)(a1 + a3[45]) = *(unsigned char *)(a2 + a3[45]);
  uint64_t v66 = a3[46];
  uint64_t v67 = (void *)(a1 + v66);
  uint64_t v68 = (void *)(a2 + v66);
  *uint64_t v67 = *v68;
  v67[1] = v68[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9MediaItemVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  uint64_t v8 = a3[12];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  uint64_t v11 = sub_1ACE74F28();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[15];
  uint64_t v17 = a3[16];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  uint64_t v20 = (void *)(a1 + v17);
  uint64_t v21 = (const void *)(a2 + v17);
  uint64_t v47 = v13;
  if (v13((const void *)(a2 + v17), 1, v11))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v20, v21, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
  }
  uint64_t v23 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);
  uint64_t v24 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  uint64_t v27 = sub_1ACE750A8();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  uint64_t v30 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  *(unsigned char *)(a1 + v30) = *(unsigned char *)(a2 + v30);
  uint64_t v31 = a3[24];
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(unsigned char *)(a1 + v31) = *(unsigned char *)(a2 + v31);
  uint64_t v32 = a3[26];
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(unsigned char *)(a1 + v32) = *(unsigned char *)(a2 + v32);
  uint64_t v33 = a3[28];
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  *(unsigned char *)(a1 + v33) = *(unsigned char *)(a2 + v33);
  uint64_t v34 = a3[30];
  *(void *)(a1 + a3[29]) = *(void *)(a2 + a3[29]);
  *(void *)(a1 + v34) = *(void *)(a2 + v34);
  uint64_t v35 = a3[32];
  *(unsigned char *)(a1 + a3[31]) = *(unsigned char *)(a2 + a3[31]);
  *(_OWORD *)(a1 + v35) = *(_OWORD *)(a2 + v35);
  uint64_t v36 = a3[34];
  *(void *)(a1 + a3[33]) = *(void *)(a2 + a3[33]);
  *(_OWORD *)(a1 + v36) = *(_OWORD *)(a2 + v36);
  uint64_t v37 = a3[36];
  *(_OWORD *)(a1 + a3[35]) = *(_OWORD *)(a2 + a3[35]);
  uint64_t v38 = (void *)(a1 + v37);
  int v39 = (const void *)(a2 + v37);
  if (v47((const void *)(a2 + v37), 1, v11))
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v38, v39, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v38, 0, 1, v11);
  }
  uint64_t v41 = a3[38];
  *(_OWORD *)(a1 + a3[37]) = *(_OWORD *)(a2 + a3[37]);
  *(_OWORD *)(a1 + v41) = *(_OWORD *)(a2 + v41);
  uint64_t v42 = a3[40];
  *(unsigned char *)(a1 + a3[39]) = *(unsigned char *)(a2 + a3[39]);
  *(unsigned char *)(a1 + v42) = *(unsigned char *)(a2 + v42);
  uint64_t v43 = a3[42];
  *(unsigned char *)(a1 + a3[41]) = *(unsigned char *)(a2 + a3[41]);
  *(unsigned char *)(a1 + v43) = *(unsigned char *)(a2 + v43);
  uint64_t v44 = a3[44];
  *(unsigned char *)(a1 + a3[43]) = *(unsigned char *)(a2 + a3[43]);
  *(unsigned char *)(a1 + v44) = *(unsigned char *)(a2 + v44);
  uint64_t v45 = a3[46];
  *(unsigned char *)(a1 + a3[45]) = *(unsigned char *)(a2 + a3[45]);
  *(_OWORD *)(a1 + v45) = *(_OWORD *)(a2 + v45);
  return a1;
}

uint64_t _s9MediaItemVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[12];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_1ACE74F28();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = a3[13];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a3[16];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  int v32 = v17((void *)(a1 + v29), 1, v15);
  int v33 = v17(v31, 1, v15);
  uint64_t v100 = v16;
  uint64_t v101 = v15;
  uint64_t v99 = v17;
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v30, v31, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v30, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v33)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v30, v15);
LABEL_12:
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v30, v31, v15);
LABEL_13:
  uint64_t v35 = a3[17];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (uint64_t *)(a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *uint64_t v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  swift_release();
  uint64_t v40 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  uint64_t v43 = sub_1ACE750A8();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
  int v46 = v45(v41, 1, v43);
  int v47 = v45(v42, 1, v43);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(void *, void *, uint64_t))(v44 + 32))(v41, v42, v43);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v47)
  {
    (*(void (**)(void *, uint64_t))(v44 + 8))(v41, v43);
LABEL_18:
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    memcpy(v41, v42, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v44 + 40))(v41, v42, v43);
LABEL_19:
  uint64_t v49 = a3[21];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (uint64_t *)(a2 + v49);
  uint64_t v53 = *v51;
  uint64_t v52 = v51[1];
  *uint64_t v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  uint64_t v54 = a3[23];
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(unsigned char *)(a1 + v54) = *(unsigned char *)(a2 + v54);
  uint64_t v55 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v55) = *(unsigned char *)(a2 + v55);
  uint64_t v56 = a3[27];
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  *(unsigned char *)(a1 + v56) = *(unsigned char *)(a2 + v56);
  uint64_t v57 = a3[29];
  *(unsigned char *)(a1 + a3[28]) = *(unsigned char *)(a2 + a3[28]);
  *(void *)(a1 + v57) = *(void *)(a2 + v57);
  uint64_t v58 = a3[31];
  *(void *)(a1 + a3[30]) = *(void *)(a2 + a3[30]);
  *(unsigned char *)(a1 + v58) = *(unsigned char *)(a2 + v58);
  uint64_t v59 = a3[32];
  uint64_t v60 = (void *)(a1 + v59);
  uint64_t v61 = (uint64_t *)(a2 + v59);
  uint64_t v63 = *v61;
  uint64_t v62 = v61[1];
  *uint64_t v60 = v63;
  v60[1] = v62;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[33]) = *(void *)(a2 + a3[33]);
  swift_bridgeObjectRelease();
  uint64_t v64 = a3[34];
  uint64_t v65 = (void *)(a1 + v64);
  uint64_t v66 = (uint64_t *)(a2 + v64);
  uint64_t v68 = *v66;
  uint64_t v67 = v66[1];
  *uint64_t v65 = v68;
  v65[1] = v67;
  swift_bridgeObjectRelease();
  uint64_t v69 = a3[35];
  uint64_t v70 = (void *)(a1 + v69);
  uint64_t v71 = (uint64_t *)(a2 + v69);
  uint64_t v73 = *v71;
  uint64_t v72 = v71[1];
  *uint64_t v70 = v73;
  v70[1] = v72;
  swift_bridgeObjectRelease();
  uint64_t v74 = a3[36];
  uint64_t v75 = (void *)(a1 + v74);
  uint64_t v76 = (void *)(a2 + v74);
  int v77 = v99((void *)(a1 + v74), 1, v101);
  int v78 = v99(v76, 1, v101);
  if (!v77)
  {
    if (!v78)
    {
      (*(void (**)(void *, void *, uint64_t))(v100 + 40))(v75, v76, v101);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v100 + 8))(v75, v101);
    goto LABEL_24;
  }
  if (v78)
  {
LABEL_24:
    uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v75, v76, *(void *)(*(void *)(v79 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v100 + 32))(v75, v76, v101);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v100 + 56))(v75, 0, 1, v101);
LABEL_25:
  uint64_t v80 = a3[37];
  uint64_t v81 = (void *)(a1 + v80);
  uint64_t v82 = (uint64_t *)(a2 + v80);
  uint64_t v84 = *v82;
  uint64_t v83 = v82[1];
  *uint64_t v81 = v84;
  v81[1] = v83;
  swift_bridgeObjectRelease();
  uint64_t v85 = a3[38];
  uint64_t v86 = (void *)(a1 + v85);
  uint64_t v87 = (uint64_t *)(a2 + v85);
  uint64_t v89 = *v87;
  uint64_t v88 = v87[1];
  *uint64_t v86 = v89;
  v86[1] = v88;
  swift_bridgeObjectRelease();
  uint64_t v90 = a3[40];
  *(unsigned char *)(a1 + a3[39]) = *(unsigned char *)(a2 + a3[39]);
  *(unsigned char *)(a1 + v90) = *(unsigned char *)(a2 + v90);
  uint64_t v91 = a3[42];
  *(unsigned char *)(a1 + a3[41]) = *(unsigned char *)(a2 + a3[41]);
  *(unsigned char *)(a1 + v91) = *(unsigned char *)(a2 + v91);
  uint64_t v92 = a3[44];
  *(unsigned char *)(a1 + a3[43]) = *(unsigned char *)(a2 + a3[43]);
  *(unsigned char *)(a1 + v92) = *(unsigned char *)(a2 + v92);
  uint64_t v93 = a3[46];
  *(unsigned char *)(a1 + a3[45]) = *(unsigned char *)(a2 + a3[45]);
  uint64_t v94 = (void *)(a1 + v93);
  __int16 v95 = (uint64_t *)(a2 + v93);
  uint64_t v97 = *v95;
  uint64_t v96 = v95[1];
  void *v94 = v97;
  v94[1] = v96;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9MediaItemVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACC62E68);
}

uint64_t sub_1ACC62E68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[12];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[20];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[33]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t _s9MediaItemVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACC62F94);
}

uint64_t sub_1ACC62F94(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[12];
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[33]) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[20];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  return v13(a1 + v11, a2, a2, v9);
}

void sub_1ACC630A8()
{
  sub_1ACC63260(319, (unint64_t *)&qword_1EB7734D0, MEMORY[0x1E4F276F0]);
  if (v0 <= 0x3F)
  {
    sub_1ACC63260(319, (unint64_t *)&qword_1EB773510, MEMORY[0x1E4F27928]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1ACC63260(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1ACE76FD8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *_s9MediaItemV8ItemTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC63380);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsMediaLibrary.MediaItem.ItemType()
{
  return &type metadata for PodcastsMediaLibrary.MediaItem.ItemType;
}

void *_s17MediaItemSnapshotVwCP(uint64_t a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    uint64_t v8 = a2[7];
    uint64_t v9 = a3[8];
    __dst = (void *)(a1 + v9);
    uint64_t v10 = (char *)a2 + v9;
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v8;
    uint64_t v11 = sub_1ACE74F28();
    uint64_t v12 = *(void *)(v11 - 8);
    unint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[10];
    *(void *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v17 = (void *)((char *)v4 + v16);
    int v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = a3[11];
    uint64_t v21 = a3[12];
    uint64_t v22 = (void *)((char *)v4 + v20);
    uint64_t v23 = (uint64_t *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = (char *)v4 + v21;
    uint64_t v26 = (char *)a2 + v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v26, 1, v11))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v25, v26, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
    }
    uint64_t v28 = a3[13];
    uint64_t v29 = a3[14];
    uint64_t v30 = (void *)((char *)v4 + v28);
    uint64_t v31 = (uint64_t *)((char *)a2 + v28);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    LOBYTE(v31) = *((unsigned char *)a2 + v29);
    *uint64_t v30 = v33;
    v30[1] = v32;
    *((unsigned char *)v4 + v29) = (_BYTE)v31;
    uint64_t v34 = a3[15];
    uint64_t v35 = a3[16];
    uint64_t v36 = (void *)((char *)v4 + v34);
    uint64_t v37 = (uint64_t *)((char *)a2 + v34);
    uint64_t v38 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v38;
    uint64_t v39 = (void *)((char *)v4 + v35);
    uint64_t v40 = (uint64_t *)((char *)a2 + v35);
    uint64_t v41 = v40[1];
    void *v39 = *v40;
    v39[1] = v41;
    uint64_t v42 = a3[17];
    uint64_t v43 = (void *)((char *)v4 + v42);
    uint64_t v44 = (uint64_t *)((char *)a2 + v42);
    uint64_t v45 = v44[1];
    *uint64_t v43 = *v44;
    v43[1] = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t _s17MediaItemSnapshotVwxx(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + *(int *)(a2 + 48);
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17MediaItemSnapshotVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v8 = a3[8];
  __dst = (void *)(a1 + v8);
  uint64_t v9 = (const void *)(a2 + v8);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = a3[11];
  uint64_t v19 = a3[12];
  uint64_t v20 = (void *)(a1 + v18);
  uint64_t v21 = (void *)(a2 + v18);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = (void *)(a1 + v19);
  uint64_t v24 = (const void *)(a2 + v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v24, 1, v10))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v23, v24, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
  }
  uint64_t v26 = a3[13];
  uint64_t v27 = a3[14];
  uint64_t v28 = (void *)(a1 + v26);
  uint64_t v29 = (uint64_t *)(a2 + v26);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  LOBYTE(v29) = *(unsigned char *)(a2 + v27);
  *uint64_t v28 = v31;
  v28[1] = v30;
  *(unsigned char *)(a1 + v27) = (_BYTE)v29;
  uint64_t v32 = a3[15];
  uint64_t v33 = a3[16];
  uint64_t v34 = (void *)(a1 + v32);
  uint64_t v35 = (void *)(a2 + v32);
  uint64_t v36 = v35[1];
  void *v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = (void *)(a1 + v33);
  uint64_t v38 = (void *)(a2 + v33);
  uint64_t v39 = v38[1];
  *uint64_t v37 = *v38;
  v37[1] = v39;
  uint64_t v40 = a3[17];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  uint64_t v43 = v42[1];
  *uint64_t v41 = *v42;
  v41[1] = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17MediaItemSnapshotVwca(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[8];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1ACE74F28();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  *(void *)(a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  uint64_t v17 = a3[10];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)((char *)a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[11];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)((char *)a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[12];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (char *)a2 + v23;
  int v26 = v13((void *)(a1 + v23), 1, v11);
  int v27 = v13(v25, 1, v11);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 24))(v24, v25, v11);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v24, v11);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v24, v25, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
LABEL_13:
  uint64_t v29 = a3[13];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (uint64_t *)((char *)a2 + v29);
  *uint64_t v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  uint64_t v32 = a3[15];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (uint64_t *)((char *)a2 + v32);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[16];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (uint64_t *)((char *)a2 + v35);
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[17];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (uint64_t *)((char *)a2 + v38);
  void *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17MediaItemSnapshotVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 48);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  uint64_t v15 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  if (v12((const void *)(a2 + v15), 1, v10))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v16, v17, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
  }
  uint64_t v19 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  uint64_t v20 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  *(_OWORD *)(a1 + v20) = *(_OWORD *)(a2 + v20);
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  return a1;
}

uint64_t _s17MediaItemSnapshotVwta(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[8];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1ACE74F28();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[12];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  int v30 = v13((void *)(a1 + v27), 1, v11);
  int v31 = v13(v29, 1, v11);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v28, v29, v11);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v28, v11);
    goto LABEL_12;
  }
  if (v31)
  {
LABEL_12:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v28, v29, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v28, 0, 1, v11);
LABEL_13:
  uint64_t v33 = a3[13];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  void *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (uint64_t *)(a2 + v38);
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  void *v39 = v42;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[16];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (uint64_t *)(a2 + v43);
  uint64_t v47 = *v45;
  uint64_t v46 = v45[1];
  void *v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[17];
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = (uint64_t *)(a2 + v48);
  uint64_t v52 = *v50;
  uint64_t v51 = v50[1];
  *uint64_t v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17MediaItemSnapshotVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACC644A8);
}

uint64_t sub_1ACC644A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 32);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 60) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t _s17MediaItemSnapshotVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACC64588);
}

uint64_t sub_1ACC64588(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 32);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 60) + 8) = (a2 - 1);
  }
  return result;
}

void sub_1ACC64650()
{
  sub_1ACC63260(319, (unint64_t *)&qword_1EB7734D0, MEMORY[0x1E4F276F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *_s17MediaItemSnapshotV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC64808);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *_s17MediaItemSnapshotV10CodingKeysOMa()
{
  return &_s17MediaItemSnapshotV10CodingKeysON;
}

uint64_t _s9MediaItemV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD6) {
    goto LABEL_17;
  }
  if (a2 + 42 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 42) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 42;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 42;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 42;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x2B;
  int v8 = v6 - 43;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9MediaItemV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 42 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 42) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD5)
  {
    unsigned int v6 = ((a2 - 214) >> 8) + 1;
    *uint64_t result = a2 + 42;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC6499CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 42;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9MediaItemV10CodingKeysOMa()
{
  return &_s9MediaItemV10CodingKeysON;
}

unint64_t sub_1ACC649D8()
{
  unint64_t result = qword_1E99F4168;
  if (!qword_1E99F4168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4168);
  }
  return result;
}

unint64_t sub_1ACC64A30()
{
  unint64_t result = qword_1E99F4170;
  if (!qword_1E99F4170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4170);
  }
  return result;
}

unint64_t sub_1ACC64A88()
{
  unint64_t result = qword_1E99F4178;
  if (!qword_1E99F4178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4178);
  }
  return result;
}

unint64_t sub_1ACC64AE0()
{
  unint64_t result = qword_1E99F4180;
  if (!qword_1E99F4180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4180);
  }
  return result;
}

unint64_t sub_1ACC64B38()
{
  unint64_t result = qword_1E99F4188;
  if (!qword_1E99F4188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4188);
  }
  return result;
}

unint64_t sub_1ACC64B90()
{
  unint64_t result = qword_1E99F4190;
  if (!qword_1E99F4190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4190);
  }
  return result;
}

uint64_t sub_1ACC64BE4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C52557465737361 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4C525564656566 && a2 == 0xE700000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61725465726F7473 && a2 == 0xEC00000064496B63 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5374736163646F70 && a2 == 0xEE00644965726F74 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1684632935 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001ACECDC10 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001ACECDC30 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x726F68747561 && a2 == 0xE600000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6461656879616C70 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x556B726F77747261 && a2 == 0xEA00000000004C52 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x637365446D657469 && a2 == 0xEF6E6F6974706972 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x7241726576726573 && a2 == 0xED00006B726F7774 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x7263736275537369 && a2 == 0xEE00656C62616269 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x44657361656C6572 && a2 == 0xEB00000000657461 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6D75626C61 && a2 == 0xE500000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001ACECDC50 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x63696C7078457369 && a2 == 0xEA00000000007469 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x6972747365527369 && a2 == 0xEC00000064657463 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001ACECDC70 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x657079546D657469 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x7079546563697270 && a2 == 0xE900000000000065 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x6E694B616964656DLL && a2 == 0xE900000000000064 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x4E65646F73697065 && a2 == 0xED00007265626D75 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x754E6E6F73616573 && a2 == 0xEC0000007265626DLL || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x4974736163646F70 && a2 == 0xEF6C616972655373 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001ACECDC90 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0x496B726F77747261 && a2 == 0xEB000000006F666ELL || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001ACECDCB0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ACECDCD0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0x4C52556572616873 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0x5574736163646F70 && a2 == 0xEB00000000444955 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001ACECDCF0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001ACECDD10 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001ACECDD30 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ACECDD50 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001ACECDD70 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0x6F6C6C6168537369 && a2 == 0xE900000000000077 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0x656C654464656566 && a2 == 0xEB00000000646574 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001ACECDD90 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ACECDDB0)
  {
    swift_bridgeObjectRelease();
    return 42;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 42;
    }
    else {
      return 43;
    }
  }
}

uint64_t sub_1ACC65D78(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61725465726F7473 && a2 == 0xEC00000064496B63;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5374736163646F70 && a2 == 0xEE00644965726F74 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5574736163646F70 && a2 == 0xEB00000000444955 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001ACECDC30 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F68747561 && a2 == 0xE600000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x556B726F77747261 && a2 == 0xEA00000000004C52 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6D75626C61 && a2 == 0xE500000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x63696C7078457369 && a2 == 0xEA00000000007469 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x49746E65746E6F63 && a2 == 0xED000044496D6574 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x4C52557465737361 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001ACECDC90)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

unint64_t sub_1ACC6637C()
{
  unint64_t result = qword_1E99F4198;
  if (!qword_1E99F4198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4198);
  }
  return result;
}

unint64_t sub_1ACC663D0()
{
  unint64_t result = qword_1E99F41A8;
  if (!qword_1E99F41A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F41A8);
  }
  return result;
}

uint64_t dispatch thunk of OAuthHUDViewHandlerProtocol.start()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of OAuthHUDViewHandlerProtocol.dismiss(success:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of OAuthHUDViewHandlerProtocol.displayAlert(title:description:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of OAuthHUDViewHandlerProtocol.spinnerIsActive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

void *sub_1ACC66478(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1ACE77508())
  {
    int v3 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AD119490](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      char v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = objc_msgSend(v5, sel_uuid);
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v10 = sub_1ACE761B8();
        uint64_t v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v3 = sub_1ACA41EA0(0, v3[2] + 1, 1, v3);
        }
        unint64_t v14 = v3[2];
        unint64_t v13 = v3[3];
        if (v14 >= v13 >> 1) {
          int v3 = sub_1ACA41EA0((void *)(v13 > 1), v14 + 1, 1, v3);
        }
        v3[2] = v14 + 1;
        int v15 = &v3[2 * v14];
        void v15[4] = v10;
        v15[5] = v12;
      }
      else
      {
      }
      ++v4;
      if (v7 == v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  int v3 = (void *)MEMORY[0x1E4FBC860];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t static EpisodeLevelCalculator.maximumLevelsToCompute.getter()
{
  return 10;
}

uint64_t static EpisodeLevelCalculator.uncalculatedLevel.getter()
{
  return 1000000;
}

void sub_1ACC66630(uint64_t a1, uint64_t a2, void *a3)
{
}

void sub_1ACC6664C(uint64_t a1, uint64_t a2, void *a3)
{
}

uint64_t sub_1ACC66668(void *a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  uint64_t v8 = sub_1ACE761B8();
  uint64_t v10 = v9;
  id v11 = a4;
  id v12 = a1;
  sub_1ACC67258(a5, v8, v10, v11);

  return swift_bridgeObjectRelease();
}

id EpisodeLevelCalculator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id EpisodeLevelCalculator.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EpisodeLevelCalculator();
  return objc_msgSendSuper2(&v2, sel_init);
}

id EpisodeLevelCalculator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EpisodeLevelCalculator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1ACC667CC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = self;
  id v5 = (void *)sub_1ACE76178();
  id v6 = objc_msgSend(v4, sel_predicateForAllEpisodesOnPodcastUuid_, v5);

  id v7 = objc_msgSend(v4, sel_predicateForVisuallyPlayed_, 1);
  id v8 = objc_msgSend(v4, sel_predicateForPlayedDateSetByListening);
  id v9 = objc_msgSend(v7, sel_AND_, v8);

  id v10 = objc_msgSend(v4, sel_predicateForHasEpisodeNumber);
  id v11 = objc_msgSend(v6, sel_AND_, v9);
  id v12 = objc_msgSend(v11, sel_AND_, v10);

  unint64_t v13 = @"MTEpisode";
  id v14 = v12;
  id v15 = objc_msgSend(v4, sel_sortDescriptorsForLastDatePlayedAscending_, 0);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  unint64_t v16 = sub_1ACE76578();

  sub_1ACA4E408(v16);
  swift_bridgeObjectRelease();
  uint64_t v17 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(a3, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_limit_, v13, v14, v17, 0, 1);

  if (!v18) {
    goto LABEL_11;
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
  unint64_t v19 = sub_1ACE76578();

  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_4;
    }
    goto LABEL_10;
  }
  if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:

    return;
  }
LABEL_4:
  if ((v19 & 0xC000000000000001) != 0)
  {
    id v20 = (id)MEMORY[0x1AD119490](0, v19);
  }
  else
  {
    if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v20 = *(id *)(v19 + 32);
  }
  uint64_t v21 = v20;

  swift_bridgeObjectRelease();
  self;
  if (!swift_dynamicCastObjCClass()) {
}
  }

id sub_1ACC66AE0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v8 = self;
  id v9 = (void *)sub_1ACE76178();
  id v10 = objc_msgSend(v8, sel_predicateForAllEpisodesOnPodcastUuid_, v9);

  id v11 = objc_msgSend(v8, sel_predicateForHasEpisodeNumber);
  id v12 = objc_msgSend(v10, sel_AND_, v11);

  id v13 = objc_msgSend(v8, sel_predicateForEpisodeType_, 0);
  id v14 = objc_msgSend(v12, sel_AND_, v13);

  id v15 = v14;
  sub_1ACC667CC(a2, a3, a4);
  id v17 = v16;
  if (v16)
  {
    id v18 = v16;
    if ((uint64_t)objc_msgSend(v18, sel_seasonNumber) >= 1 && (uint64_t)objc_msgSend(v18, sel_episodeNumber) >= 1)
    {
      id v19 = objc_msgSend(v8, sel_predicateForSeasonNumber_, objc_msgSend(v18, sel_seasonNumber));
      id v20 = objc_msgSend(v15, sel_AND_, v19);

      id v17 = v20;
      id v21 = objc_msgSend(v8, sel_predicateForEpisodesWithEpisodeNumbersGreaterThan_, objc_msgSend(v18, sel_episodeNumber));
      id v15 = objc_msgSend(v17, sel_AND_, v21);

      goto LABEL_9;
    }
  }
  uint64_t v22 = (uint64_t)objc_msgSend(a1, sel_latestSeasonNumber);
  if (v22 < 1)
  {
  }
  else
  {
    id v23 = objc_msgSend(v8, sel_predicateForSeasonNumber_, v22);
    id v24 = objc_msgSend(v15, sel_AND_, v23);

    id v15 = v24;
  }
LABEL_9:

  return v15;
}

void sub_1ACC66D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6 = self;
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  id v8 = (void *)sub_1ACE76978();
  id v9 = objc_msgSend(v6, sel_predicateForEpisodeUuids_, v8);

  id v10 = [v9 NOT];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1ACE84820;
  uint64_t v12 = sub_1ACE761B8();
  uint64_t v14 = v13;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  *(void *)(v11 + 56) = v7;
  unint64_t v15 = sub_1ACADC3A8();
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v14;
  uint64_t v16 = MEMORY[0x1E4FBC240];
  *(void *)(v11 + 96) = MEMORY[0x1E4FBC1C8];
  *(void *)(v11 + 104) = v16;
  *(void *)(v11 + 64) = v15;
  *(void *)(v11 + 72) = 1000000;
  uint64_t v17 = sub_1ACE76B88();
  id v18 = (void *)sub_1ACE76178();
  id v19 = objc_msgSend(v6, sel_predicateForAllEpisodesOnPodcastUuid_, v18);

  uint64_t v37 = v10;
  id v20 = objc_msgSend(v19, sel_AND_, v10);

  uint64_t v36 = (void *)v17;
  id v38 = objc_msgSend(v20, sel_AND_, v17);

  sub_1ACE761B8();
  id v21 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v22 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v21, sel_initWithEntityName_, v22);

  objc_msgSend(v23, sel_setPredicate_, v38);
  objc_msgSend(v23, sel_setReturnsObjectsAsFaults_, 0);
  objc_msgSend(v23, sel_setFetchBatchSize_, 200);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E1A0);
  uint64_t v35 = v23;
  id v39 = a5;
  unint64_t v24 = sub_1ACE76EE8();
  unint64_t v34 = v24;
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (!v25) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v25)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      objc_msgSend(v39, sel_saveInCurrentBlock);

      return;
    }
  }
  if (v25 < 1) {
    goto LABEL_20;
  }
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  while (1)
  {
    if ((v34 & 0xC000000000000001) != 0) {
      MEMORY[0x1AD119490](v26, v34);
    }
    else {
      swift_unknownObjectRetain();
    }
    self;
    uint64_t v28 = swift_dynamicCastObjCClass();
    if (v28) {
      break;
    }
LABEL_6:
    ++v26;
    swift_unknownObjectRelease();
    if (v25 == v26) {
      goto LABEL_16;
    }
  }
  uint64_t v29 = (void *)v28;
  int v30 = (void *)MEMORY[0x1AD11A460](v28);
  int v31 = (void *)sub_1ACE77AF8();
  sub_1ACE761B8();
  uint64_t v32 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_setValue_forKey_, v31, v32, v35);

  if (!__OFADD__(v27++, 1))
  {
    if (__ROR8__(0x8F5C28F5C28F5C29 * v27 + 0x51EB851EB851EB8, 3) <= 0x147AE147AE147AEuLL) {
      objc_msgSend(v39, sel_saveInCurrentBlock);
    }
    goto LABEL_6;
  }
  __break(1u);
LABEL_20:
  __break(1u);
}

void sub_1ACC67258(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v8 = (void *)sub_1ACE76178();
  id v9 = objc_msgSend(a4, sel_podcastForUuid_, v8);

  if (!v9) {
    return;
  }
  int v10 = a1 & 1;
  id v11 = v9;
  unsigned int v39 = v10;
  if (objc_msgSend(v11, sel_isSerialShowTypeInFeed)) {
    BOOL v12 = v10 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  if (v12)
  {
    uint64_t v13 = self;
    uint64_t v14 = (void *)sub_1ACE76178();
    id v15 = objc_msgSend(v13, sel_predicateForAllEpisodesOnPodcastUuid_, v14);

    id v16 = objc_msgSend(v13, sel_sortDescriptorsForCalculatingEpisodeLevel);
  }
  else
  {
    id v15 = sub_1ACC66AE0(v11, a2, a3, a4);
    id v16 = objc_msgSend(self, sel_sortDescriptorsForEpisodeNumberAscending_, 1);
  }
  id v17 = v16;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  unint64_t v18 = sub_1ACE76578();

  id v19 = @"MTEpisode";
  id v40 = v15;
  sub_1ACA4E408(v18);
  swift_bridgeObjectRelease();
  id v20 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(a4, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_limit_, v19, v40, v20, 0, 10);

  if (!v21) {
    goto LABEL_33;
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
  unint64_t v22 = sub_1ACE76578();

  if (v22 >> 62)
  {
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1ACE774B8();
    swift_bridgeObjectRelease_n();
    unint64_t v22 = v33;
  }
  else
  {
    uint64_t v23 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    sub_1ACE779C8();
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
    if (swift_dynamicCastMetatype() || (uint64_t v31 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_12:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = v23 + 32;
      while (1)
      {
        self;
        if (!swift_dynamicCastObjCClass()) {
          break;
        }
        v32 += 8;
        if (!--v31) {
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v22 = v23 | 1;
    }
  }
  uint64_t v37 = a2;
  id v38 = a4;
  uint64_t v36 = v11;
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1ACE77508();
    if (v24) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v24 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v24)
    {
LABEL_15:
      if (v24 >= 1)
      {
        uint64_t v25 = 0;
        do
        {
          if ((v22 & 0xC000000000000001) != 0) {
            id v26 = (id)MEMORY[0x1AD119490](v25, v22);
          }
          else {
            id v26 = *(id *)(v22 + 8 * v25 + 32);
          }
          uint64_t v27 = v26;
          uint64_t v28 = v25 + 1;
          uint64_t v29 = (void *)sub_1ACE77AF8();
          sub_1ACE761B8();
          int v30 = (void *)sub_1ACE76178();
          swift_bridgeObjectRelease();
          objc_msgSend(v27, sel_setValue_forKey_, v29, v30);

          uint64_t v25 = v28;
        }
        while (v24 != v28);
        goto LABEL_29;
      }
      __break(1u);
LABEL_33:
      __break(1u);
      return;
    }
  }
LABEL_29:
  swift_bridgeObjectRelease();
  unint64_t v34 = sub_1ACC66478(v22);
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_1ACB02BC0((uint64_t)v34);
  swift_bridgeObjectRelease();
  sub_1ACC66D7C(v39, v37, a3, v35, v38);
  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for EpisodeLevelCalculator()
{
  return self;
}

uint64_t method lookup function for EpisodeLevelCalculator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EpisodeLevelCalculator);
}

uint64_t dispatch thunk of EpisodeLevelCalculator.unsafeUpdateEpisodeLevels(showUUID:on:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of EpisodeLevelCalculator.unsafeUpdateEpisodeShowTypeSpecificLevels(showUUID:on:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t AutoDownloadRetentionPolicyHistory.transitions.getter()
{
  return swift_retain();
}

uint64_t AutoDownloadRetentionPolicyHistory.init(transitions:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F41B0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = a1;
  *a2 = result;
  return result;
}

uint64_t AutoDownloadRetentionPolicyHistory.recordTransition(from:to:transitionTime:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0CF8);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = *v3;
  BOOL v12 = (char *)v9 + *(int *)(v11 + 56);
  uint64_t v13 = sub_1ACE750A8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v12, a3, v13);
  *id v9 = a1;
  v9[1] = a2;
  id v16 = v9;
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  sub_1ACC67A5C((unint64_t *)(v10 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 24));
  return sub_1ACC67A78((uint64_t)v9);
}

uint64_t sub_1ACC6790C(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0CF8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACC68944(a2, (uint64_t)v7);
  unint64_t v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v8 = sub_1ACA43868(0, *(void *)(v8 + 16) + 1, 1, v8);
  }
  unint64_t v10 = *(void *)(v8 + 16);
  unint64_t v9 = *(void *)(v8 + 24);
  if (v10 >= v9 >> 1) {
    unint64_t v8 = sub_1ACA43868(v9 > 1, v10 + 1, 1, v8);
  }
  *(void *)(v8 + 16) = v10 + 1;
  uint64_t result = sub_1ACC689AC((uint64_t)v7, v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v10);
  *a1 = v8;
  return result;
}

uint64_t sub_1ACC67A5C(unint64_t *a1)
{
  return sub_1ACC6790C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1ACC67A78(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0CF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static AutoDownloadRetentionPolicyHistory.CodingKeys.== infix(_:_:)()
{
  return 1;
}

uint64_t AutoDownloadRetentionPolicyHistory.CodingKeys.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t AutoDownloadRetentionPolicyHistory.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x697469736E617274 && a2 == 0xEB00000000736E6FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1ACE77848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void AutoDownloadRetentionPolicyHistory.CodingKeys.init(intValue:)(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t AutoDownloadRetentionPolicyHistory.CodingKeys.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t AutoDownloadRetentionPolicyHistory.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t AutoDownloadRetentionPolicyHistory.CodingKeys.stringValue.getter()
{
  return 0x697469736E617274;
}

uint64_t sub_1ACC67C34()
{
  return 0x697469736E617274;
}

uint64_t sub_1ACC67C54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x697469736E617274 && a2 == 0xEB00000000736E6FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1ACE77848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ACC67D04(uint64_t a1)
{
  unint64_t v2 = sub_1ACC67F48();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACC67D40(uint64_t a1)
{
  unint64_t v2 = sub_1ACC67F48();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AutoDownloadRetentionPolicyHistory.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F41B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACC67F48();
  sub_1ACE77C48();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F41C8);
    sub_1ACC68690(&qword_1E99F41D0, &qword_1E99F41D8);
    sub_1ACE77698();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v12[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F41B0);
    uint64_t v10 = swift_allocObject();
    *(_DWORD *)(v10 + 24) = 0;
    *(void *)(v10 + 16) = v9;
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

unint64_t sub_1ACC67F48()
{
  unint64_t result = qword_1E99F41C0;
  if (!qword_1E99F41C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F41C0);
  }
  return result;
}

void AutoDownloadRetentionPolicyHistory.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F41E0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *v1;
  uint64_t v9 = *v1 + 4;
  uint64_t v10 = v8 + 6;
  os_unfair_lock_lock(v8 + 6);
  sub_1ACA6BBEC(v9, &v13);
  os_unfair_lock_unlock(v10);
  if (v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v13;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ACC67F48();
    sub_1ACE77C78();
    uint64_t v13 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F41C8);
    sub_1ACC68690(&qword_1E99F41E8, &qword_1E99F41F0);
    sub_1ACE77788();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACC68174@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AutoDownloadRetentionPolicyHistory.init(from:)(a1, a2);
}

void sub_1ACC6818C(void *a1)
{
}

void NSUserDefaults.recordRetentionPolicyChange(from:to:transitionTime:)(uint64_t a1, objc_class *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0CF8);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = ((char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((objc_class *)a1 == a2)
  {
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1ACE754C8();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB768C28);
    id v26 = sub_1ACE75498();
    os_log_type_t v10 = sub_1ACE76BC8();
    if (os_log_type_enabled(v26, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v28 = v12;
      *(_DWORD *)uint64_t v11 = 136315394;
      uint64_t v27 = a1;
      type metadata accessor for MTPodcastEpisodeLimit(0);
      uint64_t v13 = sub_1ACE76228();
      uint64_t v27 = sub_1ACA3189C(v13, v14, &v28);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2080;
      uint64_t v27 = a1;
      uint64_t v15 = sub_1ACE76228();
      uint64_t v27 = sub_1ACA3189C(v15, v16, &v28);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v26, v10, "Skipping updating retention policy history for equivilent change: %s -> %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v12, -1, -1);
      MEMORY[0x1AD11B340](v11, -1, -1);
    }
    else
    {
      uint64_t v25 = v26;
    }
  }
  else
  {
    uint64_t v17 = sub_1ACE761B8();
    sub_1ACC12CC8(v17, v18, &v28);
    swift_bridgeObjectRelease();
    uint64_t v19 = v28;
    if (!v28)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F41B0);
      uint64_t v19 = swift_allocObject();
      *(_DWORD *)(v19 + 24) = 0;
      *(void *)(v19 + 16) = MEMORY[0x1E4FBC860];
    }
    id v20 = (char *)v8 + *(int *)(v6 + 48);
    uint64_t v21 = sub_1ACE750A8();
    uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v20, a3, v21);
    v8->isa = (Class)a1;
    v8[1].isa = a2;
    MEMORY[0x1F4188790](v22);
    *(&v26 - 2) = v8;
    os_unfair_lock_lock((os_unfair_lock_t)(v19 + 24));
    sub_1ACC68A14((unint64_t *)(v19 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v19 + 24));
    sub_1ACC67A78((uint64_t)v8);
    uint64_t v23 = sub_1ACE761B8();
    sub_1ACC138C8(v19, v23, v24);
    swift_release();
    swift_bridgeObjectRelease();
  }
}

uint64_t NSUserDefaults.transitionGlobalDownloadRetentionPolicy(to:)(objc_class *a1)
{
  uint64_t v3 = sub_1ACE750A8();
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = MEMORY[0x1F4188790](v3).n128_u64[0];
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(v1, sel_episodeLimitForKey_, @"MTPodcastEpisodeLimitDefaultKey", v5);
  uint64_t v9 = (void *)sub_1ACE77AF8();
  objc_msgSend(v1, sel_setObject_forKey_, v9, @"MTPodcastEpisodeLimitDefaultKey");

  sub_1ACE75088();
  NSUserDefaults.recordRetentionPolicyChange(from:to:transitionTime:)((uint64_t)v8, a1, (uint64_t)v7);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1ACC68690(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F41C8);
    sub_1ACC68710(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACC68710(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F0CF8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACC6875C()
{
  unint64_t result = qword_1E99F41F8;
  if (!qword_1E99F41F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F41F8);
  }
  return result;
}

unint64_t sub_1ACC687B4()
{
  unint64_t result = qword_1E99F4200;
  if (!qword_1E99F4200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4200);
  }
  return result;
}

unint64_t sub_1ACC6880C()
{
  unint64_t result = qword_1E99F4208;
  if (!qword_1E99F4208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4208);
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoDownloadRetentionPolicyHistory()
{
  return &type metadata for AutoDownloadRetentionPolicyHistory;
}

unsigned char *storeEnumTagSinglePayload for AutoDownloadRetentionPolicyHistory.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACC6890CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoDownloadRetentionPolicyHistory.CodingKeys()
{
  return &type metadata for AutoDownloadRetentionPolicyHistory.CodingKeys;
}

uint64_t sub_1ACC68944(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0CF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACC689AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0CF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACC68A14(unint64_t *a1)
{
  return sub_1ACC67A5C(a1);
}

BOOL static RestrictionsController.isExplicitContentAllowed.getter()
{
  if (qword_1EB7712B0 != -1) {
    swift_once();
  }
  unint64_t v0 = *(os_unfair_lock_s **)(qword_1EB7712A0 + OBJC_IVAR___PFRestrictionsController__state);
  uint64_t v1 = v0 + 4;
  uint64_t v2 = v0 + 6;
  os_unfair_lock_lock(v0 + 6);
  sub_1ACA30C84(v1, &v4);
  os_unfair_lock_unlock(v2);
  return v4 == 0;
}

id sub_1ACC68AD4()
{
  id result = objc_msgSend(self, sel_sharedConnection);
  if (result) {
    qword_1EB7714E0 = (uint64_t)result;
  }
  else {
    __break(1u);
  }
  return result;
}

void sub_1ACC68B18(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1AD11B470](v1);
  if (v2)
  {
    int v3 = (void *)v2;
    uint64_t v4 = (void *)MEMORY[0x1AD11B470](v2+ OBJC_IVAR____TtC18PodcastsFoundationP33_1BB6D7E8455315190AE4E4AB578E53C530RestrictionsControllerDelegate_restrictionsController);

    if (v4)
    {
      RestrictionsController.reload()();
    }
  }
}

Swift::Void __swiftcall RestrictionsController.reload()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE767F8();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  id v6[2] = 0;
  v6[3] = 0;
  void v6[4] = v0;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  id v8 = v0;
  if (v7 == 1)
  {
    sub_1ACBBE574((uint64_t)v3);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_1ACE767E8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1ACE766D8();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1E99F4240;
  *(void *)(v12 + 24) = v6;
  if (v10 | v9)
  {
    v13[0] = 0;
    v13[1] = 0;
    void v13[2] = v9;
    double v13[3] = v10;
  }
  swift_task_create();
  swift_release();
}

uint64_t sub_1ACC68EA0()
{
  uint64_t result = sub_1ACE76178();
  qword_1E99F4218 = result;
  return result;
}

id static NSNotificationName.restrictionsDidChange.getter()
{
  if (qword_1E99F0098 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_1E99F4218;
  return v0;
}

BOOL RestrictionsController.ExplicitContentState.isExplicitContentAllowed.getter(uint64_t a1)
{
  return a1 == 0;
}

unint64_t RestrictionsController.ExplicitContentState.debugDescription.getter(uint64_t a1)
{
  unint64_t result = 0xD000000000000026;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x1000000000000055;
      break;
    case 2:
      unint64_t result = 0xD000000000000044;
      break;
    case 3:
      unint64_t result = 0x100000000000002ELL;
      break;
    default:
      sub_1ACE77A18();
      __break(1u);
      JUMPOUT(0x1ACC69004);
  }
  return result;
}

unint64_t RestrictionsController.ExplicitContentState.init(rawValue:)(unint64_t a1)
{
  return sub_1ACBDE644(a1);
}

unint64_t sub_1ACC69034()
{
  return RestrictionsController.ExplicitContentState.debugDescription.getter(*v0);
}

uint64_t RestrictionsController.state.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR___PFRestrictionsController__state);
  uint64_t v2 = v1 + 4;
  int v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACA30C84(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

id sub_1ACC690A4()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RestrictionsController()), sel_init);
  qword_1EB7712A0 = (uint64_t)result;
  return result;
}

id static RestrictionsController.shared.getter()
{
  if (qword_1EB7712B0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB7712A0;
  return v0;
}

id sub_1ACC69234()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR___PFRestrictionsController_observation] = 0;
  uint64_t v2 = v0;
  uint64_t v3 = sub_1ACC6AFCC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771928);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = v3;
  *(void *)&v2[OBJC_IVAR___PFRestrictionsController__state] = v4;

  v7.receiver = v2;
  v7.super_class = ObjectType;
  id v5 = objc_msgSendSuper2(&v7, sel_init);
  RestrictionsController.reload()();

  return v5;
}

Swift::Void __swiftcall RestrictionsController.startListening()()
{
  uint64_t v1 = OBJC_IVAR___PFRestrictionsController_observation;
  if (!*(void *)(v0 + OBJC_IVAR___PFRestrictionsController_observation))
  {
    uint64_t v2 = (objc_class *)type metadata accessor for RestrictionsControllerDelegate();
    id v3 = objc_allocWithZone(v2);
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    v6.receiver = v3;
    v6.super_class = v2;
    id v4 = objc_msgSendSuper2(&v6, sel_init);
    if (qword_1EB770B60 != -1) {
      swift_once();
    }
    objc_msgSend((id)qword_1EB7714E0, sel_registerObserver_, v4);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
  }
}

Swift::Void __swiftcall RestrictionsController.stopListening()()
{
  uint64_t v1 = OBJC_IVAR___PFRestrictionsController_observation;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___PFRestrictionsController_observation);
  if (v2)
  {
    uint64_t v3 = qword_1EB770B60;
    id v4 = v2;
    if (v3 != -1) {
      swift_once();
    }
    objc_msgSend((id)qword_1EB7714E0, sel_unregisterObserver_, v4);

    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = 0;
  }
}

uint64_t sub_1ACC6951C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1ACC695B0;
  return sub_1ACC696D0();
}

uint64_t sub_1ACC695B0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1ACC696B0, 0, 0);
}

uint64_t sub_1ACC696B0()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ACC696D0()
{
  v1[13] = v0;
  uint64_t v2 = sub_1ACE75DC8();
  v1[14] = v2;
  v1[15] = *(void *)(v2 - 8);
  v1[16] = swift_task_alloc();
  uint64_t v3 = sub_1ACE75E48();
  v1[17] = v3;
  v1[18] = *(void *)(v3 - 8);
  v1[19] = swift_task_alloc();
  uint64_t v4 = sub_1ACE754C8();
  v1[20] = v4;
  v1[21] = *(void *)(v4 - 8);
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACC69858, 0, 0);
}

uint64_t sub_1ACC69858()
{
  if (qword_1EB771560 != -1) {
    swift_once();
  }
  v0[24] = __swift_project_value_buffer(v0[20], (uint64_t)qword_1EB771540);
  uint64_t v1 = sub_1ACE75498();
  os_log_type_t v2 = sub_1ACE76BD8();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1AC9D5000, v1, v2, "Reloading setting", v3, 2u);
    MEMORY[0x1AD11B340](v3, -1, -1);
  }

  uint64_t v4 = sub_1ACE76178();
  v0[25] = v4;
  id v5 = (void *)swift_task_alloc();
  v0[26] = (uint64_t)v5;
  *id v5 = v0;
  v5[1] = sub_1ACC699E0;
  v5[17] = v4;
  return MEMORY[0x1F4188298](sub_1ACC6B218, 0, 0);
}

uint64_t sub_1ACC699E0(char a1)
{
  os_log_type_t v2 = *(void **)(*(void *)v1 + 200);
  *(unsigned char *)(*(void *)v1 + 216) = a1;
  swift_task_dealloc();

  return MEMORY[0x1F4188298](sub_1ACC69AFC, 0, 0);
}

void sub_1ACC69AFC()
{
  uint64_t v56 = v0;
  if (v0[27]) {
    uint64_t v1 = 2;
  }
  else {
    uint64_t v1 = sub_1ACC6AFCC();
  }
  os_log_type_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[21] + 16);
  v2(v0[23], v0[24], v0[20]);
  uint64_t v3 = sub_1ACE75498();
  os_log_type_t v4 = sub_1ACE76BD8();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    v55[0] = v6;
    *(_DWORD *)id v5 = 136315138;
    uint64_t v7 = v6;
    uint64_t v52 = v2;
    uint64_t v8 = 0xD000000000000026;
    unint64_t v9 = 0x80000001ACECDF70;
    uint64_t v50 = v1;
    switch(v1)
    {
      case 0:
        goto LABEL_15;
      case 1:
        uint64_t v8 = 0x1000000000000055;
        uint64_t v10 = "restrictedOverridable - Explicit content isn’t allowed, but the user may enable it.";
        goto LABEL_13;
      case 2:
        uint64_t v8 = 0xD000000000000044;
        uint64_t v10 = "restrictedStorefront - Explicit content is banned by the storefront.";
LABEL_13:
        unint64_t v9 = (unint64_t)(v10 - 32) | 0x8000000000000000;
        goto LABEL_15;
      case 3:
        unint64_t v9 = 0x80000001ACECDE90;
        uint64_t v8 = 0x100000000000002ELL;
LABEL_15:
        uint64_t v15 = v0[21];
        uint64_t v46 = v0[20];
        uint64_t v48 = v0[23];
        v0[12] = sub_1ACA3189C(v8, v9, v55);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v3, v4, "Fetched setting: %s", v5, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v7, -1, -1);
        MEMORY[0x1AD11B340](v5, -1, -1);

        unint64_t v14 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
        v14(v48, v46);
        uint64_t v1 = v50;
        goto LABEL_16;
      default:
        v0[11] = v1;
LABEL_9:
        sub_1ACE77A18();
        return;
    }
  }
  uint64_t v52 = v2;
  uint64_t v11 = v0[23];
  uint64_t v12 = v0[20];
  uint64_t v13 = v0[21];

  unint64_t v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v14(v11, v12);
LABEL_16:
  unint64_t v16 = *(os_unfair_lock_s **)(v0[13] + OBJC_IVAR___PFRestrictionsController__state);
  uint64_t v17 = v16 + 4;
  unint64_t v18 = v16 + 6;
  os_unfair_lock_lock(v16 + 6);
  sub_1ACA30C84(v17, v55);
  os_unfair_lock_unlock(v18);
  if (v1 != v55[0])
  {
    *(void *)(swift_task_alloc() + 16) = v1;
    os_unfair_lock_lock(v18);
    sub_1ACBDE638(v17);
    os_unfair_lock_unlock(v18);
    uint64_t v51 = v1;
    uint64_t v20 = v0[24];
    uint64_t v21 = v0[22];
    uint64_t v22 = v0[20];
    uint64_t v23 = (void *)v0[13];
    swift_task_dealloc();
    v52(v21, v20, v22);
    id v24 = v23;
    uint64_t v25 = sub_1ACE75498();
    os_log_type_t v26 = sub_1ACE76BC8();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v54 = v28;
      *(_DWORD *)uint64_t v27 = 136315138;
      os_unfair_lock_lock(v18);
      sub_1ACA30C84(v17, v55);
      os_unfair_lock_unlock(v18);
      uint64_t v34 = v55[0];
      uint64_t v35 = 0xD000000000000026;
      unint64_t v36 = 0x80000001ACECDF70;
      switch(v55[0])
      {
        case 0:
          break;
        case 1:
          uint64_t v35 = 0x1000000000000055;
          uint64_t v37 = "restrictedOverridable - Explicit content isn’t allowed, but the user may enable it.";
          goto LABEL_27;
        case 2:
          uint64_t v35 = 0xD000000000000044;
          uint64_t v37 = "restrictedStorefront - Explicit content is banned by the storefront.";
LABEL_27:
          unint64_t v36 = (unint64_t)(v37 - 32) | 0x8000000000000000;
          break;
        case 3:
          unint64_t v36 = 0x80000001ACECDE90;
          uint64_t v35 = 0x100000000000002ELL;
          break;
        default:

          v0[9] = v34;
          goto LABEL_9;
      }
      uint64_t v47 = v0[20];
      uint64_t v49 = v0[22];
      id v38 = (void *)v0[13];
      v0[10] = sub_1ACA3189C(v35, v36, &v54);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v25, v26, "Setting did change: %s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v28, -1, -1);
      MEMORY[0x1AD11B340](v27, -1, -1);

      uint64_t v33 = v47;
      uint64_t v32 = v49;
    }
    else
    {
      uint64_t v29 = v0[22];
      uint64_t v30 = v0[20];
      uint64_t v31 = (void *)v0[13];

      uint64_t v32 = v29;
      uint64_t v33 = v30;
    }
    v14(v32, v33);
    uint64_t v40 = v0[18];
    uint64_t v39 = v0[19];
    uint64_t v41 = v0[16];
    uint64_t v53 = v0[17];
    uint64_t v42 = v0[14];
    uint64_t v43 = v0[15];
    sub_1ACA51E1C();
    uint64_t v44 = (void *)sub_1ACE76CF8();
    v0[6] = sub_1ACC6A764;
    v0[7] = 0;
    v0[2] = MEMORY[0x1E4F143A8];
    v0[3] = 1107296256;
    v0[4] = sub_1ACA6DA9C;
    v0[5] = &block_descriptor_20_1;
    uint64_t v45 = _Block_copy(v0 + 2);
    sub_1ACE75E08();
    v0[8] = MEMORY[0x1E4FBC860];
    sub_1ACA55D24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v39, v41, v45);
    _Block_release(v45);

    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v53);
    uint64_t v1 = v51;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (void (*)(uint64_t))v0[1];
  v19(v1);
}

uint64_t RestrictionsController.isExplicitContentBannedInCurrentStorefront()()
{
  return MEMORY[0x1F4188298](sub_1ACC6A2A4, 0, 0);
}

uint64_t sub_1ACC6A2A4()
{
  uint64_t v1 = sub_1ACE76178();
  *(void *)(v0 + 16) = v1;
  os_log_type_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *os_log_type_t v2 = v0;
  v2[1] = sub_1ACC6A370;
  v2[17] = v1;
  return MEMORY[0x1F4188298](sub_1ACC6B218, 0, 0);
}

uint64_t sub_1ACC6A370(uint64_t a1)
{
  uint64_t v3 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();

  uint64_t v4 = *(uint64_t (**)(uint64_t))(v6 + 8);
  return v4(a1);
}

uint64_t RestrictionsController.isExplicitContentRestrictedByDefaultInCurrentStorefront()()
{
  return MEMORY[0x1F4188298](sub_1ACC6A4A0, 0, 0);
}

uint64_t sub_1ACC6A4A0()
{
  uint64_t v1 = sub_1ACE76178();
  *(void *)(v0 + 16) = v1;
  os_log_type_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *os_log_type_t v2 = v0;
  v2[1] = sub_1ACC6BA30;
  v2[17] = v1;
  return MEMORY[0x1F4188298](sub_1ACC6B218, 0, 0);
}

uint64_t RestrictionsController.allowExplicitContent()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1ACC6A58C, 0, 0);
}

id sub_1ACC6A58C()
{
  id result = objc_msgSend(self, sel_sharedConnection);
  if (result)
  {
    os_log_type_t v2 = result;
    objc_msgSend(result, sel_setBoolValue_forSetting_, 1, *MEMORY[0x1E4F73FE8]);

    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 24) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1ACC6A668;
    return (id)sub_1ACC696D0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACC6A668(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

void sub_1ACC6A764()
{
  id v0 = objc_msgSend(self, sel_defaultCenter);
  id v1 = v0;
  if (qword_1E99F0098 != -1)
  {
    swift_once();
    id v0 = v1;
  }
  objc_msgSend(v0, sel_postNotificationName_object_, qword_1E99F4218, 0);
}

uint64_t sub_1ACC6A854()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1ACC6A894(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1ACA50B84;
  v3[2] = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[3] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1ACC695B0;
  return sub_1ACC696D0();
}

uint64_t sub_1ACC6A974(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1ACC6AA54;
  return v5(v2 + 16);
}

uint64_t sub_1ACC6AA54()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1ACC6AB84()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC6ABBC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1ACA50B84;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E99F4248 + dword_1E99F4248);
  return v6(a1, v4);
}

uint64_t type metadata accessor for RestrictionsControllerDelegate()
{
  return self;
}

uint64_t sub_1ACC6AC98()
{
  uint64_t v0 = sub_1ACE75DC8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE75E48();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB771560 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1ACE754C8();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EB771540);
  unint64_t v9 = sub_1ACE75498();
  os_log_type_t v10 = sub_1ACE76BD8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_1AC9D5000, v9, v10, "Received profileConnectionDidReceiveRestrictionChangedNotification", v11, 2u);
    MEMORY[0x1AD11B340](v11, -1, -1);
  }

  sub_1ACA51E1C();
  uint64_t v12 = (void *)sub_1ACE76CF8();
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1ACC6BA28;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_47;
  unint64_t v14 = _Block_copy(aBlock);
  swift_release();
  sub_1ACE75E08();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1ACA55D24();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA55D7C();
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v7, v3, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ACC6AFCC()
{
  if (qword_1EB770B60 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB7714E0;
  unsigned int v1 = objc_msgSend((id)qword_1EB7714E0, sel_isExplicitContentAllowedOutAsk_, 0);
  unsigned int v2 = objc_msgSend(v0, sel_isBoolSettingLockedDownByRestrictions_, *MEMORY[0x1E4F73FE8]);
  if (qword_1EB771560 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1ACE754C8();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB771540);
  uint64_t v4 = sub_1ACE75498();
  os_log_type_t v5 = sub_1ACE76BD8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 67109120;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v4, v5, "isExplicitContentAllowed: %{BOOL}d", v6, 8u);
    MEMORY[0x1AD11B340](v6, -1, -1);
  }

  uint64_t v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76BD8();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v9 = 67109120;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v7, v8, "isSettingLockedDown: %{BOOL}d", v9, 8u);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }

  uint64_t v10 = 3;
  if (!v2) {
    uint64_t v10 = 1;
  }
  if (v1) {
    return 0;
  }
  else {
    return v10;
  }
}

uint64_t sub_1ACC6B1F8(uint64_t a1)
{
  *(void *)(v1 + 136) = a1;
  return MEMORY[0x1F4188298](sub_1ACC6B218, 0, 0);
}

uint64_t sub_1ACC6B218()
{
  uint64_t v1 = v0[17];
  id v2 = objc_msgSend(self, sel_sharedInstance);
  id v3 = objc_msgSend(v2, sel_BOOLForKey_, v1);
  v0[18] = v3;

  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1ACC6B368;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1ACB3B384;
  v0[13] = &block_descriptor_22;
  v0[14] = v4;
  objc_msgSend(v3, sel_valueWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1ACC6B368()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    id v2 = sub_1ACC6B69C;
  }
  else {
    id v2 = sub_1ACC6B478;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACC6B478()
{
  unint64_t v18 = v0;
  uint64_t v1 = (void *)v0[15];
  id v2 = objc_msgSend(v1, sel_BOOLValue);

  if (qword_1EB771560 != -1) {
    swift_once();
  }
  id v3 = (void *)v0[17];
  uint64_t v4 = sub_1ACE754C8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB771540);
  id v5 = v3;
  uint64_t v6 = sub_1ACE75498();
  os_log_type_t v7 = sub_1ACE76BD8();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = (void *)v0[17];
  unint64_t v9 = (void *)v0[18];
  if (v8)
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v17 = v12;
    uint64_t v13 = sub_1ACE761B8();
    v0[10] = sub_1ACA3189C(v13, v14, &v17);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 1024;
    *((_DWORD *)v0 + 20) = v2;
    sub_1ACE76FF8();
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v12, -1, -1);
    MEMORY[0x1AD11B340](v11, -1, -1);
  }
  else
  {
  }
  uint64_t v15 = (uint64_t (*)(id))v0[1];
  return v15(v2);
}

uint64_t sub_1ACC6B69C()
{
  uint64_t v24 = v0;
  swift_willThrow();
  if (qword_1EB771560 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 152);
  id v2 = *(void **)(v0 + 136);
  uint64_t v3 = sub_1ACE754C8();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB771540);
  id v4 = v2;
  id v5 = v1;
  id v6 = v4;
  id v7 = v1;
  BOOL v8 = sub_1ACE75498();
  os_log_type_t v9 = sub_1ACE76BE8();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = *(void **)(v0 + 152);
  uint64_t v12 = *(void **)(v0 + 136);
  if (v10)
  {
    uint64_t v22 = *(void **)(v0 + 144);
    uint64_t v13 = swift_slowAlloc();
    uint64_t v20 = (void *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v23 = v21;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v14 = sub_1ACE761B8();
    *(void *)(v0 + 80) = sub_1ACA3189C(v14, v15, &v23);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 12) = 2112;
    id v16 = v11;
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 80) = v17;
    sub_1ACE76FF8();
    *uint64_t v20 = v17;

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v20, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v21, -1, -1);
    MEMORY[0x1AD11B340](v13, -1, -1);
  }
  else
  {
  }
  unint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18(0);
}

unint64_t sub_1ACC6B968()
{
  unint64_t result = qword_1E99F4290;
  if (!qword_1E99F4290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4290);
  }
  return result;
}

uint64_t type metadata accessor for RestrictionsController()
{
  return self;
}

ValueMetadata *type metadata accessor for RestrictionsController.ExplicitContentState()
{
  return &type metadata for RestrictionsController.ExplicitContentState;
}

uint64_t sub_1ACC6B9F0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1ACC6BA28()
{
  sub_1ACC68B18(v0);
}

uint64_t sub_1ACC6BA34(uint64_t a1)
{
  id v2 = objc_msgSend(*(id *)(v1 + 16), sel_arrayForKey_, a1);
  id v3 = objc_msgSend(v2, sel_unsafeSnapshotSyncValue);

  if (v3)
  {
    id v4 = v3;
    sub_1ACE76568();
  }
  return 0;
}

uint64_t sub_1ACC6BAC8()
{
  uint64_t result = sub_1ACE76178();
  qword_1EB76E338 = result;
  return result;
}

uint64_t sub_1ACC6BB00()
{
  uint64_t result = sub_1ACE76178();
  qword_1EB76E360 = result;
  return result;
}

uint64_t sub_1ACC6BB38()
{
  uint64_t result = sub_1ACE76178();
  qword_1EB76E350 = result;
  return result;
}

uint64_t sub_1ACC6BB70()
{
  uint64_t result = sub_1ACE76178();
  qword_1EB76E328 = result;
  return result;
}

uint64_t FeedManagerBagConfiguration.deltaSyncHostURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA3AAD4(v1, a1, &qword_1EB7731B0);
}

uint64_t FeedManagerBagConfiguration.deltaPullToFreshOnShowPageShouldBootstrap.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedManagerBagConfiguration() + 20));
}

uint64_t type metadata accessor for FeedManagerBagConfiguration()
{
  uint64_t result = qword_1EB76C740;
  if (!qword_1EB76C740) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FeedManagerBagConfiguration.deltaShouldEndUpdateOnDetectingLoop.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedManagerBagConfiguration() + 24));
}

uint64_t FeedManagerBagConfiguration.backoffIntervals.getter()
{
  type metadata accessor for FeedManagerBagConfiguration();
  return swift_bridgeObjectRetain();
}

uint64_t static FeedManagerBagConfiguration.getConfiguration(completion:)(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(self, sel_sharedInstance);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1ACC6BF0C;
  *(void *)(v6 + 24) = v5;
  void v9[4] = sub_1ACAA3908;
  v9[5] = v6;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  id v9[2] = sub_1ACAA3910;
  v9[3] = &block_descriptor_48;
  id v7 = _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_createSnapshotWithCompletion_, v7);
  _Block_release(v7);

  return swift_release();
}

uint64_t sub_1ACC6BDE4(void *a1, char a2, void (*a3)(void *))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E510);
  MEMORY[0x1F4188790](v6);
  BOOL v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    *BOOL v8 = a1;
    swift_storeEnumTagMultiPayload();
    id v10 = a1;
  }
  else
  {
    uint64_t v9 = swift_retain();
    sub_1ACC6BF18(v9, (uint64_t)v8);
    swift_storeEnumTagMultiPayload();
  }
  a3(v8);
  return sub_1ACA50E78((uint64_t)v8, &qword_1EB76E510);
}

uint64_t sub_1ACC6BED4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC6BF0C(void *a1, char a2)
{
  return sub_1ACC6BDE4(a1, a2 & 1, *(void (**)(void *))(v2 + 16));
}

uint64_t sub_1ACC6BF18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  id v38 = &v35[-v8];
  uint64_t v9 = (int *)type metadata accessor for FeedManagerBagConfiguration();
  MEMORY[0x1F4188790](v9);
  uint64_t v37 = &v35[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v35[-v12];
  MEMORY[0x1F4188790](v14);
  id v16 = &v35[-v15];
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = &v35[-v18];
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = &v35[-v21];
  if (qword_1EB76C738 != -1) {
    swift_once();
  }
  uint64_t v23 = __swift_project_value_buffer((uint64_t)v9, (uint64_t)qword_1EB785950);
  sub_1ACC6D2C8(v23, (uint64_t)v22);
  if (qword_1EB76E348 != -1) {
    swift_once();
  }
  sub_1ACAA3C24(qword_1EB76E338, (uint64_t)v6);
  sub_1ACC6D2C8((uint64_t)v22, (uint64_t)v19);
  uint64_t v24 = sub_1ACE74F28();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v25 + 48))(v6, 1, v24) == 1)
  {
    sub_1ACA3AAD4((uint64_t)v19, (uint64_t)v38, &qword_1EB7731B0);
    sub_1ACC6D32C((uint64_t)v19);
    sub_1ACA50E78((uint64_t)v6, &qword_1EB7731B0);
  }
  else
  {
    sub_1ACC6D32C((uint64_t)v19);
    os_log_type_t v26 = v38;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 32))(v38, v6, v24);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v25 + 56))(v26, 0, 1, v24);
  }
  if (qword_1EB76E370 != -1) {
    swift_once();
  }
  id v27 = objc_msgSend(*(id *)(a1 + 16), sel_BOOLForKey_, qword_1EB76E360);
  id v28 = objc_msgSend(v27, sel_unsafeSnapshotSyncValue);

  if (v28)
  {
    unsigned int v36 = objc_msgSend(v28, sel_BOOLValue);

    sub_1ACC6D2C8((uint64_t)v22, (uint64_t)v16);
  }
  else
  {
    sub_1ACC6D2C8((uint64_t)v22, (uint64_t)v16);
    unsigned int v36 = v16[v9[5]];
  }
  sub_1ACC6D32C((uint64_t)v16);
  if (qword_1EB76E358 != -1) {
    swift_once();
  }
  id v29 = objc_msgSend(*(id *)(a1 + 16), sel_BOOLForKey_, qword_1EB76E350);
  id v30 = objc_msgSend(v29, sel_unsafeSnapshotSyncValue);

  if (v30)
  {
    unsigned __int8 v31 = objc_msgSend(v30, (SEL)&selRef_initWithFetchRequest_);

    sub_1ACC6D2C8((uint64_t)v22, (uint64_t)v13);
  }
  else
  {
    sub_1ACC6D2C8((uint64_t)v22, (uint64_t)v13);
    unsigned __int8 v31 = v13[v9[6]];
  }
  sub_1ACC6D32C((uint64_t)v13);
  if (qword_1EB76E330 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_1ACC6BA34(qword_1EB76E328);
  swift_release();
  uint64_t v33 = v37;
  sub_1ACC6D388((uint64_t)v22, (uint64_t)v37);
  if (!v32)
  {
    uint64_t v32 = *(void *)&v33[v9[7]];
    swift_bridgeObjectRetain();
  }
  sub_1ACC6D32C((uint64_t)v33);
  uint64_t result = sub_1ACA7FAC4((uint64_t)v38, a2);
  *(unsigned char *)(a2 + v9[5]) = v36;
  *(unsigned char *)(a2 + v9[6]) = v31;
  *(void *)(a2 + v9[7]) = v32;
  return result;
}

uint64_t static FeedManagerBagConfiguration.getConfigurationOrLocalDefault(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v5 = self;
  swift_retain();
  id v6 = objc_msgSend(v5, sel_sharedInstance);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1ACC6C788;
  *(void *)(v7 + 24) = v4;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1ACC6D400;
  *(void *)(v8 + 24) = v7;
  void v11[4] = sub_1ACC6D3FC;
  id v11[5] = v8;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_1ACAA3910;
  _OWORD v11[3] = &block_descriptor_17_2;
  uint64_t v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_createSnapshotWithCompletion_, v9);
  _Block_release(v9);
  swift_release();

  return swift_release();
}

uint64_t sub_1ACC6C5AC(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E510);
  MEMORY[0x1F4188790](v4);
  id v6 = (void **)((char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for FeedManagerBagConfiguration();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v16 - v11;
  sub_1ACA3AAD4(a1, (uint64_t)v6, &qword_1EB76E510);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = *v6;
    v16[1] = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    swift_willThrowTypedImpl();

    if (qword_1EB76C738 != -1) {
      swift_once();
    }
    uint64_t v14 = __swift_project_value_buffer(v7, (uint64_t)qword_1EB785950);
    sub_1ACC6D2C8(v14, (uint64_t)v12);
  }
  else
  {
    sub_1ACC6D388((uint64_t)v6, (uint64_t)v9);
    sub_1ACC6D388((uint64_t)v9, (uint64_t)v12);
  }
  a2(v12);
  return sub_1ACC6D32C((uint64_t)v12);
}

uint64_t sub_1ACC6C788(uint64_t a1)
{
  return sub_1ACC6C5AC(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedManagerBagConfiguration(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1ACE74F28();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeedManagerBagConfiguration(uint64_t a1)
{
  uint64_t v2 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for FeedManagerBagConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v9] = a2[v9];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for FeedManagerBagConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  a1[a3[5]] = a2[a3[5]];
  a1[a3[6]] = a2[a3[6]];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for FeedManagerBagConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v9] = a2[v9];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *assignWithTake for FeedManagerBagConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v12] = a2[v12];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedManagerBagConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACC6CFD8);
}

uint64_t sub_1ACC6CFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for FeedManagerBagConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACC6D0B0);
}

uint64_t sub_1ACC6D0B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

void sub_1ACC6D170()
{
  sub_1ACBD7EC8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1ACC6D214()
{
  unint64_t v0 = (int *)type metadata accessor for FeedManagerBagConfiguration();
  __swift_allocate_value_buffer((uint64_t)v0, qword_1EB785950);
  uint64_t v1 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_1EB785950);
  uint64_t v2 = sub_1ACE74F28();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(unsigned char *)(v1 + v0[5]) = 1;
  *(unsigned char *)(v1 + v0[6]) = 1;
  *(void *)(v1 + v0[7]) = &unk_1F0380CE8;
  return result;
}

uint64_t sub_1ACC6D2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedManagerBagConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACC6D32C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedManagerBagConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ACC6D388(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedManagerBagConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACC6D404(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF77D8(*a1, *a2);
}

uint64_t sub_1ACC6D410()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC6D4B8()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC6D54C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC6D5F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACC6DC9C();
  *a1 = result;
  return result;
}

void sub_1ACC6D620(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE800000000000000;
  unint64_t v4 = 0xEC00000079726172;
  uint64_t v5 = 0x62694C6C61636F6CLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x7265666E69;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x495041616964656DLL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_1ACC6D684()
{
  qword_1E99F4318 = (uint64_t)&type metadata for MediaAPIProviderFactory;
  unk_1E99F4320 = &off_1F039DF30;
  qword_1E99F4350 = (uint64_t)&_s22MAPIRequestTransformerVN;
  unk_1E99F4358 = &off_1F038B930;
  qword_1E99F4360 = 1;
  qword_1E99F4328 = 5;
  byte_1E99F4330 = 1;
}

uint64_t static PodcastsMediaLibrary.Configuration.homepod.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACC6D79C(&qword_1E99F00A0, (uint64_t)&unk_1E99F4300, a1);
}

uint64_t sub_1ACC6D6F0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t PodcastsMediaLibrary.Configuration.continuousPlaybackUpNextLimit.getter()
{
  return *(void *)(v0 + 96);
}

void sub_1ACC6D730()
{
  qword_1E99F4380 = (uint64_t)&type metadata for DefaultProviderFactory;
  *(void *)algn_1E99F4388 = &off_1F039DF50;
  qword_1E99F43B8 = (uint64_t)&_s22MAPIRequestTransformerVN;
  unk_1E99F43C0 = &off_1F038B930;
  qword_1E99F43C8 = 1;
  qword_1E99F4390 = 40;
  byte_1E99F4398 = 0;
}

uint64_t static PodcastsMediaLibrary.Configuration.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACC6D79C(&qword_1E99F00A8, (uint64_t)&unk_1E99F4368, a1);
}

uint64_t sub_1ACC6D79C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  return sub_1ACC6D6F0(a2, a3);
}

uint64_t static PodcastsMediaLibrary.Configuration.platform.getter@<X0>(uint64_t a1@<X8>)
{
  if (objc_msgSend(self, sel_isRunningOnHomepod))
  {
    if (qword_1E99F00A0 != -1) {
      swift_once();
    }
    int v2 = &unk_1E99F4300;
  }
  else
  {
    if (qword_1E99F00A8 != -1) {
      swift_once();
    }
    int v2 = &unk_1E99F4368;
  }
  return sub_1ACC6D6F0((uint64_t)v2, a1);
}

uint64_t _s13ConfigurationVwxx(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  return __swift_destroy_boxed_opaque_existential_0(a1 + 56);
}

uint64_t _s13ConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 56, a2 + 56);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  return a1;
}

uint64_t _s13ConfigurationVwca(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s13ConfigurationVwta(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  __swift_destroy_boxed_opaque_existential_0(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  return a1;
}

uint64_t _s13ConfigurationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13ConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsMediaLibrary.Configuration()
{
  return &type metadata for PodcastsMediaLibrary.Configuration;
}

unsigned char *_s6SourceOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC6DC0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6SourceOMa()
{
  return &_s6SourceON;
}

unint64_t sub_1ACC6DC48()
{
  unint64_t result = qword_1E99F43D0;
  if (!qword_1E99F43D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F43D0);
  }
  return result;
}

uint64_t sub_1ACC6DC9C()
{
  unint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t MetricsSearchHintsFilter.rawValue.getter(uint64_t a1)
{
  return a1;
}

unint64_t MetricsSearchHintsFilter.debugDescription.getter()
{
  return 0xD000000000000024;
}

unint64_t sub_1ACC6DDC0()
{
  return MetricsSearchHintsFilter.debugDescription.getter();
}

uint64_t MetricsSearchHintsFilter.description.getter(uint64_t a1)
{
  return a1;
}

uint64_t MetricsSearchHintsFilter.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_1ACE77858();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsSearchHintsFilter.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE778D8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsSearchHintsFilter.applePodcasts.getter()
{
  return 0x646F50656C707041;
}

uint64_t static MetricsSearchHintsFilter.yourLibrary.getter()
{
  return 0x7262694C72756F59;
}

unint64_t sub_1ACC6DFA4()
{
  unint64_t result = qword_1E99F43D8;
  if (!qword_1E99F43D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F43D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsSearchHintsFilter()
{
  return &type metadata for MetricsSearchHintsFilter;
}

uint64_t EpisodeStateRepository.publisherForChanges(in:)(unsigned __int8 *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768D18);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768CE8);
  uint64_t v7 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768D28);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v22 = v10;
  uint64_t v23 = v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v20 = *a1;
  uint64_t v14 = *(void *)(*(void *)(v1
                              + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository_episodeStatePersistentHistoryTracker)
                  + 16);
  uint64_t v24 = *(void *)(v1 + 24);
  uint64_t v25 = v14;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768D88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768DA8);
  sub_1ACA51EA4(&qword_1EB768D80, &qword_1EB768D88);
  sub_1ACA51EA4(&qword_1EB768DA0, &qword_1EB768DA8);
  sub_1ACE756A8();
  *(unsigned char *)(swift_allocObject() + 16) = v20;
  sub_1ACA51EA4(&qword_1EB768D10, &qword_1EB768D18);
  sub_1ACE75B58();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1ACA51EA4(&qword_1EB768CE0, &qword_1EB768CE8);
  uint64_t v15 = v21;
  sub_1ACE75C08();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v15);
  sub_1ACA51EA4(&qword_1EB768D20, &qword_1EB768D28);
  uint64_t v16 = v22;
  uint64_t v17 = sub_1ACE75AD8();
  (*(void (**)(unsigned char *, uint64_t))(v23 + 8))(v13, v16);
  return v17;
}

void EpisodeStateRepository.enqueueEpisodeStateFetch(for:)(unint64_t a1, uint64_t a2, char a3)
{
  int v6 = a3 & 1;
  uint64_t v7 = sub_1ACE754C8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3 + 32);
  uint64_t v12 = *(void *)(v3 + 40);
  int v13 = *(unsigned __int8 *)(v3 + 48);
  if (v13 == 255) {
    goto LABEL_17;
  }
  if (v13)
  {
    if (v6)
    {
      if (v11 == a1 && v12 == a2 || (sub_1ACE77848() & 1) != 0) {
        goto LABEL_10;
      }
      uint64_t v11 = *(void *)(v3 + 32);
      uint64_t v12 = *(void *)(v3 + 40);
      LOBYTE(v13) = *(unsigned char *)(v3 + 48);
    }
LABEL_17:
    *(void *)(v3 + 32) = a1;
    *(void *)(v3 + 40) = a2;
    *(unsigned char *)(v3 + 48) = v6;
    sub_1ACC70240(v11, v12, v13);
    sub_1ACA72530(a1, a2, v6);
    uint64_t v24 = (void *)sub_1ACC70258(a1, a2, v6);
    uint64_t v25 = *(void **)(v3 + 16);
    uint64_t v26 = swift_allocObject();
    swift_weakInit();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v26;
    *(void *)(v27 + 24) = a1;
    *(void *)(v27 + 32) = a2;
    *(unsigned char *)(v27 + 40) = v6 != 0;
    *(void *)(v27 + 48) = v24;
    aBlock[4] = sub_1ACC703FC;
    void aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = &block_descriptor_49;
    id v28 = _Block_copy(aBlock);
    sub_1ACA72530(a1, a2, v6);
    id v29 = v24;
    swift_release();
    objc_msgSend(v25, sel_performBlock_, v28);
    _Block_release(v28);

    return;
  }
  if (v6 || v11 != a1) {
    goto LABEL_17;
  }
LABEL_10:
  if (qword_1E99EFFD8 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v7, (uint64_t)qword_1E99F2DE8);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v14, v7);
  sub_1ACA72530(a1, a2, v6);
  sub_1ACA72530(a1, a2, v6);
  uint64_t v15 = sub_1ACE75498();
  os_log_type_t v16 = sub_1ACE76BC8();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    os_log_t v32 = v15;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v31 = v19;
    *(_DWORD *)uint64_t v18 = 136380675;
    uint64_t v36 = v19;
    v30[1] = v18 + 4;
    uint64_t v33 = a1;
    uint64_t v34 = a2;
    BOOL v35 = v6 != 0;
    sub_1ACA72530(a1, a2, v6);
    uint64_t v20 = sub_1ACE76228();
    uint64_t v33 = sub_1ACA3189C(v20, v21, &v36);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACA91B68(a1, a2, v6);
    sub_1ACA91B68(a1, a2, v6);
    os_log_t v22 = v32;
    _os_log_impl(&dword_1AC9D5000, v32, v16, "Skip refetch for id: %{private}s", v18, 0xCu);
    uint64_t v23 = v31;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v23, -1, -1);
    MEMORY[0x1AD11B340](v18, -1, -1);
  }
  else
  {
    sub_1ACA91B68(a1, a2, v6);
    sub_1ACA91B68(a1, a2, v6);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1ACC6E85C()
{
  type metadata accessor for EpisodeStatePersistentHistoryTracker();
  swift_allocObject();
  unint64_t v0 = EpisodeStatePersistentHistoryTracker.init()();
  type metadata accessor for EpisodeStateRepository();
  uint64_t v1 = swift_allocObject();
  id v2 = objc_msgSend(self, sel_sharedInstance);
  id v3 = objc_msgSend(v2, sel_storeContext);

  *(void *)(v1 + 16) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768DA8);
  swift_allocObject();
  uint64_t v4 = sub_1ACE758B8();
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 24) = v4;
  *(unsigned char *)(v1 + 48) = -1;
  uint64_t v5 = v1 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository____lazy_storage___signpostID;
  uint64_t v6 = sub_1ACE753F8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(void *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository_episodeStatePersistentHistoryTracker) = v0;
  qword_1EB76C098 = v1;
  return result;
}

uint64_t EpisodeStateRepository.__allocating_init(episodeStatePersistentHistoryTracker:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  id v3 = objc_msgSend(self, sel_sharedInstance);
  id v4 = objc_msgSend(v3, sel_storeContext);

  *(void *)(v2 + 16) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768DA8);
  swift_allocObject();
  uint64_t v5 = sub_1ACE758B8();
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 24) = v5;
  *(unsigned char *)(v2 + 48) = -1;
  uint64_t v6 = v2 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository____lazy_storage___signpostID;
  uint64_t v7 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository_episodeStatePersistentHistoryTracker) = a1;
  return v2;
}

uint64_t static EpisodeStateRepository.shared.getter()
{
  if (qword_1EB76C0A0 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_1ACC6EAF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7726E8);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = v1 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository____lazy_storage___signpostID;
  swift_beginAccess();
  sub_1ACA2EDE8(v9, (uint64_t)v8);
  uint64_t v10 = sub_1ACE753F8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_1ACA2EE50((uint64_t)v8);
  if (qword_1EB768FB0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v12 = (id)qword_1EB768FA8;
  swift_retain();
  sub_1ACE753B8();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_1ACABEA08((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t EpisodeStateRepository.init(episodeStatePersistentHistoryTracker:)(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(self, sel_sharedInstance);
  id v5 = objc_msgSend(v4, sel_storeContext);

  *(void *)(v2 + 16) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768DA8);
  swift_allocObject();
  uint64_t v6 = sub_1ACE758B8();
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 24) = v6;
  *(unsigned char *)(v2 + 48) = -1;
  uint64_t v7 = v2 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository____lazy_storage___signpostID;
  uint64_t v8 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository_episodeStatePersistentHistoryTracker) = a1;
  return v2;
}

uint64_t EpisodeStateRepository.deinit()
{
  swift_release();
  sub_1ACC70240(*(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  sub_1ACA2EE50(v0 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository____lazy_storage___signpostID);
  swift_release();
  return v0;
}

uint64_t EpisodeStateRepository.__deallocating_deinit()
{
  swift_release();
  sub_1ACC70240(*(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  sub_1ACA2EE50(v0 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository____lazy_storage___signpostID);
  swift_release();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall EpisodeStateRepository.startObservingChanges()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository_episodeStatePersistentHistoryTracker);
  uint64_t v2 = *(NSObject **)(v1 + 24);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1ACC70410;
  *(void *)(v3 + 24) = v1;
  void v5[4] = sub_1ACADC690;
  uint64_t v5[5] = v3;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 1107296256;
  _OWORD v5[2] = sub_1ACC525DC;
  v5[3] = &block_descriptor_12_1;
  id v4 = _Block_copy(v5);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v2, v4);
  _Block_release(v4);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v2) {
    __break(1u);
  }
}

uint64_t sub_1ACC6F048@<X0>(uint64_t *a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[2];
  v9[16] = a2;
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1ACD81834(v6, (uint64_t (*)(uint64_t *, uint64_t))sub_1ACC70560, (uint64_t)v9);
  swift_bridgeObjectRelease();
  *a3 = v4;
  a3[1] = v7;
  a3[2] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACC6F0D8()
{
  return swift_deallocObject();
}

uint64_t sub_1ACC6F0E8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1ACC6F048(a1, *(unsigned char *)(v2 + 16), a2);
}

BOOL sub_1ACC6F0F0(void *a1)
{
  if (*(void *)(*a1 + 16)) {
    return 1;
  }
  if (*(void *)(a1[1] + 16)) {
    return 1;
  }
  return *(void *)(a1[2] + 16) != 0;
}

uint64_t sub_1ACC6F12C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5)
{
  unint64_t v121 = a5;
  int v123 = a4;
  *(void *)&long long v122 = sub_1ACE754C8();
  uint64_t v7 = *(void *)(v122 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v122);
  uint64_t v120 = (char *)v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  id v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)v107 - v11);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v107 - v13;
  uint64_t v15 = sub_1ACE753F8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v20 = result;
  id v113 = v14;
  uint64_t v112 = v12;
  *(void *)&long long v115 = v7;
  uint64_t v117 = v15;
  sub_1ACE76E18();
  if (qword_1EB768FB0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v21 = (id)qword_1EB768FA8;
  sub_1ACC6EAF4((uint64_t)v18);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v23 = swift_allocObject();
  long long v114 = xmmword_1ACE843F0;
  *(_OWORD *)(v23 + 16) = xmmword_1ACE843F0;
  uint64_t v124 = a2;
  unint64_t v125 = a3;
  LOBYTE(v126) = v123 & 1;
  uint64_t v24 = a2;
  *(void *)&long long v119 = a3;
  sub_1ACA72530(a2, a3, v123 & 1);
  uint64_t v25 = sub_1ACE76228();
  uint64_t v118 = v18;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v29 = sub_1ACADC3A8();
  *(void *)(v23 + 64) = v29;
  *(void *)(v23 + 32) = v26;
  *(void *)(v23 + 40) = v28;
  uint64_t v30 = (uint64_t)v118;
  sub_1ACE75398();

  swift_bridgeObjectRelease();
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  uint64_t v32 = v117;
  v31(v30, v117);
  uint64_t v116 = v20;
  uint64_t v33 = *(void **)(v20 + 16);
  sub_1ACA6DC4C();
  id v34 = v33;
  unint64_t v35 = sub_1ACE76EE8();
  uint64_t v120 = (char *)v22;
  unint64_t v121 = v29;

  if (v35 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v37 = v119;
  uint64_t v38 = v24;
  uint64_t v111 = v16 + 8;
  if (!v36)
  {
    uint64_t v112 = (uint64_t (*)(uint64_t, uint64_t))v31;
    swift_bridgeObjectRelease();
    if (qword_1E99EFFD8 == -1)
    {
LABEL_13:
      uint64_t v63 = v122;
      uint64_t v64 = __swift_project_value_buffer(v122, (uint64_t)qword_1E99F2DE8);
      swift_beginAccess();
      uint64_t v65 = v115;
      id v66 = v113;
      (*(void (**)(id, uint64_t, uint64_t))(v115 + 16))(v113, v64, v63);
      char v67 = v123 & 1;
      sub_1ACA72530(v38, v37, v123 & 1);
      sub_1ACA72530(v38, v37, v67);
      uint64_t v68 = sub_1ACE75498();
      uint64_t v69 = v38;
      os_log_type_t v70 = sub_1ACE76BE8();
      if (os_log_type_enabled(v68, v70))
      {
        uint64_t v71 = (uint8_t *)swift_slowAlloc();
        uint64_t v72 = swift_slowAlloc();
        *(_DWORD *)uint64_t v71 = 136380675;
        uint64_t v137 = v72;
        uint64_t v109 = (uint64_t)(v71 + 4);
        uint64_t v134 = v69;
        uint64_t v135 = v119;
        char v136 = v67;
        sub_1ACA72530(v69, v119, v67);
        uint64_t v73 = sub_1ACE76228();
        uint64_t v134 = sub_1ACA3189C(v73, v74, &v137);
        sub_1ACE76FF8();
        uint64_t v32 = v117;
        swift_bridgeObjectRelease();
        sub_1ACA91B68(v69, v119, v67);
        sub_1ACA91B68(v69, v119, v67);
        _os_log_impl(&dword_1AC9D5000, v68, v70, "Can't fetch any episode for identifier: %{private}s", v71, 0xCu);
        swift_arrayDestroy();
        uint64_t v75 = v72;
        uint64_t v37 = v119;
        MEMORY[0x1AD11B340](v75, -1, -1);
        MEMORY[0x1AD11B340](v71, -1, -1);

        (*(void (**)(id, uint64_t))(v115 + 8))(v66, v63);
      }
      else
      {
        sub_1ACA91B68(v69, v37, v67);
        sub_1ACA91B68(v69, v37, v67);

        (*(void (**)(id, uint64_t))(v65 + 8))(v66, v63);
      }
      uint64_t v92 = MEMORY[0x1E4FBB1A0];
      sub_1ACE76E08();
      id v93 = (id)qword_1EB768FA8;
      uint64_t v94 = (uint64_t)v118;
      sub_1ACC6EAF4((uint64_t)v118);
      uint64_t v95 = swift_allocObject();
      *(_OWORD *)(v95 + 16) = v114;
      uint64_t v134 = v69;
      uint64_t v135 = v37;
      char v136 = v123 & 1;
      sub_1ACA72530(v69, v37, v123 & 1);
      uint64_t v96 = sub_1ACE76228();
      unint64_t v97 = v121;
      *(void *)(v95 + 56) = v92;
      *(void *)(v95 + 64) = v97;
      *(void *)(v95 + 32) = v96;
      *(void *)(v95 + 40) = v98;
      sub_1ACE75398();
      swift_release();

      swift_bridgeObjectRelease();
      return v112(v94, v32);
    }
LABEL_27:
    swift_once();
    goto LABEL_13;
  }
  if ((v35 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v39 = *(id *)(v35 + 32);
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_27;
  }
  id v39 = (id)MEMORY[0x1AD119490](0, v35);
LABEL_10:
  uint64_t v40 = v39;
  swift_bridgeObjectRelease();
  id v41 = v40;
  uint64_t v42 = MTEpisode.allEpisodeStateIdentifiers.getter();
  sub_1ACD7F9A8(v41, v42, (uint64_t)&v124);
  uint64_t v43 = v124;
  uint64_t v110 = v24;
  if (v124)
  {
    __int16 v44 = v132;
    char v45 = v133;
    uint64_t v112 = (uint64_t (*)(uint64_t, uint64_t))v31;
    uint64_t v46 = v131;
    long long v122 = v130;
    long long v119 = v129;
    char v47 = v128;
    uint64_t v48 = v127;
    long long v115 = v126;
    uint64_t v49 = v37;
    unint64_t v50 = v125;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769130);
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = v114;
    *(void *)(v51 + 32) = v43;
    uint64x2_t v52 = (uint64x2_t)vdupq_n_s64(v50);
    *(unsigned char *)(v51 + 40) = v50 & 1;
    int16x8_t v53 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v52, (uint64x2_t)xmmword_1ACE85700), (int32x4_t)vshlq_u64(v52, (uint64x2_t)xmmword_1ACE856F0));
    *(int8x8_t *)v53.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v53), (int8x8_t)0x1000100010001);
    *(_DWORD *)(v51 + 41) = vmovn_s16(v53).u32[0];
    *(unsigned char *)(v51 + 45) = BYTE5(v50) & 1;
    *(_OWORD *)(v51 + 48) = v115;
    *(void *)(v51 + 64) = v48;
    *(unsigned char *)(v51 + 72) = v47 & 1;
    long long v54 = v122;
    *(_OWORD *)(v51 + 80) = v119;
    *(_OWORD *)(v51 + 96) = v54;
    *(void *)(v51 + 112) = v46;
    *(unsigned char *)(v51 + 122) = v45;
    *(_WORD *)(v51 + 120) = v44;
    uint64_t v55 = MEMORY[0x1E4FBC860];
    unint64_t v56 = sub_1ACA37924(MEMORY[0x1E4FBC860]);
    uint64_t v124 = v51;
    unint64_t v125 = v56;
    *(void *)&long long v126 = v55;
    swift_retain();
    sub_1ACE75898();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1ACE76E08();
    id v57 = (id)qword_1EB768FA8;
    uint64_t v58 = (uint64_t)v118;
    sub_1ACC6EAF4((uint64_t)v118);
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = v114;
    uint64_t v124 = v110;
    unint64_t v125 = v49;
    LOBYTE(v126) = v123 & 1;
    sub_1ACA72530(v110, v49, v123 & 1);
    uint64_t v60 = sub_1ACE76228();
    unint64_t v61 = v121;
    *(void *)(v59 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v59 + 64) = v61;
    *(void *)(v59 + 32) = v60;
    *(void *)(v59 + 40) = v62;
    sub_1ACE75398();

    swift_release();
    swift_bridgeObjectRelease();
    return v112(v58, v117);
  }
  else
  {
    if (qword_1E99EFFD8 != -1) {
      swift_once();
    }
    uint64_t v76 = v122;
    uint64_t v77 = __swift_project_value_buffer(v122, (uint64_t)qword_1E99F2DE8);
    swift_beginAccess();
    uint64_t v78 = v115;
    uint64_t v79 = v112;
    (*(void (**)(uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t))(v115 + 16))(v112, v77, v76);
    id v113 = v41;
    uint64_t v80 = sub_1ACE75498();
    os_log_type_t v81 = sub_1ACE76BE8();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v82 = (uint8_t *)swift_slowAlloc();
      uint64_t v109 = swift_slowAlloc();
      uint64_t v134 = v109;
      uint64_t v108 = v82;
      *(_DWORD *)uint64_t v82 = 136380675;
      v107[1] = v82 + 4;
      id v83 = v113;
      id v84 = objc_msgSend(v83, sel_description);
      uint64_t v85 = sub_1ACE761B8();
      unint64_t v87 = v86;

      uint64_t v88 = v85;
      uint64_t v32 = v117;
      uint64_t v137 = sub_1ACA3189C(v88, v87, &v134);
      sub_1ACE76FF8();

      uint64_t v37 = v119;
      swift_bridgeObjectRelease();
      os_log_type_t v89 = v81;
      uint64_t v90 = v108;
      _os_log_impl(&dword_1AC9D5000, v80, v89, "Can't create an EpisodeStateModel for MTEpisode: %{private}s", v108, 0xCu);
      uint64_t v91 = v109;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v91, -1, -1);
      MEMORY[0x1AD11B340](v90, -1, -1);

      (*(void (**)(uint64_t (*)(uint64_t, uint64_t), void))(v78 + 8))(v79, v122);
    }
    else
    {

      id v99 = v113;
      (*(void (**)(uint64_t (*)(uint64_t, uint64_t), uint64_t))(v78 + 8))(v79, v76);
    }
    uint64_t v100 = MEMORY[0x1E4FBB1A0];
    sub_1ACE76E08();
    id v101 = (id)qword_1EB768FA8;
    uint64_t v102 = (uint64_t)v118;
    sub_1ACC6EAF4((uint64_t)v118);
    uint64_t v103 = swift_allocObject();
    *(_OWORD *)(v103 + 16) = v114;
    uint64_t v134 = v110;
    uint64_t v135 = v37;
    char v136 = v123 & 1;
    sub_1ACA72530(v110, v37, v123 & 1);
    uint64_t v104 = sub_1ACE76228();
    unint64_t v105 = v121;
    *(void *)(v103 + 56) = v100;
    *(void *)(v103 + 64) = v105;
    *(void *)(v103 + 32) = v104;
    *(void *)(v103 + 40) = v106;
    sub_1ACE75398();

    swift_release();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t, uint64_t))v31)(v102, v32);
  }
}

uint64_t sub_1ACC70240(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1ACA91B68(result, a2, a3 & 1);
  }
  return result;
}

unint64_t sub_1ACC70258(unint64_t result, uint64_t a2, char a3)
{
  if (a3)
  {
    uint64_t v4 = self;
    uint64_t v5 = (void *)sub_1ACE76178();
    id v3 = objc_msgSend(v4, sel_predicateForEpisodeUuid_, v5);

    goto LABEL_5;
  }
  if ((result & 0x8000000000000000) == 0)
  {
    id v3 = objc_msgSend(self, sel_predicateForEpisodeStoreTrackId_, result);
LABEL_5:
    sub_1ACE761B8();
    id v6 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
    uint64_t v7 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

    objc_msgSend(v8, sel_setPredicate_, v3);
    return (unint64_t)v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACC70378()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACC703B0()
{
  swift_release();
  sub_1ACA91B68(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return swift_deallocObject();
}

uint64_t sub_1ACC703FC()
{
  return sub_1ACC6F12C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1ACC70410()
{
  return sub_1ACC7A848(v0);
}

uint64_t sub_1ACC70418()
{
  return swift_deallocObject();
}

uint64_t sub_1ACC70428()
{
  return type metadata accessor for EpisodeStateRepository();
}

uint64_t type metadata accessor for EpisodeStateRepository()
{
  uint64_t result = qword_1EB767CA8;
  if (!qword_1EB767CA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1ACC7047C()
{
  sub_1ACABE9B0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for EpisodeStateRepository(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EpisodeStateRepository);
}

uint64_t dispatch thunk of EpisodeStateRepository.__allocating_init(episodeStatePersistentHistoryTracker:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

BOOL sub_1ACC70560(uint64_t a1, uint64_t a2)
{
  return sub_1ACD7F6F0(a1, a2);
}

void sub_1ACC70568(uint64_t *a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  long long v54 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64x2_t v52 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v53 = (uint64_t)&v49 - v8;
  uint64_t v9 = *a1;
  unint64_t v10 = a1[1];
  unint64_t v11 = a1[3];
  uint64_t v49 = a1[2];
  uint64_t v58 = MEMORY[0x1E4FBC860];
  if (a2 >> 62) {
    goto LABEL_16;
  }
  uint64_t v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12)
  {
    while (1)
    {
      unint64_t v50 = v11;
      unint64_t v51 = v10;
      unint64_t v10 = 0;
      *(void *)&long long v55 = v9;
      while ((a2 & 0xC000000000000001) != 0)
      {
        uint64_t v13 = (char *)MEMORY[0x1AD119490](v10, a2);
LABEL_9:
        unint64_t v11 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_15;
        }
        if (*(void *)&v13[OBJC_IVAR___MTContentKeyRequest_requestID] == v9)
        {
          sub_1ACE773A8();
          sub_1ACE773E8();
          sub_1ACE773F8();
          sub_1ACE773B8();
          uint64_t v9 = v55;
        }
        else
        {
        }
        ++v10;
        if (v11 == v12)
        {
          uint64_t v14 = v58;
          unint64_t v11 = v50;
          unint64_t v10 = v51;
          goto LABEL_18;
        }
      }
      if (v10 < *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_1ACE77508();
      if (!v12) {
        goto LABEL_17;
      }
    }
    uint64_t v13 = (char *)*(id *)(a2 + 8 * v10 + 32);
    goto LABEL_9;
  }
LABEL_17:
  uint64_t v14 = MEMORY[0x1E4FBC860];
LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 0x8000000000000000) == 0 && (v14 & 0x4000000000000000) == 0)
  {
    if (*(void *)(v14 + 16)) {
      goto LABEL_21;
    }
LABEL_30:
    swift_release();
    uint64_t v16 = 0;
    if (v10) {
      goto LABEL_25;
    }
    goto LABEL_31;
  }
  if (!sub_1ACE77508()) {
    goto LABEL_30;
  }
LABEL_21:
  if ((v14 & 0xC000000000000001) != 0)
  {
    id v15 = (id)MEMORY[0x1AD119490](0, v14);
LABEL_24:
    uint64_t v16 = v15;
    swift_release();
    if (v10)
    {
LABEL_25:
      uint64_t v17 = sub_1ACE750A8();
      uint64_t v18 = (uint64_t)v52;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v52, 1, 1, v17);
      uint64_t v19 = sub_1ACBAEFA8(v10);
      if (v20) {
        uint64_t v21 = -1;
      }
      else {
        uint64_t v21 = v19;
      }
      id v22 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
      uint64_t v23 = (void *)sub_1ACE76178();
      id v24 = objc_msgSend(v22, sel_initWithDomain_code_userInfo_, v23, v21, 0, v49);

      uint64_t v25 = (objc_class *)type metadata accessor for ContentKeyResponse(0);
      uint64_t v26 = (char *)objc_allocWithZone(v25);
      uint64_t v27 = (void **)&v26[OBJC_IVAR___MTContentKeyResponse_error];
      *(void *)&v26[OBJC_IVAR___MTContentKeyResponse_error] = 0;
      uint64_t v28 = (uint64_t *)&v26[OBJC_IVAR___MTContentKeyResponse_keyData];
      long long v55 = xmmword_1ACE91EF0;
      *(_OWORD *)&v26[OBJC_IVAR___MTContentKeyResponse_keyData] = xmmword_1ACE91EF0;
      *(void *)&v26[OBJC_IVAR___MTContentKeyResponse_request] = v16;
      swift_beginAccess();
      uint64_t v29 = *v28;
      unint64_t v30 = v28[1];
      *(_OWORD *)uint64_t v28 = v55;
      id v31 = v16;
      uint64_t v32 = v26;
      sub_1ACAB2EF0(v29, v30);
      sub_1ACA72A5C(v18, (uint64_t)&v32[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
      swift_beginAccess();
      uint64_t v33 = *v27;
      *uint64_t v27 = v24;
      id v34 = v24;

      v57.receiver = v32;
      v57.super_class = v25;
      id v35 = objc_msgSendSuper2(&v57, sel_init);
      sub_1ACA3E034(v18);

LABEL_35:
      void *v54 = v35;
      return;
    }
LABEL_31:
    if (v11)
    {
      *(void *)&long long v55 = sub_1ACE74F48();
      uint64x2_t v52 = v36;
    }
    else
    {
      *(void *)&long long v55 = 0;
      uint64x2_t v52 = (char *)0xF000000000000000;
    }
    uint64_t v37 = sub_1ACE750A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v53, 1, 1, v37);
    uint64_t v38 = (objc_class *)type metadata accessor for ContentKeyResponse(0);
    id v39 = (char *)objc_allocWithZone(v38);
    uint64_t v40 = (void **)&v39[OBJC_IVAR___MTContentKeyResponse_error];
    *(void *)&v39[OBJC_IVAR___MTContentKeyResponse_error] = 0;
    id v41 = (uint64_t *)&v39[OBJC_IVAR___MTContentKeyResponse_keyData];
    *(_OWORD *)&v39[OBJC_IVAR___MTContentKeyResponse_keyData] = xmmword_1ACE91EF0;
    *(void *)&v39[OBJC_IVAR___MTContentKeyResponse_request] = v16;
    swift_beginAccess();
    uint64_t v42 = *v41;
    unint64_t v43 = v41[1];
    uint64_t v44 = v55;
    unint64_t v45 = (unint64_t)v52;
    *id v41 = v55;
    v41[1] = v45;
    id v24 = v16;
    uint64_t v46 = v39;
    sub_1ACA39848(v44, v45);
    sub_1ACAB2EF0(v42, v43);
    uint64_t v47 = v53;
    sub_1ACA72A5C(v53, (uint64_t)&v46[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
    swift_beginAccess();
    uint64_t v48 = *v40;
    void *v40 = 0;

    v56.receiver = v46;
    v56.super_class = v38;
    id v35 = objc_msgSendSuper2(&v56, sel_init, v49);
    sub_1ACA3E034(v47);
    sub_1ACAB2EF0(v44, v45);
    goto LABEL_35;
  }
  if (*(void *)(v14 + 16))
  {
    id v15 = *(id *)(v14 + 32);
    goto LABEL_24;
  }
  __break(1u);
}

void sub_1ACC70B2C(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_1ACE754C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *a1;
  if (qword_1EB768FD8 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB768FB8);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  uint64_t v12 = sub_1ACE75498();
  os_log_type_t v13 = sub_1ACE76BE8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = a2;
    uint64_t v16 = v10;
    uint64_t v17 = a3;
    uint64_t v18 = v14;
    *(_DWORD *)uint64_t v14 = 134217984;
    v26[5] = v15;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v12, v13, "[Decoding Key Response] Request Type %ld. Missing license responses", v18, 0xCu);
    uint64_t v19 = v18;
    a3 = v17;
    unint64_t v10 = v16;
    MEMORY[0x1AD11B340](v19, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1ACBAFDEC();
  char v20 = (void *)swift_allocError();
  *uint64_t v21 = 1;
  id v22 = objc_allocWithZone((Class)type metadata accessor for ContentKeyResponse(0));
  id v23 = v10;
  id v24 = (void *)sub_1ACE74D68();
  id v25 = objc_msgSend(v22, sel_initWithRequest_keyData_renewalDate_error_, v23, 0, 0, v24);

  *a3 = v25;
}

void sub_1ACC70DB8(uint64_t *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v85 = a3;
  os_log_type_t v89 = a4;
  unint64_t v7 = sub_1ACE754C8();
  uint64_t v90 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v91 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v84 = (char *)&v78 - v10;
  uint64_t v11 = sub_1ACE750A8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v79 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  unint64_t v87 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v86 = (uint64_t)&v78 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v92 = (uint64_t)&v78 - v19;
  uint64_t v20 = *a1;
  uint64_t v93 = a1[1];
  LODWORD(v21) = *((unsigned __int8 *)a1 + 24);
  uint64_t v22 = a1[5];
  uint64_t v80 = a1[4];
  uint64_t v100 = MEMORY[0x1E4FBC860];
  uint64_t v94 = v22;
  if (a2 >> 62) {
    goto LABEL_33;
  }
  uint64_t v23 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_3:
  uint64_t v88 = v11;
  if (v23)
  {
    int v81 = v21;
    uint64_t v82 = v12;
    unint64_t v83 = v7;
    unint64_t v7 = 0;
    unint64_t v21 = a2 & 0xC000000000000001;
    uint64_t v12 = a2 & 0xFFFFFFFFFFFFFF8;
    uint64_t v96 = a2 & 0xFFFFFFFFFFFFFF8;
    *(void *)&long long v95 = a2 & 0xC000000000000001;
    while (1)
    {
      if (v21)
      {
        id v24 = (char *)MEMORY[0x1AD119490](v7, a2);
      }
      else
      {
        if (v7 >= *(void *)(v12 + 16))
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v23 = sub_1ACE77508();
          goto LABEL_3;
        }
        id v24 = (char *)*(id *)(a2 + 8 * v7 + 32);
      }
      uint64_t v11 = (uint64_t)v24;
      id v4 = (id)(v7 + 1);
      if (__OFADD__(v7, 1)) {
        goto LABEL_32;
      }
      if (*(void *)&v24[OBJC_IVAR___MTContentKeyRequest_requestID] == v20)
      {
        sub_1ACE773A8();
        sub_1ACE773E8();
        sub_1ACE773F8();
        sub_1ACE773B8();
        unint64_t v21 = v95;
        uint64_t v12 = v96;
      }
      else
      {
      }
      ++v7;
      if (v4 == (id)v23)
      {
        uint64_t v25 = v100;
        unint64_t v7 = v83;
        uint64_t v11 = v88;
        uint64_t v12 = v82;
        LOBYTE(v21) = v81;
        goto LABEL_16;
      }
    }
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = v90;
  if ((v25 & 0x8000000000000000) == 0 && (v25 & 0x4000000000000000) == 0)
  {
    if (*(void *)(v25 + 16)) {
      goto LABEL_19;
    }
LABEL_35:
    swift_release();
    id v4 = 0;
    uint64_t v28 = v94;
    if (v93) {
      goto LABEL_23;
    }
    goto LABEL_36;
  }
  if (!sub_1ACE77508()) {
    goto LABEL_35;
  }
LABEL_19:
  if ((v25 & 0xC000000000000001) != 0)
  {
    id v27 = (id)MEMORY[0x1AD119490](0, v25);
  }
  else
  {
    if (!*(void *)(v25 + 16))
    {
      __break(1u);
      goto LABEL_52;
    }
    id v27 = *(id *)(v25 + 32);
  }
  id v4 = v27;
  swift_release();
  uint64_t v28 = v94;
  if (v93)
  {
LABEL_23:
    if (qword_1EB768FD8 == -1)
    {
LABEL_24:
      uint64_t v96 = (uint64_t)v4;
      uint64_t v29 = __swift_project_value_buffer(v7, (uint64_t)qword_1EB768FB8);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, unint64_t))(v26 + 16))(v91, v29, v7);
      swift_bridgeObjectRetain();
      unint64_t v30 = sub_1ACE75498();
      os_log_type_t v31 = sub_1ACE76BE8();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        *(_DWORD *)uint64_t v32 = 134218240;
        uint64_t v99 = v85;
        sub_1ACE76FF8();
        *(_WORD *)(v32 + 12) = 2048;
        uint64_t v33 = v93;
        uint64_t v99 = v93;
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v30, v31, "[Decoding Key Response] Request Type %ld. Response Status %ld", (uint8_t *)v32, 0x16u);
        uint64_t v34 = v32;
        uint64_t v11 = v88;
        MEMORY[0x1AD11B340](v34, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease();
        uint64_t v33 = v93;
      }
      (*(void (**)(char *, unint64_t))(v26 + 8))(v91, v7);
      uint64_t v35 = (uint64_t)v87;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v87, 1, 1, v11);
      uint64_t v36 = sub_1ACBAEFA8(v33);
      if (v37) {
        uint64_t v38 = -1;
      }
      else {
        uint64_t v38 = v36;
      }
      id v39 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
      uint64_t v40 = (void *)sub_1ACE76178();
      id v41 = objc_msgSend(v39, sel_initWithDomain_code_userInfo_, v40, v38, 0);

      uint64_t v42 = (objc_class *)type metadata accessor for ContentKeyResponse(0);
      unint64_t v43 = (char *)objc_allocWithZone(v42);
      uint64_t v44 = (void **)&v43[OBJC_IVAR___MTContentKeyResponse_error];
      *(void *)&v43[OBJC_IVAR___MTContentKeyResponse_error] = 0;
      unint64_t v45 = (uint64_t *)&v43[OBJC_IVAR___MTContentKeyResponse_keyData];
      long long v95 = xmmword_1ACE91EF0;
      *(_OWORD *)&v43[OBJC_IVAR___MTContentKeyResponse_keyData] = xmmword_1ACE91EF0;
      uint64_t v46 = (void *)v96;
      *(void *)&v43[OBJC_IVAR___MTContentKeyResponse_request] = v96;
      swift_beginAccess();
      uint64_t v47 = *v45;
      unint64_t v48 = v45[1];
      *(_OWORD *)unint64_t v45 = v95;
      id v49 = v46;
      unint64_t v50 = v43;
      sub_1ACAB2EF0(v47, v48);
      sub_1ACA72A5C(v35, (uint64_t)&v50[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
      swift_beginAccess();
      unint64_t v51 = *v44;
      void *v44 = v41;
      id v52 = v41;

      v98.receiver = v50;
      v98.super_class = v42;
      id v53 = objc_msgSendSuper2(&v98, sel_init);
      sub_1ACA3E034(v35);

      goto LABEL_49;
    }
LABEL_52:
    swift_once();
    goto LABEL_24;
  }
LABEL_36:
  if (v28)
  {
    uint64_t v96 = sub_1ACE74F48();
    *(void *)&long long v95 = v54;
  }
  else
  {
    uint64_t v96 = 0;
    *(void *)&long long v95 = 0xF000000000000000;
  }
  long long v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v55(v92, 1, 1, v11);
  if (v4) {
    char v56 = v21;
  }
  else {
    char v56 = 1;
  }
  if ((v56 & 1) == 0)
  {
    objc_super v57 = v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v79, (uint64_t)v4 + OBJC_IVAR___MTContentKeyRequest_requestDate, v11);
    uint64_t v58 = v86;
    sub_1ACE75038();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v57, v11);
    uint64_t v59 = v92;
    sub_1ACA3E034(v92);
    v55(v58, 0, 1, v11);
    sub_1ACA909B4(v58, v59);
  }
  if (qword_1EB768FD8 != -1) {
    swift_once();
  }
  uint64_t v60 = __swift_project_value_buffer(v7, (uint64_t)qword_1EB768FB8);
  swift_beginAccess();
  unint64_t v61 = v84;
  (*(void (**)(char *, uint64_t, unint64_t))(v26 + 16))(v84, v60, v7);
  uint64_t v62 = sub_1ACE75498();
  os_log_type_t v63 = sub_1ACE76C08();
  if (os_log_type_enabled(v62, v63))
  {
    uint64_t v64 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v64 = 134217984;
    uint64_t v99 = v85;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v62, v63, "[Decoding Key Response] Request Type %ld. Got key data.", v64, 0xCu);
    MEMORY[0x1AD11B340](v64, -1, -1);
  }

  (*(void (**)(char *, unint64_t))(v26 + 8))(v61, v7);
  uint64_t v65 = v86;
  sub_1ACA72A5C(v92, v86);
  id v66 = (objc_class *)type metadata accessor for ContentKeyResponse(0);
  char v67 = (char *)objc_allocWithZone(v66);
  uint64_t v68 = (void **)&v67[OBJC_IVAR___MTContentKeyResponse_error];
  *(void *)&v67[OBJC_IVAR___MTContentKeyResponse_error] = 0;
  uint64_t v69 = (uint64_t *)&v67[OBJC_IVAR___MTContentKeyResponse_keyData];
  *(_OWORD *)&v67[OBJC_IVAR___MTContentKeyResponse_keyData] = xmmword_1ACE91EF0;
  *(void *)&v67[OBJC_IVAR___MTContentKeyResponse_request] = v4;
  swift_beginAccess();
  uint64_t v70 = *v69;
  unint64_t v71 = v69[1];
  uint64_t v72 = v96;
  uint64_t v73 = v4;
  unint64_t v74 = v95;
  *uint64_t v69 = v96;
  v69[1] = v74;
  id v75 = v73;
  uint64_t v76 = v67;
  sub_1ACA39848(v72, v74);
  sub_1ACAB2EF0(v70, v71);
  sub_1ACA72A5C(v65, (uint64_t)&v76[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
  swift_beginAccess();
  uint64_t v77 = *v68;
  *uint64_t v68 = 0;

  v97.receiver = v76;
  v97.super_class = v66;
  id v53 = objc_msgSendSuper2(&v97, sel_init);
  sub_1ACA3E034(v65);
  sub_1ACAB2EF0(v72, v74);

  sub_1ACA3E034(v92);
LABEL_49:
  void *v89 = v53;
}

uint64_t type metadata accessor for StandardKeyRequestDecoder()
{
  return self;
}

uint64_t sub_1ACC718C4(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1ACE773D8();
    unint64_t v7 = (uint64_t *)(a1 + 56);
    while (1)
    {
      uint64_t v8 = *(v7 - 1);
      uint64_t v9 = *v7;
      long long v10 = *(_OWORD *)(v7 - 3);
      uint64_t v11 = v8;
      uint64_t v12 = v9;
      swift_bridgeObjectRetain();
      sub_1ACC70568((uint64_t *)&v10, a2, &v13);
      swift_bridgeObjectRelease();
      if (v2) {
        break;
      }
      v7 += 4;
      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
      if (!--v4) {
        return v14;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACC719C8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1ACE773D8();
    for (uint64_t i = (char *)(a1 + 89); ; i += 64)
    {
      uint64_t v10 = *(void *)(i - 41);
      char v11 = *(i - 33);
      uint64_t v12 = *(void *)(i - 25);
      char v13 = *(i - 1);
      char v14 = *i;
      long long v15 = *(_OWORD *)(i - 57);
      uint64_t v16 = v10;
      char v17 = v11;
      uint64_t v18 = v12;
      long long v19 = *(_OWORD *)(i - 17);
      char v20 = v13;
      char v21 = v14;
      swift_bridgeObjectRetain();
      sub_1ACC70DB8((uint64_t *)&v15, a2, a3, &v22);
      swift_bridgeObjectRelease();
      if (v3) {
        break;
      }
      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
      if (!--v5) {
        return v23;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACC71B00(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1ACE754C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = a1 >> 62;
  if (!(a1 >> 62))
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_3;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  if (!sub_1ACE77508()) {
    goto LABEL_38;
  }
LABEL_3:
  uint64_t v42 = v9;
  uint64_t v43 = v7;
  unint64_t v12 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    goto LABEL_41;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    swift_once();
    uint64_t v18 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB768FB8);
    swift_beginAccess();
    long long v19 = v42;
    MEMORY[0x10](v42, v18, v6);
    id v20 = a3;
    id v21 = a3;
    uint64_t v22 = sub_1ACE75498();
    os_log_type_t v23 = sub_1ACE76BE8();
    if (os_log_type_enabled(v22, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      v45[0] = v25;
      *(_DWORD *)id v24 = 136315138;
      swift_getErrorValue();
      uint64_t v26 = sub_1ACE77A98();
      uint64_t v44 = sub_1ACA3189C(v26, v27, v45);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AC9D5000, v22, v23, "[Decoding Key Response] Decode Error %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v25, -1, -1);
      MEMORY[0x1AD11B340](v24, -1, -1);

      (*(void (**)(char *, void))(v43 + 8))(v19, v41[1]);
    }
    else
    {

      MEMORY[8](v19, v6);
    }
    return a2;
  }
  for (uint64_t i = (char *)*(id *)(a1 + 32); ; uint64_t i = (char *)MEMORY[0x1AD119490](0, a1))
  {
    char v14 = i;
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)&v14[OBJC_IVAR___MTContentKeyRequest_requestType];

    sub_1ACE748C8();
    swift_allocObject();
    sub_1ACE748B8();
    sub_1ACC722DC();
    sub_1ACE748A8();
    swift_release();
    uint64_t v16 = v47;
    uint64_t v17 = v48;
    if (v15 == 3) {
      break;
    }
    if (v47)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      a2 = sub_1ACC719C8(v16, a1, v15);
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    if (v10)
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1ACE77508();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v29 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    a2 = MEMORY[0x1E4FBC860];
    if (!v29) {
      return a2;
    }
    uint64_t v46 = MEMORY[0x1E4FBC860];
    sub_1ACE773D8();
    if (v29 < 0) {
      goto LABEL_44;
    }
    uint64_t v37 = 0;
    while (v29 != v37)
    {
      if (v12) {
        id v38 = (id)MEMORY[0x1AD119490](v37, a1);
      }
      else {
        id v38 = *(id *)(a1 + 8 * v37 + 32);
      }
      id v39 = v38;
      uint64_t v44 = (uint64_t)v38;
      sub_1ACC70B2C((void **)&v44, v15, v45);

      ++v37;
      sub_1ACE773A8();
      unint64_t v10 = *(void *)(v46 + 16);
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
      if (v29 == v37) {
        return v46;
      }
    }
    __break(1u);
LABEL_41:
    ;
  }
  if (v48)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    a2 = sub_1ACC718C4(v17, a1);
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return a2;
  }
  swift_bridgeObjectRelease();
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  a2 = MEMORY[0x1E4FBC860];
  if (!v28) {
    return a2;
  }
  uint64_t v46 = MEMORY[0x1E4FBC860];
  sub_1ACE773D8();
  if ((v28 & 0x8000000000000000) == 0)
  {
    uint64_t v30 = 0;
    do
    {
      if (v12) {
        id v31 = (id)MEMORY[0x1AD119490](v30, a1);
      }
      else {
        id v31 = *(id *)(a1 + 8 * v30 + 32);
      }
      uint64_t v32 = v31;
      ++v30;
      sub_1ACBAFDEC();
      uint64_t v33 = (void *)swift_allocError();
      unsigned char *v34 = 1;
      id v35 = objc_allocWithZone((Class)type metadata accessor for ContentKeyResponse(0));
      uint64_t v36 = (void *)sub_1ACE74D68();
      objc_msgSend(v35, sel_initWithRequest_keyData_renewalDate_error_, v32, 0, 0, v36);

      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
    }
    while (v28 != v30);
    return v46;
  }
  __break(1u);
LABEL_44:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1ACC722DC()
{
  unint64_t result = qword_1E99F43E0;
  if (!qword_1E99F43E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F43E0);
  }
  return result;
}

void OSAllocatedUnfairLock.current.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)a1 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(a1 + ((*(unsigned int *)(*(void *)a1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_1ACC72488(v3, a2);
  os_unfair_lock_unlock(v4);
}

void sub_1ACC723D4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)a3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(void *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  a1(v4);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1ACC72488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 16) - 8) + 16))(a2, a1);
}

uint64_t OSAllocatedUnfairLock<A>.init(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v12[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)__swift_project_boxed_opaque_existential_1(v8, v8[3]);
  sub_1ACE77C38();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    sub_1ACE778A8();
    uint64_t v9 = sub_1ACC727FC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a2);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  }
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v9;
}

uint64_t OSAllocatedUnfairLock<A>.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  OSAllocatedUnfairLock.current.getter(v8, (uint64_t)v7);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
  sub_1ACE77938();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, a3);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
}

uint64_t sub_1ACC727A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = OSAllocatedUnfairLock<A>.init(from:)(a1, *(void *)(a2 + 16));
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1ACC727D4(void *a1, uint64_t a2)
{
  return OSAllocatedUnfairLock<A>.encode(to:)(a1, *v2, *(void *)(a2 + 16));
}

uint64_t sub_1ACC727FC()
{
  return sub_1ACE77368();
}

uint64_t sub_1ACC72878@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v4 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4 + *MEMORY[0x1E4FBBAB0]) - 8) + 16))(a2, v3);
}

PodcastsFoundation::RecommendationsDisplayKind_optional __swiftcall RecommendationsDisplayKind.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1ACE775B8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 9;
  if (v3 < 9) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static RecommendationsDisplayKind.allCases.getter()
{
  return &unk_1F0380C10;
}

unint64_t RecommendationsDisplayKind.rawValue.getter()
{
  unint64_t result = 0x6C656E6E616863;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0x6143656E696C6E69;
      break;
    case 4:
      unint64_t result = 0x6F77537265776F70;
      break;
    case 5:
      unint64_t result = 0x6867696C68676968;
      break;
    case 6:
      unint64_t result = 2003789939;
      break;
    case 7:
      unint64_t result = 0x4865646F73697065;
      break;
    case 8:
      unint64_t result = 0x6F726548776F6873;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACC72AC0(unsigned __int8 *a1, char *a2)
{
  return sub_1ACCF486C(*a1, *a2);
}

unint64_t sub_1ACC72AD0()
{
  unint64_t result = qword_1E99F43E8;
  if (!qword_1E99F43E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F43E8);
  }
  return result;
}

uint64_t sub_1ACC72B24()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC72B6C()
{
  return sub_1ACBD4ED8();
}

uint64_t sub_1ACC72B74()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::RecommendationsDisplayKind_optional sub_1ACC72BB8(Swift::String *a1)
{
  return RecommendationsDisplayKind.init(rawValue:)(*a1);
}

unint64_t sub_1ACC72BC4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = RecommendationsDisplayKind.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1ACC72BF0()
{
  unint64_t result = qword_1E99F43F0;
  if (!qword_1E99F43F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F43F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F43F0);
  }
  return result;
}

void sub_1ACC72C4C(void *a1@<X8>)
{
  *a1 = &unk_1F0380C10;
}

uint64_t getEnumTagSinglePayload for MediaRequest.Field(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RecommendationsDisplayKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC72DB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationsDisplayKind()
{
  return &type metadata for RecommendationsDisplayKind;
}

uint64_t Array.safelyRemoveFirst()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (sub_1ACE76AD8()) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 56))(a2, 1, 1);
  }
  swift_getWitnessTable();
  sub_1ACE76B08();
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 56))(a2, 0, 1);
}

uint64_t Array.groupBy<A>(keyForValue:)(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v66 = a6;
  uint64_t v68 = a1;
  uint64_t v69 = a2;
  uint64_t v9 = sub_1ACE76688();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v58 = (char *)&v52 - v10;
  uint64_t v54 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v11);
  char v67 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v52 - v14;
  uint64_t v73 = (void (**)(char *, uint64_t *, uint64_t))sub_1ACE76FD8();
  uint64_t v16 = (uint64_t)*(v73 - 1);
  MEMORY[0x1F4188790](v73);
  uint64_t v18 = (char *)&v52 - v17;
  uint64_t v19 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v65 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  unint64_t v74 = (char *)&v52 - v23;
  MEMORY[0x1F4188790](v24);
  id v75 = (char *)&v52 - v25;
  uint64_t v53 = v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v52 - v28;
  uint64_t v78 = a3;
  swift_getWitnessTable();
  uint64_t v70 = v9;
  sub_1ACE76AC8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, a4) == 1)
  {
    (*(void (**)(char *, void (**)(char *, uint64_t *, uint64_t)))(v16 + 8))(v18, v73);
    swift_getTupleTypeMetadata2();
    return sub_1ACE765F8();
  }
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  uint64_t v63 = v19 + 32;
  v62(v29, v18, a4);
  uint64_t v31 = TupleTypeMetadata2;
  uint64_t v78 = sub_1ACE75FA8();
  id v52 = v29;
  v68(v29);
  uint64_t v32 = sub_1ACE75FA8();
  uint64_t v77 = v32;
  uint64_t v33 = swift_bridgeObjectRetain();
  uint64_t v34 = MEMORY[0x1AD118820](v33, a4);
  uint64_t v35 = v31;
  uint64_t v36 = v15;
  uint64_t v64 = v19;
  if (!v34)
  {
    uint64_t v48 = a5;
    swift_bridgeObjectRelease();
LABEL_16:
    uint64_t v49 = *(int *)(v35 + 48);
    uint64_t v50 = v54;
    unint64_t v51 = v58;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v58, v36, v48);
    *(void *)&v51[v49] = v32;
    sub_1ACE76688();
    sub_1ACE76648();
    swift_getTupleTypeMetadata2();
    uint64_t v30 = sub_1ACE77448();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v48);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v52, a4);
    return v30;
  }
  uint64_t v37 = 0;
  uint64_t v73 = (void (**)(char *, uint64_t *, uint64_t))(v19 + 16);
  char v56 = (void (**)(char *, char *, uint64_t))(v54 + 16);
  unint64_t v71 = (void (**)(char *, uint64_t))(v54 + 8);
  unint64_t v61 = (void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v57 = a3;
  uint64_t v55 = a4;
  id v38 = v67;
  while (1)
  {
    char v40 = sub_1ACE76618();
    sub_1ACE765B8();
    if (v40)
    {
      id v41 = *(void (**)(char *, uint64_t *, uint64_t))(v64 + 16);
      v41(v75, (uint64_t *)(a3+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * v37), a4);
      uint64_t v42 = v37 + 1;
      if (__OFADD__(v37, 1)) {
        goto LABEL_13;
      }
      goto LABEL_8;
    }
    uint64_t result = sub_1ACE772C8();
    if (v53 != 8) {
      break;
    }
    uint64_t v76 = result;
    id v41 = *v73;
    (*v73)(v75, &v76, a4);
    swift_unknownObjectRelease();
    uint64_t v42 = v37 + 1;
    if (__OFADD__(v37, 1))
    {
LABEL_13:
      __break(1u);
LABEL_14:
      uint64_t v48 = a5;
      swift_bridgeObjectRelease();
      uint64_t v32 = v77;
      uint64_t v35 = TupleTypeMetadata2;
      goto LABEL_16;
    }
LABEL_8:
    uint64_t v72 = (void (*)(char *, char *, uint64_t))v41;
    uint64_t v43 = v74;
    v62(v74, v75, a4);
    v68(v43);
    if ((sub_1ACE76168() & 1) == 0)
    {
      uint64_t v44 = v77;
      unint64_t v45 = v58;
      uint64_t v46 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v60 = *v56;
      v60(v58, v36, a5);
      *(void *)&v45[v46] = v44;
      a4 = v55;
      sub_1ACE76688();
      a3 = v57;
      sub_1ACE76648();
      (*v71)(v36, a5);
      v60(v36, v38, a5);
      uint64_t v77 = sub_1ACE765F8();
    }
    id v39 = v74;
    v72(v65, v74, a4);
    sub_1ACE76648();
    (*v71)(v38, a5);
    (*v61)(v39, a4);
    ++v37;
    if (v42 == MEMORY[0x1AD118820](a3, a4)) {
      goto LABEL_14;
    }
  }
  __break(1u);
  return result;
}

uint64_t dispatch thunk of TranscriptProvider.prefetch(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of TranscriptProvider.transcript(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of TranscriptProvider.invalidate(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))() & 1;
}

uint64_t sub_1ACC736AC@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = v4;
  v19[1] = a2;
  uint64_t v20 = a1;
  uint64_t v9 = sub_1ACE74F28();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA3AAD4(v7, (uint64_t)v15, &qword_1EB7731B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
    uint64_t v16 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a4, 1, 1, v16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    v20(v12);
    if (v5)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v18 = a3(0);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a4, 0, 1, v18);
    }
  }
}

uint64_t TimeBombedTranscriptProvider.ttmlPersistentCache.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  *(void *)a1 = *(void *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(void *)(a1 + 56) = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t TimeBombedTranscriptProvider.signaturePersistentCache.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 120);
  *(void *)a1 = *(void *)(v1 + 64);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 104);
  *(void *)(a1 + 56) = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t TimeBombedTranscriptProvider.ttmlVolatileCache.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 184);
  *(void *)a1 = *(void *)(v1 + 128);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 136);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 152);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 168);
  *(void *)(a1 + 56) = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t TimeBombedTranscriptProvider.signatureVolatileCache.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 248);
  *(void *)a1 = *(void *)(v1 + 192);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 200);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 216);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 232);
  *(void *)(a1 + 56) = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t TimeBombedTranscriptProvider.ttmlSource.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 264);
  *a1 = *(void *)(v1 + 256);
  a1[1] = v2;
  return swift_retain();
}

uint64_t TimeBombedTranscriptProvider.shazamSignatureSource.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 280);
  *a1 = *(void *)(v1 + 272);
  a1[1] = v2;
  return swift_retain();
}

uint64_t TimeBombedTranscriptProvider.timeBombedURLsProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA3E158(v1 + 288, a1);
}

id TimeBombedTranscriptProvider.workQueue.getter()
{
  return *(id *)(v0 + 328);
}

uint64_t TimeBombedTranscriptProvider.init(ttmlPersistentCache:signaturePersistentCache:ttmlVolatileCache:signatureVolatileCache:ttmlSource:shazamSignatureSource:timeBombedURLsProvider:workQueue:)@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X1>, _OWORD *a3@<X2>, _OWORD *a4@<X3>, _OWORD *a5@<X4>, long long *a6@<X5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>)
{
  long long v12 = a1[1];
  *(_OWORD *)a9 = *a1;
  *(_OWORD *)(a9 + 16) = v12;
  long long v13 = a1[3];
  *(_OWORD *)(a9 + 32) = a1[2];
  *(_OWORD *)(a9 + 48) = v13;
  long long v14 = a2[1];
  *(_OWORD *)(a9 + 64) = *a2;
  *(_OWORD *)(a9 + 80) = v14;
  long long v15 = a2[3];
  *(_OWORD *)(a9 + 96) = a2[2];
  *(_OWORD *)(a9 + 112) = v15;
  long long v16 = a3[1];
  *(_OWORD *)(a9 + 128) = *a3;
  *(_OWORD *)(a9 + 144) = v16;
  long long v17 = a3[3];
  *(_OWORD *)(a9 + 160) = a3[2];
  *(_OWORD *)(a9 + 176) = v17;
  long long v18 = a4[1];
  *(_OWORD *)(a9 + 192) = *a4;
  *(_OWORD *)(a9 + 208) = v18;
  long long v19 = a4[3];
  *(_OWORD *)(a9 + 224) = a4[2];
  *(_OWORD *)(a9 + 240) = v19;
  long long v20 = *a6;
  *(_OWORD *)(a9 + 256) = *a5;
  *(_OWORD *)(a9 + 272) = v20;
  sub_1ACA3E158(a7, a9 + 288);
  *(void *)(a9 + 328) = a8;
  id v21 = a8;
  uint64_t v22 = MEMORY[0x1E4FBC860];
  unint64_t v23 = sub_1ACA37B04(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A888);
  uint64_t v24 = swift_allocObject();
  *(_DWORD *)(v24 + 24) = 0;
  *(void *)(v24 + 16) = v23;
  *(void *)(a9 + 336) = v24;
  unint64_t v25 = sub_1ACA37CF4(v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A898);
  uint64_t v26 = swift_allocObject();
  *(_DWORD *)(v26 + 24) = 0;
  *(void *)(v26 + 16) = v25;
  *(void *)(a9 + 344) = v26;
  unint64_t v27 = sub_1ACA3713C(v22);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A880);
  uint64_t v28 = swift_allocObject();
  *(_DWORD *)(v28 + 24) = 0;
  *(void *)(v28 + 16) = v27;
  uint64_t result = __swift_destroy_boxed_opaque_existential_0(a7);
  *(void *)(a9 + 352) = v28;
  return result;
}

uint64_t TimeBombedTranscriptProvider.prefetch(request:)()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 352);
  uint64_t v2 = v1 + 4;
  int v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACC741A4(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1ACC73CF8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v42 = a4;
  id v41 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v6 - 8);
  int v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2798);
  uint64_t v37 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v43 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE75118();
  uint64_t v38 = *(void *)(v10 - 8);
  uint64_t v39 = v10;
  uint64_t v11 = *(void *)(v38 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v36 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  long long v14 = (char *)&v33 - v13;
  sub_1ACE75108();
  v44[0] = TimeBombedTranscriptProvider.transcript(for:)(a3);
  if (qword_1EB76E160 != -1) {
    swift_once();
  }
  long long v15 = (void *)qword_1EB76E150;
  id v45 = (id)qword_1EB76E150;
  uint64_t v16 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
  id v17 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F27A0);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1E99F27A8, &qword_1E99F27A0);
  sub_1ACA93A6C();
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v8, &qword_1EB7669C8);

  swift_release();
  sub_1ACC74C68(a2, (uint64_t)v44);
  uint64_t v18 = v38;
  long long v19 = *(void (**)(uint64_t, char *, uint64_t))(v38 + 16);
  uint64_t v34 = v14;
  uint64_t v35 = v19;
  uint64_t v20 = (uint64_t)v36;
  id v21 = v14;
  uint64_t v22 = v39;
  v19((uint64_t)v36, v21, v39);
  unint64_t v23 = (*(unsigned __int8 *)(v18 + 80) + 376) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v24 = swift_allocObject();
  memcpy((void *)(v24 + 16), v44, 0x168uLL);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 32))(v24 + v23, v20, v22);
  sub_1ACA51EA4(&qword_1E99F27B0, &qword_1E99F2798);
  uint64_t v25 = v40;
  uint64_t v26 = v43;
  uint64_t v27 = sub_1ACE75B88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v25);
  uint64_t v28 = v34;
  v35(v20, v34, v22);
  swift_retain();
  uint64_t v29 = v41;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v44[0] = *v29;
  *uint64_t v29 = 0x8000000000000000;
  sub_1ACD0D868(v27, v20, isUniquelyReferenced_nonNull_native);
  *uint64_t v29 = v44[0];
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v31(v20, v22);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v31)(v28, v22);
  *uint64_t v42 = v27;
  return result;
}

uint64_t sub_1ACC741A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACC73CF8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t TimeBombedTranscriptProvider.transcript(for:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v27 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4400);
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4408);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v30 = v10;
  uint64_t v31 = v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA69FEC(a1, (uint64_t)v34);
  uint64_t v14 = swift_allocObject();
  long long v15 = v34[3];
  *(_OWORD *)(v14 + 48) = v34[2];
  *(_OWORD *)(v14 + 64) = v15;
  *(void *)(v14 + 80) = *(void *)&v34[4];
  long long v16 = v34[1];
  *(_OWORD *)(v14 + 16) = v34[0];
  *(_OWORD *)(v14 + 32) = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4410);
  swift_allocObject();
  *(void *)&v34[0] = sub_1ACE75A18();
  *(void *)&v32[0] = *(void *)(v2 + 328);
  id v17 = *(void **)&v32[0];
  uint64_t v18 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 1, 1, v18);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1E99F4418, &qword_1E99F4410);
  sub_1ACA93A6C();
  id v19 = v17;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v6, &qword_1EB7669C8);

  swift_release();
  sub_1ACC74C68(v2, (uint64_t)v34);
  sub_1ACA69FEC(v27, (uint64_t)v32);
  uint64_t v20 = swift_allocObject();
  memcpy((void *)(v20 + 16), v34, 0x168uLL);
  long long v21 = v32[3];
  *(_OWORD *)(v20 + 408) = v32[2];
  *(_OWORD *)(v20 + 424) = v21;
  *(void *)(v20 + 440) = v33;
  long long v22 = v32[1];
  *(_OWORD *)(v20 + 376) = v32[0];
  *(_OWORD *)(v20 + 392) = v22;
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F27A0);
  sub_1ACA51EA4(&qword_1E99F4420, &qword_1E99F4400);
  sub_1ACA51EA4(&qword_1E99F27A8, &qword_1E99F27A0);
  uint64_t v23 = v29;
  sub_1ACE75C78();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v23);
  sub_1ACA51EA4(&qword_1E99F4428, &qword_1E99F4408);
  uint64_t v24 = v30;
  uint64_t v25 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v24);
  return v25;
}

void sub_1ACC74644(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(a2 + 352);
  int v3 = (uint64_t *)&v2[4];
  uint64_t v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_1ACB673B8(v3);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_1ACC746A0(void (*a1)(unsigned char *), uint64_t a2, uint64_t *a3)
{
  uint64_t v47 = a2;
  uint64_t v48 = a1;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F45D0);
  MEMORY[0x1F4188790](v46);
  id v45 = &v40[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for TTMLRequest();
  uint64_t v6 = (int *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v40[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  uint64_t v44 = &v40[-v10];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = &v40[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for ShazamSignatureRequest();
  long long v15 = (int *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = &v40[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v18);
  uint64_t v49 = &v40[-v19];
  uint64_t v20 = sub_1ACE74F28();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v42 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v43 = v21 + 56;
  v42(v13, 1, 1, v20);
  sub_1ACA3AAD4((uint64_t)v13, (uint64_t)v17, &qword_1EB7731B0);
  int v41 = *((unsigned __int8 *)a3 + 24);
  uint64_t v22 = a3[2];
  uint64_t v51 = a3[1];
  uint64_t v52 = v22;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  uint64_t v50 = *a3;
  sub_1ACA55E4C();
  sub_1ACE770B8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v23 = v51;
  uint64_t v24 = v52;
  char v25 = *((unsigned char *)a3 + 25);
  uint64_t v26 = (uint64_t)&v17[v15[11]];
  *(_OWORD *)uint64_t v26 = 0u;
  *(_OWORD *)(v26 + 16) = 0u;
  *(void *)(v26 + 32) = 0;
  v17[v15[7]] = v41;
  uint64_t v27 = &v17[v15[8]];
  *uint64_t v27 = v23;
  v27[1] = v24;
  v17[v15[10]] = v25;
  v17[v15[9]] = 6;
  sub_1ACBB13C4((uint64_t)(a3 + 4), v26);
  sub_1ACC75CDC((uint64_t)v17, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  sub_1ACA50E78((uint64_t)v13, &qword_1EB7731B0);
  v42(v13, 1, 1, v20);
  sub_1ACA3AAD4((uint64_t)v13, (uint64_t)v8, &qword_1EB7731B0);
  LOBYTE(v17) = *((unsigned char *)a3 + 24);
  uint64_t v28 = a3[2];
  uint64_t v51 = a3[1];
  uint64_t v52 = v28;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  uint64_t v50 = *a3;
  sub_1ACE770B8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v29 = v51;
  uint64_t v30 = v52;
  uint64_t v31 = (uint64_t)&v8[v6[11]];
  *(_OWORD *)uint64_t v31 = 0u;
  *(_OWORD *)(v31 + 16) = 0u;
  *(void *)(v31 + 32) = 0;
  v8[v6[7]] = (_BYTE)v17;
  char v32 = *((unsigned char *)a3 + 25);
  uint64_t v33 = &v8[v6[8]];
  *uint64_t v33 = v29;
  v33[1] = v30;
  v8[v6[10]] = v32;
  v8[v6[9]] = 7;
  sub_1ACBB13C4((uint64_t)(a3 + 4), v31);
  uint64_t v34 = v44;
  sub_1ACC75CDC((uint64_t)v8, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  sub_1ACA50E78((uint64_t)v13, &qword_1EB7731B0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4438);
  uint64_t v36 = v45;
  uint64_t v37 = (uint64_t)&v45[*(int *)(v35 + 48)];
  sub_1ACC799B8((uint64_t)v34, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  uint64_t v38 = v49;
  sub_1ACC799B8((uint64_t)v49, v37, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  swift_storeEnumTagMultiPayload();
  v48(v36);
  sub_1ACA50E78((uint64_t)v36, &qword_1E99F45D0);
  sub_1ACC75D74((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  return sub_1ACC75D74((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
}

uint64_t sub_1ACC74B4C(void (*a1)(unsigned char *), uint64_t a2)
{
  return sub_1ACC746A0(a1, a2, (uint64_t *)(v2 + 16));
}

uint64_t sub_1ACC74B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4438);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(int *)(v9 + 56);
  uint64_t v11 = (uint64_t)&v8[v10];
  uint64_t v12 = a1 + v10;
  sub_1ACC799B8(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  sub_1ACC799B8(v12, v11, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  uint64_t v13 = sub_1ACC74DAC(a2, (uint64_t)v8, v11);
  sub_1ACC75D74(v11, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  uint64_t result = sub_1ACC75D74((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  *a3 = v13;
  return result;
}

uint64_t sub_1ACC74C68(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ACC74CA0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 304);

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 432)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 408);
  }
  return swift_deallocObject();
}

uint64_t sub_1ACC74DA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACC74B54(a1, v2 + 376, a2);
}

uint64_t sub_1ACC74DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v18)(unsigned char *__return_ptr, char *);
  void (*v19)(unsigned char *, char *);
  uint64_t v20;
  void (*v21)(unsigned char *, char *);
  unint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  void (*v25)(char *, uint64_t);
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  void *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned char *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  void (*v48)(unsigned char *, char *);
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  long long v64;
  _OWORD v65[3];
  long long v66;
  unint64_t v67;
  unsigned char v68[18];
  unsigned char v69[16];
  unsigned char v70[32];
  long long v71;
  long long v72;
  unsigned char v73[26];

  uint64_t v4 = v3;
  uint64_t v62 = a1;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4440);
  uint64_t v51 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4448);
  uint64_t v58 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v54 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v55 = (char *)&v47 - v10;
  char v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4450);
  MEMORY[0x1F4188790](v56);
  uint64_t v53 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v57 = (uint64_t)&v47 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4438);
  uint64_t v15 = v14 - 8;
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACC799B8(a2, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  unint64_t v61 = &v17[*(int *)(v15 + 56)];
  sub_1ACC799B8(a3, (uint64_t)v61, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  uint64_t v18 = (void (*)(unsigned char *__return_ptr, char *))v4[16];
  uint64_t v19 = (void (*)(unsigned char *, char *))v4[18];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v18(v70, v17);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v20 = *((void *)&v71 + 1);
  if (*((void *)&v71 + 1))
  {
    uint64_t v21 = (void (*)(unsigned char *, char *))v72;
    uint64_t v22 = v71;
    uint64_t v63 = *(void *)&v70[24];
    uint64_t v23 = *(void *)&v70[16];
    uint64_t v64 = *(_OWORD *)v70;
  }
  else
  {
    uint64_t v48 = v19;
    *((void *)&v64 + 1) = *v4;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v60 = v17;
    (*((void (**)(unsigned char *__return_ptr, char *))&v64 + 1))(v70, v17);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v20 = *((void *)&v71 + 1);
    uint64_t v21 = (void (*)(unsigned char *, char *))v72;
    uint64_t v63 = *(void *)&v70[24];
    uint64_t v64 = *(_OWORD *)v70;
    uint64_t v23 = *(void *)&v70[16];
    if (*((void *)&v71 + 1))
    {
      v70[16] &= 1u;
      uint64_t v49 = v71;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      id v17 = v60;
      v48(v70, v60);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v22 = v49;
    }
    else
    {
      id v17 = v60;
      uint64_t v22 = v71;
    }
  }
  uint64_t v24 = (void (*)(char *, uint64_t))sub_1ACC75DD4((uint64_t)v61);
  char v25 = v24;
  uint64_t v60 = (char *)v23;
  if (v20 && v24)
  {
    *(void *)uint64_t v70 = v24;
    *(_OWORD *)&v70[8] = v64;
    *(void *)&v70[24] = v23 & 1;
    *(void *)&unint64_t v71 = v63;
    *((void *)&v71 + 1) = v22;
    *(void *)&uint64_t v72 = v20;
    *((void *)&v72 + 1) = v21;
    v73[0] = 2;
    sub_1ACC79A74(v64, *((uint64_t *)&v64 + 1), v23, v63, v22, v20);
    unint64_t v61 = v25;
    uint64_t v26 = v50;
    sub_1ACE759C8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    uint64_t v27 = v55;
    uint64_t v48 = v21;
    uint64_t v28 = v52;
    sub_1ACE75998();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v26, v28);
    uint64_t v29 = v62 + 32;
    uint64_t v30 = v58;
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
    char v32 = v54;
    uint64_t v49 = v22;
    uint64_t v33 = v59;
    v31(v54, v27, v59);
    sub_1ACA3AAD4(v29, (uint64_t)v70, &qword_1EB772EA0);
    uint64_t v34 = (uint64_t)v53;
    v31(v53, v32, v33);
    uint64_t v35 = (int *)v56;
    sub_1ACA3AAD4((uint64_t)v70, v34 + *(int *)(v56 + 36), &qword_1EB772EA0);
    uint64_t v36 = v34 + v35[10];
    *(void *)uint64_t v36 = "LocallyFulfillTranscriptRequest";
    *(void *)(v36 + 8) = 31;
    *(unsigned char *)(v36 + 16) = 2;
    *(unsigned char *)(v34 + v35[12]) = 1;
    sub_1ACA50E78((uint64_t)v70, &qword_1EB772EA0);
    uint64_t v37 = *(void (**)(char *, uint64_t))(v30 + 8);
    v37(v32, v33);
    uint64_t v38 = (void *)(v34 + v35[11]);
    *uint64_t v38 = 0;
    v38[1] = 0xE000000000000000;
    *(unsigned char *)(v34 + v35[13]) = 0;
    uint64_t v39 = v57;
    sub_1ACA50E14(v34, v57, &qword_1E99F4450);
    v37(v27, v33);
    sub_1ACA51EA4(&qword_1E99F4468, &qword_1E99F4450);
    uint64_t v40 = sub_1ACE75AD8();

    sub_1ACC79A20(v64, *((uint64_t *)&v64 + 1), (uint64_t)v60, v63, v49, v20);
    int v41 = (unsigned char *)v39;
    uint64_t v42 = &qword_1E99F4450;
  }
  else
  {
    *(_OWORD *)uint64_t v70 = v64;
    uint64_t v43 = v63;
    *(void *)&v70[16] = v23;
    *(void *)&v70[24] = v63;
    *(void *)&unint64_t v71 = v22;
    *((void *)&v71 + 1) = v20;
    *(void *)&uint64_t v72 = v21;
    uint64_t v44 = v62;
    id v45 = sub_1ACC75F78(v62, (uint64_t)v70, v24);
    sub_1ACA3AAD4(v44 + 32, (uint64_t)v69, &qword_1EB772EA0);
    *(void *)&v65[0] = v45;
    sub_1ACA3AAD4((uint64_t)v69, (uint64_t)v65 + 8, &qword_1EB772EA0);
    *(void *)&uint64_t v66 = "RemotelyFulfillTranscriptRequest";
    *((void *)&v66 + 1) = 32;
    LOBYTE(v67) = 2;
    v68[16] = 1;
    sub_1ACA50E78((uint64_t)v69, &qword_1EB772EA0);
    *(void *)uint64_t v68 = 0;
    *(void *)&v68[8] = 0xE000000000000000;
    v68[17] = 0;
    unint64_t v71 = v65[2];
    uint64_t v72 = v66;
    *(_OWORD *)uint64_t v70 = v65[0];
    *(_OWORD *)&v70[16] = v65[1];
    *(_OWORD *)uint64_t v73 = v67;
    *(_OWORD *)&v73[10] = *(_OWORD *)&v68[2];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4458);
    sub_1ACA51EA4(&qword_1E99F4460, &qword_1E99F4458);
    uint64_t v40 = sub_1ACE75AD8();

    sub_1ACC79A20(v64, *((uint64_t *)&v64 + 1), (uint64_t)v60, v43, v22, v20);
    int v41 = v70;
    uint64_t v42 = &qword_1E99F4458;
  }
  sub_1ACA50E78((uint64_t)v41, v42);
  sub_1ACA50E78((uint64_t)v17, &qword_1E99F4438);
  return v40;
}

uint64_t TimeBombedTranscriptProvider.invalidate(for:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShazamSignatureRequest();
  int v3 = (int *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v53 = &v46[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = &v46[-v6];
  MEMORY[0x1F4188790](v8);
  uint64_t v57 = &v46[-v9];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = &v46[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for TTMLRequest();
  uint64_t v14 = (int *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = &v46[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v17);
  char v56 = &v46[-v18];
  uint64_t v50 = sub_1ACE74F28();
  uint64_t v19 = *(void *)(v50 - 8);
  uint64_t v49 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v51 = v19 + 56;
  int v55 = 1;
  v49(v12, 1, 1, v50);
  sub_1ACA3AAD4((uint64_t)v12, (uint64_t)v16, &qword_1EB7731B0);
  int v47 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v20 = *(void *)(a1 + 16);
  uint64_t v58 = *(void *)(a1 + 8);
  uint64_t v59 = v20;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  uint64_t v61 = *(void *)a1;
  unint64_t v48 = sub_1ACA55E4C();
  sub_1ACE770B8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v21 = v58;
  uint64_t v22 = v59;
  char v23 = *(unsigned char *)(a1 + 25);
  uint64_t v24 = (uint64_t)&v16[v14[11]];
  *(_OWORD *)uint64_t v24 = 0u;
  *(_OWORD *)(v24 + 16) = 0u;
  *(void *)(v24 + 32) = 0;
  v16[v14[7]] = v47;
  char v25 = &v16[v14[8]];
  *char v25 = v21;
  v25[1] = v22;
  v16[v14[10]] = v23;
  v16[v14[9]] = 7;
  sub_1ACBB13C4(a1 + 32, v24);
  sub_1ACC75CDC((uint64_t)v16, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  sub_1ACA50E78((uint64_t)v12, &qword_1EB7731B0);
  v49(v12, 1, 1, v50);
  sub_1ACA3AAD4((uint64_t)v12, (uint64_t)v7, &qword_1EB7731B0);
  char v26 = *(unsigned char *)(a1 + 24);
  uint64_t v27 = *(void *)(a1 + 16);
  uint64_t v58 = *(void *)(a1 + 8);
  uint64_t v59 = v27;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  uint64_t v61 = *(void *)a1;
  sub_1ACE770B8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v28 = v58;
  uint64_t v29 = v59;
  uint64_t v30 = (uint64_t)&v7[v3[11]];
  *(_OWORD *)uint64_t v30 = 0u;
  *(_OWORD *)(v30 + 16) = 0u;
  *(void *)(v30 + 32) = 0;
  v7[v3[7]] = v26;
  char v31 = *(unsigned char *)(a1 + 25);
  char v32 = &v7[v3[8]];
  void *v32 = v28;
  v32[1] = v29;
  v7[v3[10]] = v31;
  uint64_t v33 = v3[9];
  uint64_t v34 = v52;
  v7[v33] = 6;
  sub_1ACBB13C4(a1 + 32, v30);
  uint64_t v35 = (uint64_t)v7;
  uint64_t v37 = v56;
  uint64_t v36 = v57;
  sub_1ACC75CDC(v35, (uint64_t)v57, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  sub_1ACA50E78((uint64_t)v12, &qword_1EB7731B0);
  uint64_t v38 = (uint64_t (*)(unsigned char *))v34[4];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  LOBYTE(a1) = v38(v37);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1ACC74C68((uint64_t)v34, (uint64_t)&v58);
  uint64_t v39 = v53;
  sub_1ACC799B8((uint64_t)v36, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  if ((a1 & 1) == 0)
  {
    uint64_t v40 = v60;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    int v55 = v40(v39);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_1ACC75D74((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  sub_1ACC75D44((uint64_t)&v58);
  int v41 = (void (*)(unsigned char *))v34[6];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v42 = v54;
  v41(v37);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (!v42)
  {
    uint64_t v43 = v37;
    uint64_t v44 = (void (*)(unsigned char *))v34[14];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v44(v57);
    uint64_t v37 = v43;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_1ACC75D74((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  sub_1ACC75D74((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  return v55 & 1;
}

uint64_t sub_1ACC75CDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACC75D44(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACC75D74(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_1ACC75DD4(uint64_t a1)
{
  void (*v3)(void **__return_ptr, uint64_t);
  void (*v4)(void **, uint64_t);
  void *v5;
  id v6;
  void (*v8)(void **__return_ptr, uint64_t);
  void *v9;

  uint64_t v3 = (void (*)(void **__return_ptr, uint64_t))v1[24];
  uint64_t v4 = (void (*)(void **, uint64_t))v1[26];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v3(&v9, a1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v9;
  if (!v9)
  {
    uint64_t v8 = (void (*)(void **__return_ptr, uint64_t))v1[8];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v8(&v9, a1);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v5 = v9;
    if (!v9) {
      return 0;
    }
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v4(&v9, a1);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v6 = sub_1ACC787D0(v5);

  return v6;
}

uint64_t sub_1ACC75F78(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t))
{
  char v133 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4470);
  uint64_t v111 = *(void *)(v6 - 8);
  uint64_t v112 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v110 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4478);
  uint64_t v108 = *(void *)(v8 - 8);
  uint64_t v109 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v107 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4480);
  uint64_t v114 = *(void *)(v10 - 8);
  uint64_t v115 = v10;
  MEMORY[0x1F4188790](v10);
  id v113 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4488);
  uint64_t v117 = *(void *)(v12 - 8);
  uint64_t v118 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v116 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4490);
  uint64_t v119 = *(void *)(v122 - 8);
  MEMORY[0x1F4188790](v122);
  long long v129 = (char *)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4498);
  uint64_t v120 = *(void *)(v15 - 8);
  uint64_t v121 = v15;
  MEMORY[0x1F4188790](v15);
  int v123 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4440);
  uint64_t v135 = *(void *)(v17 - 8);
  uint64_t v136 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v134 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4448);
  uint64_t v138 = *(void *)(v19 - 8);
  uint64_t v139 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v137 = (char *)&v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F44A0);
  uint64_t v127 = *(void *)(v21 - 8);
  uint64_t v128 = v21;
  MEMORY[0x1F4188790](v21);
  long long v126 = (char *)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F44A8);
  uint64_t v130 = *(void *)(v141 - 8);
  MEMORY[0x1F4188790](v141);
  uint64_t v140 = (uint64_t)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F44B0);
  uint64_t v131 = *(void *)(v24 - 8);
  uint64_t v132 = v24;
  MEMORY[0x1F4188790](v24);
  uint64_t v148 = (char *)&v106 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F44B8);
  uint64_t v150 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v106 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  char v31 = (char *)&v106 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v106 - v33;
  uint64_t v35 = *(void *)(a2 + 8);
  uint64_t v36 = *(void *)(a2 + 16);
  id v146 = *(void (**)(char *, uint64_t))a2;
  uint64_t v147 = v36;
  uint64_t v37 = *(void *)(a2 + 24);
  unint64_t v144 = *(void *)(a2 + 32);
  uint64_t v145 = v37;
  uint64_t v142 = *(void *)(a2 + 40);
  uint64_t v124 = *(void *)(a2 + 48);
  uint64_t v125 = v35;
  uint64_t v39 = v3[39];
  uint64_t v38 = v3[40];
  __swift_project_boxed_opaque_existential_1(v3 + 36, v39);
  v152[0] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 8))(a1, v39, v38);
  sub_1ACA69FEC(a1, (uint64_t)v153);
  uint64_t v40 = swift_allocObject();
  long long v41 = v153[3];
  *(_OWORD *)(v40 + 48) = v153[2];
  *(_OWORD *)(v40 + 64) = v41;
  *(void *)(v40 + 80) = v154;
  long long v42 = v153[1];
  *(_OWORD *)(v40 + 16) = v153[0];
  *(_OWORD *)(v40 + 32) = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F44C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F44C8);
  sub_1ACA51EA4(&qword_1E99F44D0, &qword_1E99F44C0);
  uint64_t v43 = v26;
  uint64_t v44 = v150;
  sub_1ACE75B58();
  swift_release();
  swift_release();
  id v45 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  v45(v31, v34, v43);
  sub_1ACC74C68((uint64_t)v3, (uint64_t)v153);
  uint64_t v149 = v43;
  v45(v28, v34, v43);
  sub_1ACC74C68((uint64_t)v3, (uint64_t)v152);
  uint64_t v143 = v34;
  if (v142)
  {
    uint64_t v46 = v142;
    long long v129 = (char *)(v147 & 1);
    char v155 = v147 & 1;
    unint64_t v48 = v144;
    uint64_t v47 = v145;
    sub_1ACA3985C(v145, v144);
    swift_bridgeObjectRetain();
    uint64_t v49 = v124;
    swift_bridgeObjectRetain();
    sub_1ACC75D44((uint64_t)v153);
    uint64_t v50 = *(void (**)(char *))(v44 + 8);
    uint64_t v51 = v31;
    uint64_t v52 = v149;
    v50(v51);
    uint64_t v150 = v44 + 8;
    char v133 = (void (*)(char *, uint64_t))v50;
    uint64_t v53 = v140;
    sub_1ACC77BE0((uint64_t)v152, v140);
    sub_1ACC75D44((uint64_t)v152);
    ((void (*)(char *, uint64_t))v50)(v28, v52);
    uint64_t v54 = swift_allocObject();
    int v55 = v146;
    uint64_t v56 = v125;
    *(void *)(v54 + 16) = v146;
    *(void *)(v54 + 24) = v56;
    *(unsigned char *)(v54 + 32) = v155;
    *(void *)(v54 + 40) = v47;
    *(void *)(v54 + 48) = v48;
    *(void *)(v54 + 56) = v46;
    *(void *)(v54 + 64) = v49;
    sub_1ACA3985C(v47, v48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v57 = v141;
    sub_1ACE75578();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v53, v57);
    v151[0] = v55;
    v151[1] = v56;
    uint64_t v58 = v56;
    v151[2] = v129;
    v151[3] = v47;
    v151[4] = v48;
    v151[5] = v46;
    v151[6] = v49;
    v151[7] = 0;
    LOBYTE(v151[8]) = 1;
    sub_1ACA3985C(v47, v48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v59 = v134;
    sub_1ACE759C8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    uint64_t v60 = v136;
    uint64_t v61 = v137;
    sub_1ACE75998();
    (*(void (**)(char *, uint64_t))(v135 + 8))(v59, v60);
    sub_1ACA51EA4(&qword_1E99F4528, &qword_1E99F4448);
    sub_1ACA51EA4(&qword_1E99F4518, &qword_1E99F44B0);
    uint64_t v62 = v126;
    uint64_t v63 = v148;
    uint64_t v64 = v139;
    uint64_t v65 = v132;
    sub_1ACE75BA8();
    (*(void (**)(char *, uint64_t))(v138 + 8))(v61, v64);
    sub_1ACA51EA4(&qword_1E99F4538, &qword_1E99F44A0);
    uint64_t v66 = v128;
    uint64_t v67 = sub_1ACE75AD8();
    sub_1ACC79A20((uint64_t)v146, v58, v147, v145, v144, v46);
    (*(void (**)(char *, uint64_t))(v127 + 8))(v62, v66);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v63, v65);
    v133(v143, v149);
  }
  else
  {
    uint64_t v68 = v116;
    if (v133)
    {
      uint64_t v147 = v133;
      sub_1ACC75D44((uint64_t)v152);
      id v146 = *(void (**)(char *, uint64_t))(v44 + 8);
      uint64_t v150 = v44 + 8;
      uint64_t v69 = v149;
      v146(v28, v149);
      type metadata accessor for TTMLRequest();
      uint64_t v148 = (char *)MEMORY[0x1E4F1A938];
      sub_1ACA51EA4(&qword_1E99F44D8, &qword_1E99F44B8);
      uint64_t v70 = v68;
      unint64_t v71 = v31;
      sub_1ACE75AE8();
      sub_1ACC74C68((uint64_t)v153, (uint64_t)v151);
      uint64_t v72 = swift_allocObject();
      memcpy((void *)(v72 + 16), v151, 0x168uLL);
      sub_1ACE757D8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F44E0);
      sub_1ACA51EA4(&qword_1E99F44E8, &qword_1E99F4488);
      sub_1ACA51EA4(&qword_1E99F44F0, &qword_1E99F44E0);
      uint64_t v73 = v129;
      uint64_t v74 = v118;
      sub_1ACE75C78();
      swift_release();
      (*(void (**)(char *, uint64_t))(v117 + 8))(v70, v74);
      sub_1ACC75D44((uint64_t)v153);
      uint64_t v75 = v69;
      uint64_t v76 = v146;
      v146(v71, v75);
      uint64_t v77 = swift_allocObject();
      uint64_t v78 = (void *)v147;
      *(void *)(v77 + 16) = v147;
      sub_1ACA51EA4(&qword_1E99F44F8, &qword_1E99F4490);
      id v79 = v78;
      uint64_t v81 = v122;
      uint64_t v80 = v123;
      sub_1ACE75B58();
      swift_release();
      (*(void (**)(char *, uint64_t))(v119 + 8))(v73, v81);
      v151[0] = v133;
      memset(&v151[1], 0, 57);
      id v82 = v79;
      unint64_t v83 = v134;
      sub_1ACE759C8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
      uint64_t v84 = v136;
      uint64_t v85 = v137;
      sub_1ACE75998();
      (*(void (**)(char *, uint64_t))(v135 + 8))(v83, v84);
      sub_1ACA51EA4(&qword_1E99F4528, &qword_1E99F4448);
      sub_1ACA51EA4(&qword_1E99F4510, &qword_1E99F4498);
      uint64_t v86 = v113;
      uint64_t v87 = v139;
      uint64_t v88 = v121;
      sub_1ACE75BA8();
      (*(void (**)(char *, uint64_t))(v138 + 8))(v85, v87);
      sub_1ACA51EA4(&qword_1E99F4530, &qword_1E99F4480);
      uint64_t v89 = v115;
      uint64_t v67 = sub_1ACE75AD8();

      (*(void (**)(char *, uint64_t))(v114 + 8))(v86, v89);
      (*(void (**)(char *, uint64_t))(v120 + 8))(v80, v88);
      v76(v143, v149);
    }
    else
    {
      type metadata accessor for TTMLRequest();
      uint64_t v147 = MEMORY[0x1E4F1A938];
      sub_1ACA51EA4(&qword_1E99F44D8, &qword_1E99F44B8);
      uint64_t v90 = v68;
      uint64_t v91 = v149;
      uint64_t v106 = v31;
      sub_1ACE75AE8();
      sub_1ACC74C68((uint64_t)v153, (uint64_t)v151);
      uint64_t v92 = swift_allocObject();
      memcpy((void *)(v92 + 16), v151, 0x168uLL);
      sub_1ACE757D8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F44E0);
      uint64_t v145 = MEMORY[0x1E4F1A820];
      sub_1ACA51EA4(&qword_1E99F44E8, &qword_1E99F4488);
      sub_1ACA51EA4(&qword_1E99F44F0, &qword_1E99F44E0);
      uint64_t v93 = v118;
      sub_1ACE75C78();
      swift_release();
      (*(void (**)(char *, uint64_t))(v117 + 8))(v90, v93);
      sub_1ACC75D44((uint64_t)v153);
      uint64_t v94 = v150 + 8;
      long long v95 = *(void (**)(char *, uint64_t))(v150 + 8);
      v95(v106, v91);
      id v146 = v95;
      uint64_t v150 = v94;
      sub_1ACC77BE0((uint64_t)v152, v140);
      sub_1ACC75D44((uint64_t)v152);
      v95(v28, v91);
      sub_1ACA51EA4(&qword_1E99F44F8, &qword_1E99F4490);
      sub_1ACA51EA4(&qword_1E99F4500, &qword_1E99F44A8);
      uint64_t v96 = v107;
      sub_1ACE75B28();
      sub_1ACA51EA4(&qword_1E99F4508, &qword_1E99F4478);
      uint64_t v97 = v109;
      uint64_t v98 = sub_1ACE75AD8();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v96, v97);
      sub_1ACE75B58();
      uint64_t v99 = v148;
      sub_1ACE75578();
      v151[0] = v98;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F27A0);
      sub_1ACA51EA4(&qword_1E99F27A8, &qword_1E99F27A0);
      sub_1ACA51EA4(&qword_1E99F4510, &qword_1E99F4498);
      sub_1ACA51EA4(&qword_1E99F4518, &qword_1E99F44B0);
      uint64_t v100 = v110;
      id v101 = v123;
      uint64_t v102 = v121;
      uint64_t v103 = v132;
      sub_1ACE75BC8();
      sub_1ACA51EA4(&qword_1E99F4520, &qword_1E99F4470);
      uint64_t v104 = v112;
      uint64_t v67 = sub_1ACE75AD8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v111 + 8))(v100, v104);
      (*(void (**)(char *, uint64_t))(v131 + 8))(v99, v103);
      (*(void (**)(char *, uint64_t))(v120 + 8))(v101, v102);
      (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v140, v141);
      (*(void (**)(char *, uint64_t))(v119 + 8))(v129, v122);
      v146(v143, v149);
    }
  }
  return v67;
}

uint64_t sub_1ACC773C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F44C8);
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = *(int *)(v5 + 56);
  uint64_t v12 = (char *)&v16 + v11 - v9;
  uint64_t v13 = a1 + v11;
  sub_1ACA3AAD4(a1, (uint64_t)&v16 - v9, &qword_1E99F4568);
  sub_1ACA3AAD4(v13, (uint64_t)v12, &qword_1E99F4570);
  uint64_t v14 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_1ACA50E14((uint64_t)v10, (uint64_t)v7, &qword_1E99F4568);
  sub_1ACA50E14((uint64_t)v12, v14, &qword_1E99F4570);
  sub_1ACA3AAD4(v14, a2, &qword_1E99F4570);
  return sub_1ACA50E78((uint64_t)v7, &qword_1E99F44C8);
}

uint64_t sub_1ACC774FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v87 = a2;
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F44E0);
  MEMORY[0x1F4188790](v86);
  uint64_t v85 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4540);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v83 = (uint64_t)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v84 = (uint64_t)&v68 - v8;
  uint64_t v9 = type metadata accessor for TTMLRequest();
  MEMORY[0x1F4188790](v9);
  *(void *)&long long v80 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4548);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4550);
  MEMORY[0x1F4188790](v75);
  *(void *)&long long v76 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v68 - v17;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4558);
  MEMORY[0x1F4188790](v73);
  uint64_t v74 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v79 = (uint64_t)&v68 - v21;
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4560);
  MEMORY[0x1F4188790](v77);
  uint64_t v78 = (uint64_t)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v2[32];
  uint64_t v24 = v2[33];
  sub_1ACC799B8(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  uint64_t v25 = *(int *)(v12 + 60);
  uint64_t v26 = (uint64_t)v14;
  uint64_t v27 = &v14[v25];
  *(void *)uint64_t v27 = v23;
  *((void *)v27 + 1) = v24;
  uint64_t v72 = v24;
  uint64_t v81 = v9;
  uint64_t v82 = a1;
  if (*(unsigned char *)(a1 + *(int *)(v9 + 32)))
  {
    uint64_t v28 = v2 + 1;
    uint64_t v29 = v2 + 2;
    uint64_t v30 = v2 + 3;
    char v31 = v2 + 4;
    uint64_t v32 = v2 + 5;
    uint64_t v33 = v2 + 6;
    uint64_t v34 = v2 + 7;
    uint64_t v35 = v2;
  }
  else
  {
    uint64_t v35 = v2 + 16;
    uint64_t v28 = v2 + 17;
    uint64_t v29 = v2 + 18;
    uint64_t v30 = v2 + 19;
    char v31 = v2 + 20;
    uint64_t v32 = v2 + 21;
    uint64_t v33 = v2 + 22;
    uint64_t v34 = v2 + 23;
  }
  uint64_t v36 = *v34;
  uint64_t v71 = *v33;
  uint64_t v37 = *v32;
  uint64_t v69 = *v31;
  uint64_t v38 = *v30;
  uint64_t v39 = *v29;
  uint64_t v40 = *v28;
  uint64_t v41 = *v35;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v42 = v26;
  sub_1ACA3AAD4(v26, (uint64_t)v18, &qword_1E99F4548);
  uint64_t v43 = (uint64_t)v18;
  uint64_t v44 = (int *)v75;
  uint64_t v45 = v43 + *(int *)(v75 + 80);
  uint64_t v70 = type metadata accessor for TTMLRequest;
  sub_1ACC799B8(v42, v45, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  uint64_t v46 = (void *)(v43 + v44[19]);
  *uint64_t v46 = v41;
  v46[1] = v40;
  v46[2] = v39;
  v46[3] = v38;
  v46[4] = v69;
  v46[5] = v37;
  v46[6] = v71;
  v46[7] = v36;
  *(unsigned char *)(v43 + v44[21]) = 1;
  swift_retain();
  sub_1ACA50E78(v42, &qword_1E99F4548);
  uint64_t v47 = v2[42];
  uint64_t v48 = v76;
  sub_1ACA3AAD4(v43, v76, &qword_1E99F4550);
  uint64_t v49 = v73;
  uint64_t v50 = (uint64_t)v74;
  *(void *)&v74[*(int *)(v73 + 48)] = v47;
  sub_1ACA3AAD4(v48, v50 + *(int *)(v49 + 44), &qword_1E99F4550);
  uint64_t v51 = v80;
  uint64_t v52 = v70;
  sub_1ACC799B8(v48 + v44[20], v80, (uint64_t (*)(void))v70);
  swift_retain();
  sub_1ACA50E78(v48, &qword_1E99F4550);
  sub_1ACC75CDC(v51, v50, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  uint64_t v53 = v50;
  uint64_t v54 = v79;
  sub_1ACA50E14(v53, v79, &qword_1E99F4558);
  sub_1ACA50E78(v43, &qword_1E99F4550);
  uint64_t v55 = v2[16];
  uint64_t v56 = v2[23];
  uint64_t v57 = v78;
  sub_1ACA3AAD4(v54, v78, &qword_1E99F4558);
  uint64_t v58 = v77;
  sub_1ACC799B8(v54, v57 + *(int *)(v77 + 80), (uint64_t (*)(void))v52);
  uint64_t v59 = v57 + *(int *)(v58 + 76);
  *(void *)uint64_t v59 = v55;
  *(_OWORD *)(v59 + 8) = *(_OWORD *)(v2 + 17);
  long long v76 = *(_OWORD *)(v2 + 19);
  *(_OWORD *)(v59 + 24) = v76;
  long long v80 = *(_OWORD *)(v2 + 21);
  *(_OWORD *)(v59 + 40) = v80;
  *(void *)(v59 + 56) = v56;
  *(unsigned char *)(v57 + *(int *)(v58 + 84)) = 1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1ACA50E78(v54, &qword_1E99F4558);
  uint64_t v60 = v84;
  sub_1ACD4EE60(v84);
  sub_1ACA50E78(v57, &qword_1E99F4560);
  uint64_t v61 = v82 + *(int *)(v81 + 36);
  uint64_t v62 = v83;
  sub_1ACA3AAD4(v60, v83, &qword_1E99F4540);
  sub_1ACA3AAD4(v61, (uint64_t)v88, &qword_1EB772EA0);
  uint64_t v63 = v85;
  sub_1ACA3AAD4(v62, v85, &qword_1E99F4540);
  uint64_t v64 = (int *)v86;
  sub_1ACA3AAD4((uint64_t)v88, v63 + *(int *)(v86 + 36), &qword_1EB772EA0);
  uint64_t v65 = v63 + v64[10];
  *(void *)uint64_t v65 = "FetchTTMLFile";
  *(void *)(v65 + 8) = 13;
  *(unsigned char *)(v65 + 16) = 2;
  *(unsigned char *)(v63 + v64[12]) = 1;
  sub_1ACA50E78((uint64_t)v88, &qword_1EB772EA0);
  sub_1ACA50E78(v62, &qword_1E99F4540);
  uint64_t v66 = (void *)(v63 + v64[11]);
  *uint64_t v66 = 0;
  v66[1] = 0xE000000000000000;
  *(unsigned char *)(v63 + v64[13]) = 0;
  sub_1ACA50E14(v63, v87, &qword_1E99F44E0);
  return sub_1ACA50E78(v60, &qword_1E99F4540);
}

uint64_t sub_1ACC77BE0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v21 = a2;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4578);
  uint64_t v3 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4580);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  uint64_t v20 = v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F44B8);
  type metadata accessor for ShazamSignatureRequest();
  sub_1ACA51EA4(&qword_1E99F44D8, &qword_1E99F44B8);
  sub_1ACE75AE8();
  sub_1ACC74C68(a1, (uint64_t)v22);
  uint64_t v10 = swift_allocObject();
  memcpy((void *)(v10 + 16), v22, 0x168uLL);
  sub_1ACE757D8();
  sub_1ACA50D4C(0, &qword_1E99F13D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4588);
  sub_1ACA51EA4(&qword_1E99F4590, &qword_1E99F4578);
  sub_1ACA51EA4(&qword_1E99F4598, &qword_1E99F4588);
  uint64_t v11 = v18;
  sub_1ACE75C78();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v11);
  sub_1ACC74C68(v17, (uint64_t)v22);
  uint64_t v12 = swift_allocObject();
  memcpy((void *)(v12 + 16), v22, 0x168uLL);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1ACC79CF0;
  *(void *)(v13 + 24) = v12;
  sub_1ACA50D4C(0, &qword_1E99F2748);
  sub_1ACA51EA4(&qword_1E99F45A0, &qword_1E99F4580);
  uint64_t v14 = v19;
  sub_1ACE75AE8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v9, v14);
}

uint64_t sub_1ACC77FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F44C8);
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = *(int *)(v5 + 56);
  uint64_t v12 = (char *)&v16 + v11 - v9;
  uint64_t v13 = a1 + v11;
  sub_1ACA3AAD4(a1, (uint64_t)&v16 - v9, &qword_1E99F4568);
  sub_1ACA3AAD4(v13, (uint64_t)v12, &qword_1E99F4570);
  uint64_t v14 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_1ACA50E14((uint64_t)v10, (uint64_t)v7, &qword_1E99F4568);
  sub_1ACA50E14((uint64_t)v12, v14, &qword_1E99F4570);
  sub_1ACA3AAD4((uint64_t)v7, a2, &qword_1E99F4568);
  return sub_1ACA50E78((uint64_t)v7, &qword_1E99F44C8);
}

uint64_t sub_1ACC780EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v87 = a2;
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4588);
  MEMORY[0x1F4188790](v86);
  uint64_t v85 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F45A8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v83 = (uint64_t)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v84 = (uint64_t)&v68 - v8;
  uint64_t v9 = type metadata accessor for ShazamSignatureRequest();
  MEMORY[0x1F4188790](v9);
  *(void *)&long long v80 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F45B0);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F45B8);
  MEMORY[0x1F4188790](v75);
  *(void *)&long long v76 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v68 - v17;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F45C0);
  MEMORY[0x1F4188790](v73);
  uint64_t v74 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v79 = (uint64_t)&v68 - v21;
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F45C8);
  MEMORY[0x1F4188790](v77);
  uint64_t v78 = (uint64_t)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v2[34];
  uint64_t v24 = v2[35];
  sub_1ACC799B8(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  uint64_t v25 = *(int *)(v12 + 60);
  uint64_t v26 = (uint64_t)v14;
  uint64_t v27 = &v14[v25];
  *(void *)uint64_t v27 = v23;
  *((void *)v27 + 1) = v24;
  uint64_t v72 = v24;
  uint64_t v81 = v9;
  uint64_t v82 = a1;
  if (*(unsigned char *)(a1 + *(int *)(v9 + 32)))
  {
    uint64_t v28 = v2 + 8;
    uint64_t v29 = v2 + 9;
    uint64_t v30 = v2 + 10;
    char v31 = v2 + 11;
    uint64_t v32 = v2 + 12;
    uint64_t v33 = v2 + 13;
    uint64_t v34 = v2 + 14;
    uint64_t v35 = v2 + 15;
  }
  else
  {
    uint64_t v28 = v2 + 24;
    uint64_t v29 = v2 + 25;
    uint64_t v30 = v2 + 26;
    char v31 = v2 + 27;
    uint64_t v32 = v2 + 28;
    uint64_t v33 = v2 + 29;
    uint64_t v34 = v2 + 30;
    uint64_t v35 = v2 + 31;
  }
  uint64_t v36 = *v35;
  uint64_t v71 = *v34;
  uint64_t v37 = *v33;
  uint64_t v69 = *v32;
  uint64_t v38 = *v31;
  uint64_t v39 = *v30;
  uint64_t v40 = *v29;
  uint64_t v41 = *v28;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v42 = v26;
  sub_1ACA3AAD4(v26, (uint64_t)v18, &qword_1E99F45B0);
  uint64_t v43 = (uint64_t)v18;
  uint64_t v44 = (int *)v75;
  uint64_t v45 = v43 + *(int *)(v75 + 80);
  uint64_t v70 = type metadata accessor for ShazamSignatureRequest;
  sub_1ACC799B8(v42, v45, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  uint64_t v46 = (void *)(v43 + v44[19]);
  *uint64_t v46 = v41;
  v46[1] = v40;
  v46[2] = v39;
  v46[3] = v38;
  v46[4] = v69;
  v46[5] = v37;
  v46[6] = v71;
  v46[7] = v36;
  *(unsigned char *)(v43 + v44[21]) = 1;
  swift_retain();
  sub_1ACA50E78(v42, &qword_1E99F45B0);
  uint64_t v47 = v2[43];
  uint64_t v48 = v76;
  sub_1ACA3AAD4(v43, v76, &qword_1E99F45B8);
  uint64_t v49 = v73;
  uint64_t v50 = (uint64_t)v74;
  *(void *)&v74[*(int *)(v73 + 48)] = v47;
  sub_1ACA3AAD4(v48, v50 + *(int *)(v49 + 44), &qword_1E99F45B8);
  uint64_t v51 = v80;
  uint64_t v52 = v70;
  sub_1ACC799B8(v48 + v44[20], v80, (uint64_t (*)(void))v70);
  swift_retain();
  sub_1ACA50E78(v48, &qword_1E99F45B8);
  sub_1ACC75CDC(v51, v50, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  uint64_t v53 = v50;
  uint64_t v54 = v79;
  sub_1ACA50E14(v53, v79, &qword_1E99F45C0);
  sub_1ACA50E78(v43, &qword_1E99F45B8);
  uint64_t v55 = v2[24];
  uint64_t v56 = v2[31];
  uint64_t v57 = v78;
  sub_1ACA3AAD4(v54, v78, &qword_1E99F45C0);
  uint64_t v58 = v77;
  sub_1ACC799B8(v54, v57 + *(int *)(v77 + 80), (uint64_t (*)(void))v52);
  uint64_t v59 = v57 + *(int *)(v58 + 76);
  *(void *)uint64_t v59 = v55;
  *(_OWORD *)(v59 + 8) = *(_OWORD *)(v2 + 25);
  long long v76 = *(_OWORD *)(v2 + 27);
  *(_OWORD *)(v59 + 24) = v76;
  long long v80 = *(_OWORD *)(v2 + 29);
  *(_OWORD *)(v59 + 40) = v80;
  *(void *)(v59 + 56) = v56;
  *(unsigned char *)(v57 + *(int *)(v58 + 84)) = 1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1ACA50E78(v54, &qword_1E99F45C0);
  uint64_t v60 = v84;
  sub_1ACD4F980(v84);
  sub_1ACA50E78(v57, &qword_1E99F45C8);
  uint64_t v61 = v82 + *(int *)(v81 + 36);
  uint64_t v62 = v83;
  sub_1ACA3AAD4(v60, v83, &qword_1E99F45A8);
  sub_1ACA3AAD4(v61, (uint64_t)v88, &qword_1EB772EA0);
  uint64_t v63 = v85;
  sub_1ACA3AAD4(v62, v85, &qword_1E99F45A8);
  uint64_t v64 = (int *)v86;
  sub_1ACA3AAD4((uint64_t)v88, v63 + *(int *)(v86 + 36), &qword_1EB772EA0);
  uint64_t v65 = v63 + v64[10];
  *(void *)uint64_t v65 = "FetchShazamSignature";
  *(void *)(v65 + 8) = 20;
  *(unsigned char *)(v65 + 16) = 2;
  *(unsigned char *)(v63 + v64[12]) = 1;
  sub_1ACA50E78((uint64_t)v88, &qword_1EB772EA0);
  sub_1ACA50E78(v62, &qword_1E99F45A8);
  uint64_t v66 = (void *)(v63 + v64[11]);
  *uint64_t v66 = 0;
  v66[1] = 0xE000000000000000;
  *(unsigned char *)(v63 + v64[13]) = 0;
  sub_1ACA50E14(v63, v87, &qword_1E99F4588);
  return sub_1ACA50E78(v60, &qword_1E99F45A8);
}

id sub_1ACC787D0(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84830;
  *(void *)(inited + 32) = a1;
  unint64_t v6 = inited;
  sub_1ACE76598();
  id v3 = a1;
  id v4 = sub_1ACA7CC20(v6);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1ACC78A20@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(unsigned char *)(a2 + 16) & 1;
  uint64_t v5 = *a1;
  *(void *)a3 = *a1;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a2;
  *(void *)(a3 + 24) = v4;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a3 + 32) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a3 + 48) = v6;
  *(unsigned char *)(a3 + 64) = 2;
  id v7 = v5;
  return sub_1ACC79B90(a2);
}

uint64_t sub_1ACC78A88@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  *(void *)a3 = a2;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(void *)(a3 + 24) = v3;
  *(void *)(a3 + 32) = v4;
  *(void *)(a3 + 40) = v5;
  *(void *)(a3 + 48) = v6;
  *(void *)(a3 + 56) = v7;
  *(unsigned char *)(a3 + 64) = 2;
  id v8 = a2;
  sub_1ACA3985C(v4, v5);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACC78B04@<X0>(uint64_t a1@<X0>, void **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  id v8 = *a2;
  *(void *)a3 = *a2;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(void *)(a3 + 24) = v3;
  *(void *)(a3 + 32) = v4;
  *(void *)(a3 + 40) = v5;
  *(void *)(a3 + 48) = v6;
  *(void *)(a3 + 56) = v7;
  *(unsigned char *)(a3 + 64) = 2;
  id v9 = v8;
  sub_1ACA3985C(v4, v5);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

id sub_1ACC78B84@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1;
  *(void *)a2 = v2;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 49) = 0u;
  return v2;
}

uint64_t sub_1ACC78BA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v15[-v10];
  uint64_t v12 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F44C8) + 48);
  sub_1ACA3AAD4(a1, (uint64_t)v11, &qword_1EB7731B0);
  uint64_t v18 = a2;
  sub_1ACC736AC((void (*)(char *))sub_1ACC79D80, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, a3);
  sub_1ACA50E78((uint64_t)v11, &qword_1EB7731B0);
  uint64_t v13 = type metadata accessor for TranscriptData.TimeBombedURLs();
  sub_1ACA3AAD4(a1 + *(int *)(v13 + 20), (uint64_t)v8, &qword_1EB7731B0);
  uint64_t v16 = a2;
  sub_1ACC736AC((void (*)(char *))sub_1ACC79DCC, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TTMLRequest, v12);
  return sub_1ACA50E78((uint64_t)v8, &qword_1EB7731B0);
}

uint64_t sub_1ACC78D34@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(void)@<X3>, char a4@<W4>, uint64_t (*a5)(void)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v27 = a5;
  uint64_t v26 = a6;
  uint64_t v9 = a3(0);
  uint64_t v10 = (int *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1ACE74F28();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a1, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  sub_1ACA3AAD4((uint64_t)v15, (uint64_t)v12, &qword_1EB7731B0);
  LOBYTE(v17) = *((unsigned char *)a2 + 24);
  uint64_t v18 = a2[2];
  uint64_t v28 = a2[1];
  uint64_t v29 = v18;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  uint64_t v30 = *a2;
  sub_1ACA55E4C();
  sub_1ACE770B8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v19 = v28;
  uint64_t v20 = v29;
  uint64_t v21 = (uint64_t)&v12[v10[11]];
  *(_OWORD *)uint64_t v21 = 0u;
  *(_OWORD *)(v21 + 16) = 0u;
  *(void *)(v21 + 32) = 0;
  v12[v10[7]] = v17;
  char v22 = *((unsigned char *)a2 + 25);
  uint64_t v23 = &v12[v10[8]];
  *(void *)uint64_t v23 = v19;
  *((void *)v23 + 1) = v20;
  v12[v10[10]] = v22;
  v12[v10[9]] = a4;
  sub_1ACBB13C4((uint64_t)(a2 + 4), v21);
  sub_1ACC75CDC((uint64_t)v12, v26, v27);
  return sub_1ACA50E78((uint64_t)v15, &qword_1EB7731B0);
}

uint64_t sub_1ACC78F60()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 352);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACC7A008(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1ACC78FC8(uint64_t a1)
{
  return TimeBombedTranscriptProvider.invalidate(for:)(a1) & 1;
}

uint64_t static TranscriptProviderError.== infix(_:_:)()
{
  return 1;
}

uint64_t TranscriptProviderError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t TranscriptProviderError.hashValue.getter()
{
  return sub_1ACE77B78();
}

unint64_t sub_1ACC7905C()
{
  unint64_t result = qword_1E99F4430;
  if (!qword_1E99F4430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4430);
  }
  return result;
}

uint64_t destroy for TimeBombedTranscriptProvider(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a1 + 288);

  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for TimeBombedTranscriptProvider(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  uint64_t v4 = *(void *)(a2 + 272);
  uint64_t v5 = *(void *)(a2 + 280);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v4;
  *(void *)(a1 + 280) = v5;
  uint64_t v6 = a1 + 288;
  uint64_t v8 = *(void *)(a2 + 312);
  uint64_t v7 = *(void *)(a2 + 320);
  *(void *)(a1 + 312) = v8;
  *(void *)(a1 + 320) = v7;
  uint64_t v9 = a2 + 288;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v10(v6, v9, v8);
  uint64_t v11 = *(void **)(a2 + 328);
  uint64_t v12 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = v11;
  *(void *)(a1 + 336) = v12;
  uint64_t v14 = *(void *)(a2 + 344);
  uint64_t v13 = *(void *)(a2 + 352);
  *(void *)(a1 + 344) = v14;
  *(void *)(a1 + 352) = v13;
  id v15 = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for TimeBombedTranscriptProvider(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_retain();
  swift_release();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_retain();
  swift_release();
  uint64_t v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_retain();
  swift_release();
  uint64_t v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_retain();
  swift_release();
  uint64_t v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  swift_retain();
  swift_release();
  uint64_t v16 = a2[25];
  a1[24] = a2[24];
  a1[25] = v16;
  swift_retain();
  swift_release();
  uint64_t v17 = a2[27];
  a1[26] = a2[26];
  a1[27] = v17;
  swift_retain();
  swift_release();
  uint64_t v18 = a2[29];
  a1[28] = a2[28];
  a1[29] = v18;
  swift_retain();
  swift_release();
  uint64_t v19 = a2[31];
  a1[30] = a2[30];
  a1[31] = v19;
  swift_retain();
  swift_release();
  uint64_t v20 = a2[33];
  a1[32] = a2[32];
  a1[33] = v20;
  swift_retain();
  swift_release();
  uint64_t v21 = a2[35];
  a1[34] = a2[34];
  a1[35] = v21;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 36, a2 + 36);
  char v22 = (void *)a2[41];
  uint64_t v23 = (void *)a1[41];
  a1[41] = v22;
  id v24 = v22;

  a1[42] = a2[42];
  swift_retain();
  swift_release();
  a1[43] = a2[43];
  swift_retain();
  swift_release();
  a1[44] = a2[44];
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy360_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x168uLL);
}

uint64_t assignWithTake for TimeBombedTranscriptProvider(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_release();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_release();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_release();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_release();
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  swift_release();
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  swift_release();
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  swift_release();
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  swift_release();
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  swift_release();
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  swift_release();
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  swift_release();
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a1 + 288);
  long long v4 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v4;
  uint64_t v5 = *(void *)(a2 + 328);
  uint64_t v6 = *(void **)(a1 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v5;

  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_release();
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_release();
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeBombedTranscriptProvider(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 360)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TimeBombedTranscriptProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 360) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 360) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeBombedTranscriptProvider()
{
  return &type metadata for TimeBombedTranscriptProvider;
}

unsigned char *storeEnumTagSinglePayload for TranscriptProviderError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACC79980);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptProviderError()
{
  return &type metadata for TranscriptProviderError;
}

uint64_t sub_1ACC799B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACC79A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  if (a6)
  {
    sub_1ACA50850(a4, a5);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACC79A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  if (a6)
  {
    sub_1ACA3985C(a4, a5);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1ACC79ACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACC78BA4(a1, v2 + 16, a2);
}

uint64_t sub_1ACC79AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACC774FC(a1, a2);
}

uint64_t sub_1ACC79B00()
{
  return swift_deallocObject();
}

uint64_t sub_1ACC79B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACC78A88(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1ACC79B40()
{
  sub_1ACA50850(*(void *)(v0 + 40), *(void *)(v0 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACC79B88@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACC78A20(a1, v2 + 16, a2);
}

uint64_t sub_1ACC79B90(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACC79BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACC780EC(a1, a2);
}

uint64_t objectdestroy_13Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 304);

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

id sub_1ACC79CF0(void *a1)
{
  return sub_1ACC787D0(a1);
}

uint64_t sub_1ACC79D14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC79D4C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1ACC79D80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACC78D34(a1, *(uint64_t **)(v2 + 16), (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, 6, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, a2);
}

uint64_t sub_1ACC79DCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACC78D34(a1, *(uint64_t **)(v2 + 16), (uint64_t (*)(void))type metadata accessor for TTMLRequest, 7, (uint64_t (*)(void))type metadata accessor for TTMLRequest, a2);
}

uint64_t sub_1ACC79E18()
{
  uint64_t v1 = sub_1ACE75118();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 376) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 304);

  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1ACC79F94(uint64_t a1)
{
  sub_1ACE75118();
  sub_1ACC74644(a1, v1 + 16);
}

uint64_t sub_1ACC7A008@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACC741A4(a1, a2);
}

uint64_t EpisodeStatePersistentHistoryTracker.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  EpisodeStatePersistentHistoryTracker.init()();
  return v0;
}

Swift::Void __swiftcall EpisodeStatePersistentHistoryTracker.startTrackingChanges()()
{
  uint64_t v1 = *(NSObject **)(v0 + 24);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1ACC70410;
  *(void *)(v2 + 24) = v0;
  v4[4] = sub_1ACADC690;
  v4[5] = v2;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 1107296256;
  long long v4[2] = sub_1ACC525DC;
  v4[3] = &block_descriptor_50;
  unint64_t v3 = _Block_copy(v4);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v1) {
    __break(1u);
  }
}

uint64_t sub_1ACC7A190()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE754C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E99EFFD8 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1E99F2DE8);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  swift_retain_n();
  uint64_t v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76BD8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v15 = v9 + 4;
    id v16 = *(id *)(v1 + 40);
    uint64_t v17 = v10;
    id v11 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768F10);
    uint64_t v12 = sub_1ACE76228();
    id v16 = (id)sub_1ACA3189C(v12, v13, &v17);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v7, v8, "New persistent history token %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v10, -1, -1);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void *EpisodeStatePersistentHistoryTracker.init()()
{
  uint64_t v1 = v0;
  v15[0] = sub_1ACE76CE8();
  uint64_t v2 = *(void *)(v15[0] - 8);
  MEMORY[0x1F4188790](v15[0]);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768DE8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE759D8();
  sub_1ACA51EA4(&qword_1EB768DE0, &qword_1EB768DE8);
  uint64_t v11 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  void v1[2] = v11;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACE75E08();
  v15[1] = MEMORY[0x1E4FBC860];
  sub_1ACC7DE94((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, void))(v2 + 104))(v4, *MEMORY[0x1E4FBCC58], v15[0]);
  v1[3] = sub_1ACE76D28();
  id v12 = objc_msgSend(self, sel_sharedInstance);
  id v13 = objc_msgSend(v12, sel_storeContext);

  v1[4] = v13;
  v1[5] = 0;
  return v1;
}

id *EpisodeStatePersistentHistoryTracker.deinit()
{
  swift_release();

  return v0;
}

uint64_t EpisodeStatePersistentHistoryTracker.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1ACC7A848(uint64_t a1)
{
  uint64_t v98 = a1;
  uint64_t v1 = (void *)sub_1ACE754C8();
  uint64_t v96 = *(v1 - 1);
  id v97 = v1;
  MEMORY[0x1F4188790](v1);
  long long v95 = (char *)&v77 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v94 = (char *)&v77 - v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v88 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE76E78();
  uint64_t v89 = *(void *)(v7 - 8);
  uint64_t v90 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768D78);
  uint64_t v91 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768CF8);
  uint64_t v92 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768D38);
  uint64_t v93 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D658);
  uint64_t v20 = *(char **)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  char v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768C58);
  *(void *)&double v27 = MEMORY[0x1F4188790](v23).n128_u64[0];
  if (*(void *)(v98 + 40))
  {
    uint64_t v28 = v96;
    if (qword_1E99EFFD8 != -1) {
      swift_once();
    }
    id v29 = v97;
    uint64_t v30 = __swift_project_value_buffer((uint64_t)v97, (uint64_t)qword_1E99F2DE8);
    swift_beginAccess();
    char v31 = v95;
    (*(void (**)(char *, uint64_t, id))(v28 + 16))(v95, v30, v29);
    swift_retain_n();
    uint64_t v32 = sub_1ACE75498();
    os_log_type_t v33 = sub_1ACE76BD8();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136315138;
      id v99 = *(id *)(v98 + 40);
      uint64_t v100 = v35;
      id v36 = v99;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768F10);
      uint64_t v37 = sub_1ACE76228();
      id v99 = (id)sub_1ACA3189C(v37, v38, &v100);
      sub_1ACE76FF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v32, v33, "Skipping startTrackingChanges(): Already tracking changes with current token: %s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v35, -1, -1);
      MEMORY[0x1AD11B340](v34, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return (*(uint64_t (**)(char *, id))(v28 + 8))(v31, v97);
  }
  else
  {
    uint64_t v78 = v9;
    uint64_t v79 = v12;
    long long v80 = v15;
    uint64_t v81 = v13;
    uint64_t v82 = v18;
    uint64_t v83 = (char *)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v84 = v22;
    uint64_t v85 = v16;
    uint64_t v86 = v26;
    uint64_t v87 = v24;
    long long v95 = v20;
    uint64_t v40 = *(void **)(v98 + 32);
    id v41 = objc_msgSend(v40, sel_persistentStoreCoordinator, v27);
    if (v41
      && (uint64_t v42 = v41,
          id v43 = objc_msgSend(v41, sel_currentPersistentHistoryTokenFromStores_, 0),
          v42,
          v43))
    {
      uint64_t v44 = v98;
      uint64_t v45 = *(void **)(v98 + 40);
      *(void *)(v98 + 40) = v43;
      id v46 = v43;
      id v97 = v46;

      sub_1ACC7A190();
      id v47 = objc_msgSend(self, sel_defaultCenter);
      uint64_t v48 = v78;
      sub_1ACE76E88();

      id v101 = *(id *)(v44 + 24);
      id v49 = v101;
      uint64_t v50 = sub_1ACE76CA8();
      uint64_t v51 = (uint64_t)v88;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v88, 1, 1, v50);
      sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
      sub_1ACC7DE94((unint64_t *)&qword_1EB768EF8, MEMORY[0x1E4F27FC8]);
      sub_1ACC42D88((unint64_t *)&qword_1EB7669D0, (unint64_t *)&qword_1EB7734B0);
      id v52 = v49;
      uint64_t v53 = v79;
      uint64_t v54 = v90;
      sub_1ACE75CA8();
      sub_1ACA50E78(v51, &qword_1EB7669C8);

      (*(void (**)(char *, uint64_t))(v89 + 8))(v48, v54);
      swift_allocObject();
      swift_weakInit();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E70);
      sub_1ACA51EA4(&qword_1EB768D70, &qword_1EB768D78);
      uint64_t v55 = v80;
      sub_1ACE75B58();
      swift_release();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v53, v10);
      sub_1ACE757D8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768D48);
      sub_1ACA51EA4(&qword_1EB768CF0, &qword_1EB768CF8);
      sub_1ACA51EA4(&qword_1EB768D40, &qword_1EB768D48);
      uint64_t v56 = v82;
      uint64_t v57 = v81;
      sub_1ACE75D98();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v55, v57);
      swift_allocObject();
      swift_weakInit();
      sub_1ACA51EA4(&qword_1EB768D30, &qword_1EB768D38);
      uint64_t v59 = v84;
      uint64_t v58 = v85;
      sub_1ACE75AE8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v56, v58);
      swift_allocObject();
      swift_weakInit();
      uint64_t v60 = v83;
      sub_1ACE75568();
      swift_release();
      (*((void (**)(char *, uint64_t))v95 + 1))(v59, v19);
      uint64_t v61 = sub_1ACA95664();

      (*(void (**)(char *, uint64_t))(v86 + 8))(v60, v87);
      *(void *)(v44 + 16) = v61;
      return swift_release();
    }
    else
    {
      if (qword_1E99EFFD8 != -1) {
        swift_once();
      }
      id v62 = v97;
      uint64_t v63 = __swift_project_value_buffer((uint64_t)v97, (uint64_t)qword_1E99F2DE8);
      swift_beginAccess();
      uint64_t v64 = v96;
      uint64_t v65 = v94;
      (*(void (**)(char *, uint64_t, id))(v96 + 16))(v94, v63, v62);
      swift_retain_n();
      uint64_t v66 = sub_1ACE75498();
      os_log_type_t v67 = sub_1ACE76BE8();
      if (os_log_type_enabled(v66, v67))
      {
        uint64_t v68 = swift_slowAlloc();
        uint64_t v69 = swift_slowAlloc();
        uint64_t v100 = v69;
        *(_DWORD *)uint64_t v68 = 136315394;
        id v99 = objc_msgSend(v40, sel_persistentStoreCoordinator);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F45D8);
        uint64_t v70 = sub_1ACE76228();
        id v99 = (id)sub_1ACA3189C(v70, v71, &v100);
        sub_1ACE76FF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v68 + 12) = 2080;
        id v72 = objc_msgSend(v40, sel_persistentStoreCoordinator);
        if (v72)
        {
          uint64_t v73 = v72;
          id v74 = objc_msgSend(v72, sel_currentPersistentHistoryTokenFromStores_, 0);
        }
        else
        {
          id v74 = 0;
        }
        id v99 = v74;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768F10);
        uint64_t v75 = sub_1ACE76228();
        id v99 = (id)sub_1ACA3189C(v75, v76, &v100);
        sub_1ACE76FF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v66, v67, "Unable to fetch initial Persistent History Token, we can't monitor changes from EpisodeStateRepository. persistentStoreCoordinator %s, token %s", (uint8_t *)v68, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v69, -1, -1);
        MEMORY[0x1AD11B340](v68, -1, -1);

        return (*(uint64_t (**)(char *, id))(v96 + 8))(v65, v97);
      }
      else
      {

        swift_release_n();
        return (*(uint64_t (**)(char *, id))(v64 + 8))(v65, v97);
      }
    }
  }
}

uint64_t sub_1ACC7B604()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for EpisodeStatePersistentHistoryTracker()
{
  return self;
}

uint64_t method lookup function for EpisodeStatePersistentHistoryTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EpisodeStatePersistentHistoryTracker);
}

uint64_t dispatch thunk of EpisodeStatePersistentHistoryTracker.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1ACC7B664@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unint64_t v3 = sub_1ACC7B6E0();
    uint64_t result = swift_release();
  }
  else
  {
    unint64_t v3 = MEMORY[0x1E4FBC860];
  }
  *a1 = v3;
  return result;
}

unint64_t sub_1ACC7B6E0()
{
  v82[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)sub_1ACE754C8();
  uint64_t v79 = *(v1 - 1);
  MEMORY[0x1F4188790](v1);
  unint64_t v3 = &v72[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v72[-v5];
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v72[-v8];
  uint64_t v10 = sub_1ACE75EC8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v72[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v14 = objc_msgSend(self, sel_fetchHistoryAfterToken_, v0[5]);
  uint64_t v15 = (void *)v0[4];
  v82[0] = 0;
  id v78 = v14;
  id v16 = objc_msgSend(v15, sel_executeRequest_error_);
  id v17 = v82[0];
  if (!v16)
  {
    char v22 = v1;
    id v23 = v82[0];
    uint64_t v24 = (void *)sub_1ACE74D78();

    uint64_t v1 = v22;
    swift_willThrow();

LABEL_7:
    uint64_t v26 = v79;
    if (qword_1E99EFFD8 != -1) {
      swift_once();
    }
    uint64_t v27 = __swift_project_value_buffer((uint64_t)v1, (uint64_t)qword_1E99F2DE8);
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, void *))(v26 + 16))(v3, v27, v1);
    uint64_t v28 = v78;
    id v29 = sub_1ACE75498();
    os_log_type_t v30 = sub_1ACE76BE8();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v77 = v1;
      char v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = (void *)swift_slowAlloc();
      *(_DWORD *)char v31 = 138412290;
      *(void *)&v81[0] = v28;
      os_log_type_t v33 = v28;
      sub_1ACE76FF8();
      void *v32 = v28;

      uint64_t v1 = v77;
      uint64_t v26 = v79;
      _os_log_impl(&dword_1AC9D5000, v29, v30, "Cannot execute fetchHistoryRequest: %@", v31, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v32, -1, -1);
      MEMORY[0x1AD11B340](v31, -1, -1);
    }
    else
    {

      id v29 = v28;
    }

    (*(void (**)(unsigned char *, void *))(v26 + 8))(v3, v1);
    goto LABEL_32;
  }
  uint64_t v18 = v16;
  self;
  uint64_t v19 = swift_dynamicCastObjCClass();
  if (!v19)
  {
    id v25 = v17;

    goto LABEL_7;
  }
  uint64_t v20 = (void *)v19;
  id v21 = v17;
  unint64_t v76 = v20;
  if (objc_msgSend(v20, sel_result))
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v81, 0, sizeof(v81));
  }
  sub_1ACA9D6FC((uint64_t)v81, (uint64_t)v82);
  if (!v82[3])
  {
    sub_1ACA50E78((uint64_t)v82, qword_1EB7725E0);
    goto LABEL_26;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E70);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_26:
    uint64_t v42 = v79;
    if (qword_1E99EFFD8 != -1) {
      swift_once();
    }
    uint64_t v43 = __swift_project_value_buffer((uint64_t)v1, (uint64_t)qword_1E99F2DE8);
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, void *))(v42 + 16))(v6, v43, v1);
    uint64_t v28 = v18;
    uint64_t v44 = sub_1ACE75498();
    os_log_type_t v45 = sub_1ACE76BE8();
    int v46 = v45;
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v48 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 138412546;
      LODWORD(v77) = v46;
      id v49 = v76;
      *(void *)&v81[0] = v76;
      uint64_t v28 = v28;
      sub_1ACE76FF8();
      *uint64_t v48 = v49;

      *(_WORD *)(v47 + 12) = 2048;
      id v50 = objc_msgSend(v49, sel_resultType);

      *(void *)&v81[0] = v50;
      sub_1ACE76FF8();

      _os_log_impl(&dword_1AC9D5000, v44, (os_log_type_t)v77, "NSPersistentHistoryResult.result does not contain an array of transactions: HistoryResult: %@; resultType %ld",
        (uint8_t *)v47,
        0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v48, -1, -1);
      MEMORY[0x1AD11B340](v47, -1, -1);

      (*(void (**)(unsigned char *, void *))(v79 + 8))(v6, v1);
    }
    else
    {

      (*(void (**)(unsigned char *, void *))(v42 + 8))(v6, v1);
    }
    goto LABEL_31;
  }
  unint64_t v34 = v80;
  if (!(v80 >> 62))
  {
    uint64_t v35 = *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v35) {
      goto LABEL_18;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    if (qword_1E99EFFD8 == -1) {
      goto LABEL_36;
    }
    goto LABEL_44;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1ACE77508();
  if (!v35) {
    goto LABEL_35;
  }
LABEL_18:
  unint64_t v36 = v35 - 1;
  if (__OFSUB__(v35, 1))
  {
    __break(1u);
  }
  else if ((v34 & 0xC000000000000001) == 0)
  {
    if ((v36 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v36 < *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v37 = *(id *)(v34 + 8 * v36 + 32);
      goto LABEL_23;
    }
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v37 = (void *)MEMORY[0x1AD119490](v36, v34);
LABEL_23:
  uint64_t v1 = v37;
  swift_bridgeObjectRelease();
  unint64_t v38 = (void *)v0[3];
  *uint64_t v13 = v38;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCBF0], v10);
  id v39 = v38;
  LOBYTE(v38) = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if ((v38 & 1) == 0)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    swift_once();
LABEL_36:
    uint64_t v52 = __swift_project_value_buffer((uint64_t)v1, (uint64_t)qword_1E99F2DE8);
    swift_beginAccess();
    uint64_t v53 = v79;
    (*(void (**)(unsigned char *, uint64_t, void *))(v79 + 16))(v9, v52, v1);
    id v54 = v18;
    swift_bridgeObjectRetain();
    uint64_t v28 = v54;
    uint64_t v55 = sub_1ACE75498();
    os_log_type_t v56 = sub_1ACE76BE8();
    int v57 = v56;
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v58 = swift_slowAlloc();
      id v74 = (void *)swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      *(void *)&v81[0] = v75;
      *(_DWORD *)uint64_t v58 = 136315394;
      uint64_t v59 = sub_1ACA50D4C(0, (unint64_t *)&unk_1EB768F40);
      uint64_t v77 = v1;
      uint64_t v60 = v59;
      uint64_t v61 = swift_bridgeObjectRetain();
      uint64_t v62 = MEMORY[0x1AD118740](v61, v60);
      int v73 = v57;
      unint64_t v64 = v63;
      swift_bridgeObjectRelease();
      unint64_t v80 = sub_1ACA3189C(v62, v64, (uint64_t *)v81);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v58 + 12) = 2112;
      uint64_t v65 = v55;
      uint64_t v66 = v76;
      unint64_t v80 = (unint64_t)v76;
      os_log_type_t v67 = v28;
      uint64_t v68 = v28;
      sub_1ACE76FF8();
      uint64_t v69 = v74;
      *id v74 = v66;

      uint64_t v28 = v67;
      uint64_t v70 = v65;
      _os_log_impl(&dword_1AC9D5000, v65, (os_log_type_t)v73, "NSPersistentHistoryResult.result contains an empty list of transactions: historyTransactions: %s; historyResult: %@",
        (uint8_t *)v58,
        0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v69, -1, -1);
      uint64_t v71 = v75;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v71, -1, -1);
      MEMORY[0x1AD11B340](v58, -1, -1);

      (*(void (**)(unsigned char *, void *))(v53 + 8))(v9, v77);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, void *))(v53 + 8))(v9, v1);
    }
LABEL_31:

LABEL_32:
    unint64_t v34 = MEMORY[0x1E4FBC860];
    goto LABEL_33;
  }
  id v40 = objc_msgSend(v1, sel_token);
  id v41 = (void *)v0[5];
  v0[5] = v40;
  uint64_t v28 = v40;

  sub_1ACC7A190();
LABEL_33:

  return v34;
}

uint64_t sub_1ACC7C190()
{
  return sub_1ACE763B8();
}

uint64_t sub_1ACC7C214@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = sub_1ACC7EAFC(v3);
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
    uint64_t v9 = 0;
    uint64_t v11 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v11;
  return result;
}

uint64_t sub_1ACC7C2B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1ACC7C35C(v3, v4, v5, v6, (uint64_t)&v10);
    uint64_t result = swift_release();
    long long v8 = v10;
    uint64_t v9 = v11;
  }
  else
  {
    uint64_t v9 = 0;
    long long v8 = 0uLL;
  }
  *(_OWORD *)a2 = v8;
  *(void *)(a2 + 16) = v9;
  return result;
}

uint64_t sub_1ACC7C35C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = qword_1EB7675D0;
  id v9 = a1;
  if (v8 != -1) {
    swift_once();
  }
  long long v20 = xmmword_1EB7675B0;
  uint64_t v21 = qword_1EB7675C0;
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v10;
  _OWORD v11[3] = v9;
  void v11[4] = a2;
  id v11[5] = a3;
  void v11[6] = a4;
  v11[7] = v9;
  v11[8] = &v20;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1ACC7DF8C;
  *(void *)(v12 + 24) = v11;
  aBlock[4] = sub_1ACB58DC4;
  void aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC525DC;
  aBlock[3] = &block_descriptor_18_1;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_performBlockAndWait_, v13);

  _Block_release(v13);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v13)
  {
    __break(1u);
  }
  else
  {
    uint64_t v16 = v21;
    long long v18 = v20;
    uint64_t result = swift_release();
    *(_OWORD *)a5 = v18;
    *(void *)(a5 + 16) = v16;
  }
  return result;
}

uint64_t sub_1ACC7C5B0(uint64_t *a1, id *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = sub_1ACE754C8();
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v8 = MEMORY[0x1F4188790](v6).n128_u64[0];
  uint64_t v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)*a2;
  id v12 = objc_msgSend(*a2, sel_updatedProperties, v8);
  if (!v12)
  {
    if (qword_1E99EFFD8 == -1)
    {
LABEL_7:
      uint64_t v17 = __swift_project_value_buffer(v6, (uint64_t)qword_1E99F2DE8);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v17, v6);
      long long v18 = (id)v11;
      uint64_t v19 = sub_1ACE75498();
      os_log_type_t v20 = sub_1ACE76BE8();
      if (os_log_type_enabled(v19, v20))
      {
        unint64_t v64 = v3;
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v66 = (void *)swift_slowAlloc();
        os_log_type_t v67 = v21;
        *(_DWORD *)uint64_t v21 = 138412290;
        uint64_t v65 = v21 + 4;
        uint64_t v69 = (uint64_t)v18;
        char v22 = v18;
        sub_1ACE76FF8();
        id v23 = v66;
        *uint64_t v66 = v18;

        os_log_type_t v24 = v20;
        id v25 = v67;
        _os_log_impl(&dword_1AC9D5000, v19, v24, "Skipping update change with no updated properties %@", v67, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v23, -1, -1);
        MEMORY[0x1AD11B340](v25, -1, -1);
      }
      else
      {

        uint64_t v19 = v18;
      }

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
LABEL_35:
    swift_once();
    goto LABEL_7;
  }
  uint64_t v13 = v12;
  id v62 = (id)v11;
  unint64_t v63 = a1;
  unint64_t v64 = v2;
  unint64_t v3 = 0x1E4F1C198uLL;
  sub_1ACA50D4C(0, &qword_1EB768F00);
  sub_1ACC42D88(&qword_1EB768F08, &qword_1EB768F00);
  uint64_t v6 = sub_1ACE76988();

  os_log_type_t v67 = (uint8_t *)(v6 & 0xC000000000000001);
  if ((v6 & 0xC000000000000001) != 0)
  {
    uint64_t v11 = sub_1ACE77178();
    if (v11) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x1E4FBC860];
LABEL_29:
    uint64_t v49 = sub_1ACB02BC0(v26);
    swift_bridgeObjectRelease();
    id v50 = v62;
    id v51 = objc_msgSend(v62, sel_changedObjectID);
    uint64_t v52 = v51;
    uint64_t v53 = v63;
    uint64_t v54 = *v63;
    if (*(void *)(*v63 + 16) && (unint64_t v55 = sub_1ACA66108((uint64_t)v51), (v56 & 1) != 0))
    {
      uint64_t v57 = *(void *)(*(void *)(v54 + 56) + 8 * v55);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v57 = MEMORY[0x1E4FBC870];
    }

    id v58 = objc_msgSend(v50, sel_changedObjectID);
    uint64_t v59 = sub_1ACB82050(v57, v49);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v68[0] = *v53;
    *uint64_t v53 = 0x8000000000000000;
    sub_1ACD0E7C0(v59, v58, isUniquelyReferenced_nonNull_native);
    *uint64_t v53 = v68[0];

    return swift_bridgeObjectRelease();
  }
  uint64_t v11 = *(void *)(v6 + 16);
  if (!v11) {
    goto LABEL_10;
  }
LABEL_4:
  uint64_t v72 = MEMORY[0x1E4FBC860];
  uint64_t v10 = (char *)&v72;
  sub_1ACC82D44(0, v11 & ~(v11 >> 63), 0);
  if (v67)
  {
    uint64_t v14 = sub_1ACE77128();
    unsigned __int8 v16 = 1;
  }
  else
  {
    uint64_t v14 = sub_1ACDC4144(v6);
    unsigned __int8 v16 = v28 & 1;
  }
  uint64_t v69 = v14;
  uint64_t v70 = v15;
  unsigned __int8 v71 = v16;
  if (v11 < 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v29 = v6 & 0xFFFFFFFFFFFFFF8;
  if (v6 < 0) {
    uint64_t v29 = v6;
  }
  uint64_t v65 = (uint8_t *)v29;
  uint64_t v66 = (void *)v6;
  while (1)
  {
    while (1)
    {
      uint64_t v35 = v69;
      uint64_t v36 = v70;
      uint64_t v37 = v71;
      sub_1ACDC3EC0(v69, v70, v71, v6);
      id v39 = v38;
      id v40 = objc_msgSend(v38, sel_name);
      uint64_t v41 = sub_1ACE761B8();
      uint64_t v43 = v42;

      uint64_t v44 = v72;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1ACC82D44(0, *(void *)(v44 + 16) + 1, 1);
        uint64_t v44 = v72;
      }
      unint64_t v46 = *(void *)(v44 + 16);
      unint64_t v45 = *(void *)(v44 + 24);
      if (v46 >= v45 >> 1)
      {
        uint64_t result = sub_1ACC82D44(v45 > 1, v46 + 1, 1);
        uint64_t v44 = v72;
      }
      *(void *)(v44 + 16) = v46 + 1;
      unint64_t v47 = v44 + 16 * v46;
      *(void *)(v47 + 32) = v41;
      *(void *)(v47 + 40) = v43;
      if (v67) {
        break;
      }
      uint64_t v6 = (uint64_t)v66;
      uint64_t v30 = sub_1ACDC3B6C(v35, v36, v37, v66);
      uint64_t v32 = v31;
      char v34 = v33;
      sub_1ACA6D674(v35, v36, v37);
      uint64_t v69 = v30;
      uint64_t v70 = v32;
      unsigned __int8 v71 = v34 & 1;
      if (!--v11) {
        goto LABEL_28;
      }
    }
    uint64_t v6 = (uint64_t)v66;
    if ((v37 & 1) == 0) {
      break;
    }
    if (sub_1ACE77148()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E88);
    uint64_t v48 = (void (*)(uint64_t *, void))sub_1ACE769E8();
    sub_1ACE771C8();
    v48(v68, 0);
    if (!--v11)
    {
LABEL_28:
      sub_1ACA6D674(v69, v70, v71);
      swift_bridgeObjectRelease();
      uint64_t v26 = v72;
      goto LABEL_29;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACC7CBF8@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1ACE754C8();
  uint64_t v50 = *(void *)(v5 - 8);
  *(void *)&double v6 = MEMORY[0x1F4188790](v5).n128_u64[0];
  double v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *a1;
  id v10 = objc_msgSend(*a1, sel_tombstone, v6);
  if (!v10)
  {
    long long v48 = 0u;
    long long v49 = 0u;
    uint64_t v15 = v50;
LABEL_14:
    sub_1ACA50E78((uint64_t)&v48, qword_1EB7725E0);
    goto LABEL_25;
  }
  uint64_t v11 = v10;
  uint64_t v12 = sub_1ACE75FF8();

  uint64_t v45 = sub_1ACE761B8();
  uint64_t v46 = v13;
  sub_1ACE771F8();
  if (*(void *)(v12 + 16))
  {
    unint64_t v14 = sub_1ACA65B48((uint64_t)v47);
    uint64_t v15 = v50;
    if (v16)
    {
      sub_1ACA33128(*(void *)(v12 + 56) + 32 * v14, (uint64_t)&v48);
    }
    else
    {
      long long v48 = 0u;
      long long v49 = 0u;
    }
  }
  else
  {
    long long v48 = 0u;
    long long v49 = 0u;
    uint64_t v15 = v50;
  }
  swift_bridgeObjectRelease();
  sub_1ACA6A0F8((uint64_t)v47);
  if (!*((void *)&v49 + 1)) {
    goto LABEL_14;
  }
  if (swift_dynamicCast())
  {
    uint64_t v17 = v5;
    long long v18 = (uint64_t *)v47[0];
    uint64_t v19 = v47[1];
    id v20 = objc_msgSend(v9, sel_tombstone);
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v43 = v18;
      uint64_t v22 = sub_1ACE75FF8();

      uint64_t v45 = sub_1ACE761B8();
      uint64_t v46 = v23;
      sub_1ACE771F8();
      if (*(void *)(v22 + 16))
      {
        unint64_t v24 = sub_1ACA65B48((uint64_t)v47);
        uint64_t v5 = v17;
        if (v25)
        {
          sub_1ACA33128(*(void *)(v22 + 56) + 32 * v24, (uint64_t)&v48);
        }
        else
        {
          long long v48 = 0u;
          long long v49 = 0u;
        }
      }
      else
      {
        long long v48 = 0u;
        long long v49 = 0u;
        uint64_t v5 = v17;
      }
      swift_bridgeObjectRelease();
      sub_1ACA6A0F8((uint64_t)v47);
      if (*((void *)&v49 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v26 = v47[0];
          if (objc_msgSend(self, sel_isEmpty_, v47[0]))
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769140);
            uint64_t result = swift_allocObject();
            *(_OWORD *)(result + 16) = xmmword_1ACE843F0;
            *(void *)(result + 32) = v43;
            *(void *)(result + 40) = v19;
            *(unsigned char *)(result + 48) = 1;
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769140);
            uint64_t result = swift_allocObject();
            *(_OWORD *)(result + 16) = xmmword_1ACE84820;
            *(void *)(result + 32) = v43;
            *(void *)(result + 40) = v19;
            *(unsigned char *)(result + 48) = 1;
            *(void *)(result + 56) = v26 & ~(v26 >> 63);
            *(void *)(result + 64) = 0;
            *(unsigned char *)(result + 72) = 0;
          }
          goto LABEL_33;
        }
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    else
    {
      long long v48 = 0u;
      long long v49 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1ACA50E78((uint64_t)&v48, qword_1EB7725E0);
LABEL_24:
    uint64_t v15 = v50;
  }
LABEL_25:
  if (qword_1E99EFFD8 != -1) {
    swift_once();
  }
  uint64_t v28 = __swift_project_value_buffer(v5, (uint64_t)qword_1E99F2DE8);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v8, v28, v5);
  id v29 = v9;
  uint64_t v30 = sub_1ACE75498();
  uint64_t v31 = v5;
  os_log_type_t v32 = sub_1ACE76BE8();
  if (os_log_type_enabled(v30, v32))
  {
    uint64_t v42 = v31;
    uint64_t v43 = a2;
    char v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(void *)&long long v48 = v34;
    *(_DWORD *)char v33 = 136315138;
    id v35 = objc_msgSend(v29, sel_tombstone);
    uint64_t v44 = v2;
    uint64_t v41 = v8;
    if (v35)
    {
      uint64_t v36 = v35;
      uint64_t v37 = sub_1ACE75FF8();
    }
    else
    {
      uint64_t v37 = 0;
    }
    uint64_t v45 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F45E8);
    uint64_t v38 = sub_1ACE76228();
    uint64_t v45 = sub_1ACA3189C(v38, v39, (uint64_t *)&v48);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v30, v32, "Tombstones from episode deletion must have a uuid and a valid adamId. Make sure the corresponding attributes in MTEpisode CoreData schema have \"Preserve After Deletion\" check enabled. Offending tombstone: %s", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v34, -1, -1);
    MEMORY[0x1AD11B340](v33, -1, -1);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v41, v42);
    uint64_t result = MEMORY[0x1E4FBC860];
    a2 = v43;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v31);
    uint64_t result = MEMORY[0x1E4FBC860];
  }
LABEL_33:
  *a2 = result;
  return result;
}

uint64_t sub_1ACC7D1E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v13 = a6;
    unint64_t v14 = sub_1ACC7E54C(a3, v13);

    uint64_t v15 = sub_1ACC7F734(a4);
    swift_release();
    *a7 = v14;
    a7[1] = v15;
    a7[2] = a5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1ACC7D2C4@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v54 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = sub_1ACE754C8();
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)&double v10 = MEMORY[0x1F4188790](v8).n128_u64[0];
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = *a1;
  v51[0] = 0;
  id v14 = objc_msgSend(a2, sel_existingObjectWithID_error_, v13, v51, v10);
  id v15 = v51[0];
  if (v14)
  {
    char v16 = v14;
    self;
    uint64_t v17 = (void *)swift_dynamicCastObjCClass();
    id v18 = v15;
    if (v17)
    {
      uint64_t v19 = MTEpisode.allEpisodeStateIdentifiers.getter();
      sub_1ACD7F9A8(v17, v19, (uint64_t)v51);
      id result = v51[0];
      id v21 = v51[1];
      id v23 = v51[2];
      id v22 = v51[3];
      id v25 = v51[4];
      id v24 = v51[5];
      id v27 = v51[6];
      id v26 = v51[7];
      id v29 = v51[8];
      id v28 = v51[9];
      int v30 = v52 | (v53 << 16);
      id v31 = v51[10];
      if (v51[0]) {
        *(id *)a3 = v51[0];
      }
      else {
        *(void *)a3 = 0;
      }
      *(void *)(a3 + 8) = v21;
      *(void *)(a3 + 16) = v23;
      *(void *)(a3 + 24) = v22;
      *(void *)(a3 + 32) = v25;
      *(void *)(a3 + 40) = v24;
      *(void *)(a3 + 48) = v27;
      *(void *)(a3 + 56) = v26;
      *(void *)(a3 + 64) = v29;
      *(void *)(a3 + 72) = v28;
      *(void *)(a3 + 80) = v31;
      *(_WORD *)(a3 + 88) = v30;
      *(unsigned char *)(a3 + 90) = BYTE2(v30);
      return result;
    }
  }
  else
  {
    os_log_type_t v32 = v12;
    id v33 = v51[0];
    uint64_t v34 = (void *)sub_1ACE74D78();

    uint64_t v12 = v32;
    swift_willThrow();

    uint64_t v4 = 0;
  }
  if (qword_1E99EFFD8 != -1) {
    swift_once();
  }
  uint64_t v35 = __swift_project_value_buffer(v8, (uint64_t)qword_1E99F2DE8);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v35, v8);
  uint64_t v36 = v13;
  long long v49 = v12;
  uint64_t v37 = sub_1ACE75498();
  os_log_type_t v38 = sub_1ACE76BE8();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v48 = v4;
    uint64_t v40 = (uint8_t *)v39;
    uint64_t v45 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 138412290;
    uint64_t v47 = v8;
    uint64_t v50 = v36;
    uint64_t v41 = v36;
    uint64_t v46 = v9;
    uint64_t v42 = v41;
    uint64_t v8 = v47;
    sub_1ACE76FF8();
    uint64_t v43 = v45;
    *uint64_t v45 = v36;

    uint64_t v9 = v46;
    _os_log_impl(&dword_1AC9D5000, v37, v38, "Cannot fetch inserted MTEpisode entity for %@. This might be an episode that has been inserted and then deleted in an upcoming change.", v40, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v43, -1, -1);
    MEMORY[0x1AD11B340](v40, -1, -1);
  }
  else
  {

    uint64_t v37 = v36;
  }

  id result = (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v49, v8);
  *(_OWORD *)(a3 + 75) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  return result;
}

double sub_1ACC7D68C@<D0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v97[1] = *MEMORY[0x1E4F143B8];
  uint64_t v8 = sub_1ACE754C8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v80[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)&double v13 = MEMORY[0x1F4188790](v12).n128_u64[0];
  id v15 = &v80[-v14];
  char v16 = *a1;
  id v88 = 0;
  id v17 = objc_msgSend(a2, sel_existingObjectWithID_error_, v16, &v88, v13);
  id v18 = v88;
  if (!v17)
  {
    id v32 = v88;
    id v33 = (void *)sub_1ACE74D78();

    swift_willThrow();
LABEL_7:
    if (qword_1E99EFFD8 != -1) {
      swift_once();
    }
    uint64_t v34 = __swift_project_value_buffer(v8, (uint64_t)qword_1E99F2DE8);
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v15, v34, v8);
    id v35 = v16;
    swift_bridgeObjectRetain_n();
    id v36 = v35;
    uint64_t v37 = sub_1ACE75498();
    int v38 = sub_1ACE76BE8();
    if (os_log_type_enabled(v37, (os_log_type_t)v38))
    {
      int v81 = v38;
      os_log_t v82 = v37;
      uint64_t v86 = v9;
      uint64_t v87 = v8;
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = (void *)swift_slowAlloc();
      os_log_t v84 = (os_log_t)swift_slowAlloc();
      uint64_t v96 = (uint64_t)v36;
      v97[0] = (uint64_t)v84;
      *(_DWORD *)uint64_t v39 = 138412546;
      id v41 = v36;
      sub_1ACE76FF8();
      uint64_t v83 = (uint64_t)v40;
      void *v40 = v36;

      *(_WORD *)(v39 + 12) = 2080;
      uint64_t v42 = *(void *)(a3 + 16);
      uint64_t v85 = a3;
      if (v42)
      {
        id v43 = v41;
        unint64_t v44 = sub_1ACA66108((uint64_t)v43);
        if (v45)
        {
          uint64_t v46 = *(void *)(*(void *)(a3 + 56) + 8 * v44);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v46 = 0;
        }
        uint64_t v65 = v86;
        os_log_type_t v66 = v81;
      }
      else
      {
        uint64_t v46 = 0;
        uint64_t v65 = v86;
        os_log_type_t v66 = v81;
      }
      uint64_t v96 = v46;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F45E0);
      uint64_t v67 = sub_1ACE76228();
      uint64_t v96 = sub_1ACA3189C(v67, v68, v97);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_type_t v69 = v66;
      os_log_t v70 = v82;
      _os_log_impl(&dword_1AC9D5000, v82, v69, "Cannot fetch updated MTEpisode entity for %@; properties reported as updates: %s. This might be an episode that "
        "has been updated and then deleted in an upcoming change.",
        (uint8_t *)v39,
        0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      uint64_t v71 = v83;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v71, -1, -1);
      os_log_t v72 = v84;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v72, -1, -1);
      MEMORY[0x1AD11B340](v39, -1, -1);

      uint64_t v47 = *(void (**)(unsigned char *, uint64_t))(v65 + 8);
      uint64_t v48 = v15;
      goto LABEL_25;
    }

    swift_bridgeObjectRelease_n();
    uint64_t v47 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
    uint64_t v48 = v15;
LABEL_14:
    uint64_t v49 = v8;
LABEL_26:
    v47(v48, v49);
    *(void *)&long long v27 = 0;
    *(_OWORD *)(a4 + 75) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)a4 = 0u;
    return *(double *)&v27;
  }
  uint64_t v19 = v17;
  self;
  id v20 = (void *)swift_dynamicCastObjCClass();
  id v21 = v18;
  if (!v20)
  {

    goto LABEL_7;
  }
  id v22 = v19;
  uint64_t v23 = MTEpisode.allEpisodeStateIdentifiers.getter();
  sub_1ACD7F9A8(v20, v23, (uint64_t)&v88);
  id v24 = v88;
  if (!v88)
  {
    if (qword_1E99EFFD8 != -1) {
      swift_once();
    }
    uint64_t v50 = __swift_project_value_buffer(v8, (uint64_t)qword_1E99F2DE8);
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v11, v50, v8);
    id v51 = v16;
    swift_bridgeObjectRetain_n();
    id v52 = v51;
    unsigned __int8 v53 = sub_1ACE75498();
    int v54 = sub_1ACE76BE8();
    if (os_log_type_enabled(v53, (os_log_type_t)v54))
    {
      int v81 = v54;
      os_log_t v82 = v22;
      os_log_t v84 = v53;
      uint64_t v86 = v9;
      uint64_t v87 = v8;
      uint64_t v55 = swift_slowAlloc();
      char v56 = (void *)swift_slowAlloc();
      uint64_t v83 = swift_slowAlloc();
      uint64_t v96 = (uint64_t)v52;
      v97[0] = v83;
      *(_DWORD *)uint64_t v55 = 138412546;
      uint64_t v57 = a3;
      id v58 = v52;
      uint64_t v59 = v56;
      sub_1ACE76FF8();
      *char v56 = v52;

      *(_WORD *)(v55 + 12) = 2080;
      uint64_t v60 = *(void *)(v57 + 16);
      uint64_t v85 = v57;
      if (v60)
      {
        id v61 = v58;
        unint64_t v62 = sub_1ACA66108((uint64_t)v61);
        if (v63)
        {
          uint64_t v64 = *(void *)(*(void *)(v57 + 56) + 8 * v62);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v64 = 0;
        }
        uint64_t v73 = v86;
        os_log_t v74 = v82;
      }
      else
      {
        uint64_t v64 = 0;
        uint64_t v73 = v86;
        os_log_t v74 = v82;
      }
      uint64_t v96 = v64;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F45E0);
      uint64_t v75 = sub_1ACE76228();
      uint64_t v96 = sub_1ACA3189C(v75, v76, v97);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v77 = v84;
      _os_log_impl(&dword_1AC9D5000, v84, (os_log_type_t)v81, "The MTEpisode entity for %@ does not have any ID at all. We can do nothing with it. This was originally reported as a crash in rdar://79831648. Now we handle this weird condition by skipping this update. These are the reported updated properties: %s.", (uint8_t *)v55, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v59, -1, -1);
      uint64_t v78 = v83;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v78, -1, -1);
      MEMORY[0x1AD11B340](v55, -1, -1);

      uint64_t v47 = *(void (**)(unsigned char *, uint64_t))(v73 + 8);
      uint64_t v48 = v11;
LABEL_25:
      uint64_t v49 = v87;
      goto LABEL_26;
    }

    swift_bridgeObjectRelease_n();
    uint64_t v47 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
    uint64_t v48 = v11;
    goto LABEL_14;
  }
  __int16 v25 = v94;
  char v26 = v95;

  long long v27 = v89;
  long long v28 = v90;
  long long v29 = v91;
  long long v30 = v92;
  long long v31 = v93;
  *(void *)a4 = v24;
  *(_OWORD *)(a4 + 8) = v27;
  *(_OWORD *)(a4 + 24) = v28;
  *(_OWORD *)(a4 + 40) = v29;
  *(_OWORD *)(a4 + 56) = v30;
  *(_OWORD *)(a4 + 72) = v31;
  *(unsigned char *)(a4 + 90) = v26;
  *(_WORD *)(a4 + 88) = v25;
  return *(double *)&v27;
}

uint64_t sub_1ACC7DE94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACC7DEDC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACC7DF14@<X0>(unint64_t *a1@<X8>)
{
  return sub_1ACC7B664(a1);
}

uint64_t sub_1ACC7DF1C@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_1ACC7C214(a1, a2);
}

uint64_t sub_1ACC7DF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACC7C2B4(a1, a2);
}

uint64_t sub_1ACC7DF2C()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1ACC7DF8C()
{
  return sub_1ACC7D1E4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t sub_1ACC7DFA0()
{
  return swift_deallocObject();
}

void sub_1ACC7DFB0(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v40 = v3;
  if (!v3)
  {
LABEL_28:
    swift_bridgeObjectRelease_n();
    return;
  }
  uint64_t v51 = 0;
  unint64_t v52 = 0;
  while (1)
  {
    if (v52 >= *(void *)(a1 + 16))
    {
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      sub_1ACE77A68();
      __break(1u);
      goto LABEL_33;
    }
    uint64_t v60 = *(void *)(a1 + v51 + 128);
    int v4 = *(unsigned __int16 *)(a1 + v51 + 120) | (*(unsigned __int8 *)(a1 + v51 + 122) << 16);
    uint64_t v49 = *(unsigned __int8 *)(a1 + v51 + 72);
    int v5 = *(unsigned __int8 *)(a1 + v51 + 45);
    int v6 = *(unsigned __int8 *)(a1 + v51 + 44);
    int v43 = *(unsigned __int8 *)(a1 + v51 + 43);
    int v44 = *(unsigned __int8 *)(a1 + v51 + 42);
    int v47 = *(unsigned __int8 *)(a1 + v51 + 41);
    uint64_t v48 = *(unsigned __int8 *)(a1 + v51 + 40);
    uint64_t v7 = *(void *)(a1 + v51 + 32);
    uint64_t v9 = *(void *)(a1 + v51 + 104);
    uint64_t v8 = *(void *)(a1 + v51 + 112);
    uint64_t v10 = *(void *)(a1 + v51 + 88);
    uint64_t v11 = *(void *)(a1 + v51 + 96);
    uint64_t v12 = *(void *)(a1 + v51 + 80);
    uint64_t v13 = *(void *)(a1 + v51 + 48);
    uint64_t v45 = *(void *)(a1 + v51 + 56);
    uint64_t v46 = *(void *)(a1 + v51 + 64);
    swift_bridgeObjectRetain();
    sub_1ACA3A9E8(v12, v10, v11, v9, v8);
    swift_bridgeObjectRetain();
    if (!v7) {
      goto LABEL_28;
    }
    uint64_t v14 = 0x10000000000;
    if (!v5) {
      uint64_t v14 = 0;
    }
    uint64_t v15 = 0x100000000;
    if (!v6) {
      uint64_t v15 = 0;
    }
    uint64_t v16 = v15 | v14;
    uint64_t v17 = 0x1000000;
    if (!v43) {
      uint64_t v17 = 0;
    }
    uint64_t v18 = 0x10000;
    if (!v44) {
      uint64_t v18 = 0;
    }
    uint64_t v19 = v16 | v17 | v18;
    uint64_t v20 = 256;
    if (!v47) {
      uint64_t v20 = 0;
    }
    *(void *)&long long v55 = v7;
    *((void *)&v55 + 1) = v19 | v20 | v48;
    *(void *)&long long v56 = v13;
    *((void *)&v56 + 1) = v45;
    *(void *)&long long v57 = v46;
    *((void *)&v57 + 1) = v49;
    *(void *)&long long v58 = v12;
    *((void *)&v58 + 1) = v10;
    *(void *)uint64_t v59 = v11;
    *(void *)&v59[8] = v9;
    long long v53 = v58;
    *(void *)&v59[16] = v8;
    *(_WORD *)&v59[24] = v4;
    v59[26] = BYTE2(v4);
    *(_OWORD *)int v54 = *(_OWORD *)v59;
    *(_OWORD *)&v54[11] = *(_OWORD *)&v59[11];
    id v21 = (void *)*a3;
    unint64_t v23 = sub_1ACA66658(&v55);
    uint64_t v24 = v21[2];
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25)) {
      goto LABEL_30;
    }
    char v27 = v22;
    if (v21[3] < v26) {
      break;
    }
    if (a2)
    {
      if (v22) {
        goto LABEL_26;
      }
    }
    else
    {
      sub_1ACD08CFC();
      if (v27) {
        goto LABEL_26;
      }
    }
LABEL_22:
    long long v30 = (void *)*a3;
    *(void *)(*a3 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    long long v31 = (_OWORD *)(v30[6] + 96 * v23);
    long long v32 = v58;
    long long v33 = *(_OWORD *)v59;
    long long v34 = v56;
    long long v31[2] = v57;
    v31[3] = v32;
    id v31[4] = v33;
    *(_OWORD *)((char *)v31 + 75) = *(_OWORD *)&v59[11];
    *long long v31 = v55;
    v31[1] = v34;
    *(void *)(v30[7] + 8 * v23) = v60;
    uint64_t v35 = v30[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_31;
    }
    void v30[2] = v37;
    v51 += 104;
    ++v52;
    a2 = 1;
    if (v40 == v52) {
      goto LABEL_28;
    }
  }
  sub_1ACD0245C(v26, a2 & 1);
  unint64_t v28 = sub_1ACA66658(&v55);
  if ((v27 & 1) != (v29 & 1)) {
    goto LABEL_32;
  }
  unint64_t v23 = v28;
  if ((v27 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_26:
  int v38 = (void *)swift_allocError();
  swift_willThrow();
  id v39 = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ACADC698(v53, *((uint64_t *)&v53 + 1), v54[0], *(uint64_t *)&v54[8], *(uint64_t *)&v54[16]);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_33:
  sub_1ACE77268();
  sub_1ACE762C8();
  sub_1ACE77458();
  sub_1ACE762C8();
  sub_1ACE77498();
  __break(1u);
}

double sub_1ACC7E428@<D0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void *__return_ptr, uint64_t *)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v25 = *a1;
  a3(v16, &v25);
  if (v16[0])
  {
    __int16 v6 = v23;
    char v7 = v24;
    uint64_t v8 = v22;
    char v9 = v19;
    uint64_t v10 = v18;
    unint64_t v11 = v16[1];
    *(void *)a4 = v16[0];
    *(unsigned char *)(a4 + 8) = v11 & 1;
    uint64x2_t v12 = (uint64x2_t)vdupq_n_s64(v11);
    int16x8_t v13 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_1ACE85700), (int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_1ACE856F0));
    *(int8x8_t *)v13.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v13), (int8x8_t)0x1000100010001);
    *(_DWORD *)(a4 + 9) = vmovn_s16(v13).u32[0];
    *(unsigned char *)(a4 + 13) = BYTE5(v11) & 1;
    *(_OWORD *)(a4 + 16) = v17;
    *(void *)(a4 + 32) = v10;
    *(unsigned char *)(a4 + 40) = v9 & 1;
    long long v14 = v21;
    *(_OWORD *)(a4 + 48) = v20;
    *(_OWORD *)(a4 + 64) = v14;
    *(void *)(a4 + 80) = v8;
    *(unsigned char *)(a4 + 90) = v7;
    *(_WORD *)(a4 + 88) = v6;
    *(void *)(a4 + 96) = v5;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(void *)(a4 + 96) = 0;
    double result = 0.0;
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 80) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

void *sub_1ACC7E54C(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_1ACE77508())
  {
    unint64_t v22 = v3 & 0xC000000000000001;
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v6 = 4;
    uint64_t v20 = v4;
    unint64_t v21 = v3;
    while (1)
    {
      id v10 = v22 ? (id)MEMORY[0x1AD119490](v6 - 4, v3) : *(id *)(v3 + 8 * v6);
      unint64_t v11 = v10;
      uint64_t v12 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v39 = v10;
      sub_1ACC7D2C4(&v39, a2, (uint64_t)v30);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v5;
      }

      uint64_t v13 = v30[0];
      if (v30[0])
      {
        unint64_t v14 = v30[1];
        long long v26 = v31;
        uint64_t v15 = v32;
        char v16 = v33;
        long long v28 = v35;
        long long v29 = v34;
        int v24 = v37;
        uint64_t v27 = v36;
        int v25 = v38;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_1ACA42624(0, v5[2] + 1, 1, v5);
        }
        unint64_t v18 = v5[2];
        unint64_t v17 = v5[3];
        if (v18 >= v17 >> 1) {
          uint64_t v5 = sub_1ACA42624((void *)(v17 > 1), v18 + 1, 1, v5);
        }
        _OWORD v5[2] = v18 + 1;
        char v7 = &v5[12 * v18];
        v7[4] = v13;
        *((unsigned char *)v7 + 40) = v14 & 1;
        uint64x2_t v8 = (uint64x2_t)vdupq_n_s64(v14);
        int16x8_t v9 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v8, (uint64x2_t)xmmword_1ACE85700), (int32x4_t)vshlq_u64(v8, (uint64x2_t)xmmword_1ACE856F0));
        *(int8x8_t *)v9.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v9), (int8x8_t)0x1000100010001);
        *(_DWORD *)((char *)v7 + 41) = vmovn_s16(v9).u32[0];
        *((unsigned char *)v7 + 45) = BYTE5(v14) & 1;
        *((_OWORD *)v7 + 3) = v26;
        v7[8] = v15;
        *((unsigned char *)v7 + 72) = v16 & 1;
        *((_OWORD *)v7 + 5) = v29;
        *((_OWORD *)v7 + 6) = v28;
        v7[14] = v27;
        *((unsigned char *)v7 + 122) = (v24 | (v25 << 16)) >> 16;
        *((_WORD *)v7 + 60) = v24;
        uint64_t v4 = v20;
        unint64_t v3 = v21;
      }
      ++v6;
      if (v12 == v4)
      {
        swift_bridgeObjectRelease();
        return v5;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

void sub_1ACC7E7DC(uint64_t a1, void (*a2)(void *__return_ptr, id *, uint64_t *))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  long long v35 = (void *)MEMORY[0x1E4FBC860];
  if (!v7) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    uint64_t v12 = 8 * i;
    uint64_t v13 = *(void *)(*(void *)(a1 + 56) + v12);
    id v46 = *(id *)(*(void *)(a1 + 48) + v12);
    uint64_t v36 = v13;
    id v14 = v46;
    swift_bridgeObjectRetain();
    a2(v37, &v46, &v36);
    swift_bridgeObjectRelease();

    uint64_t v15 = v37[0];
    if (v37[0])
    {
      unint64_t v27 = v37[1];
      long long v28 = v38;
      uint64_t v19 = v39;
      long long v31 = v42;
      long long v32 = v41;
      char v29 = v40;
      uint64_t v30 = v43;
      uint64_t v33 = v45;
      int v34 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v35 = sub_1ACA4387C(0, v35[2] + 1, 1, v35);
      }
      unint64_t v21 = v35[2];
      unint64_t v20 = v35[3];
      unint64_t v22 = v21 + 1;
      if (v21 >= v20 >> 1)
      {
        long long v26 = sub_1ACA4387C((void *)(v20 > 1), v21 + 1, 1, v35);
        unint64_t v22 = v21 + 1;
        long long v35 = v26;
      }
      v35[2] = v22;
      __int16 v23 = &v35[13 * v21];
      uint64_t v23[4] = v15;
      *((unsigned char *)v23 + 40) = v27 & 1;
      uint64x2_t v24 = (uint64x2_t)vdupq_n_s64(v27);
      int16x8_t v25 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v24, (uint64x2_t)xmmword_1ACE85700), (int32x4_t)vshlq_u64(v24, (uint64x2_t)xmmword_1ACE856F0));
      *(int8x8_t *)v25.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v25), (int8x8_t)0x1000100010001);
      *(_DWORD *)((char *)v23 + 41) = vmovn_s16(v25).u32[0];
      *((unsigned char *)v23 + 45) = BYTE5(v27) & 1;
      *((_OWORD *)v23 + 3) = v28;
      v23[8] = v19;
      *((unsigned char *)v23 + 72) = v29 & 1;
      *((_OWORD *)v23 + 5) = v32;
      *((_OWORD *)v23 + 6) = v31;
      v23[14] = v30;
      *((unsigned char *)v23 + 122) = BYTE2(v34);
      *((_WORD *)v23 + 60) = v34;
      v23[16] = v33;
      if (v7) {
        goto LABEL_4;
      }
    }
    else if (v7)
    {
      goto LABEL_4;
    }
LABEL_7:
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v16 >= v8) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v8) {
        goto LABEL_29;
      }
      unint64_t v17 = *(void *)(v4 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v8) {
          goto LABEL_29;
        }
        unint64_t v17 = *(void *)(v4 + 8 * v9);
        if (!v17)
        {
          int64_t v9 = v16 + 3;
          if (v16 + 3 >= v8) {
            goto LABEL_29;
          }
          unint64_t v17 = *(void *)(v4 + 8 * v9);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v8)
  {
LABEL_29:
    swift_release();
    return;
  }
  unint64_t v17 = *(void *)(v4 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v8) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
}

void *sub_1ACC7EAFC(void *a1)
{
  uint64_t v3 = sub_1ACE754C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  os_log_t v77 = (char *)v73 - v8;
  id v9 = objc_msgSend(self, sel_sharedInstance);
  id v10 = objc_msgSend(a1, sel_contextName);
  unint64_t v11 = objc_msgSend(v9, sel_contextForName_, v10);

  uint64_t v78 = v11;
  if (!v11)
  {
    if (qword_1E99EFFD8 != -1) {
      swift_once();
    }
    uint64_t v26 = __swift_project_value_buffer(v3, (uint64_t)qword_1E99F2DE8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v26, v3);
    unint64_t v27 = a1;
    long long v28 = sub_1ACE75498();
    os_log_type_t v29 = sub_1ACE76BE8();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v78 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 138412290;
      uint64_t v81 = (uint64_t)v27;
      long long v31 = v27;
      uint64_t v76 = v3;
      long long v32 = v31;
      sub_1ACE76FF8();
      uint64_t v33 = v78;
      *uint64_t v78 = v27;

      uint64_t v3 = v76;
      _os_log_impl(&dword_1AC9D5000, v28, v29, "History transaction with not contextName. We won't be able to fetch the objects corresponding to this change. Transaction: %@", v30, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v33, -1, -1);
      MEMORY[0x1AD11B340](v30, -1, -1);
    }
    else
    {

      long long v28 = v27;
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 0;
  }
  id v12 = objc_msgSend(a1, sel_changes);
  if (!v12)
  {

    return 0;
  }
  uint64_t v13 = v12;
  uint64_t v74 = sub_1ACA50D4C(0, (unint64_t *)&unk_1EB768F18);
  unint64_t v14 = sub_1ACE76578();

  unint64_t v82 = MEMORY[0x1E4FBC860];
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    uint64_t v76 = v3;
    if (v15) {
      goto LABEL_5;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    unint64_t v14 = MEMORY[0x1E4FBC860];
    if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
      goto LABEL_60;
    }
    goto LABEL_35;
  }
  uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v76 = v3;
  if (!v15) {
    goto LABEL_34;
  }
LABEL_5:
  uint64_t v75 = v4;
  if (v15 < 1)
  {
    __break(1u);
LABEL_63:
    swift_once();
    goto LABEL_38;
  }
  for (uint64_t i = 0; i != v15; ++i)
  {
    if ((v14 & 0xC000000000000001) != 0) {
      id v17 = (id)MEMORY[0x1AD119490](i, v14);
    }
    else {
      id v17 = *(id *)(v14 + 8 * i + 32);
    }
    int64_t v18 = v17;
    id v19 = objc_msgSend(v17, sel_changedObjectID);
    uint64_t v1 = (uint64_t)objc_msgSend(v19, sel_entity);

    id v20 = objc_msgSend((id)v1, sel_name);
    if (!v20)
    {
      sub_1ACE761B8();
LABEL_8:

      swift_bridgeObjectRelease();
      continue;
    }
    uint64_t v1 = sub_1ACE761B8();
    uint64_t v22 = v21;

    uint64_t v23 = sub_1ACE761B8();
    if (!v22) {
      goto LABEL_8;
    }
    if (v1 == v23 && v22 == v24)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v1 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v1 & 1) == 0)
      {

        continue;
      }
    }
    sub_1ACE773A8();
    sub_1ACE773E8();
    sub_1ACE773F8();
    sub_1ACE773B8();
  }
  swift_bridgeObjectRelease();
  unint64_t v14 = v82;
  uint64_t v4 = v75;
  uint64_t v3 = v76;
  if ((v82 & 0x8000000000000000) == 0)
  {
LABEL_35:
    if ((v14 & 0x4000000000000000) != 0) {
      goto LABEL_60;
    }
    uint64_t v35 = *(void *)(v14 + 16);
    if (v35) {
      goto LABEL_37;
    }
LABEL_61:
    swift_release();
    sub_1ACA37EE4(MEMORY[0x1E4FBC860]);
    return v78;
  }
LABEL_60:
  swift_retain();
  uint64_t v35 = sub_1ACE77508();
  swift_release();
  if (!v35) {
    goto LABEL_61;
  }
LABEL_37:
  uint64_t v75 = v35;
  if (qword_1E99EFFD8 != -1) {
    goto LABEL_63;
  }
LABEL_38:
  uint64_t v36 = (char **)__swift_project_value_buffer(v3, (uint64_t)qword_1E99F2DE8);
  swift_beginAccess();
  unsigned __int16 v37 = v77;
  (*(void (**)(void))(v4 + 16))();
  swift_retain_n();
  long long v38 = sub_1ACE75498();
  os_log_type_t v39 = sub_1ACE76BD8();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (_DWORD *)swift_slowAlloc();
    uint64_t v3 = swift_slowAlloc();
    uint64_t v81 = v3;
    long long v41 = (uint8_t *)v40;
    _DWORD *v40 = 136315138;
    uint64_t v36 = (char **)(v40 + 3);
    v73[1] = v41 + 4;
    uint64_t v42 = swift_retain();
    uint64_t v1 = MEMORY[0x1AD118740](v42, v74);
    unint64_t v44 = v43;
    swift_release();
    uint64_t v80 = sub_1ACA3189C(v1, v44, &v81);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v38, v39, "processing transaction with episode changes: %s", v41, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v3, -1, -1);
    MEMORY[0x1AD11B340](v41, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v77, v76);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v37, v3);
  }
  uint64_t v81 = MEMORY[0x1E4FBC860];
  unint64_t v45 = v75;
  if (v75 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = v14 & 0xC000000000000001;
    swift_retain();
    uint64_t v46 = 0;
    uint64_t v36 = &selRef_generateAndRestorePersonaContextWithPersonaUniqueString_;
    do
    {
      if (v3) {
        id v47 = (id)MEMORY[0x1AD119490](v46, v14);
      }
      else {
        id v47 = *(id *)(v14 + 8 * v46 + 32);
      }
      uint64_t v48 = v47;
      if ([v47 v36[235]])
      {
      }
      else
      {
        sub_1ACE773A8();
        sub_1ACE773E8();
        uint64_t v36 = &selRef_generateAndRestorePersonaContextWithPersonaUniqueString_;
        sub_1ACE773F8();
        sub_1ACE773B8();
      }
      ++v46;
    }
    while (v45 != v46);
    swift_release();
    uint64_t v1 = v81;
    if ((v81 & 0x8000000000000000) == 0 && (v81 & 0x4000000000000000) == 0)
    {
      uint64_t v49 = *(void *)(v81 + 16);
      if (v49) {
        goto LABEL_53;
      }
LABEL_66:
      swift_release();
      uint64_t v54 = MEMORY[0x1E4FBC860];
LABEL_67:
      uint64_t v55 = v54;
      uint64_t v81 = v54;
      swift_retain();
      uint64_t v56 = 0;
      do
      {
        if (v3) {
          id v57 = (id)MEMORY[0x1AD119490](v56, v14);
        }
        else {
          id v57 = *(id *)(v14 + 8 * v56 + 32);
        }
        long long v58 = v57;
        if ([v57 v36[235]] == (id)1)
        {
          sub_1ACE773A8();
          sub_1ACE773E8();
          uint64_t v36 = &selRef_generateAndRestorePersonaContextWithPersonaUniqueString_;
          sub_1ACE773F8();
          sub_1ACE773B8();
        }
        else
        {
        }
        ++v56;
      }
      while (v45 != v56);
      swift_release();
      uint64_t v59 = v81;
      uint64_t v81 = MEMORY[0x1E4FBC868];
      if (v59 < 0 || (v59 & 0x4000000000000000) != 0) {
        goto LABEL_86;
      }
      uint64_t v60 = *(void *)(v59 + 16);
      swift_retain();
      for (; v60; uint64_t v60 = sub_1ACE77508())
      {
        unint64_t v45 = v59 & 0xC000000000000001;
        uint64_t v55 = 4;
        while (1)
        {
          id v61 = v45 ? (id)MEMORY[0x1AD119490](v55 - 4, v59) : *(id *)(v59 + 8 * v55);
          unint64_t v62 = v61;
          uint64_t v36 = (char **)(v55 - 3);
          if (__OFADD__(v55 - 4, 1)) {
            break;
          }
          uint64_t v80 = (uint64_t)v61;
          sub_1ACC7C5B0(&v81, (id *)&v80);

          ++v55;
          if (v36 == (char **)v60)
          {
            swift_release_n();
            uint64_t v55 = MEMORY[0x1E4FBC860];
            unint64_t v45 = v75;
            uint64_t v36 = &selRef_generateAndRestorePersonaContextWithPersonaUniqueString_;
            goto LABEL_88;
          }
        }
        __break(1u);
LABEL_86:
        swift_retain();
      }
      swift_release_n();
LABEL_88:
      uint64_t v63 = 0;
      uint64_t v81 = v55;
      do
      {
        if (v3) {
          id v64 = (id)MEMORY[0x1AD119490](v63, v14);
        }
        else {
          id v64 = *(id *)(v14 + 8 * v63 + 32);
        }
        uint64_t v65 = v64;
        if ([v64 v36[235]] == (id)2)
        {
          sub_1ACE773A8();
          sub_1ACE773E8();
          uint64_t v36 = &selRef_generateAndRestorePersonaContextWithPersonaUniqueString_;
          sub_1ACE773F8();
          sub_1ACE773B8();
        }
        else
        {
        }
        ++v63;
      }
      while (v45 != v63);
      swift_release();
      uint64_t v66 = v81;
      uint64_t v81 = MEMORY[0x1E4FBC860];
      if (v66 < 0 || (v66 & 0x4000000000000000) != 0) {
        goto LABEL_107;
      }
      uint64_t v67 = *(void *)(v66 + 16);
      swift_retain();
      for (; v67; uint64_t v67 = sub_1ACE77508())
      {
        uint64_t v68 = 4;
        while (1)
        {
          id v69 = (v66 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x1AD119490](v68 - 4, v66)
              : *(id *)(v66 + 8 * v68);
          os_log_t v70 = v69;
          uint64_t v71 = v68 - 3;
          if (__OFADD__(v68 - 4, 1)) {
            break;
          }
          uint64_t v80 = (uint64_t)v69;
          sub_1ACC7CBF8((id *)&v80, &v79);

          sub_1ACA706B8(v79);
          ++v68;
          if (v71 == v67) {
            goto LABEL_105;
          }
        }
        __break(1u);
LABEL_107:
        swift_retain();
      }
LABEL_105:
      swift_release_n();
      return v78;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_1ACE77508();
  swift_release();
  if (!v49) {
    goto LABEL_66;
  }
LABEL_53:
  uint64_t v81 = MEMORY[0x1E4FBC860];
  sub_1ACE773D8();
  if ((v49 & 0x8000000000000000) == 0)
  {
    uint64_t v50 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v51 = (id)MEMORY[0x1AD119490](v50, v1);
      }
      else {
        id v51 = *(id *)(v1 + 8 * v50 + 32);
      }
      unint64_t v52 = v51;
      ++v50;
      id v53 = objc_msgSend(v51, sel_changedObjectID);

      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
    }
    while (v49 != v50);
    swift_release();
    uint64_t v54 = MEMORY[0x1E4FBC860];
    unint64_t v45 = v75;
    uint64_t v36 = &selRef_generateAndRestorePersonaContextWithPersonaUniqueString_;
    goto LABEL_67;
  }
  __break(1u);
  os_log_t v72 = (void *)v81;
  swift_release();

  swift_bridgeObjectRelease();
  __break(1u);
  swift_release();

  double result = (void *)swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1ACC7F734(uint64_t a1)
{
  sub_1ACC7E7DC(a1, (void (*)(void *__return_ptr, id *, uint64_t *))sub_1ACC7F820);
  if (*(void *)(v1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769028);
    uint64_t v2 = sub_1ACE77558();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v5 = v2;
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_1ACC7DFB0(v3, 1, &v5);
  swift_bridgeObjectRelease();
  return v5;
}

double sub_1ACC7F818@<D0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACC7D68C(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), a2);
}

double sub_1ACC7F820@<D0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1ACC7E428(a1, a2, *(void (**)(void *__return_ptr, uint64_t *))(v3 + 16), a3);
}

uint64_t destroy for EpisodesTransaction(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for EpisodesTransaction(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  id v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EpisodesTransaction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EpisodesTransaction(uint64_t a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BaseFeedResponse.ParsedResponseCache(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BaseFeedResponse.ParsedResponseCache(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)double result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)double result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodesTransaction()
{
  return &type metadata for EpisodesTransaction;
}

uint64_t Lockable.locked<A>(perform:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 8);
  objc_msgSend((id)v8(a3, a5), sel_lock);
  uint64_t v9 = swift_unknownObjectRelease();
  a1(v9);
  objc_msgSend((id)v8(a3, a5), sel_unlock);
  return swift_unknownObjectRelease();
}

uint64_t dispatch thunk of Lockable.lock.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

BOOL static PlayChapterError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PlayChapterError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t PlayChapterError.hashValue.getter()
{
  return sub_1ACE77B78();
}

unint64_t sub_1ACC7FBC0()
{
  unint64_t result = qword_1E99F45F0;
  if (!qword_1E99F45F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F45F0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PlayChapterError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC7FCE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayChapterError()
{
  return &type metadata for PlayChapterError;
}

id AssetRemovalProcessorDataSource.managedObjectContext.getter()
{
  return *(id *)(v0 + 16);
}

id AssetRemovalProcessorDataSource.receiverQueue.getter()
{
  return *(id *)(v0 + 24);
}

uint64_t AssetRemovalProcessorDataSource.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACC7FD58()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = v1;
  if (v1 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1ACE84820;
    *(void *)(v2 + 32) = sub_1ACE761B8();
    *(void *)(v2 + 40) = v3;
    *(void *)(v2 + 48) = sub_1ACE761B8();
    *(void *)(v2 + 56) = v4;
    uint64_t v5 = *(void *)(v0 + 48);
    *(void *)(v0 + 48) = v2;
    swift_bridgeObjectRetain();
    sub_1ACC7FE00(v5);
  }
  sub_1ACC7FE10(v1);
  return v2;
}

uint64_t sub_1ACC7FE00(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACC7FE10(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1ACC7FE20(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 48);
  *(void *)(v1 + 48) = a1;
  return sub_1ACC7FE00(v2);
}

uint64_t (*sub_1ACC7FE30(uint64_t *a1))(void *a1, char a2)
{
  a1[1] = v1;
  *a1 = sub_1ACC7FD58();
  return sub_1ACC7FE78;
}

uint64_t sub_1ACC7FE78(void *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = *(void *)(v2 + 48);
  *(void *)(v2 + 48) = *a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1ACC7FE00(v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return sub_1ACC7FE00(v3);
  }
}

uint64_t (*sub_1ACC7FEE8())()
{
  return j__swift_endAccess;
}

double AssetRemovalProcessorDataSource.__allocating_init(managedObjectContext:receiverQueue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  strcpy((char *)(v4 + 32), "AssetRemoval");
  *(unsigned char *)(v4 + 45) = 0;
  *(_WORD *)(v4 + 46) = -5120;
  *(void *)&double result = 1;
  *(_OWORD *)(v4 + 48) = xmmword_1ACE8BD70;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  return result;
}

uint64_t AssetRemovalProcessorDataSource.init(managedObjectContext:receiverQueue:)(uint64_t a1, uint64_t a2)
{
  strcpy((char *)(v2 + 32), "AssetRemoval");
  *(unsigned char *)(v2 + 45) = 0;
  *(_WORD *)(v2 + 46) = -5120;
  *(_OWORD *)(v2 + 48) = xmmword_1ACE8BD70;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

id sub_1ACC7FFE0()
{
  id v0 = objc_msgSend(self, sel_predicateForPodcastToAutoRemove);
  return v0;
}

uint64_t sub_1ACC80020(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DC60);
  uint64_t v27 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  id v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D690);
  uint64_t v28 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  id v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)v2[2];
  unint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a1;
  v14[3] = a2;
  v14[4] = v5;
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = v13;
  v15[3] = sub_1ACC80548;
  void v15[4] = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76DF50);
  swift_allocObject();
  swift_bridgeObjectRetain();
  id v16 = v13;
  uint64_t v17 = sub_1ACE75A18();
  int64_t v18 = (void *)v2[3];
  id v29 = v18;
  uint64_t v30 = v17;
  uint64_t v19 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 1, 1, v19);
  sub_1ACA51E1C();
  sub_1ACA51EA4(&qword_1EB76DF48, (uint64_t *)&unk_1EB76DF50);
  sub_1ACA93A6C();
  id v20 = v18;
  sub_1ACE75CA8();
  sub_1ACAFA0D0((uint64_t)v8);

  swift_release();
  swift_getKeyPath();
  sub_1ACA51EA4(&qword_1EB76DC58, &qword_1EB76DC60);
  uint64_t v21 = v25;
  sub_1ACE75B48();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v21);
  sub_1ACA51EA4(&qword_1EB76D688, &qword_1EB76D690);
  uint64_t v22 = v26;
  uint64_t v23 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v22);
  return v23;
}

void sub_1ACC80414(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (void *)sub_1ACE76178();
  id v9 = objc_msgSend(a1, sel_podcastForUuid_, v8);

  if (v9)
  {
    swift_bridgeObjectRetain();
    id v10 = objc_msgSend(v9, sel_episodeLimitResolvedValue);
    unsigned __int8 v11 = objc_msgSend(v9, sel_deletePlayedEpisodesResolvedValue);

    *(void *)a4 = a2;
    *(void *)(a4 + 8) = a3;
    *(void *)(a4 + 16) = v10;
    *(unsigned char *)(a4 + 24) = v11;
  }
  else
  {
    sub_1ACAFD59C();
    swift_allocError();
    *id v12 = a2;
    v12[1] = a3;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
}

uint64_t sub_1ACC80510()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACC80548(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1ACC80414(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1ACC80568()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACC805A8(uint64_t a1, uint64_t a2)
{
  sub_1ACAC1B7C(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

id sub_1ACC805B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1ACE754C8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB768C28);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76BC8();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)id v9 = 136446210;
    uint64_t v15 = v14;
    swift_bridgeObjectRetain();
    sub_1ACE77268();
    sub_1ACE762C8();
    swift_bridgeObjectRetain();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    type metadata accessor for MTPodcastEpisodeLimit(0);
    sub_1ACE77458();
    sub_1ACE762C8();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ACA3189C(0, 0xE000000000000000, &v15);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v7, v8, "Creating autoremoval predicate with context: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v14, -1, -1);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v10 = self;
  unsigned __int8 v11 = (void *)sub_1ACE76178();
  id v12 = objc_msgSend(v10, sel_predicateForAutomaticDeletionOnShow_deletePlayedEpisodes_episodeLimit_, v11, a4 & 1, a3);

  return v12;
}

id sub_1ACC808F0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = sub_1ACC805B4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  *a2 = result;
  return result;
}

uint64_t sub_1ACC80928()
{
  return 0;
}

uint64_t sub_1ACC80A7C()
{
  return sub_1ACC80928();
}

uint64_t AssetRemovalProcessorDataSource.deinit()
{
  swift_bridgeObjectRelease();
  sub_1ACC7FE00(*(void *)(v0 + 48));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AssetRemovalProcessorDataSource.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1ACC7FE00(*(void *)(v0 + 48));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACC80B24(uint64_t a1, uint64_t a2)
{
  return sub_1ACC80020(a1, a2);
}

uint64_t sub_1ACC80B48()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACC80B7C()
{
  return sub_1ACC7FD58();
}

uint64_t sub_1ACC80BA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1ACC7FD58();
  *a1 = result;
  return result;
}

uint64_t sub_1ACC80BCC(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)a2 + 48);
  *(void *)(*(void *)a2 + 48) = *a1;
  swift_bridgeObjectRetain();
  return sub_1ACC7FE00(v2);
}

uint64_t sub_1ACC80C10@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AssetRemovalProcessorDataSource()
{
  return self;
}

uint64_t method lookup function for AssetRemovalProcessorDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AssetRemovalProcessorDataSource);
}

uint64_t dispatch thunk of AssetRemovalProcessorDataSource.observedShowKeys.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of AssetRemovalProcessorDataSource.observedShowKeys.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of AssetRemovalProcessorDataSource.observedShowKeys.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of AssetRemovalProcessorDataSource.observedEpisodeKeys.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of AssetRemovalProcessorDataSource.observedEpisodeKeys.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of AssetRemovalProcessorDataSource.observedEpisodeKeys.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of AssetRemovalProcessorDataSource.__allocating_init(managedObjectContext:receiverQueue:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of AssetRemovalProcessorDataSource.showsPredicate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of AssetRemovalProcessorDataSource.predicate(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t initializeWithCopy for AssetRemovalProcessorDataSource.AssetRemovalContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssetRemovalProcessorDataSource.AssetRemovalContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AssetRemovalProcessorDataSource.AssetRemovalContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRemovalProcessorDataSource.AssetRemovalContext(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRemovalProcessorDataSource.AssetRemovalContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRemovalProcessorDataSource.AssetRemovalContext()
{
  return &type metadata for AssetRemovalProcessorDataSource.AssetRemovalContext;
}

uint64_t AnyCodable.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1ACA6A14C(v1, (uint64_t)v26);
  switch(v27)
  {
    case 1:
      long long v6 = v26[0];
      *(void *)(a1 + 24) = MEMORY[0x1E4FBB1A0];
      *(_OWORD *)a1 = v6;
      return result;
    case 2:
      uint64_t v7 = *(void *)&v26[0];
      uint64_t v8 = MEMORY[0x1E4FBB550];
      goto LABEL_17;
    case 3:
      char v4 = v26[0];
      uint64_t v5 = MEMORY[0x1E4FBC098];
      goto LABEL_11;
    case 4:
      __int16 v9 = v26[0];
      uint64_t v10 = MEMORY[0x1E4FBC0F8];
      goto LABEL_13;
    case 5:
      int v11 = v26[0];
      uint64_t v12 = MEMORY[0x1E4FBC150];
      goto LABEL_15;
    case 6:
      uint64_t v7 = *(void *)&v26[0];
      uint64_t v8 = MEMORY[0x1E4FBC1C8];
      goto LABEL_17;
    case 7:
      uint64_t v7 = *(void *)&v26[0];
      uint64_t v8 = MEMORY[0x1E4FBB808];
      goto LABEL_17;
    case 8:
      char v4 = v26[0];
      uint64_t v5 = MEMORY[0x1E4FBC358];
      goto LABEL_11;
    case 9:
      __int16 v9 = v26[0];
      uint64_t v10 = MEMORY[0x1E4FBC450];
LABEL_13:
      *(void *)(a1 + 24) = v10;
      *(_WORD *)a1 = v9;
      break;
    case 10:
      int v11 = v26[0];
      uint64_t v12 = MEMORY[0x1E4FBC4C0];
LABEL_15:
      *(void *)(a1 + 24) = v12;
      *(_DWORD *)a1 = v11;
      break;
    case 11:
      uint64_t v7 = *(void *)&v26[0];
      uint64_t v8 = MEMORY[0x1E4FBC538];
LABEL_17:
      *(void *)(a1 + 24) = v8;
      *(void *)a1 = v7;
      break;
    case 12:
      int v13 = v26[0];
      *(void *)(a1 + 24) = MEMORY[0x1E4FBB470];
      *(_DWORD *)a1 = v13;
      break;
    case 13:
      uint64_t v14 = *(void *)&v26[0];
      *(void *)(a1 + 24) = MEMORY[0x1E4FBB3D0];
      *(void *)a1 = v14;
      break;
    case 14:
      uint64_t v15 = *(void *)&v26[0];
      int64_t v16 = *(void *)(*(void *)&v26[0] + 16);
      if (v16)
      {
        uint64_t v25 = MEMORY[0x1E4FBC860];
        sub_1ACC82D84(0, v16, 0);
        uint64_t v17 = v15 + 32;
        uint64_t v18 = v25;
        do
        {
          uint64_t v19 = sub_1ACA6A14C(v17, (uint64_t)v23);
          AnyCodable.value.getter(v24, v19);
          sub_1ACA6A1A8((uint64_t)v23);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1ACC82D84(0, *(void *)(v18 + 16) + 1, 1);
            uint64_t v18 = v25;
          }
          unint64_t v21 = *(void *)(v18 + 16);
          unint64_t v20 = *(void *)(v18 + 24);
          if (v21 >= v20 >> 1)
          {
            sub_1ACC82D84(v20 > 1, v21 + 1, 1);
            uint64_t v18 = v25;
          }
          *(void *)(v18 + 16) = v21 + 1;
          sub_1ACA3AA44(v24, (_OWORD *)(v18 + 32 * v21 + 32));
          v17 += 40;
          --v16;
        }
        while (v16);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = MEMORY[0x1E4FBC860];
      }
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705E0);
      *(void *)(a1 + 24) = result;
      *(void *)a1 = v18;
      break;
    case 15:
      uint64_t v22 = sub_1ACA69BE4(*(void *)&v26[0]);
      swift_bridgeObjectRelease();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770968);
      *(void *)(a1 + 24) = result;
      *(void *)a1 = v22;
      break;
    case 16:
      uint64_t result = (uint64_t)sub_1ACA3AA44(v26, (_OWORD *)a1);
      break;
    default:
      char v4 = v26[0];
      uint64_t v5 = MEMORY[0x1E4FBB390];
LABEL_11:
      *(void *)(a1 + 24) = v5;
      *(unsigned char *)a1 = v4;
      break;
  }
  return result;
}

uint64_t sub_1ACC81278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1ACA33128(a1, (uint64_t)v23);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    *(unsigned char *)a2 = v20[0];
    *(unsigned char *)(a2 + 32) = 0;
  }
  else
  {
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      uint64_t v4 = *((void *)&v20[0] + 1);
      *(void *)a2 = *(void *)&v20[0];
      *(void *)(a2 + 8) = v4;
      char v5 = 1;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(_DWORD *)a2 = v20[0];
      char v5 = 12;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(void *)a2 = *(void *)&v20[0];
      char v5 = 13;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(void *)a2 = *(void *)&v20[0];
      char v5 = 2;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(unsigned char *)a2 = v20[0];
      char v5 = 3;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(_WORD *)a2 = v20[0];
      char v5 = 4;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(_DWORD *)a2 = v20[0];
      char v5 = 5;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(void *)a2 = *(void *)&v20[0];
      char v5 = 6;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(void *)a2 = *(void *)&v20[0];
      char v5 = 7;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(unsigned char *)a2 = v20[0];
      char v5 = 8;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(_WORD *)a2 = v20[0];
      char v5 = 9;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(_DWORD *)a2 = v20[0];
      char v5 = 10;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(void *)a2 = *(void *)&v20[0];
      char v5 = 11;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705E0);
      if (swift_dynamicCast())
      {
        uint64_t v6 = *(void *)(v22 + 16);
        if (v6)
        {
          uint64_t v7 = v22 + 32;
          swift_bridgeObjectRetain();
          uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
          do
          {
            sub_1ACA33128(v7, (uint64_t)v21);
            sub_1ACA33128((uint64_t)v21, (uint64_t)v20);
            sub_1ACC81278(v18, v20);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
            if (v19 == 255)
            {
              sub_1ACC86B50((uint64_t)v18);
            }
            else
            {
              sub_1ACB1DF98((uint64_t)v18, (uint64_t)v20);
              sub_1ACB1DF98((uint64_t)v20, (uint64_t)v18);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v8 = sub_1ACA415F4(0, v8[2] + 1, 1, v8);
              }
              unint64_t v9 = v8[2];
              unint64_t v10 = v8[3];
              unint64_t v11 = v9 + 1;
              if (v9 >= v10 >> 1)
              {
                unint64_t v17 = v9 + 1;
                uint64_t v12 = v8;
                unint64_t v13 = v8[2];
                uint64_t v14 = sub_1ACA415F4((void *)(v10 > 1), v9 + 1, 1, v12);
                unint64_t v9 = v13;
                unint64_t v11 = v17;
                uint64_t v8 = v14;
              }
              v8[2] = v11;
              sub_1ACB1DF98((uint64_t)v18, (uint64_t)&v8[5 * v9 + 4]);
            }
            v7 += 32;
            --v6;
          }
          while (v6);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
        }
        __swift_destroy_boxed_opaque_existential_0(a1);
        swift_bridgeObjectRelease();
        *(void *)a2 = v8;
        char v5 = 14;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770968);
        if (swift_dynamicCast())
        {
          uint64_t v15 = sub_1ACB1AC14(*(void *)&v20[0]);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0(a1);
          *(void *)a2 = v15;
          char v5 = 15;
        }
        else
        {
          sub_1ACA33128((uint64_t)v23, (uint64_t)v20);
          __swift_destroy_boxed_opaque_existential_0(a1);
          sub_1ACA3AA44(v20, (_OWORD *)a2);
          char v5 = 16;
        }
      }
    }
    *(unsigned char *)(a2 + 32) = v5;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
}

uint64_t _s18PodcastsFoundation10AnyCodableO12arrayLiteralACypd_tcfC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    char v5 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1ACA33128(v4, (uint64_t)v11);
      sub_1ACA33128((uint64_t)v11, (uint64_t)v10);
      sub_1ACC81278((uint64_t)v10, (uint64_t)v9);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
      if (v9[32] == 255)
      {
        sub_1ACC86B50((uint64_t)v9);
      }
      else
      {
        sub_1ACB1DF98((uint64_t)v9, (uint64_t)v10);
        sub_1ACB1DF98((uint64_t)v10, (uint64_t)v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v5 = sub_1ACA415F4(0, v5[2] + 1, 1, v5);
        }
        unint64_t v7 = v5[2];
        unint64_t v6 = v5[3];
        if (v7 >= v6 >> 1) {
          char v5 = sub_1ACA415F4((void *)(v6 > 1), v7 + 1, 1, v5);
        }
        _OWORD v5[2] = v7 + 1;
        sub_1ACB1DF98((uint64_t)v9, (uint64_t)&v5[5 * v7 + 4]);
      }
      v4 += 32;
      --v3;
    }
    while (v3);
  }
  else
  {
    char v5 = (void *)MEMORY[0x1E4FBC860];
  }
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 32) = 14;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC81938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E020);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770968);
  if (swift_dynamicCast())
  {
    uint64_t v3 = sub_1ACB1AC14(v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)a2 = v3;
    char v4 = 15;
LABEL_5:
    *(unsigned char *)(a2 + 32) = v4;
    return swift_bridgeObjectRelease();
  }
  if (swift_dynamicCast())
  {
    sub_1ACA3AA44(&v6, (_OWORD *)a2);
    swift_bridgeObjectRelease();
    char v4 = 16;
    goto LABEL_5;
  }
  uint64_t result = sub_1ACE77838();
  __break(1u);
  return result;
}

uint64_t AnyCodable.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  __n128 v7 = MEMORY[0x1F4188790](a1);
  unint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, a1, a2, v7);
  swift_getDynamicType();
  if (swift_dynamicCast())
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(unsigned char *)a3 = v28[0];
    *(unsigned char *)(a3 + 32) = 0;
    return ((uint64_t (*)(char *, uint64_t))v10)(v9, a2);
  }
  if (swift_dynamicCast())
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    uint64_t v11 = *((void *)&v28[0] + 1);
    *(void *)a3 = *(void *)&v28[0];
    *(void *)(a3 + 8) = v11;
    char v12 = 1;
LABEL_47:
    *(unsigned char *)(a3 + 32) = v12;
    return ((uint64_t (*)(char *, uint64_t))v10)(v9, a2);
  }
  if (swift_dynamicCast())
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(_DWORD *)a3 = v28[0];
    char v12 = 12;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(void *)a3 = *(void *)&v28[0];
    char v12 = 13;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(void *)a3 = *(void *)&v28[0];
    char v12 = 2;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(unsigned char *)a3 = v28[0];
    char v12 = 3;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(_WORD *)a3 = v28[0];
    char v12 = 4;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(_DWORD *)a3 = v28[0];
    char v12 = 5;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(void *)a3 = *(void *)&v28[0];
    char v12 = 6;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(void *)a3 = *(void *)&v28[0];
    char v12 = 7;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(unsigned char *)a3 = v28[0];
    char v12 = 8;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(_WORD *)a3 = v28[0];
    char v12 = 9;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(_DWORD *)a3 = v28[0];
    char v12 = 10;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(void *)a3 = *(void *)&v28[0];
    char v12 = 11;
    goto LABEL_47;
  }
  uint64_t v25 = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705E0);
  if (swift_dynamicCast())
  {
    uint64_t v13 = *(void *)(v30 + 16);
    if (v13)
    {
      uint64_t v14 = v30 + 32;
      swift_bridgeObjectRetain();
      uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        sub_1ACA33128(v14, (uint64_t)v29);
        sub_1ACA33128((uint64_t)v29, (uint64_t)v28);
        sub_1ACC81278((uint64_t)v28, (uint64_t)v26);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
        if (v27 == 255)
        {
          sub_1ACC86B50((uint64_t)v26);
        }
        else
        {
          sub_1ACB1DF98((uint64_t)v26, (uint64_t)v28);
          sub_1ACB1DF98((uint64_t)v28, (uint64_t)v26);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v15 = sub_1ACA415F4(0, v15[2] + 1, 1, v15);
          }
          unint64_t v16 = v15[2];
          unint64_t v17 = v15[3];
          unint64_t v18 = v16 + 1;
          if (v16 >= v17 >> 1)
          {
            unint64_t v24 = v16 + 1;
            unsigned __int8 v19 = v15;
            unint64_t v20 = v16;
            unint64_t v21 = sub_1ACA415F4((void *)(v17 > 1), v16 + 1, 1, v19);
            unint64_t v16 = v20;
            unint64_t v18 = v24;
            uint64_t v15 = v21;
          }
          void v15[2] = v18;
          sub_1ACB1DF98((uint64_t)v26, (uint64_t)&v15[5 * v16 + 4]);
        }
        v14 += 32;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
    }
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v10(a1, a2);
    swift_bridgeObjectRelease();
    *(void *)a3 = v15;
    char v12 = 14;
    goto LABEL_47;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770968);
  if (swift_dynamicCast())
  {
    uint64_t v22 = sub_1ACB1AC14(*(uint64_t *)&v28[0]);
    swift_bridgeObjectRelease();
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v10(a1, a2);
    *(void *)a3 = v22;
    char v12 = 15;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    sub_1ACA3AA44(v28, v26);
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v10(a1, a2);
    sub_1ACA3AA44(v26, (_OWORD *)a3);
    char v12 = 16;
    goto LABEL_47;
  }
  uint64_t result = sub_1ACE77838();
  __break(1u);
  return result;
}

uint64_t AnyCodable.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    LOBYTE(v7) = sub_1ACE77868() & 1;
    char v8 = 0;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
    sub_1ACB1DF98((uint64_t)&v7, a2);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t AnyCodable.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  sub_1ACA6A14C(v1, (uint64_t)v7);
  switch(v8)
  {
    case 1:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_1ACE778D8();
      goto LABEL_19;
    case 2:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_1ACE77918();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    case 3:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_1ACE77948();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    case 4:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_1ACE77958();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    case 5:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_1ACE77968();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    case 6:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_1ACE77978();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    case 7:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_1ACE77928();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    case 8:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_1ACE77988();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    case 9:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_1ACE77998();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    case 10:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_1ACE779A8();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    case 11:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_1ACE779B8();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    case 12:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_1ACE77908();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    case 13:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_1ACE778F8();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    case 14:
      *(void *)&v6[0] = *(void *)&v7[0];
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4600);
      sub_1ACC86C2C(&qword_1E99F4618, (void (*)(void))sub_1ACA65540);
      goto LABEL_18;
    case 15:
      *(void *)&v6[0] = *(void *)&v7[0];
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771C88);
      sub_1ACC86BB0(&qword_1EB771C90, (void (*)(void))sub_1ACA65540);
LABEL_18:
      sub_1ACE77938();
LABEL_19:
      swift_bridgeObjectRelease();
      break;
    case 16:
      sub_1ACA3AA44(v7, v6);
      uint64_t v2 = sub_1ACE77358();
      swift_allocError();
      uint64_t v4 = v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4610);
      sub_1ACA33128((uint64_t)v6, v4);
      sub_1ACE77308();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104))(v4, *MEMORY[0x1E4FBBAA0], v2);
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
      break;
    default:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_1ACE778E8();
      break;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
}

uint64_t sub_1ACC82B1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AnyCodable.init(from:)(a1, a2);
}

uint64_t sub_1ACC82B34(void *a1)
{
  return AnyCodable.encode(to:)(a1);
}

uint64_t AnyCodable.init(BOOLeanLiteral:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  a2[32] = 0;
  return result;
}

uint64_t AnyCodable.init(integerLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 32) = 2;
  return result;
}

void AnyCodable.init(floatLiteral:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(unsigned char *)(a1 + 32) = 13;
}

uint64_t AnyCodable.init(stringLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 32) = 1;
  return result;
}

uint64_t AnyCodable.init(dictionaryLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3F8);
    uint64_t v4 = sub_1ACE77558();
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC868];
  }
  uint64_t v7 = v4;
  sub_1ACC86C9C(a1, 1, &v7);
  swift_bridgeObjectRelease();
  uint64_t v5 = v7;
  return sub_1ACC81938(v5, a2);
}

unsigned char *sub_1ACC82C34@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  a2[32] = 0;
  return result;
}

void *sub_1ACC82C44@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 32) = 2;
  return result;
}

double sub_1ACC82C58@<D0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  double result = *a1;
  *(double *)a2 = *a1;
  *(unsigned char *)(a2 + 32) = 13;
  return result;
}

uint64_t sub_1ACC82C70(void *a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4185D28](*a1, a1[1], a2, a3);
}

uint64_t sub_1ACC82C88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3F8);
    uint64_t v4 = sub_1ACE77558();
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC868];
  }
  uint64_t v7 = v4;
  sub_1ACC86C9C(a1, 1, &v7);
  swift_bridgeObjectRelease();
  uint64_t v5 = v7;
  return sub_1ACC81938(v5, a2);
}

void *sub_1ACC82D30@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = result[1];
  *(void *)a2 = *result;
  *(void *)(a2 + 8) = v2;
  *(unsigned char *)(a2 + 32) = 1;
  return result;
}

uint64_t sub_1ACC82D44(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC834F4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC82D64(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC83660(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC82D84(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC837EC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC82DA4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC8628C(a1, a2, a3, (void *)*v3, &qword_1E99F0CB8, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC82DE0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC8395C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC82E00(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC83AE8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC82E20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC83C90(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC82E40(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC83E1C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC82E60(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC84564(a1, a2, a3, *v3, (uint64_t *)&unk_1EB769190);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC82E88(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC83FB4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC82EA8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC84120(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC82EC8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC84280(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC82EE8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC846C0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC82F08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC84820(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC82F28(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC84980(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC82F48(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC85700(a1, a2, a3, *v3, &qword_1EB769140);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC82F78(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC84AE0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC82F98(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC84C40(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC82FB8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC85700(a1, a2, a3, *v3, &qword_1EB7707B0);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC82FE8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC85404(a1, a2, a3, (void *)*v3, &qword_1EB771CE0, &qword_1EB770968);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC83018(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC85DD8(a1, a2, a3, (void *)*v3, &qword_1EB76A900, (uint64_t *)&unk_1EB76AD50);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC83048(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC84F24(a1, a2, a3, (void *)*v3, &qword_1EB76ED70, &qword_1EB76EC58);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC83078(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC84DD4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC83098(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC84F24(a1, a2, a3, (void *)*v3, &qword_1EB76ED78, qword_1EB76EC60);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC830C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC84F24(a1, a2, a3, (void *)*v3, &qword_1EB76ED90, &qword_1EB76ED40);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC830F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC84564(a1, a2, a3, *v3, &qword_1EB769180);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC83120(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC866A0(a1, a2, a3, (void *)*v3, &qword_1EB76EC28, &qword_1EB76EBE0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC83150(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC85594(a1, a2, a3, *v3, &qword_1E99F0CE0);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC83180(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC8525C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC831A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC85404(a1, a2, a3, (void *)*v3, &qword_1E99F4730, &qword_1E99F4738);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC831D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC85404(a1, a2, a3, (void *)*v3, &qword_1EB76E490, &qword_1EB76E020);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC83200(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC85404(a1, a2, a3, (void *)*v3, &qword_1E99F4710, &qword_1E99F4718);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC83230(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC85A0C(a1, a2, a3, (void *)*v3, &qword_1EB7707B8, &qword_1EB770650);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC83260(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC85404(a1, a2, a3, (void *)*v3, &qword_1E99F0D18, &qword_1EB7731B8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC83290(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC85594(a1, a2, a3, *v3, &qword_1E99F4648);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC832C0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC864D4(a1, a2, a3, (void *)*v3, &qword_1EB771B00);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC832F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC85880(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC83310(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC85A0C(a1, a2, a3, (void *)*v3, &qword_1E99F4640, (uint64_t *)&unk_1E99F3EB0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC83340(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC85C4C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC83360(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC85DD8(a1, a2, a3, (void *)*v3, &qword_1E99F46F0, &qword_1E99F46F8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC83390(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC8628C(a1, a2, a3, (void *)*v3, &qword_1E99F46E0, type metadata accessor for DownloadConsistency.Issue);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC833CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC8628C(a1, a2, a3, (void *)*v3, &qword_1EB76E438, MEMORY[0x1E4F276F0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC83408(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC85F80(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC83428(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC86108(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC83448(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC8628C(a1, a2, a3, (void *)*v3, &qword_1E99F4638, type metadata accessor for FairPlayMigrationData);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC83484(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC864D4(a1, a2, a3, (void *)*v3, &qword_1EB769148);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC834B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC8684C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1ACC834D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1ACC869A8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1ACC834F4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC83660(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F46D8);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    long long v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E90);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC837EC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769598);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC8395C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4670);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    long long v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4678);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC83AE8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4660);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    long long v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4668);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC83C90(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E498);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    long long v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC83E1C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4650);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    long long v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4658);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC83FA8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1ACC84564(a1, a2, a3, a4, (uint64_t *)&unk_1EB769190);
}

uint64_t sub_1ACC83FB4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7707A8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC84120(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0D98);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC84280(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4758);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 80 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    memcpy(v12, v13, v14);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC843EC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F4760);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 40 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    memcpy(v12, v13, v14);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC84558(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1ACC84564(a1, a2, a3, a4, &qword_1EB769180);
}

uint64_t sub_1ACC84564(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  size_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC846C0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0D78);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC84820(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772728);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC84980(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4750);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    memcpy(v13, v14, v8 << 6);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}