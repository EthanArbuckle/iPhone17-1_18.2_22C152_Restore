uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

uint64_t block_destroy_helper_32()
{
  return swift_release();
}

uint64_t block_destroy_helper_33()
{
  return swift_release();
}

uint64_t block_destroy_helper_34()
{
  return swift_release();
}

uint64_t block_destroy_helper_35()
{
  return swift_release();
}

uint64_t block_destroy_helper_36()
{
  return swift_release();
}

uint64_t block_destroy_helper_37()
{
  return swift_release();
}

uint64_t block_destroy_helper_38()
{
  return swift_release();
}

uint64_t block_destroy_helper_39()
{
  return swift_release();
}

uint64_t block_destroy_helper_40()
{
  return swift_release();
}

uint64_t block_destroy_helper_41()
{
  return swift_release();
}

uint64_t block_destroy_helper_42()
{
  return swift_release();
}

uint64_t block_destroy_helper_43()
{
  return swift_release();
}

uint64_t block_destroy_helper_44()
{
  return swift_release();
}

uint64_t block_destroy_helper_45()
{
  return swift_release();
}

uint64_t block_destroy_helper_46()
{
  return swift_release();
}

uint64_t block_destroy_helper_47()
{
  return swift_release();
}

uint64_t block_destroy_helper_48()
{
  return swift_release();
}

uint64_t block_destroy_helper_49()
{
  return swift_release();
}

uint64_t block_destroy_helper_50()
{
  return swift_release();
}

uint64_t block_destroy_helper_51()
{
  return swift_release();
}

uint64_t block_destroy_helper_52()
{
  return swift_release();
}

uint64_t block_destroy_helper_53()
{
  return swift_release();
}

uint64_t block_destroy_helper_54()
{
  return swift_release();
}

uint64_t block_destroy_helper_55()
{
  return swift_release();
}

uint64_t block_destroy_helper_56()
{
  return swift_release();
}

uint64_t block_destroy_helper_57()
{
  return swift_release();
}

uint64_t block_destroy_helper_58()
{
  return swift_release();
}

uint64_t block_destroy_helper_59()
{
  return swift_release();
}

uint64_t block_destroy_helper_60()
{
  return swift_release();
}

uint64_t block_destroy_helper_61()
{
  return swift_release();
}

uint64_t block_destroy_helper_62()
{
  return swift_release();
}

uint64_t block_destroy_helper_63()
{
  return swift_release();
}

uint64_t block_destroy_helper_64()
{
  return swift_release();
}

uint64_t block_destroy_helper_65()
{
  return swift_release();
}

uint64_t block_destroy_helper_66()
{
  return swift_release();
}

uint64_t block_destroy_helper_67()
{
  return swift_release();
}

uint64_t block_destroy_helper_68()
{
  return swift_release();
}

uint64_t block_destroy_helper_69()
{
  return swift_release();
}

uint64_t block_destroy_helper_70()
{
  return swift_release();
}

uint64_t block_destroy_helper_71()
{
  return swift_release();
}

uint64_t block_destroy_helper_72()
{
  return swift_release();
}

uint64_t block_destroy_helper_73()
{
  return swift_release();
}

uint64_t block_destroy_helper_74()
{
  return swift_release();
}

uint64_t block_destroy_helper_75()
{
  return swift_release();
}

uint64_t block_destroy_helper_76()
{
  return swift_release();
}

uint64_t block_destroy_helper_77()
{
  return swift_release();
}

uint64_t block_destroy_helper_78()
{
  return swift_release();
}

uint64_t block_destroy_helper_79()
{
  return swift_release();
}

uint64_t block_destroy_helper_80()
{
  return swift_release();
}

uint64_t block_destroy_helper_81()
{
  return swift_release();
}

uint64_t block_destroy_helper_82()
{
  return swift_release();
}

uint64_t block_destroy_helper_83()
{
  return swift_release();
}

uint64_t block_destroy_helper_84()
{
  return swift_release();
}

uint64_t block_destroy_helper_85()
{
  return swift_release();
}

uint64_t block_destroy_helper_86()
{
  return swift_release();
}

uint64_t block_destroy_helper_87()
{
  return swift_release();
}

uint64_t block_destroy_helper_88()
{
  return swift_release();
}

uint64_t block_destroy_helper_89()
{
  return swift_release();
}

uint64_t block_destroy_helper_90()
{
  return swift_release();
}

uint64_t block_destroy_helper_91()
{
  return swift_release();
}

uint64_t block_destroy_helper_92()
{
  return swift_release();
}

uint64_t block_destroy_helper_93()
{
  return swift_release();
}

uint64_t block_destroy_helper_94()
{
  return swift_release();
}

uint64_t block_destroy_helper_95()
{
  return swift_release();
}

uint64_t block_destroy_helper_96()
{
  return swift_release();
}

uint64_t block_destroy_helper_97()
{
  return swift_release();
}

uint64_t os_feature_enabled_prototype_up_next()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "UpNextAffinityScorePrototype");
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 __swift_memcpy256_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  long long v8 = a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  long long v12 = a2[13];
  long long v13 = a2[15];
  *(_OWORD *)(a1 + 224) = a2[14];
  *(_OWORD *)(a1 + 240) = v13;
  *(__n128 *)(a1 + 192) = result;
  *(_OWORD *)(a1 + 208) = v12;
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void sub_1AC9D9F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 __swift_memcpy35_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void sub_1AC9DA168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t os_feature_enabled_up_next_with_modified_date_score()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "UpNextWithModifiedDateScore");
}

uint64_t os_feature_enabled_homepod_siri_donation_from_apns()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "HomePodSiriDonationFromAPNS");
}

uint64_t os_feature_enabled_disable_homepod_station_donation()
{
  uint64_t result = +[PFClientUtil isRunningOnHomepod];
  if (result)
  {
    return MEMORY[0x1F40C9FB0]("Podcasts", "DisableSiriPlistDumper");
  }
  return result;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

dispatch_source_t MT_makeDispatchSourceTypeVfs(dispatch_queue_t queue)
{
  dispatch_source_t v1 = dispatch_source_create(MEMORY[0x1E4F14498], 0, 0x7204uLL, queue);
  return v1;
}

__n128 __swift_memcpy83_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 79) = *(_DWORD *)(a2 + 79);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t MTEpisodePriceTypeFromPersistentString(void *a1)
{
  id v1 = a1;
  long long v2 = MTEpisodePriceTypeToPersistentStringMap_inverted(1);
  uint64_t v3 = [v2 objectForKey:v1];

  if (v3) {
    long long v4 = (void *)v3;
  }
  else {
    long long v4 = &unk_1F03D7FB0;
  }
  uint64_t v5 = [v4 unsignedIntegerValue];

  return v5;
}

id MTEpisodePriceTypeToPersistentStringMap_inverted(int a1)
{
  if (MTEpisodePriceTypeToPersistentStringMap_inverted_onceToken != -1) {
    dispatch_once(&MTEpisodePriceTypeToPersistentStringMap_inverted_onceToken, &__block_literal_global_518);
  }
  long long v2 = &MTEpisodePriceTypeToPersistentStringMap_inverted_invertedMap;
  if (!a1) {
    long long v2 = &MTEpisodePriceTypeToPersistentStringMap_inverted_map;
  }
  uint64_t v3 = (void *)*v2;
  return v3;
}

void sub_1AC9DB404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t os_feature_enabled_bag_snapshot_overlay()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "BagSnapshotOverlay");
}

os_log_t _MTLogCategoryBag()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "Bag");
  return v0;
}

void sub_1AC9DC5C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_log_t _MTLogCategoryMetrics()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "Metrics");
  return v0;
}

id jsonSerializableValueForValue(void *a1)
{
  id v1 = a1;
  if ([v1 conformsToProtocol:&unk_1F03F8988])
  {
    long long v2 = objc_msgSend(v1, "im_jsonSerializableValue");
  }
  else if (v1)
  {
    CFTypeID v3 = CFGetTypeID(v1);
    long long v4 = (__CFString *)CFCopyTypeIDDescription(v3);
    if ([(__CFString *)v4 length])
    {
      long long v2 = jsonSerializableValueForCoreFoundationType(v1, v4);
    }
    else
    {
      long long v2 = 0;
    }
  }
  else
  {
    long long v2 = 0;
  }

  return v2;
}

os_log_t _MTLogCategoryFeedUpdate()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "FeedUpdate");
  return v0;
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v1 = sub_1ACE75118();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_3()
{
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 88)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  }
  return swift_deallocObject();
}

uint64_t objectdestroyTm_4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_5()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_6()
{
  uint64_t v1 = (int *)(type metadata accessor for KCUTranscriptProvider() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v3 = v2 + v1[9];
  uint64_t v4 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_7()
{
  uint64_t v1 = *(void *)(type metadata accessor for DownloadConsistency.Issue(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v5 = sub_1ACE75118();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v2, v5);
    unint64_t v6 = v0 + v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48);
    uint64_t v7 = sub_1ACE74F28();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    uint64_t v4 = sub_1ACE75118();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898);
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t objectdestroyTm_8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_9()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_10()
{
  uint64_t v1 = sub_1ACE753F8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_11()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = sub_1ACE767F8();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_12()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB770628) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770620);
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_13()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_15()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 72)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  }
  return swift_deallocObject();
}

uint64_t objectdestroyTm_16(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_17()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_19()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_20()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  return swift_deallocObject();
}

uint64_t objectdestroy_27Tm()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_21(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = *(void *)(*(void *)(v2 - 8) + 64);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v1 + v3, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v1 + v3, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = v1 + v3 + *(int *)(v2 + 36);
  if (*(void *)(v7 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v7);
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v1 + ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_22()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_23()
{
  swift_release();

  return swift_deallocObject();
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

os_log_t _MTLogCategoryCloudSync()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "CloudSync");
  return v0;
}

uint64_t os_feature_enabled_use_episode_description_for_summary()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "UseEpisodeDescriptionForSummary");
}

void sub_1AC9E0F2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t os_feature_enabled_remove_clean_episode_title()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "RemoveCleanEpisodeTitle");
}

uint64_t os_feature_enabled_red_sun()
{
  return 1;
}

uint64_t os_feature_enabled_bluemoon()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "BlueMooniOS");
}

uint64_t os_feature_enabled_unfollowed_shows_in_up_next()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "UnfollowedShowsInUpNext");
}

uint64_t objectdestroy_44Tm()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t objectdestroy_64Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1AC9E627C(void *a1)
{
}

void sub_1AC9E629C(_Unwind_Exception *a1)
{
}

void sub_1AC9E6424(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AC9E6520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AC9E6668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

os_log_t _MTLogCategoryDatabase()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "Database");
  return v0;
}

void sub_1AC9E75B0(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_1AC9E78C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_36(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_37(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_39(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_41(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_42(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_43(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_45(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_46(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_47(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_49(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_50(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_51(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_52(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_53(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_55(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_56(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_57(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_59(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_61(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_62(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_63(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_65(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_66(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_67(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_69(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_71(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_72(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_73(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_75(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_76(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_77(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_79(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_81(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_82(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_83(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_85(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_86(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_87(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_89(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_91(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_92(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_93(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_95(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_96(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_97(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t __swift_memcpy11_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 7) = *(_DWORD *)((char *)a2 + 7);
  *(void *)__n128 result = v2;
  return result;
}

void sub_1AC9E8E78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1AC9E9008(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AC9E947C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

uint64_t os_feature_enabled_debounced_asset_management()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "DebouncedAssetManager");
}

uint64_t objectdestroy_8Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_29Tm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

os_log_t _MTLogCategoryLifecycle()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "Lifecycle");
  return v0;
}

uint64_t os_feature_enabled_removed_imagestore()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "RemoveMTImageStore");
}

uint64_t os_feature_enabled_disable_siri_plist_dumper()
{
  uint64_t result = +[PFClientUtil isRunningOnHomepod];
  if (result)
  {
    return MEMORY[0x1F40C9FB0]("Podcasts", "DisableSiriPlistDumper");
  }
  return result;
}

uint64_t os_feature_enabled_batch_feed_fetch()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "BatchFeedFetch");
}

void sub_1AC9EB130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

os_log_t _MTLogCategoryDefault()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "Podcasts");
  return v0;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t objectdestroy_70Tm()
{
  swift_bridgeObjectRelease();
  sub_1ACAC5D40(*(id *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t os_feature_enabled_batch_feed_fetch_on_push_forced()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "BatchFeedFetchOnPushForced");
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v1 = type metadata accessor for MediaRequest.Params();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_1ACA39518(*(void *)(v0 + v2), *(void *)(v0 + v2 + 8), *(void *)(v0 + v2 + 16), *(void *)(v0 + v2 + 24), *(void *)(v0 + v2 + 32), *(unsigned char *)(v0 + v2 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = v0 + v2 + *(int *)(v1 + 104);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + ((((((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)));
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm_0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm_1()
{
  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm_2()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return swift_deallocObject();
}

os_log_t _MTLogCategoryNetwork()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "Network");
  return v0;
}

os_log_t _MTLogCategoryiTunesMigration()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "iTunesMigration");
  return v0;
}

uint64_t objectdestroy_2Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_0()
{
  swift_release();
  sub_1ACA63688(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));

  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + 168) != 2) {
    sub_1ACA63738(*(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(unsigned char *)(v0 + 152));
  }
  int v1 = *(unsigned __int8 *)(v0 + 232);
  if (v1 != 255) {
    sub_1ACA63688(*(void *)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 216), *(void *)(v0 + 224), v1);
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_1()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_2(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_27Tm_0(uint64_t (*a1)(void))
{
  uint64_t v3 = sub_1ACE74F28();
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = a1(0);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = (v6 + v8 + 8) & ~v8;
  long long v10 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
  v10(v1 + v5, v3);

  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1 + v9, 1, v3)) {
    v10(v1 + v9, v3);
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = v1 + v9 + *(int *)(v7 + 36);
  if (*(void *)(v11 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v11);
  }
  swift_release();
  return swift_deallocObject();
}

void sub_1AC9ED5D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AC9ED6D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

Class __getASDSubscriptionEntitlementsClass_block_invoke(uint64_t a1)
{
  AppStoreDaemonLibrary();
  Class result = objc_getClass("ASDSubscriptionEntitlements");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getASDSubscriptionEntitlementsClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getASDSubscriptionEntitlementsClass_block_invoke_cold_1();
    return (Class)AppStoreDaemonLibrary();
  }
  return result;
}

uint64_t AppStoreDaemonLibrary()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!AppStoreDaemonLibraryCore_frameworkLibrary)
  {
    v3[1] = MEMORY[0x1E4F143A8];
    v3[2] = 3221225472;
    v3[3] = __AppStoreDaemonLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    v3[5] = v3;
    long long v4 = xmmword_1E5E63868;
    uint64_t v5 = 0;
    AppStoreDaemonLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = AppStoreDaemonLibraryCore_frameworkLibrary;
  uint64_t v1 = (void *)v3[0];
  if (!AppStoreDaemonLibraryCore_frameworkLibrary)
  {
    uint64_t v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

void sub_1AC9EDFE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AC9EE29C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AC9EE394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *Class result = *a2;
  return result;
}

uint64_t objectdestroy_43Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1AC9EEABC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AC9EEB9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AC9EF04C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AC9EF198(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t objectdestroy_8Tm_0()
{
  uint64_t v1 = sub_1ACE76708();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

os_log_t _MTLogCategorySiri()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "Siri");
  return v0;
}

os_log_t _MTLogCategoryPrivacy()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "Privacy");
  return v0;
}

os_log_t _MTLogCategoryDownload()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "Downloads");
  return v0;
}

os_log_t _MTLogCategoryBackgroundFetching()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "BackgroundFetching");
  return v0;
}

void sub_1AC9F03D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = sub_1ACE767F8();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_3Tm_0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t __IMInitializeLogCategories_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "iTunesMobile");
  uint64_t v1 = IMLogCategoryDefault;
  IMLogCategoryDefault = (uint64_t)v0;
  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1AC9F0B30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

uint64_t objectdestroy_6Tm()
{
  swift_release();
  sub_1ACAC1E88(*(id *)(v0 + 32), *(unsigned char *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t objectdestroy_6Tm_0(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  __swift_destroy_boxed_opaque_existential_0(v1 + 16);
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v1 + v3, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v1 + v3, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = v1 + v3 + *(int *)(v2 + 36);
  if (*(void *)(v6 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v6);
  }
  return swift_deallocObject();
}

uint64_t objectdestroy_6Tm_1()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return swift_deallocObject();
}

id PFAnalyticsNumberForGlobalEpisodeLimit()
{
  uint64_t v0 = [MEMORY[0x1E4F1CB18] _applePodcastsFoundationSettingsUserDefaults];
  uint64_t v1 = [v0 objectForKey:@"MTPodcastEpisodeLimitDefaultKey"];

  uint64_t v2 = PFAnalyticsNumberFromPodcastEpisodeLimitPolicy(v1);

  return v2;
}

void *PFAnalyticsNumberFromPodcastEpisodeLimitPolicy(void *a1)
{
  id v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    uint64_t v2 = [v1 unsignedLongLongValue];
    unint64_t v3 = &unk_1F03D7E18;
    if (v2 > 4294967294)
    {
      if (v2 == 0x100000001) {
        uint64_t v5 = &unk_1F03D7F38;
      }
      else {
        uint64_t v5 = &unk_1F03D7E18;
      }
      if (v2 == 0x100000000) {
        uint64_t v6 = &unk_1F03D7F20;
      }
      else {
        uint64_t v6 = v5;
      }
      if (v2 == 0xFFFFFFFFLL) {
        unint64_t v3 = &unk_1F03D7F08;
      }
      else {
        unint64_t v3 = v6;
      }
    }
    else
    {
      switch(v2)
      {
        case 1:
          unint64_t v3 = &unk_1F03D7E30;
          break;
        case 2:
          unint64_t v3 = &unk_1F03D7E48;
          break;
        case 3:
          unint64_t v3 = &unk_1F03D7E60;
          break;
        case 4:
          unint64_t v3 = &unk_1F03D7E78;
          break;
        case 5:
          unint64_t v3 = &unk_1F03D7E90;
          break;
        case 6:
          unint64_t v3 = &unk_1F03D7EA8;
          break;
        case 7:
          unint64_t v3 = &unk_1F03D7EC0;
          break;
        case 8:
          unint64_t v3 = &unk_1F03D7ED8;
          break;
        case 9:
          unint64_t v3 = &unk_1F03D7EF0;
          break;
        default:
          break;
      }
    }
  }
  else
  {
    unint64_t v3 = 0;
  }

  return v3;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t objectdestroy_114Tm(uint64_t (*a1)(void), uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = *(void *)(a1(0) - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = v3 + v7;
  swift_release();
  uint64_t v10 = v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a2) + 60);
  uint64_t v11 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1AC9F1A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getSDRDiagnosticReporterClass_block_invoke(uint64_t a1)
{
  SymptomDiagnosticReporterLibrary();
  Class result = objc_getClass("SDRDiagnosticReporter");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getSDRDiagnosticReporterClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getSDRDiagnosticReporterClass_block_invoke_cold_1();
    return (Class)SymptomDiagnosticReporterLibrary();
  }
  return result;
}

uint64_t SymptomDiagnosticReporterLibrary()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!SymptomDiagnosticReporterLibraryCore_frameworkLibrary)
  {
    v3[1] = MEMORY[0x1E4F143A8];
    v3[2] = 3221225472;
    v3[3] = __SymptomDiagnosticReporterLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    v3[5] = v3;
    long long v4 = xmmword_1E5E621F0;
    uint64_t v5 = 0;
    SymptomDiagnosticReporterLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = SymptomDiagnosticReporterLibraryCore_frameworkLibrary;
  id v1 = (void *)v3[0];
  if (!SymptomDiagnosticReporterLibraryCore_frameworkLibrary)
  {
    id v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t objectdestroy_120Tm(uint64_t (*a1)(void), uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = *(void *)(a1(0) - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = v3 + v7;
  swift_release();
  uint64_t v10 = v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a2) + 60);
  uint64_t v11 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

__n128 __swift_memcpy176_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void sub_1AC9F24EC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id IMTimeStamp()
{
  [MEMORY[0x1E4F28C10] setDefaultFormatterBehavior:1040];
  id v0 = objc_alloc_init(MEMORY[0x1E4F28C10]);
  [v0 setDateFormat:@"YYYY-MM-dd HH:mm:ss.SSS"];
  id v1 = [MEMORY[0x1E4F1C9C8] date];
  uint64_t v2 = [v0 stringFromDate:v1];

  return v2;
}

void sub_1AC9F3518(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_log_t _IMStoreLogCategoryDefault()
{
  os_log_t v0 = os_log_create("com.apple.podcasts.imstoreutil", "Podcasts");
  return v0;
}

void sub_1AC9F5E1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void sub_1AC9F8164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id IMAccessibilityLocalizedNumber(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [MEMORY[0x1E4F29060] currentThread];
  long long v3 = [v2 threadDictionary];
  id v4 = [v3 objectForKey:IMThreadLocalLocalizedNumberFormatter];

  if (!v4)
  {
    id v4 = objc_alloc_init(MEMORY[0x1E4F28EE0]);
    [v4 setNumberStyle:1];
    long long v5 = [MEMORY[0x1E4F1CA20] currentLocale];
    [v4 setLocale:v5];

    long long v6 = [MEMORY[0x1E4F29060] currentThread];
    unint64_t v7 = [v6 threadDictionary];
    [v7 setObject:v4 forKey:IMThreadLocalLocalizedNumberFormatter];
  }
  long long v8 = [v4 stringFromNumber:v1];

  return v8;
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

uint64_t __ServerConnectionCallback(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return [a4 _handleTelephonyNotificationWithName:a2 userInfo:a3];
}

void __ReachabilityCallback(uint64_t a1, uint64_t a2, os_unfair_lock_s *a3)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  if (!objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F4DCE8], "sharedConfig"), "debugLogsEnabled")) {
    goto LABEL_17;
  }
  id v5 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v6 = v5;
  if ((a2 & 2) != 0)
  {
    [v5 addObject:@"reachable"];
    if ((a2 & 0x40000) == 0)
    {
LABEL_4:
      if ((a2 & 8) == 0) {
        goto LABEL_5;
      }
      goto LABEL_20;
    }
  }
  else if ((a2 & 0x40000) == 0)
  {
    goto LABEL_4;
  }
  [v6 addObject:@"wwan"];
  if ((a2 & 8) == 0)
  {
LABEL_5:
    if ((a2 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  [v6 addObject:@"automatic"];
  if ((a2 & 0x20) == 0)
  {
LABEL_6:
    if ((a2 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  [v6 addObject:@"on-demand"];
  if ((a2 & 8) == 0)
  {
LABEL_7:
    if ((a2 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  [v6 addObject:@"on-traffic"];
  if ((a2 & 4) == 0)
  {
LABEL_8:
    if ((a2 & 0x20000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  [v6 addObject:@"connection-required"];
  if ((a2 & 0x20000) == 0)
  {
LABEL_9:
    if ((a2 & 0x10000) == 0) {
      goto LABEL_10;
    }
LABEL_25:
    [v6 addObject:@"local"];
    if ((a2 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_24:
  [v6 addObject:@"direct"];
  if ((a2 & 0x10000) != 0) {
    goto LABEL_25;
  }
LABEL_10:
  if (a2) {
LABEL_11:
  }
    [v6 addObject:@"transient"];
LABEL_12:
  id v7 = +[IMNetworkObserver _networkObserverLogConfig];
  if (!v7) {
    id v7 = (id)[MEMORY[0x1E4F4DCE8] sharedConfig];
  }
  long long v8 = [v7 OSLogObject];
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = 138412802;
    uint64_t v10 = objc_opt_class();
    __int16 v11 = 1024;
    int v12 = a2;
    __int16 v13 = 2112;
    uint64_t v14 = [v6 componentsJoinedByString:@", "];
    _os_log_impl(&dword_1AC9D5000, v8, OS_LOG_TYPE_DEFAULT, "%@: Reachability change: %d (%@)", (uint8_t *)&v9, 0x1Cu);
  }

LABEL_17:
  os_unfair_lock_lock(a3 + 18);
  [(os_unfair_lock_s *)a3 _reloadNetworkTypeWithReachabilityFlags:a2];
  os_unfair_lock_unlock(a3 + 18);
}

void sub_1AC9FA060(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, long long buf)
{
  if (a2 == 1)
  {
    id v19 = objc_begin_catch(a1);
    objc_end_catch();
    if (v19)
    {
      v20 = _MTLogCategoryDefault();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        LODWORD(buf) = 138412290;
        *(void *)((char *)&buf + 4) = v19;
        _os_log_impl(&dword_1AC9D5000, v20, OS_LOG_TYPE_ERROR, "Request for invalid computed property value! %@", (uint8_t *)&buf, 0xCu);
      }
      JUMPOUT(0x1AC9F9F7CLL);
    }
    JUMPOUT(0x1AC9F9F80);
  }
  _Unwind_Resume(a1);
}

void sub_1AC9FA43C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

uint64_t mt_randomPersistID()
{
  v3[2] = *MEMORY[0x1E4F143B8];
  os_log_t v0 = [MEMORY[0x1E4F29128] UUID];
  v3[0] = 0;
  v3[1] = 0;
  [v0 getUUIDBytes:v3];
  uint64_t v1 = v3[0];

  return v1;
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void sub_1AC9FC10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1AC9FC214(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AC9FC394(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

BOOL MT_isDispatchSourceDataVfsDesiredDisk(uint64_t a1)
{
  return a1 == 0x4000;
}

uint64_t MT_isDispatchSourceDataVfsConstrainedDisk(uint64_t a1)
{
  BOOL v1 = a1 == 0x2000;
  if (a1 == 4096) {
    BOOL v1 = 1;
  }
  return a1 == 4 || v1;
}

BOOL MT_isDispatchSourceDataVfsFullDisk(uint64_t a1)
{
  return a1 == 512;
}

os_log_t _MTLogCategoryMediaLibrary()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "MediaLibrary");
  return v0;
}

os_log_t _MTLogCategoryDRM()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "DRM");
  return v0;
}

os_log_t _MTLogCategoryPlayback()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "Playback");
  return v0;
}

os_log_t _MTLogCategoryMediaRemote()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "MediaRemote");
  return v0;
}

os_log_t _MTLogCategoryMediaRemoteRouting()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "MediaRemoteRouting");
  return v0;
}

os_log_t _MTLogCategoryFeedUpdateIngester()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "FeedUpdateIngester");
  return v0;
}

os_log_t _MTLogCategoryArtworkDownload()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "ArtworkDownload");
  return v0;
}

os_log_t _MTLogCategoryNotifications()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "Notifications");
  return v0;
}

os_log_t _MTLogCategorySpotlight()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "Spotlight");
  return v0;
}

os_log_t _MTLogCategoryCarPlay()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "CarPlay");
  return v0;
}

os_log_t _MTLogCategoryBridge()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "Bridge");
  return v0;
}

os_log_t _MTLogCategoryUPPSync()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "UPPSync");
  return v0;
}

os_log_t _MTLogCategoryAsyncTask()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "AsyncTask");
  return v0;
}

os_log_t _MTLogCategoryMacOSSpecific()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "MacOS");
  return v0;
}

os_log_t _MTLogCategoryAppRemoval()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "AppRemoval");
  return v0;
}

os_log_t _MTLogCategoryQuickLook()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "QuickLook");
  return v0;
}

os_log_t _MTLogCategoryFollowing()
{
  os_log_t v0 = os_log_create("com.apple.podcasts", "Following");
  return v0;
}

uint64_t IMGetMemoryStatistics(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if (a1 | a2)
  {
    memset(v11, 0, 40);
    task_info_outCnt[0] = 10;
    if (task_info(*MEMORY[0x1E4F14960], 0x12u, (task_info_t)v11, task_info_outCnt)) {
      return 0;
    }
    if (a1) {
      *(void *)a1 = *(void *)((char *)v11 + 4);
    }
    if (a2) {
      *(void *)a2 = *(void *)((char *)v11 + 12);
    }
  }
  if (a3 | a4)
  {
    *(void *)task_info_outCnt = 0;
    host_t v8 = MEMORY[0x1AD11A760]();
    mach_msg_type_number_t host_info_outCnt = 15;
    host_page_size(v8, (vm_size_t *)task_info_outCnt);
    memset(v11, 0, 60);
    if (host_statistics(v8, 2, (host_info_t)v11, &host_info_outCnt)) {
      return 0;
    }
    uint64_t v10 = *(void *)task_info_outCnt;
    if (a3) {
      *(void *)a3 = *(void *)task_info_outCnt * LODWORD(v11[0]);
    }
    if (a4) {
      *(void *)a4 = v10 * LODWORD(v11[0]) + ((DWORD2(v11[0]) + DWORD1(v11[0]) + HIDWORD(v11[0])) * v10);
    }
  }
  return 1;
}

void sub_1AC9FD4CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void sub_1AC9FDA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AC9FDD08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AC9FDFBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AC9FE1DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_1AC9FE64C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location,char a21)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void sub_1AC9FEB6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location,char a22)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a22, 8);
  _Unwind_Resume(a1);
}

void sub_1AC9FEE7C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1AC9FF100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AC9FF2AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AC9FF570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AC9FF7C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AC9FF9B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

void sub_1ACA002C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

void sub_1ACA01A24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1ACA01ADC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1ACA01BA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1ACA01C58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1ACA022A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t PFMostRestrictiveLimit(uint64_t result, unint64_t a2)
{
  unint64_t v2 = a2;
  uint64_t v3 = result;
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  if (result > 5)
  {
    if ((unint64_t)(result - 6) < 4)
    {
      if (a2 - 6 > 3)
      {
        if (a2 == 0x100000000) {
          uint64_t v6 = 0x100000000;
        }
        else {
          uint64_t v6 = result;
        }
        if (result - 5 >= a2) {
          unint64_t v7 = a2;
        }
        else {
          unint64_t v7 = result;
        }
        if (a2 - 1 <= 4) {
          return v7;
        }
        else {
          return v6;
        }
      }
      goto LABEL_15;
    }
    if (result != 0x100000000)
    {
LABEL_31:
      host_t v8 = _MTLogCategoryDownload();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        int v9 = 134217984;
        uint64_t v10 = v3;
        _os_log_impl(&dword_1AC9D5000, v8, OS_LOG_TYPE_ERROR, "Attempting to compare an incompatible episode limit: %lld", (uint8_t *)&v9, 0xCu);
      }

      return v2;
    }
    return 0x100000000;
  }
  if ((unint64_t)(result - 1) >= 5)
  {
    if (result) {
      goto LABEL_31;
    }
    return v2;
  }
  if (a2 - 1 > 4)
  {
    if (a2 == 0x100000000) {
      uint64_t v4 = 0x100000000;
    }
    else {
      uint64_t v4 = result;
    }
    if (result + 5 <= a2) {
      unint64_t v5 = result;
    }
    else {
      unint64_t v5 = a2;
    }
    if (a2 - 6 <= 3) {
      return v5;
    }
    else {
      return v4;
    }
  }
LABEL_15:
  if (result >= (uint64_t)a2) {
    return a2;
  }
  return result;
}

unint64_t PFMostPermissiveLimit(uint64_t a1, unint64_t a2)
{
  if (PFMostRestrictiveLimit(a1, a2) == a1) {
    return a2;
  }
  else {
    return a1;
  }
}

void sub_1ACA04670(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6(uint64_t a1)
{
}

void sub_1ACA0547C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__7(uint64_t a1)
{
}

void sub_1ACA06DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACA0723C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t MTPodcastHidesPlayedEpisodesAppWideUserDefaults()
{
  return [MEMORY[0x1E4F1CB18] _applePodcastsFoundationSettingsUserDefaults];
}

uint64_t MTPodcastHidesPlayedEpisodesResolved(int a1)
{
  if (a1) {
    return a1 == 2;
  }
  else {
    return MTPodcastHidesPlayedEpisodesAppWideSetting();
  }
}

uint64_t MTPodcastHidesPlayedEpisodesAppWideSetting()
{
  os_log_t v0 = [MEMORY[0x1E4F1CB18] _applePodcastsFoundationSettingsUserDefaults];
  uint64_t v1 = [v0 BOOLForKey:@"MTHidePlayedEpisodes"];

  return v1;
}

uint64_t os_feature_enabled_tinker_wha()
{
  return MEMORY[0x1F40C9FB0]("NanoMediaRemote", "TinkerWHA");
}

uint64_t os_feature_enabled_episode_more_menu_actions()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "EpisodeMoreMenuActions");
}

uint64_t os_feature_enabled_experimental_serial_episode_count()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "ExperimentalSerialEpisodeCount");
}

uint64_t os_feature_enabled_siri_donation_homepod()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "SiriDonationHomePod");
}

uint64_t os_feature_enabled_serial_sort_auto_downloads()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "SerialSortAutoDownloads");
}

uint64_t os_feature_enabled_download_consistency_checks()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "DownloadConsistencyChecks");
}

uint64_t os_feature_enable_use_optimized_predicate()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "UseOptimizedPredicate");
}

uint64_t os_feature_enable_itunes_cloud_fair_play_streaming()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "iTunesCloudFairPlayStreaming");
}

uint64_t os_feature_enabled_itunes_cloud_fair_play_offline()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "iTunesCloudFairPlayOffline");
}

uint64_t os_feature_enabled_story_sharing()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "StorySharing");
}

uint64_t os_feature_enabled_image_provider_on_watch()
{
  return +[PFClientUtil supportsImageStore] ^ 1;
}

uint64_t os_feature_enabled_responsive_playback()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "ResponsivePlayback");
}

uint64_t os_feature_enabled_disable_feed_update_processor()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "WatchDisableFeedUpdateProcessor");
}

uint64_t os_feature_enabled_recently_unfollowed()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "RecentlyUnfollowed");
}

uint64_t os_feature_enabled_podcasts_sync_qfa()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "PodcsatsSyncQFA2024");
}

uint64_t os_feature_enabled_home_tab()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "HomeTab");
}

uint64_t os_feature_enabled_skip_empty_upp_sync()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "SkipEmptyUPPSync");
}

uint64_t os_feature_enabled_batch_feed_fetch_on_push()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "BatchFeedFetchOnPush");
}

uint64_t os_feature_enabled_ponderosa()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "Ponderosa");
}

uint64_t os_feature_enabled_ponderosa_sync()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "PonderosaSync");
}

uint64_t os_feature_enabled_watch_up_next_widget()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "WatchUpNextWidget");
}

uint64_t os_feature_enabled_fetch_upp_on_library_push()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "FetchUPPOnLibraryPush");
}

uint64_t os_feature_enabled_disable_homepod_cloud_sync()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "DisableHomePodCloudSync");
}

uint64_t os_feature_enabled_preserve_player_set_duration()
{
  return MEMORY[0x1F40C9FB0]("Podcasts", "PreservePlayerSetDuration");
}

uint64_t isRunningUnitTests()
{
  if (isRunningUnitTests_onceToken != -1) {
    dispatch_once(&isRunningUnitTests_onceToken, &__block_literal_global_6);
  }
  return isRunningUnitTests_isXCTestLoaded;
}

Class __isRunningUnitTests_block_invoke()
{
  Class result = NSClassFromString(&cfstr_Xctestcase.isa);
  isRunningUnitTests_isXCTestLoaded = result != 0;
  return result;
}

__CFString *NSPersistentStringFromMTStopReason(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xE) {
    return @"none";
  }
  else {
    return off_1E5E62018[a1 - 1];
  }
}

uint64_t MTStopReasonFromNSPersistentString(void *a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([@"complete" isEqualToString:v1])
  {
    uint64_t v2 = 1;
  }
  else if ([@"playOther" isEqualToString:v1])
  {
    uint64_t v2 = 2;
  }
  else if ([@"pause" isEqualToString:v1])
  {
    uint64_t v2 = 3;
  }
  else if ([@"seek" isEqualToString:v1])
  {
    uint64_t v2 = 4;
  }
  else if ([@"transition" isEqualToString:v1])
  {
    uint64_t v2 = 5;
  }
  else if ([@"interrupted" isEqualToString:v1])
  {
    uint64_t v2 = 6;
  }
  else if ([@"background" isEqualToString:v1])
  {
    uint64_t v2 = 7;
  }
  else if ([@"exit" isEqualToString:v1])
  {
    uint64_t v2 = 8;
  }
  else if ([@"inactivity" isEqualToString:v1])
  {
    uint64_t v2 = 9;
  }
  else if ([@"error" isEqualToString:v1])
  {
    uint64_t v2 = 10;
  }
  else if ([@"failure" isEqualToString:v1])
  {
    uint64_t v2 = 11;
  }
  else if ([@"buffering" isEqualToString:v1])
  {
    uint64_t v2 = 12;
  }
  else if ([@"next" isEqualToString:v1])
  {
    uint64_t v2 = 13;
  }
  else if ([@"markPlayed" isEqualToString:v1])
  {
    uint64_t v2 = 14;
  }
  else if ([@"markUnplayed" isEqualToString:v1])
  {
    uint64_t v2 = 15;
  }
  else
  {
    if (([@"none" isEqualToString:v1] & 1) == 0)
    {
      uint64_t v3 = _MTLogCategoryDefault();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        int v5 = 138543362;
        id v6 = v1;
        _os_log_impl(&dword_1AC9D5000, v3, OS_LOG_TYPE_DEFAULT, "Unable to convert unknown stop reason identifer: %{public}@", (uint8_t *)&v5, 0xCu);
      }
    }
    uint64_t v2 = 0;
  }

  return v2;
}

__CFString *NSPersistentStringFromMTPlaybackAdjustmentInitiator(uint64_t a1)
{
  id v1 = @"Unknown";
  if (a1 == 2) {
    id v1 = @"Automatic";
  }
  if (a1 == 1) {
    return @"Manual";
  }
  else {
    return v1;
  }
}

id NSPersistentStringForMTPlayReason(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = MTPlayReasonToPersistentStringMap_inverted(0);
  uint64_t v3 = [MEMORY[0x1E4F28ED0] numberWithUnsignedInteger:a1];
  uint64_t v4 = [v2 objectForKey:v3];

  if ([v4 length])
  {
    if (v4) {
      goto LABEL_3;
    }
    goto LABEL_9;
  }
  id v6 = _MTLogCategoryDefault();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    v8[0] = 67109120;
    v8[1] = a1;
    _os_log_impl(&dword_1AC9D5000, v6, OS_LOG_TYPE_ERROR, "Invalid MTPlayReason encountered (%d)", (uint8_t *)v8, 8u);
  }

  if (!v4)
  {
LABEL_9:
    uint64_t v7 = MTPlayReasonToPersistentStringMap_inverted(0);
    uint64_t v4 = [v7 objectForKey:&unk_1F03D7F98];
  }
LABEL_3:
  return v4;
}

id MTPlayReasonToPersistentStringMap_inverted(int a1)
{
  if (MTPlayReasonToPersistentStringMap_inverted_onceToken != -1) {
    dispatch_once(&MTPlayReasonToPersistentStringMap_inverted_onceToken, &__block_literal_global_361);
  }
  uint64_t v2 = &MTPlayReasonToPersistentStringMap_inverted_invertedMap;
  if (!a1) {
    uint64_t v2 = &MTPlayReasonToPersistentStringMap_inverted_map;
  }
  uint64_t v3 = (void *)*v2;
  return v3;
}

uint64_t MTPlayReasonFromPersistentString(void *a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = MTPlayReasonToPersistentStringMap_inverted(1);
  uint64_t v3 = [v2 objectForKey:v1];

  if (!v3)
  {
    uint64_t v4 = _MTLogCategoryDefault();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v7 = 138412290;
      id v8 = v1;
      _os_log_impl(&dword_1AC9D5000, v4, OS_LOG_TYPE_ERROR, "Invalid MTPlayReason persistent string encountered (%@)", (uint8_t *)&v7, 0xCu);
    }

    uint64_t v3 = &unk_1F03D7F98;
  }
  uint64_t v5 = [v3 unsignedIntegerValue];

  return v5;
}

id NSPersistentStringForMTEpisodeContext(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = MTEpisodeContextToPersistentStringMap_inverted(0);
  uint64_t v3 = [MEMORY[0x1E4F28ED0] numberWithInteger:a1];
  uint64_t v4 = [v2 objectForKey:v3];

  if ([v4 length])
  {
    if (v4) {
      goto LABEL_3;
    }
    goto LABEL_9;
  }
  id v6 = _MTLogCategoryDefault();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    v8[0] = 67109120;
    v8[1] = a1;
    _os_log_impl(&dword_1AC9D5000, v6, OS_LOG_TYPE_ERROR, "Invalid MTEpisodeContext encountered (%d)", (uint8_t *)v8, 8u);
  }

  if (!v4)
  {
LABEL_9:
    int v7 = MTEpisodeContextToPersistentStringMap_inverted(0);
    uint64_t v4 = [v7 objectForKey:&unk_1F03D7FB0];
  }
LABEL_3:
  return v4;
}

id MTEpisodeContextToPersistentStringMap_inverted(int a1)
{
  if (MTEpisodeContextToPersistentStringMap_inverted_onceToken != -1) {
    dispatch_once(&MTEpisodeContextToPersistentStringMap_inverted_onceToken, &__block_literal_global_438);
  }
  uint64_t v2 = &MTEpisodeContextToPersistentStringMap_inverted_invertedMap;
  if (!a1) {
    uint64_t v2 = &MTEpisodeContextToPersistentStringMap_inverted_map;
  }
  uint64_t v3 = (void *)*v2;
  return v3;
}

uint64_t MTEpisodeContextFromPersistentString(void *a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = MTEpisodeContextToPersistentStringMap_inverted(1);
  uint64_t v3 = [v2 objectForKey:v1];

  if (!v3)
  {
    uint64_t v4 = _MTLogCategoryDefault();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v7 = 138412290;
      id v8 = v1;
      _os_log_impl(&dword_1AC9D5000, v4, OS_LOG_TYPE_ERROR, "Invalid MTEpisodeContext persistent string encountered (%@)", (uint8_t *)&v7, 0xCu);
    }

    uint64_t v3 = &unk_1F03D7FB0;
  }
  uint64_t v5 = [v3 unsignedIntegerValue];

  return v5;
}

id NSPersistentStringForMTEpisodeContextSortType(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = MTEpisodeContextSortTypeToPersistentStringMap_inverted(0);
  uint64_t v3 = [MEMORY[0x1E4F28ED0] numberWithInteger:a1];
  uint64_t v4 = [v2 objectForKey:v3];

  if ([v4 length])
  {
    if (v4) {
      goto LABEL_3;
    }
    goto LABEL_9;
  }
  id v6 = _MTLogCategoryDefault();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    v8[0] = 67109120;
    v8[1] = a1;
    _os_log_impl(&dword_1AC9D5000, v6, OS_LOG_TYPE_ERROR, "Invalid MTEpisodeContextSortType encountered (%d)", (uint8_t *)v8, 8u);
  }

  if (!v4)
  {
LABEL_9:
    int v7 = MTEpisodeContextSortTypeToPersistentStringMap_inverted(0);
    uint64_t v4 = [v7 objectForKey:&unk_1F03D7FB0];
  }
LABEL_3:
  return v4;
}

id MTEpisodeContextSortTypeToPersistentStringMap_inverted(int a1)
{
  if (MTEpisodeContextSortTypeToPersistentStringMap_inverted_onceToken != -1) {
    dispatch_once(&MTEpisodeContextSortTypeToPersistentStringMap_inverted_onceToken, &__block_literal_global_492);
  }
  uint64_t v2 = &MTEpisodeContextSortTypeToPersistentStringMap_inverted_invertedMap;
  if (!a1) {
    uint64_t v2 = &MTEpisodeContextSortTypeToPersistentStringMap_inverted_map;
  }
  uint64_t v3 = (void *)*v2;
  return v3;
}

uint64_t MTEpisodeContextSortTypeFromPersistentString(void *a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = MTEpisodeContextSortTypeToPersistentStringMap_inverted(1);
  uint64_t v3 = [v2 objectForKey:v1];

  if (!v3)
  {
    uint64_t v4 = _MTLogCategoryDefault();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v7 = 138412290;
      id v8 = v1;
      _os_log_impl(&dword_1AC9D5000, v4, OS_LOG_TYPE_ERROR, "Invalid MTEpisodeContextSortType persistent string encountered (%@)", (uint8_t *)&v7, 0xCu);
    }

    uint64_t v3 = &unk_1F03D7FB0;
  }
  uint64_t v5 = [v3 unsignedIntegerValue];

  return v5;
}

id NSPersistentStringForMTEpisodePriceType(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = MTEpisodePriceTypeToPersistentStringMap_inverted(0);
  uint64_t v3 = [MEMORY[0x1E4F28ED0] numberWithInteger:a1];
  uint64_t v4 = [v2 objectForKey:v3];

  if ([v4 length])
  {
    if (v4) {
      goto LABEL_3;
    }
    goto LABEL_9;
  }
  id v6 = _MTLogCategoryDefault();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    v8[0] = 67109120;
    v8[1] = a1;
    _os_log_impl(&dword_1AC9D5000, v6, OS_LOG_TYPE_ERROR, "Invalid MTEpisodePriceType encountered (%d)", (uint8_t *)v8, 8u);
  }

  if (!v4)
  {
LABEL_9:
    int v7 = MTEpisodeContextSortTypeToPersistentStringMap_inverted(0);
    uint64_t v4 = [v7 objectForKey:&unk_1F03D7FB0];
  }
LABEL_3:
  return v4;
}

id NSPersistentStringForMTDisplayType(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = MTDisplayTypeToPersistentStringMap_inverted(0);
  uint64_t v3 = [MEMORY[0x1E4F28ED0] numberWithInteger:a1];
  uint64_t v4 = [v2 objectForKey:v3];

  if (![v4 length])
  {
    uint64_t v5 = _MTLogCategoryDefault();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      v7[0] = 67109120;
      v7[1] = a1;
      _os_log_impl(&dword_1AC9D5000, v5, OS_LOG_TYPE_ERROR, "Invalid MTDisplayType encountered (%d)", (uint8_t *)v7, 8u);
    }
  }
  return v4;
}

id MTDisplayTypeToPersistentStringMap_inverted(int a1)
{
  if (MTDisplayTypeToPersistentStringMap_inverted_onceToken != -1) {
    dispatch_once(&MTDisplayTypeToPersistentStringMap_inverted_onceToken, &__block_literal_global_535);
  }
  uint64_t v2 = &MTDisplayTypeToPersistentStringMap_inverted_invertedMap;
  if (!a1) {
    uint64_t v2 = &MTDisplayTypeToPersistentStringMap_inverted_map;
  }
  uint64_t v3 = (void *)*v2;
  return v3;
}

uint64_t MTDisplayTypeFromPersistentString(void *a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = MTDisplayTypeToPersistentStringMap_inverted(1);
  uint64_t v3 = [v2 objectForKey:v1];

  if (v3)
  {
    uint64_t v4 = [v3 unsignedIntegerValue];
  }
  else
  {
    if (![v1 length])
    {
      uint64_t v5 = _MTLogCategoryDefault();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        int v7 = 138412290;
        id v8 = v1;
        _os_log_impl(&dword_1AC9D5000, v5, OS_LOG_TYPE_ERROR, "Invalid MTPodcastDisplayType encountered (%@)", (uint8_t *)&v7, 0xCu);
      }
    }
    uint64_t v4 = 0;
  }

  return v4;
}

void sub_1ACA0A690(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1ACA0ADA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id getkSymptomDiagnosticReplySuccess()
{
  uint64_t v5 = 0;
  id v6 = &v5;
  uint64_t v7 = 0x2020000000;
  os_log_t v0 = (void **)getkSymptomDiagnosticReplySuccessSymbolLoc_ptr;
  uint64_t v8 = getkSymptomDiagnosticReplySuccessSymbolLoc_ptr;
  if (!getkSymptomDiagnosticReplySuccessSymbolLoc_ptr)
  {
    id v1 = (void *)SymptomDiagnosticReporterLibrary();
    v6[3] = (uint64_t)dlsym(v1, "kSymptomDiagnosticReplySuccess");
    getkSymptomDiagnosticReplySuccessSymbolLoc_ptr = v6[3];
    os_log_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    uint64_t v4 = (_Unwind_Exception *)getkSymptomDiagnosticReplySuccess_cold_1();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  uint64_t v2 = *v0;
  return v2;
}

uint64_t __SymptomDiagnosticReporterLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  SymptomDiagnosticReporterLibraryCore_frameworkLibrary = result;
  return result;
}

void *__getkSymptomDiagnosticReplySuccessSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)SymptomDiagnosticReporterLibrary();
  uint64_t result = dlsym(v2, "kSymptomDiagnosticReplySuccess");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkSymptomDiagnosticReplySuccessSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1ACA0BA3C(_Unwind_Exception *a1)
{
}

void appendTextFromNodeRecursively(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v6 = v3;
    if (*(_DWORD *)(a1 + 8) == 3)
    {
      uint64_t v4 = [NSString stringWithUTF8String:*(void *)(a1 + 80)];
      [v6 appendString:v4];

      id v3 = v6;
    }
    for (uint64_t i = *(void *)(a1 + 24); i; uint64_t i = *(void *)(i + 48))
    {
      appendTextFromNodeRecursively(i, v6);
      id v3 = v6;
    }
  }
}

void sub_1ACA0E8E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1ACA0EAEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACA0ECB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ReachabilityCallback(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = (void *)MEMORY[0x1E4F28EB8];
  id v4 = a3;
  id v5 = [v3 defaultCenter];
  [v5 postNotificationName:kReachabilityChangedNotification object:v4];
}

void sub_1ACA1B48C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1ACA1CD10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1ACA1CD90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1ACA1D190(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

__CFString *PFTTMLDictionaryKeyForTimeAttribute(uint64_t a1)
{
  id v1 = @"dur";
  if (a1 == 1) {
    id v1 = @"begin";
  }
  if (a1 == 2) {
    return @"end";
  }
  else {
    return v1;
  }
}

__CFString *PFTTMLDictionaryKeyForStringAttribute(uint64_t a1)
{
  id v1 = @"ttm:agent";
  if (a1 == 1) {
    id v1 = @"xml:id";
  }
  if (a1 == 2) {
    return @"ttm:name";
  }
  else {
    return v1;
  }
}

uint64_t PFTTMLTypeForName(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"span"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"ttm:agent"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"ttm:name"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"p"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"body"])
  {
    uint64_t v2 = 0;
  }
  else if ([v1 isEqualToString:@"div"])
  {
    uint64_t v2 = 5;
  }
  else
  {
    uint64_t v2 = 6;
  }

  return v2;
}

void sub_1ACA1D6E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACA1D840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACA1D9E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACA1F414(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    id v3 = objc_begin_catch(exception_object);
    (*(void (**)(void))(*(void *)(v2 + 48) + 16))();

    objc_end_catch();
    JUMPOUT(0x1ACA1F3E4);
  }
  _Unwind_Resume(exception_object);
}

void sub_1ACA1FF28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t PFIsSiriDonationEnabled()
{
  if (!+[PFClientUtil isRunningOnHomepod]) {
    return 1;
  }
  return os_feature_enabled_siri_donation_homepod();
}

void sub_1ACA22BEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__8(uint64_t a1)
{
}

uint64_t __AppStoreDaemonLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  AppStoreDaemonLibraryCore_frameworkLibrary = result;
  return result;
}

void *__getASDSubscriptionEntitlementsPodcastDidChangeNotificationSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)AppStoreDaemonLibrary();
  uint64_t result = dlsym(v2, "ASDSubscriptionEntitlementsPodcastDidChangeNotification");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getASDSubscriptionEntitlementsPodcastDidChangeNotificationSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32)
                                                                                                  + 8)
                                                                                      + 24);
  return result;
}

void sub_1ACA23834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__9(uint64_t a1)
{
}

uint64_t MTPlaybackContinuousPlaybackEnabled()
{
  if (+[PFClientUtil isRunningOnHomepod]) {
    return 1;
  }
  id v1 = [MEMORY[0x1E4F1CB18] _applePodcastsFoundationSharedUserDefaults];
  uint64_t v2 = [v1 BOOLForKey:@"MTContinuousPlaybackEnabled"];

  return v2;
}

void sub_1ACA240C8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id jsonSerializableValueForCoreFoundationType(void *a1, void *a2)
{
  v33[1] = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if ([v4 isEqualToString:@"SecCertificate"])
  {
    id v5 = v4;
    id v6 = v5;
    if (v5)
    {
      v32 = @"cfTypeName";
      v33[0] = v5;
      uint64_t v7 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v33 forKeys:&v32 count:1];
      uint64_t v8 = (void *)[v7 mutableCopy];

      uint64_t v9 = (void *)SecCertificateCopySubjectSummary(v3);
      if (v9) {
        [v8 setValue:v9 forKey:@"subjectSummary"];
      }
      CFArrayRef emailAddresses = 0;
      OSStatus v10 = SecCertificateCopyEmailAddresses(v3, &emailAddresses);
      CFArrayRef v11 = emailAddresses;
      if (!v10 && emailAddresses)
      {
        uint64_t v12 = jsonSerializableValueForValue(emailAddresses);
        [v8 setValue:v12 forKey:@"emailAddresses"];
      }
      CFStringRef commonName = 0;
      OSStatus v13 = SecCertificateCopyCommonName(v3, &commonName);
      uint64_t v14 = (__CFString *)commonName;
      if (!v13 && commonName) {
        [v8 setValue:commonName forKey:@"commonName"];
      }
      CFErrorRef error = 0;
      CFDataRef v15 = SecCertificateCopySerialNumberData(v3, &error);
      CFDataRef v16 = v15;
      if (!error)
      {
        v17 = jsonSerializableValueForValue(v15);
        [v8 setValue:v17 forKey:@"serialNumberData"];
      }
      v18 = SecCertificateCopyKey(v3);
      CFDataRef v19 = SecKeyCopyExternalRepresentation(v18, &error);
      CFRelease(v18);
      if (!error)
      {
        v20 = jsonSerializableValueForValue(v19);
        [v8 setValue:v20 forKey:@"publicKeyData"];
      }
      v21 = [MEMORY[0x1E4F1C9E8] dictionaryWithDictionary:v8];

LABEL_23:
LABEL_25:

      goto LABEL_27;
    }
    goto LABEL_24;
  }
  if ([v4 isEqualToString:@"SecTrust"])
  {
    id v22 = v4;
    id v6 = v22;
    if (v22)
    {
      v32 = @"cfTypeName";
      v33[0] = v22;
      v23 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v33 forKeys:&v32 count:1];
      uint64_t v8 = (void *)[v23 mutableCopy];

      v24 = SecTrustCopyKey(v3);
      CFArrayRef emailAddresses = 0;
      uint64_t v9 = SecKeyCopyExternalRepresentation(v24, &emailAddresses);
      CFRelease(v24);
      if (!emailAddresses)
      {
        v25 = jsonSerializableValueForValue(v9);
        [v8 setValue:v25 forKey:@"serialNumberData"];
      }
      CFDictionaryRef v26 = SecTrustCopyResult(v3);
      CFArrayRef v11 = v26;
      if (v26)
      {
        v27 = jsonSerializableValueForValue(v26);
        [v8 setValue:v27 forKey:@"trustResult"];
      }
      v21 = [MEMORY[0x1E4F1C9E8] dictionaryWithDictionary:v8];
      goto LABEL_23;
    }
LABEL_24:
    v21 = 0;
    goto LABEL_25;
  }
  v21 = [NSString stringWithFormat:@"Non-serializable type '%@'", v4];
LABEL_27:

  return v21;
}

void sub_1ACA2C460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACA2C5F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t SignpostTrace.domain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1ACE75438();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t SignpostTrace.signpostID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SignpostTrace(0) + 20);
  uint64_t v4 = sub_1ACE753F8();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SignpostTrace(uint64_t a1)
{
  return sub_1ACA31990(a1, qword_1EB772B58);
}

uint64_t SignpostTrace.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SignpostTrace(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SignpostTrace.init(domain:identifier:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v4 = sub_1ACE75438();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7726E8);
  MEMORY[0x1F4188790](v8 - 8);
  OSStatus v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE753F8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  CFDataRef v15 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 16);
  v15(v26, a1, v4);
  sub_1ACA2EDE8(v25, (uint64_t)v10);
  v24 = a1;
  v15((uint64_t)v7, a1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1ACE75428();
    sub_1ACE753C8();
    CFDataRef v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v7, v4);
    sub_1ACA2EE50((uint64_t)v10);
  }
  else
  {
    CFDataRef v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v7, v4);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  }
  uint64_t v17 = type metadata accessor for SignpostTrace(0);
  uint64_t v18 = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v26 + *(int *)(v17 + 20), v14, v11);
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_1ACE77458();
  uint64_t v19 = v27;
  unint64_t v20 = v28;
  sub_1ACA2EE50(v25);
  v16(v24, v4);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  id v22 = (void *)(v18 + *(int *)(v17 + 24));
  void *v22 = v19;
  v22[1] = v20;
  return result;
}

uint64_t sub_1ACA2EDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7726E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACA2EE50(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7726E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SignpostTrace.emit(event:context:)(const char *a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, unint64_t a5)
{
  uint64_t v44 = a4;
  v47 = (char *)a1;
  int v46 = a3;
  uint64_t v7 = sub_1ACE753F8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  v45 = (char *)&v40 - v13;
  MEMORY[0x1F4188790](v12);
  CFDataRef v15 = ((char *)&v40 - v14);
  uint64_t v16 = sub_1ACE75438();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  unint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  id v22 = (char *)&v40 - v21;
  uint64_t v23 = v17;
  if (a5)
  {
    (*(void (**)(char *, NSObject *, uint64_t))(v17 + 16))((char *)&v40 - v21, v5, v16);
    uint64_t v24 = type metadata accessor for SignpostTrace(0);
    unint64_t v20 = (char *)v16;
    uint64_t v16 = v7;
    uint64_t v7 = v8 + 16;
    uint64_t v11 = *(char **)(v8 + 16);
    ((void (*)(NSObject *, char *, uint64_t))v11)(v15, (char *)v5 + *(int *)(v24 + 20), v16);
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_1ACE75428();
    int v42 = sub_1ACE76E28();
    uint64_t result = sub_1ACE76FA8();
    if ((result & 1) == 0)
    {
LABEL_10:
      swift_bridgeObjectRelease_n();

      (*(void (**)(NSObject *, uint64_t))(v8 + 8))(v15, v16);
      return (*(uint64_t (**)(char *, char *))(v17 + 8))(v22, v20);
    }
    os_log_t v41 = v5;
    v43 = v20;
    if ((v46 & 1) == 0)
    {
      if (!v47)
      {
        swift_bridgeObjectRelease_n();
        __break(1u);
        goto LABEL_6;
      }
LABEL_17:
      unint64_t v28 = v45;
      uint64_t v40 = v16;
      ((void (*)(char *, NSObject *, uint64_t))v11)(v45, v15, v16);
      v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v49 = v30;
      *(_DWORD *)v29 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_1ACA3189C(v44, a5, &v49);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      os_signpost_id_t v31 = sub_1ACE753D8();
      os_log_t v32 = v41;
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v41, (os_signpost_type_t)v42, v31, v47, "%s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v30, -1, -1);
      MEMORY[0x1AD11B340](v29, -1, -1);

      v33 = *(void (**)(NSObject *, uint64_t))(v8 + 8);
      uint64_t v34 = v40;
      v33(v15, v40);
      (*(void (**)(char *, char *))(v17 + 8))(v22, v43);
      return ((uint64_t (*)(char *, uint64_t))v33)(v28, v34);
    }
    if ((unint64_t)v47 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v47 >> 11 == 27)
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (v47 >> 16 <= 0x10)
      {
        v47 = &v50;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
LABEL_6:
  (*(void (**)(char *, NSObject *, uint64_t))(v23 + 16))(v20, v5, v16);
  uint64_t v26 = type metadata accessor for SignpostTrace(0);
  id v22 = (char *)(v8 + 16);
  uint64_t v27 = *(void (**)(void))(v8 + 16);
  ((void (*)(char *, char *, uint64_t))v27)(v11, (char *)v5 + *(int *)(v26 + 20), v7);
  CFDataRef v15 = sub_1ACE75428();
  LODWORD(v44) = sub_1ACE76E28();
  uint64_t v5 = v15;
  uint64_t result = sub_1ACE76FA8();
  if ((result & 1) == 0)
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  }
  v43 = (char *)v16;
  if ((v46 & 1) == 0)
  {
    if (!v47)
    {
      __break(1u);
      goto LABEL_10;
    }
    goto LABEL_22;
  }
  if ((unint64_t)v47 >> 32) {
    goto LABEL_27;
  }
  if (v47 >> 11 == 27)
  {
LABEL_30:
    __break(1u);
    return result;
  }
  if (v47 >> 16 > 0x10) {
    goto LABEL_28;
  }
  v47 = &v51;
LABEL_22:
  v35 = v45;
  v27();
  v36 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v36 = 0;
  v37 = v35;
  os_signpost_id_t v38 = sub_1ACE753D8();
  _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v15, (os_signpost_type_t)v44, v38, v47, "", v36, 2u);
  MEMORY[0x1AD11B340](v36, -1, -1);

  v39 = *(void (**)(char *, uint64_t))(v8 + 8);
  v39(v11, v7);
  (*(void (**)(char *, char *))(v17 + 8))(v20, v43);
  return ((uint64_t (*)(char *, uint64_t))v39)(v37, v7);
}

uint64_t SignpostTrace.start(interval:context:)@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v25 = a4;
  uint64_t v13 = sub_1ACE753F8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1ACE75438();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v20 + 16))(v19, v7);
  uint64_t v21 = type metadata accessor for SignpostTrace(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v7 + *(int *)(v21 + 20), v13);
  a6[3] = type metadata accessor for SignpostTrace.Interval(0);
  a6[4] = (uint64_t)&protocol witness table for SignpostTrace.Interval;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a6);
  swift_bridgeObjectRetain();
  return SignpostTrace.Interval.init(starting:domain:identifier:with:)(a1, a2, a3, (uint64_t)v19, (uint64_t)v16, v25, a5, (uint64_t)boxed_opaque_existential_1);
}

uint64_t SignpostTrace.Interval.init(starting:domain:identifier:with:)@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v51 = a5;
  int v14 = a3;
  uint64_t v50 = sub_1ACE753F8();
  uint64_t v15 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v52 = v14;
  uint64_t v48 = a8;
  uint64_t v49 = a4;
  if (!a7)
  {
    uint64_t v19 = sub_1ACE75428();
    int v20 = sub_1ACE76E18();
    char v21 = sub_1ACE76FA8();
    uint64_t v47 = a2;
    if (v21)
    {
      int v46 = a1;
      int v45 = v20;
      if (v52)
      {
        if ((unint64_t)a1 >> 32)
        {
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        if (a1 >> 11 == 27)
        {
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        if (a1 >> 16 > 0x10) {
          goto LABEL_29;
        }
        id v22 = &v56;
      }
      else
      {
        if (!a1)
        {
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
        id v22 = a1;
      }
      v33 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
      uint64_t v25 = v50;
      uint64_t v26 = v51;
      v33(v17, v51, v50);
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      os_signpost_id_t v35 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v19, (os_signpost_type_t)v45, v35, v22, "", v34, 2u);
      MEMORY[0x1AD11B340](v34, -1, -1);

      uint64_t v23 = v15;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v25);
      a1 = v46;
      v33(v17, v26, v25);
    }
    else
    {

      uint64_t v23 = v15;
      uint64_t v25 = v50;
      uint64_t v26 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v51, v50);
    }
    uint64_t v32 = v49;
    a2 = v47;
    uint64_t v24 = v26;
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1ACE75428();
  int v45 = sub_1ACE76E18();
  if ((sub_1ACE76FA8() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    uint64_t v23 = v15;
    uint64_t v25 = v50;
    uint64_t v24 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v51, v50);
LABEL_17:
    uint64_t v32 = v49;
LABEL_24:
    sub_1ACE75478();
    swift_allocObject();
    uint64_t v36 = sub_1ACE75468();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v25);
    uint64_t v37 = v48;
    *(void *)(v48 + 8) = a1;
    *(void *)(v37 + 16) = a2;
    *(unsigned char *)(v37 + 24) = v52;
    *(void *)uint64_t v37 = v36;
    uint64_t v38 = v37 + *(int *)(type metadata accessor for SignpostTrace.Interval(0) + 24);
    uint64_t v39 = sub_1ACE75438();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(v38, v32, v39);
  }
  int v46 = a1;
  uint64_t v47 = a2;
  uint64_t v43 = a6;
  os_log_t v44 = v18;
  if (v14)
  {
    if ((unint64_t)a1 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (a1 >> 11 == 27)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      if (a1 >> 16 <= 0x10)
      {
        os_log_t v41 = &v55;
        goto LABEL_16;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  if (a1)
  {
    os_log_t v41 = a1;
LABEL_16:
    int v42 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v27 = v50;
    uint64_t v24 = v51;
    v42(v17, v51, v50);
    unint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v54 = v29;
    *(_DWORD *)unint64_t v28 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1ACA3189C(v43, a7, &v54);
    sub_1ACE76FF8();
    uint64_t v25 = v27;
    swift_bridgeObjectRelease_n();
    os_signpost_id_t v30 = sub_1ACE753D8();
    os_log_t v31 = v44;
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v44, (os_signpost_type_t)v45, v30, v41, "%s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v29, -1, -1);
    MEMORY[0x1AD11B340](v28, -1, -1);

    uint64_t v23 = v15;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v25);
    a1 = v46;
    a2 = v47;
    v42(v17, v24, v25);
    goto LABEL_17;
  }
LABEL_32:
  uint64_t result = swift_bridgeObjectRelease_n();
  __break(1u);
  return result;
}

uint64_t SignpostTrace.Interval.state.getter()
{
  return swift_retain();
}

uint64_t SignpostTrace.Interval.name.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t SignpostTrace.Interval.domain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SignpostTrace.Interval(0) + 24);
  uint64_t v4 = sub_1ACE75438();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t SignpostTrace.Interval.init(name:domain:state:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)(a6 + 8) = a1;
  *(void *)(a6 + 16) = a2;
  *(unsigned char *)(a6 + 24) = a3;
  *(void *)a6 = a5;
  uint64_t v7 = a6 + *(int *)(type metadata accessor for SignpostTrace.Interval(0) + 24);
  uint64_t v8 = sub_1ACE75438();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);
  return v9(v7, a4, v8);
}

Swift::Void __swiftcall SignpostTrace.Interval.end(with:)(Swift::String_optional with)
{
  object = with.value._object;
  uint64_t countAndFlagsBits = with.value._countAndFlagsBits;
  uint64_t v3 = (const char *)sub_1ACE75448();
  uint64_t v58 = *((void *)v3 - 1);
  v59 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v53[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v53[-v7];
  uint64_t v9 = sub_1ACE753F8();
  uint64_t v61 = *(void *)(v9 - 8);
  uint64_t v62 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v53[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  v60 = &v53[-v14];
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = &v53[-v15];
  uint64_t v17 = sub_1ACE75438();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  char v21 = &v53[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = &v53[-v22];
  if (object)
  {
    uint64_t v24 = type metadata accessor for SignpostTrace.Interval(0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v18 + 16))(v23, v1 + *(int *)(v24 + 24), v17);
    uint64_t v25 = v17;
    char v26 = *(unsigned char *)(v1 + 24);
    v57 = *(const char **)(v1 + 8);
    swift_bridgeObjectRetain_n();
    uint64_t v27 = sub_1ACE75428();
    sub_1ACE75458();
    int v54 = sub_1ACE76E08();
    if ((sub_1ACE76FA8() & 1) == 0)
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v16, v62);
      (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v23, v25);
      return;
    }
    uint64_t v55 = v25;
    if ((v26 & 1) == 0)
    {
      if (v57)
      {
        uint64_t v29 = v58;
        unint64_t v28 = v59;
LABEL_17:
        swift_retain();
        sub_1ACE75488();
        swift_release();
        if ((*(unsigned int (**)(unsigned char *, const char *))(v29 + 88))(v8, v28) == *MEMORY[0x1E4FBD340])
        {
          char v37 = 0;
          char v38 = 0;
          v59 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(unsigned char *, const char *))(v29 + 8))(v8, v28);
          v59 = "%s";
          char v38 = 2;
          char v37 = 1;
        }
        uint64_t v39 = v61;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v61 + 16))(v60, v16, v62);
        uint64_t v40 = swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        uint64_t v64 = v41;
        *(unsigned char *)uint64_t v40 = v38;
        *(unsigned char *)(v40 + 1) = v37;
        *(_WORD *)(v40 + 2) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v63 = sub_1ACA3189C(countAndFlagsBits, (unint64_t)object, &v64);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease_n();
        int v42 = v60;
        os_signpost_id_t v43 = sub_1ACE753D8();
        _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v27, (os_signpost_type_t)v54, v43, v57, v59, (uint8_t *)v40, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v41, -1, -1);
        MEMORY[0x1AD11B340](v40, -1, -1);

        os_log_t v44 = *(void (**)(unsigned char *, uint64_t))(v39 + 8);
        uint64_t v45 = v62;
        v44(v16, v62);
        (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v23, v55);
        v44(v42, v45);
        return;
      }
LABEL_37:
      swift_bridgeObjectRelease_n();
      __break(1u);
      return;
    }
    if ((unint64_t)v57 >> 32)
    {
      __break(1u);
    }
    else
    {
      uint64_t v29 = v58;
      unint64_t v28 = v59;
      if (v57 >> 11 == 27)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      if (v57 >> 16 <= 0x10)
      {
        v57 = &v65;
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v30 = type metadata accessor for SignpostTrace.Interval(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v18 + 16))(v21, v1 + *(int *)(v30 + 24), v17);
  uint64_t v31 = v17;
  char v32 = *(unsigned char *)(v1 + 24);
  v33 = *(const char **)(v1 + 8);
  uint64_t v34 = sub_1ACE75428();
  sub_1ACE75458();
  LODWORD(v57) = sub_1ACE76E08();
  if ((sub_1ACE76FA8() & 1) == 0)
  {

    (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v12, v62);
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v21, v31);
    return;
  }
  uint64_t v55 = v31;
  if (v32)
  {
    if ((unint64_t)v33 >> 32)
    {
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v36 = v58;
    os_signpost_id_t v35 = v59;
    if (v33 >> 11 == 27)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v33 >> 16 > 0x10) {
      goto LABEL_34;
    }
    v33 = &v66;
  }
  else
  {
    if (!v33)
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    uint64_t v36 = v58;
    os_signpost_id_t v35 = v59;
  }
  swift_retain();
  sub_1ACE75488();
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, const char *))(v36 + 88))(v6, v35) == *MEMORY[0x1E4FBD340])
  {
    int v46 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, const char *))(v36 + 8))(v6, v35);
    int v46 = "";
  }
  uint64_t v47 = v60;
  uint64_t v48 = v61;
  uint64_t v49 = v62;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v61 + 16))(v60, v12, v62);
  uint64_t v50 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v50 = 0;
  os_signpost_id_t v51 = sub_1ACE753D8();
  _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v34, (os_signpost_type_t)v57, v51, v33, v46, v50, 2u);
  MEMORY[0x1AD11B340](v50, -1, -1);

  int v52 = *(void (**)(unsigned char *, uint64_t))(v48 + 8);
  v52(v12, v49);
  (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v21, v55);
  v52(v47, v49);
}

uint64_t sub_1ACA30398(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1ACA303D4@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v9 = v7;
  uint64_t v26 = a4;
  int v25 = a3;
  uint64_t v14 = sub_1ACE753F8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = &v24[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_1ACE75438();
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = &v24[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t))(v21 + 16))(v20, v9);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16))(v17, v9 + *(int *)(a6 + 20), v14);
  a7[3] = type metadata accessor for SignpostTrace.Interval(0);
  a7[4] = (uint64_t)&protocol witness table for SignpostTrace.Interval;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a7);
  swift_bridgeObjectRetain();
  return SignpostTrace.Interval.init(starting:domain:identifier:with:)(a1, a2, v25, (uint64_t)v20, (uint64_t)v17, v26, a5, (uint64_t)boxed_opaque_existential_1);
}

uint64_t sub_1ACA305AC(uint64_t a1, uint64_t a2)
{
  return sub_1ACA3155C(a1, a2, MEMORY[0x1E4F27EB8]);
}

id sub_1ACA305D0()
{
  return *v0;
}

uint64_t sub_1ACA305D8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void *sub_1ACA305E0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1ACA305F0(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_1ACA305FC(void *a1@<X8>)
{
  *a1 = 0;
}

BOOL sub_1ACA30604(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1ACA30618(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

void *sub_1ACA3062C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_1ACA30640(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_1ACA30670(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1ACA30684(void *result)
{
  *v1 &= *result;
  return result;
}

uint64_t sub_1ACA30698(uint64_t a1, uint64_t a2)
{
  return sub_1ACA3155C(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1ACA306BC()
{
  swift_getWitnessTable();
  return sub_1ACE752A8();
}

uint64_t sub_1ACA30728(uint64_t a1, id *a2)
{
  uint64_t result = sub_1ACE76198();
  *a2 = 0;
  return result;
}

uint64_t sub_1ACA307A0(uint64_t a1, id *a2)
{
  char v3 = sub_1ACE761A8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1ACA30820@<X0>(uint64_t *a1@<X8>)
{
  sub_1ACE761B8();
  uint64_t v2 = sub_1ACE76178();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1ACA30864()
{
  return sub_1ACE752C8();
}

uint64_t sub_1ACA308B0()
{
  return sub_1ACE752B8();
}

uint64_t sub_1ACA30908()
{
  return sub_1ACA31388();
}

BOOL sub_1ACA30920(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1ACA30934()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACA3097C()
{
  return sub_1ACE77B58();
}

uint64_t sub_1ACA309A8()
{
  return sub_1ACE77B78();
}

void sub_1ACA309EC(_WORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1ACA309F8()
{
  return sub_1ACE761B8();
}

uint64_t sub_1ACA30A08()
{
  sub_1ACA32BC4((unint64_t *)&qword_1EB76A788, type metadata accessor for AMSError);
  return sub_1ACE74D58();
}

uint64_t sub_1ACA30A74(uint64_t a1)
{
  uint64_t v2 = sub_1ACA32BC4((unint64_t *)&qword_1EB76A788, type metadata accessor for AMSError);
  return MEMORY[0x1F40E44A8](a1, v2);
}

uint64_t sub_1ACA30AE0(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACA32BC4((unint64_t *)&qword_1EB76A788, type metadata accessor for AMSError);
  id v5 = a1;
  return MEMORY[0x1F40E4498](v5, a2, v4);
}

uint64_t sub_1ACA30B70()
{
  id v1 = *v0;
  uint64_t v2 = sub_1ACE76F88();

  return v2;
}

uint64_t sub_1ACA30BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACA32BC4((unint64_t *)&qword_1EB76A788, type metadata accessor for AMSError);
  return MEMORY[0x1F40E44D8](a1, a2, v4);
}

uint64_t sub_1ACA30C24()
{
  return sub_1ACE77B78();
}

void *sub_1ACA30C84@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1ACA30C90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1ACE761B8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1ACA30CBC()
{
  swift_getWitnessTable();
  return sub_1ACE752A8();
}

void sub_1ACA30D28(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1ACA30D34()
{
  return sub_1ACE752C8();
}

uint64_t sub_1ACA30D80()
{
  return sub_1ACE752B8();
}

uint64_t sub_1ACA30DD8()
{
  return sub_1ACA31388();
}

_WORD *sub_1ACA30DF0@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1ACA30DFC(uint64_t a1)
{
  uint64_t v2 = sub_1ACA32BC4(&qword_1E99F0848, type metadata accessor for Name);
  uint64_t v3 = sub_1ACA32BC4(&qword_1E99F0850, type metadata accessor for Name);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1ACA30EB8(uint64_t a1)
{
  uint64_t v2 = sub_1ACA32BC4(&qword_1EB76A780, type metadata accessor for AMSError);
  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1ACA30F24(uint64_t a1)
{
  uint64_t v2 = sub_1ACA32BC4(&qword_1EB76A780, type metadata accessor for AMSError);
  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1ACA30F94(uint64_t a1)
{
  uint64_t v2 = sub_1ACA32BC4((unint64_t *)&qword_1EB76A788, type metadata accessor for AMSError);
  return MEMORY[0x1F40E4480](a1, v2);
}

uint64_t sub_1ACA31000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACA32BC4((unint64_t *)&qword_1EB76A788, type metadata accessor for AMSError);
  return MEMORY[0x1F40E44B8](a1, a2, a3, v6);
}

BOOL sub_1ACA31084(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1ACA31098(uint64_t a1)
{
  uint64_t v2 = sub_1ACA32BC4(&qword_1E99F0858, type metadata accessor for PFAnalyticsEventName);
  uint64_t v3 = sub_1ACA32BC4(&qword_1E99F0860, type metadata accessor for PFAnalyticsEventName);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1ACA31154(uint64_t a1)
{
  uint64_t v2 = sub_1ACA32BC4(&qword_1E99F0868, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_1ACA32BC4(&qword_1E99F0870, type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1ACA31210(uint64_t a1)
{
  uint64_t v2 = sub_1ACA32BC4((unint64_t *)&unk_1EB76E168, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_1ACA32BC4(&qword_1E99F09F0, type metadata accessor for FileAttributeKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1ACA312CC()
{
  return sub_1ACE752C8();
}

uint64_t sub_1ACA31318()
{
  return sub_1ACE752B8();
}

uint64_t sub_1ACA31370()
{
  return sub_1ACA31388();
}

uint64_t sub_1ACA31388()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACA313EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1ACE76178();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1ACA31434(uint64_t a1)
{
  uint64_t v2 = sub_1ACA32BC4((unint64_t *)&qword_1E99F09F8, type metadata accessor for NSKeyValueChangeKey);
  uint64_t v3 = sub_1ACA32BC4(&qword_1E99F0A00, type metadata accessor for NSKeyValueChangeKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1ACA314F0()
{
  swift_getWitnessTable();
  return sub_1ACE752A8();
}

uint64_t sub_1ACA3155C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1ACE761B8();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1ACA315A0()
{
  sub_1ACE761B8();
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACA315F4()
{
  sub_1ACE761B8();
  sub_1ACE77B18();
  sub_1ACE76108();
  uint64_t v0 = sub_1ACE77B78();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1ACA31668()
{
  uint64_t v0 = sub_1ACE761B8();
  uint64_t v2 = v1;
  if (v0 == sub_1ACE761B8() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1ACA316F4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result) {
    *a2 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

char *sub_1ACA31704()
{
  return &v1;
}

void sub_1ACA31714(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
  os_signpost_id_t v13 = sub_1ACE753D8();
  _os_signpost_emit_with_name_impl(&dword_1AC9D5000, a3, a4, v13, a6, a7, a1, a2);
}

uint64_t sub_1ACA31798(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1ACA317A8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1ACA317E4()
{
  return 1;
}

uint64_t sub_1ACA317EC(uint64_t (*a1)(void))
{
  return a1();
}

unsigned char **sub_1ACA31814(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_1ACA31824(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_1ACA3189C(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_1ACE76FF8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1ACA3189C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1ACA32F6C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1ACA33128((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1ACA33128((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t type metadata accessor for SignpostTrace.Interval(uint64_t a1)
{
  return sub_1ACA31990(a1, qword_1EB76ACB0);
}

uint64_t sub_1ACA31990(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SignpostTrace(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1ACE75438();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1ACE753F8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    os_signpost_id_t v13 = (uint64_t *)((char *)a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *os_signpost_id_t v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SignpostTrace(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE75438();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SignpostTrace(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE75438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  os_signpost_id_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SignpostTrace(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE75438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  os_signpost_id_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SignpostTrace(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE75438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for SignpostTrace(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE75438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  os_signpost_id_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SignpostTrace(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACA31F30);
}

uint64_t sub_1ACA31F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE75438();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1ACE753F8();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SignpostTrace(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACA3205C);
}

uint64_t sub_1ACA3205C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1ACE75438();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1ACE753F8();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1ACA32170()
{
  uint64_t result = sub_1ACE75438();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1ACE753F8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SignpostTrace.Interval(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1ACE75438();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for SignpostTrace.Interval(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1ACE75438();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for SignpostTrace.Interval(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1ACE75438();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for SignpostTrace.Interval(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1ACE75438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for SignpostTrace.Interval(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1ACE75438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for SignpostTrace.Interval(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1ACE75438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SignpostTrace.Interval(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACA3263C);
}

uint64_t sub_1ACA3263C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1ACE75438();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SignpostTrace.Interval(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACA32700);
}

void *sub_1ACA32700(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1ACE75438();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1ACA327A8()
{
  uint64_t result = sub_1ACE75438();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for Name(uint64_t a1)
{
}

void type metadata accessor for MTPodcastDeletePlayed(uint64_t a1)
{
}

void type metadata accessor for MTPodcastHidesPlayedEpisodes(uint64_t a1)
{
}

void type metadata accessor for MTPodcastShowType(uint64_t a1)
{
}

void type metadata accessor for PFAnalyticsEventName(uint64_t a1)
{
}

void type metadata accessor for CFRunLoopSource(uint64_t a1)
{
}

void type metadata accessor for CFRunLoop(uint64_t a1)
{
}

void type metadata accessor for OSLogType(uint64_t a1)
{
}

void type metadata accessor for MTFeedUpdateSource(uint64_t a1)
{
}

void type metadata accessor for MTCacheDeleteUrgency(uint64_t a1)
{
}

void type metadata accessor for CachePolicy(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for EpisodeTranscriptData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy48_4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1ACA32970(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1ACA32990(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CMTimeRange(uint64_t a1)
{
}

void *__swift_memcpy8_4(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t sub_1ACA329E8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1ACA32A08(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

void type metadata accessor for os_unfair_recursive_lock_s(uint64_t a1)
{
}

void type metadata accessor for MTBookmarksSyncType(uint64_t a1)
{
}

void type metadata accessor for MTSubscriptionSyncType(uint64_t a1)
{
}

void type metadata accessor for MTPodcastSkipDuration(uint64_t a1)
{
}

void type metadata accessor for MTEpisodeTypeFilter(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for MTEpisodeEntitlementState(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void type metadata accessor for MTEpisodePubDateLimit(uint64_t a1)
{
}

void type metadata accessor for MTPodcastEpisodeLimit(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_1ACA32B34()
{
  return sub_1ACA32BC4(&qword_1E99F07D8, type metadata accessor for MTPodcastEpisodeLimit);
}

uint64_t sub_1ACA32B7C()
{
  return sub_1ACA32BC4(&qword_1E99F07E0, type metadata accessor for URLResourceKey);
}

uint64_t sub_1ACA32BC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACA32C0C()
{
  return sub_1ACA32BC4(&qword_1E99F07E8, type metadata accessor for URLResourceKey);
}

uint64_t sub_1ACA32C54()
{
  return sub_1ACA32BC4((unint64_t *)&unk_1E99F07F0, type metadata accessor for URLResourceKey);
}

uint64_t sub_1ACA32C9C()
{
  return sub_1ACA32BC4(&qword_1EB770678, type metadata accessor for CFString);
}

uint64_t sub_1ACA32CE4()
{
  return sub_1ACA32BC4(&qword_1E99F0800, type metadata accessor for CGColor);
}

uint64_t sub_1ACA32D2C()
{
  return sub_1ACA32BC4(&qword_1E99F0808, type metadata accessor for CGColor);
}

uint64_t sub_1ACA32D74()
{
  return sub_1ACA32BC4(&qword_1E99F0810, type metadata accessor for PFAnalyticsEventName);
}

uint64_t sub_1ACA32DBC()
{
  return sub_1ACA32BC4(&qword_1E99F0818, type metadata accessor for PFAnalyticsEventName);
}

uint64_t sub_1ACA32E04()
{
  return sub_1ACA32BC4(&qword_1E99F0820, type metadata accessor for PFAnalyticsEventName);
}

uint64_t sub_1ACA32E4C()
{
  return sub_1ACA32BC4(&qword_1E99F0828, type metadata accessor for Name);
}

uint64_t sub_1ACA32E94()
{
  return sub_1ACA32BC4(&qword_1E99F0830, type metadata accessor for Name);
}

uint64_t sub_1ACA32EDC()
{
  return sub_1ACA32BC4((unint64_t *)&unk_1E99F0838, type metadata accessor for Name);
}

uint64_t sub_1ACA32F24()
{
  return sub_1ACA32BC4(&qword_1EB770680, type metadata accessor for CFString);
}

uint64_t sub_1ACA32F6C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1ACE77008();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1ACA33184(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1ACE77388();
  if (!v8)
  {
    sub_1ACE77488();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1ACE77568();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1ACA33128(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1ACA33184(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1ACA3321C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1ACA33394(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1ACA33394(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1ACA3321C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1ACCCEE00(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1ACE77278();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1ACE77488();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1ACE762E8();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1ACE77568();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1ACE77488();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1ACA33394(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772730);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  os_signpost_id_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

void type metadata accessor for AMSError(uint64_t a1)
{
}

void type metadata accessor for CGColorSpace(uint64_t a1)
{
}

void type metadata accessor for CMBlockBuffer(uint64_t a1)
{
}

void type metadata accessor for CMSampleBuffer(uint64_t a1)
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for RecommendationsMetadata.Categories.Metadata(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RecommendationsMetadata.Categories.Metadata(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for os_activity_scope_state_s(uint64_t a1)
{
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_1ACA335CC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1ACA335EC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
}

uint64_t sub_1ACA3362C()
{
  return sub_1ACA32BC4(&qword_1E99F0978, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1ACA33674()
{
  return sub_1ACA32BC4(&qword_1E99F0980, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1ACA336BC()
{
  return sub_1ACA32BC4(&qword_1E99F0988, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1ACA33704()
{
  return sub_1ACA32BC4(&qword_1E99F0990, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1ACA3374C()
{
  return sub_1ACA32BC4((unint64_t *)&unk_1E99F0998, type metadata accessor for CGColorSpace);
}

uint64_t sub_1ACA33794()
{
  return sub_1ACA32BC4(&qword_1EB76A7B0, type metadata accessor for AMSError);
}

uint64_t sub_1ACA337DC()
{
  return sub_1ACA32BC4((unint64_t *)&unk_1EB76A7B8, type metadata accessor for AMSError);
}

uint64_t sub_1ACA33824()
{
  return sub_1ACA32BC4(&qword_1EB76A780, type metadata accessor for AMSError);
}

uint64_t sub_1ACA3386C()
{
  return sub_1ACA32BC4(&qword_1EB76A798, type metadata accessor for AMSError);
}

uint64_t sub_1ACA338B4()
{
  return sub_1ACA32BC4((unint64_t *)&unk_1EB76A7A0, type metadata accessor for AMSError);
}

uint64_t sub_1ACA338FC()
{
  return sub_1ACA32BC4(&qword_1E99F09A8, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_1ACA33958()
{
  return sub_1ACA32BC4((unint64_t *)&unk_1E99F09B0, type metadata accessor for Code);
}

unint64_t sub_1ACA339A4()
{
  unint64_t result = qword_1EB772F48;
  if (!qword_1EB772F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB772F48);
  }
  return result;
}

uint64_t sub_1ACA339F8()
{
  return sub_1ACA32BC4((unint64_t *)&unk_1E99F09C0, type metadata accessor for Code);
}

uint64_t sub_1ACA33A40()
{
  return sub_1ACA32BC4((unint64_t *)&qword_1EB76A788, type metadata accessor for AMSError);
}

uint64_t sub_1ACA33A88()
{
  return sub_1ACA32BC4((unint64_t *)&unk_1E99F09D0, type metadata accessor for CGColorSpace);
}

uint64_t sub_1ACA33AD0()
{
  return sub_1ACA32BC4((unint64_t *)&unk_1EB76E178, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1ACA33B18()
{
  return sub_1ACA32BC4((unint64_t *)&unk_1E99F09E0, type metadata accessor for NSKeyValueChangeKey);
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
}

void sub_1ACA33B74(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void sub_1ACA33BD0(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
}

Swift::Bool __swiftcall NSURL.isHLSPlaylist()()
{
  unint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB768BC0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE75378();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  MEMORY[0x1F4188790](v7);
  int64_t v9 = (char *)&v21 - v8;
  id v10 = objc_msgSend(v1, sel_pathExtension);
  if (!v10) {
    goto LABEL_4;
  }
  size_t v11 = v10;
  sub_1ACE761B8();

  sub_1ACE75328();
  sub_1ACE75308();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1ACA33E68((uint64_t)v4);
LABEL_4:
    char v12 = 0;
    return v12 & 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
  uint64_t v13 = sub_1ACE752F8();
  uint64_t v15 = v14;
  id v16 = objc_msgSend((id)*MEMORY[0x1E4F44428], sel_identifier);
  uint64_t v17 = sub_1ACE761B8();
  uint64_t v19 = v18;

  if (v13 == v17 && v15 == v19) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v12 & 1;
}

uint64_t sub_1ACA33E68(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB768BC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1ACA33EC8(void *a1)
{
  id v1 = a1;
  Swift::Bool v2 = NSURL.isHLSPlaylist()();

  return v2;
}

Swift::Bool __swiftcall NSURL.isPackagedMedia()()
{
  id v1 = objc_msgSend(v0, sel_pathExtension);
  if (v1)
  {
    Swift::Bool v2 = v1;
    uint64_t v3 = sub_1ACE761B8();
    uint64_t v5 = v4;

    if (v3 == 0x676B70766F6DLL && v5 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      LOBYTE(v1) = 1;
    }
    else
    {
      char v7 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      LOBYTE(v1) = v7 & 1;
    }
  }
  return (char)v1;
}

uint64_t sub_1ACA33FAC(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_pathExtension);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = sub_1ACE761B8();
    uint64_t v6 = v5;

    if (v4 == 0x676B70766F6DLL && v6 == 0xE600000000000000)
    {

      swift_bridgeObjectRelease();
      char v8 = 1;
    }
    else
    {
      char v8 = sub_1ACE77848();

      swift_bridgeObjectRelease();
    }
  }
  else
  {

    char v8 = 0;
  }
  return v8 & 1;
}

Swift::Bool __swiftcall URL.isHLSPlaylist()()
{
  uint64_t v0 = (void *)sub_1ACE74E18();
  unsigned __int8 v1 = objc_msgSend(v0, sel_isHLSPlaylist);

  return v1;
}

Swift::Bool __swiftcall URL.isPackagedMedia()()
{
  uint64_t v0 = (void *)sub_1ACE74E18();
  unsigned __int8 v1 = objc_msgSend(v0, sel_isPackagedMedia);

  return v1;
}

id sub_1ACA340F4()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SubscriptionController()), sel_init);
  qword_1E99F0B40 = (uint64_t)result;
  return result;
}

id SubscriptionController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id static SubscriptionController.sharedInstance.getter()
{
  if (qword_1E99EFE50 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1E99F0B40;
  return v0;
}

uint64_t static SubscriptionController.alreadySubscribedErrorCode.getter()
{
  return -1001;
}

unint64_t static SubscriptionController.subscriptionControllerErrorDomain.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1ACA3427C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v54 = a1;
  id v62 = a3;
  uint64_t v63 = a5;
  uint64_t v57 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v7 - 8);
  int64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MediaRequest.Params();
  uint64_t v59 = *(void *)(v10 - 8);
  uint64_t v58 = *(void *)(v59 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v56 = (uint64_t)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v60 = (uint64_t)&v51 - v13;
  *(void *)v69 = 1;
  memset(&v69[8], 0, 32);
  v69[40] = 4;
  char v68 = 1;
  char v67 = 1;
  char v66 = 4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1ACE843F0;
  *(void *)(v14 + 32) = a1;
  *(void *)(v14 + 40) = a2;
  uint64_t v61 = a2;
  char v65 = 1;
  char v64 = 1;
  uint64_t v15 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
  swift_bridgeObjectRetain();
  uint64_t v16 = MEMORY[0x1E4FBC860];
  unint64_t v53 = sub_1ACA3611C(MEMORY[0x1E4FBC860], &qword_1EB76A8C0, (uint64_t (*)(unsigned char *))sub_1ACA65888);
  unint64_t v17 = sub_1ACA3611C(v16, &qword_1EB76A8C0, (uint64_t (*)(unsigned char *))sub_1ACA65888);
  unint64_t v18 = sub_1ACA35FB0(v16);
  unint64_t v19 = sub_1ACA3611C(v16, &qword_1EB772298, (uint64_t (*)(unsigned char *))sub_1ACA659A4);
  unint64_t v20 = sub_1ACA3611C(v16, &qword_1EB772298, (uint64_t (*)(unsigned char *))sub_1ACA659A4);
  unint64_t v21 = sub_1ACA3611C(v16, &qword_1E99F0C78, (uint64_t (*)(unsigned char *))sub_1ACA659E8);
  *((void *)&v50 + 1) = sub_1ACA3611C(v16, &qword_1E99F0B68, (uint64_t (*)(unsigned char *))sub_1ACA659A4);
  *(void *)&long long v50 = v21;
  *((void *)&v49 + 1) = v16;
  *((void *)&v48 + 1) = v16;
  *(void *)&long long v49 = v16;
  *((void *)&v47 + 1) = v19;
  *(void *)&long long v48 = v20;
  *(void *)&long long v47 = v16;
  uint64_t v22 = v60;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)((long long *)v69, &v68, &v67, &v66, v53, v17, v18, v16, v60, v47, v48, v49, v14, &v65, 0, 1, v50, 0, 1,
    &v64,
    0,
    (uint64_t)v9,
    0,
    0,
    0,
    0,
    0,
    v16,
    0,
    0,
    2);
  int v52 = *(void **)(v55 + OBJC_IVAR___MTSubscriptionController_requestController);
  uint64_t v23 = swift_allocObject();
  unint64_t v53 = v23;
  swift_unknownObjectWeakInit();
  uint64_t v24 = (void *)swift_allocObject();
  uint64_t v25 = v54;
  v24[2] = v23;
  v24[3] = v25;
  uint64_t v26 = v57;
  unsigned char v24[4] = v61;
  v24[5] = v26;
  id v27 = v62;
  v24[6] = v63;
  v24[7] = v27;
  uint64_t v28 = swift_allocObject();
  uint64_t v57 = v28;
  swift_unknownObjectWeakInit();
  uint64_t v29 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
  *((void *)v29 + 2) = v28;
  *((void *)v29 + 3) = sub_1ACA39468;
  *((void *)v29 + 4) = v24;
  sub_1ACE77B88();
  uint64_t v30 = v56;
  sub_1ACA394B0(v22, v56);
  unint64_t v31 = (*(unsigned __int8 *)(v59 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v32 = (v58 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = swift_allocObject();
  sub_1ACA3AA54(v30, v35 + v31, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  *(void *)(v35 + v32) = v16;
  unint64_t v36 = v35 + v33;
  *(void *)(v36 + 64) = v71;
  long long v37 = v70;
  *(_OWORD *)(v36 + 32) = *(_OWORD *)&v69[32];
  *(_OWORD *)(v36 + 48) = v37;
  long long v38 = *(_OWORD *)&v69[16];
  *(_OWORD *)unint64_t v36 = *(_OWORD *)v69;
  *(_OWORD *)(v36 + 16) = v38;
  uint64_t v39 = v52;
  *(void *)(v35 + v34) = v52;
  uint64_t v40 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v40 = sub_1ACA394A4;
  v40[1] = v29;
  id v41 = v62;
  id v42 = v62;
  swift_retain();
  swift_retain();
  swift_retain();
  id v43 = v39;
  swift_bridgeObjectRetain();
  id v44 = v43;
  swift_retain();
  swift_retain();
  uint64_t v45 = v60;
  sub_1ACB0443C(v60, v41, (uint64_t)sub_1ACA39594, v35);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1ACA39598(v45);
  return swift_release();
}

void sub_1ACA34814(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, unint64_t a8, void (*a9)(id), void *a10, void *a11)
{
  uint64_t v103 = a7;
  v98 = a2;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v15 - 8);
  v97 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for MediaRequest.Params();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v20 = MEMORY[0x1F4188790](v17 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v88 - v21;
  uint64_t v23 = sub_1ACE754C8();
  v101 = *(void **)(v23 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  unint64_t v92 = (unint64_t)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  id v27 = (char *)&v88 - v26;
  swift_beginAccess();
  uint64_t v28 = (char *)MEMORY[0x1AD11B470](a6 + 16);
  if (!v28) {
    return;
  }
  uint64_t v93 = v18;
  uint64_t v94 = v19;
  uint64_t v95 = (uint64_t)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v99 = v22;
  v100 = v28;
  if (qword_1E99F0020 != -1) {
    swift_once();
  }
  v96 = a9;
  uint64_t v29 = __swift_project_value_buffer(v23, (uint64_t)qword_1E99F2E50);
  swift_beginAccess();
  uint64_t v30 = v101;
  unint64_t v31 = (void (*)(unint64_t, uint64_t, uint64_t))v101[2];
  unint64_t v91 = (unint64_t)(v101 + 2);
  v90 = v31;
  v31((unint64_t)v27, v29, v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v32 = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v33 = a5;
  unint64_t v34 = sub_1ACE75498();
  os_log_type_t v35 = sub_1ACE76C08();
  BOOL v36 = os_log_type_enabled(v34, v35);
  unint64_t v102 = a8;
  if (v36)
  {
    uint64_t v89 = v29;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v88 = swift_slowAlloc();
    *(void *)v109 = v88;
    *(_DWORD *)uint64_t v37 = 136315650;
    swift_bridgeObjectRetain();
    uint64_t v104 = sub_1ACA3189C(v103, a8, (uint64_t *)v109);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v37 + 12) = 2048;
    if (a1)
    {
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_1ACE77508();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v38 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v38 = 0;
    }
    uint64_t v104 = v38;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 22) = 2080;
    uint64_t v104 = (uint64_t)a5;
    id v41 = a5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C80);
    uint64_t v42 = sub_1ACE76228();
    uint64_t v104 = sub_1ACA3189C(v42, v43, (uint64_t *)v109);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AC9D5000, v34, v35, "Siri check before following podcast %s. Found %ld podcasts with error %s.", (uint8_t *)v37, 0x20u);
    uint64_t v44 = v88;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v44, -1, -1);
    MEMORY[0x1AD11B340](v37, -1, -1);

    uint64_t v39 = (void (*)(char *, uint64_t))v101[1];
    v39(v27, v23);
    a8 = v102;
    uint64_t v40 = v98;
    uint64_t v29 = v89;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    uint64_t v39 = (void (*)(char *, uint64_t))v30[1];
    v39(v27, v23);
    uint64_t v40 = v98;
  }
  v98 = a10;
  if (!v40)
  {
LABEL_25:
    v101 = a11;
    *(void *)v109 = 2;
    memset(&v109[8], 0, 32);
    v109[40] = 4;
    LOBYTE(v104) = 1;
    char v108 = 1;
    char v107 = 4;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
    uint64_t v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_1ACE843F0;
    *(void *)(v57 + 32) = v103;
    *(void *)(v57 + 40) = a8;
    char v106 = 1;
    char v105 = 1;
    uint64_t v58 = sub_1ACE74F28();
    uint64_t v59 = (uint64_t)v97;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v97, 1, 1, v58);
    swift_bridgeObjectRetain();
    uint64_t v60 = MEMORY[0x1E4FBC860];
    unint64_t v92 = sub_1ACA3611C(MEMORY[0x1E4FBC860], &qword_1EB76A8C0, (uint64_t (*)(unsigned char *))sub_1ACA65888);
    unint64_t v91 = sub_1ACA3611C(v60, &qword_1EB76A8C0, (uint64_t (*)(unsigned char *))sub_1ACA65888);
    unint64_t v61 = sub_1ACA35FB0(v60);
    unint64_t v62 = sub_1ACA3611C(v60, &qword_1EB772298, (uint64_t (*)(unsigned char *))sub_1ACA659A4);
    unint64_t v63 = sub_1ACA3611C(v60, &qword_1EB772298, (uint64_t (*)(unsigned char *))sub_1ACA659A4);
    unint64_t v64 = sub_1ACA3611C(v60, &qword_1E99F0C78, (uint64_t (*)(unsigned char *))sub_1ACA659E8);
    *((void *)&v87 + 1) = sub_1ACA3611C(v60, &qword_1E99F0B68, (uint64_t (*)(unsigned char *))sub_1ACA659A4);
    *(void *)&long long v87 = v64;
    *((void *)&v86 + 1) = v60;
    *((void *)&v85 + 1) = v60;
    *(void *)&long long v86 = v60;
    *((void *)&v84 + 1) = v62;
    *(void *)&long long v85 = v63;
    *(void *)&long long v84 = v60;
    uint64_t v65 = (uint64_t)v99;
    MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)((long long *)v109, (char *)&v104, &v108, &v107, v92, v91, v61, v60, (uint64_t)v99, v84, v85, v86, v57, &v106, 0, 1, v87, 0, 1,
      &v105,
      0,
      v59,
      0,
      0,
      0,
      0,
      0,
      v60,
      0,
      0,
      2);
    v97 = *(char **)&v100[OBJC_IVAR___MTSubscriptionController_requestController];
    char v66 = (void *)swift_allocObject();
    unint64_t v67 = v102;
    v66[2] = v103;
    v66[3] = v67;
    v66[4] = v96;
    v66[5] = a10;
    uint64_t v68 = swift_allocObject();
    uint64_t v103 = v68;
    swift_unknownObjectWeakInit();
    v69 = (void *)swift_allocObject();
    v69[2] = v68;
    v69[3] = sub_1ACA3ABBC;
    v69[4] = v66;
    sub_1ACE77B88();
    uint64_t v70 = v95;
    sub_1ACA394B0(v65, v95);
    unint64_t v71 = (*(unsigned __int8 *)(v93 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
    unint64_t v72 = (v94 + v71 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v73 = (v72 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v74 = (v73 + 79) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v75 = swift_allocObject();
    sub_1ACA3AA54(v70, v75 + v71, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
    *(void *)(v75 + v72) = v60;
    unint64_t v76 = v75 + v73;
    *(void *)(v76 + 64) = v111;
    long long v77 = v110;
    *(_OWORD *)(v76 + 32) = *(_OWORD *)&v109[32];
    *(_OWORD *)(v76 + 48) = v77;
    long long v78 = *(_OWORD *)&v109[16];
    *(_OWORD *)unint64_t v76 = *(_OWORD *)v109;
    *(_OWORD *)(v76 + 16) = v78;
    v79 = v97;
    *(void *)(v75 + v74) = v97;
    v80 = (void *)(v75 + ((v74 + 15) & 0xFFFFFFFFFFFFFFF8));
    void *v80 = sub_1ACA3ACF4;
    v80[1] = v69;
    v81 = v79;
    swift_bridgeObjectRetain();
    v82 = v81;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v83 = (uint64_t)v99;
    sub_1ACB0443C((uint64_t)v99, v101, (uint64_t)sub_1ACA39594, v75);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1ACA39598(v83);
    return;
  }
  id v45 = v40;
  if (objc_msgSend(v45, sel_statusCode) != (id)200 || !a1) {
    goto LABEL_24;
  }
  if (!(a1 >> 62))
  {
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_17;
    }
LABEL_24:

    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v56 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (!v56) {
    goto LABEL_24;
  }
LABEL_17:
  if (a5) {
    goto LABEL_24;
  }
  id v46 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
  long long v47 = (void *)sub_1ACE76178();
  id v99 = objc_msgSend(v46, sel_initWithDomain_code_userInfo_, v47, -1001, 0);

  unint64_t v48 = v92;
  v90(v92, v29, v23);
  swift_bridgeObjectRetain_n();
  long long v49 = sub_1ACE75498();
  os_log_type_t v50 = sub_1ACE76C08();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(void *)v109 = v52;
    *(_DWORD *)uint64_t v51 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v104 = sub_1ACA3189C(v103, a8, (uint64_t *)v109);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v49, v50, "User is already following podcast %s.", v51, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v52, -1, -1);
    MEMORY[0x1AD11B340](v51, -1, -1);

    unint64_t v53 = v92;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    unint64_t v53 = v48;
  }
  v39((char *)v53, v23);
  id v54 = v99;
  id v55 = v99;
  v96(v54);
}

uint64_t sub_1ACA35460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, unint64_t a7, uint64_t (*a8)(void), uint64_t a9)
{
  uint64_t v30 = a6;
  uint64_t v12 = sub_1ACE754C8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E99F0020 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v12, (uint64_t)qword_1E99F2E50);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  swift_bridgeObjectRetain();
  id v17 = a5;
  swift_bridgeObjectRetain();
  id v18 = a5;
  uint64_t v19 = sub_1ACE75498();
  os_log_type_t v20 = sub_1ACE76C08();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v28 = a9;
    uint64_t v22 = v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v32 = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v29 = a8;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1ACA3189C(v30, a7, &v32);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v31 = (uint64_t)a5;
    id v24 = a5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C80);
    uint64_t v25 = sub_1ACE76228();
    uint64_t v31 = sub_1ACA3189C(v25, v26, &v32);
    a8 = v29;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AC9D5000, v19, v20, "Complete following podcast %s command with error %s.", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v23, -1, -1);
    MEMORY[0x1AD11B340](v22, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return a8(a5);
}

uint64_t sub_1ACA35850(uint64_t a1, unint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v70 = a4;
  uint64_t v8 = sub_1ACE754C8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for MediaRequest.Params();
  uint64_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
  uint64_t v17 = MEMORY[0x1F4188790](v15 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v21 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v21)
  {
    uint64_t v68 = v20;
    uint64_t v69 = (uint64_t)&v61 - v18;
    uint64_t v67 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0B50);
    uint64_t inited = swift_initStackObject();
    uint64_t v66 = v4;
    uint64_t v23 = inited;
    long long v65 = xmmword_1ACE843F0;
    *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
    *(unsigned char *)(inited + 32) = 2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = v65;
    *(void *)(v24 + 32) = a1;
    *(void *)(v24 + 40) = a2;
    *(void *)(v23 + 40) = v24;
    swift_bridgeObjectRetain();
    unint64_t v63 = sub_1ACA376F0(v23, &qword_1E99F0C78, (uint64_t (*)(uint64_t))sub_1ACA65A2C);
    *(void *)&long long v78 = 0;
    long long v76 = 0u;
    long long v77 = 0u;
    BYTE8(v78) = 4;
    char v75 = 1;
    char v74 = 1;
    char v73 = 4;
    char v72 = 1;
    char v71 = 1;
    uint64_t v25 = sub_1ACE74F28();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v14, 1, 1, v25);
    uint64_t v26 = MEMORY[0x1E4FBC860];
    *(void *)&long long v65 = a3;
    unint64_t v61 = sub_1ACA3611C(MEMORY[0x1E4FBC860], &qword_1EB76A8C0, (uint64_t (*)(unsigned char *))sub_1ACA65888);
    unint64_t v27 = sub_1ACA3611C(v26, &qword_1EB76A8C0, (uint64_t (*)(unsigned char *))sub_1ACA65888);
    unint64_t v28 = sub_1ACA35FB0(v26);
    uint64_t v62 = a1;
    unint64_t v29 = sub_1ACA3611C(v26, &qword_1EB772298, (uint64_t (*)(unsigned char *))sub_1ACA659A4);
    unint64_t v30 = a2;
    unint64_t v64 = a2;
    unint64_t v31 = v29;
    unint64_t v32 = sub_1ACA3611C(v26, &qword_1EB772298, (uint64_t (*)(unsigned char *))sub_1ACA659A4);
    *((void *)&v60 + 1) = sub_1ACA3611C(v26, &qword_1E99F0B68, (uint64_t (*)(unsigned char *))sub_1ACA659A4);
    *(void *)&long long v60 = v63;
    *((void *)&v59 + 1) = v26;
    *((void *)&v58 + 1) = v26;
    *(void *)&long long v59 = v26;
    *((void *)&v57 + 1) = v31;
    *(void *)&long long v58 = v32;
    *(void *)&long long v57 = v26;
    uint64_t v33 = v69;
    MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(&v76, &v75, &v74, &v73, v61, v27, v28, v26, v69, v57, v58, v59, v26, &v72, 0, 1, v60, 0, 1,
      &v71,
      0,
      (uint64_t)v14,
      0,
      0,
      0,
      0,
      0,
      v26,
      0,
      0,
      2);
    unint64_t v63 = *(void *)(v66 + OBJC_IVAR___MTSubscriptionController_requestController);
    unint64_t v34 = (void *)swift_allocObject();
    uint64_t v35 = v70;
    v34[2] = v65;
    v34[3] = v35;
    v34[4] = v62;
    v34[5] = v30;
    uint64_t v36 = swift_allocObject();
    uint64_t v66 = v36;
    swift_unknownObjectWeakInit();
    uint64_t v37 = (void *)swift_allocObject();
    v37[2] = v36;
    v37[3] = sub_1ACA3962C;
    v37[4] = v34;
    sub_1ACE77B88();
    uint64_t v38 = v67;
    sub_1ACA394B0(v33, v67);
    unint64_t v39 = (*(unsigned __int8 *)(v68 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    unint64_t v40 = (v16 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v42 = (v41 + 79) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v43 = swift_allocObject();
    sub_1ACA3AA54(v38, v43 + v39, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
    *(void *)(v43 + v40) = v26;
    unint64_t v44 = v43 + v41;
    *(void *)(v44 + 64) = v80;
    long long v45 = v79;
    *(_OWORD *)(v44 + 32) = v78;
    *(_OWORD *)(v44 + 48) = v45;
    long long v46 = v77;
    *(_OWORD *)unint64_t v44 = v76;
    *(_OWORD *)(v44 + 16) = v46;
    long long v47 = (void *)v63;
    *(void *)(v43 + v42) = v63;
    unint64_t v48 = (void *)(v43 + ((v42 + 15) & 0xFFFFFFFFFFFFFFF8));
    *unint64_t v48 = sub_1ACA3ACF4;
    v48[1] = v37;
    id v49 = v47;
    swift_bridgeObjectRetain();
    id v50 = v49;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v51 = v69;
    sub_1ACB0443C(v69, 0, (uint64_t)sub_1ACA39594, v43);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return sub_1ACA39598(v51);
  }
  else
  {
    if (qword_1EB768FA0 != -1) {
      swift_once();
    }
    uint64_t v53 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB768F88);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v53, v8);
    id v54 = sub_1ACE75498();
    os_log_type_t v55 = sub_1ACE76C08();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v56 = 0;
      _os_log_impl(&dword_1AC9D5000, v54, v55, "feedUrl is empty. Not checking MAPI if it exists in the store.", v56, 2u);
      MEMORY[0x1AD11B340](v56, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return a3(0);
  }
}

unint64_t sub_1ACA35F90(uint64_t a1)
{
  return sub_1ACA3611C(a1, &qword_1EB76A8C0, (uint64_t (*)(unsigned char *))sub_1ACA65888);
}

unint64_t sub_1ACA35FB0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0BA0);
  id v2 = (void *)sub_1ACE77558();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    v12[0] = v5;
    uint64_t v13 = v6;
    unint64_t result = sub_1ACA65888(v12);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v11;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA360BC(uint64_t a1)
{
  return sub_1ACA3611C(a1, &qword_1EB772298, (uint64_t (*)(unsigned char *))sub_1ACA659A4);
}

unint64_t sub_1ACA360DC(uint64_t a1)
{
  return sub_1ACA3611C(a1, &qword_1E99F0C78, (uint64_t (*)(unsigned char *))sub_1ACA659E8);
}

unint64_t sub_1ACA360FC(uint64_t a1)
{
  return sub_1ACA3611C(a1, &qword_1E99F0B68, (uint64_t (*)(unsigned char *))sub_1ACA659A4);
}

unint64_t sub_1ACA3611C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(unsigned char *))
{
  if (!*(void *)(a1 + 16))
  {
    unsigned __int8 v5 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  unsigned __int8 v5 = (void *)sub_1ACE77558();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (void *)(a1 + 40);
  while (1)
  {
    char v8 = *((unsigned char *)v7 - 8);
    uint64_t v9 = *v7;
    v15[0] = v8;
    uint64_t v16 = v9;
    swift_bridgeObjectRetain();
    unint64_t result = a3(v15);
    if (v11) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v5[6] + result) = v8;
    *(void *)(v5[7] + 8 * result) = v9;
    uint64_t v12 = v5[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v5[2] = v14;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA3623C(uint64_t a1)
{
  return sub_1ACA376F0(a1, &qword_1E99F0C78, (uint64_t (*)(uint64_t))sub_1ACA65A2C);
}

unint64_t sub_1ACA3625C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3F0);
  uint64_t v2 = sub_1ACE77558();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1ACA3AAD4(v6, (uint64_t)&v15, &qword_1EB76E048);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1ACA657FC(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v11 = (uint64_t *)(v3[6] + 16 * result);
    *char v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1ACA3AA44(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA36394(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5330);
  uint64_t v2 = (void *)sub_1ACE77558();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1ACA657FC(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v11 = (uint64_t *)(v2[6] + 16 * result);
    *char v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA364B8(uint64_t a1)
{
  return sub_1ACA37FFC(a1, &qword_1E99F0B80);
}

unint64_t sub_1ACA364C4(uint64_t a1)
{
  return sub_1ACA376F0(a1, &qword_1EB772298, (uint64_t (*)(uint64_t))sub_1ACA65B8C);
}

unint64_t sub_1ACA364E4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3F8);
  uint64_t v2 = sub_1ACE77558();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1ACA3AAD4(v6, (uint64_t)v15, &qword_1EB76E3A8);
    unint64_t result = sub_1ACA65B48((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1ACA3AA44(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA36628(uint64_t a1)
{
  return sub_1ACA384F8(a1, &qword_1EB769058);
}

unint64_t sub_1ACA36634(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0B58);
  uint64_t v2 = (void *)sub_1ACE77558();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v7 = *(v4 - 1);
    unint64_t v8 = *v4;
    swift_bridgeObjectRetain();
    sub_1ACA39848(v7, v8);
    unint64_t result = sub_1ACA657FC(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    *long long v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (uint64_t *)(v2[7] + 16 * result);
    *uint64_t v12 = v7;
    v12[1] = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA3675C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0B78);
  uint64_t v2 = (void *)sub_1ACE77558();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v7 = *(v4 - 1);
    unint64_t v8 = *v4;
    swift_bridgeObjectRetain();
    sub_1ACA3985C(v7, v8);
    unint64_t result = sub_1ACC524A8(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    *long long v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (uint64_t *)(v2[7] + 16 * result);
    *uint64_t v12 = v7;
    v12[1] = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA36884(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8D8);
  uint64_t v2 = (void *)sub_1ACE77558();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1ACA657FC(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA36998(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770790);
  uint64_t v2 = sub_1ACE77558();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1ACA3AAD4(v6, (uint64_t)&v13, &qword_1EB770690);
    uint64_t v7 = v13;
    unint64_t result = sub_1ACA65D94(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1ACA3AA44(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA36AC8(uint64_t a1)
{
  return sub_1ACA376F0(a1, &qword_1EB76A8C0, (uint64_t (*)(uint64_t))sub_1ACA65E84);
}

unint64_t sub_1ACA36AE8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0BA0);
  uint64_t v2 = (void *)sub_1ACE77558();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    unint64_t result = sub_1ACA65E84(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v11;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA36BE4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A920);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned __int8 v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0BB0);
  uint64_t v6 = sub_1ACE77558();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1ACA3AAD4(v12, (uint64_t)v5, &qword_1EB76A920);
    unint64_t result = sub_1ACA66034((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1ACE74898();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    _DWORD v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA36DD8(uint64_t a1)
{
  return sub_1ACA3780C(a1, &qword_1EB76E3E8);
}

unint64_t sub_1ACA36DE4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0B90);
  uint64_t v2 = (void *)sub_1ACE77558();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_1ACA661DC((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v5;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA36EF0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C58);
  uint64_t v2 = (void *)sub_1ACE77558();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1ACA3AAD4(v4, (uint64_t)v14, &qword_1E99F0C60);
    unint64_t result = sub_1ACA66220((uint64_t *)v14);
    if (v6) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v7 = v2[6] + 72 * result;
    *(_OWORD *)uint64_t v7 = v14[0];
    long long v8 = v14[1];
    long long v9 = v14[2];
    long long v10 = v14[3];
    *(void *)(v7 + 64) = v15;
    *(_OWORD *)(v7 + 32) = v9;
    *(_OWORD *)(v7 + 48) = v10;
    *(_OWORD *)(v7 + 16) = v8;
    *(void *)(v2[7] + 8 * result) = v16;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 80;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA3702C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C40);
  uint64_t v2 = (void *)sub_1ACE77558();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 48);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 16);
    uint64_t v7 = *(v4 - 1);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1ACA66344(v5);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    long long v10 = (void *)(v2[7] + 16 * result);
    *long long v10 = v7;
    v10[1] = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA3713C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A218);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned __int8 v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C30);
  uint64_t v6 = sub_1ACE77558();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1ACA3AAD4(v12, (uint64_t)v5, &qword_1EB76A218);
    unint64_t result = sub_1ACA663D0((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1ACE75118();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    _DWORD v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA37330(uint64_t a1)
{
  return sub_1ACA37FFC(a1, &qword_1E99F0C28);
}

unint64_t sub_1ACA3733C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C20);
  uint64_t v2 = (void *)sub_1ACE77558();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 48);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 16);
    uint64_t v7 = *(v4 - 1);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1ACA66344(v5);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    uint64_t v10 = (void *)(v2[7] + 16 * result);
    *uint64_t v10 = v7;
    v10[1] = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA3744C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C18);
  uint64_t v2 = (void *)sub_1ACE77558();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    uint64_t v7 = v4[1];
    uint64_t v8 = v4[2];
    uint64_t v10 = v4[3];
    uint64_t v9 = v4[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1ACA657FC(v5, v6);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v13 = v5;
    v13[1] = v6;
    long long v14 = (uint64_t *)(v2[7] + 32 * result);
    uint64_t *v14 = v7;
    v14[1] = v8;
    v14[2] = v10;
    v14[3] = v9;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v2[2] = v17;
    v4 += 6;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA3758C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769040);
  uint64_t v2 = sub_1ACE77558();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1ACA3AAD4(v6, (uint64_t)&v15, &qword_1EB768DF0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1ACA657FC(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_1ACA3AABC(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA376D0(uint64_t a1)
{
  return sub_1ACA376F0(a1, &qword_1E99F0B68, (uint64_t (*)(uint64_t))sub_1ACA65B8C);
}

unint64_t sub_1ACA376F0(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = (void *)sub_1ACE77558();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v8 = *((unsigned __int8 *)v7 - 8);
    uint64_t v9 = *v7;
    swift_bridgeObjectRetain();
    unint64_t result = a3(v8);
    if (v11) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v5[6] + result) = v8;
    *(void *)(v5[7] + 8 * result) = v9;
    uint64_t v12 = v5[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v5[2] = v14;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA37800(uint64_t a1)
{
  return sub_1ACA3780C(a1, &qword_1E99F0B60);
}

unint64_t sub_1ACA3780C(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_1ACE77558();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_1ACA657FC(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA37924(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769028);
  uint64_t v2 = sub_1ACE77558();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v30 = v2 + 64;
  swift_retain();
  uint64_t v5 = (void *)(a1 + 128);
  while (1)
  {
    char v6 = *((unsigned char *)v5 - 88);
    char v7 = *((unsigned char *)v5 - 87);
    char v8 = *((unsigned char *)v5 - 86);
    char v9 = *((unsigned char *)v5 - 85);
    char v10 = *((unsigned char *)v5 - 84);
    char v11 = *((unsigned char *)v5 - 83);
    uint64_t v12 = *(v5 - 8);
    char v13 = *((unsigned char *)v5 - 56);
    uint64_t v14 = *(v5 - 6);
    uint64_t v15 = *(v5 - 5);
    uint64_t v16 = *(v5 - 4);
    uint64_t v17 = *(v5 - 3);
    uint64_t v18 = *(v5 - 2);
    char v19 = *((unsigned char *)v5 - 6);
    __int16 v20 = *((_WORD *)v5 - 4);
    uint64_t v21 = *v5;
    *(void *)&long long v31 = *(v5 - 12);
    BYTE8(v31) = v6;
    BYTE9(v31) = v7;
    BYTE10(v31) = v8;
    BYTE11(v31) = v9;
    BYTE12(v31) = v10;
    BYTE13(v31) = v11;
    long long v32 = *((_OWORD *)v5 - 5);
    *(void *)&long long v33 = v12;
    BYTE8(v33) = v13;
    *(void *)&long long v34 = v14;
    *((void *)&v34 + 1) = v15;
    *(void *)uint64_t v35 = v16;
    *(void *)&v35[8] = v17;
    *(void *)&v35[16] = v18;
    v35[26] = v19;
    *(_WORD *)&v35[24] = v20;
    swift_bridgeObjectRetain();
    sub_1ACA3A9E8(v14, v15, v16, v17, v18);
    swift_bridgeObjectRetain();
    unint64_t result = sub_1ACA66658(&v31);
    if (v23) {
      break;
    }
    *(void *)(v30 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v24 = (_OWORD *)(v3[6] + 96 * result);
    long long v25 = v34;
    v24[2] = v33;
    v24[3] = v25;
    unsigned char v24[4] = *(_OWORD *)v35;
    *(_OWORD *)((char *)v24 + 75) = *(_OWORD *)&v35[11];
    long long v26 = v32;
    _OWORD *v24 = v31;
    v24[1] = v26;
    *(void *)(v3[7] + 8 * result) = v21;
    uint64_t v27 = v3[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_11;
    }
    v3[2] = v29;
    v5 += 13;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA37B04(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A278);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C08);
  uint64_t v6 = sub_1ACE77558();
  char v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1ACA3AAD4(v12, (uint64_t)v5, &qword_1EB76A278);
    unint64_t result = sub_1ACA6673C((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for TTMLRequest();
    unint64_t result = sub_1ACA3AA54((uint64_t)v5, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    _DWORD v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA37CF4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A3B0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C00);
  uint64_t v6 = sub_1ACE77558();
  char v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1ACA3AAD4(v12, (uint64_t)v5, &qword_1EB76A3B0);
    unint64_t result = sub_1ACA666E8((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for ShazamSignatureRequest();
    unint64_t result = sub_1ACA3AA54((uint64_t)v5, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    _DWORD v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA37EE4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769068);
  uint64_t v2 = (void *)sub_1ACE77558();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_1ACA66108((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA37FF0(uint64_t a1)
{
  return sub_1ACA37FFC(a1, &qword_1E99F0C48);
}

unint64_t sub_1ACA37FFC(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_1ACE77558();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1ACA657FC(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA38114(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0BF0);
  uint64_t v2 = (void *)sub_1ACE77558();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1ACA3AAD4(v4, (uint64_t)v23, &qword_1E99F0BF8);
    unint64_t result = sub_1ACA66828(v23);
    if (v6) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v7 = (_OWORD *)(v2[6] + (result << 8));
    long long v8 = v23[11];
    long long v9 = v23[10];
    long long v10 = v23[9];
    v7[8] = v23[8];
    v7[9] = v10;
    v7[10] = v9;
    v7[11] = v8;
    long long v11 = v23[7];
    long long v12 = v23[6];
    long long v13 = v23[5];
    v7[4] = v23[4];
    v7[5] = v13;
    v7[6] = v12;
    v7[7] = v11;
    long long v14 = v23[3];
    long long v15 = v23[2];
    long long v16 = v23[1];
    *uint64_t v7 = v23[0];
    v7[1] = v16;
    _DWORD v7[2] = v15;
    v7[3] = v14;
    long long v17 = v23[12];
    long long v18 = v23[13];
    long long v19 = v23[15];
    v7[14] = v23[14];
    v7[15] = v19;
    v7[12] = v17;
    v7[13] = v18;
    *(void *)(v2[7] + 8 * result) = v24;
    uint64_t v20 = v2[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v2[2] = v22;
    v4 += 264;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA3828C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0BE8);
  uint64_t v2 = (void *)sub_1ACE77558();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_retain();
    unint64_t result = sub_1ACA66894((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA38398(uint64_t a1)
{
  return sub_1ACA383C8(a1, &qword_1E99F0BD8);
}

unint64_t sub_1ACA383A4(uint64_t a1)
{
  return sub_1ACA383C8(a1, &qword_1E99F0BE0);
}

unint64_t sub_1ACA383B0(uint64_t a1)
{
  return sub_1ACA383C8(a1, &qword_1E99F0BC0);
}

unint64_t sub_1ACA383BC(uint64_t a1)
{
  return sub_1ACA383C8(a1, &qword_1E99F0BD0);
}

unint64_t sub_1ACA383C8(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_1ACE77558();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_1ACA657FC(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA384E0(uint64_t a1)
{
  return sub_1ACA384F8(a1, &qword_1EB769060);
}

unint64_t sub_1ACA384EC(uint64_t a1)
{
  return sub_1ACA384F8(a1, &qword_1EB769050);
}

unint64_t sub_1ACA384F8(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_1ACE77558();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v6 = *(v5 - 3);
    uint64_t v7 = *(v5 - 2);
    uint64_t v9 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_1ACA657FC(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v12 = v6;
    v12[1] = v7;
    BOOL v13 = (void *)(v3[7] + 16 * result);
    *BOOL v13 = v9;
    v13[1] = v8;
    uint64_t v14 = v3[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v3[2] = v16;
    v5 += 4;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACA38618(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0B98);
  uint64_t v2 = (void *)sub_1ACE77558();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    unint64_t result = sub_1ACA657FC(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1ACA38734(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(void), uint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t v74 = a7;
  uint64_t v13 = sub_1ACE754C8();
  uint64_t v75 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  long long v19 = (char *)&v70 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v70 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v70 - v23;
  if (a5)
  {
    id v25 = a5;
    if (qword_1EB768FA0 != -1) {
      swift_once();
    }
    uint64_t v26 = __swift_project_value_buffer(v13, (uint64_t)qword_1EB768F88);
    swift_beginAccess();
    uint64_t v27 = v75;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v24, v26, v13);
    id v28 = a5;
    uint64_t v29 = sub_1ACE75498();
    os_log_type_t v30 = sub_1ACE76BE8();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v72 = v13;
      long long v31 = a6;
      long long v32 = (uint8_t *)swift_slowAlloc();
      long long v33 = (void *)swift_slowAlloc();
      *(_DWORD *)long long v32 = 138412290;
      uint64_t v34 = sub_1ACE74D68();
      uint64_t v77 = v34;
      uint64_t v27 = v75;
      sub_1ACE76FF8();
      void *v33 = v34;
      a6 = v31;
      uint64_t v13 = v72;

      _os_log_impl(&dword_1AC9D5000, v29, v30, "Could not check if podcast exists in store with error: %@", v32, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v33, -1, -1);
      MEMORY[0x1AD11B340](v32, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v13);
    a6(0);

    return;
  }
  char v73 = a6;
  uint64_t v71 = a8;
  if (!a1) {
    goto LABEL_31;
  }
  a6 = (void (*)(void))(a1 & 0xFFFFFFFFFFFFFF8);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1ACE77508()) {
      goto LABEL_9;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    a6 = v73;
    goto LABEL_31;
  }
  uint64_t v35 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v35) {
    goto LABEL_30;
  }
LABEL_9:
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v36 = MEMORY[0x1AD119490](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_39;
    }
    uint64_t v36 = *(void *)(a1 + 32);
    swift_unknownObjectRetain();
  }
  a6 = v73;
  swift_bridgeObjectRelease();
  type metadata accessor for ServerPodcast();
  uint64_t v37 = (void *)swift_dynamicCastClass();
  if (v37)
  {
    id v38 = objc_msgSend(v37, sel_podcastStoreId);
    if (v38)
    {
      unint64_t v39 = v38;
      unint64_t v40 = sub_1ACE761B8();
      unint64_t v42 = v41;

      uint64_t v52 = sub_1ACD1C588(v40, v42);
      swift_bridgeObjectRelease();
      if (v52 < 0)
      {
        __break(1u);
      }
      else
      {
        a1 = a8;
        if (qword_1EB768FA0 == -1)
        {
LABEL_25:
          uint64_t v53 = __swift_project_value_buffer(v13, (uint64_t)qword_1EB768F88);
          swift_beginAccess();
          uint64_t v54 = v13;
          uint64_t v55 = v75;
          (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v19, v53, v54);
          swift_bridgeObjectRetain_n();
          uint64_t v56 = sub_1ACE75498();
          os_log_type_t v57 = sub_1ACE76C08();
          if (os_log_type_enabled(v56, v57))
          {
            uint64_t v58 = swift_slowAlloc();
            uint64_t v59 = swift_slowAlloc();
            uint64_t v70 = v36;
            uint64_t v60 = v59;
            uint64_t v77 = v59;
            *(_DWORD *)uint64_t v58 = 136315394;
            uint64_t v72 = v54;
            swift_bridgeObjectRetain();
            uint64_t v76 = sub_1ACA3189C(a1, a9, &v77);
            sub_1ACE76FF8();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v58 + 12) = 2048;
            uint64_t v76 = v52;
            sub_1ACE76FF8();
            _os_log_impl(&dword_1AC9D5000, v56, v57, "Found podcast in the store for feedUrl: %s with adamId: %lld", (uint8_t *)v58, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1AD11B340](v60, -1, -1);
            MEMORY[0x1AD11B340](v58, -1, -1);

            (*(void (**)(char *, uint64_t))(v55 + 8))(v19, v72);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            (*(void (**)(char *, uint64_t))(v55 + 8))(v19, v54);
          }
          v73(v52);
          swift_unknownObjectRelease();
          return;
        }
      }
      swift_once();
      goto LABEL_25;
    }
    uint64_t v70 = v36;
    if (qword_1EB768FA0 == -1)
    {
LABEL_16:
      uint64_t v43 = __swift_project_value_buffer(v13, (uint64_t)qword_1EB768F88);
      swift_beginAccess();
      uint64_t v44 = v13;
      uint64_t v45 = v75;
      (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v16, v43, v44);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      long long v46 = sub_1ACE75498();
      os_log_type_t v47 = sub_1ACE76BE8();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = swift_slowAlloc();
        uint64_t v72 = swift_slowAlloc();
        uint64_t v77 = v72;
        *(_DWORD *)uint64_t v48 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v76 = sub_1ACA3189C(v71, a9, &v77);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v48 + 12) = 2080;
        uint64_t v76 = a1;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C70);
        uint64_t v49 = sub_1ACE76228();
        uint64_t v76 = sub_1ACA3189C(v49, v50, &v77);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease_n();
        a6 = v73;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v46, v47, "Invalid adamId for podcastExistsInStore for feedUrl: %s, response: %s", (uint8_t *)v48, 0x16u);
        uint64_t v51 = v72;
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v51, -1, -1);
        MEMORY[0x1AD11B340](v48, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v44);
      a6(0);
      swift_unknownObjectRelease();
      return;
    }
LABEL_39:
    swift_once();
    goto LABEL_16;
  }
  swift_unknownObjectRelease();
LABEL_31:
  if (qword_1EB768FA0 != -1) {
    swift_once();
  }
  uint64_t v61 = __swift_project_value_buffer(v13, (uint64_t)qword_1EB768F88);
  swift_beginAccess();
  uint64_t v62 = v13;
  uint64_t v63 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v22, v61, v62);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v64 = sub_1ACE75498();
  os_log_type_t v65 = sub_1ACE76BE8();
  if (os_log_type_enabled(v64, v65))
  {
    uint64_t v66 = swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    uint64_t v77 = v67;
    *(_DWORD *)uint64_t v66 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v76 = sub_1ACA3189C(v71, a9, &v77);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v66 + 12) = 2080;
    uint64_t v76 = a1;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C70);
    uint64_t v68 = sub_1ACE76228();
    uint64_t v76 = sub_1ACA3189C(v68, v69, &v77);
    a6 = v73;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v64, v65, "Received invalid response from MAPI for podcastExistsInStore for feedUrl: %s, response: %s", (uint8_t *)v66, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v67, -1, -1);
    MEMORY[0x1AD11B340](v66, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v63 + 8))(v22, v62);
  a6(0);
}

id SubscriptionController.init()()
{
  uint64_t v1 = OBJC_IVAR___MTSubscriptionController_requestController;
  id v2 = objc_allocWithZone((Class)type metadata accessor for MediaRequestController());
  uint64_t v3 = v0;
  *(void *)&v0[v1] = objc_msgSend(v2, sel_init);

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for SubscriptionController();
  return objc_msgSendSuper2(&v5, sel_init);
}

id SubscriptionController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SubscriptionController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACA393E0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACA39418()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1ACA39468(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1ACA34814(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void (**)(id))(v5 + 40), *(void **)(v5 + 48), *(void **)(v5 + 56));
}

uint64_t sub_1ACA394A4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1ACB03404(a1, a2, a3, a4, a5, v5[2], v5[3], v5[4]);
}

uint64_t sub_1ACA394B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MediaRequest.Params();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACA39518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 >= 2u)
  {
    if (a6 == 3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = a2;
    if (a6 != 2) {
      return result;
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACA39598(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MediaRequest.Params();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ACA395F4(uint64_t a1)
{
  return sub_1ACA39710(a1);
}

uint64_t sub_1ACA39600()
{
  return objectdestroy_14Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

void sub_1ACA3962C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1ACA38734(a1, a2, a3, a4, a5, *(void (**)(void))(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40));
}

uint64_t type metadata accessor for SubscriptionController()
{
  return self;
}

uint64_t method lookup function for SubscriptionController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SubscriptionController);
}

uint64_t dispatch thunk of SubscriptionController.subscribeToShow(podcastStoreId:account:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SubscriptionController.podcastExistsInStore(feedUrl:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t sub_1ACA39704(uint64_t a1)
{
  return sub_1ACA39710(a1);
}

uint64_t sub_1ACA39710(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_1ACE77488();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = sub_1ACE76608();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1ACA397A4(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_1ACE77488();
    __break(1u);
  }
  else if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C50);
    uint64_t result = sub_1ACE76608();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1ACA39848(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1ACA3985C(a1, a2);
  }
  return a1;
}

uint64_t sub_1ACA3985C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1ACA398B4(uint64_t a1, unint64_t a2, uint64_t a3, void (**a4)(void, void))
{
  uint64_t v69 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v68 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MediaRequest.Params();
  uint64_t v70 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v70 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v9 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v59 - v12;
  uint64_t v14 = sub_1ACE754C8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a4;
  uint64_t v19 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v19 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v19)
  {
    uint64_t v67 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0B50);
    uint64_t inited = swift_initStackObject();
    long long v65 = xmmword_1ACE843F0;
    *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
    *(unsigned char *)(inited + 32) = 2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = v65;
    uint64_t v66 = a1;
    *(void *)(v21 + 32) = a1;
    *(void *)(v21 + 40) = a2;
    *(void *)(inited + 40) = v21;
    _Block_copy(a4);
    swift_bridgeObjectRetain();
    unint64_t v63 = sub_1ACA376F0(inited, &qword_1E99F0C78, (uint64_t (*)(uint64_t))sub_1ACA65A2C);
    *(void *)&long long v78 = 0;
    long long v76 = 0u;
    long long v77 = 0u;
    BYTE8(v78) = 4;
    char v75 = 1;
    char v74 = 1;
    char v73 = 4;
    char v72 = 1;
    char v71 = 1;
    uint64_t v22 = sub_1ACE74F28();
    uint64_t v23 = (uint64_t)v68;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v68, 1, 1, v22);
    uint64_t v24 = MEMORY[0x1E4FBC860];
    unint64_t v25 = a2;
    unint64_t v64 = a2;
    *(void *)&long long v65 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v61 = sub_1ACA3611C(MEMORY[0x1E4FBC860], &qword_1EB76A8C0, (uint64_t (*)(unsigned char *))sub_1ACA65888);
    unint64_t v60 = sub_1ACA3611C(v24, &qword_1EB76A8C0, (uint64_t (*)(unsigned char *))sub_1ACA65888);
    unint64_t v26 = sub_1ACA35FB0(v24);
    uint64_t v27 = (uint64_t)v13;
    unint64_t v28 = sub_1ACA3611C(v24, &qword_1EB772298, (uint64_t (*)(unsigned char *))sub_1ACA659A4);
    unint64_t v29 = sub_1ACA3611C(v24, &qword_1EB772298, (uint64_t (*)(unsigned char *))sub_1ACA659A4);
    *((void *)&v58 + 1) = sub_1ACA3611C(v24, &qword_1E99F0B68, (uint64_t (*)(unsigned char *))sub_1ACA659A4);
    *(void *)&long long v58 = v63;
    *((void *)&v57 + 1) = v24;
    *((void *)&v56 + 1) = v24;
    *(void *)&long long v57 = v24;
    *((void *)&v55 + 1) = v28;
    *(void *)&long long v56 = v29;
    *(void *)&long long v55 = v24;
    uint64_t v30 = v27;
    uint64_t v62 = v27;
    MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(&v76, &v75, &v74, &v73, v61, v60, v26, v24, v27, v55, v56, v57, v24, &v72, 0, 1, v58, 0, 1,
      &v71,
      0,
      v23,
      0,
      0,
      0,
      0,
      0,
      v24,
      0,
      0,
      2);
    uint64_t v68 = *(char **)(v69 + OBJC_IVAR___MTSubscriptionController_requestController);
    long long v31 = (void *)swift_allocObject();
    uint64_t v32 = v66;
    uint64_t v33 = v67;
    v31[2] = sub_1ACA3A550;
    v31[3] = v33;
    v31[4] = v32;
    v31[5] = v25;
    uint64_t v34 = swift_allocObject();
    uint64_t v69 = v34;
    swift_unknownObjectWeakInit();
    uint64_t v35 = (void *)swift_allocObject();
    v35[2] = v34;
    v35[3] = sub_1ACA3ACE8;
    v35[4] = v31;
    sub_1ACE77B88();
    uint64_t v36 = v65;
    sub_1ACA394B0(v30, v65);
    unint64_t v37 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
    unint64_t v38 = (v10 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v39 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v40 = (v39 + 79) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v41 = swift_allocObject();
    sub_1ACA3AA54(v36, v41 + v37, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
    *(void *)(v41 + v38) = MEMORY[0x1E4FBC860];
    unint64_t v42 = v41 + v39;
    *(void *)(v42 + 64) = v80;
    long long v43 = v79;
    *(_OWORD *)(v42 + 32) = v78;
    *(_OWORD *)(v42 + 48) = v43;
    long long v44 = v77;
    *(_OWORD *)unint64_t v42 = v76;
    *(_OWORD *)(v42 + 16) = v44;
    uint64_t v45 = v68;
    *(void *)(v41 + v40) = v68;
    long long v46 = (void *)(v41 + ((v40 + 15) & 0xFFFFFFFFFFFFFFF8));
    *long long v46 = sub_1ACA3ACF4;
    v46[1] = v35;
    os_log_type_t v47 = v45;
    swift_bridgeObjectRetain();
    uint64_t v48 = v47;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v49 = v62;
    sub_1ACB0443C(v62, 0, (uint64_t)sub_1ACA39594, v41);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1ACA39598(v49);
  }
  else
  {
    _Block_copy(a4);
    if (qword_1EB768FA0 != -1) {
      swift_once();
    }
    uint64_t v50 = __swift_project_value_buffer(v14, (uint64_t)qword_1EB768F88);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v50, v14);
    uint64_t v51 = sub_1ACE75498();
    os_log_type_t v52 = sub_1ACE76C08();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl(&dword_1AC9D5000, v51, v52, "feedUrl is empty. Not checking MAPI if it exists in the store.", v53, 2u);
      MEMORY[0x1AD11B340](v53, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    a4[2](a4, 0);
  }
  return swift_release();
}

unint64_t sub_1ACA3A048(void *a1)
{
  return sub_1ACA3A5AC(a1, &qword_1E99F0C68);
}

unint64_t sub_1ACA3A054(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0B88);
  uint64_t v3 = (void *)sub_1ACE77558();
  LOBYTE(v4) = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_1ACA65F9C(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = (uint64_t *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v12 = v8 + 2;
    int v4 = *((unsigned __int8 *)v8 - 8);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1ACA65F9C(v4);
    uint64_t v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1ACA3A158(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E0D0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0BA8);
    char v7 = (void *)sub_1ACE77558();
    uint64_t v8 = (char *)v5 + *(int *)(v2 + 48);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_1ACA3AAD4(v9, (uint64_t)v5, (uint64_t *)&unk_1EB76E0D0);
      uint64_t v11 = *v5;
      unint64_t result = sub_1ACA65E48(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v7[6] + 8 * result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = sub_1ACE74898();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, v8, v16);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      _DWORD v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

unint64_t sub_1ACA3A320(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771940);
  uint64_t v3 = (void *)sub_1ACE77558();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_1ACA65E48(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  uint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    char v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_retain();
    unint64_t result = sub_1ACA65E48(v5);
    uint64_t v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1ACA3A420(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0B70);
  uint64_t v3 = (void *)sub_1ACE77558();
  uint64_t v4 = a1[4];
  uint64_t v5 = (void *)a1[5];
  unint64_t result = sub_1ACA6A1FC(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v17 = v5;
    return (unint64_t)v3;
  }
  uint64_t v8 = (void **)(a1 + 7);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v4;
    *(void *)(v3[7] + v9) = v5;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    char v13 = v8 + 2;
    uint64_t v4 = (uint64_t)*(v8 - 1);
    uint64_t v14 = *v8;
    id v15 = v5;
    unint64_t result = sub_1ACA6A1FC(v4);
    uint64_t v8 = v13;
    uint64_t v5 = v14;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACA3A518()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1ACA3A550()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1ACA3A564()
{
  return objectdestroy_14Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

void sub_1ACA3A598(uint64_t a1)
{
  sub_1ACE5C4B4(a1, *(void *)(v1 + 16));
}

unint64_t sub_1ACA3A5A0(void *a1)
{
  return sub_1ACA3A5AC(a1, &qword_1E99F0C38);
}

unint64_t sub_1ACA3A5AC(void *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  if (!v2) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v4 = (void *)sub_1ACE77558();
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  unint64_t result = sub_1ACA65E48(v6);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v4;
  }
  uint64_t v9 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v4[6] + v10) = v6;
    *(void *)(v4[7] + v10) = v5;
    uint64_t v11 = v4[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v4[2] = v13;
    if (!--v2) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 2;
    uint64_t v6 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1ACA65E48(v6);
    uint64_t v9 = v14;
    uint64_t v5 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1ACA3A6A8(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771938);
  uint64_t v3 = (void *)sub_1ACE77558();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_1ACA65CC4(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  char v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_retain();
    unint64_t result = sub_1ACA65CC4(v5);
    char v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1ACA3A7A8(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C10);
  uint64_t v3 = (void *)sub_1ACE77558();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_1ACA665AC(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  char v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1ACA665AC(v5);
    char v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1ACA3A8A8(uint64_t a1)
{
  return sub_1ACA3A8C0(a1, &qword_1E99F0BB8);
}

unint64_t sub_1ACA3A8B4(uint64_t a1)
{
  return sub_1ACA3A8C0(a1, &qword_1E99F0BC8);
}

unint64_t sub_1ACA3A8C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v4 = (void *)sub_1ACE77558();
  uint64_t v5 = *(void *)(a1 + 32);
  long long v15 = *(_OWORD *)(a1 + 40);
  unint64_t result = sub_1ACA65E48(v5);
  long long v7 = v15;
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    swift_retain();
    return (unint64_t)v4;
  }
  uint64_t v9 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v4[6] + 8 * result) = v5;
    *(_OWORD *)(v4[7] + 16 * result) = v7;
    uint64_t v10 = v4[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v4[2] = v12;
    if (!--v2) {
      goto LABEL_8;
    }
    uint64_t v13 = (_OWORD *)((char *)v9 + 24);
    uint64_t v5 = *((void *)v9 - 1);
    long long v16 = *v9;
    swift_retain();
    swift_retain();
    unint64_t result = sub_1ACA65E48(v5);
    uint64_t v9 = v13;
    long long v7 = v16;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACA3A9E8(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    sub_1ACA3AA28(result, a2, a3);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1ACA3AA28(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 1 <= 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

_OWORD *sub_1ACA3AA44(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1ACA3AA54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACA3AABC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1ACA3AAD4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACA3AB38()
{
  return objectdestroy_14Tm(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_14Tm(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 24));
  a2(*(void *)(v2 + 40));
  return swift_deallocObject();
}

uint64_t sub_1ACA3ABBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1ACA35460(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void *)(v5 + 24), *(uint64_t (**)(void))(v5 + 32), *(void *)(v5 + 40));
}

void sub_1ACA3ABF0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v11 = *(void *)(type metadata accessor for MediaRequest.Params() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1ACB03E4C(a1, a2, a3, a4, a5, v5 + v12, *(void *)(v5 + v13), (long long *)(v5 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v5 + ((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))(v5+ ((((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))(v5+ ((((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8));
}

uint64_t sub_1ACA3ACFC()
{
  uint64_t result = sub_1ACE753F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1ACE76FD8();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1ACA3ADE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a1;
  uint64_t v23 = a3;
  uint64_t v5 = sub_1ACE76FD8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = sub_1ACE750A8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  long long v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = _s29SynchronizedEventSubscriptionCMa();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v3, v12);
  swift_allocObject();
  id v17 = sub_1ACA3B0F8(v15);
  uint64_t v18 = *(void *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v11, v22, a2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v11, 0, 1, a2);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v11, v5);
  uint64_t v19 = &v17[*(void *)(*(void *)v17 + 120)];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v6 + 40))(v19, v9, v5);
  swift_endAccess();
  v24[3] = v16;
  unsigned char v24[4] = swift_getWitnessTable();
  v24[0] = v17;
  sub_1ACE75778();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
}

char *sub_1ACA3B0B8(void *a1)
{
  return sub_1ACA3B0F8(a1);
}

char *sub_1ACA3B0F8(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v33 = a1;
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = sub_1ACE753F8();
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = sub_1ACE75438();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = &v1[qword_1EB76E260];
  if (qword_1EB76D3B0 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v10, (uint64_t)qword_1EB76D398);
  sub_1ACE75428();
  sub_1ACE753C8();
  *(void *)&v2[qword_1EB76E270] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 56))(&v2[*(void *)(*(void *)v2 + 120)], 1, 1);
  uint64_t v31 = v11;
  uint64_t v32 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v15, v10);
  uint64_t v16 = v29;
  id v17 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v17(v9, v14, v4);
  uint64_t v30 = v13;
  uint64_t v18 = sub_1ACE75428();
  os_signpost_type_t v19 = sub_1ACE76E18();
  if (sub_1ACE76FA8())
  {
    uint64_t v20 = v9;
    unint64_t v28 = v9;
    uint64_t v21 = v4;
    v17(v7, v20, v4);
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    os_signpost_id_t v23 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v18, v19, v23, "SynchronizedEventSubscription", "", v22, 2u);
    MEMORY[0x1AD11B340](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v21);
    uint64_t v4 = v21;
    uint64_t v9 = v28;
  }
  else
  {
  }
  v17(v7, v9, v4);
  sub_1ACE75478();
  swift_allocObject();
  uint64_t v24 = sub_1ACE75468();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v4);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v32);
  *(void *)&v2[qword_1EB76E268] = v24;
  unint64_t v25 = v33;
  sub_1ACA3BA80(v33);
  uint64_t v26 = sub_1ACE750A8();
  (*(void (**)(void *, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  return v2;
}

void sub_1ACA3B510()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE75448();
  long long v44 = *(const char **)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v43 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE753F8();
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  os_log_type_t v47 = (char *)&v38 - v9;
  uint64_t v10 = sub_1ACE75438();
  uint64_t v48 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v2 + 80);
  uint64_t v14 = sub_1ACE76FD8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v38 - v16;
  uint64_t v18 = qword_1EB76E270;
  objc_msgSend(*(id *)((char *)v1 + qword_1EB76E270), sel_invalidate);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v17, 1, 1, v13);
  os_signpost_type_t v19 = (char *)v1 + *(void *)(*v1 + 120);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v19, v17, v14);
  swift_endAccess();
  if (*(void *)((char *)v1 + v18))
  {
    uint64_t v42 = v3;
    if (qword_1EB76D3B0 != -1) {
      swift_once();
    }
    uint64_t v20 = __swift_project_value_buffer(v10, (uint64_t)qword_1EB76D398);
    uint64_t v21 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v12, v20, v10);
    swift_retain();
    uint64_t v22 = sub_1ACE75428();
    uint64_t v23 = v10;
    uint64_t v24 = v47;
    sub_1ACE75458();
    int v41 = sub_1ACE76E08();
    if (sub_1ACE76FA8())
    {
      uint64_t v40 = v23;
      swift_retain();
      unint64_t v25 = v43;
      sub_1ACE75488();
      swift_release();
      uint64_t v26 = v44;
      uint64_t v27 = v42;
      if ((*((unsigned int (**)(char *, uint64_t))v44 + 11))(v25, v42) == *MEMORY[0x1E4FBD340])
      {
        unint64_t v28 = "[Error] Interval already ended";
      }
      else
      {
        (*((void (**)(char *, uint64_t))v26 + 1))(v25, v27);
        unint64_t v28 = "";
      }
      long long v44 = v28;
      uint64_t v29 = v47;
      uint64_t v30 = v45;
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
      uint64_t v32 = v8;
      unint64_t v39 = v8;
      uint64_t v33 = v46;
      v31(v32, v47, v46);
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      os_signpost_id_t v35 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v22, (os_signpost_type_t)v41, v35, "SynchronizedEventSubscription", v44, v34, 2u);
      MEMORY[0x1AD11B340](v34, -1, -1);
      swift_release();

      uint64_t v36 = *(void (**)(char *, uint64_t))(v30 + 8);
      v36(v29, v33);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v40);
      v36(v39, v33);
    }
    else
    {
      swift_release();

      (*(void (**)(char *, uint64_t))(v45 + 8))(v24, v46);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v23);
    }
    unint64_t v37 = *(void **)((char *)v1 + v18);
    *(void *)((char *)v1 + v18) = 0;
  }
}

void sub_1ACA3BA80(void *a1)
{
  uint64_t v2 = v1;
  id v156 = a1;
  uint64_t v3 = *v1;
  uint64_t v139 = sub_1ACE75448();
  uint64_t v138 = *(void *)(v139 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v139);
  os_log_t v143 = (os_log_t)((char *)&v129 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  v144 = (char *)&v129 - v6;
  uint64_t v7 = sub_1ACE753F8();
  uint64_t v148 = *(void *)(v7 - 8);
  uint64_t v149 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  v142 = (char *)&v129 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  v140 = (char *)&v129 - v11;
  MEMORY[0x1F4188790](v10);
  v137 = (char *)&v129 - v12;
  uint64_t v155 = sub_1ACE75438();
  uint64_t v159 = *(void *)(v155 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v155);
  v146 = (char *)&v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  v145 = (char *)&v129 - v15;
  uint64_t v16 = *(void *)(v3 + 88);
  uint64_t v17 = *(void *)(v3 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v132 = AssociatedTypeWitness;
  uint64_t v134 = sub_1ACE757A8();
  uint64_t v133 = *(void *)(v134 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v134);
  v131 = (char *)&v129 - v20;
  uint64_t v152 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v19);
  v130 = (char *)&v129 - v21;
  uint64_t v22 = sub_1ACE76FD8();
  uint64_t v150 = *(void *)(v22 - 8);
  uint64_t v151 = v22;
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  v141 = (char *)&v129 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  v136 = (char *)&v129 - v25;
  uint64_t v26 = sub_1ACE750A8();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void *)(v27 + 64);
  uint64_t v29 = MEMORY[0x1F4188790](v26);
  v147 = (char *)&v129 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x1F4188790](v29);
  v154 = (char *)&v129 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v34 = (char *)&v129 - v33;
  MEMORY[0x1F4188790](v32);
  uint64_t v36 = (char *)&v129 - v35;
  uint64_t v158 = qword_1EB76E270;
  objc_msgSend(*(id *)((char *)v2 + qword_1EB76E270), sel_invalidate);
  sub_1ACE75098();
  uint64_t v37 = swift_allocObject();
  v157 = v2;
  swift_weakInit();
  uint64_t v38 = (uint64_t)v156;
  (*(void (**)(char *, id, uint64_t))(v27 + 16))(v34, v156, v26);
  unint64_t v39 = (*(unsigned __int8 *)(v27 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v40 = (char *)swift_allocObject();
  uint64_t v153 = v17;
  *((void *)v40 + 2) = v17;
  *((void *)v40 + 3) = v16;
  uint64_t v135 = v16;
  *((void *)v40 + 4) = v37;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v40[v39], v34, v26);
  swift_retain();
  id v41 = sub_1ACA3D780(v38, (uint64_t)v36, 0, (uint64_t)sub_1ACA3D690, (uint64_t)v40);
  if (v41)
  {
    id v42 = objc_msgSend(self, sel_currentRunLoop);
    objc_msgSend(v42, sel_addTimer_forMode_, v41, *MEMORY[0x1E4F1C4B0]);
    swift_release();
  }
  else
  {
    swift_release();
  }
  long long v43 = *(void (**)(char *, uint64_t))(v27 + 8);
  v43(v36, v26);
  swift_release();
  uint64_t v45 = v157;
  uint64_t v44 = v158;
  uint64_t v46 = *(void **)((char *)v157 + v158);
  *(void *)((char *)v157 + v158) = v41;

  os_log_type_t v47 = *(void **)((char *)v45 + v44);
  uint64_t v48 = v159;
  if (v47)
  {
    id v49 = v47;
    id v50 = objc_msgSend(v49, sel_fireDate);
    uint64_t v51 = v154;
    sub_1ACE75078();

    sub_1ACE74FB8();
    double v53 = v52;
    v43(v51, v26);
    uint64_t v54 = v147;
    sub_1ACE75098();
    sub_1ACE74FB8();
    double v56 = v55;
    v43(v54, v26);
    if (v53 <= v56)
    {
      if (qword_1EB76D520 != -1) {
        swift_once();
      }
      uint64_t v65 = sub_1ACE754C8();
      __swift_project_value_buffer(v65, (uint64_t)qword_1EB76D500);
      id v66 = v49;
      uint64_t v67 = sub_1ACE75498();
      os_log_type_t v68 = sub_1ACE76BE8();
      int v69 = v68;
      BOOL v70 = os_log_type_enabled(v67, v68);
      id v156 = v66;
      if (v70)
      {
        uint64_t v71 = swift_slowAlloc();
        v147 = (char *)swift_slowAlloc();
        v161 = v147;
        *(_DWORD *)uint64_t v71 = 136315394;
        v142 = (char *)(v71 + 4);
        id v72 = objc_msgSend(v156, sel_fireDate);
        LODWORD(v146) = v69;
        id v73 = v72;
        os_log_t v143 = v67;
        char v74 = v154;
        sub_1ACE75078();

        sub_1ACA3DFDC();
        uint64_t v75 = sub_1ACE777C8();
        unint64_t v77 = v76;
        v43(v74, v26);
        uint64_t v160 = sub_1ACA3189C(v75, v77, (uint64_t *)&v161);
        sub_1ACE76FF8();

        swift_bridgeObjectRelease();
        *(_WORD *)(v71 + 12) = 2080;
        sub_1ACE75098();
        uint64_t v78 = sub_1ACE777C8();
        unint64_t v80 = v79;
        v43(v74, v26);
        uint64_t v160 = sub_1ACA3189C(v78, v80, (uint64_t *)&v161);
        uint64_t v48 = v159;
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        os_log_t v81 = v143;
        _os_log_impl(&dword_1AC9D5000, v143, (os_log_type_t)v146, "Scheduled a timer with a fire date (%s in the past! Current date: %s", (uint8_t *)v71, 0x16u);
        v82 = v147;
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v82, -1, -1);
        uint64_t v83 = v71;
        id v66 = v156;
        MEMORY[0x1AD11B340](v83, -1, -1);
      }
      else
      {
      }
      uint64_t v84 = v155;
      long long v85 = v145;
      long long v86 = v144;
      long long v87 = v136;
      objc_msgSend(v66, sel_invalidate);
      uint64_t v88 = *(void **)((char *)v45 + v158);
      *(void *)((char *)v45 + v158) = 0;

      uint64_t v89 = (uint64_t)v45 + *(void *)(*v45 + 120);
      swift_beginAccess();
      uint64_t v91 = v150;
      uint64_t v90 = v151;
      (*(void (**)(char *, uint64_t, uint64_t))(v150 + 16))(v87, v89, v151);
      uint64_t v93 = v152;
      uint64_t v92 = v153;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v87, 1, v153))
      {
        (*(void (**)(char *, uint64_t))(v91 + 8))(v87, v90);
      }
      else
      {
        uint64_t v105 = v84;
        char v106 = v130;
        (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v130, v87, v92);
        (*(void (**)(char *, uint64_t))(v91 + 8))(v87, v90);
        char v107 = v131;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v131, 1, 1);
        sub_1ACE75768();
        (*(void (**)(char *, uint64_t))(v133 + 8))(v107, v134);
        char v108 = v106;
        uint64_t v84 = v105;
        long long v86 = v144;
        (*(void (**)(char *, uint64_t))(v93 + 8))(v108, v92);
      }
      if (qword_1EB76D3B0 != -1) {
        swift_once();
      }
      uint64_t v109 = __swift_project_value_buffer(v84, (uint64_t)qword_1EB76D398);
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v85, v109, v84);
      swift_retain();
      long long v110 = sub_1ACE75428();
      uint64_t v111 = v137;
      sub_1ACE75458();
      os_signpost_type_t v112 = sub_1ACE76E08();
      if (sub_1ACE76FA8())
      {
        swift_retain();
        sub_1ACE75488();
        swift_release();
        uint64_t v113 = v138;
        uint64_t v114 = v139;
        if ((*(unsigned int (**)(char *, uint64_t))(v138 + 88))(v86, v139) == *MEMORY[0x1E4FBD340])
        {
          v115 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v113 + 8))(v86, v114);
          v115 = "";
        }
        uint64_t v124 = v148;
        uint64_t v123 = v149;
        v125 = v140;
        (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v140, v111, v149);
        v126 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v126 = 0;
        os_signpost_id_t v127 = sub_1ACE753D8();
        _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v110, v112, v127, "SynchronizedEventSubscription", v115, v126, 2u);
        MEMORY[0x1AD11B340](v126, -1, -1);

        swift_release();
        v128 = *(void (**)(char *, uint64_t))(v124 + 8);
        v128(v111, v123);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v145, v155);
        v128(v125, v123);
      }
      else
      {

        swift_release();
        (*(void (**)(char *, uint64_t))(v148 + 8))(v111, v149);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v85, v84);
      }
    }
    else
    {
    }
  }
  else
  {
    uint64_t v57 = (uint64_t)v45 + *(void *)(*v45 + 120);
    swift_beginAccess();
    uint64_t v59 = v150;
    uint64_t v58 = v151;
    unint64_t v60 = v141;
    (*(void (**)(char *, uint64_t, uint64_t))(v150 + 16))(v141, v57, v151);
    uint64_t v61 = v152;
    uint64_t v62 = v153;
    int v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v152 + 48))(v60, 1, v153);
    uint64_t v64 = v155;
    if (v63)
    {
      (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v58);
    }
    else
    {
      uint64_t v94 = v130;
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v130, v60, v62);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v58);
      uint64_t v95 = v131;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v131, 1, 1);
      sub_1ACE75768();
      (*(void (**)(char *, uint64_t))(v133 + 8))(v95, v134);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v94, v62);
    }
    os_log_t v96 = v143;
    v97 = v146;
    if (qword_1EB76D3B0 != -1) {
      swift_once();
    }
    uint64_t v98 = __swift_project_value_buffer(v64, (uint64_t)qword_1EB76D398);
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v97, v98, v64);
    swift_retain();
    id v99 = sub_1ACE75428();
    v100 = v142;
    sub_1ACE75458();
    os_signpost_type_t v101 = sub_1ACE76E08();
    if (sub_1ACE76FA8())
    {
      swift_retain();
      sub_1ACE75488();
      swift_release();
      uint64_t v102 = v138;
      uint64_t v103 = v139;
      if ((*(unsigned int (**)(os_log_t, uint64_t))(v138 + 88))(v96, v139) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v104 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(os_log_t, uint64_t))(v102 + 8))(v96, v103);
        uint64_t v104 = "";
      }
      uint64_t v117 = v148;
      uint64_t v116 = v149;
      v118 = v140;
      (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v140, v100, v149);
      v119 = v100;
      v120 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v120 = 0;
      os_signpost_id_t v121 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v99, v101, v121, "SynchronizedEventSubscription", v104, v120, 2u);
      MEMORY[0x1AD11B340](v120, -1, -1);
      swift_release();

      v122 = *(void (**)(char *, uint64_t))(v117 + 8);
      v122(v119, v116);
      (*(void (**)(char *, uint64_t))(v159 + 8))(v146, v64);
      v122(v118, v116);
    }
    else
    {
      swift_release();

      (*(void (**)(char *, uint64_t))(v148 + 8))(v100, v149);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v97, v64);
    }
  }
}

uint64_t sub_1ACA3CC18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a5;
  id v22 = a1;
  uint64_t v7 = sub_1ACE750A8();
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1ACE76FD8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v22 - v16;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v26 = a3;
    uint64_t v19 = Strong + *(void *)(*(void *)Strong + 120);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v19, v14);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v17, 1, a4))
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v17, a4);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      id v20 = objc_msgSend(v22, sel_fireDate);
      sub_1ACE75078();

      sub_1ACE75788();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v24);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a4);
    }
    a3 = v26;
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1ACA3BA80(a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACA3CF60()
{
  uint64_t v1 = v0 + qword_1EB76E260;
  uint64_t v2 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 120);
  uint64_t v4 = sub_1ACE76FD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_1ACA3D054()
{
  sub_1ACA3CF60();
  return swift_deallocClassInstance();
}

uint64_t _s29SynchronizedEventSubscriptionCMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACA3D0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_1ACA3D12C(uint64_t a1)
{
  uint64_t v2 = sub_1ACE750A8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1ACA3D190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE750A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1ACA3D1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE750A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1ACA3D258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE750A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1ACA3D2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE750A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1ACA3D320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACA3D334);
}

uint64_t sub_1ACA3D334(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1ACA3D3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACA3D3B4);
}

uint64_t sub_1ACA3D3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t _s26SynchronizedEventPublisherVMa()
{
  uint64_t result = qword_1EB76E1F8;
  if (!qword_1EB76E1F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACA3D470()
{
  uint64_t result = sub_1ACE750A8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1ACA3D500()
{
}

uint64_t sub_1ACA3D524()
{
  return sub_1ACE754E8();
}

uint64_t sub_1ACA3D548()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACA3D564()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACA3D580()
{
  return MEMORY[0x1E4FBC278];
}

uint64_t sub_1ACA3D58C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACA3D5C4()
{
  uint64_t v1 = sub_1ACE750A8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1ACA3D690(void *a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = *(void *)(sub_1ACE750A8() - 8);
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)v1 + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1ACA3CC18(a1, v6, v7, v3, v4);
}

void sub_1ACA3D718(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

id sub_1ACA3D780(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v85 = a4;
  uint64_t v86 = a5;
  LODWORD(v87) = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE75248();
  uint64_t v94 = *(void *)(v10 - 8);
  uint64_t v95 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v92 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE75208();
  uint64_t v90 = *(void *)(v12 - 8);
  uint64_t v91 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1ACE74BE8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v89 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v88 = (char *)&v78 - v19;
  uint64_t v20 = sub_1ACE750A8();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  v82 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v78 - v24;
  sub_1ACE74FB8();
  double v27 = v26;
  uint64_t v93 = a1;
  sub_1ACE74FB8();
  double v29 = v28;
  uint64_t v83 = v21;
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v96 = a2;
  uint64_t v84 = v20;
  v30(v25, a2, v20);
  sub_1ACE3ED94((uint64_t)v25, (char *)aBlock, v27, v29);
  id result = 0;
  unsigned int v32 = LOBYTE(aBlock[0]);
  if ((aBlock[0] & 0xFE) == 4) {
    return result;
  }
  unint64_t v79 = v9;
  uint64_t v81 = v16;
  uint64_t v80 = v15;
  aBlock[4] = v85;
  aBlock[5] = v86;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA3D718;
  aBlock[3] = &block_descriptor_3;
  uint64_t v33 = _Block_copy(aBlock);
  uint64_t v34 = self;
  swift_retain();
  id v87 = objc_msgSend(v34, sel_timerWithTimeInterval_repeats_block_, v87 & 1, v33, 1.0);
  _Block_release(v33);
  swift_release();
  sub_1ACE751A8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E440);
  uint64_t v35 = sub_1ACE751E8();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(void *)(v36 + 72);
  unint64_t v38 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1ACE84470;
  unint64_t v40 = v39 + v38;
  id v41 = *(void (**)(unint64_t, void, uint64_t))(v36 + 104);
  v41(v40, *MEMORY[0x1E4F27C50], v35);
  v41(v40 + v37, *MEMORY[0x1E4F27C48], v35);
  v41(v40 + 2 * v37, *MEMORY[0x1E4F27C10], v35);
  sub_1ACA6BC0C(v39);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v42 = v88;
  sub_1ACE75198();
  swift_bridgeObjectRelease();
  uint64_t v43 = v91;
  uint64_t v44 = *(void (**)(char *, uint64_t))(v90 + 8);
  v44(v14, v91);
  sub_1ACE751A8();
  uint64_t v45 = v92;
  sub_1ACE75238();
  uint64_t v46 = v89;
  sub_1ACE75188();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v45, v95);
  v44(v14, v43);
  os_log_type_t v47 = v46;
  if (v32 >= 2)
  {
    if (v32 != 2)
    {
      uint64_t v48 = v81;

      id v49 = *(void (**)(char *, uint64_t))(v48 + 8);
      uint64_t v50 = v80;
      v49(v46, v80);
      v49(v42, v50);
      return 0;
    }
    uint64_t v59 = sub_1ACE74BA8();
    if (v60) {
      uint64_t v61 = 0;
    }
    else {
      uint64_t v61 = v59;
    }
    uint64_t v62 = sub_1ACE74BA8();
    uint64_t v56 = v81;
    uint64_t v58 = v84;
    if (v63)
    {
      uint64_t v57 = (uint64_t)v79;
      if (v61 < 0)
      {
LABEL_29:
        sub_1ACE74BA8();
LABEL_30:
        sub_1ACE74BB8();
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v57 = (uint64_t)v79;
      if (v61 < v62) {
        goto LABEL_29;
      }
    }
    uint64_t v67 = sub_1ACE74B88();
    if (v68) {
      uint64_t v69 = 0;
    }
    else {
      uint64_t v69 = v67;
    }
    id result = (id)(v69 + 1);
    if (!__OFADD__(v69, 1))
    {
      sub_1ACE74B98();
      goto LABEL_29;
    }
LABEL_37:
    __break(1u);
    return result;
  }
  uint64_t v51 = sub_1ACE74BA8();
  if (v52) {
    uint64_t v53 = 0;
  }
  else {
    uint64_t v53 = v51;
  }
  uint64_t v54 = sub_1ACE74BA8();
  if ((v55 & 1) == 0)
  {
    uint64_t v56 = v81;
    uint64_t v57 = (uint64_t)v79;
    uint64_t v58 = v84;
    if (v53 < v54) {
      goto LABEL_31;
    }
    goto LABEL_18;
  }
  uint64_t v56 = v81;
  uint64_t v57 = (uint64_t)v79;
  uint64_t v58 = v84;
  if ((v53 & 0x8000000000000000) == 0)
  {
LABEL_18:
    uint64_t v64 = sub_1ACE74BA8();
    if (v65) {
      uint64_t v66 = 0;
    }
    else {
      uint64_t v66 = v64;
    }
    id result = (id)(v66 + 1);
    if (!__OFADD__(v66, 1)) {
      goto LABEL_30;
    }
    __break(1u);
    goto LABEL_37;
  }
LABEL_31:
  sub_1ACE74BC8();
  sub_1ACE74BD8();
  sub_1ACE74B78();
  uint64_t v70 = v83;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v57, 1, v58) == 1)
  {
    uint64_t v71 = *(void (**)(char *, uint64_t))(v56 + 8);
    uint64_t v72 = v80;
    v71(v46, v80);
    v71(v42, v72);
    sub_1ACA3E034(v57);
  }
  else
  {
    id v73 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v82, v57, v58);
    uint64_t v74 = v70;
    uint64_t v75 = (void *)sub_1ACE75008();
    objc_msgSend(v87, sel_setFireDate_, v75);

    (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v58);
    unint64_t v76 = *(void (**)(char *, uint64_t))(v56 + 8);
    uint64_t v77 = v80;
    v76(v47, v80);
    v76(v42, v77);
  }
  return v87;
}

unint64_t sub_1ACA3DFDC()
{
  unint64_t result = qword_1EB76A950;
  if (!qword_1EB76A950)
  {
    sub_1ACE750A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A950);
  }
  return result;
}

uint64_t sub_1ACA3E034(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ACA3E094(uint64_t a1, void *a2)
{
  sub_1ACA3E158(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_0(v3);
  sub_1ACA3AABC(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1ACA3E104@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController;
  swift_beginAccess();
  return sub_1ACA3E158(v3, a1);
}

uint64_t sub_1ACA3E158(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1ACA3E1BC(long long *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_0(v3);
  sub_1ACA3AABC(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1ACA3E220())()
{
  return j__swift_endAccess;
}

id BaseMAPIRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id BaseMAPIRequest.init()()
{
  id v1 = (objc_class *)type metadata accessor for MediaRequestController();
  id v2 = objc_allocWithZone(v1);
  uint64_t v3 = v0;
  id v4 = objc_msgSend(v2, sel_init);
  uint64_t v5 = &v3[OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController];
  *((void *)v5 + 3) = v1;
  *((void *)v5 + 4) = &protocol witness table for MediaRequestController;
  *(void *)uint64_t v5 = v4;
  swift_beginAccess();
  uint64_t v6 = *((void *)v5 + 3);
  uint64_t v7 = *((void *)v5 + 4);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(1, v6, v7);
  swift_endAccess();

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for BaseMAPIRequest();
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t type metadata accessor for BaseMAPIRequest()
{
  return self;
}

id BaseMAPIRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseMAPIRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACA3E4D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController;
  swift_beginAccess();
  return sub_1ACA3E158(v3, a2);
}

uint64_t method lookup function for BaseMAPIRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BaseMAPIRequest);
}

uint64_t dispatch thunk of BaseMAPIRequest.mediaRequestController.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of BaseMAPIRequest.mediaRequestController.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of BaseMAPIRequest.mediaRequestController.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

void RepublishingValueSubject.value.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  os_unfair_lock_lock((os_unfair_lock_t)(v1[2] + 16));
  id v4 = (char *)v1 + *(void *)(*v1 + 136);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1[2] + 16));
}

uint64_t RepublishingValueSubject.value.setter(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_1ACA446A0(a1);
  id v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8);
  return v4(a1);
}

void RepublishingValueSubject.send(_:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  id v4 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v4);
  if (*((unsigned char *)v1 + 24) == 1)
  {
    uint64_t v5 = (uint64_t)v1 + *(void *)(*v1 + 128);
    swift_beginAccess();
    uint64_t v6 = *(void *)v5;
    uint64_t v7 = (uint64_t)v1 + *(void *)(*v1 + 136);
    LOBYTE(v5) = *(unsigned char *)(v5 + 8);
    swift_beginAccess();
    sub_1ACA44774(v6, v5);
    (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(v3 + 80) - 8) + 24))(v7, a1, *(void *)(v3 + 80));
    swift_endAccess();
    os_unfair_lock_unlock(v4);
    MEMORY[0x1F4188790](v8);
    v9[2] = a1;
    sub_1ACDA289C((uint64_t)sub_1ACA44790, (uint64_t)v9, v6, v5);
    sub_1ACA447E4(v6, v5);
  }
  else
  {
    os_unfair_lock_unlock(v4);
  }
}

void (*RepublishingValueSubject.value.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  void v3[3] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[4] = v7;
  RepublishingValueSubject.value.getter((uint64_t)v7);
  return sub_1ACA3E9D0;
}

void sub_1ACA3E9D0(uint64_t a1, char a2)
{
  objc_super v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void *)(*(void *)a1 + 8);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    sub_1ACA446A0((uint64_t)v3);
    uint64_t v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
    v7(v4, v5);
  }
  else
  {
    sub_1ACA446A0(*(void *)(*(void *)a1 + 32));
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t RepublishingValueSubject.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  RepublishingValueSubject.init(_:)(a1);
  return v2;
}

uint64_t *RepublishingValueSubject.init(_:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 16) = 0;
  v1[2] = v4;
  *((unsigned char *)v1 + 24) = 1;
  uint64_t v5 = (uint64_t)v1 + *(void *)(v3 + 120);
  uint64_t v6 = sub_1ACE757A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = (uint64_t)v1 + *(void *)(*v1 + 128);
  uint64_t v8 = *(void *)(v3 + 80);
  *(void *)uint64_t v7 = sub_1ACDA2694();
  *(unsigned char *)(v7 + 8) = v9;
  *(uint64_t *)((char *)v1 + *(void *)(*v1 + 144)) = MEMORY[0x1E4FBC860];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))((uint64_t)v1 + *(void *)(*v1 + 136), a1, v8);
  return v1;
}

uint64_t *RepublishingValueSubject.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = (uint64_t)v0 + *(void *)(*v0 + 144);
  swift_beginAccess();
  uint64_t v4 = *(void *)(*(void *)v3 + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)v3 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1ACA3E158(v5, (uint64_t)v9);
      __swift_project_boxed_opaque_existential_1(v9, v9[3]);
      sub_1ACE75798();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
      v5 += 40;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v6 = (uint64_t)v0 + *(void *)(*v0 + 120);
  sub_1ACE757A8();
  uint64_t v7 = sub_1ACE76FD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  sub_1ACA447E4(*(uint64_t *)((char *)v1 + *(void *)(*v1 + 128)), *((unsigned char *)v1 + *(void *)(*v1 + 128) + 8));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 80) - 8) + 8))((uint64_t)v1 + *(void *)(*v1 + 136));
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t RepublishingValueSubject.__deallocating_deinit()
{
  RepublishingValueSubject.deinit();
  return swift_deallocClassInstance();
}

uint64_t RepublishingValueSubject.send(subscription:)(void *a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v3);
  sub_1ACA3E158((uint64_t)a1, (uint64_t)v10);
  uint64_t v4 = (void **)((char *)v1 + *(void *)(*v1 + 144));
  swift_beginAccess();
  uint64_t v5 = *v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v5 = sub_1ACA424F4(0, v5[2] + 1, 1, v5, &qword_1EB76E488, (uint64_t *)&unk_1EB772240);
    *uint64_t v4 = v5;
  }
  unint64_t v8 = v5[2];
  unint64_t v7 = v5[3];
  if (v8 >= v7 >> 1)
  {
    uint64_t v5 = sub_1ACA424F4((void *)(v7 > 1), v8 + 1, 1, v5, &qword_1EB76E488, (uint64_t *)&unk_1EB772240);
    *uint64_t v4 = v5;
  }
  long long v5[2] = v8 + 1;
  sub_1ACA3AABC(v10, (uint64_t)&v5[5 * v8 + 4]);
  swift_endAccess();
  os_unfair_lock_unlock(v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE757D8();
  return sub_1ACE75808();
}

uint64_t RepublishingValueSubject.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v35 = a1;
  uint64_t v36 = a3;
  uint64_t v34 = *(void *)(*(void *)v3 + 80);
  uint64_t v30 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v29 = (uint64_t)&v29 - v6;
  uint64_t v8 = *(void *)(v7 + 88);
  uint64_t v31 = *(void *)(v7 + 96);
  uint64_t v32 = v8;
  uint64_t v9 = sub_1ACE757A8();
  uint64_t v10 = sub_1ACE76FD8();
  uint64_t v33 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = *(void *)(v9 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v11);
  uint64_t v17 = (char *)&v29 - v16;
  uint64_t v18 = a2;
  uint64_t v19 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (os_unfair_lock_s *)(*(void *)(v4 + 16) + 16);
  os_unfair_lock_lock(v22);
  if (*(unsigned char *)(v4 + 24) == 1)
  {
    v37[0] = v34;
    v37[1] = v32;
    v37[2] = v18;
    uint64_t v38 = v36;
    uint64_t v23 = type metadata accessor for RepublishingValueSubject.Conduit();
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v35, v18);
    swift_allocObject();
    uint64_t v24 = swift_retain();
    uint64_t v25 = sub_1ACA3F93C(v24, (uint64_t)v21);
    swift_beginAccess();
    type metadata accessor for ConduitList();
    sub_1ACDA26A0(v25);
    swift_endAccess();
    os_unfair_lock_unlock(v22);
    uint64_t v38 = v23;
    uint64_t WitnessTable = swift_getWitnessTable();
    v37[0] = v25;
    sub_1ACE75778();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
  }
  else
  {
    uint64_t v27 = v4 + *(void *)(*(void *)v4 + 120);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v13, v27, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v9) == 1)
    {
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v13, v10);
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v13, v9);
      os_unfair_lock_unlock(v22);
      sub_1ACE75818();
      sub_1ACE75778();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
      uint64_t v28 = v29;
      RepublishingValueSubject.value.getter(v29);
      sub_1ACE75788();
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v34);
      sub_1ACE75768();
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v9);
    }
  }
  return result;
}

uint64_t sub_1ACA3F4DC(uint64_t a1, uint64_t a2)
{
  return sub_1ACA3F93C(a1, a2);
}

void RepublishingValueSubject.send(completion:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1ACE757A8();
  uint64_t v5 = sub_1ACE76FD8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v17 - v7;
  uint64_t v9 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v9);
  if (*((unsigned char *)v1 + 24) == 1)
  {
    *((unsigned char *)v1 + 24) = 0;
    uint64_t v10 = *(void *)(v4 - 8);
    v17[1] = v3;
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v4);
    uint64_t v12 = (uint64_t)v1 + *(void *)(*v1 + 120);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(v12, v8, v5);
    swift_endAccess();
    uint64_t v13 = (uint64_t)v1 + *(void *)(*v1 + 128);
    swift_beginAccess();
    uint64_t v14 = *(void *)v13;
    char v15 = *(unsigned char *)(v13 + 8);
    sub_1ACA44774(*(void *)v13, v15);
    type metadata accessor for ConduitList();
    sub_1ACDA29E4();
    os_unfair_lock_unlock(v9);
    MEMORY[0x1F4188790](v16);
    v17[-2] = a1;
    sub_1ACDA289C((uint64_t)sub_1ACA44818, (uint64_t)&v17[-4], v14, v15);
    sub_1ACA447E4(v14, v15);
  }
  else
  {
    os_unfair_lock_unlock(v9);
  }
}

void sub_1ACA3F848(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    swift_beginAccess();
    type metadata accessor for ConduitList();
    sub_1ACDA2A10(a1);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
  }
  else
  {
    os_unfair_lock_unlock(v3);
  }
}

uint64_t sub_1ACA3F93C(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 176);
  uint64_t v5 = sub_1ACE76FD8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - v7;
  v2[2] = 0;
  uint64_t v9 = (char *)v2 + *(void *)(v3 + 200);
  uint64_t v10 = *(void *)(v4 - 8);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v11(v9, 1, 1, v4);
  uint64_t v12 = *(void *)(*v2 + 208);
  swift_retain();
  *(void *)((char *)v2 + v12) = sub_1ACE757C8();
  uint64_t v13 = *(void *)(*v2 + 216);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 0;
  *(void *)((char *)v2 + v13) = v14;
  uint64_t v15 = *(void *)(*v2 + 224);
  uint64_t v16 = (void *)swift_slowAlloc();
  *uint64_t v16 = 0;
  *(void *)((char *)v2 + v15) = v16;
  *((unsigned char *)v2 + *(void *)(*v2 + 232)) = 0;
  v2[2] = v19;
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v8, v20, v4);
  v11(v8, 0, 1, v4);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v6 + 40))(v9, v8, v5);
  swift_endAccess();
  swift_release();
  return sub_1ACAE118C();
}

uint64_t sub_1ACA3FBA4()
{
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 200);
  uint64_t v2 = sub_1ACE76FD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_release();
}

uint64_t sub_1ACA3FC58()
{
  MEMORY[0x1AD11B340](*(void *)(v0 + *(void *)(*(void *)v0 + 224)), -1, -1);
  uint64_t v1 = sub_1ACAE118C();
  swift_release();
  uint64_t v2 = v1 + *(void *)(*(void *)v1 + 200);
  uint64_t v3 = sub_1ACE76FD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  return v1;
}

uint64_t sub_1ACA3FD38()
{
  sub_1ACA3FC58();
  return swift_deallocClassInstance();
}

void sub_1ACA3FD8C(uint64_t a1)
{
  uint64_t v24 = *v1;
  uint64_t v2 = v24;
  uint64_t v25 = a1;
  uint64_t v3 = *(void *)(v24 + 176);
  uint64_t v4 = sub_1ACE76FD8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v23 - v10;
  uint64_t v12 = (os_unfair_lock_s *)(*(uint64_t *)((char *)v1 + *(void *)(v2 + 216)) + 16);
  os_unfair_lock_lock(v12);
  uint64_t v13 = (uint64_t *)((char *)v1 + *(void *)(*v1 + 208));
  swift_beginAccess();
  uint64_t v14 = *v13;
  sub_1ACE757D8();
  if ((sub_1ACE757B8() & 1) == 0)
  {
    if (v14 < 0)
    {
      __break(1u);
      goto LABEL_30;
    }
    if (!v14)
    {
LABEL_6:
      *((unsigned char *)v1 + *(void *)(*v1 + 232)) = 0;
      os_unfair_lock_unlock(v12);
      return;
    }
  }
  uint64_t v15 = (uint64_t)v1 + *(void *)(*v1 + 200);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v15, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    goto LABEL_6;
  }
  uint64_t v16 = v11;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, v3);
  swift_beginAccess();
  uint64_t v17 = *v13;
  sub_1ACE757D8();
  if ((sub_1ACE757B8() & 1) == 0)
  {
    sub_1ACE757D8();
    if (sub_1ACE757B8())
    {
      uint64_t v18 = sub_1ACE757D8();
    }
    else
    {
      if (v17 < 0)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      if (!v17)
      {
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      uint64_t v18 = v17 - 1;
    }
    *uint64_t v13 = v18;
  }
  swift_endAccess();
  *((unsigned char *)v1 + *(void *)(*v1 + 232)) = 1;
  os_unfair_lock_unlock(v12);
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v19 = sub_1ACE75788();
  os_unfair_recursive_lock_unlock();
  sub_1ACE757D8();
  if (sub_1ACE757B8())
  {
LABEL_17:
    os_unfair_lock_lock(v12);
    swift_beginAccess();
    uint64_t v20 = *v13;
    sub_1ACE757D8();
    if (sub_1ACE757B8())
    {
LABEL_26:
      swift_endAccess();
      os_unfair_lock_unlock(v12);
      goto LABEL_27;
    }
    sub_1ACE757D8();
    char v21 = sub_1ACE757B8();
    uint64_t v22 = sub_1ACE757D8();
    if (v21)
    {
LABEL_25:
      *uint64_t v13 = v22;
      goto LABEL_26;
    }
    if (sub_1ACE757B8())
    {
LABEL_23:
      uint64_t v22 = sub_1ACE757D8();
      goto LABEL_25;
    }
    if (((v20 | v19) & 0x8000000000000000) == 0)
    {
      uint64_t v22 = v20 + v19;
      if (!__OFADD__(v20, v19))
      {
        if ((v22 & 0x8000000000000000) == 0) {
          goto LABEL_25;
        }
LABEL_34:
        __break(1u);
        return;
      }
      goto LABEL_23;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v19 < 0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v19) {
    goto LABEL_17;
  }
LABEL_27:
  (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v3);
}

void sub_1ACA401E0(uint64_t a1)
{
  uint64_t v2 = v1;
  v19[0] = *v1;
  uint64_t v3 = v19[0];
  v19[1] = a1;
  uint64_t v4 = *(void *)(v19[0] + 176);
  uint64_t v5 = sub_1ACE76FD8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)v19 - v11;
  uint64_t v13 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)v19 - v14;
  uint64_t v16 = (os_unfair_lock_s *)(*(void *)((char *)v2 + *(void *)(v3 + 216)) + 16);
  os_unfair_lock_lock(v16);
  uint64_t v17 = (char *)v2 + *(void *)(*v2 + 200);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v12, v17, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
    os_unfair_lock_unlock(v16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v12, v4);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v9, 1, 1, v4);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v6 + 40))(v17, v9, v5);
    swift_endAccess();
    uint64_t v18 = v2[2];
    v2[2] = 0;
    os_unfair_lock_unlock(v16);
    if (v18)
    {
      swift_retain();
      sub_1ACA3F848((uint64_t)v2);
      swift_release();
    }
    os_unfair_recursive_lock_lock_with_options();
    sub_1ACE75768();
    os_unfair_recursive_lock_unlock();
    swift_release();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v4);
  }
}

void sub_1ACA40534(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v62 = *v2;
  uint64_t v4 = v62;
  uint64_t v66 = *(void *)(*(void *)(v62 + 160) - 8);
  MEMORY[0x1F4188790](a1);
  char v63 = (char *)&v60 - v6;
  uint64_t v64 = v5;
  uint64_t v68 = sub_1ACE76FD8();
  char v65 = *(uint64_t **)(v68 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v68);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v60 - v10;
  uint64_t v12 = *(void *)(v4 + 176);
  uint64_t v13 = sub_1ACE76FD8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v60 - v16;
  uint64_t v18 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)&v60 - v19;
  sub_1ACE757D8();
  if ((sub_1ACE757B8() & 1) == 0)
  {
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (a1)
    {
      goto LABEL_4;
    }
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
LABEL_4:
  uint64_t v67 = v11;
  char v21 = (os_unfair_lock_s *)(*(void *)((char *)v2 + *(void *)(*v2 + 216)) + 16);
  os_unfair_lock_lock(v21);
  uint64_t v22 = *(void *)(*v2 + 200);
  uint64_t v69 = v18;
  uint64_t v23 = (char *)v2 + v22;
  swift_beginAccess();
  uint64_t v24 = v23;
  uint64_t v25 = v69;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v24, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v17, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    os_unfair_lock_unlock(v21);
    return;
  }
  os_unfair_lock_t v61 = v21;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v20, v17, v12);
  uint64_t v26 = *(void *)(*v2 + 232);
  if (*((unsigned char *)v2 + v26))
  {
    uint64_t v27 = (void *)((char *)v2 + *(void *)(*v2 + 208));
    swift_beginAccess();
    uint64_t v28 = *v27;
    sub_1ACE757D8();
    char v29 = sub_1ACE757B8();
    uint64_t v30 = v61;
    if (v29)
    {
LABEL_30:
      swift_endAccess();
      os_unfair_lock_unlock(v30);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v12);
      return;
    }
    sub_1ACE757D8();
    char v31 = sub_1ACE757B8();
    uint64_t v32 = sub_1ACE757D8();
    if (v31)
    {
      uint64_t v25 = v69;
LABEL_29:
      uint64_t *v27 = v32;
      goto LABEL_30;
    }
    char v40 = sub_1ACE757B8();
    uint64_t v25 = v69;
    if (v40) {
      goto LABEL_22;
    }
    if (((v28 | a1) & 0x8000000000000000) == 0)
    {
      uint64_t v32 = v28 + a1;
      if (!__OFADD__(v28, a1))
      {
        if ((v32 & 0x8000000000000000) == 0) {
          goto LABEL_29;
        }
        goto LABEL_60;
      }
LABEL_22:
      uint64_t v32 = sub_1ACE757D8();
      goto LABEL_29;
    }
    goto LABEL_58;
  }
  char v60 = v20;
  sub_1ACE757D8();
  if (sub_1ACE757B8())
  {
    uint64_t v33 = sub_1ACE757D8();
    uint64_t v34 = v64;
    uint64_t v35 = v65;
    goto LABEL_15;
  }
  uint64_t v34 = v64;
  uint64_t v35 = v65;
  if (a1 < 0) {
    goto LABEL_55;
  }
  if (!a1)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v33 = a1 - 1;
LABEL_15:
  uint64_t v36 = (void *)((char *)v2 + *(void *)(*v2 + 208));
  swift_beginAccess();
  uint64_t v37 = *v36;
  sub_1ACE757D8();
  if ((sub_1ACE757B8() & 1) == 0)
  {
    sub_1ACE757D8();
    char v38 = sub_1ACE757B8();
    uint64_t v39 = sub_1ACE757D8();
    if (v38)
    {
      uint64_t v25 = v69;
    }
    else
    {
      char v41 = sub_1ACE757B8();
      uint64_t v25 = v69;
      if (v41) {
        goto LABEL_27;
      }
      if ((v37 | v33) < 0)
      {
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
      uint64_t v39 = v37 + v33;
      if (__OFADD__(v37, v33))
      {
LABEL_27:
        uint64_t v39 = sub_1ACE757D8();
      }
      else if (v39 < 0)
      {
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
    }
    uint64_t *v36 = v39;
  }
  char v65 = v36;
  id v42 = v35;
  uint64_t v43 = v34;
  swift_endAccess();
  uint64_t v44 = 1;
  *((unsigned char *)v2 + v26) = 1;
  if (v2[2])
  {
    swift_retain();
    uint64_t v45 = (uint64_t)v67;
    RepublishingValueSubject.value.getter((uint64_t)v67);
    swift_release();
    uint64_t v44 = 0;
  }
  else
  {
    uint64_t v45 = (uint64_t)v67;
  }
  uint64_t v46 = v68;
  uint64_t v47 = v66;
  uint64_t v48 = v43;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56))(v45, v44, 1, v43);
  os_unfair_lock_unlock(v61);
  id v49 = v42;
  ((void (*)(char *, uint64_t, uint64_t))v42[2])(v9, v45, v46);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v9, 1, v48) == 1)
  {
    uint64_t v50 = (void (*)(uint64_t, uint64_t))v42[1];
    v50(v45, v46);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v60, v12);
    v50((uint64_t)v9, v46);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v63, v9, v48);
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v51 = sub_1ACE75788();
  uint64_t v52 = v69;
  os_unfair_recursive_lock_unlock();
  sub_1ACE757D8();
  char v53 = sub_1ACE757B8();
  uint64_t v54 = v61;
  if (v53) {
    goto LABEL_41;
  }
  if (v51 < 0)
  {
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  if (!v51)
  {
LABEL_52:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v63, v48);
    ((void (*)(char *, uint64_t))v49[1])(v67, v68);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v60, v12);
    return;
  }
LABEL_41:
  os_unfair_lock_lock(v61);
  char v55 = v65;
  swift_beginAccess();
  uint64_t v56 = *v55;
  sub_1ACE757D8();
  if (sub_1ACE757B8())
  {
LABEL_51:
    swift_endAccess();
    os_unfair_lock_unlock(v54);
    uint64_t v47 = v66;
    goto LABEL_52;
  }
  sub_1ACE757D8();
  char v57 = sub_1ACE757B8();
  uint64_t v58 = sub_1ACE757D8();
  if (v57)
  {
    uint64_t v52 = v69;
LABEL_50:
    *char v65 = v58;
    goto LABEL_51;
  }
  char v59 = sub_1ACE757B8();
  uint64_t v52 = v69;
  if (v59) {
    goto LABEL_48;
  }
  if ((v56 | v51) < 0)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  uint64_t v58 = v56 + v51;
  if (__OFADD__(v56, v51))
  {
LABEL_48:
    uint64_t v58 = sub_1ACE757D8();
    goto LABEL_50;
  }
  if ((v58 & 0x8000000000000000) == 0) {
    goto LABEL_50;
  }
LABEL_63:
  __break(1u);
}

void sub_1ACA40D58()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 176);
  uint64_t v3 = sub_1ACE76FD8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v15[-v8];
  uint64_t v10 = (os_unfair_lock_s *)(*(void *)((char *)v0 + *(void *)(v1 + 216)) + 16);
  os_unfair_lock_lock(v10);
  uint64_t v11 = (char *)v0 + *(void *)(*v0 + 200);
  swift_beginAccess();
  (*(void (**)(unsigned char *, char *, uint64_t))(v4 + 16))(v9, v11, v3);
  uint64_t v12 = *(void *)(v2 - 8);
  int v13 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v2);
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
  if (v13 == 1)
  {
    os_unfair_lock_unlock(v10);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v7, 1, 1, v2);
    swift_beginAccess();
    (*(void (**)(char *, unsigned char *, uint64_t))(v4 + 40))(v11, v7, v3);
    swift_endAccess();
    uint64_t v14 = v0[2];
    v0[2] = 0;
    os_unfair_lock_unlock(v10);
    if (v14)
    {
      swift_retain();
      sub_1ACA3F848((uint64_t)v0);
      swift_release_n();
    }
  }
}

uint64_t sub_1ACA40FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RepublishingValueSubject.receive<A>(subscriber:)(a1, a2, a3);
}

void sub_1ACA40FFC(uint64_t a1@<X8>)
{
  uint64_t v20 = *v1;
  uint64_t v2 = v20;
  uint64_t v21 = a1;
  uint64_t v19 = sub_1ACE77BB8();
  uint64_t v3 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C90);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)((char *)v1 + *(void *)(v2 + 216)) + 16));
  uint64_t v22 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4B0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1ACE84630;
  *(void *)(v9 + 32) = 0x746E65726170;
  *(void *)(v9 + 40) = 0xE600000000000000;
  uint64_t v10 = v1[2];
  swift_getAssociatedConformanceWitness();
  type metadata accessor for RepublishingValueSubject();
  uint64_t v11 = sub_1ACE76FD8();
  *(void *)(v9 + 48) = v10;
  *(void *)(v9 + 72) = v11;
  *(void *)(v9 + 80) = 0x657274736E776F64;
  *(void *)(v9 + 88) = 0xEA00000000006D61;
  uint64_t v12 = (char *)v1 + *(void *)(*v1 + 200);
  swift_beginAccess();
  uint64_t v13 = sub_1ACE76FD8();
  *(void *)(v9 + 120) = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v9 + 96));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(boxed_opaque_existential_1, v12, v13);
  *(void *)(v9 + 128) = 0x646E616D6564;
  *(void *)(v9 + 136) = 0xE600000000000000;
  uint64_t v15 = (void *)((char *)v1 + *(void *)(*v1 + 208));
  swift_beginAccess();
  uint64_t v16 = MEMORY[0x1E4F1AAD8];
  *(void *)(v9 + 144) = *v15;
  *(void *)(v9 + 168) = v16;
  *(void *)(v9 + 176) = 0x7463656A627573;
  uint64_t v17 = v1[2];
  *(void *)(v9 + 216) = v11;
  *(void *)(v9 + 184) = 0xE700000000000000;
  *(void *)(v9 + 192) = v17;
  uint64_t v18 = sub_1ACE77BA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBC430], v19);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1ACE77BE8();
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)((char *)v1 + *(void *)(*v1 + 216)) + 16));
}

uint64_t sub_1ACA413EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FBC430];
  uint64_t v3 = sub_1ACE77BB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

void sub_1ACA41460(void *a1@<X8>)
{
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000001ACEC5990;
}

unint64_t sub_1ACA4148C()
{
  return 0xD000000000000013;
}

void sub_1ACA414A8(uint64_t a1@<X8>)
{
}

void sub_1ACA414CC(void *a1@<X8>)
{
}

void *sub_1ACA414E4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0D78);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA445B4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA415F4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA42FC4(a1, a2, a3, a4, &qword_1E99F0D68);
}

void *sub_1ACA41608(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA420E8(a1, a2, a3, a4, &qword_1EB7722A0);
}

void *sub_1ACA4161C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA43718(a1, a2, a3, a4, &qword_1EB769140);
}

uint64_t sub_1ACA41630(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ACA418F0(a1, a2, a3, a4, &qword_1E99F0D20, MEMORY[0x1E4F27928], MEMORY[0x1E4F27928]);
}

void *sub_1ACA41664(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA4167C(a1, a2, a3, a4, &qword_1EB771AF8);
}

void *sub_1ACA41670(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA4167C(a1, a2, a3, a4, &qword_1E99F0DB0);
}

void *sub_1ACA4167C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA44B18(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1ACA41788(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0DA8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      long long v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1ACA452E4(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA418B0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA4167C(a1, a2, a3, a4, &qword_1E99F0DA0);
}

uint64_t sub_1ACA418BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ACA418F0(a1, a2, a3, a4, &qword_1E99F0CB8, type metadata accessor for PodcastsMediaLibrary.MediaItem, type metadata accessor for PodcastsMediaLibrary.MediaItem);
}

uint64_t sub_1ACA418F0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1ACE77488();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1ACA46204(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_1ACA41B70(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7707A8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA453D4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA41C80(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0D98);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA445B4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA41D90(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7694A0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA44EFC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA41EA0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA44CF8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA41FB0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0D90);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA44B18(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA420C0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA42ACC(a1, a2, a3, a4, &qword_1E99F0D80, &qword_1E99F0D88);
}

void *sub_1ACA420D4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA420E8(a1, a2, a3, a4, &qword_1EB769128);
}

void *sub_1ACA420E8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[5 * v9 + 4]) {
          memmove(v13, a4 + 4, 40 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1ACA454C8(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1ACA42218(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0D70);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA44C04(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1ACA42328(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1ACA429C0(a1, a2, a3, a4, &qword_1EB7725D8);
}

uint64_t sub_1ACA42334(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ACA418F0(a1, a2, a3, a4, &qword_1EB7725C8, MEMORY[0x1E4F26EA0], MEMORY[0x1E4F26EA0]);
}

uint64_t sub_1ACA42368(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ACA418F0(a1, a2, a3, a4, &qword_1EB76E438, MEMORY[0x1E4F276F0], MEMORY[0x1E4F276F0]);
}

uint64_t sub_1ACA4239C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ACA418F0(a1, a2, a3, a4, &qword_1EB76E470, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
}

void *sub_1ACA423D0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C98);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA455BC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA424E0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA424F4(a1, a2, a3, a4, &qword_1EB76A900, (uint64_t *)&unk_1EB76AD50);
}

void *sub_1ACA424F4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v15 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1ACA456C8(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1ACA42624(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769130);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      long long v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[12 * v8 + 4]) {
          memmove(v12, a4 + 4, 96 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1ACA44FE8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA42748(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76ED88);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      long long v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1ACA44DEC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA42870(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76ED98);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA46454(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACA42980(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ACA418F0(a1, a2, a3, a4, &qword_1EB7707A0, MEMORY[0x1E4F27DE8], MEMORY[0x1E4F27DE8]);
}

char *sub_1ACA429B4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1ACA429C0(a1, a2, a3, a4, &qword_1E99F0D60);
}

char *sub_1ACA429C0(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      int64_t v10 = *((void *)a4 + 2);
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (char *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * v12 - 64;
      uint64_t v13 = v11 + 32;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32]) {
          memmove(v13, a4 + 32, v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1ACA45CC8(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1ACA42AB8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA42ACC(a1, a2, a3, a4, &qword_1EB76E490, &qword_1EB76E020);
}

void *sub_1ACA42ACC(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA45BC0(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

char *sub_1ACA42BE8(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1ACA429C0(a1, a2, a3, a4, &qword_1EB76E458);
}

void *sub_1ACA42BF4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA43AC4(a1, a2, a3, a4, (uint64_t *)&unk_1EB769190);
}

uint64_t sub_1ACA42C00(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ACA418F0(a1, a2, a3, a4, &qword_1EB76E460, type metadata accessor for StoreFeedUpdater.Update, type metadata accessor for StoreFeedUpdater.Update);
}

void *sub_1ACA42C34(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771CE8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA44B18(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACA42D44(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ACA43118(a1, a2, a3, a4, &qword_1EB771CF0, &qword_1EB76A908);
}

void *sub_1ACA42D58(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA42D6C(a1, a2, a3, a4, &qword_1EB76ED80);
}

void *sub_1ACA42D6C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      int64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x1E4FBC860];
      int64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA458E4(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1ACA42E88(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0D38);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      long long v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1ACA457D4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA42FB0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA42FC4(a1, a2, a3, a4, &qword_1E99F0D48);
}

void *sub_1ACA42FC4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      size_t v11 = (void *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[5 * v9 + 4]) {
          memmove(v13, a4 + 4, 40 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      size_t v11 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1ACA454C8(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1ACA430F0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA42D6C(a1, a2, a3, a4, &qword_1E99F0CE0);
}

uint64_t sub_1ACA43104(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ACA43118(a1, a2, a3, a4, &qword_1E99F0D28, &qword_1E99F0D30);
}

uint64_t sub_1ACA43118(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_1ACE77488();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1ACA45F9C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

void *sub_1ACA43384(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772728);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA44EFC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA43494(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0CA0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      long long v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1ACA459D4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA435B8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA42FC4(a1, a2, a3, a4, &qword_1E99F0CB0);
}

void *sub_1ACA435CC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0CA8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA45ACC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA436DC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA42ACC(a1, a2, a3, a4, &qword_1E99F0D18, &qword_1EB7731B8);
}

void *sub_1ACA436F0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA42ACC(a1, a2, a3, a4, &qword_1E99F0D08, &qword_1E99F0D10);
}

void *sub_1ACA43704(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA43718(a1, a2, a3, a4, &qword_1EB7707B0);
}

void *sub_1ACA43718(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4]) {
          memmove(v13, a4 + 4, 24 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1ACA46360(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1ACA43848(void *a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ACA44108(a1, a2, a3, a4, &qword_1EB771B00);
}

char *sub_1ACA4385C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1ACA429C0(a1, a2, a3, a4, &qword_1E99F0D00);
}

uint64_t sub_1ACA43868(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ACA43118(a1, a2, a3, a4, &qword_1E99F0CF0, &qword_1E99F0CF8);
}

void *sub_1ACA4387C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769138);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      long long v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 104);
      size_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[13 * v8 + 4]) {
          memmove(v12, a4 + 4, 104 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      size_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1ACA450E0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA439A8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4B8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA44EFC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA43AB8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA43AC4(a1, a2, a3, a4, &qword_1E99F0CE8);
}

void *sub_1ACA43AC4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4]) {
          memmove(v14, a4 + 4, 8 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA44EFC(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1ACA43BD0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E480);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      long long v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1ACA45DB0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA43CF8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E4C0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA45EA8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA43E08(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0D50);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      long long v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1ACA451EC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1ACA43F34(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1ACA429C0(a1, a2, a3, a4, &qword_1E99F0D58);
}

uint64_t sub_1ACA43F40(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ACA43118(a1, a2, a3, a4, &qword_1E99F0CD8, &qword_1E99F52F0);
}

void *sub_1ACA43F54(void *result, int64_t a2, char a3, unint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *(void *)(a4 + 24);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *(void *)(a4 + 16);
    if (v7 <= v8) {
      uint64_t v9 = *(void *)(a4 + 16);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769150);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      long long v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      unint64_t v12 = (unint64_t)(v10 + 4);
      if (v5)
      {
LABEL_13:
        if ((unint64_t)v10 < a4 || v12 >= a4 + 32 + 24 * v8)
        {
          __swift_instantiateConcreteTypeFromMangledName(qword_1EB7686C0);
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v10 != (void *)a4)
        {
          __swift_instantiateConcreteTypeFromMangledName(qword_1EB7686C0);
          swift_arrayInitWithTakeBackToFront();
        }
        *(void *)(a4 + 16) = 0;
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v12 = MEMORY[0x1E4FBC860] + 32;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1ACA460F4(0, v8, v12, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACA440C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ACA418F0(a1, a2, a3, a4, &qword_1E99F0CD0, (uint64_t (*)(void))type metadata accessor for ArtworkContent, (uint64_t (*)(void))type metadata accessor for ArtworkContent);
}

void *sub_1ACA440F4(void *a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ACA44108(a1, a2, a3, a4, &qword_1EB769148);
}

void *sub_1ACA44108(void *result, int64_t a2, char a3, unint64_t a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *(void *)(a4 + 24);
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = *(void *)(a4 + 16);
    if (v8 <= v9) {
      uint64_t v10 = *(void *)(a4 + 16);
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      size_t v11 = (void *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      unint64_t v13 = (unint64_t)(v11 + 4);
      if (v6)
      {
LABEL_13:
        if ((unint64_t)v11 < a4 || v13 >= a4 + 32 + 24 * v9)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v11 != (void *)a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        *(void *)(a4 + 16) = 0;
        goto LABEL_24;
      }
    }
    else
    {
      size_t v11 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v13 = MEMORY[0x1E4FBC860] + 32;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1ACA46360(0, v9, v13, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1ACA44254(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB76EDE0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA46560(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA44364(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E450);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      long long v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4]) {
          memmove(v12, a4 + 4, 72 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1ACA46654(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1ACA44490(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACA43718(a1, a2, a3, a4, &qword_1E99F0CC8);
}

void *sub_1ACA444A4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0CC0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ACA44B18(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1ACA445B4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1ACE77568();
  __break(1u);
  return result;
}

void sub_1ACA446A0(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v4);
  char v5 = (char *)v1 + *(void *)(*v1 + 136);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 24))(v5, a1);
  swift_endAccess();
  os_unfair_lock_unlock(v4);
  RepublishingValueSubject.send(_:)(a1);
}

uint64_t sub_1ACA44774(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_bridgeObjectRetain();
  }
  if (!a2) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1ACA44790(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 104))(*(void *)(v1 + 16));
}

uint64_t sub_1ACA447E4(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_bridgeObjectRelease();
  }
  if (!a2) {
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for RepublishingValueSubject.Conduit()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1ACA44818(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 112))(*(void *)(v1 + 16));
}

uint64_t sub_1ACA4486C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACA44888(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 96);
}

void sub_1ACA44890(uint64_t a1@<X8>)
{
}

void sub_1ACA448B4(uint64_t a1)
{
}

uint64_t sub_1ACA448D8()
{
  return 24;
}

__n128 sub_1ACA448E4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1ACA448F8()
{
  sub_1ACE757A8();
  uint64_t result = sub_1ACE76FD8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for RepublishingValueSubject()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for RepublishingValueSubject(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RepublishingValueSubject);
}

uint64_t dispatch thunk of RepublishingValueSubject.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_1ACA44A44()
{
  uint64_t result = sub_1ACE76FD8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

char *sub_1ACA44B18(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA44C04(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA44CF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA44DEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76ED38);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

char *sub_1ACA44EFC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA44FE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 96 * a1 + 32;
    unint64_t v6 = a3 + 96 * v4;
    if (v5 >= v6 || v5 + 96 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA450E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 104 * a1 + 32;
    unint64_t v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7671F0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA451EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

char *sub_1ACA452E4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 56 * a1 + 32);
    size_t v6 = 56 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA453D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA454C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA455BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1A50);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA456C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA457D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0D40);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA458E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA459D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA45ACC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA45BC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

char *sub_1ACA45CC8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA45DB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA45EA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA45F9C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA460F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB7686C0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA46204(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA46360(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA46454(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76ED48);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA46560(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA46654(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 72 * a1 + 32;
    unint64_t v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA4674C(void (*a1)(uint64_t, void), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE754C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RecommendationModulesResponse();
  swift_allocObject();
  if (RecommendationModulesResponse.init()())
  {
    sub_1ACE754A8();
    unint64_t v13 = sub_1ACE75498();
    os_log_type_t v14 = sub_1ACE76C08();
    if (os_log_type_enabled(v13, v14))
    {
      unint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v15 = 0;
      _os_log_impl(&dword_1AC9D5000, v13, v14, "RecommendationModulesRequest returning cached response", v15, 2u);
      MEMORY[0x1AD11B340](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v16 = swift_retain();
    a1(v16, 0);
    return swift_release_n();
  }
  else
  {
    uint64_t v18 = sub_1ACE767F8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
    uint64_t v19 = (void *)swift_allocObject();
    void v19[2] = 0;
    v19[3] = 0;
    v19[4] = v3;
    v19[5] = a1;
    v19[6] = a2;
    id v20 = v3;
    swift_retain();
    sub_1ACA47C2C((uint64_t)v8, (uint64_t)&unk_1E99F0DC0, (uint64_t)v19);
    return swift_release();
  }
}

uint64_t RecommendationModulesResponse.__allocating_init()()
{
  return RecommendationModulesResponse.init()();
}

uint64_t type metadata accessor for RecommendationModulesResponse()
{
  return self;
}

uint64_t sub_1ACA46A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  type metadata accessor for MediaRequest.Params();
  v6[13] = swift_task_alloc();
  uint64_t v7 = sub_1ACE754C8();
  v6[14] = v7;
  v6[15] = *(void *)(v7 - 8);
  v6[16] = swift_task_alloc();
  v6[17] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACA46B3C, 0, 0);
}

uint64_t sub_1ACA46B3C()
{
  sub_1ACE754A8();
  unint64_t v1 = sub_1ACE75498();
  os_log_type_t v2 = sub_1ACE76C08();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1AC9D5000, v1, v2, "RecommendationModulesRequest creating personalized payload", v3, 2u);
    MEMORY[0x1AD11B340](v3, -1, -1);
  }
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[15];

  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v0[18] = v7;
  v0[19] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v4, v5);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[20] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1ACA46C9C;
  return sub_1ACA47E44();
}

uint64_t sub_1ACA46C9C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 168) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1ACA46D9C, 0, 0);
}

uint64_t sub_1ACA46D9C()
{
  MediaRequest.Params.init(recommendationsWith:contentTypes:displayKinds:)(v0[21], (uint64_t)&unk_1F037CDE8, (uint64_t)&unk_1F037CE10, v0[13]);
  sub_1ACE754A8();
  uint64_t v1 = sub_1ACE75498();
  os_log_type_t v2 = sub_1ACE76C08();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1AC9D5000, v1, v2, "RecommendationModulesRequest fetching recommendations", v3, 2u);
    MEMORY[0x1AD11B340](v3, -1, -1);
  }
  uint64_t v4 = (void (*)(uint64_t, uint64_t))v0[18];
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[14];
  uint64_t v7 = v0[12];
  uint64_t v16 = v0[11];
  uint64_t v17 = v0[13];
  uint64_t v8 = v0[10];

  v4(v5, v6);
  uint64_t v9 = v8 + OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController;
  swift_beginAccess();
  sub_1ACA3E158(v9, (uint64_t)(v0 + 2));
  uint64_t v10 = v0[5];
  uint64_t v11 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v10);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v16;
  *(void *)(v12 + 24) = v7;
  unint64_t v13 = *(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(v11 + 56);
  swift_retain();
  v13(v17, sub_1ACA50FC4, v12, v10, v11);
  swift_release();
  sub_1ACA50FCC(v17, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

void sub_1ACA46FE8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void (*a6)(void, void *), uint64_t a7)
{
  uint64_t v78 = a7;
  unint64_t v79 = a6;
  uint64_t v77 = a3;
  uint64_t v8 = sub_1ACE74DB8();
  uint64_t v75 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE74F28();
  uint64_t v76 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for RecommendationModulesCache();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1ACE754C8();
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  id v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  unint64_t v23 = (char *)&v71 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v27 = (char *)&v71 - v26;
  if (a5)
  {
    uint64_t v28 = v25;
    uint64_t v77 = (void *)v24;
    id v29 = a5;
    sub_1ACE754A8();
    id v30 = a5;
    id v31 = a5;
    uint64_t v32 = sub_1ACE75498();
    os_log_type_t v33 = sub_1ACE76BE8();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      v81[0] = v35;
      *(_DWORD *)uint64_t v34 = 136315138;
      swift_getErrorValue();
      uint64_t v36 = sub_1ACE77A98();
      uint64_t v80 = sub_1ACA3189C(v36, v37, v81);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AC9D5000, v32, v33, "RecommendationModulesRequest fetching recommendations failed with error: %s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v35, -1, -1);
      MEMORY[0x1AD11B340](v34, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, void *))(v28 + 8))(v27, v77);
    char v53 = v79;
    id v54 = a5;
    v53(0, a5);
  }
  else
  {
    uint64_t v71 = v10;
    uint64_t v72 = v13;
    id v73 = v16;
    uint64_t v74 = v11;
    v38._rawValue = v77;
    if (v77)
    {
      uint64_t v39 = v25;
      uint64_t v40 = v24;
      swift_bridgeObjectRetain();
      sub_1ACE754A8();
      char v41 = sub_1ACE75498();
      os_log_type_t v42 = sub_1ACE76C08();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v43 = 0;
        _os_log_impl(&dword_1AC9D5000, v41, v42, "RecommendationModulesRequest completed", v43, 2u);
        MEMORY[0x1AD11B340](v43, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v40);
      type metadata accessor for RecommendationModulesResponse();
      uint64_t v44 = swift_allocObject();
      *(void *)(v44 + 16) = MEMORY[0x1E4FBC860];
      id v45 = objc_msgSend(self, sel_sharedCacheDirectory);
      uint64_t v46 = v72;
      sub_1ACE74E98();

      strcpy((char *)v81, "ListenNowCache");
      HIBYTE(v81[1]) = -18;
      uint64_t v47 = v75;
      uint64_t v48 = v71;
      (*(void (**)(char *, void, uint64_t))(v75 + 104))(v71, *MEMORY[0x1E4F276A8], v8);
      sub_1ACA4F4AC();
      uint64_t v49 = (uint64_t)v73;
      sub_1ACE74F08();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v8);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v46, v74);
      uint64_t v50 = (void *)(v49 + *(int *)(v14 + 20));
      *uint64_t v50 = 0x4D73656C75646F4DLL;
      v50[1] = 0xEF61746164617465;
      uint64_t v51 = (char *)(v49 + *(int *)(v14 + 24));
      strcpy(v51, "ModuleContent-");
      v51[15] = -18;
      RecommendationModulesCache.writeToCache(with:)(v38);
      swift_bridgeObjectRelease();
      uint64_t v52 = RecommendationModulesCache.modulesMetadata.getter();
      sub_1ACA50FCC(v49, (uint64_t (*)(void))type metadata accessor for RecommendationModulesCache);
      *(void *)(v44 + 16) = v52;
      swift_bridgeObjectRelease();
      v79(v44, 0);
    }
    else
    {
      uint64_t v55 = v25;
      uint64_t v56 = v24;
      sub_1ACE754A8();
      char v57 = sub_1ACE75498();
      os_log_type_t v58 = sub_1ACE76C08();
      if (os_log_type_enabled(v57, v58))
      {
        char v59 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v59 = 0;
        _os_log_impl(&dword_1AC9D5000, v57, v58, "RecommendationModulesRequest returned no results", v59, 2u);
        MEMORY[0x1AD11B340](v59, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v55 + 8))(v23, v56);
      uint64_t v60 = MEMORY[0x1E4FBC860];
      unint64_t v61 = sub_1ACA364E4(MEMORY[0x1E4FBC860]);
      type metadata accessor for RecommendationModulesResponse();
      uint64_t v62 = swift_allocObject();
      *(void *)(v62 + 16) = v60;
      id v63 = objc_msgSend(self, sel_sharedCacheDirectory);
      uint64_t v64 = v72;
      sub_1ACE74E98();

      strcpy((char *)v81, "ListenNowCache");
      HIBYTE(v81[1]) = -18;
      uint64_t v65 = v75;
      uint64_t v66 = v71;
      (*(void (**)(char *, void, uint64_t))(v75 + 104))(v71, *MEMORY[0x1E4F276A8], v8);
      sub_1ACA4F4AC();
      uint64_t v67 = (uint64_t)v73;
      sub_1ACE74F08();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v8);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v64, v74);
      uint64_t v68 = (void *)(v67 + *(int *)(v14 + 20));
      *uint64_t v68 = 0x4D73656C75646F4DLL;
      v68[1] = 0xEF61746164617465;
      uint64_t v69 = (char *)(v67 + *(int *)(v14 + 24));
      strcpy(v69, "ModuleContent-");
      v69[15] = -18;
      RecommendationModulesCache.writeToCache(with:)((Swift::OpaquePointer)v61);
      swift_bridgeObjectRelease();
      uint64_t v70 = RecommendationModulesCache.modulesMetadata.getter();
      sub_1ACA50FCC(v67, (uint64_t (*)(void))type metadata accessor for RecommendationModulesCache);
      *(void *)(v62 + 16) = v70;
      swift_bridgeObjectRelease();
      v79(v62, 0);
    }
    swift_release();
  }
}

uint64_t RecommendationModulesResponse.__allocating_init(json:)(void *a1)
{
  v20._rawValue = a1;
  uint64_t v1 = sub_1ACE74DB8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for RecommendationModulesCache();
  uint64_t v10 = v9 - 8;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = MEMORY[0x1E4FBC860];
  id v14 = objc_msgSend(self, sel_sharedCacheDirectory);
  sub_1ACE74E98();

  strcpy(v21, "ListenNowCache");
  v21[15] = -18;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4F276A8], v1);
  sub_1ACA4F4AC();
  sub_1ACE74F08();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = &v12[*(int *)(v10 + 28)];
  *(void *)uint64_t v15 = 0x4D73656C75646F4DLL;
  *((void *)v15 + 1) = 0xEF61746164617465;
  uint64_t v16 = &v12[*(int *)(v10 + 32)];
  strcpy(v16, "ModuleContent-");
  v16[15] = -18;
  RecommendationModulesCache.writeToCache(with:)(v20);
  swift_bridgeObjectRelease();
  uint64_t v17 = RecommendationModulesCache.modulesMetadata.getter();
  sub_1ACA50FCC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for RecommendationModulesCache);
  *(void *)(v13 + 16) = v17;
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1ACA47C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE767F8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1ACE767E8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1ACA50E78(a1, &qword_1EB7705F0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1ACE766D8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1ACA47E44()
{
  v1[118] = v0;
  uint64_t v2 = sub_1ACE754C8();
  v1[119] = v2;
  v1[120] = *(void *)(v2 - 8);
  v1[121] = swift_task_alloc();
  v1[122] = swift_task_alloc();
  v1[123] = swift_task_alloc();
  v1[124] = swift_task_alloc();
  v1[125] = swift_task_alloc();
  v1[126] = swift_task_alloc();
  v1[127] = swift_task_alloc();
  v1[128] = swift_task_alloc();
  v1[129] = swift_task_alloc();
  sub_1ACE76218();
  v1[130] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACA47F94, 0, 0);
}

uint64_t sub_1ACA47F94()
{
  v0[131] = sub_1ACA3625C(MEMORY[0x1E4FBC860]);
  sub_1ACE74928();
  swift_allocObject();
  v0[132] = sub_1ACE74918();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[133] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1ACA48060;
  return sub_1ACA4A6A8((uint64_t)(v0 + 91));
}

uint64_t sub_1ACA48060()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1ACA4815C, 0, 0);
}

uint64_t sub_1ACA4815C()
{
  uint64_t v48 = v0;
  uint64_t v1 = *(void *)(v0 + 728);
  *(void *)(v0 + 1072) = v1;
  long long v43 = *(_OWORD *)(v0 + 736);
  *(_OWORD *)(v0 + 1080) = v43;
  *(void *)(v0 + 864) = v1;
  swift_bridgeObjectRetain();
  *(void *)(v0 + 1096) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7718A0);
  *(void *)(v0 + 1104) = sub_1ACA50950(&qword_1EB7718A8, &qword_1EB7718A0, (void (*)(void))sub_1ACA507FC);
  uint64_t v2 = sub_1ACE74908();
  unint64_t v4 = v3;
  sub_1ACE76208();
  uint64_t v5 = sub_1ACE761D8();
  if (v6)
  {
    uint64_t v7 = v5;
    unint64_t v8 = v6;
    sub_1ACA50850(v2, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ACA50850(v2, v4);
    swift_bridgeObjectRelease();
    uint64_t v7 = 0;
    unint64_t v8 = 0xE000000000000000;
  }
  *(void *)(v0 + 1112) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E08);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(void *)(inited + 32) = 0x6465776F6C6C6F66;
  *(void *)(inited + 40) = 0xE800000000000000;
  *(void *)(v0 + 1120) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E10);
  uint64_t v10 = swift_initStackObject();
  *(_OWORD *)(v10 + 16) = xmmword_1ACE843F0;
  *(void *)(v10 + 32) = 0x7374736163646F70;
  *(void *)(v10 + 40) = 0xE800000000000000;
  *(void *)(v10 + 48) = v7;
  *(void *)(v10 + 56) = v8;
  swift_bridgeObjectRetain();
  *(void *)(inited + 48) = sub_1ACA36394(v10);
  *(void *)(v0 + 1128) = sub_1ACA364B8(inited);
  sub_1ACE754A8();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1ACE75498();
  os_log_type_t v12 = sub_1ACE76BD8();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v14 = *(void *)(v0 + 960);
  if (v13)
  {
    uint64_t v41 = *(void *)(v0 + 1032);
    uint64_t v42 = *(void *)(v0 + 952);
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v47[0] = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 936) = sub_1ACA3189C(v7, v8, v47);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v11, v12, "Recommendations Metadata - followed shows %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v16, -1, -1);
    MEMORY[0x1AD11B340](v15, -1, -1);

    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v17(v41, v42);
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 1032);
    uint64_t v19 = *(void *)(v0 + 952);

    swift_bridgeObjectRelease_n();
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v17(v18, v19);
  }
  uint64_t v20 = v43;
  uint64_t v44 = v17;
  *(void *)(v0 + 1136) = v17;
  *(void *)(v0 + 856) = v20;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1ACE74908();
  unint64_t v23 = v22;
  *(void *)(v0 + 1144) = 0;
  sub_1ACE76208();
  uint64_t v24 = sub_1ACE761D8();
  if (v25)
  {
    uint64_t v26 = v24;
    unint64_t v27 = v25;
    sub_1ACA50850(v21, v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ACA50850(v21, v23);
    swift_bridgeObjectRelease();
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
  }
  uint64_t v28 = swift_initStackObject();
  *(_OWORD *)(v28 + 16) = xmmword_1ACE843F0;
  strcpy((char *)(v28 + 32), "not-followed");
  *(unsigned char *)(v28 + 45) = 0;
  *(_WORD *)(v28 + 46) = -5120;
  uint64_t v29 = swift_initStackObject();
  *(_OWORD *)(v29 + 16) = xmmword_1ACE843F0;
  *(void *)(v29 + 32) = 0x7374736163646F70;
  *(void *)(v29 + 40) = 0xE800000000000000;
  *(void *)(v29 + 48) = v26;
  *(void *)(v29 + 56) = v27;
  swift_bridgeObjectRetain();
  *(void *)(v28 + 48) = sub_1ACA36394(v29);
  *(void *)(v0 + 1152) = sub_1ACA364B8(v28);
  sub_1ACE754A8();
  swift_bridgeObjectRetain();
  id v30 = sub_1ACE75498();
  os_log_type_t v31 = sub_1ACE76BD8();
  BOOL v32 = os_log_type_enabled(v30, v31);
  uint64_t v33 = *(void *)(v0 + 1024);
  uint64_t v34 = *(void *)(v0 + 952);
  if (v32)
  {
    uint64_t v46 = *(void *)(v0 + 952);
    uint64_t v45 = *(void *)(v0 + 1024);
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    v47[0] = v36;
    *(_DWORD *)uint64_t v35 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 928) = sub_1ACA3189C(v26, v27, v47);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v30, v31, "Recommendations Metadata - nonfollowed shows %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v36, -1, -1);
    MEMORY[0x1AD11B340](v35, -1, -1);

    uint64_t v37 = v45;
    uint64_t v38 = v46;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v37 = v33;
    uint64_t v38 = v34;
  }
  v44(v37, v38);
  uint64_t v39 = (void *)swift_task_alloc();
  *(void *)(v0 + 1160) = v39;
  *uint64_t v39 = v0;
  v39[1] = sub_1ACA48834;
  return sub_1ACA4B018(v0 + 752);
}

uint64_t sub_1ACA48834()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1ACA48930, 0, 0);
}

uint64_t sub_1ACA48930()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void **)(v0 + 1144);
  long long v2 = *(_OWORD *)(v0 + 752);
  *(_OWORD *)(v0 + 1168) = v2;
  *(void *)(v0 + 1184) = *(void *)(v0 + 768);
  *(void *)(v0 + 824) = v2;
  swift_bridgeObjectRetain();
  *(void *)(v0 + 1192) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7718B0);
  *(void *)(v0 + 1200) = sub_1ACA50950(&qword_1EB7718B8, &qword_1EB7718B0, (void (*)(void))sub_1ACA508A8);
  uint64_t v3 = sub_1ACE74908();
  if (v1)
  {

    uint64_t v5 = 0;
    unint64_t v6 = 0xC000000000000000;
  }
  else
  {
    uint64_t v5 = v3;
    unint64_t v6 = v4;
  }
  *(void *)(v0 + 1208) = 0;
  sub_1ACE76208();
  uint64_t v7 = sub_1ACE761D8();
  if (v8)
  {
    uint64_t v9 = v7;
    unint64_t v10 = v8;
    sub_1ACA50850(v5, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ACA50850(v5, v6);
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(void *)(inited + 32) = 0x6269726373627573;
  *(void *)(inited + 40) = 0xEA00000000006465;
  uint64_t v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = xmmword_1ACE843F0;
  *(void *)(v12 + 32) = 0xD000000000000010;
  *(void *)(v12 + 40) = 0x80000001ACEC3CB0;
  *(void *)(v12 + 48) = v9;
  *(void *)(v12 + 56) = v10;
  swift_bridgeObjectRetain();
  *(void *)(inited + 48) = sub_1ACA36394(v12);
  *(void *)(v0 + 1216) = sub_1ACA364B8(inited);
  sub_1ACE754A8();
  swift_bridgeObjectRetain();
  BOOL v13 = sub_1ACE75498();
  os_log_type_t v14 = sub_1ACE76BD8();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v0 + 1136);
  uint64_t v17 = *(void *)(v0 + 1016);
  uint64_t v18 = *(void *)(v0 + 952);
  if (v15)
  {
    unint64_t v23 = *(void (**)(uint64_t, uint64_t))(v0 + 1136);
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v24 = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 920) = sub_1ACA3189C(v9, v10, &v24);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v13, v14, "Recommendations Metadata - subscribed channels %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v20, -1, -1);
    MEMORY[0x1AD11B340](v19, -1, -1);

    v23(v17, v18);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v16(v17, v18);
  }
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 1224) = v21;
  void *v21 = v0;
  v21[1] = sub_1ACA48D1C;
  return sub_1ACA4BC58(v0 + 816);
}

uint64_t sub_1ACA48D1C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1ACA48E18, 0, 0);
}

uint64_t sub_1ACA48E18()
{
  uint64_t v24 = v0;
  uint64_t v1 = (void *)v0[151];
  v0[99] = v0[102];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7718C0);
  sub_1ACA50950(&qword_1EB7718C8, &qword_1EB7718C0, (void (*)(void))sub_1ACA508FC);
  uint64_t v2 = sub_1ACE74908();
  if (v1)
  {

    uint64_t v4 = 0;
    unint64_t v5 = 0xC000000000000000;
  }
  else
  {
    uint64_t v4 = v2;
    unint64_t v5 = v3;
  }
  v0[154] = 0;
  sub_1ACE76208();
  uint64_t v6 = sub_1ACE761D8();
  if (v7)
  {
    uint64_t v8 = v6;
    unint64_t v9 = v7;
    sub_1ACA50850(v4, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ACA50850(v4, v5);
    swift_bridgeObjectRelease();
    uint64_t v8 = 0;
    unint64_t v9 = 0xE000000000000000;
  }
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(void *)(inited + 32) = 0x796C746E65636572;
  *(void *)(inited + 40) = 0xEF646579616C702DLL;
  uint64_t v11 = swift_initStackObject();
  *(_OWORD *)(v11 + 16) = xmmword_1ACE843F0;
  *(void *)(v11 + 32) = 0xD000000000000010;
  *(void *)(v11 + 40) = 0x80000001ACEC3C70;
  *(void *)(v11 + 48) = v8;
  *(void *)(v11 + 56) = v9;
  swift_bridgeObjectRetain();
  *(void *)(inited + 48) = sub_1ACA36394(v11);
  v0[155] = sub_1ACA364B8(inited);
  sub_1ACE754A8();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1ACE75498();
  os_log_type_t v13 = sub_1ACE76BD8();
  BOOL v14 = os_log_type_enabled(v12, v13);
  BOOL v15 = (void (*)(uint64_t, uint64_t))v0[142];
  uint64_t v16 = v0[126];
  uint64_t v17 = v0[119];
  if (v14)
  {
    unint64_t v22 = (void (*)(uint64_t, uint64_t))v0[142];
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v23 = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    swift_bridgeObjectRetain();
    v0[114] = sub_1ACA3189C(v8, v9, &v23);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v12, v13, "Recommendations Metadata - recently played %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v19, -1, -1);
    MEMORY[0x1AD11B340](v18, -1, -1);

    v22(v16, v17);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v15(v16, v17);
  }
  uint64_t v20 = (void *)swift_task_alloc();
  v0[156] = v20;
  void *v20 = v0;
  v20[1] = sub_1ACA491EC;
  return sub_1ACA4C1E8((uint64_t)(v0 + 97));
}

uint64_t sub_1ACA491EC()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1ACA492E8, 0, 0);
}

uint64_t sub_1ACA492E8()
{
  os_signpost_type_t v101 = v0;
  uint64_t v1 = (void *)v0[154];
  uint64_t v2 = v0[98];
  v0[100] = v0[97];
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771890);
  sub_1ACA50950(&qword_1EB771898, &qword_1EB771890, (void (*)(void))sub_1ACA509C8);
  uint64_t v3 = sub_1ACE74908();
  if (v1)
  {

    uint64_t v5 = 0;
    unint64_t v6 = 0xC000000000000000;
  }
  else
  {
    uint64_t v5 = v3;
    unint64_t v6 = v4;
  }
  sub_1ACE76208();
  uint64_t v97 = sub_1ACE761D8();
  if (v7)
  {
    unint64_t v8 = v7;
    sub_1ACA50850(v5, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ACA50850(v5, v6);
    swift_bridgeObjectRelease();
    uint64_t v97 = 0;
    unint64_t v8 = 0xE000000000000000;
  }
  v0[101] = v0[147];
  swift_bridgeObjectRetain();
  uint64_t v94 = v2;
  uint64_t v9 = sub_1ACE74908();
  unint64_t v11 = v10;
  sub_1ACE76208();
  uint64_t v12 = sub_1ACE761D8();
  if (v13)
  {
    unint64_t v14 = v13;
    uint64_t v90 = v12;
    sub_1ACA50850(v9, v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ACA50850(v9, v11);
    swift_bridgeObjectRelease();
    uint64_t v90 = 0;
    unint64_t v14 = 0xE000000000000000;
  }
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(void *)(inited + 32) = 0x73656B696CLL;
  *(void *)(inited + 40) = 0xE500000000000000;
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_1ACE84820;
  *(void *)(v16 + 32) = 0x69726F6765746163;
  *(void *)(v16 + 40) = 0xEA00000000007365;
  *(void *)(v16 + 48) = v97;
  *(void *)(v16 + 56) = v8;
  *(void *)(v16 + 64) = 0xD000000000000010;
  *(void *)(v16 + 72) = 0x80000001ACEC3CB0;
  *(void *)(v16 + 80) = v90;
  *(void *)(v16 + 88) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(inited + 48) = sub_1ACA36394(v16);
  v0[157] = sub_1ACA364B8(inited);
  sub_1ACE754A8();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1ACE75498();
  os_log_type_t v18 = sub_1ACE76BD8();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v20 = (void (*)(uint64_t, uint64_t))v0[142];
  if (v19)
  {
    uint64_t v84 = v0[119];
    uint64_t v81 = v0[125];
    v82 = (void (*)(uint64_t, uint64_t))v0[142];
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v100[0] = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    swift_bridgeObjectRetain();
    v0[113] = sub_1ACA3189C(v90, v14, v100);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v17, v18, "Recommendations Metadata - liked channels %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v22, -1, -1);
    MEMORY[0x1AD11B340](v21, -1, -1);

    v82(v81, v84);
  }
  else
  {
    uint64_t v23 = v0[119];
    uint64_t v24 = v0[125];
    swift_bridgeObjectRelease_n();

    v20(v24, v23);
  }
  sub_1ACE754A8();
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1ACE75498();
  os_log_type_t v26 = sub_1ACE76BD8();
  BOOL v27 = os_log_type_enabled(v25, v26);
  uint64_t v28 = (void (*)(uint64_t, uint64_t))v0[142];
  uint64_t v29 = v0[124];
  uint64_t v30 = v0[119];
  if (v27)
  {
    uint64_t v91 = (void (*)(uint64_t, uint64_t))v0[142];
    os_log_type_t v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v83 = v29;
    uint64_t v32 = swift_slowAlloc();
    v100[0] = v32;
    *(_DWORD *)os_log_type_t v31 = 136315138;
    swift_bridgeObjectRetain();
    v0[112] = sub_1ACA3189C(v97, v8, v100);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v25, v26, "Recommendations Metadata - liked categories %s", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v32, -1, -1);
    MEMORY[0x1AD11B340](v31, -1, -1);

    v91(v83, v30);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v28(v29, v30);
  }
  v0[104] = v0[136];
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1ACE74908();
  unint64_t v35 = v34;
  sub_1ACE76208();
  uint64_t v36 = sub_1ACE761D8();
  unint64_t v89 = v37;
  if (v37)
  {
    uint64_t v38 = v36;
    sub_1ACA50850(v33, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ACA50850(v33, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v38 = 0;
    unint64_t v89 = 0xE000000000000000;
  }
  uint64_t v39 = v0[148];
  swift_bridgeObjectRelease();
  v0[105] = v39;
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_1ACE74908();
  unint64_t v42 = v41;
  uint64_t v43 = v38;
  sub_1ACE76208();
  uint64_t v92 = sub_1ACE761D8();
  unint64_t v98 = v44;
  if (v44)
  {
    sub_1ACA50850(v40, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ACA50850(v40, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v92 = 0;
    unint64_t v98 = 0xE000000000000000;
  }
  swift_bridgeObjectRelease();
  v0[106] = v94;
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_1ACE74908();
  unint64_t v47 = v46;
  v0[158] = 0;
  sub_1ACE76208();
  uint64_t v48 = sub_1ACE761D8();
  if (v49)
  {
    unint64_t v50 = v49;
    uint64_t v51 = v48;
    sub_1ACA50850(v45, v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ACA50850(v45, v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = 0;
    unint64_t v50 = 0xE000000000000000;
  }
  swift_bridgeObjectRelease();
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_1ACE843F0;
  *(void *)(v52 + 32) = 0x73656B696C736964;
  *(void *)(v52 + 40) = 0xE800000000000000;
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1ACE84470;
  *(void *)(v53 + 32) = 0x69726F6765746163;
  *(void *)(v53 + 40) = 0xEA00000000007365;
  *(void *)(v53 + 48) = v51;
  uint64_t v88 = v51;
  *(void *)(v53 + 56) = v50;
  *(void *)(v53 + 64) = 0xD000000000000010;
  *(void *)(v53 + 72) = 0x80000001ACEC3CB0;
  *(void *)(v53 + 80) = v92;
  *(void *)(v53 + 88) = v98;
  *(void *)(v53 + 96) = 0x7374736163646F70;
  *(void *)(v53 + 104) = 0xE800000000000000;
  *(void *)(v53 + 112) = v38;
  *(void *)(v53 + 120) = v89;
  unint64_t v95 = v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(v52 + 48) = sub_1ACA36394(v53);
  v0[159] = sub_1ACA364B8(v52);
  sub_1ACE754A8();
  swift_bridgeObjectRetain();
  id v54 = sub_1ACE75498();
  os_log_type_t v55 = sub_1ACE76BD8();
  BOOL v56 = os_log_type_enabled(v54, v55);
  char v57 = (void (*)(uint64_t, uint64_t))v0[142];
  uint64_t v58 = v0[123];
  uint64_t v59 = v0[119];
  if (v56)
  {
    uint64_t v85 = v0[123];
    uint64_t v60 = (uint8_t *)swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    v100[0] = v61;
    *(_DWORD *)uint64_t v60 = 136315138;
    swift_bridgeObjectRetain();
    v0[111] = sub_1ACA3189C(v43, v89, v100);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v54, v55, "Recommendations Metadata - disliked shows %s", v60, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v61, -1, -1);
    MEMORY[0x1AD11B340](v60, -1, -1);

    v57(v85, v59);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v57(v58, v59);
  }
  sub_1ACE754A8();
  swift_bridgeObjectRetain();
  uint64_t v62 = sub_1ACE75498();
  os_log_type_t v63 = sub_1ACE76BD8();
  BOOL v64 = os_log_type_enabled(v62, v63);
  uint64_t v65 = (void (*)(uint64_t, uint64_t))v0[142];
  uint64_t v66 = v0[122];
  uint64_t v67 = v0[119];
  if (v64)
  {
    uint64_t v87 = v0[119];
    uint64_t v68 = (uint8_t *)swift_slowAlloc();
    uint64_t v86 = v66;
    uint64_t v69 = swift_slowAlloc();
    v100[0] = v69;
    *(_DWORD *)uint64_t v68 = 136315138;
    swift_bridgeObjectRetain();
    v0[110] = sub_1ACA3189C(v92, v98, v100);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v62, v63, "Recommendations Metadata - disliked channels %s", v68, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v69, -1, -1);
    MEMORY[0x1AD11B340](v68, -1, -1);

    v65(v86, v87);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v65(v66, v67);
  }
  unint64_t v70 = v95;
  sub_1ACE754A8();
  swift_bridgeObjectRetain();
  uint64_t v71 = sub_1ACE75498();
  os_log_type_t v72 = sub_1ACE76BD8();
  BOOL v73 = os_log_type_enabled(v71, v72);
  uint64_t v74 = (void (*)(uint64_t, uint64_t))v0[142];
  uint64_t v75 = v0[121];
  uint64_t v76 = v0[119];
  if (v73)
  {
    uint64_t v99 = v0[121];
    uint64_t v96 = v0[119];
    uint64_t v77 = (uint8_t *)swift_slowAlloc();
    uint64_t v93 = v74;
    uint64_t v78 = swift_slowAlloc();
    v100[0] = v78;
    *(_DWORD *)uint64_t v77 = 136315138;
    swift_bridgeObjectRetain();
    v0[109] = sub_1ACA3189C(v88, v70, v100);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v71, v72, "Recommendations Metadata - disliked categories %s", v77, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v78, -1, -1);
    MEMORY[0x1AD11B340](v77, -1, -1);

    v93(v99, v96);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v74(v75, v76);
  }
  unint64_t v79 = (void *)swift_task_alloc();
  v0[160] = v79;
  void *v79 = v0;
  v79[1] = sub_1ACA4A1A8;
  v79[23] = v0 + 86;
  return MEMORY[0x1F4188298](sub_1ACA4C720, 0, 0);
}

uint64_t sub_1ACA4A1A8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1ACA4A2A4, 0, 0);
}

uint64_t sub_1ACA4A2A4()
{
  uint64_t v1 = *(void **)(v0 + 1264);
  uint64_t v2 = *(void *)(v0 + 712);
  char v3 = *(unsigned char *)(v0 + 720);
  char v4 = *(unsigned char *)(v0 + 721);
  char v5 = *(unsigned char *)(v0 + 722);
  long long v6 = *(_OWORD *)(v0 + 696);
  *(void *)(v0 + 648) = *(void *)(v0 + 688);
  *(_OWORD *)(v0 + 656) = v6;
  *(void *)(v0 + 672) = v2;
  *(unsigned char *)(v0 + 680) = v3;
  *(unsigned char *)(v0 + 681) = v4;
  *(unsigned char *)(v0 + 682) = v5;
  sub_1ACA50A1C();
  uint64_t v7 = sub_1ACE74908();
  if (v1)
  {

    uint64_t v9 = 0;
    unint64_t v10 = 0xC000000000000000;
  }
  else
  {
    uint64_t v9 = v7;
    unint64_t v10 = v8;
  }
  sub_1ACE76208();
  uint64_t v11 = sub_1ACE761D8();
  if (v12)
  {
    uint64_t v13 = v11;
    unint64_t v14 = v12;
    sub_1ACA50850(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ACA50850(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = 0;
    unint64_t v14 = 0xE000000000000000;
  }
  uint64_t v15 = *(void *)(v0 + 1272);
  uint64_t v16 = *(void *)(v0 + 1256);
  uint64_t v17 = *(void *)(v0 + 1240);
  uint64_t v18 = *(void *)(v0 + 1216);
  uint64_t v19 = *(void *)(v0 + 1152);
  uint64_t v20 = *(void *)(v0 + 1128);
  uint64_t v21 = *(void *)(v0 + 1048);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1ACE843F0;
  *(void *)(v22 + 32) = 0x636974796C616E61;
  *(void *)(v22 + 40) = 0xE900000000000073;
  *(void *)(v22 + 48) = v13;
  *(void *)(v22 + 56) = v14;
  unint64_t v23 = sub_1ACA36394(v22);
  unint64_t v24 = sub_1ACACA850(v20);
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_1ACA4A61C(v24, v21);
  unint64_t v26 = sub_1ACACA850(v19);
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_1ACA4A61C(v26, v25);
  unint64_t v28 = sub_1ACACA850(v18);
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_1ACA4A61C(v28, v27);
  unint64_t v30 = sub_1ACACA850(v17);
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_1ACA4A61C(v30, v29);
  unint64_t v32 = sub_1ACACA850(v16);
  swift_bridgeObjectRelease();
  uint64_t v33 = sub_1ACA4A61C(v32, v31);
  unint64_t v34 = sub_1ACACA850(v15);
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_1ACA4A61C(v34, v33);
  unint64_t v36 = sub_1ACACABBC(v23);
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_1ACA4A61C(v36, v35);
  uint64_t v38 = sub_1ACACAF28(v37);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v39(v38);
}

uint64_t sub_1ACA4A61C(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_1ACA4F8D0(a1, (uint64_t)sub_1ACA4F87C, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1ACA4A6A8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_1ACE76EC8();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACA4A768, 0, 0);
}

uint64_t sub_1ACA4A768()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)v0[3];
  uint64_t v24 = v0[4];
  uint64_t v25 = v0[6];
  sub_1ACE761B8();
  id v3 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  char v4 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);
  v0[7] = v5;

  id v6 = objc_msgSend(self, sel_predicateForNotHiddenNotImplicitlyFollowedPodcasts);
  objc_msgSend(v5, sel_setPredicate_, v6);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1ACE84830;
  sub_1ACE761B8();
  id v8 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v9 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v8, sel_initWithKey_ascending_, v9, 0);

  *(void *)(v7 + 32) = v10;
  sub_1ACE76598();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  uint64_t v11 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setSortDescriptors_, v11);

  objc_msgSend(v5, sel_setFetchLimit_, 100);
  id v12 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v13 = (void *)sub_1ACE76178();
  id v14 = objc_msgSend(v12, sel_initWithEntityName_, v13);
  v0[8] = v14;

  id v15 = sub_1ACD1F648();
  objc_msgSend(v14, sel_setPredicate_, v15);

  objc_msgSend(v14, sel_setFetchLimit_, 50);
  uint64_t v16 = (void *)swift_allocObject();
  v0[9] = v16;
  v16[2] = v2;
  v16[3] = v5;
  v16[4] = v14;
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 104))(v25, *MEMORY[0x1E4F1BD78], v24);
  id v17 = v2;
  id v18 = v5;
  id v19 = v14;
  uint64_t v20 = (void *)swift_task_alloc();
  v0[10] = v20;
  void *v20 = v0;
  v20[1] = sub_1ACA4AAC0;
  uint64_t v21 = v0[6];
  uint64_t v22 = v0[2];
  return MEMORY[0x1F40D7080](v22, v21, sub_1ACA507DC, v16, &type metadata for RecommendationsMetadata.Shows);
}

uint64_t sub_1ACA4AAC0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 32);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x1F4188298](sub_1ACA4AC34, 0, 0);
}

uint64_t sub_1ACA4AC34()
{
  uint64_t v1 = *(void **)(v0 + 56);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1ACA4ACA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v33 = sub_1ACE750A8();
  uint64_t v3 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  unint64_t v32 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F80);
  uint64_t v5 = (void *)sub_1ACE76EE8();
  if (v1)
  {

    v28._rawValue = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    v28._rawValue = v5;
  }
  type metadata accessor for MTInterest();
  unint64_t v6 = sub_1ACE76EE8();
  v27[1] = 0;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1ACE77508();
    uint64_t v7 = result;
    uint64_t v29 = a1;
    if (result) {
      goto LABEL_6;
    }
LABEL_24:
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
LABEL_25:
    swift_bridgeObjectRelease_n();
    return (unint64_t)RecommendationsMetadata.Shows.init(from:dislikedPodcasts:)(v28, (Swift::OpaquePointer)v11);
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v29 = a1;
  if (!v7) {
    goto LABEL_24;
  }
LABEL_6:
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    unint64_t v10 = v6 & 0xC000000000000001;
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v30 = (void (**)(char *, uint64_t))(v3 + 8);
    unint64_t v31 = v6 & 0xC000000000000001;
    id v12 = &selRef_insertNewPodcastInManagedObjectContext_subscribed_feedUrl_showType_showTypeInFeed_title_author_provider_imageUrl_description_displayType_showSpecificUpsellCopy_;
    while (1)
    {
      if (v10) {
        id v13 = (id)MEMORY[0x1AD119490](v9, v6);
      }
      else {
        id v13 = *(id *)(v6 + 8 * v9 + 32);
      }
      id v14 = v13;
      id v15 = [v13 v12[317]];
      if (v15)
      {
        uint64_t v16 = v15;
        unint64_t v17 = (unint64_t)objc_msgSend(v15, sel_storeCollectionId);
        if ((v17 & 0x8000000000000000) == 0)
        {
          unint64_t v18 = v17;
          if (v17 != 1000000000000)
          {
            if (v17)
            {
              id v19 = v11;
              id v20 = objc_msgSend(v14, sel_lastUpdatedDate);
              uint64_t v21 = v32;
              sub_1ACE75078();

              uint64_t v11 = v19;
              sub_1ACE75058();
              double v23 = v22;
              (*v30)(v21, v33);

              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v11 = sub_1ACA41664(0, v19[2] + 1, 1, v19);
              }
              unint64_t v25 = v11[2];
              unint64_t v24 = v11[3];
              id v12 = &selRef_insertNewPodcastInManagedObjectContext_subscribed_feedUrl_showType_showTypeInFeed_title_author_provider_imageUrl_description_displayType_showSpecificUpsellCopy_;
              if (v25 >= v24 >> 1) {
                uint64_t v11 = sub_1ACA41664((void *)(v24 > 1), v25 + 1, 1, v11);
              }
              v11[2] = v25 + 1;
              uint64_t v26 = (double *)&v11[2 * v25];
              *((void *)v26 + 4) = v18;
              v26[5] = floor(v23 * 1000.0);
              unint64_t v10 = v31;
              goto LABEL_10;
            }
          }
        }
      }
LABEL_10:
      if (v7 == ++v9) {
        goto LABEL_25;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACA4B018(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_1ACE76EC8();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACA4B0D8, 0, 0);
}

uint64_t sub_1ACA4B0D8()
{
  uint64_t v1 = v0[5];
  uint64_t v29 = v0[4];
  uint64_t v30 = v0[6];
  Swift::OpaquePointer v28 = (void *)v0[3];
  sub_1ACE761B8();
  id v2 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v3 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);
  v0[7] = v4;

  id v5 = objc_msgSend(self, sel_predicateForSubscribedChannel);
  objc_msgSend(v4, sel_setPredicate_, v5);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1ACE84830;
  sub_1ACE761B8();
  id v7 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  id v8 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initWithKey_ascending_, v8, 1);

  *(void *)(v6 + 32) = v9;
  sub_1ACE76598();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  unint64_t v10 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setSortDescriptors_, v10);

  objc_msgSend(v4, sel_setFetchLimit_, 50);
  id v11 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v12 = (void *)sub_1ACE76178();
  id v13 = objc_msgSend(v11, (SEL)&selRef_initWithShouldContinue_createdPodcastUUID_, v12);
  v0[8] = v13;

  id v14 = sub_1ACD1F66C();
  objc_msgSend(v13, sel_setPredicate_, v14);

  objc_msgSend(v13, sel_setFetchLimit_, 50);
  id v15 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v16 = (void *)sub_1ACE76178();
  id v17 = objc_msgSend(v15, (SEL)&selRef_initWithShouldContinue_createdPodcastUUID_, v16);
  v0[9] = v17;

  id v18 = sub_1ACD1F7E0();
  objc_msgSend(v17, sel_setPredicate_, v18);

  objc_msgSend(v17, sel_setFetchLimit_, 50);
  id v19 = (void *)swift_allocObject();
  v0[10] = v19;
  void v19[2] = v28;
  v19[3] = v4;
  v19[4] = v13;
  v19[5] = v17;
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 104))(v30, *MEMORY[0x1E4F1BD78], v29);
  id v20 = v28;
  id v21 = v4;
  id v22 = v13;
  id v23 = v17;
  unint64_t v24 = (void *)swift_task_alloc();
  v0[11] = v24;
  void *v24 = v0;
  v24[1] = sub_1ACA4B4C0;
  uint64_t v25 = v0[6];
  uint64_t v26 = v0[2];
  return MEMORY[0x1F40D7080](v26, v25, sub_1ACA50770, v19, &type metadata for RecommendationsMetadata.Channels);
}

uint64_t sub_1ACA4B4C0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 32);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x1F4188298](sub_1ACA4B634, 0, 0);
}

uint64_t sub_1ACA4B634()
{
  uint64_t v1 = *(void **)(v0 + 64);
  uint64_t v2 = *(void **)(v0 + 56);

  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1ACA4B6B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v64 = sub_1ACE750A8();
  uint64_t v6 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  os_log_type_t v63 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR___MTRecommendationModulesRequest_context);
  sub_1ACA50D4C(0, (unint64_t *)&unk_1EB768F70);
  id v9 = (void *)sub_1ACE76EE8();
  if (v3)
  {

    v55._rawValue = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    v55._rawValue = v9;
  }
  uint64_t v58 = type metadata accessor for MTInterest();
  uint64_t v59 = v8;
  unint64_t v10 = sub_1ACE76EE8();
  char v57 = 0;
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1ACE77508();
    uint64_t v11 = result;
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  id v13 = &selRef_addBagKey_valueType_;
  uint64_t v56 = a3;
  uint64_t v53 = v6;
  if (v11)
  {
    if (v11 >= 1)
    {
      uint64_t v14 = 0;
      unint64_t v15 = v10 & 0xC000000000000001;
      uint64_t v61 = (void (**)(char *, uint64_t))(v6 + 8);
      uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v62 = v10 & 0xC000000000000001;
      while (1)
      {
        if (v15) {
          id v17 = (id)MEMORY[0x1AD119490](v14, v10);
        }
        else {
          id v17 = *(id *)(v10 + 8 * v14 + 32);
        }
        id v18 = v17;
        id v19 = objc_msgSend(v17, v13[117], v53);
        if (v19)
        {
          id v20 = v19;
          unint64_t v21 = (unint64_t)objc_msgSend(v19, sel_storeId);
          if ((v21 & 0x8000000000000000) == 0)
          {
            unint64_t v22 = v21;
            if (v21 != 1000000000000)
            {
              if (v21)
              {
                id v23 = v16;
                id v24 = objc_msgSend(v18, sel_lastUpdatedDate);
                uint64_t v25 = v63;
                sub_1ACE75078();

                uint64_t v16 = v23;
                sub_1ACE75058();
                double v27 = v26;
                (*v61)(v25, v64);

                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v16 = sub_1ACA41670(0, v23[2] + 1, 1, v23);
                }
                unint64_t v29 = v16[2];
                unint64_t v28 = v16[3];
                unint64_t v15 = v62;
                if (v29 >= v28 >> 1) {
                  uint64_t v16 = sub_1ACA41670((void *)(v28 > 1), v29 + 1, 1, v16);
                }
                v16[2] = v29 + 1;
                uint64_t v30 = (double *)&v16[2 * v29];
                *((void *)v30 + 4) = v22;
                v30[5] = floor(v27 * 1000.0);
                id v13 = &selRef_addBagKey_valueType_;
                goto LABEL_11;
              }
            }
          }
        }
LABEL_11:
        if (v11 == ++v14) {
          goto LABEL_25;
        }
      }
    }
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
LABEL_25:
  swift_bridgeObjectRelease_n();
  uint64_t v31 = v57;
  uint64_t v32 = sub_1ACE76EE8();
  if (v31)
  {

    unint64_t v33 = MEMORY[0x1E4FBC860];
  }
  else
  {
    unint64_t v33 = v32;
  }
  uint64_t v60 = 0;
  unint64_t v34 = &selRef_addBagKey_valueType_;
  v54._rawValue = v16;
  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1ACE77508();
    uint64_t v35 = result;
    if (result) {
      goto LABEL_30;
    }
  }
  else
  {
    uint64_t v35 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v35)
    {
LABEL_30:
      if (v35 < 1)
      {
LABEL_52:
        __break(1u);
        return result;
      }
      uint64_t v36 = 0;
      unint64_t v37 = v33 & 0xC000000000000001;
      uint64_t v61 = (void (**)(char *, uint64_t))(v53 + 8);
      uint64_t v38 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v62 = v33 & 0xC000000000000001;
      while (1)
      {
        if (v37) {
          id v39 = (id)MEMORY[0x1AD119490](v36, v33);
        }
        else {
          id v39 = *(id *)(v33 + 8 * v36 + 32);
        }
        uint64_t v40 = v39;
        id v41 = objc_msgSend(v39, v34[117], v53);
        if (v41)
        {
          unint64_t v42 = v41;
          unint64_t v43 = (unint64_t)objc_msgSend(v41, sel_storeId);
          if ((v43 & 0x8000000000000000) == 0)
          {
            unint64_t v44 = v43;
            if (v43 != 1000000000000)
            {
              if (v43)
              {
                uint64_t v45 = v38;
                id v46 = objc_msgSend(v40, sel_lastUpdatedDate);
                unint64_t v47 = v63;
                sub_1ACE75078();

                uint64_t v38 = v45;
                sub_1ACE75058();
                double v49 = v48;
                (*v61)(v47, v64);

                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v38 = sub_1ACA41670(0, v45[2] + 1, 1, v45);
                }
                unint64_t v51 = v38[2];
                unint64_t v50 = v38[3];
                unint64_t v37 = v62;
                if (v51 >= v50 >> 1) {
                  uint64_t v38 = sub_1ACA41670((void *)(v50 > 1), v51 + 1, 1, v38);
                }
                v38[2] = v51 + 1;
                uint64_t v52 = (double *)&v38[2 * v51];
                *((void *)v52 + 4) = v44;
                v52[5] = floor(v49 * 1000.0);
                unint64_t v34 = &selRef_addBagKey_valueType_;
                goto LABEL_34;
              }
            }
          }
        }
LABEL_34:
        if (v35 == ++v36) {
          goto LABEL_50;
        }
      }
    }
  }
  uint64_t v38 = (void *)MEMORY[0x1E4FBC860];
LABEL_50:
  swift_bridgeObjectRelease_n();
  return (unint64_t)RecommendationsMetadata.Channels.init(from:favoritedChannels:dislikedChannels:)(v55, v54, (Swift::OpaquePointer)v38);
}

uint64_t sub_1ACA4BC58(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_1ACE76EC8();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACA4BD18, 0, 0);
}

uint64_t sub_1ACA4BD18()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  id v4 = (void *)v0[3];
  uint64_t v3 = v0[4];
  sub_1ACE761B8();
  id v5 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v6 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);
  v0[7] = v7;

  uint64_t v8 = self;
  id v9 = objc_msgSend(v8, sel_predicateForPreviouslyPlayedHidingFutureTimestamps);
  objc_msgSend(v7, sel_setPredicate_, v9);

  id v10 = objc_msgSend(v8, sel_sortDescriptorsForRecentlyPlayed);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  sub_1ACE76578();

  uint64_t v11 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setSortDescriptors_, v11);

  objc_msgSend(v7, sel_setFetchLimit_, 50);
  uint64_t v12 = swift_allocObject();
  v0[8] = v12;
  *(void *)(v12 + 16) = v4;
  *(void *)(v12 + 24) = v7;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4F1BD78], v3);
  id v13 = v4;
  id v14 = v7;
  unint64_t v15 = (void *)swift_task_alloc();
  v0[9] = v15;
  *unint64_t v15 = v0;
  v15[1] = sub_1ACA4BF80;
  uint64_t v16 = v0[6];
  uint64_t v17 = v0[2];
  return MEMORY[0x1F40D7080](v17, v16, sub_1ACA50704, v12, &type metadata for RecommendationsMetadata.Episodes);
}

uint64_t sub_1ACA4BF80()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 32);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x1F4188298](sub_1ACA4C0F4, 0, 0);
}

uint64_t sub_1ACA4C0F4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

PodcastsFoundation::RecommendationsMetadata::Episodes sub_1ACA4C15C()
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  uint64_t v1 = sub_1ACE76EE8();
  if (v0)
  {

    uint64_t v1 = MEMORY[0x1E4FBC860];
  }
  return RecommendationsMetadata.Episodes.init(from:)((Swift::OpaquePointer)v1);
}

uint64_t sub_1ACA4C1E8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_1ACE76EC8();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACA4C2A8, 0, 0);
}

uint64_t sub_1ACA4C2A8()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = (void *)v0[3];
  uint64_t v20 = v0[4];
  id v4 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v5 = (void *)sub_1ACE76178();
  id v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);
  v0[7] = v6;

  id v7 = sub_1ACD1F804();
  objc_msgSend(v6, sel_setPredicate_, v7);

  id v8 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v9 = (void *)sub_1ACE76178();
  id v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);
  v0[8] = v10;

  id v11 = sub_1ACD1F828();
  objc_msgSend(v10, sel_setPredicate_, v11);

  uint64_t v12 = (void *)swift_allocObject();
  v0[9] = v12;
  v12[2] = v3;
  uint64_t v12[3] = v6;
  v12[4] = v10;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4F1BD78], v20);
  id v13 = v3;
  id v14 = v6;
  id v15 = v10;
  uint64_t v16 = (void *)swift_task_alloc();
  v0[10] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_1ACA4C4C8;
  uint64_t v17 = v0[6];
  uint64_t v18 = v0[2];
  return MEMORY[0x1F40D7080](v18, v17, sub_1ACA506A4, v12, &type metadata for RecommendationsMetadata.Categories);
}

uint64_t sub_1ACA4C4C8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 32);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x1F4188298](sub_1ACA51030, 0, 0);
}

void *sub_1ACA4C63C()
{
  type metadata accessor for MTInterest();
  uint64_t v1 = sub_1ACE76EE8();
  if (v0)
  {

    v2._rawValue = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    v2._rawValue = (void *)v1;
  }
  uint64_t v3 = sub_1ACE76EE8();
  return RecommendationsMetadata.Categories.init(from:dislikedInterests:)(v2, (Swift::OpaquePointer)v3).liked._rawValue;
}

uint64_t sub_1ACA4C700(uint64_t a1)
{
  *(void *)(v1 + 184) = a1;
  return MEMORY[0x1F4188298](sub_1ACA4C720, 0, 0);
}

uint64_t sub_1ACA4C720()
{
  uint64_t v1 = (objc_class *)type metadata accessor for AnalyticsUserIdentifier();
  v0[12].receiver = v1;
  Swift::OpaquePointer v2 = objc_allocWithZone(v1);
  uint64_t v3 = &v2[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_clientId];
  *uint64_t v3 = 0;
  v3[1] = 0;
  id v4 = &v2[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userId];
  *id v4 = 0;
  v4[1] = 0;
  v2[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userAllowsPersonalization] = 0;
  v2[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userUnder13YearsOld] = 0;
  v2[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userIsManagedAccount] = 0;
  v0[9].receiver = v2;
  v0[9].super_class = v1;
  v0[12].super_class = (Class)objc_msgSendSuper2(v0 + 9, sel_init);
  if (qword_1EB76C5D0 != -1) {
    swift_once();
  }
  uint64_t v5 = (void **)(qword_1EB76C5C8 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_identifierPromise);
  swift_beginAccess();
  id v6 = *v5;
  v0[13].receiver = v6;
  v0[1].receiver = v0;
  v0[3].super_class = (Class)&v0[11];
  v0[1].super_class = (Class)sub_1ACA4C90C;
  uint64_t v7 = swift_continuation_init();
  v0[5].receiver = (id)MEMORY[0x1E4F143A8];
  v0[5].super_class = (Class)0x40000000;
  v0[6].receiver = sub_1ACA4CC9C;
  v0[6].super_class = (Class)&block_descriptor;
  v0[7].receiver = (id)v7;
  objc_msgSend(v6, sel_resultWithTimeout_completion_, &v0[5], 1.0);
  return MEMORY[0x1F41881E8](&v0[1]);
}

uint64_t sub_1ACA4C90C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 216) = v1;
  if (v1) {
    Swift::OpaquePointer v2 = sub_1ACA4CB28;
  }
  else {
    Swift::OpaquePointer v2 = sub_1ACA4CA1C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACA4CA1C()
{
  uint64_t v1 = *(void **)(v0 + 208);

  Swift::OpaquePointer v2 = *(unsigned char **)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)&v2[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_clientId];
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_clientId + 8];
  char v6 = v2[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userAllowsPersonalization];
  char v7 = v2[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userIsManagedAccount];
  uint64_t v9 = *(void *)&v2[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userId];
  uint64_t v8 = *(void *)&v2[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userId + 8];
  char v10 = v2[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userUnder13YearsOld];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  *(void *)uint64_t v3 = v5;
  *(void *)(v3 + 8) = v4;
  *(void *)(v3 + 16) = v9;
  *(void *)(v3 + 24) = v8;
  *(unsigned char *)(v3 + 32) = v6;
  *(unsigned char *)(v3 + 33) = v7;
  *(unsigned char *)(v3 + 34) = v10;
  id v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1ACA4CB28()
{
  id receiver = v0[13].receiver;
  Class super_class = v0[13].super_class;
  uint64_t v3 = (objc_class *)v0[12].receiver;
  Class v4 = v0[12].super_class;
  swift_willThrow();

  uint64_t v5 = objc_allocWithZone(v3);
  char v6 = &v5[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_clientId];
  *char v6 = 0;
  v6[1] = 0;
  char v7 = &v5[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userId];
  *char v7 = 0;
  v7[1] = 0;
  v5[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userAllowsPersonalization] = 0;
  v5[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userUnder13YearsOld] = 0;
  v5[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userIsManagedAccount] = 0;
  v0[10].id receiver = v5;
  v0[10].Class super_class = v3;
  uint64_t v8 = objc_msgSendSuper2(v0 + 10, sel_init);

  Class v9 = v0[11].super_class;
  uint64_t v11 = *(void *)&v8[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_clientId];
  uint64_t v10 = *(void *)&v8[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_clientId + 8];
  uint64_t v13 = *(void *)&v8[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userId];
  uint64_t v12 = *(void *)&v8[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userId + 8];
  char v14 = v8[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userAllowsPersonalization];
  char v15 = v8[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userIsManagedAccount];
  char v16 = v8[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userUnder13YearsOld];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  *(void *)Class v9 = v11;
  *((void *)v9 + 1) = v10;
  *((void *)v9 + 2) = v13;
  *((void *)v9 + 3) = v12;
  *((unsigned char *)v9 + 32) = v14;
  *((unsigned char *)v9 + 33) = v15;
  *((unsigned char *)v9 + 34) = v16;
  uint64_t v17 = (uint64_t (*)(void))v0->super_class;
  return v17();
}

uint64_t sub_1ACA4CC9C(uint64_t result, void *a2, void *a3)
{
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    swift_allocError();
    *Class v4 = a3;
    id v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(void **)(*(void *)(*(void *)(result + 32) + 64) + 40) = a2;
    id v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id RecommendationModulesRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id RecommendationModulesRequest.init()()
{
  *(void *)&v0[OBJC_IVAR___MTRecommendationModulesRequest_kPayloadDataFetchLimit] = 50;
  uint64_t v1 = OBJC_IVAR___MTRecommendationModulesRequest_context;
  Swift::OpaquePointer v2 = self;
  uint64_t v3 = v0;
  id v4 = objc_msgSend(v2, sel_sharedInstance);
  id v5 = objc_msgSend(v4, sel_mainQueueContext);

  *(void *)&v0[v1] = v5;
  v7.id receiver = v3;
  v7.Class super_class = (Class)type metadata accessor for RecommendationModulesRequest();
  return objc_msgSendSuper2(&v7, sel_init);
}

void sub_1ACA4CF0C()
{
}

id RecommendationModulesRequest.__deallocating_deinit()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for RecommendationModulesRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t RecommendationModulesResponse.init(json:)(void *a1)
{
  uint64_t v2 = v1;
  v21._rawValue = a1;
  uint64_t v3 = sub_1ACE74DB8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE74F28();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for RecommendationModulesCache();
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  char v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v2 + 16) = MEMORY[0x1E4FBC860];
  id v15 = objc_msgSend(self, sel_sharedCacheDirectory);
  sub_1ACE74E98();

  strcpy(v22, "ListenNowCache");
  v22[15] = -18;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F276A8], v3);
  sub_1ACA4F4AC();
  sub_1ACE74F08();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  char v16 = &v14[*(int *)(v12 + 28)];
  *(void *)char v16 = 0x4D73656C75646F4DLL;
  *((void *)v16 + 1) = 0xEF61746164617465;
  uint64_t v17 = &v14[*(int *)(v12 + 32)];
  strcpy(v17, "ModuleContent-");
  v17[15] = -18;
  RecommendationModulesCache.writeToCache(with:)(v21);
  swift_bridgeObjectRelease();
  uint64_t v18 = RecommendationModulesCache.modulesMetadata.getter();
  sub_1ACA50FCC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for RecommendationModulesCache);
  *(void *)(v2 + 16) = v18;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t RecommendationModulesResponse.init()()
{
  uint64_t v51 = sub_1ACE754C8();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v52 = (char *)&v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1ACE74DB8();
  uint64_t v2 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v56 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for RecommendationModulesCache();
  MEMORY[0x1F4188790](v54);
  uint64_t v59 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE750A8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v49 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  Swift::OpaquePointer v21 = (char *)&v49 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v61 = (char *)&v49 - v22;
  uint64_t v60 = v0;
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC860];
  if (qword_1E99EFE60 != -1) {
    swift_once();
  }
  uint64_t v23 = __swift_project_value_buffer(v9, (uint64_t)qword_1E99F14E8);
  swift_beginAccess();
  sub_1ACA3AAD4(v23, (uint64_t)v11, (uint64_t *)&unk_1EB773140);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    swift_release();
    sub_1ACA50E78((uint64_t)v11, (uint64_t *)&unk_1EB773140);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v61, v11, v12);
  id v24 = objc_msgSend(self, sel_sharedInstance);
  id v25 = objc_msgSend(v24, sel_syncValueForKey_, @"ListenNowStoreShelvesThrottleInterval");

  if (v25)
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v62, 0, sizeof(v62));
  }
  sub_1ACA50E14((uint64_t)v62, (uint64_t)v63, qword_1EB7725E0);
  uint64_t v53 = v13;
  if (v63[3]) {
    swift_dynamicCast();
  }
  else {
    sub_1ACA50E78((uint64_t)v63, qword_1EB7725E0);
  }
  id v26 = objc_msgSend(self, sel_sharedCacheDirectory);
  sub_1ACE74E98();

  strcpy((char *)v63, "ListenNowCache");
  HIBYTE(v63[1]) = -18;
  uint64_t v27 = v57;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4F276A8], v57);
  sub_1ACA4F4AC();
  uint64_t v28 = (uint64_t)v59;
  sub_1ACE74F08();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v27);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v7, v56);
  uint64_t v29 = v54;
  uint64_t v30 = (void *)(v28 + *(int *)(v54 + 20));
  *uint64_t v30 = 0x4D73656C75646F4DLL;
  v30[1] = 0xEF61746164617465;
  uint64_t v31 = (char *)(v28 + *(int *)(v29 + 24));
  strcpy(v31, "ModuleContent-");
  v31[15] = -18;
  sub_1ACE74FF8();
  sub_1ACE75098();
  sub_1ACA4F6F8((unint64_t *)&unk_1EB76A940);
  LOBYTE(v26) = sub_1ACE76148();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v53 + 8);
  v32(v18, v12);
  v32(v21, v12);
  unint64_t v33 = v58;
  if ((v26 & 1) != 0
    || ((unint64_t v34 = RecommendationModulesCache.modulesMetadata.getter(), v34 >> 62)
      ? (uint64_t v35 = sub_1ACE77508())
      : (uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10)),
        swift_bridgeObjectRelease(),
        BOOL v36 = v35 < 1,
        uint64_t v37 = v53,
        v36))
  {
    swift_release();
    sub_1ACA50FCC(v28, (uint64_t (*)(void))type metadata accessor for RecommendationModulesCache);
    v32(v61, v12);
    return 0;
  }
  uint64_t v38 = v52;
  sub_1ACE754A8();
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v33, v61, v12);
  id v39 = sub_1ACE75498();
  os_log_type_t v40 = sub_1ACE76C08();
  if (os_log_type_enabled(v39, v40))
  {
    id v41 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    v63[0] = v42;
    *(_DWORD *)id v41 = 136315138;
    uint64_t v57 = (uint64_t)(v41 + 4);
    sub_1ACA4F6F8((unint64_t *)&qword_1EB76A950);
    uint64_t v43 = sub_1ACE777C8();
    *(void *)&v62[0] = sub_1ACA3189C(v43, v44, v63);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    v32(v33, v12);
    _os_log_impl(&dword_1AC9D5000, v39, v40, "RecommendationModulesRequest returning cached recommendations response. Last cached date was: %s", v41, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v42, -1, -1);
    uint64_t v45 = v41;
    uint64_t v28 = (uint64_t)v59;
    MEMORY[0x1AD11B340](v45, -1, -1);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v51);
  }
  else
  {
    v32(v33, v12);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v51);
  }
  uint64_t v48 = RecommendationModulesCache.modulesMetadata.getter();
  sub_1ACA50FCC(v28, (uint64_t (*)(void))type metadata accessor for RecommendationModulesCache);
  v32(v61, v12);
  uint64_t v46 = v60;
  *(void *)(v60 + 16) = v48;
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t sub_1ACA4DBF8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1ACA51034;
  return sub_1ACA46A3C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1ACA4DCC0()
{
  unint64_t v1 = *(void *)(v0 + 16);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1ACE774B8();
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    uint64_t v2 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    sub_1ACE779C8();
    if (swift_dynamicCastMetatype() || (uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = (void *)(v2 + 32);
      while (*v5)
      {
        ++v5;
        if (!--v4) {
          goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
      return v2 | 1;
    }
    return v1;
  }
}

uint64_t sub_1ACA4DD8C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1ACE774B8();
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    sub_1ACE779C8();
    if (!swift_dynamicCastMetatype())
    {
      uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v4)
      {
        for (uint64_t i = (void *)(v2 + 32); *i; ++i)
        {
          if (!--v4) {
            return v1;
          }
        }
        return v2 | 1;
      }
    }
    return v1;
  }
}

uint64_t sub_1ACA4DE44(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1ACC82E20(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1ACC82E20(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v11;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1ACC82E20(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v11;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      uint64_t v7 = v2 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1ACA4DF84(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1ACC830C8(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76ED48);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76ED40);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1ACC830C8(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v11;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1ACC830C8(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v11;
      }
      *(void *)(v2 + 16) = v6 + 1;
      uint64_t v7 = v2 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      v4 += 16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1ACA4E0D0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1ACC82D84(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1ACC82D84(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1ACC82D84(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      sub_1ACA3AA44(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1ACA4E1F8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t result = sub_1ACC831A0(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1AD119490](0, a1);
    uint64_t result = sub_1ACE75FD8();
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  *(id *)(a1 + 32);
  uint64_t result = sub_1ACE75FD8();
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1ACA4E408(unint64_t a1)
{
  return sub_1ACA4E8A8(a1, (unint64_t *)&qword_1EB768EB0);
}

uint64_t sub_1ACA4E41C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1ACC82D84(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x1AD119490](i, a1);
        type metadata accessor for ServerCategory();
        swift_dynamicCast();
        uint64_t v3 = v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1ACC82D84(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v12;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1ACC82D84(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v12;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_1ACA3AA44(v11, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      unint64_t v8 = a1 + 32;
      type metadata accessor for ServerCategory();
      do
      {
        swift_retain();
        swift_dynamicCast();
        uint64_t v3 = v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1ACC82D84(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v12;
        }
        unint64_t v10 = *(void *)(v3 + 16);
        unint64_t v9 = *(void *)(v3 + 24);
        if (v10 >= v9 >> 1)
        {
          sub_1ACC82D84(v9 > 1, v10 + 1, 1);
          uint64_t v3 = v12;
        }
        *(void *)(v3 + 16) = v10 + 1;
        sub_1ACA3AA44(v11, (_OWORD *)(v3 + 32 * v10 + 32));
        v8 += 8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACA4E650(uint64_t a1)
{
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A908);
  uint64_t v2 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F3EB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1ACC83310(0, v9, 0);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v12 = *(void *)(v2 + 72);
    uint64_t v10 = v17;
    do
    {
      sub_1ACA3AAD4(v11, (uint64_t)v4, &qword_1EB76A908);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1ACC83310(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v17;
      }
      unint64_t v14 = *(void *)(v10 + 16);
      unint64_t v13 = *(void *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1ACC83310(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v17;
      }
      *(void *)(v10 + 16) = v14 + 1;
      sub_1ACA50E14((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14, (uint64_t *)&unk_1E99F3EB0);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1ACA4E894(unint64_t a1)
{
  return sub_1ACA4E8A8(a1, (unint64_t *)&qword_1EB768F50);
}

uint64_t sub_1ACA4E8A8(unint64_t a1, unint64_t *a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (!v4) {
    return v5;
  }
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1ACC82D84(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        MEMORY[0x1AD119490](i, a1);
        sub_1ACA50D4C(0, a2);
        swift_dynamicCast();
        uint64_t v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1ACC82D84(0, *(void *)(v5 + 16) + 1, 1);
          uint64_t v5 = v15;
        }
        unint64_t v9 = *(void *)(v5 + 16);
        unint64_t v8 = *(void *)(v5 + 24);
        if (v9 >= v8 >> 1)
        {
          sub_1ACC82D84(v8 > 1, v9 + 1, 1);
          uint64_t v5 = v15;
        }
        *(void *)(v5 + 16) = v9 + 1;
        sub_1ACA3AA44(v14, (_OWORD *)(v5 + 32 * v9 + 32));
      }
    }
    else
    {
      uint64_t v10 = (id *)(a1 + 32);
      sub_1ACA50D4C(0, a2);
      do
      {
        id v11 = *v10;
        swift_dynamicCast();
        uint64_t v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1ACC82D84(0, *(void *)(v5 + 16) + 1, 1);
          uint64_t v5 = v15;
        }
        unint64_t v13 = *(void *)(v5 + 16);
        unint64_t v12 = *(void *)(v5 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_1ACC82D84(v12 > 1, v13 + 1, 1);
          uint64_t v5 = v15;
        }
        *(void *)(v5 + 16) = v13 + 1;
        sub_1ACA3AA44(v14, (_OWORD *)(v5 + 32 * v13 + 32));
        ++v10;
        --v4;
      }
      while (v4);
    }
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACA4EAFC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1ACC83360(0, v1, 0);
    uint64_t v2 = v20;
    uint64_t v4 = (void *)(a1 + 80);
    do
    {
      uint64_t v5 = (void *)*(v4 - 6);
      uint64_t v6 = *(v4 - 5);
      char v7 = *((unsigned char *)v4 - 32);
      uint64_t v8 = *(v4 - 2);
      uint64_t v9 = *v4;
      uint64_t v14 = *(v4 - 1);
      uint64_t v15 = *(v4 - 3);
      sub_1ACA50CB8(v5, v6, v7);
      uint64_t v20 = v2;
      unint64_t v10 = *(void *)(v2 + 16);
      unint64_t v11 = *(void *)(v2 + 24);
      int64_t v16 = v10 + 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v10 >= v11 >> 1)
      {
        sub_1ACC83360(v11 > 1, v16, 1);
        uint64_t v2 = v20;
      }
      v4 += 7;
      uint64_t v18 = &type metadata for PodcastDonationModel;
      uint64_t v19 = &protocol witness table for PodcastDonationModel;
      uint64_t v12 = swift_allocObject();
      *(void *)&long long v17 = v12;
      *(void *)(v12 + 16) = v5;
      *(void *)(v12 + 24) = v6;
      *(unsigned char *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v15;
      *(void *)(v12 + 48) = v8;
      *(void *)(v12 + 56) = v14;
      *(void *)(v12 + 64) = v9;
      *(void *)(v2 + 16) = v16;
      sub_1ACA3AABC(&v17, v2 + 40 * v10 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1ACA4EC58(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1ACC83360(0, v1, 0);
    uint64_t v2 = v16;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v6 = *(v4 - 3);
      uint64_t v5 = *(v4 - 2);
      uint64_t v8 = *(v4 - 1);
      uint64_t v7 = *v4;
      uint64_t v16 = v2;
      unint64_t v9 = *(void *)(v2 + 16);
      unint64_t v10 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
      {
        sub_1ACC83360(v10 > 1, v9 + 1, 1);
        uint64_t v2 = v16;
      }
      v4 += 4;
      uint64_t v14 = &type metadata for StationDonationModel;
      uint64_t v15 = &protocol witness table for StationDonationModel;
      unint64_t v11 = (void *)swift_allocObject();
      *(void *)&long long v13 = v11;
      _OWORD v11[2] = v6;
      v11[3] = v5;
      _OWORD v11[4] = v8;
      v11[5] = v7;
      *(void *)(v2 + 16) = v9 + 1;
      sub_1ACA3AABC(&v13, v2 + 40 * v9 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1ACA4ED80(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1ACC83428(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        MEMORY[0x1AD119490](v5, a1);
        type metadata accessor for ServerCategory();
        swift_dynamicCast();
        uint64_t v3 = v16;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1ACC83428(0, *(void *)(v16 + 16) + 1, 1);
          uint64_t v3 = v16;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1ACC83428(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v16;
        }
        ++v5;
        *(void *)(v3 + 16) = v7 + 1;
        uint64_t v8 = v3 + 40 * v7;
        *(void *)(v8 + 64) = v15;
        *(_OWORD *)(v8 + 32) = v13;
        *(_OWORD *)(v8 + 48) = v14;
      }
      while (v2 != v5);
    }
    else
    {
      unint64_t v9 = a1 + 32;
      type metadata accessor for ServerCategory();
      do
      {
        swift_retain();
        swift_dynamicCast();
        uint64_t v3 = v16;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1ACC83428(0, *(void *)(v16 + 16) + 1, 1);
          uint64_t v3 = v16;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1ACC83428(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v16;
        }
        *(void *)(v3 + 16) = v11 + 1;
        uint64_t v12 = v3 + 40 * v11;
        *(void *)(v12 + 64) = v15;
        *(_OWORD *)(v12 + 32) = v13;
        *(_OWORD *)(v12 + 48) = v14;
        v9 += 8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

void sub_1ACA4F040(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 16);
  if ((v4 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    MEMORY[0x1AD119490](a2, v4);
    swift_bridgeObjectRelease();
    return;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v5 = *(void **)(v4 + 8 * a2 + 32);
  id v6 = v5;
}

uint64_t sub_1ACA4F190()
{
  unint64_t v1 = *(void *)(v0 + 16);
  if (!(v1 >> 62)) {
    return *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if ((v2 & 0x8000000000000000) == 0) {
    return v2;
  }
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

id sub_1ACA4F31C()
{
  uint64_t v0 = (objc_class *)type metadata accessor for GenericDataSourceSection();
  unint64_t v1 = (char *)objc_allocWithZone(v0);
  uint64_t v2 = (uint64_t (**)())&v1[OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock];
  *uint64_t v2 = sub_1ACA58428;
  v2[1] = 0;
  uint64_t v3 = &v1[OBJC_IVAR___MTGenericDataSourceSection_storedTitle];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0xE000000000000000;
  v5.id receiver = v1;
  v5.Class super_class = v0;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t RecommendationModulesResponse.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RecommendationModulesResponse.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1ACA4F4AC()
{
  unint64_t result = qword_1EB773150;
  if (!qword_1EB773150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB773150);
  }
  return result;
}

uint64_t type metadata accessor for RecommendationModulesRequest()
{
  return self;
}

uint64_t sub_1ACA4F524(uint64_t a1, int *a2)
{
  id v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1ACA4F600;
  return v6(a1);
}

uint64_t sub_1ACA4F600()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1ACA4F6F8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1ACE750A8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for RecommendationModulesRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecommendationModulesRequest);
}

uint64_t dispatch thunk of RecommendationModulesRequest.perform(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t method lookup function for RecommendationModulesResponse(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecommendationModulesResponse);
}

uint64_t dispatch thunk of RecommendationModulesResponse.__allocating_init(json:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of RecommendationModulesResponse.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of RecommendationModulesResponse.items(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of RecommendationModulesResponse.item(in:at:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of RecommendationModulesResponse.numberOfItems(in:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of RecommendationModulesResponse.numberOfSections()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of RecommendationModulesResponse.section(at:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t sub_1ACA4F87C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  sub_1ACA33128((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACA4F8D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v48 = a1;
  uint64_t v49 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v50 = v8;
  uint64_t v51 = 0;
  uint64_t v52 = v11 & v9;
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1ACA4FC28(&v46);
  uint64_t v12 = *((void *)&v46 + 1);
  if (!*((void *)&v46 + 1)) {
    goto LABEL_27;
  }
  uint64_t v13 = v46;
  sub_1ACA3AA44(v47, v45);
  long long v14 = *(void **)a5;
  unint64_t v16 = sub_1ACA657FC(v13, v12);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v19 = v15;
  if (v14[3] >= v17 + v18)
  {
    if (a4)
    {
      if (v15) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_1ACD0568C();
      if (v19) {
        goto LABEL_12;
      }
    }
LABEL_14:
    uint64_t v23 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    id v24 = (uint64_t *)(v23[6] + 16 * v16);
    uint64_t *v24 = v13;
    v24[1] = v12;
    sub_1ACA3AA44(v45, (_OWORD *)(v23[7] + 32 * v16));
    uint64_t v25 = v23[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v23[2] = v27;
LABEL_16:
    sub_1ACA4FC28(&v46);
    for (uint64_t i = *((void *)&v46 + 1); *((void *)&v46 + 1); uint64_t i = *((void *)&v46 + 1))
    {
      uint64_t v30 = v46;
      sub_1ACA3AA44(v47, v45);
      uint64_t v31 = *(void **)a5;
      unint64_t v33 = sub_1ACA657FC(v30, i);
      uint64_t v34 = v31[2];
      BOOL v35 = (v32 & 1) == 0;
      if (__OFADD__(v34, v35)) {
        goto LABEL_28;
      }
      char v36 = v32;
      if (v31[3] < v34 + v35)
      {
        sub_1ACCFB66C();
        uint64_t v37 = sub_1ACA657FC(v30, i);
        if ((v36 & 1) != (v38 & 1)) {
          goto LABEL_30;
        }
        unint64_t v33 = v37;
      }
      if (v36)
      {
        sub_1ACA33128((uint64_t)v45, (uint64_t)v44);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
        swift_bridgeObjectRelease();
        uint64_t v29 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v33);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
        sub_1ACA3AA44(v44, v29);
      }
      else
      {
        id v39 = *(void **)a5;
        *(void *)(*(void *)a5 + 8 * (v33 >> 6) + 64) |= 1 << v33;
        os_log_type_t v40 = (uint64_t *)(v39[6] + 16 * v33);
        *os_log_type_t v40 = v30;
        v40[1] = i;
        sub_1ACA3AA44(v45, (_OWORD *)(v39[7] + 32 * v33));
        uint64_t v41 = v39[2];
        BOOL v26 = __OFADD__(v41, 1);
        uint64_t v42 = v41 + 1;
        if (v26) {
          goto LABEL_29;
        }
        v39[2] = v42;
      }
      sub_1ACA4FC28(&v46);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1ACA50A70();
    return swift_release();
  }
  sub_1ACCFB66C();
  uint64_t v20 = sub_1ACA657FC(v13, v12);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v16 = v20;
    if ((v19 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_1ACA33128((uint64_t)v45, (uint64_t)v44);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
    swift_bridgeObjectRelease();
    uint64_t v22 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v16);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
    sub_1ACA3AA44(v44, v22);
    goto LABEL_16;
  }
LABEL_30:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACA4FC28@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    sub_1ACA33128(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(void *)&long long v23 = v13;
    *((void *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      uint64_t v9 = (v16 - 1) & v16;
      unint64_t v10 = __clz(__rbit64(v16)) + (v14 << 6);
      int64_t v7 = v14;
      goto LABEL_3;
    }
    int64_t v17 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      unint64_t v16 = *(void *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        int64_t v14 = v17;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        unint64_t v16 = *(void *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          int64_t v14 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v17 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          unint64_t v16 = *(void *)(v4 + 8 * v17);
          if (v16) {
            goto LABEL_10;
          }
          int64_t v14 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            unint64_t v16 = *(void *)(v4 + 8 * v14);
            if (v16) {
              goto LABEL_7;
            }
            int64_t v7 = v15 - 1;
            int64_t v18 = v5 + 6;
            while (v15 != v18)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v18++);
              if (v16)
              {
                int64_t v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  memset(v24, 0, sizeof(v24));
  long long v23 = 0u;
LABEL_23:
  *unint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  char v19 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_1ACA50E14((uint64_t)&v23, (uint64_t)v22, &qword_1E99F0E18);
  if (*((void *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_1ACA50E78((uint64_t)v21, &qword_1E99F0E20);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_1ACA4FE14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E30);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E38);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  unint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (uint64_t *)((char *)&v38 - v11);
  uint64_t v13 = *v1;
  uint64_t v14 = v1[1];
  uint64_t v16 = v1[2];
  int64_t v15 = v1[3];
  int64_t v17 = v15;
  unint64_t v18 = v1[4];
  id v39 = v6;
  uint64_t v43 = v16;
  if (v18)
  {
    uint64_t v41 = v10;
    int64_t v42 = v15;
    uint64_t v40 = v14;
    uint64_t v19 = v3;
    uint64_t v20 = a1;
    uint64_t v21 = (v18 - 1) & v18;
    unint64_t v22 = __clz(__rbit64(v18)) | (v15 << 6);
LABEL_3:
    uint64_t v23 = *(void *)(v13 + 56);
    uint64_t v24 = *(void *)(*(void *)(v13 + 48) + 8 * v22);
    uint64_t v25 = v23 + *(void *)(*(void *)(type metadata accessor for ThinClientEpisodeStateModel() - 8) + 72) * v22;
    uint64_t v3 = v19;
    sub_1ACA50DB0(v25, (uint64_t)v12 + *(int *)(v19 + 48));
    *uint64_t v12 = v24;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v4 + 56))(v12, 0, 1, v19);
    a1 = v20;
    uint64_t v14 = v40;
    unint64_t v10 = v41;
    goto LABEL_25;
  }
  int64_t v26 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
LABEL_23:
    int64_t v17 = v11;
    goto LABEL_24;
  }
  int64_t v27 = (unint64_t)(v16 + 64) >> 6;
  if (v26 < v27)
  {
    unint64_t v28 = *(void *)(v14 + 8 * v26);
    if (v28)
    {
LABEL_7:
      uint64_t v40 = v14;
      uint64_t v41 = v10;
      uint64_t v19 = v3;
      uint64_t v20 = a1;
      uint64_t v21 = (v28 - 1) & v28;
      unint64_t v22 = __clz(__rbit64(v28)) + (v26 << 6);
      int64_t v42 = v26;
      goto LABEL_3;
    }
    int64_t v29 = v15 + 2;
    int64_t v17 = v15 + 1;
    if (v15 + 2 < v27)
    {
      unint64_t v28 = *(void *)(v14 + 8 * v29);
      if (v28)
      {
LABEL_10:
        int64_t v26 = v29;
        goto LABEL_7;
      }
      int64_t v17 = v15 + 2;
      if (v15 + 3 < v27)
      {
        unint64_t v28 = *(void *)(v14 + 8 * (v15 + 3));
        if (v28)
        {
          int64_t v26 = v15 + 3;
          goto LABEL_7;
        }
        int64_t v29 = v15 + 4;
        int64_t v17 = v15 + 3;
        if (v15 + 4 < v27)
        {
          unint64_t v28 = *(void *)(v14 + 8 * v29);
          if (v28) {
            goto LABEL_10;
          }
          int64_t v26 = v15 + 5;
          int64_t v17 = v15 + 4;
          if (v15 + 5 < v27)
          {
            unint64_t v28 = *(void *)(v14 + 8 * v26);
            if (v28) {
              goto LABEL_7;
            }
            int64_t v11 = v27 - 1;
            uint64_t v30 = v15 + 6;
            while (v27 != v30)
            {
              unint64_t v28 = *(void *)(v14 + 8 * v30++);
              if (v28)
              {
                int64_t v26 = v30 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  int64_t v42 = v17;
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
  uint64_t v21 = 0;
LABEL_25:
  *unint64_t v1 = v13;
  v1[1] = v14;
  int64_t v31 = v42;
  v1[2] = v43;
  v1[3] = v31;
  v1[4] = v21;
  char v32 = (void (*)(uint64_t))v1[5];
  sub_1ACA50E14((uint64_t)v12, (uint64_t)v10, &qword_1E99F0E38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E40);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a1, 1, 1, v33);
  }
  else
  {
    uint64_t v35 = (uint64_t)v10;
    uint64_t v36 = (uint64_t)v39;
    sub_1ACA50E14(v35, (uint64_t)v39, &qword_1E99F0E30);
    v32(v36);
    sub_1ACA50E78(v36, &qword_1E99F0E30);
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E40);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(a1, 0, 1, v37);
  }
}

uint64_t sub_1ACA50200@<X0>(_OWORD *a1@<X8>)
{
  void (*v16)(_OWORD *__return_ptr, void *);
  uint64_t result;
  long long v18;
  long long v19;
  long long v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  int64_t v26;
  _OWORD v27[3];
  void v28[6];

  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (v4)
  {
    uint64_t v7 = (v4 - 1) & v4;
    unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
    uint64_t v9 = *(void *)(*(void *)(v3 + 48) + 8 * v8);
    unint64_t v10 = (uint64_t *)(*(void *)(v3 + 56) + 40 * v8);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    unint64_t v13 = v10[2];
    uint64_t v14 = v10[3];
    uint64_t v15 = v10[4];
    v1[3] = v6;
    v1[4] = v7;
    uint64_t v16 = (void (*)(_OWORD *__return_ptr, void *))v1[5];
    v28[0] = v9;
    v28[1] = v11;
    v28[2] = v12;
    v28[3] = v13;
    v28[4] = v14;
    v28[5] = v15;
    sub_1ACA50D88(v11, v12, v13);
    v16(v27, v28);
    uint64_t result = sub_1ACA50D9C(v11, v12, v13);
    uint64_t v19 = v27[0];
    unint64_t v18 = v27[1];
    uint64_t v20 = v27[2];
LABEL_23:
    *a1 = v19;
    a1[1] = v18;
    a1[2] = v20;
    return result;
  }
  uint64_t v21 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    unint64_t v22 = (unint64_t)(v1[2] + 64) >> 6;
    if (v21 < v22)
    {
      uint64_t v23 = v1[1];
      uint64_t v24 = *(void *)(v23 + 8 * v21);
      if (v24)
      {
LABEL_7:
        uint64_t v7 = (v24 - 1) & v24;
        unint64_t v8 = __clz(__rbit64(v24)) + (v21 << 6);
        int64_t v6 = v21;
        goto LABEL_3;
      }
      uint64_t v25 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v22)
      {
        uint64_t v24 = *(void *)(v23 + 8 * v25);
        if (v24)
        {
LABEL_10:
          uint64_t v21 = v25;
          goto LABEL_7;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v22)
        {
          uint64_t v24 = *(void *)(v23 + 8 * (v5 + 3));
          if (v24)
          {
            uint64_t v21 = v5 + 3;
            goto LABEL_7;
          }
          uint64_t v25 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v22)
          {
            uint64_t v24 = *(void *)(v23 + 8 * v25);
            if (v24) {
              goto LABEL_10;
            }
            uint64_t v21 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v22)
            {
              uint64_t v24 = *(void *)(v23 + 8 * v21);
              if (v24) {
                goto LABEL_7;
              }
              int64_t v6 = v22 - 1;
              int64_t v26 = v5 + 6;
              while (v22 != v26)
              {
                uint64_t v24 = *(void *)(v23 + 8 * v26++);
                if (v24)
                {
                  uint64_t v21 = v26 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    unint64_t v18 = xmmword_1ACE84840;
    uint64_t v19 = 0uLL;
    uint64_t v20 = 0uLL;
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACA503D8(void *a1, void (**a2)(void, void, void))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  MEMORY[0x1F4188790](v4 - 8);
  int64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE754C8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  type metadata accessor for RecommendationModulesResponse();
  swift_allocObject();
  _Block_copy(a2);
  uint64_t v12 = RecommendationModulesResponse.init()();
  if (v12)
  {
    uint64_t v13 = v12;
    sub_1ACE754A8();
    uint64_t v14 = sub_1ACE75498();
    os_log_type_t v15 = sub_1ACE76C08();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_1AC9D5000, v14, v15, "RecommendationModulesRequest returning cached response", v16, 2u);
      MEMORY[0x1AD11B340](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    a2[2](a2, v13, 0);
  }
  else
  {
    uint64_t v17 = sub_1ACE767F8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
    unint64_t v18 = (void *)swift_allocObject();
    v18[2] = 0;
    v18[3] = 0;
    v18[4] = a1;
    v18[5] = sub_1ACA50AB0;
    v18[6] = v11;
    id v19 = a1;
    swift_retain();
    sub_1ACA47C2C((uint64_t)v6, (uint64_t)&unk_1E99F0E28, (uint64_t)v18);
  }
  swift_release();
  return swift_release();
}

void *sub_1ACA506A4()
{
  return sub_1ACA4C63C();
}

uint64_t sub_1ACA506C4()
{
  return swift_deallocObject();
}

PodcastsFoundation::RecommendationsMetadata::Episodes sub_1ACA50704()
{
  return sub_1ACA4C15C();
}

uint64_t sub_1ACA50720()
{
  return swift_deallocObject();
}

uint64_t sub_1ACA50770@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA4B6B0(*(void *)(v1 + 16), *(void *)(v1 + 40), a1);
}

uint64_t objectdestroy_11Tm_0()
{
  return swift_deallocObject();
}

uint64_t sub_1ACA507DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA4ACA4(a1);
}

unint64_t sub_1ACA507FC()
{
  unint64_t result = qword_1EB7713A8;
  if (!qword_1EB7713A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7713A8);
  }
  return result;
}

uint64_t sub_1ACA50850(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

unint64_t sub_1ACA508A8()
{
  unint64_t result = qword_1EB7713D0;
  if (!qword_1EB7713D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7713D0);
  }
  return result;
}

unint64_t sub_1ACA508FC()
{
  unint64_t result = qword_1EB7713F8;
  if (!qword_1EB7713F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7713F8);
  }
  return result;
}

uint64_t sub_1ACA50950(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACA509C8()
{
  unint64_t result = qword_1EB771358;
  if (!qword_1EB771358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771358);
  }
  return result;
}

unint64_t sub_1ACA50A1C()
{
  unint64_t result = qword_1EB771438;
  if (!qword_1EB771438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771438);
  }
  return result;
}

uint64_t sub_1ACA50A70()
{
  return swift_release();
}

uint64_t sub_1ACA50A78()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1ACA50AB0(uint64_t a1, uint64_t a2)
{
  sub_1ACBB4084(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1ACA50ABC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1ACA50B84;
  return sub_1ACA46A3C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1ACA50B84()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1ACA50C78()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1ACA50CB8(id result, uint64_t a2, char a3)
{
  if (a3 == 2) {
    return (id)swift_bridgeObjectRetain();
  }
  if (a3 == 1) {
    return result;
  }
  return result;
}

uint64_t sub_1ACA50CDC()
{
  sub_1ACA50D28(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACA50D28(void *a1, uint64_t a2, char a3)
{
  if (a3 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (a3 == 1)
  {
  }
}

uint64_t sub_1ACA50D4C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1ACA50D88(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1ACA50D9C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACA50DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ThinClientEpisodeStateModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACA50E14(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACA50E78(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1ACA50ED4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA50F0C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1ACA50B84;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E99F0E48 + dword_1E99F0E48);
  return v6(a1, v4);
}

void sub_1ACA50FC4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  sub_1ACA46FE8(a1, a2, a3, a4, a5, *(void (**)(void, void *))(v5 + 16), *(void *)(v5 + 24));
}

uint64_t sub_1ACA50FCC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t CacheDomain.memory.getter()
{
  return swift_retain();
}

uint64_t CacheDomain.disk.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 60);
  uint64_t v5 = type metadata accessor for CacheDomain.DiskCaches();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t type metadata accessor for CacheDomain.DiskCaches()
{
  return swift_getGenericMetadata();
}

uint64_t CacheDomain.init(diskLocation:maxMemorySpace:notificationCenter:)@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, void *a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v22 = a7;
  uint64_t v23 = a8;
  uint64_t v16 = sub_1ACE74F28();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  id v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v20 = *a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
  CacheDomain.init(diskLocation:maxMemoryUse:notificationCenter:)((uint64_t)v19, v20, a3, a4, a5, a6, v22, v23, a9);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(a1, v16);
}

uint64_t CacheDomain.init(diskLocation:maxMemoryUse:notificationCenter:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v62 = a1;
  id v63 = a3;
  uint64_t v16 = sub_1ACE74F28();
  uint64_t v60 = *(void *)(v16 - 8);
  uint64_t v61 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v56 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v64 = a4;
  uint64_t v65 = a5;
  uint64_t v66 = a6;
  uint64_t v67 = a7;
  uint64_t v68 = a8;
  uint64_t v18 = type metadata accessor for CacheDomain.DiskCaches();
  uint64_t v58 = *(void *)(v18 - 8);
  uint64_t v59 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v57 = (uint64_t)&v51 - v19;
  uint64_t v20 = sub_1ACE76E78();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t result = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v25 = (double)a2 * 0.1;
  if ((~*(void *)&v25 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v25 <= -1.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v25 >= 1.84467441e19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v53 = result;
  uint64_t v55 = a9;
  unint64_t v26 = (unint64_t)v25;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v64 = a4;
  uint64_t v65 = AssociatedTypeWitness;
  uint64_t v66 = a6;
  uint64_t v67 = a7;
  uint64_t v68 = a8;
  uint64_t result = type metadata accessor for InMemoryAssetCache();
  uint64_t v28 = a6;
  uint64_t v29 = a8;
  unint64_t v54 = v26;
  uint64_t v30 = a2 - v26;
  if (a2 >= v26)
  {
    unint64_t v31 = a5;
    unint64_t v32 = a4;
    uint64_t v51 = a7;
    uint64_t v52 = v29;
    uint64_t v33 = v28;
    unint64_t v34 = v31;
    unint64_t v35 = v32;
    sub_1ACE76E88();
    sub_1ACA51E5C((unint64_t *)&qword_1EB768EF8, MEMORY[0x1E4F27FC8]);
    uint64_t v36 = v53;
    uint64_t v37 = sub_1ACE511B8(v30);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v36);
    uint64_t v38 = v55;
    id v39 = v56;
    *uint64_t v55 = v37;
    uint64_t v41 = v60;
    uint64_t v40 = v61;
    uint64_t v42 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v39, v62, v61);
    uint64_t v43 = v57;
    uint64_t v44 = (uint64_t)v39;
    unint64_t v45 = v32;
    unint64_t v46 = v34;
    unint64_t v47 = v34;
    uint64_t v48 = v51;
    uint64_t v49 = v52;
    CacheDomain.DiskCaches.init(directory:maxMemoryBuffer:)(v44, v54, v45, v47, v33, v51, v52, v57);

    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v40);
    unint64_t v64 = v35;
    uint64_t v65 = v46;
    uint64_t v66 = v33;
    uint64_t v67 = v48;
    uint64_t v68 = v49;
    uint64_t v50 = type metadata accessor for CacheDomain();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 32))((char *)v38 + *(int *)(v50 + 60), v43, v59);
  }
LABEL_9:
  __break(1u);
  return result;
}

id CacheDomain.DiskCaches.init(directory:maxMemoryBuffer:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v57 = a6;
  uint64_t v58 = a7;
  uint64_t v63 = a5;
  unint64_t v64 = a4;
  uint64_t v60 = a2;
  uint64_t v62 = a1;
  uint64_t v55 = a8;
  uint64_t v11 = sub_1ACE74F28();
  uint64_t v52 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v61 = &v46[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEF0);
  uint64_t v59 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  unint64_t v54 = &v46[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_1ACE76CE8();
  uint64_t v49 = *(void *)(v15 - 8);
  uint64_t v50 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v46[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v18);
  uint64_t v19 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  uint64_t v51 = v12 + 16;
  uint64_t v53 = v20;
  v20(a8, a1, v11);
  unint64_t v48 = sub_1ACA51E1C();
  unint64_t v65 = 0;
  unint64_t v66 = 0xE000000000000000;
  sub_1ACE77268();
  swift_bridgeObjectRelease();
  unint64_t v65 = 0xD000000000000015;
  unint64_t v66 = 0x80000001ACEC5BB0;
  sub_1ACE77D48();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE75E28();
  unint64_t v65 = MEMORY[0x1E4FBC860];
  sub_1ACA51E5C((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(unsigned char *, void, uint64_t))(v49 + 104))(v17, *MEMORY[0x1E4FBCC58], v50);
  uint64_t v21 = sub_1ACE76D28();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v65 = a3;
  unint64_t v66 = AssociatedTypeWitness;
  unint64_t v47 = a3;
  uint64_t v23 = v63;
  uint64_t v24 = v57;
  uint64_t v25 = v58;
  uint64_t v67 = v63;
  uint64_t v68 = v57;
  uint64_t v69 = v58;
  type metadata accessor for InMemoryAssetCache();
  unint64_t v26 = v54;
  sub_1ACE759D8();
  sub_1ACA51EA4(&qword_1EB76DEE8, &qword_1EB76DEF0);
  uint64_t v27 = v56;
  uint64_t v28 = sub_1ACE511B8(v60);
  uint64_t v60 = v28;
  (*(void (**)(unsigned char *, uint64_t))(v59 + 8))(v26, v27);
  unint64_t v65 = a3;
  unint64_t v66 = AssociatedTypeWitness;
  uint64_t v67 = v23;
  uint64_t v68 = v24;
  uint64_t v29 = v25;
  uint64_t v69 = v25;
  type metadata accessor for DiskAssetCache();
  uint64_t v30 = (uint64_t)v61;
  uint64_t v31 = v62;
  uint64_t v32 = v52;
  uint64_t v33 = v53;
  v53((uint64_t)v61, v62, v52);
  LOBYTE(v65) = 1;
  uint64_t v34 = v28;
  unint64_t v35 = (void *)v21;
  uint64_t v36 = DiskAssetCache.__allocating_init(cacheDirectory:memoryBuffer:writeQueue:cacheDeleteUrgency:)(v30, v34, v21, 0x100000000uLL);
  unint64_t v65 = v47;
  unint64_t v66 = v64;
  uint64_t v67 = v63;
  uint64_t v68 = v24;
  uint64_t v69 = v29;
  uint64_t v37 = (int *)type metadata accessor for CacheDomain.DiskCaches();
  uint64_t v38 = v55;
  *(void *)(v55 + v37[15]) = v36;
  uint64_t v39 = v31;
  uint64_t v40 = v32;
  v33(v30, v39, v32);
  LOBYTE(v65) = 0;
  uint64_t v41 = v60;
  *(void *)(v38 + v37[16]) = DiskAssetCache.__allocating_init(cacheDirectory:memoryBuffer:writeQueue:cacheDeleteUrgency:)(v30, v60, (uint64_t)v35, 0x200uLL);
  uint64_t v42 = v38;
  uint64_t v43 = v62;
  v33(v30, v62, v40);
  LOBYTE(v65) = 0;
  *(void *)(v42 + v37[17]) = DiskAssetCache.__allocating_init(cacheDirectory:memoryBuffer:writeQueue:cacheDeleteUrgency:)(v30, v41, (uint64_t)v35, 0x400uLL);
  v33(v30, v43, v40);
  LOBYTE(v65) = 0;
  *(void *)(v42 + v37[18]) = DiskAssetCache.__allocating_init(cacheDirectory:memoryBuffer:writeQueue:cacheDeleteUrgency:)(v30, v41, (uint64_t)v35, 0x800uLL);
  LOBYTE(v65) = 0;
  *(void *)(v42 + v37[19]) = DiskAssetCache.__allocating_init(cacheDirectory:memoryBuffer:writeQueue:cacheDeleteUrgency:)(v43, v41, (uint64_t)v35, 0x8000uLL);
  swift_retain_n();
  id v44 = v35;
  return v44;
}

uint64_t CacheDomain.DiskCaches.directory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1ACE74F28();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t CacheDomain.DiskCaches.persistent.getter()
{
  return swift_retain();
}

uint64_t CacheDomain.DiskCaches.lowUrgency.getter()
{
  return swift_retain();
}

uint64_t CacheDomain.DiskCaches.mediumUrgency.getter()
{
  return swift_retain();
}

uint64_t CacheDomain.DiskCaches.highUrgency.getter()
{
  return swift_retain();
}

uint64_t CacheDomain.DiskCaches.unblockSoftwareUpdateUrgency.getter()
{
  return swift_retain();
}

uint64_t CacheDomain.DiskCaches.with(urgency:)()
{
  return swift_retain();
}

uint64_t CacheDomain.DiskCaches.asset(at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return DiskAssetCache<>.asset(at:)(a1, *(void *)(a2 + 24), a3);
}

uint64_t CacheDomain.DiskCaches.store(asset:at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return DiskAssetCache<>.store(asset:at:)(a1, a2, *(void *)(a3 + 24));
}

unint64_t CacheDomain.DiskCaches.containsAsset(for:)(uint64_t a1, uint64_t a2)
{
  return (unint64_t)DiskAssetCache<>.containsAsset(for:)(a1, *(void *)(a2 + 24)) & 1;
}

uint64_t CacheDomain.DiskCaches.invalidate(at:)(uint64_t a1, uint64_t a2)
{
  return DiskAssetCache<>.invalidate(at:)(a1, *(void *)(a2 + 24));
}

uint64_t sub_1ACA51DEC(uint64_t a1, uint64_t a2)
{
  return CacheDomain.DiskCaches.invalidate(at:)(a1, a2);
}

uint64_t type metadata accessor for CacheDomain()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1ACA51E1C()
{
  unint64_t result = qword_1EB7734B0;
  if (!qword_1EB7734B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB7734B0);
  }
  return result;
}

uint64_t sub_1ACA51E5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACA51EA4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACA51EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 48);
}

uint64_t sub_1ACA51EF0()
{
  uint64_t result = type metadata accessor for CacheDomain.DiskCaches();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1ACA51FA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 60);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1ACE74F28();
    unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
    uint64_t v11 = (int *)type metadata accessor for CacheDomain.DiskCaches();
    *(void *)&v7[v11[15]] = *(void *)&v8[v11[15]];
    *(void *)&v7[v11[16]] = *(void *)&v8[v11[16]];
    *(void *)&v7[v11[17]] = *(void *)&v8[v11[17]];
    *(void *)&v7[v11[18]] = *(void *)&v8[v11[18]];
    *(void *)&v7[v11[19]] = *(void *)&v8[v11[19]];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v5;
}

uint64_t sub_1ACA5210C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 60);
  uint64_t v5 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for CacheDomain.DiskCaches();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *sub_1ACA521DC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 60);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE74F28();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  uint64_t v9 = (int *)type metadata accessor for CacheDomain.DiskCaches();
  *(void *)&v5[v9[15]] = *(void *)&v6[v9[15]];
  *(void *)&v5[v9[16]] = *(void *)&v6[v9[16]];
  *(void *)&v5[v9[17]] = *(void *)&v6[v9[17]];
  *(void *)&v5[v9[18]] = *(void *)&v6[v9[18]];
  *(void *)&v5[v9[19]] = *(void *)&v6[v9[19]];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1ACA52300(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 60);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  unint64_t v10 = (int *)type metadata accessor for CacheDomain.DiskCaches();
  *(void *)&v7[v10[15]] = *(void *)&v8[v10[15]];
  swift_retain();
  swift_release();
  *(void *)&v7[v10[16]] = *(void *)&v8[v10[16]];
  swift_retain();
  swift_release();
  *(void *)&v7[v10[17]] = *(void *)&v8[v10[17]];
  swift_retain();
  swift_release();
  *(void *)&v7[v10[18]] = *(void *)&v8[v10[18]];
  swift_retain();
  swift_release();
  *(void *)&v7[v10[19]] = *(void *)&v8[v10[19]];
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1ACA52450(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 60);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = (int *)type metadata accessor for CacheDomain.DiskCaches();
  *(void *)&v5[v8[15]] = *(void *)&v6[v8[15]];
  *(void *)&v5[v8[16]] = *(void *)&v6[v8[16]];
  *(void *)&v5[v8[17]] = *(void *)&v6[v8[17]];
  *(void *)&v5[v8[18]] = *(void *)&v6[v8[18]];
  *(void *)&v5[v8[19]] = *(void *)&v6[v8[19]];
  return a1;
}

void *sub_1ACA52530(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 60);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  unint64_t v10 = (int *)type metadata accessor for CacheDomain.DiskCaches();
  *(void *)&v7[v10[15]] = *(void *)&v8[v10[15]];
  swift_release();
  *(void *)&v7[v10[16]] = *(void *)&v8[v10[16]];
  swift_release();
  *(void *)&v7[v10[17]] = *(void *)&v8[v10[17]];
  swift_release();
  *(void *)&v7[v10[18]] = *(void *)&v8[v10[18]];
  swift_release();
  *(void *)&v7[v10[19]] = *(void *)&v8[v10[19]];
  swift_release();
  return a1;
}

uint64_t sub_1ACA52648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACA5265C);
}

uint64_t sub_1ACA5265C(char *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for CacheDomain.DiskCaches();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 60)], a2, v8);
  }
}

uint64_t sub_1ACA5270C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACA52720);
}

char *sub_1ACA52720(char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for CacheDomain.DiskCaches();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 60)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1ACA527C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 64);
}

uint64_t sub_1ACA527D0()
{
  uint64_t result = sub_1ACE74F28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1ACA52870(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1ACE74F28();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[16];
    *(uint64_t *)((char *)v4 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(uint64_t *)((char *)v4 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v9 = a3[18];
    *(uint64_t *)((char *)v4 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    *(uint64_t *)((char *)v4 + v9) = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)v4 + a3[19]) = *(uint64_t *)((char *)a2 + a3[19]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1ACA5298C(uint64_t a1)
{
  uint64_t v2 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ACA52A30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1ACA52B00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1ACA52BFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  return a1;
}

uint64_t sub_1ACA52CA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_release();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_release();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_release();
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  swift_release();
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  swift_release();
  return a1;
}

uint64_t sub_1ACA52D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACA52D88);
}

uint64_t sub_1ACA52D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 60));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1ACA52E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACA52E5C);
}

uint64_t sub_1ACA52E5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1ACE74F28();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 60)) = (a2 - 1);
  }
  return result;
}

uint64_t MetricsTopic.rawValue.getter(uint64_t a1)
{
  return a1;
}

void *sub_1ACA52F50@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t sub_1ACA52F5C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACA52F68(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1ACE77848();
  }
}

uint64_t sub_1ACA52F98()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACA52FF4()
{
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACA5304C()
{
  return sub_1ACE77B78();
}

unint64_t MetricsTopic.debugDescription.getter()
{
  return 0xD000000000000018;
}

unint64_t sub_1ACA53144()
{
  return MetricsTopic.debugDescription.getter();
}

uint64_t MetricsTopic.description.getter(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACA53180()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsTopic.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_1ACE77858();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1ACA53274@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  uint64_t v5 = sub_1ACE77858();
  uint64_t v7 = v6;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v5;
  a2[1] = v7;
  return result;
}

uint64_t MetricsTopic.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE778D8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t sub_1ACA533DC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE778D8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

unint64_t static MetricsTopic.follows.getter()
{
  return 0xD000000000000017;
}

unint64_t static MetricsTopic.log.getter()
{
  return 0xD000000000000013;
}

unint64_t static MetricsTopic.main.getter()
{
  return 0xD000000000000014;
}

unint64_t static MetricsTopic.performance.getter()
{
  return 0xD000000000000014;
}

unint64_t static MetricsTopic.play.getter()
{
  return 0xD000000000000014;
}

unint64_t static MetricsTopic.playActivityFeed.getter()
{
  return 0xD000000000000013;
}

unint64_t static MetricsTopic.test.getter()
{
  return 0xD000000000000014;
}

unint64_t static MetricsTopic.clickstream.getter()
{
  return 0xD000000000000014;
}

unint64_t sub_1ACA53558()
{
  unint64_t result = qword_1E99F0E58;
  if (!qword_1E99F0E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0E58);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for MetricsTopic(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for MetricsTopic()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for MetricsTopic(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for MetricsTopic(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsTopic(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsTopic(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsTopic()
{
  return &type metadata for MetricsTopic;
}

uint64_t sub_1ACA536F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1ACA53708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1ACA5371C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1ACA53730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

BOOL sub_1ACA53744(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1ACA53758()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACA537A0()
{
  return sub_1ACE77B28();
}

uint64_t sub_1ACA537CC()
{
  return sub_1ACE77B78();
}

void *ChannelUpdaterUtil.__allocating_init(contextProvider:)(void *a1)
{
  unint64_t v2 = (void *)swift_allocObject();
  if (qword_1EB76E160 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_1EB76E150;
  v2[3] = qword_1EB76E150;
  id v4 = v3;
  v2[2] = objc_msgSend(a1, sel_importContext);
  id v5 = objc_allocWithZone((Class)type metadata accessor for MediaRequestController());
  id v6 = v4;
  uint64_t v7 = (char *)objc_msgSend(v5, sel_init);
  uint64_t v8 = (void **)&v7[OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_responseQueue];
  swift_beginAccess();
  uint64_t v9 = *v8;
  *uint64_t v8 = v6;
  swift_unknownObjectRelease();

  v2[4] = v7;
  return v2;
}

void *ChannelUpdaterUtil.init(contextProvider:)(void *a1)
{
  if (qword_1EB76E160 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_1EB76E150;
  v1[3] = qword_1EB76E150;
  id v4 = v3;
  v1[2] = objc_msgSend(a1, sel_importContext);
  id v5 = objc_allocWithZone((Class)type metadata accessor for MediaRequestController());
  id v6 = v4;
  uint64_t v7 = (char *)objc_msgSend(v5, sel_init);
  uint64_t v8 = (void **)&v7[OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_responseQueue];
  swift_beginAccess();
  uint64_t v9 = *v8;
  *uint64_t v8 = v6;
  swift_unknownObjectRelease();

  v1[4] = v7;
  return v1;
}

uint64_t sub_1ACA53A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1ACE75DC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE75E48();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(void *)(v3 + 24);
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a2;
  v15[3] = a3;
  v15[4] = v3;
  v15[5] = a1;
  aBlock[4] = sub_1ACA55D18;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_4;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1ACE75E08();
  v18[1] = MEMORY[0x1E4FBC860];
  sub_1ACA55D24();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA55D7C();
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

void sub_1ACA53CB8(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = &type metadata for Podcasts;
  unint64_t v22 = sub_1ACA56248();
  LOBYTE(v20[0]) = 33;
  char v8 = sub_1ACE75298();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  if (v8)
  {
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = a4;
    v9[3] = a1;
    void v9[4] = a2;
    v9[5] = a3;
    unint64_t v10 = *(void **)(a3 + 16);
    uint64_t v11 = swift_allocObject();
    swift_weakInit();
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = v11;
    uint64_t v12[3] = a4;
    v12[4] = sub_1ACA562A0;
    v12[5] = v9;
    unint64_t v22 = (unint64_t)sub_1ACA56324;
    uint64_t v23 = v12;
    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 1107296256;
    v20[2] = sub_1ACA6DA9C;
    uint64_t v21 = (ValueMetadata *)&block_descriptor_27;
    uint64_t v13 = _Block_copy(v20);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_performBlock_, v13);
    _Block_release(v13);
    swift_release();
  }
  else
  {
    if (qword_1EB76A5E8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1ACE754C8();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EB76A5D0);
    uint64_t v15 = sub_1ACE75498();
    os_log_type_t v16 = sub_1ACE76BE8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_1AC9D5000, v15, v16, "[ChannelUpdaterUtil] Attempting to fetch channel and write to database when Ponderosa is not enabled. This should never happen.", v17, 2u);
      MEMORY[0x1AD11B340](v17, -1, -1);
    }

    sub_1ACA561F4();
    uint64_t v18 = (void *)swift_allocError();
    *uint64_t v19 = 2;
    a1(v18);
  }
}

void sub_1ACA53F4C(char a1, uint64_t a2, void (*a3)(void *, unsigned char *), uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    if (qword_1EB76A5E8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1ACE754C8();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EB76A5D0);
    uint64_t v9 = sub_1ACE75498();
    os_log_type_t v10 = sub_1ACE76C08();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v19 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      sub_1ACA55E4C();
      uint64_t v13 = sub_1ACE770B8();
      sub_1ACA3189C(v13, v14, &v19);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v9, v10, "[ChannelUpdaterUtil] Not fetching channel from Media API with adamID: %s because it is already in the library.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v12, -1, -1);
      MEMORY[0x1AD11B340](v11, -1, -1);
    }

    sub_1ACA561F4();
    uint64_t v15 = (void *)swift_allocError();
    *os_log_type_t v16 = 0;
    a3(v15, v16);
  }
  else
  {
    uint64_t v18 = (void *)swift_allocObject();
    void v18[2] = a2;
    v18[3] = a3;
    v18[4] = a4;
    v18[5] = a5;
    swift_retain();
    swift_retain();
    sub_1ACA54C9C(a2, (uint64_t)sub_1ACA563DC, (uint64_t)v18);
    swift_release();
  }
}

void sub_1ACA541AC(void *a1, id a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    id v10 = a2;
    if (qword_1EB76A5E8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1ACE754C8();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB76A5D0);
    id v12 = a2;
    id v13 = a2;
    unint64_t v14 = sub_1ACE75498();
    os_log_type_t v15 = sub_1ACE76BE8();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      aBlock[0] = v17;
      *(_DWORD *)uint64_t v16 = 136315394;
      sub_1ACA55E4C();
      uint64_t v18 = sub_1ACE770B8();
      sub_1ACA3189C(v18, v19, aBlock);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v20 = sub_1ACE77A98();
      sub_1ACA3189C(v20, v21, aBlock);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AC9D5000, v14, v15, "[ChannelUpdaterUtil] Failure fetching channel with adamID: %s from Media API with error: %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v17, -1, -1);
      MEMORY[0x1AD11B340](v16, -1, -1);
    }
    else
    {
    }
    id v37 = a2;
    ((void (*)(id))a4)(a2);
  }
  else if (a1)
  {
    uint64_t v23 = qword_1EB76A5E8;
    id v24 = a1;
    if (v23 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1ACE754C8();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EB76A5D0);
    unint64_t v26 = sub_1ACE75498();
    os_log_type_t v27 = sub_1ACE76C08();
    if (os_log_type_enabled(v26, v27))
    {
      id v40 = v24;
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      aBlock[0] = v29;
      *(_DWORD *)uint64_t v28 = 136315138;
      sub_1ACA55E4C();
      uint64_t v30 = sub_1ACE770B8();
      sub_1ACA3189C(v30, v31, aBlock);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v26, v27, "[ChannelUpdaterUtil] Ingesting channel with adamID: %s.", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v29, -1, -1);
      uint64_t v32 = v28;
      id v24 = v40;
      MEMORY[0x1AD11B340](v32, -1, -1);
    }

    uint64_t v33 = *(void **)(a6 + 16);
    uint64_t v34 = (void *)swift_allocObject();
    v34[2] = v24;
    v34[3] = a6;
    v34[4] = a3;
    v34[5] = a4;
    v34[6] = a5;
    aBlock[4] = (uint64_t)sub_1ACA56430;
    aBlock[5] = (uint64_t)v34;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1ACA6DA9C;
    aBlock[3] = (uint64_t)&block_descriptor_42;
    unint64_t v35 = _Block_copy(aBlock);
    id v36 = v24;
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v33, sel_performBlock_, v35);
    _Block_release(v35);
  }
  else
  {
    sub_1ACA561F4();
    uint64_t v38 = (void *)swift_allocError();
    *uint64_t v39 = 1;
    a4();
  }
}

uint64_t sub_1ACA546A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1ACE75DC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v52 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE75E48();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v15 = result;
    id v16 = objc_allocWithZone(MEMORY[0x1E4F28ED0]);
    uint64_t v46 = a2;
    id v17 = objc_msgSend(v16, sel_initWithUnsignedLongLong_, a2);
    uint64_t v49 = v10;
    uint64_t v50 = v8;
    uint64_t v47 = a4;
    uint64_t v48 = v11;
    uint64_t v51 = a3;
    if (v17
      && (uint64_t v18 = v17,
          id v19 = objc_msgSend(v17, sel_longLongValue),
          v18,
          id v20 = v19,
          a3 = v51,
          (id v21 = objc_msgSend(*(id *)(v15 + 16), sel_channelForStoreId_, v20)) != 0))
    {

      if (qword_1EB76A5E8 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_1ACE754C8();
      __swift_project_value_buffer(v22, (uint64_t)qword_1EB76A5D0);
      uint64_t v23 = sub_1ACE75498();
      os_log_type_t v24 = sub_1ACE76C08();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 136315138;
        unint64_t v45 = v25 + 4;
        uint64_t v53 = v46;
        aBlock[0] = v26;
        sub_1ACA55E4C();
        uint64_t v27 = sub_1ACE770B8();
        uint64_t v53 = sub_1ACA3189C(v27, v28, aBlock);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v23, v24, "[ChannelUpdaterUtil] Channel with adamID: %s is already in the library. No need to fetch.", v25, 0xCu);
        char v29 = 1;
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v26, -1, -1);
        uint64_t v30 = v25;
        a3 = v51;
        MEMORY[0x1AD11B340](v30, -1, -1);
      }
      else
      {

        char v29 = 1;
      }
    }
    else
    {
      if (qword_1EB76A5E8 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_1ACE754C8();
      __swift_project_value_buffer(v31, (uint64_t)qword_1EB76A5D0);
      uint64_t v32 = sub_1ACE75498();
      os_log_type_t v33 = sub_1ACE76C08();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = swift_slowAlloc();
        unint64_t v45 = (uint8_t *)v7;
        unint64_t v35 = (uint8_t *)v34;
        uint64_t v36 = swift_slowAlloc();
        *(_DWORD *)unint64_t v35 = 136315138;
        uint64_t v53 = v46;
        aBlock[0] = v36;
        sub_1ACA55E4C();
        uint64_t v37 = sub_1ACE770B8();
        uint64_t v53 = sub_1ACA3189C(v37, v38, aBlock);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v32, v33, "[ChannelUpdaterUtil] Channel with adamID: %s is not in the library. Fetching channel from Media API.", v35, 0xCu);
        swift_arrayDestroy();
        uint64_t v39 = v36;
        a3 = v51;
        MEMORY[0x1AD11B340](v39, -1, -1);
        id v40 = v35;
        uint64_t v7 = (uint64_t)v45;
        MEMORY[0x1AD11B340](v40, -1, -1);
      }

      char v29 = 0;
    }
    uint64_t v41 = swift_allocObject();
    uint64_t v42 = v47;
    *(void *)(v41 + 16) = a3;
    *(void *)(v41 + 24) = v42;
    *(unsigned char *)(v41 + 32) = v29;
    aBlock[4] = (uint64_t)sub_1ACA56368;
    aBlock[5] = v41;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1ACA6DA9C;
    aBlock[3] = (uint64_t)&block_descriptor_33;
    uint64_t v43 = _Block_copy(aBlock);
    swift_retain();
    sub_1ACE75E08();
    uint64_t v53 = MEMORY[0x1E4FBC860];
    sub_1ACA55D24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    id v44 = v52;
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v13, v44, v43);
    _Block_release(v43);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v44, v7);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v49);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACA54C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v59 = a3;
  uint64_t v54 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MediaRequest.Params();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v58 = (uint64_t)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v52 - v10;
  *(void *)&long long v68 = 0;
  long long v66 = 0u;
  long long v67 = 0u;
  BYTE8(v68) = 4;
  char v65 = 3;
  char v64 = 1;
  char v63 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7725D0);
  uint64_t inited = swift_initStackObject();
  long long v55 = xmmword_1ACE843F0;
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(unsigned char *)(inited + 32) = 3;
  *(void *)(inited + 40) = &unk_1F037FE08;
  unint64_t v60 = sub_1ACA364C4(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = v55;
  *(void *)&long long v55 = a1;
  uint64_t v62 = a1;
  v52[1] = sub_1ACA55E4C();
  *(void *)(v13 + 32) = sub_1ACE770B8();
  *(void *)(v13 + 40) = v14;
  LOBYTE(v62) = 1;
  char v61 = 1;
  uint64_t v15 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  unint64_t v17 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v18 = sub_1ACA35F90(v16);
  unint64_t v19 = sub_1ACA35FB0(v16);
  unint64_t v20 = sub_1ACA360BC(v16);
  unint64_t v21 = sub_1ACA360DC(v16);
  *((void *)&v51 + 1) = sub_1ACA360FC(v16);
  *(void *)&long long v51 = v21;
  *((void *)&v50 + 1) = v16;
  *((void *)&v49 + 1) = v16;
  *(void *)&long long v50 = v16;
  *((void *)&v48 + 1) = v20;
  *(void *)&long long v49 = v60;
  *(void *)&long long v48 = v16;
  unint64_t v60 = (unint64_t)v11;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(&v66, &v65, &v64, &v63, v17, v18, v19, v16, (uint64_t)v11, v48, v49, v50, v13, (char *)&v62, 0, 1, v51, 0, 1,
    &v61,
    0,
    (uint64_t)v6,
    0,
    0,
    0,
    0,
    0,
    v16,
    0,
    0,
    2);
  if (qword_1EB76A5E8 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1ACE754C8();
  __swift_project_value_buffer(v22, (uint64_t)qword_1EB76A5D0);
  uint64_t v23 = sub_1ACE75498();
  os_log_type_t v24 = sub_1ACE76C08();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(void *)&long long v66 = v26;
    *(_DWORD *)uint64_t v25 = 136315138;
    uint64_t v27 = v55;
    uint64_t v62 = v55;
    uint64_t v28 = sub_1ACE770B8();
    uint64_t v62 = sub_1ACA3189C(v28, v29, (uint64_t *)&v66);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v23, v24, "[ChannelUpdaterUtil] Fetching channel with adamID: %s from Media API.", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v26, -1, -1);
    MEMORY[0x1AD11B340](v25, -1, -1);
  }
  else
  {

    uint64_t v27 = v55;
  }
  uint64_t v53 = (void *)v53[4];
  uint64_t v30 = (void *)swift_allocObject();
  uint64_t v31 = v59;
  v30[2] = v54;
  v30[3] = v31;
  v30[4] = v27;
  uint64_t v32 = swift_allocObject();
  *(void *)&long long v55 = v32;
  swift_unknownObjectWeakInit();
  os_log_type_t v33 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
  *((void *)v33 + 2) = v32;
  *((void *)v33 + 3) = sub_1ACA55ED8;
  *((void *)v33 + 4) = v30;
  sub_1ACE77B88();
  uint64_t v34 = v58;
  sub_1ACA394B0(v60, v58);
  unint64_t v35 = (*(unsigned __int8 *)(v56 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  unint64_t v36 = (v57 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = (v37 + 79) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v39 = swift_allocObject();
  sub_1ACA56190(v34, v39 + v35);
  *(void *)(v39 + v36) = MEMORY[0x1E4FBC860];
  unint64_t v40 = v39 + v37;
  *(void *)(v40 + 64) = v70;
  long long v41 = v69;
  *(_OWORD *)(v40 + 32) = v68;
  *(_OWORD *)(v40 + 48) = v41;
  long long v42 = v67;
  *(_OWORD *)unint64_t v40 = v66;
  *(_OWORD *)(v40 + 16) = v42;
  uint64_t v43 = v53;
  *(void *)(v39 + v38) = v53;
  id v44 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v39 + ((v38 + 15) & 0xFFFFFFFFFFFFFFF8));
  *id v44 = sub_1ACA394A4;
  v44[1] = v33;
  swift_retain();
  swift_retain();
  swift_retain();
  id v45 = v43;
  swift_retain();
  uint64_t v46 = v60;
  sub_1ACB0443C(v60, 0, (uint64_t)sub_1ACA3ABF0, v39);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_1ACA39598(v46);
}

void sub_1ACA55310(unint64_t a1, int a2, int a3, int a4, id a5, void (*a6)(id, id))
{
  if (a5)
  {
    id v8 = a5;
    a6(0, a5);
    id v9 = a5;
LABEL_3:

    return;
  }
  if (a1 && (uint64_t v10 = sub_1ACC2BAAC(a1)) != 0)
  {
    unint64_t v11 = v10;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v11 = MEMORY[0x1E4FBC860];
  }
  if (!(v11 >> 62))
  {
    id v12 = *(id *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v12) {
      goto LABEL_12;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    sub_1ACA561F4();
    uint64_t v24 = swift_allocError();
    unsigned char *v25 = 1;
    a6(0, (id)v24);
    id v9 = (id)v24;
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  id v12 = (id)sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_20;
  }
LABEL_12:
  if ((v11 & 0xC000000000000001) != 0)
  {
    id v13 = (id)MEMORY[0x1AD119490](0, v11);
  }
  else
  {
    if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_23;
    }
    id v13 = *(id *)(v11 + 32);
  }
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = qword_1EB76A5E8;
  id v12 = v14;
  if (v15 != -1) {
LABEL_23:
  }
    swift_once();
  uint64_t v16 = sub_1ACE754C8();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EB76A5D0);
  unint64_t v17 = sub_1ACE75498();
  os_log_type_t v18 = sub_1ACE76C08();
  if (os_log_type_enabled(v17, v18))
  {
    unint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v26 = v20;
    *(_DWORD *)unint64_t v19 = 136315138;
    sub_1ACA55E4C();
    uint64_t v21 = sub_1ACE770B8();
    sub_1ACA3189C(v21, v22, &v26);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v17, v18, "[ChannelUpdaterUtil] Successfully fetched channel object with adamID: %s from Media API.", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v20, -1, -1);
    MEMORY[0x1AD11B340](v19, -1, -1);
  }

  id v23 = v12;
  a6(v12, 0);
}

uint64_t sub_1ACA55628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v50 = a4;
  uint64_t v60 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = sub_1ACE75DC8();
  uint64_t v51 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1ACE75E48();
  uint64_t v12 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = self;
  uint64_t v49 = a2;
  uint64_t v16 = *(void **)(a2 + 16);
  id v17 = objc_msgSend(v15, sel_createOrFindChannelFromFeedChannelItem_personalizedRequest_context_, a1, 0, v16);
  NSManagedObjectContext.unsafeInterest(forAdamID:)(a3);
  if (v18)
  {
    unint64_t v19 = v18;
    objc_msgSend(v17, sel_setInterest_, v18);
    objc_msgSend(v19, sel_setChannel_, v17);
  }
  id aBlock = 0;
  unsigned int v20 = objc_msgSend(v16, sel_save_, &aBlock);
  id v21 = aBlock;
  if (v20)
  {
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v50;
    *(void *)(v22 + 24) = a5;
    uint64_t v58 = sub_1ACA564C4;
    uint64_t v59 = (void *)v22;
    id aBlock = (id)MEMORY[0x1E4F143A8];
    uint64_t v55 = 1107296256;
    uint64_t v56 = sub_1ACA6DA9C;
    uint64_t v57 = &block_descriptor_54;
    id v23 = _Block_copy(&aBlock);
    id v24 = v21;
    swift_retain();
    sub_1ACE75E08();
    uint64_t v53 = MEMORY[0x1E4FBC860];
    sub_1ACA55D24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v14, v11, v23);
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v52);
  }
  else
  {
    long long v48 = v11;
    id v25 = aBlock;
    uint64_t v26 = (void *)sub_1ACE74D78();

    swift_willThrow();
    if (qword_1EB76A5E8 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1ACE754C8();
    __swift_project_value_buffer(v27, (uint64_t)qword_1EB76A5D0);
    id v28 = v26;
    id v29 = v26;
    uint64_t v30 = sub_1ACE75498();
    os_log_type_t v31 = sub_1ACE76BE8();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v47 = v9;
      os_log_type_t v33 = (uint8_t *)v32;
      id v45 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v33 = 138412290;
      uint64_t v46 = a5;
      id v34 = v26;
      unint64_t v35 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id aBlock = v35;
      a5 = v46;
      sub_1ACE76FF8();
      unint64_t v36 = v45;
      void *v45 = v35;

      _os_log_impl(&dword_1AC9D5000, v30, v31, "Failed to save core data context in ChannelUpdaterUtil with error: %@", v33, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v36, -1, -1);
      unint64_t v37 = v33;
      uint64_t v9 = v47;
      MEMORY[0x1AD11B340](v37, -1, -1);
    }
    else
    {
    }
    unint64_t v38 = (void *)swift_allocObject();
    v38[2] = v50;
    v38[3] = a5;
    v38[4] = v26;
    uint64_t v58 = sub_1ACA5645C;
    uint64_t v59 = v38;
    id aBlock = (id)MEMORY[0x1E4F143A8];
    uint64_t v55 = 1107296256;
    uint64_t v56 = sub_1ACA6DA9C;
    uint64_t v57 = &block_descriptor_48;
    uint64_t v39 = _Block_copy(&aBlock);
    swift_retain();
    id v40 = v26;
    sub_1ACE75E08();
    uint64_t v53 = MEMORY[0x1E4FBC860];
    sub_1ACA55D24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    long long v41 = v14;
    long long v42 = v48;
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v41, v42, v39);
    _Block_release(v39);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v42, v9);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v41, v52);
  }
  return swift_release();
}

id *ChannelUpdaterUtil.deinit()
{
  return v0;
}

uint64_t ChannelUpdaterUtil.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1ACA55CFC()
{
  return objectdestroyTm_0(MEMORY[0x1E4FBC8D0]);
}

void sub_1ACA55D18()
{
  sub_1ACA53CB8(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

unint64_t sub_1ACA55D24()
{
  unint64_t result = qword_1EB7734E0;
  if (!qword_1EB7734E0)
  {
    sub_1ACE75DC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7734E0);
  }
  return result;
}

unint64_t sub_1ACA55D7C()
{
  unint64_t result = qword_1EB773500;
  if (!qword_1EB773500)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB7734F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB773500);
  }
  return result;
}

uint64_t type metadata accessor for ChannelUpdaterUtil()
{
  return self;
}

uint64_t method lookup function for ChannelUpdaterUtil(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChannelUpdaterUtil);
}

uint64_t dispatch thunk of ChannelUpdaterUtil.__allocating_init(contextProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ChannelUpdaterUtil.fetchChannelAndWriteToDatabaseIfNeeded(for:completionHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

unint64_t sub_1ACA55E4C()
{
  unint64_t result = qword_1EB7694B0;
  if (!qword_1EB7694B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7694B0);
  }
  return result;
}

uint64_t sub_1ACA55EA0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACA55ED8(unint64_t a1, int a2, int a3, int a4, void *a5)
{
  sub_1ACA55310(a1, a2, a3, a4, a5, *(void (**)(id, id))(v5 + 16));
}

uint64_t sub_1ACA55EE4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACA55F1C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA55F5C()
{
  uint64_t v1 = type metadata accessor for MediaRequest.Params();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_1ACA39518(*(void *)(v0 + v2), *(void *)(v0 + v2 + 8), *(void *)(v0 + v2 + 16), *(void *)(v0 + v2 + 24), *(void *)(v0 + v2 + 32), *(unsigned char *)(v0 + v2 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = v0 + v2 + *(int *)(v1 + 104);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + ((((((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA56190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MediaRequest.Params();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ACA561F4()
{
  unint64_t result = qword_1E99F0E60;
  if (!qword_1E99F0E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0E60);
  }
  return result;
}

unint64_t sub_1ACA56248()
{
  unint64_t result = qword_1EB772630;
  if (!qword_1EB772630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB772630);
  }
  return result;
}

void sub_1ACA562A0(char a1)
{
  sub_1ACA53F4C(a1, *(void *)(v1 + 16), *(void (**)(void *, unsigned char *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1ACA562AC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACA562E4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA56324()
{
  return sub_1ACA546A8(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1ACA56330()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA56368()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(unsigned __int8 *)(v0 + 32));
}

uint64_t objectdestroy_17Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ACA563DC(void *a1, void *a2)
{
  sub_1ACA541AC(a1, a2, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1ACA563E8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA56430()
{
  return sub_1ACA55628(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1ACA56440()
{
  return objectdestroyTm_0(MEMORY[0x1E4FBC8B8]);
}

uint64_t sub_1ACA5645C()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_1ACA5648C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA564C4()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t getEnumTagSinglePayload for ChannelUpdaterUtil.ChannelUpdaterUtilError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ChannelUpdaterUtil.ChannelUpdaterUtilError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACA5664CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1ACA56674(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1ACA5667C(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ChannelUpdaterUtil.ChannelUpdaterUtilError()
{
  return &type metadata for ChannelUpdaterUtil.ChannelUpdaterUtilError;
}

unint64_t sub_1ACA56698()
{
  unint64_t result = qword_1E99F0E68;
  if (!qword_1E99F0E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0E68);
  }
  return result;
}

uint64_t ArtworkContent.inMemorySize.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for ArtworkContent();
  MEMORY[0x1F4188790](v6);
  int v8 = (uint64_t *)&v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ACA569F0(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v3 + 32))(v5, v8, v2);
    unint64_t v9 = sub_1ACE74EC8();
    uint64_t v11 = sub_1ACA5780C(v9, v10);
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      while (1)
      {
        uint64_t v15 = *(void *)(v11 + 8 * v13 + 32);
        BOOL v16 = __OFADD__(v14, v15);
        v14 += v15;
        if (v16) {
          break;
        }
        if (v12 == ++v13)
        {
          swift_bridgeObjectRelease();
          if ((v14 & 0x8000000000000000) == 0)
          {
            swift_bridgeObjectRelease();
            goto LABEL_11;
          }
LABEL_23:
          sub_1ACE77488();
          __break(1u);
          JUMPOUT(0x1ACA56994);
        }
      }
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = 0;
LABEL_11:
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    uint64_t v17 = *v8;
    unint64_t v18 = v8[1];
    switch(v18 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v17), v17)) {
          goto LABEL_22;
        }
        uint64_t v14 = HIDWORD(v17) - (int)v17;
LABEL_18:
        if (v14 < 0) {
          goto LABEL_23;
        }
LABEL_19:
        sub_1ACA50850(v17, v18);
        break;
      case 2uLL:
        uint64_t v20 = *(void *)(v17 + 16);
        uint64_t v19 = *(void *)(v17 + 24);
        uint64_t v14 = v19 - v20;
        if (!__OFSUB__(v19, v20)) {
          goto LABEL_18;
        }
        __break(1u);
LABEL_15:
        sub_1ACA50850(v17, v18);
        return 0;
      case 3uLL:
        goto LABEL_15;
      default:
        uint64_t v14 = BYTE6(v18);
        goto LABEL_19;
    }
  }
  return v14;
}

uint64_t type metadata accessor for ArtworkContent()
{
  uint64_t result = qword_1EB76F128;
  if (!qword_1EB76F128) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACA569F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArtworkContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_1ACA56A54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1ACA56A6C()
{
  if (*v0) {
    return 7107189;
  }
  else {
    return 1635017060;
  }
}

uint64_t sub_1ACA56A98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACA5887C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACA56AC0()
{
  return 0;
}

void sub_1ACA56ACC(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1ACA56AD8(uint64_t a1)
{
  unint64_t v2 = sub_1ACA57A48();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACA56B14(uint64_t a1)
{
  unint64_t v2 = sub_1ACA57A48();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACA56B58()
{
  return 12383;
}

void sub_1ACA56B68(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1ACA56B74(uint64_t a1)
{
  unint64_t v2 = sub_1ACA57AF0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACA56BB0(uint64_t a1)
{
  unint64_t v2 = sub_1ACA57AF0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACA56BEC()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACA56C30()
{
  return sub_1ACE77B28();
}

uint64_t sub_1ACA56C58()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACA56C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1ACE77848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ACA56D18(uint64_t a1)
{
  unint64_t v2 = sub_1ACA57A9C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACA56D54(uint64_t a1)
{
  unint64_t v2 = sub_1ACA57A9C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ArtworkContent.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E70);
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  MEMORY[0x1F4188790](v2);
  id v28 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v30 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v27 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E78);
  uint64_t v26 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ArtworkContent();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E80);
  uint64_t v12 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACA57A48();
  sub_1ACE77C78();
  sub_1ACA569F0(v33, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = v29;
    uint64_t v15 = v30;
    uint64_t v17 = v27;
    (*(void (**)(char *, uint64_t *, uint64_t))(v29 + 32))(v27, v11, v30);
    LOBYTE(v35) = 1;
    sub_1ACA57A9C();
    unint64_t v18 = v28;
    uint64_t v19 = v34;
    sub_1ACE776D8();
    sub_1ACA57B98(&qword_1E99F0E98);
    uint64_t v20 = v32;
    sub_1ACE77788();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v20);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v19);
  }
  else
  {
    uint64_t v23 = *v11;
    unint64_t v22 = v11[1];
    LOBYTE(v35) = 0;
    sub_1ACA57AF0();
    uint64_t v24 = v34;
    sub_1ACE776D8();
    uint64_t v35 = v23;
    unint64_t v36 = v22;
    sub_1ACA57B44();
    sub_1ACE77788();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v24);
    return sub_1ACA50850(v23, v22);
  }
}

uint64_t ArtworkContent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0EB0);
  uint64_t v41 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  id v45 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0EB8);
  uint64_t v40 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v43 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0EC0);
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ArtworkContent();
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v35 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v35 - v15;
  uint64_t v17 = a1[3];
  uint64_t v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_1ACA57A48();
  uint64_t v18 = v48;
  sub_1ACE77C48();
  if (v18) {
    goto LABEL_7;
  }
  uint64_t v35 = v14;
  unint64_t v36 = v16;
  unint64_t v37 = v11;
  uint64_t v20 = v43;
  uint64_t v19 = v44;
  id v21 = v45;
  uint64_t v48 = v8;
  uint64_t v22 = sub_1ACE776B8();
  if (*(void *)(v22 + 16) != 1)
  {
    uint64_t v28 = sub_1ACE77328();
    swift_allocError();
    uint64_t v29 = v5;
    uint64_t v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0EC8);
    *uint64_t v31 = v48;
    sub_1ACE775E8();
    sub_1ACE77308();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v31, *MEMORY[0x1E4FBBA70], v28);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v29);
LABEL_7:
    uint64_t v26 = (uint64_t)v46;
    return __swift_destroy_boxed_opaque_existential_0(v26);
  }
  if (*(unsigned char *)(v22 + 32))
  {
    LOBYTE(v47) = 1;
    sub_1ACA57A9C();
    sub_1ACE775D8();
    sub_1ACE74F28();
    sub_1ACA57B98(&qword_1E99F0ED0);
    uint64_t v23 = v5;
    uint64_t v24 = (uint64_t)v37;
    uint64_t v25 = v39;
    sub_1ACE77698();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v21, v25);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v23);
    uint64_t v26 = (uint64_t)v46;
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = v24;
  }
  else
  {
    LOBYTE(v47) = 0;
    sub_1ACA57AF0();
    sub_1ACE775D8();
    sub_1ACA57C40();
    sub_1ACE77698();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v19);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v5);
    uint64_t v26 = (uint64_t)v46;
    uint64_t v33 = v35;
    _OWORD *v35 = v47;
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = (uint64_t)v33;
  }
  uint64_t v34 = (uint64_t)v36;
  sub_1ACA57BDC(v27, (uint64_t)v36);
  sub_1ACA57BDC(v34, v38);
  return __swift_destroy_boxed_opaque_existential_0(v26);
}

uint64_t sub_1ACA577D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ArtworkContent.init(from:)(a1, a2);
}

uint64_t sub_1ACA577F0(void *a1)
{
  return ArtworkContent.encode(to:)(a1);
}

uint64_t sub_1ACA5780C(unint64_t a1, unint64_t a2)
{
  unint64_t v3 = a1;
  uint64_t v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_36;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
LABEL_5:
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (!v5) {
    return v6;
  }
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1ACC878F0(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = (v3 >> 59) & 1;
    if ((a2 & 0x1000000000000000) == 0) {
      LOBYTE(v8) = 1;
    }
    uint64_t v9 = 4 << v8;
    if ((a2 & 0x2000000000000000) != 0) {
      unint64_t v10 = v4;
    }
    else {
      unint64_t v10 = v3 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v14 = (a2 & 0x2000000000000000 | v3 & 0x1000000000000000) == 0;
    unint64_t v11 = 15;
    uint64_t v15 = v3;
    while (1)
    {
      uint64_t v4 = v11 & 0xC;
      if (v4 == v9)
      {
        if (v10 <= (unint64_t)sub_1ACD594BC(v11, v3, a2) >> 16)
        {
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          uint64_t v5 = sub_1ACE762E8();
          goto LABEL_5;
        }
      }
      else if (v10 <= v11 >> 16)
      {
        goto LABEL_34;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        sub_1ACE76328();
      }
      else if (v14)
      {
        sub_1ACE77388();
      }
      uint64_t v6 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1ACC878F0(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v6 = v16;
      }
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1ACC878F0(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v16;
      }
      *(void *)(v6 + 16) = v13 + 1;
      *(void *)(v6 + 8 * v13 + 32) = 1;
      if (v4 == v9)
      {
        unint64_t v3 = v15;
        unint64_t v11 = sub_1ACD594BC(v11, v15, a2);
        if ((a2 & 0x1000000000000000) == 0) {
          goto LABEL_13;
        }
LABEL_26:
        if (v10 <= v11 >> 16) {
          goto LABEL_35;
        }
        unint64_t v11 = sub_1ACE762F8();
        if (!--v5) {
          return v6;
        }
      }
      else
      {
        unint64_t v3 = v15;
        if ((a2 & 0x1000000000000000) != 0) {
          goto LABEL_26;
        }
LABEL_13:
        unint64_t v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        if (!--v5) {
          return v6;
        }
      }
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1ACA57A48()
{
  unint64_t result = qword_1E99F0E88;
  if (!qword_1E99F0E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0E88);
  }
  return result;
}

unint64_t sub_1ACA57A9C()
{
  unint64_t result = qword_1E99F0E90;
  if (!qword_1E99F0E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0E90);
  }
  return result;
}

unint64_t sub_1ACA57AF0()
{
  unint64_t result = qword_1E99F0EA0;
  if (!qword_1E99F0EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0EA0);
  }
  return result;
}

unint64_t sub_1ACA57B44()
{
  unint64_t result = qword_1E99F0EA8;
  if (!qword_1E99F0EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0EA8);
  }
  return result;
}

uint64_t sub_1ACA57B98(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1ACE74F28();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACA57BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArtworkContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ACA57C40()
{
  unint64_t result = qword_1E99F0ED8;
  if (!qword_1E99F0ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0ED8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ArtworkContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1ACE74F28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v9 = *a2;
      unint64_t v8 = a2[1];
      sub_1ACA3985C(v9, v8);
      *a1 = v9;
      a1[1] = v8;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ArtworkContent(uint64_t *a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1ACE74F28();
    unint64_t v3 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    uint64_t v5 = *a1;
    unint64_t v6 = a1[1];
    return sub_1ACA50850(v5, v6);
  }
}

uint64_t *initializeWithCopy for ArtworkContent(uint64_t *a1, uint64_t *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1ACE74F28();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    uint64_t v6 = *a2;
    unint64_t v5 = a2[1];
    sub_1ACA3985C(v6, v5);
    *a1 = v6;
    a1[1] = v5;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for ArtworkContent(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_1ACA57FAC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_1ACE74F28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      uint64_t v6 = *a2;
      unint64_t v5 = a2[1];
      sub_1ACA3985C(v6, v5);
      *a1 = v6;
      a1[1] = v5;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1ACA57FAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ArtworkContent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for ArtworkContent(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1ACE74F28();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for ArtworkContent(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1ACA57FAC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1ACE74F28();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for ArtworkContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1ACA581DC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1ACA581EC()
{
  uint64_t result = sub_1ACE74F28();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptSource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ArtworkContent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACA583DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1ACA58404(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkContent.CodingKeys()
{
  return &type metadata for ArtworkContent.CodingKeys;
}

uint64_t sub_1ACA58428()
{
  return 0;
}

ValueMetadata *type metadata accessor for ArtworkContent.DataCodingKeys()
{
  return &type metadata for ArtworkContent.DataCodingKeys;
}

uint64_t getEnumTagSinglePayload for PodcastsBagFeatureFlags.Key(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s18PodcastsFoundation14ArtworkContentO14DataCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACA5852CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkContent.UrlCodingKeys()
{
  return &type metadata for ArtworkContent.UrlCodingKeys;
}

unint64_t sub_1ACA58568()
{
  unint64_t result = qword_1E99F0EE0;
  if (!qword_1E99F0EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0EE0);
  }
  return result;
}

unint64_t sub_1ACA585C0()
{
  unint64_t result = qword_1E99F0EE8;
  if (!qword_1E99F0EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0EE8);
  }
  return result;
}

unint64_t sub_1ACA58618()
{
  unint64_t result = qword_1E99F0EF0;
  if (!qword_1E99F0EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0EF0);
  }
  return result;
}

unint64_t sub_1ACA58670()
{
  unint64_t result = qword_1E99F0EF8;
  if (!qword_1E99F0EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0EF8);
  }
  return result;
}

unint64_t sub_1ACA586C8()
{
  unint64_t result = qword_1E99F0F00;
  if (!qword_1E99F0F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0F00);
  }
  return result;
}

unint64_t sub_1ACA58720()
{
  unint64_t result = qword_1E99F0F08;
  if (!qword_1E99F0F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0F08);
  }
  return result;
}

unint64_t sub_1ACA58778()
{
  unint64_t result = qword_1E99F0F10;
  if (!qword_1E99F0F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0F10);
  }
  return result;
}

unint64_t sub_1ACA587D0()
{
  unint64_t result = qword_1E99F0F18;
  if (!qword_1E99F0F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0F18);
  }
  return result;
}

unint64_t sub_1ACA58828()
{
  unint64_t result = qword_1E99F0F20;
  if (!qword_1E99F0F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0F20);
  }
  return result;
}

uint64_t sub_1ACA5887C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t EpisodeBookmarkStateRule<>.eraseToAnyEpisodeBookmarkStateRule()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)(char a1, char a2)@<X8>)
{
  MEMORY[0x1F4188790](a1);
  int v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v8, v3, a1);
  return sub_1ACA58A2C((uint64_t)v8, a1, a2, a3);
}

uint64_t sub_1ACA58A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)(char a1, char a2)@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v10 + v9, a1, a2);
  *a4 = sub_1ACA58F2C;
  a4[1] = (uint64_t (*)(char, char))v10;
  return result;
}

Swift::Bool __swiftcall AnyEpisodeBookmarkStateRule.canMove(from:to:)(PodcastsFoundation::EpisodeBookmarkState from, PodcastsFoundation::EpisodeBookmarkState to)
{
  return (*v2)(from & 1, to & 1) & 1;
}

uint64_t sub_1ACA58B40(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return (*v2)(*a1, *a2) & 1;
}

unint64_t sub_1ACA58B74()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769168);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84820;
  strcpy((char *)(inited + 32), "notBookmarked");
  *(_WORD *)(inited + 46) = -4864;
  *(void *)(inited + 48) = sub_1ACA58E90;
  *(void *)(inited + 56) = 0;
  *(void *)(inited + 64) = 0x6B72616D6B6F6F62;
  *(void *)(inited + 72) = 0xEA00000000006465;
  *(void *)(inited + 80) = sub_1ACA58E9C;
  *(void *)(inited + 88) = 0;
  unint64_t result = sub_1ACA36628(inited);
  qword_1EB768B20 = result;
  return result;
}

uint64_t defaultEpisodeBookmarkTransitionRules.getter()
{
  if (qword_1EB768B28 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

unint64_t sub_1ACA58C80(uint64_t a1)
{
  unint64_t result = sub_1ACA58CA8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1ACA58CA8()
{
  unint64_t result = qword_1E99F0F28;
  if (!qword_1E99F0F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0F28);
  }
  return result;
}

unint64_t sub_1ACA58D00()
{
  unint64_t result = qword_1EB7679B8;
  if (!qword_1EB7679B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7679B8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AnyEpisodeBookmarkStateRule(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for AnyEpisodeBookmarkStateRule()
{
  return swift_release();
}

void *assignWithCopy for AnyEpisodeBookmarkStateRule(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for AnyEpisodeBookmarkStateRule(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyEpisodeBookmarkStateRule(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyEpisodeBookmarkStateRule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyEpisodeBookmarkStateRule()
{
  return &type metadata for AnyEpisodeBookmarkStateRule;
}

BOOL sub_1ACA58E90(uint64_t a1, char a2)
{
  return (a2 & 1) == 0;
}

uint64_t sub_1ACA58E9C(uint64_t a1, char a2)
{
  return a2 & 1;
}

uint64_t sub_1ACA58EA4()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1ACA58F2C(char a1, char a2)
{
  uint64_t v3 = *(void *)(v2 + 24);
  char v6 = a1 & 1;
  char v5 = a2 & 1;
  return (*(uint64_t (**)(char *, char *))(*(void *)(v3 + 8) + 24))(&v6, &v5) & 1;
}

uint64_t sub_1ACA58FC4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v5 = *(void *)(v44 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v44);
  uint64_t v39 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v36 = (uint64_t)&v35 - v8;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1ACE77138();
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
    sub_1ACA64D14((unint64_t *)&qword_1EB7669E8, (unint64_t *)&qword_1EB7669E0);
    uint64_t result = sub_1ACE76A28();
    a1 = v47;
    uint64_t v43 = v48;
    uint64_t v10 = v49;
    uint64_t v11 = v50;
    uint64_t v12 = v51;
  }
  else
  {
    uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v14 = *(void *)(a1 + 56);
    uint64_t v43 = a1 + 56;
    uint64_t v10 = ~v13;
    uint64_t v15 = -v13;
    if (v15 < 64) {
      uint64_t v16 = ~(-1 << v15);
    }
    else {
      uint64_t v16 = -1;
    }
    uint64_t v12 = v16 & v14;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v11 = 0;
  }
  uint64_t v38 = v10;
  int64_t v42 = (unint64_t)(v10 + 64) >> 6;
  uint64_t v17 = (void (**)(char *, void, uint64_t, uint64_t))(v5 + 56);
  unint64_t v40 = MEMORY[0x1E4FBC860];
  uint64_t v37 = v5;
  uint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v41 = MEMORY[0x1E4FBC838] + 8;
  uint64_t v45 = a1;
LABEL_8:
  uint64_t v19 = v11;
  unint64_t v20 = v12;
  if (a1 < 0)
  {
    do
    {
      uint64_t v22 = sub_1ACE771A8();
      if (!v22) {
        goto LABEL_39;
      }
      uint64_t v46 = v22;
      sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v23 = v52;
      swift_unknownObjectRelease();
      uint64_t v11 = v19;
      uint64_t v12 = v20;
      if (!v23) {
        goto LABEL_39;
      }
LABEL_31:
      id v27 = v23;
      sub_1ACC54794(v27, (uint64_t)v4);
      uint64_t v28 = v44;
      (*v17)(v4, 0, 1, v44);

      if ((*v18)(v4, 1, v28) != 1)
      {
        uint64_t v29 = v36;
        sub_1ACA61468((uint64_t)v4, v36);
        sub_1ACA61468(v29, v39);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v40 = sub_1ACA418BC(0, *(void *)(v40 + 16) + 1, 1, v40);
        }
        uint64_t v30 = v37;
        unint64_t v32 = *(void *)(v40 + 16);
        unint64_t v31 = *(void *)(v40 + 24);
        if (v32 >= v31 >> 1) {
          unint64_t v40 = sub_1ACA418BC(v31 > 1, v32 + 1, 1, v40);
        }
        uint64_t v33 = v39;
        unint64_t v34 = v40;
        *(void *)(v40 + 16) = v32 + 1;
        uint64_t result = sub_1ACA61468(v33, v34+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v32);
        a1 = v45;
        goto LABEL_8;
      }
      uint64_t result = sub_1ACA50E78((uint64_t)v4, &qword_1EB76EFA0);
      uint64_t v19 = v11;
      unint64_t v20 = v12;
      a1 = v45;
    }
    while (v45 < 0);
  }
  if (v20)
  {
    uint64_t v12 = (v20 - 1) & v20;
    unint64_t v21 = __clz(__rbit64(v20)) | (v19 << 6);
    uint64_t v11 = v19;
    goto LABEL_30;
  }
  int64_t v24 = v19 + 1;
  if (!__OFADD__(v19, 1))
  {
    if (v24 < v42)
    {
      unint64_t v25 = *(void *)(v43 + 8 * v24);
      uint64_t v11 = v19 + 1;
      if (v25) {
        goto LABEL_29;
      }
      uint64_t v11 = v19 + 2;
      if (v19 + 2 >= v42) {
        goto LABEL_39;
      }
      unint64_t v25 = *(void *)(v43 + 8 * v11);
      if (v25) {
        goto LABEL_29;
      }
      uint64_t v11 = v19 + 3;
      if (v19 + 3 >= v42) {
        goto LABEL_39;
      }
      unint64_t v25 = *(void *)(v43 + 8 * v11);
      if (v25) {
        goto LABEL_29;
      }
      uint64_t v11 = v19 + 4;
      if (v19 + 4 >= v42) {
        goto LABEL_39;
      }
      unint64_t v25 = *(void *)(v43 + 8 * v11);
      if (v25)
      {
LABEL_29:
        uint64_t v12 = (v25 - 1) & v25;
        unint64_t v21 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_30:
        id v23 = *(id *)(*(void *)(a1 + 48) + 8 * v21);
        if (v23) {
          goto LABEL_31;
        }
        goto LABEL_39;
      }
      uint64_t v11 = v19 + 5;
      if (v19 + 5 < v42)
      {
        unint64_t v25 = *(void *)(v43 + 8 * v11);
        if (!v25)
        {
          uint64_t v26 = v19 + 6;
          while (v42 != v26)
          {
            unint64_t v25 = *(void *)(v43 + 8 * v26++);
            if (v25)
            {
              uint64_t v11 = v26 - 1;
              a1 = v45;
              goto LABEL_29;
            }
          }
          goto LABEL_39;
        }
        goto LABEL_29;
      }
    }
LABEL_39:
    sub_1ACA50A70();
    return v40;
  }
  __break(1u);
  return result;
}

void sub_1ACA594C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a1 + 176);
  long long v69 = *(_OWORD *)(a1 + 160);
  long long v70 = v6;
  long long v71 = *(_OWORD *)(a1 + 192);
  char v72 = *(unsigned char *)(a1 + 208);
  long long v7 = *(_OWORD *)(a1 + 112);
  long long v65 = *(_OWORD *)(a1 + 96);
  long long v66 = v7;
  long long v8 = *(_OWORD *)(a1 + 144);
  long long v67 = *(_OWORD *)(a1 + 128);
  long long v68 = v8;
  long long v9 = *(_OWORD *)(a1 + 48);
  long long v61 = *(_OWORD *)(a1 + 32);
  long long v62 = v9;
  long long v10 = *(_OWORD *)(a1 + 80);
  long long v63 = *(_OWORD *)(a1 + 64);
  long long v64 = v10;
  long long v11 = *(_OWORD *)(a1 + 16);
  long long v59 = *(_OWORD *)a1;
  long long v60 = v11;
  uint64_t v12 = mach_absolute_time();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a2;
  v13[4] = a3;
  sub_1ACA650B0((uint64_t)&v59, (uint64_t)v73);
  sub_1ACA650B0((uint64_t)v73, (uint64_t)&v74);
  uint64_t v14 = v74;
  switch(v78)
  {
    case 1:
      swift_retain();
      sub_1ACA6510C((uint64_t)v73, (void (*)(void, void, void, void, void))sub_1ACA639E4);
      sub_1ACA59D6C(v14, (uint64_t)sub_1ACA650A4, (uint64_t)v13);
      goto LABEL_11;
    case 2:
      long long v55 = v69;
      long long v56 = v70;
      long long v57 = v71;
      char v58 = v72;
      long long v51 = v65;
      long long v52 = v66;
      long long v53 = v67;
      long long v54 = v68;
      long long v47 = v61;
      long long v48 = v62;
      long long v49 = v63;
      long long v50 = v64;
      long long v45 = v59;
      long long v46 = v60;
      swift_retain();
      sub_1ACA6510C((uint64_t)v73, (void (*)(void, void, void, void, void))sub_1ACA639E4);
      sub_1ACA5C4A0(&v45, v14, (uint64_t)sub_1ACA650A4, (uint64_t)v13);
      sub_1ACA6510C((uint64_t)v73, (void (*)(void, void, void, void, void))sub_1ACA63688);
      goto LABEL_13;
    case 3:
      uint64_t v27 = v75;
      swift_retain();
      sub_1ACA6510C((uint64_t)v73, (void (*)(void, void, void, void, void))sub_1ACA639E4);
      sub_1ACA5C150(v14, v27, (uint64_t)sub_1ACA650A4, (uint64_t)v13);
      goto LABEL_11;
    case 4:
      uint64_t v28 = v75;
      uint64_t v29 = v76;
      uint64_t v30 = v77;
      unint64_t v31 = self;
      swift_retain();
      sub_1ACA6510C((uint64_t)v73, (void (*)(void, void, void, void, void))sub_1ACA639E4);
      id v32 = objc_msgSend(v31, sel_sharedInstance);
      id v33 = objc_msgSend(v32, sel_playbackContext);

      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v33;
      *(void *)(v34 + 24) = v14;
      *(void *)(v34 + 32) = v28;
      *(void *)(v34 + 40) = v3;
      long long v35 = v70;
      *(_OWORD *)(v34 + 208) = v69;
      *(_OWORD *)(v34 + 224) = v35;
      *(_OWORD *)(v34 + 240) = v71;
      *(unsigned char *)(v34 + 256) = v72;
      long long v36 = v66;
      *(_OWORD *)(v34 + 144) = v65;
      *(_OWORD *)(v34 + 160) = v36;
      long long v37 = v68;
      *(_OWORD *)(v34 + 176) = v67;
      *(_OWORD *)(v34 + 192) = v37;
      long long v38 = v62;
      *(_OWORD *)(v34 + 80) = v61;
      *(_OWORD *)(v34 + 96) = v38;
      long long v39 = v64;
      *(_OWORD *)(v34 + 112) = v63;
      *(_OWORD *)(v34 + 128) = v39;
      long long v40 = v60;
      *(_OWORD *)(v34 + 48) = v59;
      *(_OWORD *)(v34 + 64) = v40;
      *(void *)(v34 + 264) = v29;
      *(void *)(v34 + 272) = v30;
      *(void *)(v34 + 280) = sub_1ACA650A4;
      *(void *)(v34 + 288) = v13;
      *(void *)&long long v47 = sub_1ACA6520C;
      *((void *)&v47 + 1) = v34;
      *(void *)&long long v45 = MEMORY[0x1E4F143A8];
      *((void *)&v45 + 1) = 1107296256;
      *(void *)&long long v46 = sub_1ACA6DA9C;
      *((void *)&v46 + 1) = &block_descriptor_97;
      uint64_t v41 = _Block_copy(&v45);
      swift_retain();
      swift_retain();
      sub_1ACA64A2C((uint64_t)&v59);
      swift_bridgeObjectRetain();
      id v42 = v33;
      swift_bridgeObjectRetain();
      swift_release();
      objc_msgSend(v42, sel_performBlock_, v41);
      _Block_release(v41);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    case 5:
      swift_retain();
      sub_1ACA6510C((uint64_t)v73, (void (*)(void, void, void, void, void))sub_1ACA639E4);
      sub_1ACA5EC14(v14, (uint64_t)sub_1ACA650A4, (uint64_t)v13);
      goto LABEL_11;
    case 6:
      uint64_t v43 = v75;
      char v44 = v76;
      swift_retain();
      sub_1ACA6510C((uint64_t)v73, (void (*)(void, void, void, void, void))sub_1ACA639E4);
      sub_1ACA5FA10(v14, v43, v44, (uint64_t)sub_1ACA650A4, (uint64_t)v13);
      goto LABEL_11;
    case 7:
      swift_retain();
      sub_1ACA6510C((uint64_t)v73, (void (*)(void, void, void, void, void))sub_1ACA639E4);
      sub_1ACA60340(v14, (uint64_t)sub_1ACA650A4, (uint64_t)v13);
LABEL_11:
      swift_release();
      sub_1ACA6510C((uint64_t)v73, (void (*)(void, void, void, void, void))sub_1ACA63688);
      break;
    case 8:
      long long v55 = v69;
      long long v56 = v70;
      long long v57 = v71;
      char v58 = v72;
      long long v51 = v65;
      long long v52 = v66;
      long long v53 = v67;
      long long v54 = v68;
      long long v47 = v61;
      long long v48 = v62;
      long long v49 = v63;
      long long v50 = v64;
      long long v45 = v59;
      long long v46 = v60;
      swift_retain();
      sub_1ACA5A52C(&v45, (uint64_t)sub_1ACA650A4, (uint64_t)v13);
LABEL_13:
      swift_release();
      break;
    default:
      if (v74 < 0)
      {
        __break(1u);
        JUMPOUT(0x1ACA59BD8);
      }
      uint64_t v15 = self;
      swift_retain();
      id v16 = objc_msgSend(v15, sel_sharedInstance);
      id v17 = objc_msgSend(v16, sel_playbackContext);

      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v17;
      *(void *)(v18 + 24) = v14;
      *(void *)(v18 + 32) = v3;
      long long v19 = v70;
      *(_OWORD *)(v18 + 216) = v69;
      *(_OWORD *)(v18 + 232) = v19;
      *(_OWORD *)(v18 + 248) = v71;
      long long v20 = v66;
      *(_OWORD *)(v18 + 152) = v65;
      *(_OWORD *)(v18 + 168) = v20;
      long long v21 = v68;
      *(_OWORD *)(v18 + 184) = v67;
      *(_OWORD *)(v18 + 200) = v21;
      long long v22 = v62;
      *(_OWORD *)(v18 + 88) = v61;
      *(_OWORD *)(v18 + 104) = v22;
      long long v23 = v64;
      *(_OWORD *)(v18 + 120) = v63;
      *(_OWORD *)(v18 + 136) = v23;
      long long v24 = v60;
      *(_OWORD *)(v18 + 56) = v59;
      *(void *)(v18 + 40) = sub_1ACA650A4;
      *(void *)(v18 + 48) = v13;
      *(unsigned char *)(v18 + 264) = v72;
      *(_OWORD *)(v18 + 72) = v24;
      *(void *)&long long v47 = sub_1ACA652F4;
      *((void *)&v47 + 1) = v18;
      *(void *)&long long v45 = MEMORY[0x1E4F143A8];
      *((void *)&v45 + 1) = 1107296256;
      *(void *)&long long v46 = sub_1ACA6DA9C;
      *((void *)&v46 + 1) = &block_descriptor_103;
      unint64_t v25 = _Block_copy(&v45);
      id v26 = v17;
      swift_retain();
      swift_retain();
      sub_1ACA64A2C((uint64_t)&v59);
      swift_release();
      objc_msgSend(v26, sel_performBlock_, v25);
      _Block_release(v25);
      swift_release();

      break;
  }
}

uint64_t sub_1ACA59BFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *))
{
  sub_1ACA50E14(a1, (uint64_t)v11, &qword_1E99F0F48);
  if (qword_1E99EFF10 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1ACE754C8();
  __swift_project_value_buffer(v5, (uint64_t)qword_1E99F2C40);
  long long v6 = sub_1ACE75498();
  os_log_type_t v7 = sub_1ACE76C08();
  if (os_log_type_enabled(v6, v7))
  {
    long long v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)long long v8 = 134217984;
    v10[0] = sub_1ACBCF6CC(a2);
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v6, v7, "Local library request duration: %fs", v8, 0xCu);
    MEMORY[0x1AD11B340](v8, -1, -1);
  }

  sub_1ACA50E14((uint64_t)v11, (uint64_t)v10, &qword_1E99F0F48);
  return a3(v10);
}

void sub_1ACA59D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v8 = objc_msgSend(self, sel_sharedInstance);
  id v9 = objc_msgSend(v8, sel_playbackContext);

  unint64_t v10 = MEMORY[0x1E4FBC860];
  aBlock[0] = MEMORY[0x1E4FBC860];
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v11; ++i)
    {
      if (objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedLongLong_, *(void *)(a1 + 8 * i + 32)))
      {
        MEMORY[0x1AD118700]();
        if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
          sub_1ACE765C8();
        sub_1ACE76628();
        sub_1ACE76598();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v10 = aBlock[0];
  }
  uint64_t v13 = sub_1ACDF7264(v10);
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = v9;
  v14[3] = v13;
  _OWORD v14[4] = a1;
  v14[5] = v4;
  v14[6] = a2;
  v14[7] = a3;
  aBlock[4] = sub_1ACA64FD8;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_83;
  uint64_t v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v16 = v9;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v16, sel_performBlock_, v15);
  _Block_release(v15);
}

uint64_t sub_1ACA59FA4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v37 = a5;
  uint64_t v9 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v38 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
  sub_1ACA64D14((unint64_t *)&qword_1EB76E300, (unint64_t *)&qword_1EB768F50);
  uint64_t v12 = (void *)sub_1ACE76978();
  id v13 = objc_msgSend(a1, sel_episodesForStoreTrackIDs_, v12);

  if (!v13) {
    goto LABEL_23;
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  unint64_t v14 = sub_1ACE76578();

  if (!(v14 >> 62))
  {
    if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (!v28)
  {
LABEL_22:
    swift_bridgeObjectRelease();
LABEL_23:
    v40[0] = (void *)3;
    return sub_1ACA630B4(v40, v37, a6);
  }
LABEL_4:
  swift_getKeyPath();
  v40[0] = (void *)MEMORY[0x1E4FBC870];
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v15 = sub_1ACA62A80(v14);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v16 = sub_1ACA62C14(v15);
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v16 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F80);
    id v17 = (void *)sub_1ACE77558();
  }
  else
  {
    id v17 = (void *)MEMORY[0x1E4FBC868];
  }
  v40[0] = v17;
  uint64_t v18 = (void *)swift_bridgeObjectRetain();
  sub_1ACA61C80(v18, 1, v40);
  swift_bridgeObjectRelease();
  long long v19 = v40[0];
  swift_retain();
  unint64_t v20 = sub_1ACA62754(a3, (uint64_t)v19);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release_n();
  long long v21 = (void *)MEMORY[0x1E4FBC860];
  v40[0] = (void *)MEMORY[0x1E4FBC860];
  if (!(v20 >> 62))
  {
    uint64_t v22 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v22) {
      goto LABEL_9;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    unint64_t v27 = MEMORY[0x1E4FBC860];
    if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
      goto LABEL_37;
    }
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (!v22) {
    goto LABEL_25;
  }
LABEL_9:
  uint64_t v36 = a6;
  if (v22 < 1)
  {
    __break(1u);
    goto LABEL_41;
  }
  for (uint64_t i = 0; i != v22; ++i)
  {
    if ((v20 & 0xC000000000000001) != 0) {
      id v24 = (id)MEMORY[0x1AD119490](i, v20);
    }
    else {
      id v24 = *(id *)(v20 + 8 * i + 32);
    }
    unint64_t v25 = v24;
    id v26 = objc_msgSend(v24, sel_assetURL, v36, v37, v38);
    if (v26 || (id v26 = objc_msgSend(v25, sel_enclosureURL)) != 0)
    {

      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v27 = (unint64_t)v40[0];
  a6 = v36;
  long long v21 = (void *)MEMORY[0x1E4FBC860];
  if (((unint64_t)v40[0] & 0x8000000000000000) != 0) {
    goto LABEL_37;
  }
LABEL_26:
  if ((v27 & 0x4000000000000000) == 0)
  {
    uint64_t v30 = *(void *)(v27 + 16);
    if (!v30)
    {
LABEL_38:
      swift_release();
      id v32 = (void *)MEMORY[0x1E4FBC860];
LABEL_39:
      sub_1ACA62728((uint64_t)v40);
      sub_1ACA50E14((uint64_t)v40, (uint64_t)v39, &qword_1E99F0F40);
      sub_1ACA62D80((uint64_t)v32, (uint64_t)v39, v37, a6);
      return swift_bridgeObjectRelease();
    }
    goto LABEL_28;
  }
LABEL_37:
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1ACE77508();
  swift_release();
  if (!v30) {
    goto LABEL_38;
  }
LABEL_28:
  v40[0] = v21;
  sub_1ACC82DA4(0, v30 & ~(v30 >> 63), 0);
  if ((v30 & 0x8000000000000000) == 0)
  {
    uint64_t v31 = 0;
    id v32 = v40[0];
    do
    {
      if ((v27 & 0xC000000000000001) != 0) {
        id v33 = (id)MEMORY[0x1AD119490](v31, v27);
      }
      else {
        id v33 = *(id *)(v27 + 8 * v31 + 32);
      }
      sub_1ACC54794(v33, (uint64_t)v11);
      v40[0] = v32;
      unint64_t v35 = v32[2];
      unint64_t v34 = v32[3];
      if (v35 >= v34 >> 1)
      {
        sub_1ACC82DA4(v34 > 1, v35 + 1, 1);
        id v32 = v40[0];
      }
      ++v31;
      v32[2] = v35 + 1;
      sub_1ACA61468((uint64_t)v11, (uint64_t)v32+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v35);
    }
    while (v30 != v31);
    swift_release();
    goto LABEL_39;
  }
LABEL_41:
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1ACA5A52C(long long *a1, uint64_t a2, uint64_t a3)
{
  long long v3 = a1[11];
  *(_OWORD *)&v78[16] = a1[10];
  long long v79 = v3;
  long long v80 = a1[12];
  unsigned __int8 v81 = *((unsigned char *)a1 + 208);
  long long v4 = a1[7];
  *(_OWORD *)&v77[48] = a1[6];
  *(_OWORD *)&v77[64] = v4;
  long long v5 = a1[9];
  *(_OWORD *)&v77[80] = a1[8];
  *(_OWORD *)char v78 = v5;
  long long v6 = a1[3];
  long long v76 = a1[2];
  *(_OWORD *)uint64_t v77 = v6;
  long long v7 = a1[5];
  *(_OWORD *)&v77[16] = a1[4];
  *(_OWORD *)&v77[32] = v7;
  long long v8 = a1[1];
  int v9 = *(unsigned __int16 *)v78 | (v78[2] << 16);
  long long v74 = *a1;
  long long v75 = v8;
  if (v78[0] == 2)
  {
    uint64_t v10 = *((void *)&v74 + 1);
    uint64_t v11 = v74;
    uint64_t v12 = *((void *)&v76 + 1);
    uint64_t v42 = *(void *)v77;
    uint64_t v13 = *((void *)&v80 + 1);
    unsigned __int8 v14 = v81;
    uint64_t v44 = *((void *)&v75 + 1);
    uint64_t v45 = v75;
    char v43 = v76;
    sub_1ACA639E4(v74, *((uint64_t *)&v74 + 1), v75, *((uint64_t *)&v75 + 1), v76);
    swift_bridgeObjectRetain();
    id v15 = *((id *)&v76 + 1);
    uint64_t v46 = *((void *)&v79 + 1);
    uint64_t v47 = v79;
    uint64_t v16 = v80;
    sub_1ACA63B84(v79, *((uint64_t *)&v79 + 1), v80, *((uint64_t *)&v80 + 1), v81);
    int v9 = 0;
    char v17 = 0;
    long long v18 = *(unint64_t *)&v77[8];
    long long v19 = 0uLL;
    long long v20 = xmmword_1ACE85160;
    uint64_t v21 = 3;
    long long v22 = 0uLL;
    long long v23 = 0uLL;
  }
  else
  {
    uint64_t v21 = *(void *)&v77[88];
    long long v40 = *(_OWORD *)&v77[56];
    long long v41 = *(_OWORD *)&v77[72];
    long long v38 = *(_OWORD *)&v77[24];
    long long v39 = *(_OWORD *)&v77[40];
    uint64_t v46 = *((void *)&v79 + 1);
    uint64_t v47 = v79;
    uint64_t v13 = *((void *)&v80 + 1);
    uint64_t v16 = v80;
    unsigned __int8 v14 = v81;
    char v24 = v78[25];
    long long v37 = *(_OWORD *)&v77[8];
    uint64_t v42 = *(void *)v77;
    uint64_t v12 = *((void *)&v76 + 1);
    uint64_t v10 = *((void *)&v74 + 1);
    uint64_t v11 = v74;
    uint64_t v44 = *((void *)&v75 + 1);
    uint64_t v45 = v75;
    char v43 = v76;
    sub_1ACA64A2C((uint64_t)&v74);
    long long v22 = v39;
    long long v23 = v40;
    long long v18 = v37;
    long long v19 = v38;
    char v17 = v24;
    long long v20 = v41;
  }
  *(void *)&long long v52 = v11;
  *((void *)&v52 + 1) = v10;
  *(void *)&long long v53 = v45;
  *((void *)&v53 + 1) = v44;
  LOBYTE(v54) = v43;
  *((void *)&v54 + 1) = v12;
  *(void *)long long v55 = v42;
  *(_OWORD *)&v55[8] = v18;
  *(_OWORD *)&v55[24] = v19;
  *(_OWORD *)&v55[40] = v22;
  *(_OWORD *)&v55[56] = v23;
  *(_OWORD *)&v55[72] = v20;
  *(void *)&v55[88] = v21;
  *(_WORD *)long long v56 = v9;
  v56[2] = BYTE2(v9);
  *(_OWORD *)&v56[8] = *(_OWORD *)&v78[8];
  v56[24] = v78[24];
  v56[25] = v17;
  *(void *)&long long v57 = v47;
  *((void *)&v57 + 1) = v46;
  *(void *)&long long v58 = v16;
  *((void *)&v58 + 1) = v13;
  unsigned __int8 v59 = v14;
  unsigned __int8 v73 = v14;
  long long v60 = v52;
  long long v61 = v53;
  long long v64 = *(_OWORD *)&v55[16];
  long long v65 = *(_OWORD *)&v55[32];
  long long v62 = v54;
  long long v63 = *(_OWORD *)v55;
  long long v68 = *(_OWORD *)&v55[80];
  long long v69 = *(_OWORD *)v56;
  long long v66 = *(_OWORD *)&v55[48];
  long long v67 = *(_OWORD *)&v55[64];
  long long v70 = *(_OWORD *)&v56[16];
  long long v71 = v57;
  long long v72 = v58;
  id v25 = objc_msgSend(self, sel_sharedInstance);
  id v26 = objc_msgSend(v25, sel_playbackContext);

  uint64_t v27 = swift_allocObject();
  long long v28 = v57;
  *(_OWORD *)(v27 + 176) = *(_OWORD *)&v56[16];
  *(_OWORD *)(v27 + 192) = v28;
  *(_OWORD *)(v27 + 208) = v72;
  *(unsigned char *)(v27 + 224) = v73;
  long long v29 = v67;
  *(_OWORD *)(v27 + 112) = v66;
  *(_OWORD *)(v27 + 128) = v29;
  long long v30 = v69;
  *(_OWORD *)(v27 + 144) = v68;
  *(_OWORD *)(v27 + 160) = v30;
  long long v31 = v63;
  *(_OWORD *)(v27 + 48) = v62;
  *(_OWORD *)(v27 + 64) = v31;
  long long v32 = v65;
  *(_OWORD *)(v27 + 80) = v64;
  *(_OWORD *)(v27 + 96) = v32;
  long long v33 = v61;
  *(_OWORD *)(v27 + 16) = v60;
  *(_OWORD *)(v27 + 32) = v33;
  *(void *)(v27 + 232) = v49;
  *(void *)(v27 + 240) = a2;
  *(void *)(v27 + 248) = a3;
  *(void *)(v27 + 256) = v26;
  aBlock[4] = sub_1ACA64E7C;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_77;
  unint64_t v34 = _Block_copy(aBlock);
  sub_1ACA64A2C((uint64_t)&v52);
  swift_retain();
  swift_retain();
  id v35 = v26;
  swift_release();
  objc_msgSend(v35, sel_performBlock_, v34);
  _Block_release(v34);

  return sub_1ACA64E8C((uint64_t)&v52);
}

unint64_t sub_1ACA5A94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  MEMORY[0x1F4188790](v7 - 8);
  int v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v44 = *(void *)(v47 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v47);
  uint64_t v46 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v43 = (uint64_t)&v40 - v12;
  long long v13 = *(_OWORD *)(a1 + 176);
  long long v61 = *(_OWORD *)(a1 + 160);
  long long v62 = v13;
  v63[0] = *(_OWORD *)(a1 + 192);
  LOBYTE(v63[1]) = *(unsigned char *)(a1 + 208);
  long long v14 = *(_OWORD *)(a1 + 112);
  long long v57 = *(_OWORD *)(a1 + 96);
  long long v58 = v14;
  long long v15 = *(_OWORD *)(a1 + 144);
  long long v59 = *(_OWORD *)(a1 + 128);
  long long v60 = v15;
  long long v16 = *(_OWORD *)(a1 + 48);
  long long v53 = *(_OWORD *)(a1 + 32);
  long long v54 = v16;
  long long v17 = *(_OWORD *)(a1 + 80);
  long long v55 = *(_OWORD *)(a1 + 64);
  long long v56 = v17;
  long long v18 = *(_OWORD *)(a1 + 16);
  long long v51 = *(_OWORD *)a1;
  long long v52 = v18;
  id v19 = sub_1ACA5AEDC();
  if (!v19)
  {
    *(void *)&long long v51 = 3;
    return sub_1ACA630B4((void **)&v51, a3, a4);
  }
  long long v20 = v19;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  unint64_t result = sub_1ACE76EE8();
  unint64_t v22 = result;
  *(void *)&long long v51 = MEMORY[0x1E4FBC860];
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1ACE77508();
    unint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  id v40 = v20;
  if (v23)
  {
    if (v23 < 1)
    {
      __break(1u);
      goto LABEL_40;
    }
    for (uint64_t i = 0; i != v23; ++i)
    {
      if ((v22 & 0xC000000000000001) != 0) {
        id v25 = (id)MEMORY[0x1AD119490](i, v22);
      }
      else {
        id v25 = *(id *)(v22 + 8 * i + 32);
      }
      id v26 = v25;
      id v27 = objc_msgSend(v25, sel_assetURL, v40, v41, v42);
      if (v27 || (id v27 = objc_msgSend(v26, sel_enclosureURL)) != 0)
      {

        sub_1ACE773A8();
        sub_1ACE773E8();
        sub_1ACE773F8();
        sub_1ACE773B8();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v28 = v51;
    if ((v51 & 0x8000000000000000) != 0) {
      goto LABEL_36;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = MEMORY[0x1E4FBC860];
    if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
      goto LABEL_36;
    }
  }
  if ((v28 & 0x4000000000000000) == 0)
  {
    uint64_t v29 = *(void *)(v28 + 16);
    unint64_t result = swift_retain();
    if (!v29)
    {
LABEL_37:
      uint64_t v33 = MEMORY[0x1E4FBC860];
LABEL_38:
      swift_release_n();
      sub_1ACA62728((uint64_t)v50);
      sub_1ACA50E14((uint64_t)v50, (uint64_t)v48, &qword_1E99F0F40);
      sub_1ACABEBF4(v33, (uint64_t)v48, 0, &v51);
      v48[10] = v61;
      v48[11] = v62;
      v49[0] = v63[0];
      *(_OWORD *)((char *)v49 + 10) = *(_OWORD *)((char *)v63 + 10);
      v48[6] = v57;
      v48[7] = v58;
      v48[8] = v59;
      v48[9] = v60;
      v48[2] = v53;
      v48[3] = v54;
      v48[4] = v55;
      v48[5] = v56;
      v48[0] = v51;
      v48[1] = v52;
      sub_1ACA643C0(v48, v41, v42);

      return sub_1ACA6347C((uint64_t)&v51);
    }
    goto LABEL_22;
  }
LABEL_36:
  swift_retain();
  unint64_t result = sub_1ACE77508();
  uint64_t v29 = result;
  if (!result) {
    goto LABEL_37;
  }
LABEL_22:
  if (v29 >= 1)
  {
    uint64_t v30 = 0;
    unint64_t v45 = v28 & 0xC000000000000001;
    long long v31 = (void (**)(char *, void, uint64_t, uint64_t))(v44 + 56);
    long long v32 = (unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
    uint64_t v33 = MEMORY[0x1E4FBC860];
    do
    {
      if (v45) {
        id v34 = (id)MEMORY[0x1AD119490](v30, v28);
      }
      else {
        id v34 = *(id *)(v28 + 8 * v30 + 32);
      }
      id v35 = v34;
      sub_1ACC54794(v35, (uint64_t)v9);
      uint64_t v36 = v47;
      (*v31)(v9, 0, 1, v47);

      if ((*v32)(v9, 1, v36) == 1)
      {
        sub_1ACA50E78((uint64_t)v9, &qword_1EB76EFA0);
      }
      else
      {
        uint64_t v37 = v43;
        sub_1ACA61468((uint64_t)v9, v43);
        sub_1ACA61468(v37, v46);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v33 = sub_1ACA418BC(0, *(void *)(v33 + 16) + 1, 1, v33);
        }
        unint64_t v39 = *(void *)(v33 + 16);
        unint64_t v38 = *(void *)(v33 + 24);
        if (v39 >= v38 >> 1) {
          uint64_t v33 = sub_1ACA418BC(v38 > 1, v39 + 1, 1, v33);
        }
        *(void *)(v33 + 16) = v39 + 1;
        sub_1ACA61468(v46, v33+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v39);
      }
      ++v30;
    }
    while (v29 != v30);
    goto LABEL_38;
  }
LABEL_40:
  __break(1u);
  return result;
}

id sub_1ACA5AEDC()
{
  uint64_t v41 = v0[3];
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[11];
  uint64_t v6 = v0[12];
  uint64_t v5 = v0[13];
  uint64_t v50 = v0[15];
  unint64_t v7 = v0[16];
  uint64_t v8 = v0[17];
  __int16 v9 = *((_WORD *)v0 + 72);
  if (v9 == 2) {
    return 0;
  }
  uint64_t v36 = v0[19];
  uint64_t v37 = v0[20];
  int v38 = *((unsigned __int8 *)v0 + 32);
  uint64_t v39 = *v0;
  uint64_t v11 = v0[14];
  sub_1ACE761B8();
  uint64_t v49 = v8;
  id v46 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v47 = v11;
  sub_1ACA63A78(v2, v1, v3, v4, v6, v5, v11, v50, v7);
  uint64_t v12 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v46, sel_initWithEntityName_, v12);

  uint64_t v42 = v2;
  uint64_t v43 = v3;
  char v44 = v4;
  unint64_t v14 = v7 >> 8;
  uint64_t v45 = v6;
  char v48 = v9;
  id v15 = EpisodeListSettings.playPredicate.getter();
  objc_msgSend(v13, sel_setPredicate_, v15);

  int v16 = BYTE1(v7);
  char v17 = v7;
  if (BYTE1(v7))
  {
    uint64_t v18 = v41;
    if (v16 == 4)
    {
      id v19 = objc_msgSend(self, sel_seasonSortDescriptors_, 4);
      sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
      sub_1ACE76578();
    }
    else
    {
      EpisodeSortType.descriptors.getter(v14);
    }
  }
  else
  {
    id v20 = objc_msgSend(self, sel_sortDescriptorsForPubDateAscending_, 1);
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
    sub_1ACE76578();

    uint64_t v18 = v41;
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  uint64_t v21 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setSortDescriptors_, v21);

  if (v38 == 4)
  {
    uint64_t v22 = v37;
    if (!v18) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v22 = v37;
    if (v38 != 2 || !*(void *)(v39 + 16)) {
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRetain();
  id v23 = objc_msgSend(v13, sel_predicate);
  if (v23)
  {
    char v24 = v23;
    id v25 = self;
    char v26 = v17;
    id v27 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    id v28 = objc_msgSend(v25, sel_predicateForEpisodeUuid_, v27);

    char v17 = v26;
    id v29 = [v24 OR:v28];

    objc_msgSend(v13, sel_setPredicate_, v29);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = v37;
LABEL_17:
  char v40 = v17;
  if (sub_1ACA61630())
  {
    objc_msgSend(v13, sel_setFetchOffset_, v22);
    objc_msgSend(v13, sel_setFetchLimit_, v36);
  }
  id v30 = sub_1ACA61A0C();
  if (v30)
  {
    long long v31 = v30;
    id v10 = v13;
    id v32 = objc_msgSend(v13, sel_predicate);
    if (v32)
    {
      uint64_t v33 = v32;
      id v34 = objc_msgSend(v32, sel_AND_, v31);
      objc_msgSend(v13, sel_setPredicate_, v34);
      sub_1ACA6371C(v42, v1, v43, v44, v45, v5, v47, v50, v40, v49, v48);
    }
    else
    {
      sub_1ACA6371C(v42, v1, v43, v44, v45, v5, v47, v50, v40, v49, v48);
    }
  }
  else
  {
    sub_1ACA6371C(v42, v1, v43, v44, v6, v5, v47, v50, v17, v49, v48);
    return v13;
  }
  return v10;
}

void sub_1ACA5B5C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v92 = *(void *)(v94 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v94);
  uint64_t v93 = (uint64_t)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v91 = (uint64_t)&v73 - v16;
  id v17 = objc_msgSend(a1, sel_podcastForStoreId_, a2);
  if (!v17)
  {
    *(void *)&long long v98 = 3;
    sub_1ACA630B4((void **)&v98, a4, a5);
    return;
  }
  uint64_t v18 = v17;
  id v19 = objc_msgSend(v17, sel_uuid);
  if (!v19)
  {
    id v47 = objc_msgSend(v18, sel_episodes);
    if (v47)
    {
      char v48 = v47;
      sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
      sub_1ACA64D14((unint64_t *)&qword_1EB7669E8, (unint64_t *)&qword_1EB7669E0);
      uint64_t v49 = sub_1ACE76988();

      uint64_t v50 = sub_1ACA58FC4(v49);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v50 = MEMORY[0x1E4FBC860];
    }
    sub_1ACA62728((uint64_t)&v98);
    sub_1ACA50E14((uint64_t)&v98, (uint64_t)v95, &qword_1E99F0F40);
    sub_1ACA62D80(v50, (uint64_t)v95, a4, a5);
    swift_bridgeObjectRelease();

    return;
  }
  id v20 = v19;
  uint64_t v77 = a1;
  uint64_t v88 = a4;
  uint64_t v89 = a5;
  uint64_t v21 = sub_1ACE761B8();
  uint64_t v23 = v22;

  int v24 = *(unsigned __int16 *)(a6 + 144);
  int v25 = v24 | (*(unsigned __int8 *)(a6 + 146) << 16);
  id v87 = v18;
  if (v24 == 2)
  {
    LODWORD(v76) = MTPodcastHidesPlayedEpisodesResolved((int)objc_msgSend(v18, sel_hidesPlayedEpisodes));
    char v26 = *(void **)(a6 + 8);
    *(void *)&long long v73 = *(void *)a6;
    uint64_t v27 = *(void *)(a6 + 16);
    uint64_t v28 = *(void *)(a6 + 24);
    int v29 = *(unsigned __int8 *)(a6 + 32);
    id v30 = *(void **)(a6 + 40);
    unint64_t v90 = *(void *)(a6 + 48);
    *(void *)&long long v75 = v21;
    uint64_t v31 = *(void *)(a6 + 56);
    uint64_t v32 = *(void *)(a6 + 176);
    *(void *)&long long v74 = v23;
    uint64_t v34 = *(void *)(a6 + 192);
    uint64_t v79 = *(void *)(a6 + 184);
    uint64_t v33 = v79;
    uint64_t v80 = v32;
    uint64_t v78 = v34;
    uint64_t v35 = *(void *)(a6 + 200);
    unsigned __int8 v36 = *(unsigned char *)(a6 + 208);
    id v86 = v26;
    uint64_t v82 = v28;
    uint64_t v83 = v27;
    int v81 = v29;
    sub_1ACA639E4(v73, (uint64_t)v26, v27, v28, v29);
    uint64_t v84 = v31;
    unsigned __int8 v37 = v36;
    int v25 = v76;
    swift_bridgeObjectRetain();
    uint64_t v85 = v30;
    id v38 = v30;
    sub_1ACA63B84(v32, v33, v34, v35, v37);
    uint64_t v39 = v75;
    char v40 = 0;
    long long v41 = 0uLL;
    long long v42 = (unint64_t)v74;
    uint64_t v43 = v73;
    long long v44 = xmmword_1ACE85170;
    uint64_t v45 = 3;
    long long v46 = 0uLL;
  }
  else
  {
    uint64_t v45 = *(void *)(a6 + 136);
    long long v51 = *(_OWORD *)(a6 + 120);
    long long v75 = *(_OWORD *)(a6 + 104);
    long long v76 = v51;
    long long v52 = *(_OWORD *)(a6 + 88);
    long long v73 = *(_OWORD *)(a6 + 72);
    long long v74 = v52;
    uint64_t v39 = *(void *)(a6 + 64);
    swift_bridgeObjectRelease();
    uint64_t v53 = *(void *)(a6 + 176);
    uint64_t v79 = *(void *)(a6 + 184);
    uint64_t v80 = v53;
    uint64_t v35 = *(void *)(a6 + 200);
    uint64_t v78 = *(void *)(a6 + 192);
    unsigned __int8 v37 = *(unsigned char *)(a6 + 208);
    char v40 = *(unsigned char *)(a6 + 169);
    uint64_t v54 = *(void *)(a6 + 56);
    unint64_t v90 = *(void *)(a6 + 48);
    long long v55 = *(void **)(a6 + 40);
    uint64_t v84 = v54;
    uint64_t v85 = v55;
    uint64_t v43 = *(void *)a6;
    id v86 = *(id *)(a6 + 8);
    uint64_t v56 = *(void *)(a6 + 16);
    uint64_t v82 = *(void *)(a6 + 24);
    uint64_t v83 = v56;
    int v81 = *(unsigned __int8 *)(a6 + 32);
    sub_1ACA64A2C(a6);
    long long v46 = v75;
    long long v44 = v76;
    long long v42 = v73;
    long long v41 = v74;
  }
  char v57 = *(unsigned char *)(a6 + 168);
  *(void *)&long long v111 = v43;
  *((void *)&v111 + 1) = v86;
  *(void *)&long long v112 = v83;
  *((void *)&v112 + 1) = v82;
  LOBYTE(v113) = v81;
  *((void *)&v113 + 1) = v85;
  *(void *)&long long v114 = v90;
  *((void *)&v114 + 1) = v84;
  *(void *)&v115[0] = v39;
  *(_OWORD *)((char *)v115 + 8) = v42;
  *(_OWORD *)((char *)&v115[1] + 8) = v41;
  *(_OWORD *)((char *)&v115[2] + 8) = v46;
  *(_OWORD *)((char *)&v115[3] + 8) = v44;
  *((void *)&v115[4] + 1) = v45;
  LOWORD(v116[0]) = v25;
  BYTE2(v116[0]) = BYTE2(v25);
  *(_OWORD *)((char *)v116 + 8) = *(_OWORD *)(a6 + 152);
  BYTE8(v116[1]) = v57;
  BYTE9(v116[1]) = v40;
  *(void *)&long long v117 = v80;
  *((void *)&v117 + 1) = v79;
  *(void *)&long long v118 = v78;
  *((void *)&v118 + 1) = v35;
  unsigned __int8 v119 = v37;
  long long v108 = v116[1];
  long long v109 = v117;
  v110[0] = v118;
  LOBYTE(v110[1]) = v37;
  long long v104 = v115[2];
  long long v105 = v115[3];
  long long v106 = v115[4];
  long long v107 = v116[0];
  long long v100 = v113;
  long long v101 = v114;
  long long v102 = v115[0];
  long long v103 = v115[1];
  long long v98 = v111;
  long long v99 = v112;
  id v58 = sub_1ACA5AEDC();
  if (!v58)
  {
    *(void *)&long long v98 = 3;
    sub_1ACA630B4((void **)&v98, v88, v89);
    sub_1ACA64E8C((uint64_t)&v111);

    return;
  }
  long long v59 = v58;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  unint64_t v60 = sub_1ACE76EE8();
  unint64_t v61 = v60;
  id v86 = v59;
  if (v60 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_1ACE77508();
    if (v62) {
      goto LABEL_14;
    }
LABEL_30:
    uint64_t v66 = MEMORY[0x1E4FBC860];
LABEL_31:
    swift_bridgeObjectRelease_n();
    sub_1ACA62728((uint64_t)v97);
    sub_1ACA50E14((uint64_t)v97, (uint64_t)v95, &qword_1E99F0F40);
    sub_1ACABEBF4(v66, (uint64_t)v95, 0, &v98);
    v95[10] = v108;
    v95[11] = v109;
    v96[0] = v110[0];
    *(_OWORD *)((char *)v96 + 10) = *(_OWORD *)((char *)v110 + 10);
    v95[6] = v104;
    v95[7] = v105;
    v95[8] = v106;
    v95[9] = v107;
    v95[2] = v100;
    v95[3] = v101;
    v95[4] = v102;
    v95[5] = v103;
    v95[0] = v98;
    v95[1] = v99;
    sub_1ACA643C0(v95, v88, v89);

    sub_1ACA64E8C((uint64_t)&v111);
    sub_1ACA6347C((uint64_t)&v98);
    return;
  }
  uint64_t v62 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v62) {
    goto LABEL_30;
  }
LABEL_14:
  if (v62 >= 1)
  {
    uint64_t v63 = 0;
    unint64_t v90 = v61 & 0xC000000000000001;
    long long v64 = (void (**)(char *, void, uint64_t, uint64_t))(v92 + 56);
    long long v65 = (unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48);
    uint64_t v66 = MEMORY[0x1E4FBC860];
    do
    {
      if (v90) {
        id v67 = (id)MEMORY[0x1AD119490](v63, v61);
      }
      else {
        id v67 = *(id *)(v61 + 8 * v63 + 32);
      }
      id v68 = v67;
      sub_1ACC54794(v68, (uint64_t)v13);
      uint64_t v69 = v94;
      (*v64)(v13, 0, 1, v94);

      if ((*v65)(v13, 1, v69) == 1)
      {
        sub_1ACA50E78((uint64_t)v13, &qword_1EB76EFA0);
      }
      else
      {
        uint64_t v70 = v91;
        sub_1ACA61468((uint64_t)v13, v91);
        sub_1ACA61468(v70, v93);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v66 = sub_1ACA418BC(0, *(void *)(v66 + 16) + 1, 1, v66);
        }
        unint64_t v72 = *(void *)(v66 + 16);
        unint64_t v71 = *(void *)(v66 + 24);
        if (v72 >= v71 >> 1) {
          uint64_t v66 = sub_1ACA418BC(v71 > 1, v72 + 1, 1, v66);
        }
        *(void *)(v66 + 16) = v72 + 1;
        sub_1ACA61468(v93, v66+ ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))+ *(void *)(v92 + 72) * v72);
      }
      ++v63;
    }
    while (v62 != v63);
    goto LABEL_31;
  }
  __break(1u);
}

uint64_t sub_1ACA5BDAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v31 = a5;
  uint64_t v32 = a6;
  uint64_t v13 = a9;
  uint64_t v14 = sub_1ACE74D88();
  uint64_t v30 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = (void *)sub_1ACE76178();
  id v18 = objc_msgSend(a1, sel_playlistForUuid_, v17);

  if (v18)
  {
    uint64_t v29 = a4;
    id v19 = objc_msgSend(v18, sel_episodes);
    unint64_t v20 = MEMORY[0x1E4FBC860];
    if (v19)
    {
      uint64_t v25 = a7;
      id v26 = v18;
      uint64_t v27 = a9;
      uint64_t v28 = a8;
      unint64_t v50 = MEMORY[0x1E4FBC860];
      id v21 = v19;
      sub_1ACE76B98();
      id v24 = v21;

      sub_1ACA65308(&qword_1E99F0F88, MEMORY[0x1E4F27660]);
      sub_1ACE76FE8();
      while (*((void *)&v38 + 1))
      {
        sub_1ACA3AA44(&v37, v35);
        sub_1ACA33128((uint64_t)v35, (uint64_t)&v33);
        sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
        if ((swift_dynamicCast() & 1) == 0) {
          uint64_t v34 = 0;
        }
        uint64_t v22 = __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
        if (v34)
        {
          MEMORY[0x1AD118700](v22);
          if (*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1ACE765C8();
          }
          sub_1ACE76628();
          sub_1ACE76598();
        }
        sub_1ACE76FE8();
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v14);
      unint64_t v20 = v50;

      uint64_t v13 = v27;
      a8 = v28;
      a7 = v25;
      id v18 = v26;
    }
    sub_1ACA5D0F0(v31, v20, v32, a7, v35);
    swift_bridgeObjectRelease();
    long long v47 = v35[10];
    long long v48 = v35[11];
    v49[0] = v36[0];
    *(_OWORD *)((char *)v49 + 10) = *(_OWORD *)((char *)v36 + 10);
    long long v43 = v35[6];
    long long v44 = v35[7];
    long long v45 = v35[8];
    long long v46 = v35[9];
    long long v39 = v35[2];
    long long v40 = v35[3];
    long long v41 = v35[4];
    long long v42 = v35[5];
    long long v37 = v35[0];
    long long v38 = v35[1];
    v36[0] = v49[0];
    *(_OWORD *)((char *)v36 + 10) = *(_OWORD *)((char *)v49 + 10);
    sub_1ACA643C0(v35, a8, v13);

    return sub_1ACA6347C((uint64_t)&v37);
  }
  else
  {
    *(void *)&long long v37 = 3;
    return sub_1ACA630B4((void **)&v37, a8, a9);
  }
}

void sub_1ACA5C150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = objc_msgSend(self, sel_sharedInstance);
  id v10 = objc_msgSend(v9, sel_playbackContext);

  uint64_t v11 = (void *)swift_allocObject();
  _OWORD v11[2] = a1;
  v11[3] = a2;
  _OWORD v11[4] = v10;
  v11[5] = v4;
  v11[6] = a3;
  v11[7] = a4;
  _OWORD v14[4] = sub_1ACA64DB4;
  v14[5] = v11;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  _OWORD v14[2] = sub_1ACA6DA9C;
  v14[3] = &block_descriptor_71;
  uint64_t v12 = _Block_copy(v14);
  swift_bridgeObjectRetain();
  id v13 = v10;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performBlock_, v12);
  _Block_release(v12);
}

void sub_1ACA5C2AC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v9 = self;
  id v10 = (void *)sub_1ACE76178();
  id v11 = objc_msgSend(v9, sel_upNextForPodcastUuid_ctx_, v10, a3);

  if (v11)
  {
    id v12 = objc_msgSend(v11, sel_episodeUuid);
    if (!v12)
    {
      sub_1ACE761B8();
      id v12 = (id)sub_1ACE76178();
      swift_bridgeObjectRelease();
    }
    id v13 = objc_msgSend(a3, sel_episodeForUuid_, v12);

    if (v13)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0CB8);
      uint64_t v14 = *(void *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) - 8);
      unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1ACE843F0;
      id v17 = v13;
      sub_1ACC54794(v17, v16 + v15);
      sub_1ACA62728((uint64_t)v19);
      sub_1ACA50E14((uint64_t)v19, (uint64_t)v18, &qword_1E99F0F40);
      sub_1ACA62D80(v16, (uint64_t)v18, a5, a6);
      swift_bridgeObjectRelease();

      return;
    }
  }
  v19[0] = (void *)3;
  sub_1ACA630B4(v19, a5, a6);
}

void sub_1ACA5C4A0(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  long long v10 = a1[11];
  long long v62 = a1[10];
  long long v63 = v10;
  long long v64 = a1[12];
  char v65 = *((unsigned char *)a1 + 208);
  long long v11 = a1[7];
  long long v58 = a1[6];
  long long v59 = v11;
  long long v12 = a1[9];
  long long v60 = a1[8];
  long long v61 = v12;
  long long v13 = a1[3];
  long long v54 = a1[2];
  long long v55 = v13;
  long long v14 = a1[5];
  long long v56 = a1[4];
  long long v57 = v14;
  long long v15 = a1[1];
  long long v52 = *a1;
  long long v53 = v15;
  id v16 = objc_msgSend(self, sel_sharedInstance);
  id v17 = objc_msgSend(v16, sel_playbackContext);

  long long v18 = a1[11];
  long long v48 = a1[10];
  long long v49 = v18;
  long long v50 = a1[12];
  char v51 = *((unsigned char *)a1 + 208);
  long long v19 = a1[7];
  long long v44 = a1[6];
  long long v45 = v19;
  long long v20 = a1[9];
  long long v46 = a1[8];
  long long v47 = v20;
  long long v21 = a1[3];
  long long v40 = a1[2];
  long long v41 = v21;
  long long v22 = a1[5];
  long long v42 = a1[4];
  long long v43 = v22;
  long long v23 = a1[1];
  long long v38 = *a1;
  long long v39 = v23;
  id v24 = sub_1ACA5AEDC();
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = swift_allocObject();
    long long v27 = v63;
    *(_OWORD *)(v26 + 200) = v62;
    *(_OWORD *)(v26 + 216) = v27;
    *(_OWORD *)(v26 + 232) = v64;
    long long v28 = v59;
    *(_OWORD *)(v26 + 136) = v58;
    *(_OWORD *)(v26 + 152) = v28;
    long long v29 = v61;
    *(_OWORD *)(v26 + 168) = v60;
    *(_OWORD *)(v26 + 184) = v29;
    long long v30 = v55;
    *(_OWORD *)(v26 + 72) = v54;
    *(_OWORD *)(v26 + 88) = v30;
    long long v31 = v57;
    *(_OWORD *)(v26 + 104) = v56;
    *(_OWORD *)(v26 + 120) = v31;
    long long v32 = v53;
    *(_OWORD *)(v26 + 40) = v52;
    *(void *)(v26 + 16) = v17;
    *(void *)(v26 + 24) = v25;
    *(void *)(v26 + 32) = v5;
    *(unsigned char *)(v26 + 248) = v65;
    *(_OWORD *)(v26 + 56) = v32;
    *(void *)(v26 + 256) = a2;
    *(void *)(v26 + 264) = a3;
    *(void *)(v26 + 272) = a4;
    *(void *)&long long v40 = sub_1ACA64A14;
    *((void *)&v40 + 1) = v26;
    *(void *)&long long v38 = MEMORY[0x1E4F143A8];
    *((void *)&v38 + 1) = 1107296256;
    *(void *)&long long v39 = sub_1ACA6DA9C;
    *((void *)&v39 + 1) = &block_descriptor_55;
    uint64_t v33 = _Block_copy(&v38);
    sub_1ACA64A2C((uint64_t)&v52);
    id v34 = v17;
    id v35 = v25;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v34, sel_performBlock_, v33);
    _Block_release(v33);
  }
  else
  {
    unsigned __int8 v36 = (void *)swift_allocObject();
    _OWORD v36[2] = v17;
    v36[3] = a2;
    v36[4] = v5;
    v36[5] = a3;
    v36[6] = a4;
    *(void *)&long long v40 = sub_1ACA64924;
    *((void *)&v40 + 1) = v36;
    *(void *)&long long v38 = MEMORY[0x1E4F143A8];
    *((void *)&v38 + 1) = 1107296256;
    *(void *)&long long v39 = sub_1ACA6DA9C;
    *((void *)&v39 + 1) = &block_descriptor_49;
    long long v37 = _Block_copy(&v38);
    id v35 = v17;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v35, sel_performBlock_, v37);
    _Block_release(v37);
  }
}

uint64_t sub_1ACA5C7CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v7 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  long long v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v11 = (void *)sub_1ACE76558();
  id v12 = objc_msgSend(a1, sel_episodesForUuids_, v11);

  if (v12)
  {
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
    sub_1ACE76578();

    uint64_t v13 = sub_1ACA4DE44(a2);
    swift_getKeyPath();
    v33[0] = (void *)MEMORY[0x1E4FBC870];
    swift_retain();
    unint64_t v14 = swift_bridgeObjectRetain();
    unint64_t v15 = sub_1ACA63C8C(v14);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v16 = sub_1ACA63E10(v15);
    swift_bridgeObjectRelease();
    swift_release();
    if (*(void *)(v16 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F78);
      id v17 = (void *)sub_1ACE77558();
    }
    else
    {
      id v17 = (void *)MEMORY[0x1E4FBC868];
    }
    v33[0] = v17;
    long long v18 = (void *)swift_bridgeObjectRetain();
    sub_1ACA61FE4(v18, 1, v33);
    swift_bridgeObjectRelease();
    long long v19 = v33[0];
    swift_retain();
    unint64_t v20 = sub_1ACA62858(v13, (uint64_t)v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1ACE77508();
      swift_bridgeObjectRelease();
      if (v28)
      {
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_1ACE77508();
        swift_bridgeObjectRelease();
        if (!v21)
        {
          swift_bridgeObjectRelease();
          long long v23 = (void *)MEMORY[0x1E4FBC860];
LABEL_16:
          sub_1ACA62728((uint64_t)v33);
          sub_1ACA50E14((uint64_t)v33, (uint64_t)v32, &qword_1E99F0F40);
          sub_1ACA62D80((uint64_t)v23, (uint64_t)v32, v30, v31);
          return swift_bridgeObjectRelease();
        }
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v21)
      {
LABEL_7:
        v33[0] = (void *)MEMORY[0x1E4FBC860];
        sub_1ACC82DA4(0, v21 & ~(v21 >> 63), 0);
        if ((v21 & 0x8000000000000000) == 0)
        {
          uint64_t v22 = 0;
          long long v23 = v33[0];
          do
          {
            if ((v20 & 0xC000000000000001) != 0) {
              id v24 = (id)MEMORY[0x1AD119490](v22, v20);
            }
            else {
              id v24 = *(id *)(v20 + 8 * v22 + 32);
            }
            sub_1ACC54794(v24, (uint64_t)v10);
            v33[0] = v23;
            unint64_t v26 = v23[2];
            unint64_t v25 = v23[3];
            if (v26 >= v25 >> 1)
            {
              sub_1ACC82DA4(v25 > 1, v26 + 1, 1);
              long long v23 = v33[0];
            }
            ++v22;
            v23[2] = v26 + 1;
            sub_1ACA61468((uint64_t)v10, (uint64_t)v23+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v26);
          }
          while (v21 != v22);
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
        __break(1u);
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease();
    v33[0] = (void *)3;
    return sub_1ACA630B4(v33, v30, v31);
  }
LABEL_22:
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void sub_1ACA5CBD0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_uuid);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1ACE761B8();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1ACA5CC38(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1ACE76178();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setUuid_);
}

uint64_t sub_1ACA5CCA8(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, void *a5, uint64_t a6, uint64_t a7)
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  unint64_t v11 = sub_1ACE76EE8();
  if (a5[2])
  {
    uint64_t v12 = a5[4];
    uint64_t v13 = a5[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  sub_1ACA5D0F0(a4, v11, v12, v13, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15[10] = v17[10];
  v15[11] = v17[11];
  v16[0] = v18[0];
  *(_OWORD *)((char *)v16 + 10) = *(_OWORD *)((char *)v18 + 10);
  v15[6] = v17[6];
  v15[7] = v17[7];
  unsigned char v15[8] = v17[8];
  v15[9] = v17[9];
  _OWORD v15[2] = v17[2];
  v15[3] = v17[3];
  v15[4] = v17[4];
  v15[5] = v17[5];
  v15[0] = v17[0];
  v15[1] = v17[1];
  sub_1ACA643C0(v15, a6, a7);
  return sub_1ACA6347C((uint64_t)v17);
}

uint64_t sub_1ACA5CE14(void (*a1)(unsigned char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1ACA50E14(a4, (uint64_t)v11, &qword_1E99F0F40);
  swift_bridgeObjectRetain();
  sub_1ACA63870(a4);
  sub_1ACABEBF4(a3, (uint64_t)v11, 0, v9);
  v11[10] = v9[10];
  v11[11] = v9[11];
  v12[0] = v10[0];
  *(_OWORD *)((char *)v12 + 10) = *(_OWORD *)((char *)v10 + 10);
  v11[6] = v9[6];
  v11[7] = v9[7];
  v11[8] = v9[8];
  v11[9] = v9[9];
  _OWORD v11[2] = v9[2];
  v11[3] = v9[3];
  _OWORD v11[4] = v9[4];
  v11[5] = v9[5];
  v11[0] = v9[0];
  v11[1] = v9[1];
  sub_1ACA63474((uint64_t)v11);
  sub_1ACA50E14((uint64_t)v11, (uint64_t)v8, &qword_1E99F0F48);
  a1(v8);
  return sub_1ACA6347C((uint64_t)v9);
}

uint64_t sub_1ACA5CF08(void (*a1)(unsigned char *), uint64_t a2, _OWORD *a3)
{
  long long v5 = a3[11];
  v13[10] = a3[10];
  v13[11] = v5;
  v14[0] = a3[12];
  *(_OWORD *)((char *)v14 + 10) = *(_OWORD *)((char *)a3 + 202);
  long long v6 = a3[7];
  v13[6] = a3[6];
  v13[7] = v6;
  long long v7 = a3[9];
  v13[8] = a3[8];
  v13[9] = v7;
  long long v8 = a3[3];
  v13[2] = a3[2];
  v13[3] = v8;
  long long v9 = a3[5];
  v13[4] = a3[4];
  v13[5] = v9;
  long long v10 = a3[1];
  v13[0] = *a3;
  v13[1] = v10;
  sub_1ACA63474((uint64_t)v13);
  sub_1ACA50E14((uint64_t)v13, (uint64_t)v12, &qword_1E99F0F48);
  sub_1ACA64BF4((uint64_t)a3);
  a1(v12);
  return sub_1ACA6347C((uint64_t)a3);
}

void sub_1ACA5CFBC(void *a1, void (*a2)(unsigned char *))
{
  if (a1 == (void *)3)
  {
    sub_1ACA62728((uint64_t)v4);
    sub_1ACA50E14((uint64_t)v4, (uint64_t)v8, &qword_1E99F0F40);
    sub_1ACABEBF4(MEMORY[0x1E4FBC860], (uint64_t)v8, 0, v5);
    v8[10] = v5[10];
    v8[11] = v5[11];
    v9[0] = v6[0];
    *(_OWORD *)((char *)v9 + 10) = *(_OWORD *)((char *)v6 + 10);
    v8[6] = v5[6];
    v8[7] = v5[7];
    v8[8] = v5[8];
    v8[9] = v5[9];
    _DWORD v8[2] = v5[2];
    v8[3] = v5[3];
    v8[4] = v5[4];
    v8[5] = v5[5];
    v8[0] = v5[0];
    v8[1] = v5[1];
    sub_1ACA63474((uint64_t)v8);
    sub_1ACA50E14((uint64_t)v8, (uint64_t)v7, &qword_1E99F0F48);
    a2(v7);
    sub_1ACA6347C((uint64_t)v5);
  }
  else
  {
    *(void *)&v8[0] = a1;
    sub_1ACA63458((uint64_t)v8);
    sub_1ACA50E14((uint64_t)v8, (uint64_t)v7, &qword_1E99F0F48);
    sub_1ACA63448(a1);
    a2(v7);
    sub_1ACA63464(a1);
  }
}

uint64_t sub_1ACA5D0F0@<X0>(long long *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  long long v11 = a1[1];
  long long v128 = *a1;
  long long v129 = v11;
  long long v12 = a1[3];
  long long v130 = a1[2];
  long long v131 = v12;
  uint64_t v67 = *((void *)a1 + 8);
  uint64_t v68 = *((void *)a1 + 9);
  uint64_t v69 = *((void *)a1 + 10);
  uint64_t v70 = *((void *)a1 + 11);
  uint64_t v71 = *((void *)a1 + 12);
  uint64_t v72 = *((void *)a1 + 13);
  uint64_t v13 = *((void *)a1 + 16);
  uint64_t v73 = *((void *)a1 + 14);
  uint64_t v74 = *((void *)a1 + 15);
  uint64_t v75 = *((void *)a1 + 17);
  unint64_t v14 = *((unsigned __int16 *)a1 + 72) | (*((unsigned __int8 *)a1 + 146) << 16);
  int v126 = *(_DWORD *)((char *)a1 + 147);
  char v127 = *((unsigned char *)a1 + 151);
  uint64_t v15 = *((void *)a1 + 19);
  long long v16 = a1[11];
  long long v122 = a1[10];
  long long v123 = v16;
  long long v124 = a1[12];
  char v125 = *((unsigned char *)a1 + 208);
  sub_1ACA62728((uint64_t)v132);
  if (a4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1ACA64740(a2, a3, a4);
    uint64_t v17 = v13;
    char v19 = v18;
    swift_bridgeObjectRelease();
    BOOL v20 = (v19 & 1) == 0;
    uint64_t v13 = v17;
    if (v20) {
      int64_t v21 = v5;
    }
    else {
      int64_t v21 = 0;
    }
    int64_t v78 = v21;
  }
  else
  {
    int64_t v78 = 0;
  }
  long long v76 = a5;
  uint64_t v77 = v13;
  if (v14 == 2) {
    goto LABEL_15;
  }
  if (v13 != 5) {
    goto LABEL_15;
  }
  *((void *)&v101 + 1) = &type metadata for Podcasts;
  *(void *)&long long v102 = sub_1ACA56248();
  LOBYTE(v100) = 57;
  LODWORD(v66) = v14;
  uint64_t v5 = v74;
  sub_1ACA63A78(v67, v68, v69, v70, v71, v72, v73, v74, 5);
  sub_1ACE75298();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v100);
  unint64_t v14 = v14;
  long long v6 = &v100;
  sub_1ACA6371C(v67, v68, v69, v70, v71, v72, v73, v74, v13, v75, v14);
  if ((v65 & 1) == 0)
  {
LABEL_15:
    id v24 = (_OWORD *)(v78 + v15);
    if (__OFADD__(v78, v15))
    {
      __break(1u);
    }
    else
    {
      uint64_t v66 = v15;
      uint64_t v5 = a2 >> 62;
      if (!(a2 >> 62))
      {
        a5 = *(_OWORD **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if ((uint64_t)a5 >= (uint64_t)v24) {
          v15 += v78;
        }
        else {
          uint64_t v15 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v15 >= v78)
        {
          uint64_t v30 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_22;
        }
        goto LABEL_58;
      }
    }
    swift_bridgeObjectRetain();
    a5 = (_OWORD *)sub_1ACE77508();
    swift_bridgeObjectRelease();
    if ((uint64_t)a5 >= (uint64_t)v24) {
      v15 += v78;
    }
    else {
      uint64_t v15 = (uint64_t)a5;
    }
    if (v15 >= v78)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1ACE77508();
      swift_bridgeObjectRelease();
LABEL_22:
      if (v30 >= v78)
      {
        if ((v78 & 0x8000000000000000) == 0)
        {
          if (v5)
          {
            swift_bridgeObjectRetain();
            uint64_t v31 = sub_1ACE77508();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v31 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v31 >= v15)
          {
            if ((v15 & 0x8000000000000000) == 0)
            {
              if ((a2 & 0xC000000000000001) == 0 || v78 == v15)
              {
LABEL_34:
                id v34 = v24;
                int v35 = v14;
                if (v5)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v36 = sub_1ACE77518();
                  uint64_t v37 = v39;
                  int64_t v78 = v40;
                  uint64_t v38 = v41;
                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v36 = a2 & 0xFFFFFFFFFFFFFF8;
                  uint64_t v37 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
                  uint64_t v38 = (2 * v15) | 1;
                  swift_bridgeObjectRetain();
                }
                uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F60);
                uint64_t v120 = v42;
                uint64_t v43 = sub_1ACA51EA4(&qword_1E99F0F68, &qword_1E99F0F60);
                uint64_t v121 = v43;
                long long v44 = (void *)swift_allocObject();
                v119[0] = v44;
                _OWORD v44[2] = v36;
                v44[3] = v37;
                v44[4] = v78;
                v44[5] = v38;
                if ((uint64_t)a5 <= (uint64_t)v34)
                {
                  long long v45 = v132;
                }
                else
                {
                  v80[0] = v128;
                  v80[1] = v129;
                  v80[2] = v130;
                  v80[3] = v131;
                  uint64_t v81 = v67;
                  uint64_t v82 = v68;
                  uint64_t v83 = v69;
                  uint64_t v84 = v70;
                  uint64_t v85 = v71;
                  uint64_t v86 = v72;
                  uint64_t v87 = v73;
                  uint64_t v88 = v74;
                  uint64_t v89 = v77;
                  uint64_t v90 = v75;
                  char v92 = BYTE2(v35);
                  __int16 v91 = v35;
                  int v93 = v126;
                  char v94 = v127;
                  uint64_t v95 = v66;
                  long long v96 = v122;
                  long long v97 = v123;
                  long long v98 = v124;
                  char v99 = v125;
                  sub_1ACA5E174(a2, (uint64_t)v80, v15, (uint64_t)&v100);
                  sub_1ACA50E14((uint64_t)&v100, (uint64_t)v80, &qword_1E99F0F40);
                  long long v45 = v80;
                }
                sub_1ACA50E14((uint64_t)v45, (uint64_t)&v100, &qword_1E99F0F40);
                a5 = v76;
                goto LABEL_67;
              }
              if (v78 < (unint64_t)v15)
              {
                sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
                int64_t v32 = v78;
                do
                {
                  int64_t v33 = v32 + 1;
                  sub_1ACE772B8();
                  int64_t v32 = v33;
                }
                while (v15 != v33);
                goto LABEL_34;
              }
LABEL_63:
              __break(1u);
              goto LABEL_64;
            }
LABEL_62:
            __break(1u);
            goto LABEL_63;
          }
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = (void *)sub_1ACB2E1BC(v78);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1ACE84830;
  *(void *)(v23 + 32) = v22;
  *(void *)&long long v100 = v23;
  sub_1ACE76598();
  id v24 = v22;
  sub_1ACA6EE20(a2);
  a2 = v100;
  unint64_t v14 = (unint64_t)v100 >> 62;
  if (!((unint64_t)v100 >> 62))
  {
    if (v15 < *(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_12;
    }
LABEL_65:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F50);
    uint64_t v120 = v42;
    uint64_t v43 = sub_1ACA51EA4(&qword_1E99F0F58, &qword_1E99F0F50);
    uint64_t v121 = v43;

    v119[0] = a2;
    sub_1ACA50E14((uint64_t)v132, (uint64_t)v80, &qword_1E99F0F40);
LABEL_66:
    sub_1ACA50E14((uint64_t)v80, (uint64_t)&v100, &qword_1E99F0F40);
LABEL_67:
    __swift_project_boxed_opaque_existential_1(v119, v42);
    long long v62 = (char *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    uint64_t v64 = sub_1ACA5DA78((void (*)(char *, char *))sub_1ACA5DA40, 0, v42, v62, MEMORY[0x1E4FBC248], v43, MEMORY[0x1E4FBC278], v63);
    sub_1ACA50E14((uint64_t)&v100, (uint64_t)v80, &qword_1E99F0F40);
    sub_1ACABEBF4(v64, (uint64_t)v80, 0, a5);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v119);
  }
LABEL_64:
  swift_bridgeObjectRetain();
  uint64_t v61 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (v15 >= v61) {
    goto LABEL_65;
  }
LABEL_12:
  uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F60);
  uint64_t v121 = sub_1ACA51EA4(&qword_1E99F0F68, &qword_1E99F0F60);
  uint64_t result = swift_allocObject();
  uint64_t v26 = v15;
  v119[0] = result;
  if (v15 < -1)
  {
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  long long v27 = (void *)result;
  uint64_t v28 = v26;
  if (!v14)
  {
    uint64_t v29 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_43;
  }
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_1ACE77508();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v46 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1ACE77508();
    uint64_t result = swift_bridgeObjectRelease();
LABEL_43:
    if (v29 > v28)
    {
      uint64_t v79 = v24;
      uint64_t v47 = v13;
      uint64_t v48 = v28 + 1;
      if (v28 != -1 && (a2 & 0xC000000000000001) != 0)
      {
        sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
        uint64_t v49 = 0;
        do
        {
          uint64_t v50 = v49 + 1;
          sub_1ACE772B8();
          uint64_t v49 = v50;
        }
        while (v48 != v50);
      }
      if (v14)
      {
        swift_bridgeObjectRetain();
        uint64_t v51 = sub_1ACE77518();
        uint64_t v52 = v55;
        uint64_t v54 = v56;
        uint64_t v53 = v57;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v51 = a2 & 0xFFFFFFFFFFFFFF8;
        uint64_t v52 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
        uint64_t v53 = (2 * v48) | 1;
        swift_bridgeObjectRetain();
        uint64_t v54 = 0;
      }
      void v27[2] = v51;
      v27[3] = v52;
      v27[4] = v54;
      v27[5] = v53;
      long long v58 = v6[21];
      long long v100 = v6[20];
      long long v101 = v58;
      long long v59 = v6[23];
      long long v102 = v6[22];
      long long v103 = v59;
      uint64_t v104 = v67;
      uint64_t v105 = v68;
      uint64_t v106 = v69;
      uint64_t v107 = v70;
      uint64_t v108 = v71;
      uint64_t v109 = v72;
      uint64_t v110 = v73;
      uint64_t v111 = v74;
      uint64_t v112 = v47;
      uint64_t v113 = v75;
      char v115 = BYTE2(v66);
      __int16 v114 = v66;
      *(_DWORD *)((char *)v6 + 147) = v126;
      char v116 = v127;
      uint64_t v117 = v28;
      long long v60 = v6[17];
      v6[10] = v6[16];
      v6[11] = v60;
      v6[12] = v6[18];
      char v118 = v125;
      sub_1ACA5E174(a2, (uint64_t)&v100, v28, (uint64_t)v80);
      swift_bridgeObjectRelease();

      sub_1ACA50E14((uint64_t)v80, (uint64_t)&v100, &qword_1E99F0F40);
      sub_1ACA50E14((uint64_t)&v100, (uint64_t)v80, &qword_1E99F0F40);
      uint64_t v42 = v120;
      uint64_t v43 = v121;
      a5 = v76;
      goto LABEL_66;
    }
    goto LABEL_69;
  }
LABEL_70:
  __break(1u);
  return result;
}

void sub_1ACA5DA40(id *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1ACA5DA78(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  long long v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](a1);
  uint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_1ACE76FD8();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  int64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_1ACE763A8();
  uint64_t v61 = sub_1ACE75FA8();
  uint64_t v56 = sub_1ACE77428();
  sub_1ACE773C8();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  long long v59 = v30;
  uint64_t result = sub_1ACE76398();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    int64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    id v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_1ACE76FE8();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_1ACE77408();
      if (!--v31)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  uint64_t v36 = v51;
LABEL_9:
  sub_1ACE76FE8();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_1ACE77408();
      sub_1ACE76FE8();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

void sub_1ACA5E174(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  int v9 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t v13 = *(void *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 88);
  uint64_t v15 = *(void *)(a2 + 96);
  uint64_t v14 = *(void *)(a2 + 104);
  uint64_t v16 = *(void *)(a2 + 112);
  uint64_t v17 = *(void *)(a2 + 120);
  uint64_t v18 = *(void *)(a2 + 128);
  uint64_t v19 = *(void *)(a2 + 136);
  int v20 = *(unsigned __int8 *)(a2 + 146);
  int v21 = *(unsigned __int16 *)(a2 + 144);
  unint64_t v22 = a1 >> 62;
  uint64_t v23 = *(void *)(a2 + 152);
  if (v22)
  {
    uint64_t v43 = *(void *)(a2 + 64);
    uint64_t v45 = *(void *)(a2 + 80);
    uint64_t v35 = *(void *)(a2 + 152);
    uint64_t v37 = *(void *)(a2 + 8);
    uint64_t v49 = *(void *)(a2 + 96);
    uint64_t v51 = *(void *)(a2 + 104);
    uint64_t v47 = *(void *)(a2 + 88);
    uint64_t v53 = *(void *)(a2 + 72);
    uint64_t v39 = *(void *)(a2 + 136);
    uint64_t v41 = *(void *)(a2 + 128);
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    uint64_t v23 = v35;
    uint64_t v7 = v37;
    uint64_t v19 = v39;
    uint64_t v18 = v41;
    uint64_t v11 = v43;
    uint64_t v13 = v45;
    uint64_t v14 = v51;
    uint64_t v10 = v53;
    uint64_t v12 = v47;
    uint64_t v15 = v49;
    if (v33 > a3)
    {
LABEL_3:
      uint64_t v52 = v10;
      uint64_t v54 = a4;
      uint64_t v48 = v15;
      uint64_t v50 = v14;
      uint64_t v44 = v13;
      uint64_t v46 = v12;
      uint64_t v40 = v18;
      uint64_t v42 = v11;
      uint64_t v36 = v7;
      uint64_t v38 = v19;
      uint64_t v34 = v23;
      if ((a1 & 0xC000000000000001) == 0)
      {
        if (a3 < 0)
        {
          __break(1u);
        }
        else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a3)
        {
          id v24 = *(id *)(a1 + 8 * a3 + 32);
LABEL_7:
          uint64_t v25 = v24;
          id v26 = objc_msgSend(v24, sel_uuid);

          if (v26)
          {
            int v27 = v21 | (v20 << 16);
            uint64_t v28 = sub_1ACE761B8();
            uint64_t v30 = v29;

            if (v9 == 4)
            {
              uint64_t v55 = v8;
              uint64_t v56 = v36;
              uint64_t v57 = v28;
              uint64_t v58 = v30;
              char v59 = 4;
              uint64_t v60 = 0;
              uint64_t v61 = 0;
              uint64_t v62 = 0;
              uint64_t v63 = v42;
              uint64_t v64 = v52;
              uint64_t v65 = v44;
              uint64_t v66 = v46;
              uint64_t v67 = v48;
              uint64_t v68 = v50;
              uint64_t v69 = v16;
              uint64_t v70 = v17;
              uint64_t v71 = v40;
              uint64_t v72 = v38;
              __int16 v73 = v27;
              char v74 = BYTE2(v27);
              uint64_t v75 = v34;
              uint64_t v76 = a3;
              __int16 v77 = 1;
              long long v78 = 0u;
              long long v79 = 0u;
              char v80 = -1;
              nullsub_1(&v55);
              sub_1ACA50E14((uint64_t)&v55, v54, &qword_1E99F0F40);
              sub_1ACA63A5C(v42, v52, v44, v46, v48, v50, v16, v17, v40, v38, v27);
              swift_bridgeObjectRetain();
              return;
            }
            if (v9 == 2)
            {
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
              uint64_t v31 = swift_allocObject();
              *(_OWORD *)(v31 + 16) = xmmword_1ACE843F0;
              *(void *)(v31 + 32) = v28;
              *(void *)(v31 + 40) = v30;
              uint64_t v55 = v31;
              uint64_t v56 = 0;
              uint64_t v57 = 0;
              uint64_t v58 = 0;
              char v59 = 2;
              uint64_t v60 = 0;
              uint64_t v61 = 0;
              uint64_t v62 = 0;
              uint64_t v63 = v42;
              uint64_t v64 = v52;
              uint64_t v65 = v44;
              uint64_t v66 = v46;
              uint64_t v67 = v48;
              uint64_t v68 = v50;
              uint64_t v69 = v16;
              uint64_t v70 = v17;
              uint64_t v71 = v40;
              uint64_t v72 = v38;
              char v74 = BYTE2(v27);
              __int16 v73 = v27;
              uint64_t v75 = v34;
              uint64_t v76 = a3;
              __int16 v77 = 1;
              long long v78 = 0u;
              long long v79 = 0u;
              char v80 = -1;
              nullsub_1(&v55);
              sub_1ACA50E14((uint64_t)&v55, v54, &qword_1E99F0F40);
              sub_1ACA63A5C(v42, v52, v44, v46, v48, v50, v16, v17, v40, v38, v27);
              return;
            }
            swift_bridgeObjectRelease();
          }
          sub_1ACA62728((uint64_t)&v55);
          uint64_t v32 = v54;
          goto LABEL_16;
        }
        __break(1u);
        return;
      }
      id v24 = (id)MEMORY[0x1AD119490](a3, a1);
      goto LABEL_7;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) > a3)
  {
    goto LABEL_3;
  }
  sub_1ACA62728((uint64_t)&v55);
  uint64_t v32 = a4;
LABEL_16:
  sub_1ACA50E14((uint64_t)&v55, v32, &qword_1E99F0F40);
}

void sub_1ACA5E4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F38);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3);
  long long v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(self, sel_sharedInstance);
  id v12 = objc_msgSend(v11, sel_playbackContext);

  sub_1ACA642F8(a2, (uint64_t)v10, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v20, v3);
  unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v14 = (v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (*(unsigned __int8 *)(v4 + 80) + v14 + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v16 = swift_allocObject();
  sub_1ACA61468((uint64_t)v10, v16 + v13);
  *(void *)(v16 + v14) = v12;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v16 + v15, v6, v3);
  aBlock[4] = sub_1ACA614CC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_5;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = v12;
  swift_release();
  objc_msgSend(v18, sel_performBlock_, v17);
  _Block_release(v17);
}

void sub_1ACA5E7B8(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  MEMORY[0x1F4188790](v4 - 8);
  long long v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  sub_1ACA615AC(a1 + *(int *)(v14 + 48), (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1ACA50E78((uint64_t)v9, &qword_1EB7731B0);
    if (*(void *)(a1 + 88))
    {
LABEL_3:
      unint64_t v15 = (void *)sub_1ACE76178();
      id v16 = objc_msgSend(a2, sel_episodeForUuid_, v15);

      if (!v16) {
        goto LABEL_17;
      }
      goto LABEL_13;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    id v17 = objc_msgSend(a2, sel_persistentStoreCoordinator);
    if (v17)
    {
      id v18 = v17;
      uint64_t v19 = sub_1ACE74E18();
      uint64_t v29 = v14;
      uint64_t v20 = (void *)v19;
      id v21 = objc_msgSend(v18, sel_managedObjectIDForURIRepresentation_, v19);

      uint64_t v14 = v29;
      if (v21)
      {
        id v22 = objc_msgSend(a2, sel_objectWithID_, v21);

        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        self;
        uint64_t v23 = swift_dynamicCastObjCClass();
        if (!v23)
        {
          id v27 = 0;
LABEL_20:

          goto LABEL_21;
        }
        id v24 = (void *)v23;
        id v25 = v22;
        id v22 = v24;
LABEL_14:
        id v26 = objc_msgSend(v22, sel_assetURL);
        if (v26 || (id v26 = objc_msgSend(v22, sel_enclosureURL)) != 0)
        {

          id v27 = v22;
          sub_1ACC54794(v27, (uint64_t)v6);
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 0, 1, v14);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F38);
          sub_1ACE766F8();

LABEL_22:
          return;
        }
        id v27 = v22;
        goto LABEL_20;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (*(void *)(a1 + 88)) {
      goto LABEL_3;
    }
  }
  if (*(unsigned char *)(a1 + 56))
  {
LABEL_17:
    id v27 = 0;
LABEL_21:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F38);
    sub_1ACE766F8();
    goto LABEL_22;
  }
  if ((*(void *)(a1 + 48) & 0x8000000000000000) == 0)
  {
    id v16 = objc_msgSend(a2, sel_episodeForStoreTrackID_);
    if (v16)
    {
LABEL_13:
      id v22 = v16;
      goto LABEL_14;
    }
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1ACA5EC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1ACA5EC3C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v114 = a4;
  uint64_t v115 = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v145 = (uint64_t)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v144 = (uint64_t)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v143 = (uint64_t)&v111 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v121 = (uint64_t)&v111 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v154 = (uint64_t)&v111 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  char v118 = (char *)&v111 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v142 = (uint64_t)&v111 - v22;
  MEMORY[0x1F4188790](v21);
  id v24 = (char *)&v111 - v23;
  uint64_t v25 = sub_1ACE74F28();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v111 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0);
  uint64_t v29 = MEMORY[0x1F4188790](v158);
  uint64_t v117 = (uint64_t)&v111 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v32 = MEMORY[0x1F4188790](v31);
  uint64_t v153 = (uint64_t)&v111 - v33;
  MEMORY[0x1F4188790](v32);
  uint64_t v37 = *(char **)(a1 + 16);
  if (!v37)
  {
    id v52 = 0;
    uint64_t v25 = MEMORY[0x1E4FBC860];
LABEL_40:
    if (qword_1E99EFF10 != -1) {
      goto LABEL_48;
    }
    goto LABEL_41;
  }
  uint64_t v38 = *(unsigned __int8 *)(v34 + 80);
  uint64_t v159 = (uint64_t)&v111 - v35;
  id v155 = a2;
  uint64_t v39 = v37;
  uint64_t v40 = v10;
  uint64_t v41 = a1 + ((v38 + 32) & ~v38);
  uint64_t v148 = *(void *)(v34 + 72);
  uint64_t v151 = (unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  uint64_t v152 = v36;
  unsigned __int8 v119 = (void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v120 = (void (**)(char *, char *, uint64_t))(v26 + 32);
  char v116 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  uint64_t v113 = a1;
  swift_bridgeObjectRetain();
  uint64_t v42 = v41;
  uint64_t v37 = 0;
  unint64_t v43 = MEMORY[0x1E4FBC860];
  uint64_t v112 = v39;
  uint64_t v44 = v39;
  uint64_t v45 = v159;
  uint64_t v149 = v28;
  uint64_t v150 = v40;
  long long v122 = v24;
  uint64_t v147 = v25;
  while (1)
  {
    id v156 = v44;
    uint64_t v157 = v42;
    sub_1ACA642F8(v42, v45, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
    sub_1ACA615AC(v45 + v158[8], (uint64_t)v24);
    if ((*v151)(v24, 1, v25) == 1)
    {
      sub_1ACA50E78((uint64_t)v24, &qword_1EB7731B0);
    }
    else
    {
      (*v120)(v28, v24, v25);
      id v46 = objc_msgSend(v155, sel_persistentStoreCoordinator);
      if (!v46) {
        goto LABEL_11;
      }
      uint64_t v47 = v46;
      uint64_t v48 = (void *)sub_1ACE74E18();
      id v49 = objc_msgSend(v47, sel_managedObjectIDForURIRepresentation_, v48);

      id v24 = v122;
      if (v49)
      {
        id v50 = objc_msgSend(v155, sel_objectWithID_, v49);

        (*v119)(v28, v25);
        self;
        uint64_t v51 = swift_dynamicCastObjCClass();
        if (v51)
        {
          id v52 = (id)v51;
          uint64_t v45 = v159;
          uint64_t v53 = v153;
          sub_1ACA642F8(v159, v153, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
          goto LABEL_16;
        }
      }
      else
      {
LABEL_11:
        (*v119)(v28, v25);
      }
      uint64_t v45 = v159;
    }
    uint64_t v53 = v153;
    sub_1ACA642F8(v45, v153, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
    if (*(void *)(v53 + 40))
    {
      swift_bridgeObjectRetain();
      uint64_t v54 = (void *)sub_1ACE76178();
      id v52 = objc_msgSend(v155, sel_episodeForUuid_, v54);
      swift_bridgeObjectRelease();

      uint64_t v45 = v159;
    }
    else
    {
      id v52 = 0;
    }
LABEL_16:
    sub_1ACA64360(v53, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
    uint64_t v55 = v152;
    sub_1ACA642F8(v45, v152, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
    if (v52)
    {
      sub_1ACA64360(v55, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
      uint64_t v56 = v52;
      id v57 = v52;
    }
    else
    {
      v146 = v37;
      if (*(unsigned char *)(v55 + 8))
      {
        unint64_t v124 = v43;
        sub_1ACA64360(v55, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
        id v123 = 0;
LABEL_33:
        uint64_t v68 = v45;
        uint64_t v69 = v117;
        sub_1ACA642F8(v68, v117, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
        uint64_t v70 = v158;
        uint64_t v71 = v158[9];
        uint64_t v72 = (uint64_t *)(v69 + v158[10]);
        uint64_t v73 = *v72;
        uint64_t v132 = v72[1];
        char v74 = (uint64_t *)(v69 + v158[16]);
        uint64_t v75 = *v74;
        uint64_t v130 = v74[1];
        uint64_t v140 = *(void *)v69;
        uint64_t v141 = v73;
        int v139 = *(unsigned __int8 *)(v69 + 8);
        uint64_t v137 = *(void *)(v69 + 16);
        uint64_t v138 = v75;
        int v136 = *(unsigned __int8 *)(v69 + 24);
        uint64_t v76 = *(void *)(v69 + 32);
        uint64_t v128 = *(void *)(v69 + 40);
        __int16 v77 = (uint64_t *)(v69 + v158[11]);
        double v78 = *(double *)(v69 + v71);
        uint64_t v79 = v69 + v158[12];
        uint64_t v81 = *v77;
        uint64_t v80 = v77[1];
        uint64_t v134 = v81;
        uint64_t v135 = v76;
        uint64_t v127 = v80;
        sub_1ACA615AC(v79, v142);
        uint64_t v82 = sub_1ACE750A8();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v145, 1, 1, v82);
        uint64_t v83 = v70[14];
        uint64_t v84 = (uint64_t *)(v69 + v70[13]);
        uint64_t v85 = v84[1];
        uint64_t v133 = *v84;
        int v131 = *(unsigned __int8 *)(v69 + v83);
        LOBYTE(v161[0]) = 2;
        v160[0] = 4;
        v162[0] = 5;
        uint64_t v86 = (uint64_t *)(v69 + v70[17]);
        uint64_t v87 = v86[1];
        uint64_t v129 = *v86;
        uint64_t v88 = (uint64_t)v118;
        (*v116)(v118, 1, 1, v25);
        uint64_t v89 = *(void *)(v69 + 48);
        uint64_t v90 = *(void *)(v69 + 56);
        __int16 v91 = (uint64_t *)(v69 + v70[15]);
        uint64_t v92 = v91[1];
        uint64_t v125 = *v91;
        uint64_t v126 = v89;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v93 = v128;
        swift_bridgeObjectRetain();
        uint64_t v94 = v127;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v95 = sub_1ACA3675C(MEMORY[0x1E4FBC860]);
        sub_1ACA64360(v69, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
        uint64_t v110 = v90;
        *((void *)&v109 + 1) = v93;
        *(void *)&long long v109 = v135;
        uint64_t v96 = v143;
        PodcastsMediaLibrary.MediaItem.init(title:assetURL:feedURL:storeTrackId:podcastStoreId:uuid:guid:externalContentID:author:duration:playhead:artworkURL:itemDescription:serverArtwork:isSubscribable:releaseDate:album:isSubscriptionActive:isExplicit:isRestricted:subscriptionRequired:itemType:priceType:mediaKind:episodeNumber:seasonNumber:podcastIsSerial:showArtworkTemplateURL:artworkInfo:transcriptIdentifier:isAppleNewsEpisode:isAppleMusicEpisode:transcriptSource:shareURL:podcastUUID:restorationContentItemID:isShallow:feedDeleted:podcastSubscriptionState:podcastPageContext:)(v141, v132, v138, v130, 0, 0, v140, v139, v143, v78, v137, v136, v109, 0, 0, 0, v134, v94, 0,
          0,
          v142,
          0,
          0,
          0,
          1,
          v145,
          v133,
          v85,
          0,
          v131,
          0,
          0,
          (char *)v161,
          v160,
          v162,
          0,
          0,
          0,
          v129,
          v87,
          v95,
          0,
          0,
          0,
          0,
          0,
          0,
          v88,
          v126,
          v110,
          v125,
          v92,
          1,
          0,
          4,
          0,
          0);
        sub_1ACA642F8(v96, v144, type metadata accessor for PodcastsMediaLibrary.MediaItem);
        unint64_t v43 = v124;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v43 = sub_1ACA418BC(0, *(void *)(v43 + 16) + 1, 1, v43);
        }
        uint64_t v97 = v150;
        id v24 = v122;
        long long v98 = v123;
        unint64_t v100 = *(void *)(v43 + 16);
        unint64_t v99 = *(void *)(v43 + 24);
        uint64_t v37 = v146;
        uint64_t v25 = v147;
        if (v100 >= v99 >> 1)
        {
          unint64_t v101 = v43;
          uint64_t v102 = v150;
          uint64_t v103 = sub_1ACA418BC(v99 > 1, v100 + 1, 1, v101);
          uint64_t v97 = v102;
          unint64_t v43 = v103;
        }
        *(void *)(v43 + 16) = v100 + 1;
        sub_1ACA61468(v144, v43+ ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80))+ *(void *)(v97 + 72) * v100);

        sub_1ACA64360(v143, type metadata accessor for PodcastsMediaLibrary.MediaItem);
        goto LABEL_4;
      }
      if ((*(void *)v55 & 0x8000000000000000) != 0) {
        goto LABEL_47;
      }
      id v52 = objc_msgSend(v155, sel_episodeForStoreTrackID_);
      sub_1ACA64360(v55, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
      uint64_t v37 = v146;
      if (!v52)
      {
        id v123 = 0;
        unint64_t v124 = v43;
        goto LABEL_33;
      }
      id v57 = v52;
      uint64_t v56 = 0;
    }
    id v58 = v56;
    id v59 = objc_msgSend(v57, sel_assetURL);
    if (!v59)
    {
      id v59 = objc_msgSend(v57, sel_enclosureURL);
      if (!v59)
      {
        id v123 = v52;
        unint64_t v124 = v43;
        v146 = v37;

        goto LABEL_33;
      }
    }

    if (__OFADD__(v37++, 1)) {
      break;
    }
    uint64_t v61 = v45;
    id v62 = v57;
    uint64_t v63 = v121;
    sub_1ACC54794(v62, v121);
    sub_1ACC55648(*(void *)(v61 + v158[15]), *(void *)(v61 + v158[15] + 8), v154);
    sub_1ACA64360(v63, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v43 = sub_1ACA418BC(0, *(void *)(v43 + 16) + 1, 1, v43);
    }
    unint64_t v65 = *(void *)(v43 + 16);
    unint64_t v64 = *(void *)(v43 + 24);
    uint64_t v66 = v150;
    if (v65 >= v64 >> 1)
    {
      uint64_t v67 = sub_1ACA418BC(v64 > 1, v65 + 1, 1, v43);
      uint64_t v66 = v150;
      unint64_t v43 = v67;
    }
    *(void *)(v43 + 16) = v65 + 1;
    sub_1ACA61468(v154, v43+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(void *)(v66 + 72) * v65);

    uint64_t v25 = v147;
LABEL_4:
    uint64_t v45 = v159;
    sub_1ACA64360(v159, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
    uint64_t v28 = v149;
    uint64_t v42 = v157 + v148;
    uint64_t v44 = v156 - 1;
    if (v156 == (char *)1)
    {
      id v52 = v37;
      uint64_t v25 = v43;
      swift_bridgeObjectRelease();
      uint64_t v37 = v112;
      goto LABEL_40;
    }
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  swift_once();
LABEL_41:
  uint64_t v104 = sub_1ACE754C8();
  __swift_project_value_buffer(v104, (uint64_t)qword_1E99F2C40);
  swift_bridgeObjectRetain();
  uint64_t v105 = sub_1ACE75498();
  os_log_type_t v106 = sub_1ACE76C08();
  if (os_log_type_enabled(v105, v106))
  {
    uint64_t v107 = swift_slowAlloc();
    *(_DWORD *)uint64_t v107 = 134218496;
    v161[0] = v52;
    sub_1ACE76FF8();
    *(_WORD *)(v107 + 12) = 2048;
    v161[0] = v37;
    uint64_t result = sub_1ACE76FF8();
    *(_WORD *)(v107 + 22) = 2048;
    if (!__OFSUB__(v37, v52))
    {
      v161[0] = v37 - (unsigned char *)v52;
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v105, v106, "Restored %ld / %ld media items. Returning %ld shallow items.", (uint8_t *)v107, 0x20u);
      MEMORY[0x1AD11B340](v107, -1, -1);

      goto LABEL_45;
    }
    __break(1u);
  }
  else
  {

    swift_bridgeObjectRelease();
LABEL_45:
    sub_1ACA62728((uint64_t)v161);
    sub_1ACA50E14((uint64_t)v161, (uint64_t)v160, &qword_1E99F0F40);
    sub_1ACA62D80(v25, (uint64_t)v160, v114, v115);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1ACA5FA10(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  id v11 = objc_msgSend(self, sel_sharedInstance);
  id v12 = objc_msgSend(v11, sel_playbackContext);

  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = a2;
  *(unsigned char *)(v13 + 40) = a3 & 1;
  *(void *)(v13 + 48) = v5;
  *(void *)(v13 + 56) = a4;
  *(void *)(v13 + 64) = a5;
  v16[4] = sub_1ACA63BE8;
  v16[5] = v13;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  _OWORD v16[2] = sub_1ACA6DA9C;
  v16[3] = &block_descriptor_32;
  uint64_t v14 = _Block_copy(v16);
  swift_bridgeObjectRetain();
  id v15 = v12;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_performBlock_, v14);
  _Block_release(v14);
}

uint64_t sub_1ACA5FB7C(uint64_t a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    *(void *)&long long v64 = MEMORY[0x1E4FBC860];
    sub_1ACE773D8();
    uint64_t v11 = a1 + 32;
    int64_t v12 = v10;
    do
    {
      v11 += 8;
      sub_1ACE77C18();
      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
      --v12;
    }
    while (v12);
  }
  uint64_t v13 = self;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
  uint64_t v14 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v13, sel_predicateForPersistentIds_, v14);

  uint64_t v60 = v15;
  id v16 = objc_msgSend(a2, sel_objectsInEntity_predicate_sortDescriptors_, @"MTEpisode", v15, 0);
  if (v16)
  {
    uint64_t v17 = v16;
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
    unint64_t v18 = sub_1ACE76578();

    uint64_t v19 = sub_1ACC2BAC4(v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = 0;
  }
  unint64_t v20 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    *(void *)&long long v64 = MEMORY[0x1E4FBC860];
    unint64_t v21 = (unint64_t)&v64;
    sub_1ACC82E60(0, v10, 0);
    uint64_t v22 = v64;
    uint64_t v23 = (unint64_t *)(a1 + 32);
    while (1)
    {
      unint64_t v25 = *v23++;
      unint64_t v24 = v25;
      if ((v25 & 0x8000000000000000) != 0) {
        break;
      }
      *(void *)&long long v64 = v22;
      unint64_t v27 = *(void *)(v22 + 16);
      unint64_t v26 = *(void *)(v22 + 24);
      if (v27 >= v26 >> 1)
      {
        unint64_t v21 = (unint64_t)&v64;
        sub_1ACC82E60(v26 > 1, v27 + 1, 1);
        uint64_t v22 = v64;
      }
      *(void *)(v22 + 16) = v27 + 1;
      *(void *)(v22 + 8 * v27 + 32) = v24;
      if (!--v10) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_56:
    __break(1u);
  }
  else
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
LABEL_15:
    if (!v19)
    {
      swift_bridgeObjectRelease();
      unint64_t v21 = 0;
      BOOL v32 = 1;
LABEL_59:
      uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F50);
      uint64_t v55 = sub_1ACA51EA4(&qword_1E99F0F58, &qword_1E99F0F50);
      if (v32) {
        unint64_t v56 = v20;
      }
      else {
        unint64_t v56 = v21;
      }
      uint64_t v66 = v55;
      *(void *)&long long v64 = v56;
      sub_1ACA3AABC(&v64, (uint64_t)v67);
      uint64_t v53 = v68;
      goto LABEL_63;
    }
    swift_getKeyPath();
    *(void *)&long long v64 = MEMORY[0x1E4FBC870];
    swift_retain();
    unint64_t v28 = swift_bridgeObjectRetain();
    unint64_t v29 = sub_1ACA63F8C(v28);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v30 = sub_1ACA64120(v29);
    swift_bridgeObjectRelease();
    swift_release();
    if (*(void *)(v30 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F70);
      uint64_t v31 = sub_1ACE77558();
    }
    else
    {
      uint64_t v31 = MEMORY[0x1E4FBC868];
    }
    *(void *)&long long v64 = v31;
    uint64_t v33 = (void *)swift_bridgeObjectRetain();
    sub_1ACA62380(v33, 1, &v64);
    swift_bridgeObjectRelease();
    uint64_t v34 = v64;
    swift_retain();
    unint64_t v21 = sub_1ACA6297C(v22, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
    BOOL v32 = v21 == 0;
    if ((a4 & 1) != 0 || !v21) {
      goto LABEL_59;
    }
    unint64_t v24 = v21 >> 62;
    if (!(v21 >> 62))
    {
      uint64_t v35 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v35)
      {
LABEL_58:
        BOOL v32 = 0;
        goto LABEL_59;
      }
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (!v35) {
    goto LABEL_58;
  }
LABEL_24:
  uint64_t v36 = 0;
  unint64_t v20 = v21 & 0xC000000000000001;
  do
  {
    if (v20) {
      id v37 = (id)MEMORY[0x1AD119490](v36, v21);
    }
    else {
      id v37 = *(id *)(v21 + 8 * v36 + 32);
    }
    uint64_t v38 = v37;
    unint64_t v39 = (unint64_t)objc_msgSend(v37, sel_persistentID);

    if ((v39 & 0x8000000000000000) == 0 && (void *)v39 == a3)
    {
      if (v24) {
        goto LABEL_37;
      }
      uint64_t v41 = v21 & 0xFFFFFFFFFFFFFF8;
      uint64_t v42 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v42 >= v36)
      {
LABEL_36:
        uint64_t v43 = *(void *)(v41 + 16);
        goto LABEL_39;
      }
      goto LABEL_68;
    }
    uint64_t v40 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      goto LABEL_56;
    }
    ++v36;
  }
  while (v40 != v35);
  uint64_t v36 = 0;
  if (!v24)
  {
    uint64_t v41 = v21 & 0xFFFFFFFFFFFFFF8;
    uint64_t v42 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_36;
  }
LABEL_37:
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (v42 < v36)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_1ACE77508();
  swift_bridgeObjectRelease();
LABEL_39:
  if (v43 < v36)
  {
    __break(1u);
    goto LABEL_65;
  }
  if (v36 < 0)
  {
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  if (v24)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v44 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v44 < v42) {
    goto LABEL_66;
  }
  if (v42 < 0)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (!v20 || v36 == v42) {
    goto LABEL_51;
  }
  if (v36 >= (unint64_t)v42)
  {
LABEL_69:
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  uint64_t v45 = v36;
  do
  {
    uint64_t v46 = v45 + 1;
    sub_1ACE772B8();
    uint64_t v45 = v46;
  }
  while (v42 != v46);
LABEL_51:
  if (v24)
  {
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1ACE77518();
    uint64_t v48 = v50;
    uint64_t v36 = v51;
    uint64_t v49 = v52;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v47 = v21 & 0xFFFFFFFFFFFFFF8;
    uint64_t v48 = (v21 & 0xFFFFFFFFFFFFFF8) + 32;
    uint64_t v49 = (2 * v42) | 1;
  }
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F60);
  uint64_t v68 = v53;
  uint64_t v69 = sub_1ACA51EA4(&qword_1E99F0F68, &qword_1E99F0F60);
  uint64_t v54 = (void *)swift_allocObject();
  v67[0] = v54;
  v54[2] = v47;
  v54[3] = v48;
  v54[4] = v36;
  v54[5] = v49;
LABEL_63:
  __swift_project_boxed_opaque_existential_1(v67, v53);
  type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v57 = sub_1ACE763D8();
  sub_1ACA62728((uint64_t)&v64);
  sub_1ACA50E14((uint64_t)&v64, (uint64_t)v63, &qword_1E99F0F40);
  sub_1ACA62D80(v57, (uint64_t)v63, a6, a7);
  swift_bridgeObjectRelease();

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v67);
}

id sub_1ACA60294@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_persistentID);
  *a2 = result;
  return result;
}

uint64_t sub_1ACA602C8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1ACC54794(*a1, a2);
  uint64_t v3 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a2, 0, 1, v3);
}

void sub_1ACA60340(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1ACA60368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = objc_msgSend(self, sel_sharedInstance);
  id v13 = objc_msgSend(v12, sel_playbackContext);

  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a1;
  v14[3] = v13;
  _OWORD v14[4] = v6;
  v14[5] = a2;
  void v14[6] = a3;
  v17[4] = a5;
  v17[5] = v14;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  v17[2] = sub_1ACA6DA9C;
  void v17[3] = a6;
  id v15 = _Block_copy(v17);
  swift_bridgeObjectRetain();
  id v16 = v13;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v16, sel_performBlock_, v15);
  _Block_release(v15);
}

void *sub_1ACA604B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v70 = a2;
  uint64_t v8 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v64 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v65 = (uint64_t)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v63 = (uint64_t)v60 - v11;
  id v12 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v69 = *(void *)(a1 + 16);
  if (v69)
  {
    uint64_t v61 = a4;
    uint64_t v62 = a5;
    uint64_t v68 = a1 + 32;
    uint64_t v67 = @"MTEpisode";
    v60[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    uint64_t v14 = (uint64_t)v12;
    while (1)
    {
      uint64_t v15 = v68 + 40 * v13;
      uint64_t v16 = *(void *)v15;
      uint64_t v17 = *(void *)(v15 + 8);
      uint64_t v19 = *(void *)(v15 + 16);
      uint64_t v18 = *(void *)(v15 + 24);
      if (*(unsigned char *)(v15 + 32) == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1ACA626E4(v16, v17, v19, v18, 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v20 = self;
        unint64_t v21 = (void *)sub_1ACE76178();
        swift_bridgeObjectRelease();
        uint64_t v22 = (void *)sub_1ACE76178();
        swift_bridgeObjectRelease();
        id v23 = objc_msgSend(v20, sel_predicateForEpisodeGuid_onFeedURL_, v21, v22);

        id v24 = objc_msgSend(v70, sel_objectsInEntity_predicate_sortDescriptors_, v67, v23, 0);
        if (v24)
        {
          unint64_t v25 = v24;
          sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
          unint64_t v26 = sub_1ACE76578();

          v73[0] = v12;
          uint64_t v71 = v14;
          id v66 = v23;
          if (v26 >> 62)
          {
            swift_bridgeObjectRetain();
            sub_1ACE77508();
            swift_bridgeObjectRelease();
            sub_1ACE773D8();
            swift_bridgeObjectRetain();
            uint64_t v28 = sub_1ACE77508();
            id result = (void *)swift_bridgeObjectRelease();
            if (v28)
            {
LABEL_9:
              if ((v26 & 0xC000000000000001) != 0)
              {
                uint64_t v29 = 0;
                while (1)
                {
                  id result = (void *)MEMORY[0x1AD119490](v29, v26);
                  uint64_t v30 = v29 + 1;
                  if (__OFADD__(v29, 1)) {
                    break;
                  }
                  self;
                  if (!swift_dynamicCastObjCClass()) {
                    goto LABEL_25;
                  }
                  sub_1ACE773A8();
                  sub_1ACE773E8();
                  sub_1ACE773F8();
                  sub_1ACE773B8();
                  ++v29;
                  if (v30 == v28) {
                    goto LABEL_31;
                  }
                }
                __break(1u);
                goto LABEL_73;
              }
              uint64_t v37 = 0;
              while (1)
              {
                uint64_t v38 = v37 + 1;
                if (__OFADD__(v37, 1)) {
                  break;
                }
                unint64_t v39 = *(void **)(v26 + 32 + 8 * v37);
                self;
                if (!swift_dynamicCastObjCClass()) {
                  goto LABEL_26;
                }
                id v40 = v39;
                sub_1ACE773A8();
                sub_1ACE773E8();
                sub_1ACE773F8();
                id result = (void *)sub_1ACE773B8();
                ++v37;
                if (v38 == v28) {
                  goto LABEL_31;
                }
              }
LABEL_74:
              __break(1u);
              goto LABEL_75;
            }
          }
          else
          {
            id result = (void *)sub_1ACE773D8();
            uint64_t v28 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v28) {
              goto LABEL_9;
            }
          }
LABEL_31:
          unint64_t v41 = (unint64_t)v73[0];
          id result = (void *)swift_bridgeObjectRelease();
          if ((v41 & 0x8000000000000000) != 0 || (v41 & 0x4000000000000000) != 0)
          {
            swift_bridgeObjectRetain();
            uint64_t v58 = sub_1ACE77508();
            id result = (void *)swift_release();
            id v12 = (void *)MEMORY[0x1E4FBC860];
            uint64_t v14 = v71;
            id v42 = v66;
            if (v58)
            {
LABEL_34:
              if ((v41 & 0xC000000000000001) != 0)
              {
                id v43 = (id)MEMORY[0x1AD119490](0, v41);
              }
              else
              {
                if (!*(void *)(v41 + 16)) {
                  goto LABEL_77;
                }
                id v43 = *(id *)(v41 + 32);
              }
              uint64_t v44 = v43;
              swift_release();
              id v45 = v44;
              sub_1ACC54794(v45, v65);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v14 = sub_1ACA418BC(0, *(void *)(v14 + 16) + 1, 1, v14);
              }
              unint64_t v47 = *(void *)(v14 + 16);
              unint64_t v46 = *(void *)(v14 + 24);
              if (v47 >= v46 >> 1) {
                uint64_t v14 = sub_1ACA418BC(v46 > 1, v47 + 1, 1, v14);
              }
              *(void *)(v14 + 16) = v47 + 1;
              sub_1ACA61468(v65, v14+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * v47);

              goto LABEL_4;
            }
          }
          else
          {
            id v12 = (void *)MEMORY[0x1E4FBC860];
            uint64_t v14 = v71;
            id v42 = v66;
            if (*(void *)(v41 + 16)) {
              goto LABEL_34;
            }
          }

          goto LABEL_65;
        }
      }
      else
      {
        sub_1ACA633B0(v16, v17, v19, v18, 0);
        id result = self;
        if (v16 < 0) {
          goto LABEL_76;
        }
        id v23 = objc_msgSend(result, sel_predicateForEpisodeStoreTrackId_, v16);
        id v31 = objc_msgSend(v70, sel_objectsInEntity_predicate_sortDescriptors_, v67, v23, 0);
        if (v31)
        {
          BOOL v32 = v31;
          id v66 = v23;
          sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
          unint64_t v33 = sub_1ACE76578();

          v73[0] = v12;
          uint64_t v71 = v14;
          if (v33 >> 62)
          {
            swift_bridgeObjectRetain();
            sub_1ACE77508();
            swift_bridgeObjectRelease();
            sub_1ACE773D8();
            swift_bridgeObjectRetain();
            uint64_t v34 = sub_1ACE77508();
            id result = (void *)swift_bridgeObjectRelease();
            if (v34)
            {
LABEL_19:
              if ((v33 & 0xC000000000000001) != 0)
              {
                uint64_t v35 = 0;
                while (1)
                {
                  id result = (void *)MEMORY[0x1AD119490](v35, v33);
                  uint64_t v36 = v35 + 1;
                  if (__OFADD__(v35, 1)) {
                    break;
                  }
                  self;
                  if (!swift_dynamicCastObjCClass())
                  {
LABEL_25:
                    swift_unknownObjectRelease();
                    goto LABEL_26;
                  }
                  sub_1ACE773A8();
                  sub_1ACE773E8();
                  sub_1ACE773F8();
                  sub_1ACE773B8();
                  ++v35;
                  if (v36 == v34) {
                    goto LABEL_46;
                  }
                }
LABEL_73:
                __break(1u);
                goto LABEL_74;
              }
              uint64_t v48 = 0;
              while (1)
              {
                uint64_t v49 = v48 + 1;
                if (__OFADD__(v48, 1)) {
                  break;
                }
                uint64_t v50 = *(void **)(v33 + 32 + 8 * v48);
                self;
                if (!swift_dynamicCastObjCClass())
                {
LABEL_26:

                  swift_bridgeObjectRelease();
                  swift_release();
                  id v12 = (void *)MEMORY[0x1E4FBC860];
                  uint64_t v14 = v71;
                  goto LABEL_4;
                }
                id v51 = v50;
                sub_1ACE773A8();
                sub_1ACE773E8();
                sub_1ACE773F8();
                id result = (void *)sub_1ACE773B8();
                ++v48;
                if (v49 == v34) {
                  goto LABEL_46;
                }
              }
LABEL_75:
              __break(1u);
LABEL_76:
              __break(1u);
LABEL_77:
              __break(1u);
LABEL_78:
              __break(1u);
              return result;
            }
          }
          else
          {
            id result = (void *)sub_1ACE773D8();
            uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v34) {
              goto LABEL_19;
            }
          }
LABEL_46:
          unint64_t v52 = (unint64_t)v73[0];
          id result = (void *)swift_bridgeObjectRelease();
          if ((v52 & 0x8000000000000000) != 0 || (v52 & 0x4000000000000000) != 0)
          {
            swift_bridgeObjectRetain();
            uint64_t v59 = sub_1ACE77508();
            id result = (void *)swift_release();
            id v12 = (void *)MEMORY[0x1E4FBC860];
            uint64_t v14 = v71;
            if (v59)
            {
LABEL_49:
              if ((v52 & 0xC000000000000001) != 0)
              {
                id v53 = (id)MEMORY[0x1AD119490](0, v52);
              }
              else
              {
                if (!*(void *)(v52 + 16)) {
                  goto LABEL_78;
                }
                id v53 = *(id *)(v52 + 32);
              }
              uint64_t v54 = v53;
              swift_release();
              id v55 = v54;
              sub_1ACC54794(v55, v63);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v14 = sub_1ACA418BC(0, *(void *)(v14 + 16) + 1, 1, v14);
              }
              unint64_t v57 = *(void *)(v14 + 16);
              unint64_t v56 = *(void *)(v14 + 24);
              if (v57 >= v56 >> 1) {
                uint64_t v14 = sub_1ACA418BC(v56 > 1, v57 + 1, 1, v14);
              }
              *(void *)(v14 + 16) = v57 + 1;
              sub_1ACA61468(v63, v14+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * v57);

              goto LABEL_4;
            }
          }
          else
          {
            id v12 = (void *)MEMORY[0x1E4FBC860];
            uint64_t v14 = v71;
            if (*(void *)(v52 + 16)) {
              goto LABEL_49;
            }
          }

LABEL_65:
          swift_release();
          goto LABEL_4;
        }
      }

LABEL_4:
      if (++v13 == v69)
      {
        swift_bridgeObjectRelease();
        a4 = v61;
        a5 = v62;
        if (!*(void *)(v14 + 16)) {
          goto LABEL_71;
        }
LABEL_69:
        sub_1ACA62728((uint64_t)v73);
        sub_1ACA50E14((uint64_t)v73, (uint64_t)v72, &qword_1E99F0F40);
        sub_1ACA62D80(v14, (uint64_t)v72, a4, a5);
        return (void *)swift_bridgeObjectRelease();
      }
    }
  }
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (*(void *)(MEMORY[0x1E4FBC860] + 16)) {
    goto LABEL_69;
  }
LABEL_71:
  swift_bridgeObjectRelease();
  v73[0] = (void *)5;
  return (void *)sub_1ACA630B4(v73, a4, a5);
}

uint64_t sub_1ACA60DF8()
{
  return swift_deallocClassInstance();
}

uint64_t _s20LocalLibraryProviderCMa()
{
  return self;
}

void sub_1ACA60E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

BOOL sub_1ACA60E50(uint64_t a1)
{
  return *(unsigned char *)(a1 + 32) != 0;
}

uint64_t sub_1ACA60E60(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1ACA60E80, 0, 0);
}

uint64_t sub_1ACA60E80()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  *uint64_t v3 = v0;
  v3[1] = sub_1ACA60F78;
  uint64_t v5 = v0[2];
  return MEMORY[0x1F41880D8](v5, 0, 0, 0xD000000000000013, 0x80000001ACEC5D90, sub_1ACA61088, v2, v4);
}

uint64_t sub_1ACA60F78()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_1ACA61088(uint64_t a1)
{
  sub_1ACA5E4F8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1ACA61090()
{
  uint64_t v1 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v18 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v16 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F38);
  uint64_t v2 = *(void *)(v19 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v20 = v0;
  uint64_t v17 = (v18 + 16) & ~v18;
  uint64_t v3 = v0 + v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v17 + v1[12];
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = v3 + v1[16];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v9 = v3 + v1[20];
  uint64_t v10 = sub_1ACE750A8();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v3 + v1[36];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  unint64_t v13 = (v16 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v20 + ((v13 + v15 + 8) & ~v15), v19);
  return swift_deallocObject();
}

uint64_t sub_1ACA61468(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1ACA614CC()
{
  uint64_t v1 = *(void *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F38);
  uint64_t v4 = *(void **)(v0 + v3);
  sub_1ACA5E7B8(v0 + v2, v4);
}

uint64_t sub_1ACA615AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACA61618()
{
  return sub_1ACA6493C((uint64_t (*)(void, void, void, void, void))sub_1ACA604B8);
}

uint64_t sub_1ACA61630()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  switch(*(unsigned char *)(v0 + 32))
  {
    case 1:
      swift_bridgeObjectRetain_n();
      sub_1ACA63688(v2, v1, v4, v3, 1u);
      sub_1ACA63688(1, 0, 0, 0, 8u);
      uint64_t v5 = v2;
      uint64_t v6 = v1;
      uint64_t v7 = v4;
      uint64_t v8 = v3;
      unsigned __int8 v9 = 1;
      goto LABEL_13;
    case 2:
      swift_bridgeObjectRetain_n();
      sub_1ACA63688(v2, v1, v4, v3, 2u);
      sub_1ACA63688(1, 0, 0, 0, 8u);
      uint64_t v5 = v2;
      uint64_t v6 = v1;
      uint64_t v7 = v4;
      uint64_t v8 = v3;
      unsigned __int8 v9 = 2;
      goto LABEL_13;
    case 3:
      swift_bridgeObjectRetain_n();
      sub_1ACA63688(v2, v1, v4, v3, 3u);
      sub_1ACA63688(1, 0, 0, 0, 8u);
      uint64_t v5 = v2;
      uint64_t v6 = v1;
      uint64_t v7 = v4;
      uint64_t v8 = v3;
      unsigned __int8 v9 = 3;
      goto LABEL_13;
    case 4:
      sub_1ACA639E4(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24), 4u);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1ACA63688(v2, v1, v4, v3, 4u);
      sub_1ACA63688(1, 0, 0, 0, 8u);
      uint64_t v5 = v2;
      uint64_t v6 = v1;
      uint64_t v7 = v4;
      uint64_t v8 = v3;
      unsigned __int8 v9 = 4;
      goto LABEL_13;
    case 5:
      swift_bridgeObjectRetain_n();
      sub_1ACA63688(v2, v1, v4, v3, 5u);
      sub_1ACA63688(1, 0, 0, 0, 8u);
      uint64_t v5 = v2;
      uint64_t v6 = v1;
      uint64_t v7 = v4;
      uint64_t v8 = v3;
      unsigned __int8 v9 = 5;
      goto LABEL_13;
    case 6:
      swift_bridgeObjectRetain_n();
      sub_1ACA63688(v2, v1, v4, v3, 6u);
      sub_1ACA63688(1, 0, 0, 0, 8u);
      uint64_t v5 = v2;
      uint64_t v6 = v1;
      uint64_t v7 = v4;
      uint64_t v8 = v3;
      unsigned __int8 v9 = 6;
      goto LABEL_13;
    case 7:
      swift_bridgeObjectRetain_n();
      sub_1ACA63688(v2, v1, v4, v3, 7u);
      sub_1ACA63688(1, 0, 0, 0, 8u);
      uint64_t v5 = v2;
      uint64_t v6 = v1;
      uint64_t v7 = v4;
      uint64_t v8 = v3;
      unsigned __int8 v9 = 7;
      goto LABEL_13;
    case 8:
      if (v4 | v1 | v2 | v3)
      {
        uint64_t v10 = 1;
        sub_1ACA63688(1, 0, 0, 0, 8u);
        sub_1ACA63688(1, 0, 0, 0, 8u);
        sub_1ACA63688(1, 0, 0, 0, 8u);
      }
      else
      {
        sub_1ACA63688(0, 0, 0, 0, 8u);
        sub_1ACA63688(1, 0, 0, 0, 8u);
        uint64_t v5 = 0;
        uint64_t v6 = 0;
        uint64_t v7 = 0;
        uint64_t v8 = 0;
        unsigned __int8 v9 = 8;
LABEL_13:
        sub_1ACA63688(v5, v6, v7, v8, v9);
        return 0;
      }
      return v10;
    default:
      sub_1ACA63688(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24), 0);
      sub_1ACA63688(1, 0, 0, 0, 8u);
      uint64_t v5 = v2;
      uint64_t v6 = v1;
      uint64_t v7 = v4;
      uint64_t v8 = v3;
      unsigned __int8 v9 = 0;
      goto LABEL_13;
  }
}

id sub_1ACA61A0C()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 200);
  int v5 = *(unsigned __int8 *)(v0 + 208);
  if (v5 == 2)
  {
    uint64_t v11 = self;
    sub_1ACA63B84(v1, v2, v3, v4, 2u);
    sub_1ACB02BC0(v1);
    sub_1ACA63844(v1, v2, v3, v4, 2u);
    uint64_t v12 = (void *)sub_1ACE76978();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(v11, sel_predicateForEpisodeUuids_, v12, v18);
LABEL_14:
    id v16 = v13;

    id v14 = [v16 NOT];
    return v14;
  }
  if (v5 == 1)
  {
    unint64_t v6 = MEMORY[0x1E4FBC860];
    unint64_t v19 = MEMORY[0x1E4FBC860];
    uint64_t v7 = *(void *)(v1 + 16);
    if (v7)
    {
      uint64_t v8 = (uint64_t *)(v1 + 32);
      uint64_t v18 = v2;
      sub_1ACA639E4(v1, v2, v3, v4, 1u);
      do
      {
        uint64_t v9 = *v8++;
        id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedLongLong_, v9);
        if (v10)
        {
          MEMORY[0x1AD118700](v10);
          if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1ACE765C8();
          }
          sub_1ACE76628();
          sub_1ACE76598();
        }
        --v7;
      }
      while (v7);
      sub_1ACA63844(v1, v2, v3, v4, 1u);
      unint64_t v6 = v19;
    }
    sub_1ACDF7264(v6);
    swift_bridgeObjectRelease();
    uint64_t v15 = self;
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
    sub_1ACA64D14((unint64_t *)&qword_1EB76E300, (unint64_t *)&qword_1EB768F50);
    uint64_t v12 = (void *)sub_1ACE76978();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(v15, sel_predicateForEpisodeStoreTrackIds_, v12, v18);
    goto LABEL_14;
  }
  return 0;
}

void sub_1ACA61C80(void *a1, char a2, void *a3)
{
  uint64_t v3 = a1[2];
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v7 = a1[4];
  unint64_t v6 = (void *)a1[5];
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)*a3;
  uint64_t v9 = sub_1ACA65CC4(v7);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12)) {
    goto LABEL_24;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  uint64_t v16 = v8[3];
  id v17 = v6;
  if (v16 >= v13)
  {
    if (a2)
    {
      if (v15) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1ACD05690();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v22 = (void *)*a3;
    *(void *)(*a3 + 8 * (v14 >> 6) + 64) |= 1 << v14;
    uint64_t v23 = 8 * v14;
    *(void *)(v22[6] + v23) = v7;
    *(void *)(v22[7] + v23) = v17;
    uint64_t v24 = v22[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    void v22[2] = v26;
    uint64_t v27 = v3 - 1;
    if (v3 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v28 = (void **)(a1 + 7);
    while (1)
    {
      uint64_t v30 = (uint64_t)*(v28 - 1);
      uint64_t v29 = *v28;
      id v31 = (void *)*a3;
      uint64_t v32 = sub_1ACA65CC4(v30);
      uint64_t v34 = v31[2];
      BOOL v35 = (v33 & 1) == 0;
      uint64_t v36 = v34 + v35;
      if (__OFADD__(v34, v35)) {
        break;
      }
      unint64_t v37 = v32;
      char v38 = v33;
      uint64_t v39 = v31[3];
      id v17 = v29;
      if (v39 < v36)
      {
        sub_1ACCFB670(v36, 1);
        uint64_t v40 = sub_1ACA65CC4(v30);
        if ((v38 & 1) != (v41 & 1)) {
          goto LABEL_26;
        }
        unint64_t v37 = v40;
      }
      if (v38) {
        goto LABEL_10;
      }
      id v42 = (void *)*a3;
      *(void *)(*a3 + 8 * (v37 >> 6) + 64) |= 1 << v37;
      uint64_t v43 = 8 * v37;
      *(void *)(v42[6] + v43) = v30;
      *(void *)(v42[7] + v43) = v17;
      uint64_t v44 = v42[2];
      BOOL v25 = __OFADD__(v44, 1);
      uint64_t v45 = v44 + 1;
      if (v25) {
        goto LABEL_25;
      }
      v42[2] = v45;
      v28 += 2;
      if (!--v27) {
        goto LABEL_23;
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1ACCFB670(v13, a2 & 1);
  uint64_t v18 = sub_1ACA65CC4(v7);
  if ((v15 & 1) == (v19 & 1))
  {
    unint64_t v14 = v18;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v20 = (void *)swift_allocError();
    swift_willThrow();
    id v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease_n();
      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_1ACE77A68();
  __break(1u);
LABEL_27:
  sub_1ACE77268();
  sub_1ACE762C8();
  sub_1ACE77458();
  sub_1ACE762C8();
  sub_1ACE77498();
  __break(1u);
}

void sub_1ACA61FE4(void *a1, char a2, void *a3)
{
  if (!a1[2])
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v43 = a1[2];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v8 = (void *)a1[6];
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  id v10 = v8;
  unint64_t v12 = sub_1ACA65CF0(v7, v6);
  uint64_t v13 = v9[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14)) {
    goto LABEL_23;
  }
  char v16 = v11;
  if (v9[3] >= v15)
  {
    if (a2)
    {
      if (v11) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1ACD05834();
      if (v16) {
        goto LABEL_10;
      }
    }
LABEL_13:
    id v21 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    uint64_t v22 = (uint64_t *)(v21[6] + 16 * v12);
    uint64_t *v22 = v7;
    v22[1] = v6;
    *(void *)(v21[7] + 8 * v12) = v10;
    uint64_t v23 = v21[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v21[2] = v25;
    uint64_t v26 = v43 - 1;
    if (v43 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v27 = (void **)(a1 + 9);
    while (1)
    {
      uint64_t v29 = (uint64_t)*(v27 - 2);
      uint64_t v28 = (uint64_t)*(v27 - 1);
      uint64_t v30 = *v27;
      id v31 = (void *)*a3;
      swift_bridgeObjectRetain();
      id v10 = v30;
      unint64_t v32 = sub_1ACA65CF0(v29, v28);
      uint64_t v34 = v31[2];
      BOOL v35 = (v33 & 1) == 0;
      BOOL v24 = __OFADD__(v34, v35);
      uint64_t v36 = v34 + v35;
      if (v24) {
        break;
      }
      char v37 = v33;
      if (v31[3] < v36)
      {
        sub_1ACCFBC54(v36, 1);
        unint64_t v32 = sub_1ACA65CF0(v29, v28);
        if ((v37 & 1) != (v38 & 1)) {
          goto LABEL_25;
        }
      }
      if (v37) {
        goto LABEL_10;
      }
      uint64_t v39 = (void *)*a3;
      *(void *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      uint64_t v40 = (uint64_t *)(v39[6] + 16 * v32);
      *uint64_t v40 = v29;
      v40[1] = v28;
      *(void *)(v39[7] + 8 * v32) = v10;
      uint64_t v41 = v39[2];
      BOOL v24 = __OFADD__(v41, 1);
      uint64_t v42 = v41 + 1;
      if (v24) {
        goto LABEL_24;
      }
      v39[2] = v42;
      v27 += 3;
      if (!--v26) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1ACCFBC54(v15, a2 & 1);
  unint64_t v17 = sub_1ACA65CF0(v7, v6);
  if ((v16 & 1) == (v18 & 1))
  {
    unint64_t v12 = v17;
    if ((v16 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    char v19 = (void *)swift_allocError();
    swift_willThrow();
    id v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
  sub_1ACE77A68();
  __break(1u);
LABEL_26:
  sub_1ACE77268();
  sub_1ACE762C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
  sub_1ACE77458();
  sub_1ACE762C8();
  sub_1ACE77498();
  __break(1u);
}

void sub_1ACA62380(void *a1, char a2, void *a3)
{
  uint64_t v3 = a1[2];
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v7 = a1[4];
  uint64_t v6 = (void *)a1[5];
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)*a3;
  uint64_t v9 = sub_1ACA6A1FC(v7);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12)) {
    goto LABEL_24;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  uint64_t v16 = v8[3];
  id v17 = v6;
  if (v16 >= v13)
  {
    if (a2)
    {
      if (v15) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1ACD059E4();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v22 = (void *)*a3;
    *(void *)(*a3 + 8 * (v14 >> 6) + 64) |= 1 << v14;
    uint64_t v23 = 8 * v14;
    *(void *)(v22[6] + v23) = v7;
    *(void *)(v22[7] + v23) = v17;
    uint64_t v24 = v22[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    void v22[2] = v26;
    uint64_t v27 = v3 - 1;
    if (v3 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v28 = (void **)(a1 + 7);
    while (1)
    {
      uint64_t v30 = (uint64_t)*(v28 - 1);
      uint64_t v29 = *v28;
      id v31 = (void *)*a3;
      uint64_t v32 = sub_1ACA6A1FC(v30);
      uint64_t v34 = v31[2];
      BOOL v35 = (v33 & 1) == 0;
      uint64_t v36 = v34 + v35;
      if (__OFADD__(v34, v35)) {
        break;
      }
      unint64_t v37 = v32;
      char v38 = v33;
      uint64_t v39 = v31[3];
      id v17 = v29;
      if (v39 < v36)
      {
        sub_1ACCFBF84(v36, 1);
        uint64_t v40 = sub_1ACA6A1FC(v30);
        if ((v38 & 1) != (v41 & 1)) {
          goto LABEL_26;
        }
        unint64_t v37 = v40;
      }
      if (v38) {
        goto LABEL_10;
      }
      uint64_t v42 = (void *)*a3;
      *(void *)(*a3 + 8 * (v37 >> 6) + 64) |= 1 << v37;
      uint64_t v43 = 8 * v37;
      *(void *)(v42[6] + v43) = v30;
      *(void *)(v42[7] + v43) = v17;
      uint64_t v44 = v42[2];
      BOOL v25 = __OFADD__(v44, 1);
      uint64_t v45 = v44 + 1;
      if (v25) {
        goto LABEL_25;
      }
      v42[2] = v45;
      v28 += 2;
      if (!--v27) {
        goto LABEL_23;
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1ACCFBF84(v13, a2 & 1);
  uint64_t v18 = sub_1ACA6A1FC(v7);
  if ((v15 & 1) == (v19 & 1))
  {
    unint64_t v14 = v18;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    id v20 = (void *)swift_allocError();
    swift_willThrow();
    id v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease_n();
      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_1ACE77A68();
  __break(1u);
LABEL_27:
  sub_1ACE77268();
  sub_1ACE762C8();
  sub_1ACE77458();
  sub_1ACE762C8();
  sub_1ACE77498();
  __break(1u);
}

uint64_t sub_1ACA626E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

double sub_1ACA62728(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 1;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(unsigned char *)(a1 + 208) = 0;
  return result;
}

uint64_t sub_1ACA62754(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v4; ++i)
    {
      if (*(void *)(a2 + 16))
      {
        uint64_t v7 = sub_1ACA65CC4(*(void *)(a1 + 8 * i + 32));
        if (v8)
        {
          id v9 = *(id *)(*(void *)(a2 + 56) + 8 * v7);
          MEMORY[0x1AD118700]();
          if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1ACE765C8();
          }
          sub_1ACE76628();
          sub_1ACE76598();
        }
      }
    }
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t sub_1ACA62858(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t *)(a1 + 40);
    do
    {
      if (*(void *)(a2 + 16))
      {
        uint64_t v7 = *(v6 - 1);
        uint64_t v8 = *v6;
        swift_bridgeObjectRetain();
        unint64_t v9 = sub_1ACA65CF0(v7, v8);
        if (v10)
        {
          id v11 = *(id *)(*(void *)(a2 + 56) + 8 * v9);
          uint64_t v12 = swift_bridgeObjectRelease();
          MEMORY[0x1AD118700](v12);
          if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1ACE765C8();
          }
          sub_1ACE76628();
          sub_1ACE76598();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_1ACA6297C(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v4; ++i)
    {
      if (*(void *)(a2 + 16))
      {
        uint64_t v7 = sub_1ACA6A1FC(*(void *)(a1 + 8 * i + 32));
        if (v8)
        {
          id v9 = *(id *)(*(void *)(a2 + 56) + 8 * v7);
          MEMORY[0x1AD118700]();
          if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1ACE765C8();
          }
          sub_1ACE76628();
          sub_1ACE76598();
        }
      }
    }
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t sub_1ACA62A80(unint64_t a1)
{
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v8)
  {
    while (1)
    {
      unint64_t v2 = 0;
      uint64_t v3 = v8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x1AD119490](v2, a1);
LABEL_9:
        int v5 = v4;
        unint64_t v6 = v2 + 1;
        if (__OFADD__(v2, 1)) {
          goto LABEL_15;
        }
        _OWORD v9[2] = (uint64_t)v4;
        swift_getAtKeyPath();
        if (sub_1ACD30438(v9, v9[1]))
        {
          sub_1ACE773A8();
          sub_1ACE773E8();
          uint64_t v3 = v8;
          sub_1ACE773F8();
          sub_1ACE773B8();
        }
        else
        {
        }
        ++v2;
        if (v6 == v3) {
          return v10;
        }
      }
      if (v2 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v8 = sub_1ACE77508();
      if (!v8) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v4 = *(id *)(a1 + 8 * v2 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1ACA62C14(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1ACC82DE0(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v12;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1AD119490](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      id v7 = v6;
      swift_getAtKeyPath();
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      if (v9 >= v8 >> 1) {
        sub_1ACC82DE0(v8 > 1, v9 + 1, 1);
      }
      ++v5;
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 16 * v9;
      *(void *)(v10 + 32) = v11;
      *(void *)(v10 + 40) = v7;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACA62D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE75E48();
  uint64_t v19 = *(void *)(v11 - 8);
  uint64_t v20 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA50E14(a2, (uint64_t)v23, &qword_1E99F0F40);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  unint64_t v14 = (void *)sub_1ACE76CF8();
  char v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a3;
  v15[3] = a4;
  v15[4] = a1;
  sub_1ACA50E14((uint64_t)v23, (uint64_t)(v15 + 5), &qword_1E99F0F40);
  v22[4] = sub_1ACA63860;
  v22[5] = v15;
  v22[0] = MEMORY[0x1E4F143A8];
  v22[1] = 1107296256;
  void v22[2] = sub_1ACA6DA9C;
  _OWORD v22[3] = &block_descriptor_26;
  uint64_t v16 = _Block_copy(v22);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1ACA63870((uint64_t)v23);
  swift_release();
  sub_1ACE75E08();
  v22[0] = MEMORY[0x1E4FBC860];
  sub_1ACA65308((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v13, v20);
}

uint64_t sub_1ACA630B4(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE75DC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1ACE75E48();
  uint64_t v10 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  unint64_t v14 = (void *)sub_1ACE76CF8();
  char v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v13;
  v15[3] = a2;
  v15[4] = a3;
  aBlock[4] = sub_1ACA6343C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_20;
  uint64_t v16 = _Block_copy(aBlock);
  sub_1ACA63448(v13);
  swift_retain();
  swift_release();
  sub_1ACE75E08();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1ACA65308((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v12, v9, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v19);
}

uint64_t sub_1ACA633B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACA633F4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if ((unint64_t)v1 >= 7) {

  }
  swift_release();
  return swift_deallocObject();
}

void sub_1ACA6343C()
{
  sub_1ACA5CFBC(*(void **)(v0 + 16), *(void (**)(unsigned char *))(v0 + 24));
}

id sub_1ACA63448(id result)
{
  if ((unint64_t)result >= 7) {
    return result;
  }
  return result;
}

uint64_t sub_1ACA63458(uint64_t result)
{
  *(unsigned char *)(result + 218) = 1;
  return result;
}

void sub_1ACA63464(id a1)
{
  if ((unint64_t)a1 >= 7) {
}
  }

uint64_t sub_1ACA63474(uint64_t result)
{
  *(unsigned char *)(result + 218) = 0;
  return result;
}

uint64_t sub_1ACA6347C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v20 = *(void *)(a1 + 16);
  uint64_t v21 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void **)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 64);
  long long v18 = *(_OWORD *)(a1 + 88);
  long long v19 = *(_OWORD *)(a1 + 72);
  long long v16 = *(_OWORD *)(a1 + 120);
  long long v17 = *(_OWORD *)(a1 + 104);
  long long v15 = *(_OWORD *)(a1 + 136);
  long long v13 = *(_OWORD *)(a1 + 168);
  long long v14 = *(_OWORD *)(a1 + 152);
  long long v12 = *(_OWORD *)(a1 + 184);
  uint64_t v9 = *(void *)(a1 + 200);
  uint64_t v8 = *(void *)(a1 + 208);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 216);
  swift_bridgeObjectRelease();
  sub_1ACA63588(v21, v20, v2, v3, v4, v5, v6, v7, v19, *((uint64_t *)&v19 + 1), v18, SBYTE8(v18), v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v9,
    v8,
    v10);
  return a1;
}

uint64_t sub_1ACA63588(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unsigned __int8 a27)
{
  if (a6 != (void *)1)
  {
    sub_1ACA63688(result, a2, a3, a4, a5);

    swift_bridgeObjectRelease();
    sub_1ACA6371C(a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
    return sub_1ACA63844(a23, a24, a25, a26, a27);
  }
  return result;
}

uint64_t sub_1ACA63688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 <= 7u)
  {
    if (((1 << a5) & 0xE6) != 0)
    {
      return swift_bridgeObjectRelease();
    }
    if (a5 == 3)
    {
      return swift_bridgeObjectRelease();
    }
    if (a5 == 4)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1ACA6371C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, char a11)
{
  if (a11 != 2) {
    sub_1ACA63738(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  }
}

void sub_1ACA63738(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  switch(a9)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 6:
    case 8:
      goto LABEL_2;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_2:
      swift_bridgeObjectRelease();
      break;
    case 7:
      swift_bridgeObjectRelease();
      sub_1ACA63830(a3, a4);
      break;
    default:
      return;
  }
}

uint64_t sub_1ACA63830(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACA63844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 0xFF) {
    return sub_1ACA63688(a1, a2, a3, a4, a5);
  }
  return a1;
}

uint64_t sub_1ACA63858()
{
  return objectdestroy_22Tm();
}

uint64_t sub_1ACA63860()
{
  return sub_1ACA5CE14(*(void (**)(unsigned char *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), v0 + 40);
}

uint64_t sub_1ACA63870(uint64_t a1)
{
  sub_1ACA638E4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void **)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(_OWORD *)(a1 + 128), *(void *)(a1 + 136), *(_OWORD *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(unsigned char *)(a1 + 208));
  return a1;
}

uint64_t sub_1ACA638E4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unsigned __int8 a27)
{
  if (a6 != (void *)1)
  {
    sub_1ACA639E4(result, a2, a3, a4, a5);
    swift_bridgeObjectRetain();
    id v29 = a6;
    sub_1ACA63A5C(a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
    return sub_1ACA63B84(a23, a24, a25, a26, a27);
  }
  return result;
}

uint64_t sub_1ACA639E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 <= 7u)
  {
    if (((1 << a5) & 0xE6) == 0 && a5 != 3)
    {
      if (a5 != 4) {
        return result;
      }
      swift_bridgeObjectRetain();
    }
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1ACA63A5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, char a11)
{
  if (a11 != 2) {
    sub_1ACA63A78(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  }
}

void sub_1ACA63A78(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  switch(a9)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 6:
    case 8:
      goto LABEL_2;
    case 4:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_2:
      swift_bridgeObjectRetain();
      break;
    case 7:
      swift_bridgeObjectRetain();
      sub_1ACA63B70(a3, a4);
      break;
    default:
      return;
  }
}

uint64_t sub_1ACA63B70(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1ACA63B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 0xFF) {
    return sub_1ACA639E4(a1, a2, a3, a4, a5);
  }
  return a1;
}

uint64_t sub_1ACA63B98()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA63BE8()
{
  return sub_1ACA5FB7C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_1ACA63C00()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

char *keypath_get_selector_persistentID()
{
  return sel_persistentID;
}

id sub_1ACA63C44@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_persistentID);
  *a2 = result;
  return result;
}

id sub_1ACA63C78(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPersistentID_, *a1);
}

uint64_t sub_1ACA63C8C(unint64_t a1)
{
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x1AD119490](v3, a1);
LABEL_9:
        uint64_t v5 = v4;
        unint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
        _OWORD v11[4] = (uint64_t)v4;
        swift_getAtKeyPath();
        uint64_t v7 = v11[2];
        uint64_t v8 = v11[3];
        swift_bridgeObjectRetain();
        char v9 = sub_1ACD30558(v11, v7, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v9)
        {
          sub_1ACE773A8();
          sub_1ACE773E8();
          sub_1ACE773F8();
          sub_1ACE773B8();
        }
        else
        {
        }
        ++v3;
        if (v6 == v2) {
          return v12;
        }
      }
      if (v3 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v2 = sub_1ACE77508();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1ACA63E10(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v13 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1ACC82E00(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v13;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1AD119490](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      id v7 = v6;
      swift_getAtKeyPath();
      long long v8 = v12;
      unint64_t v10 = *(void *)(v13 + 16);
      unint64_t v9 = *(void *)(v13 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1ACC82E00(v9 > 1, v10 + 1, 1);
        long long v8 = v12;
      }
      ++v5;
      *(void *)(v13 + 16) = v10 + 1;
      uint64_t v11 = v13 + 24 * v10;
      *(_OWORD *)(v11 + 32) = v8;
      *(void *)(v11 + 48) = v7;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACA63F8C(unint64_t a1)
{
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v8)
  {
    while (1)
    {
      unint64_t v2 = 0;
      uint64_t v3 = v8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x1AD119490](v2, a1);
LABEL_9:
        uint64_t v5 = v4;
        unint64_t v6 = v2 + 1;
        if (__OFADD__(v2, 1)) {
          goto LABEL_15;
        }
        _OWORD v9[2] = (uint64_t)v4;
        swift_getAtKeyPath();
        if (sub_1ACD30724(v9, v9[1]))
        {
          sub_1ACE773A8();
          sub_1ACE773E8();
          uint64_t v3 = v8;
          sub_1ACE773F8();
          sub_1ACE773B8();
        }
        else
        {
        }
        ++v2;
        if (v6 == v3) {
          return v10;
        }
      }
      if (v2 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v8 = sub_1ACE77508();
      if (!v8) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v4 = *(id *)(a1 + 8 * v2 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1ACA64120(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1ACC82E40(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v12;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1AD119490](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      id v7 = v6;
      swift_getAtKeyPath();
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      if (v9 >= v8 >> 1) {
        sub_1ACC82E40(v8 > 1, v9 + 1, 1);
      }
      ++v5;
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 16 * v9;
      *(void *)(v10 + 32) = v11;
      *(void *)(v10 + 40) = v7;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t objectdestroy_10Tm()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA642E0()
{
  return sub_1ACA6493C((uint64_t (*)(void, void, void, void, void))sub_1ACA5EC3C);
}

uint64_t sub_1ACA642F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACA64360(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1ACA643C0(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE75DC8();
  uint64_t v29 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1ACE75E48();
  uint64_t v9 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = a1[11];
  long long v41 = a1[10];
  long long v42 = v12;
  v43[0] = a1[12];
  *(_OWORD *)((char *)v43 + 10) = *(long long *)((char *)a1 + 202);
  long long v13 = a1[7];
  long long v37 = a1[6];
  long long v38 = v13;
  long long v14 = a1[9];
  long long v39 = a1[8];
  long long v40 = v14;
  long long v15 = a1[3];
  long long v33 = a1[2];
  long long v34 = v15;
  long long v16 = a1[5];
  long long v35 = a1[4];
  long long v36 = v16;
  long long v17 = a1[1];
  long long v31 = *a1;
  long long v32 = v17;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  long long v18 = (void *)sub_1ACE76CF8();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = a3;
  long long v20 = v42;
  *(_OWORD *)(v19 + 192) = v41;
  *(_OWORD *)(v19 + 208) = v20;
  *(_OWORD *)(v19 + 224) = v43[0];
  *(_OWORD *)(v19 + 234) = *(_OWORD *)((char *)v43 + 10);
  long long v21 = v38;
  *(_OWORD *)(v19 + 128) = v37;
  *(_OWORD *)(v19 + 144) = v21;
  long long v22 = v40;
  *(_OWORD *)(v19 + 160) = v39;
  *(_OWORD *)(v19 + 176) = v22;
  long long v23 = v34;
  *(_OWORD *)(v19 + 64) = v33;
  *(_OWORD *)(v19 + 80) = v23;
  long long v24 = v36;
  *(_OWORD *)(v19 + 96) = v35;
  *(_OWORD *)(v19 + 112) = v24;
  long long v25 = v32;
  *(_OWORD *)(v19 + 32) = v31;
  *(_OWORD *)(v19 + 48) = v25;
  v30[4] = sub_1ACA64BE8;
  v30[5] = v19;
  v30[0] = MEMORY[0x1E4F143A8];
  v30[1] = 1107296256;
  v30[2] = sub_1ACA6DA9C;
  v30[3] = &block_descriptor_61;
  uint64_t v26 = _Block_copy(v30);
  swift_retain();
  sub_1ACA64BF4((uint64_t)&v31);
  swift_release();
  sub_1ACE75E08();
  v30[0] = MEMORY[0x1E4FBC860];
  sub_1ACA65308((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v11, v8, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v28);
}

uint64_t sub_1ACA64740(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
LABEL_22:
    uint64_t v17 = a3;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    a3 = v17;
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      uint64_t v19 = a3;
      for (uint64_t i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v7 = (id)MEMORY[0x1AD119490](i, a1);
        }
        else {
          id v7 = *(id *)(a1 + 8 * i + 32);
        }
        unint64_t v8 = v7;
        id v9 = objc_msgSend(v7, sel_uuid);
        if (v9)
        {
          uint64_t v10 = v9;
          uint64_t v11 = sub_1ACE761B8();
          uint64_t v13 = v12;

          if (v11 == a2 && v13 == v19)
          {

            swift_bridgeObjectRelease();
            return i;
          }
          char v15 = sub_1ACE77848();

          swift_bridgeObjectRelease();
          if (v15) {
            return i;
          }
          uint64_t v16 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
        }
        else
        {

          uint64_t v16 = i + 1;
          if (__OFADD__(i, 1)) {
            goto LABEL_21;
          }
        }
        if (v16 == v5) {
          return 0;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_1ACA648D4()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA64924()
{
  return sub_1ACA6493C((uint64_t (*)(void, void, void, void, void))sub_1ACA5C7CC);
}

uint64_t sub_1ACA6493C(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1ACA64954()
{
  swift_release();
  sub_1ACA63688(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));

  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + 184) != 2) {
    sub_1ACA63738(*(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(unsigned char *)(v0 + 168));
  }
  int v1 = *(unsigned __int8 *)(v0 + 248);
  if (v1 != 255) {
    sub_1ACA63688(*(void *)(v0 + 216), *(void *)(v0 + 224), *(void *)(v0 + 232), *(void *)(v0 + 240), v1);
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA64A14()
{
  return sub_1ACA5CCA8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), (long long *)(v0 + 40), *(void **)(v0 + 256), *(void *)(v0 + 264), *(void *)(v0 + 272));
}

uint64_t sub_1ACA64A2C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v17 = *(void *)(a1 + 88);
  uint64_t v18 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 104);
  uint64_t v16 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 128);
  uint64_t v13 = *(void *)(a1 + 120);
  uint64_t v14 = *(void *)(a1 + 112);
  uint64_t v4 = *(void *)(a1 + 136);
  __int16 v5 = *(_WORD *)(a1 + 144);
  uint64_t v6 = *(void *)(a1 + 184);
  uint64_t v12 = *(void *)(a1 + 176);
  uint64_t v7 = *(void *)(a1 + 192);
  uint64_t v8 = *(void *)(a1 + 200);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 208);
  sub_1ACA639E4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_bridgeObjectRetain();
  id v10 = v2;
  sub_1ACA63A5C(v20, v19, v18, v17, v16, v15, v14, v13, v3, v4, v5);
  sub_1ACA63B84(v12, v6, v7, v8, v9);
  return a1;
}

uint64_t sub_1ACA64B20()
{
  return objectdestroy_22Tm();
}

uint64_t objectdestroy_22Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80) != 1)
  {
    sub_1ACA63688(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));

    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v0 + 184) != 2) {
      sub_1ACA63738(*(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(unsigned char *)(v0 + 168));
    }
    int v1 = *(unsigned __int8 *)(v0 + 248);
    if (v1 != 255) {
      sub_1ACA63688(*(void *)(v0 + 216), *(void *)(v0 + 224), *(void *)(v0 + 232), *(void *)(v0 + 240), v1);
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1ACA64BE8()
{
  return sub_1ACA5CF08(*(void (**)(unsigned char *))(v0 + 16), *(void *)(v0 + 24), (_OWORD *)(v0 + 32));
}

uint64_t sub_1ACA64BF4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v20 = *(void *)(a1 + 16);
  uint64_t v21 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  __int16 v5 = *(void **)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 64);
  long long v18 = *(_OWORD *)(a1 + 88);
  long long v19 = *(_OWORD *)(a1 + 72);
  long long v16 = *(_OWORD *)(a1 + 120);
  long long v17 = *(_OWORD *)(a1 + 104);
  long long v15 = *(_OWORD *)(a1 + 136);
  long long v13 = *(_OWORD *)(a1 + 168);
  long long v14 = *(_OWORD *)(a1 + 152);
  long long v12 = *(_OWORD *)(a1 + 184);
  uint64_t v9 = *(void *)(a1 + 200);
  uint64_t v8 = *(void *)(a1 + 208);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 216);
  swift_bridgeObjectRetain();
  sub_1ACA638E4(v21, v20, v2, v3, v4, v5, v6, v7, v19, *((uint64_t *)&v19 + 1), v18, SBYTE8(v18), v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v9,
    v8,
    v10);
  return a1;
}

char *keypath_get_selector_uuid()
{
  return sel_uuid;
}

uint64_t sub_1ACA64D14(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1ACA50D4C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACA64D64()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA64DB4()
{
  return sub_1ACA64FF0((uint64_t (*)(void, void, void, void, void, void))sub_1ACA5C2AC);
}

uint64_t sub_1ACA64DCC()
{
  sub_1ACA63688(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + 160) != 2) {
    sub_1ACA63738(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(unsigned char *)(v0 + 144));
  }
  int v1 = *(unsigned __int8 *)(v0 + 224);
  if (v1 != 255) {
    sub_1ACA63688(*(void *)(v0 + 192), *(void *)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 216), v1);
  }
  swift_release();
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_1ACA64E7C()
{
  return sub_1ACA5A94C((uint64_t)(v0 + 2), v0[29], v0[30], v0[31]);
}

uint64_t sub_1ACA64E8C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 72);
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v16 = *(void *)(a1 + 88);
  uint64_t v17 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 104);
  uint64_t v15 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 128);
  uint64_t v12 = *(void *)(a1 + 120);
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v4 = *(void *)(a1 + 136);
  __int16 v5 = *(_WORD *)(a1 + 144);
  uint64_t v6 = *(void *)(a1 + 184);
  uint64_t v11 = *(void *)(a1 + 176);
  uint64_t v7 = *(void *)(a1 + 192);
  uint64_t v8 = *(void *)(a1 + 200);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 208);
  sub_1ACA63688(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));

  swift_bridgeObjectRelease();
  sub_1ACA6371C(v19, v18, v17, v16, v15, v14, v13, v12, v3, v4, v5);
  sub_1ACA63844(v11, v6, v7, v8, v9);
  return a1;
}

uint64_t sub_1ACA64F80()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA64FD8()
{
  return sub_1ACA64FF0((uint64_t (*)(void, void, void, void, void, void))sub_1ACA59FA4);
}

uint64_t sub_1ACA64FF0(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

char *keypath_get_selector_storeTrackId()
{
  return sel_storeTrackId;
}

id sub_1ACA65014@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_storeTrackId);
  *a2 = result;
  return result;
}

id sub_1ACA65048(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStoreTrackId_, *a1);
}

uint64_t *sub_1ACA6505C@<X0>(uint64_t *result@<X0>, uint64_t *a2@<X8>)
{
  *a2 = *result & ~(*result >> 63);
  return result;
}

uint64_t sub_1ACA6506C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA650A4(uint64_t a1)
{
  return sub_1ACA59BFC(a1, *(void *)(v1 + 16), *(uint64_t (**)(void *))(v1 + 24));
}

uint64_t sub_1ACA650B0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ACA6510C(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1ACA6514C()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_1ACA63688(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned char *)(v0 + 80));

  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + 192) != 2) {
    sub_1ACA63738(*(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(unsigned char *)(v0 + 176));
  }
  int v1 = *(unsigned __int8 *)(v0 + 256);
  if (v1 != 255) {
    sub_1ACA63688(*(void *)(v0 + 224), *(void *)(v0 + 232), *(void *)(v0 + 240), *(void *)(v0 + 248), v1);
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA6520C()
{
  return sub_1ACA5BDAC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), (long long *)(v0 + 48), *(void *)(v0 + 264), *(void *)(v0 + 272), *(void *)(v0 + 280), *(void *)(v0 + 288));
}

uint64_t sub_1ACA65244()
{
  swift_release();
  swift_release();
  sub_1ACA63688(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));

  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + 200) != 2) {
    sub_1ACA63738(*(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(unsigned char *)(v0 + 184));
  }
  int v1 = *(unsigned __int8 *)(v0 + 264);
  if (v1 != 255) {
    sub_1ACA63688(*(void *)(v0 + 232), *(void *)(v0 + 240), *(void *)(v0 + 248), *(void *)(v0 + 256), v1);
  }
  return swift_deallocObject();
}

void sub_1ACA652F4()
{
  sub_1ACA5B5C0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), v0 + 56);
}

uint64_t sub_1ACA65308(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACA65388(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_1ACA68E84(a1, (uint64_t)sub_1ACA4F87C, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t RemoteSyncTypeWithUnknownSyncProperties.encodeUnknownSyncProperties()(uint64_t a1, uint64_t a2)
{
  sub_1ACE74928();
  swift_allocObject();
  sub_1ACE74918();
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771C88);
  sub_1ACA69264(&qword_1EB771C90, (void (*)(void))sub_1ACA65540);
  uint64_t v4 = sub_1ACE74908();
  swift_release();
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1ACA65540()
{
  unint64_t result = qword_1EB771C38;
  if (!qword_1EB771C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771C38);
  }
  return result;
}

uint64_t Dictionary<>.flatteningUnknownSyncProperties<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t v8 = v7(a3, a4);
  if (!*(void *)(a2 + 16)
    || (uint64_t v10 = sub_1ACA66910(v8, v9, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1ACA669A4), (v11 & 1) == 0))
  {
    long long v18 = 0u;
    long long v19 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1ACA33128(*(void *)(a2 + 56) + 32 * v10, (uint64_t)&v18);
  swift_bridgeObjectRelease();
  if (!*((void *)&v19 + 1))
  {
LABEL_7:
    sub_1ACA65828((uint64_t)&v18);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    return a2;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = v7(a3, a4);
  sub_1ACA69138(v12, v13, &v18);
  swift_bridgeObjectRelease();
  sub_1ACA65828((uint64_t)&v18);
  sub_1ACE748C8();
  swift_allocObject();
  sub_1ACE748B8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771C88);
  sub_1ACA69264(&qword_1EB771C98, (void (*)(void))sub_1ACA692E0);
  sub_1ACE748A8();
  uint64_t v15 = sub_1ACA69BE4(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  a2 = sub_1ACA65388(v15, a2);
  swift_release();
  sub_1ACA50850(v16, v17);
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t sub_1ACA657FC(uint64_t a1, uint64_t a2)
{
  return sub_1ACA66910(a1, a2, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1ACA669A4);
}

uint64_t sub_1ACA65828(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB7725E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1ACA65888(unsigned __int8 *a1)
{
  sub_1ACE77B18();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1ACE77B78();
  return sub_1ACA66A88(a1, v2);
}

unint64_t sub_1ACA659A4(unsigned __int8 *a1)
{
  uint64_t v2 = sub_1ACD23AD0();
  return sub_1ACA66CBC(a1, v2);
}

unint64_t sub_1ACA659E8(unsigned __int8 *a1)
{
  uint64_t v2 = sub_1ACD238EC();
  return sub_1ACA66F4C(a1, v2);
}

unint64_t sub_1ACA65A2C(unsigned __int8 a1)
{
  sub_1ACE77B18();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1ACE77B78();
  return sub_1ACA67190(a1, v2);
}

unint64_t sub_1ACA65B48(uint64_t a1)
{
  uint64_t v2 = sub_1ACE771D8();
  return sub_1ACA673D4(a1, v2);
}

unint64_t sub_1ACA65B8C(unsigned __int8 a1)
{
  sub_1ACE77B18();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1ACE77B78();
  return sub_1ACA6749C(a1, v2);
}

uint64_t sub_1ACA65CC4(uint64_t a1)
{
  return sub_1ACA665D8(a1, MEMORY[0x1E4FBC3C0], (uint64_t (*)(uint64_t, uint64_t))sub_1ACA6772C);
}

unint64_t sub_1ACA65CF0(uint64_t a1, uint64_t a2)
{
  sub_1ACE77B18();
  sub_1ACE77B38();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1ACE76108();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = sub_1ACE77B78();
  return sub_1ACA677C8(a1, a2, v4);
}

unint64_t sub_1ACA65D94(uint64_t a1)
{
  sub_1ACE77B18();
  type metadata accessor for CFString(0);
  sub_1ACA69FA4(&qword_1EB770670, type metadata accessor for CFString);
  sub_1ACE752B8();
  uint64_t v2 = sub_1ACE77B78();
  return sub_1ACA67894(a1, v2);
}

unint64_t sub_1ACA65E48(uint64_t a1)
{
  uint64_t v2 = sub_1ACE77B08();
  return sub_1ACA6772C(a1, v2);
}

unint64_t sub_1ACA65E84(unsigned __int8 a1)
{
  sub_1ACE77B18();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1ACE77B78();
  return sub_1ACA679F0(a1, v2);
}

unint64_t sub_1ACA65F9C(int a1)
{
  int v2 = a1;
  sub_1ACE77B18();
  sub_1ACE77B28();
  if (v2 != 2) {
    sub_1ACE77B38();
  }
  uint64_t v3 = sub_1ACE77B78();
  return sub_1ACA67C24(a1, v3);
}

unint64_t sub_1ACA66034(uint64_t a1)
{
  sub_1ACE74898();
  int v2 = (void (*)(uint64_t))MEMORY[0x1E4F26C48];
  sub_1ACA69FA4(&qword_1E99F0F90, MEMORY[0x1E4F26C48]);
  uint64_t v3 = sub_1ACE760E8();
  return sub_1ACA68798(a1, v3, MEMORY[0x1E4F26C48], &qword_1E99F0F98, v2, MEMORY[0x1E4F26C58]);
}

unint64_t sub_1ACA66108(uint64_t a1)
{
  uint64_t v2 = sub_1ACE76F58();
  return sub_1ACA68938(a1, v2, (unint64_t *)&qword_1EB768ED8);
}

unint64_t sub_1ACA66158(char a1)
{
  sub_1ACE77B18();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1ACE77B78();
  return sub_1ACA67CBC(a1, v2);
}

unint64_t sub_1ACA661DC(uint64_t a1)
{
  uint64_t v2 = sub_1ACE76F58();
  return sub_1ACA67DA8(a1, v2);
}

unint64_t sub_1ACA66220(uint64_t *a1)
{
  sub_1ACE77B18();
  sub_1ACE77B58();
  sub_1ACE76108();
  sub_1ACE77B48();
  uint64_t v2 = sub_1ACE77B78();
  return sub_1ACA67EB4(a1, v2);
}

unint64_t sub_1ACA662B0(uint64_t a1)
{
  sub_1ACE761B8();
  sub_1ACE77B18();
  sub_1ACE76108();
  uint64_t v2 = sub_1ACE77B78();
  swift_bridgeObjectRelease();
  return sub_1ACA6808C(a1, v2);
}

unint64_t sub_1ACA66344(unsigned __int8 a1)
{
  sub_1ACE77B18();
  URLTrackIdentifier.ArgumentKey.rawValue.getter();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1ACE77B78();
  return sub_1ACA68204(a1, v2);
}

unint64_t sub_1ACA663D0(uint64_t a1)
{
  sub_1ACE75118();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1ACA69FA4((unint64_t *)&qword_1EB766C80, MEMORY[0x1E4F27990]);
  uint64_t v3 = sub_1ACE760E8();
  return sub_1ACA68798(a1, v3, MEMORY[0x1E4F27990], (unint64_t *)&unk_1E99F3ED0, v2, MEMORY[0x1E4F279B0]);
}

unint64_t sub_1ACA664A4(uint64_t a1)
{
  uint64_t v2 = sub_1ACE76F58();
  return sub_1ACA68938(a1, v2, (unint64_t *)&qword_1EB768F50);
}

unint64_t sub_1ACA664F4(uint64_t a1, uint64_t a2, char a3)
{
  char v6 = a3 & 1;
  sub_1ACE77B18();
  sub_1ACE77B28();
  if (a3) {
    sub_1ACE76108();
  }
  else {
    sub_1ACE77B58();
  }
  uint64_t v7 = sub_1ACE77B78();
  return sub_1ACA68A4C(a1, a2, v6, v7);
}

uint64_t sub_1ACA665AC(uint64_t a1)
{
  return sub_1ACA665D8(a1, MEMORY[0x1E4FBC3B8], (uint64_t (*)(uint64_t, uint64_t))sub_1ACA6772C);
}

uint64_t sub_1ACA665D8(uint64_t a1, void (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t))
{
  sub_1ACE77B18();
  a2(a1);
  uint64_t v5 = sub_1ACE77B78();
  return a3(a1, v5);
}

unint64_t sub_1ACA66658(long long *a1)
{
  long long v2 = a1[3];
  long long v9 = a1[2];
  long long v10 = v2;
  v11[0] = a1[4];
  *(_OWORD *)((char *)v11 + 11) = *(long long *)((char *)a1 + 75);
  long long v3 = a1[1];
  long long v7 = *a1;
  long long v8 = v3;
  sub_1ACE77B18();
  EpisodeStateModel.hash(into:)((uint64_t)v6);
  uint64_t v4 = sub_1ACE77B78();
  return sub_1ACA68B3C(a1, v4);
}

unint64_t sub_1ACA666E8(uint64_t a1)
{
  return sub_1ACA66790(a1, (void (*)(unsigned char *))ShazamSignatureRequest.hash(into:), (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, (uint64_t (*)(char *, uint64_t))_s18PodcastsFoundation22ShazamSignatureRequestV2eeoiySbAC_ACtFZ_0);
}

unint64_t sub_1ACA6673C(uint64_t a1)
{
  return sub_1ACA66790(a1, (void (*)(unsigned char *))TTMLRequest.hash(into:), (uint64_t (*)(void))type metadata accessor for TTMLRequest, (uint64_t (*)(void))type metadata accessor for TTMLRequest, (uint64_t (*)(char *, uint64_t))_s18PodcastsFoundation11TTMLRequestV2eeoiySbAC_ACtFZ_0);
}

unint64_t sub_1ACA66790(uint64_t a1, void (*a2)(unsigned char *), uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, uint64_t))
{
  sub_1ACE77B18();
  a2(v12);
  uint64_t v10 = sub_1ACE77B78();
  return sub_1ACA68C74(a1, v10, a3, a4, a5);
}

unint64_t sub_1ACA66828(_OWORD *a1)
{
  sub_1ACE77B18();
  ArtworkRequest.hash(into:)();
  uint64_t v2 = sub_1ACE77B78();
  return sub_1ACA68DC8(a1, v2);
}

unint64_t sub_1ACA66894(uint64_t a1)
{
  uint64_t v2 = sub_1ACE76F58();
  return sub_1ACA68938(a1, v2, &qword_1EB76E320);
}

uint64_t sub_1ACA668E4(uint64_t a1, uint64_t a2)
{
  return sub_1ACA66910(a1, a2, MEMORY[0x1E4FBAF48], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1ACA669A4);
}

uint64_t sub_1ACA66910(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  sub_1ACE77B18();
  a3(v10, a1, a2);
  uint64_t v7 = sub_1ACE77B78();
  return a4(a1, a2, v7);
}

unint64_t sub_1ACA669A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1ACE77848() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1ACE77848() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1ACA66A88(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = *a1;
    while (1)
    {
      unint64_t v7 = 0xE800000000000000;
      unint64_t v8 = 0x7365646F73697065;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0x80000001ACEC3C70;
          unint64_t v8 = 0xD000000000000010;
          break;
        case 2:
          unint64_t v8 = 0x2D74736163646F70;
          unint64_t v7 = 0xEF736E6F73616573;
          break;
        case 3:
          unint64_t v8 = 0x697263736E617274;
          unint64_t v7 = 0xEB00000000737470;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE800000000000000;
      uint64_t v10 = 0x7365646F73697065;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0x80000001ACEC3C70;
          if (v8 == 0xD000000000000010) {
            goto LABEL_14;
          }
          goto LABEL_15;
        case 2:
          uint64_t v10 = 0x2D74736163646F70;
          unint64_t v9 = 0xEF736E6F73616573;
          goto LABEL_11;
        case 3:
          unint64_t v9 = 0xEB00000000737470;
          if (v8 == 0x697263736E617274) {
            goto LABEL_14;
          }
          goto LABEL_15;
        default:
LABEL_11:
          if (v8 != v10) {
            goto LABEL_15;
          }
LABEL_14:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_15:
          char v11 = sub_1ACE77848();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1ACA66CBC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = *a1;
    while (1)
    {
      unint64_t v7 = 0x80000001ACEC3C70;
      unint64_t v8 = 0xD000000000000010;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE800000000000000;
          unint64_t v8 = 0x7374736163646F70;
          break;
        case 2:
          unint64_t v7 = 0x80000001ACEC3C90;
          break;
        case 3:
          unint64_t v7 = 0x80000001ACEC3CB0;
          break;
        case 4:
          unint64_t v8 = 0x697263736E617274;
          unint64_t v7 = 0xEB00000000737470;
          break;
        case 5:
          unint64_t v8 = 0x69726F6765746163;
          unint64_t v7 = 0xEA00000000007365;
          break;
        default:
          break;
      }
      unint64_t v9 = 0x80000001ACEC3C70;
      unint64_t v10 = 0xD000000000000010;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE800000000000000;
          if (v8 == 0x7374736163646F70) {
            goto LABEL_18;
          }
          goto LABEL_19;
        case 2:
          unint64_t v9 = 0x80000001ACEC3C90;
          if (v8 != 0xD000000000000010) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 3:
          unint64_t v9 = 0x80000001ACEC3CB0;
          if (v8 != 0xD000000000000010) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 4:
          unint64_t v10 = 0x697263736E617274;
          unint64_t v9 = 0xEB00000000737470;
          goto LABEL_17;
        case 5:
          unint64_t v9 = 0xEA00000000007365;
          if (v8 != 0x69726F6765746163) {
            goto LABEL_19;
          }
          goto LABEL_18;
        default:
LABEL_17:
          if (v8 != v10) {
            goto LABEL_19;
          }
LABEL_18:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_19:
          char v11 = sub_1ACE77848();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1ACA66F4C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = *a1;
    while (1)
    {
      unint64_t v7 = 0xE600000000000000;
      unint64_t v8 = 0x656C75646F6DLL;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0x80000001ACEC3EF0;
          unint64_t v8 = 0xD000000000000016;
          break;
        case 2:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x6C725564656566;
          break;
        case 3:
          unint64_t v8 = 0x6449636E7973;
          break;
        case 4:
          unint64_t v8 = 0x4B79616C70736964;
          unint64_t v7 = 0xEC00000073646E69;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE600000000000000;
      uint64_t v10 = 0x656C75646F6DLL;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0x80000001ACEC3EF0;
          if (v8 == 0xD000000000000016) {
            goto LABEL_15;
          }
          goto LABEL_16;
        case 2:
          unint64_t v9 = 0xE700000000000000;
          if (v8 != 0x6C725564656566) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 3:
          uint64_t v10 = 0x6449636E7973;
          goto LABEL_14;
        case 4:
          unint64_t v9 = 0xEC00000073646E69;
          if (v8 != 0x4B79616C70736964) {
            goto LABEL_16;
          }
          goto LABEL_15;
        default:
LABEL_14:
          if (v8 != v10) {
            goto LABEL_16;
          }
LABEL_15:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_16:
          char v11 = sub_1ACE77848();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1ACA67190(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE600000000000000;
      unint64_t v8 = 0x656C75646F6DLL;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0x80000001ACEC3EF0;
          unint64_t v8 = 0xD000000000000016;
          break;
        case 2:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x6C725564656566;
          break;
        case 3:
          unint64_t v8 = 0x6449636E7973;
          break;
        case 4:
          unint64_t v8 = 0x4B79616C70736964;
          unint64_t v7 = 0xEC00000073646E69;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE600000000000000;
      uint64_t v10 = 0x656C75646F6DLL;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0x80000001ACEC3EF0;
          if (v8 == 0xD000000000000016) {
            goto LABEL_15;
          }
          goto LABEL_16;
        case 2:
          unint64_t v9 = 0xE700000000000000;
          if (v8 != 0x6C725564656566) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 3:
          uint64_t v10 = 0x6449636E7973;
          goto LABEL_14;
        case 4:
          unint64_t v9 = 0xEC00000073646E69;
          if (v8 != 0x4B79616C70736964) {
            goto LABEL_16;
          }
          goto LABEL_15;
        default:
LABEL_14:
          if (v8 != v10) {
            goto LABEL_16;
          }
LABEL_15:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_16:
          char v11 = sub_1ACE77848();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1ACA673D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1ACA6A09C(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1AD1193A0](v9, a1);
      sub_1ACA6A0F8((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1ACA6749C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0x80000001ACEC3C70;
      unint64_t v8 = 0xD000000000000010;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE800000000000000;
          unint64_t v8 = 0x7374736163646F70;
          break;
        case 2:
          unint64_t v7 = 0x80000001ACEC3C90;
          break;
        case 3:
          unint64_t v7 = 0x80000001ACEC3CB0;
          break;
        case 4:
          unint64_t v8 = 0x697263736E617274;
          unint64_t v7 = 0xEB00000000737470;
          break;
        case 5:
          unint64_t v8 = 0x69726F6765746163;
          unint64_t v7 = 0xEA00000000007365;
          break;
        default:
          break;
      }
      unint64_t v9 = 0x80000001ACEC3C70;
      unint64_t v10 = 0xD000000000000010;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE800000000000000;
          if (v8 == 0x7374736163646F70) {
            goto LABEL_18;
          }
          goto LABEL_19;
        case 2:
          unint64_t v9 = 0x80000001ACEC3C90;
          if (v8 != 0xD000000000000010) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 3:
          unint64_t v9 = 0x80000001ACEC3CB0;
          if (v8 != 0xD000000000000010) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 4:
          unint64_t v10 = 0x697263736E617274;
          unint64_t v9 = 0xEB00000000737470;
          goto LABEL_17;
        case 5:
          unint64_t v9 = 0xEA00000000007365;
          if (v8 != 0x69726F6765746163) {
            goto LABEL_19;
          }
          goto LABEL_18;
        default:
LABEL_17:
          if (v8 != v10) {
            goto LABEL_19;
          }
LABEL_18:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_19:
          char v11 = sub_1ACE77848();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1ACA6772C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1ACA677C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = ~v5;
    uint64_t v10 = *(void *)(v3 + 48);
    do
    {
      char v11 = (void *)(v10 + 16 * v6);
      uint64_t v12 = v11[1];
      if (v12)
      {
        if (a2)
        {
          BOOL v13 = *v11 == a1 && v12 == a2;
          if (v13 || (sub_1ACE77848() & 1) != 0) {
            return v6;
          }
        }
      }
      else if (!a2)
      {
        return v6;
      }
      unint64_t v6 = (v6 + 1) & v9;
    }
    while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_1ACA67894(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    unint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_1ACA69FA4(&qword_1EB770670, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_1ACE752A8();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_1ACE752A8();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1ACA679F0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE800000000000000;
      unint64_t v8 = 0x7365646F73697065;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0x80000001ACEC3C70;
          unint64_t v8 = 0xD000000000000010;
          break;
        case 2:
          unint64_t v8 = 0x2D74736163646F70;
          unint64_t v7 = 0xEF736E6F73616573;
          break;
        case 3:
          unint64_t v8 = 0x697263736E617274;
          unint64_t v7 = 0xEB00000000737470;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE800000000000000;
      uint64_t v10 = 0x7365646F73697065;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0x80000001ACEC3C70;
          if (v8 == 0xD000000000000010) {
            goto LABEL_14;
          }
          goto LABEL_15;
        case 2:
          uint64_t v10 = 0x2D74736163646F70;
          unint64_t v9 = 0xEF736E6F73616573;
          goto LABEL_11;
        case 3:
          unint64_t v9 = 0xEB00000000737470;
          if (v8 == 0x697263736E617274) {
            goto LABEL_14;
          }
          goto LABEL_15;
        default:
LABEL_11:
          if (v8 != v10) {
            goto LABEL_15;
          }
LABEL_14:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_15:
          char v11 = sub_1ACE77848();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1ACA67C24(int a1, uint64_t a2)
{
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    do
    {
      int v7 = *(unsigned __int8 *)(*(void *)(v2 + 48) + result);
      if (v7 == 2)
      {
        if (a1 == 2) {
          return result;
        }
      }
      else
      {
        BOOL v8 = (v7 & 1) == 0;
        if a1 != 2 && ((a1 ^ v8)) {
          return result;
        }
      }
      unint64_t result = (result + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1ACA67CBC(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = *(void *)&aStdq_1[8 * a1];
    while (*(void *)&aStdq_1[8 * *(char *)(*(void *)(v2 + 48) + v4)] != v6)
    {
      char v7 = sub_1ACE77848();
      swift_bridgeObjectRelease_n();
      if ((v7 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1ACA67DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for FairPlayAsset();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_1ACE76F68();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_1ACE76F68();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1ACA67EB4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      sub_1ACA69FEC(*(void *)(v2 + 48) + 72 * v4, (uint64_t)v22);
      uint64_t v7 = v22[0];
      uint64_t v8 = *a1;
      sub_1ACA69FEC((uint64_t)v22, (uint64_t)v19);
      sub_1ACA69FEC((uint64_t)a1, (uint64_t)v16);
      if (v7 != v8) {
        break;
      }
      if (v20 == v17 && v21 == v18)
      {
        sub_1ACA6A048((uint64_t)v19);
        sub_1ACA6A048((uint64_t)v16);
        sub_1ACA69FEC((uint64_t)v22, (uint64_t)v15);
        sub_1ACA69FEC((uint64_t)a1, (uint64_t)v14);
      }
      else
      {
        char v10 = sub_1ACE77848();
        sub_1ACA6A048((uint64_t)v19);
        sub_1ACA6A048((uint64_t)v16);
        sub_1ACA69FEC((uint64_t)v22, (uint64_t)v15);
        sub_1ACA69FEC((uint64_t)a1, (uint64_t)v14);
        if ((v10 & 1) == 0) {
          goto LABEL_4;
        }
      }
      float v11 = flt_1ACE852C0[v15[24]];
      float v12 = flt_1ACE852C0[v14[24]];
      sub_1ACA6A048((uint64_t)v14);
      sub_1ACA6A048((uint64_t)v15);
      sub_1ACA6A048((uint64_t)v22);
      if (v11 == v12) {
        return v4;
      }
LABEL_5:
      unint64_t v4 = (v4 + 1) & v6;
      if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        return v4;
      }
    }
    sub_1ACA6A048((uint64_t)v19);
    sub_1ACA6A048((uint64_t)v16);
    sub_1ACA69FEC((uint64_t)v22, (uint64_t)v15);
    sub_1ACA69FEC((uint64_t)a1, (uint64_t)v14);
LABEL_4:
    sub_1ACA6A048((uint64_t)v14);
    sub_1ACA6A048((uint64_t)v15);
    sub_1ACA6A048((uint64_t)v22);
    goto LABEL_5;
  }
  return v4;
}

unint64_t sub_1ACA6808C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1ACE761B8();
    uint64_t v8 = v7;
    if (v6 == sub_1ACE761B8() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1ACE761B8();
          uint64_t v15 = v14;
          if (v13 == sub_1ACE761B8() && v15 == v16) {
            break;
          }
          char v18 = sub_1ACE77848();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1ACA68204(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 1684632949;
      unint64_t v8 = 0xE400000000000000;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0x5565646F73697065;
          goto LABEL_12;
        case 2:
          unint64_t v8 = 0x80000001ACEC4370;
          unint64_t v7 = 0xD000000000000011;
          break;
        case 3:
          unint64_t v7 = 0x61725465726F7473;
          uint64_t v9 = 1682533219;
          goto LABEL_22;
        case 4:
          unint64_t v7 = 0x6B63616279616C70;
          unint64_t v8 = 0xED0000726564724FLL;
          break;
        case 5:
          unint64_t v7 = 0x4674736163646F70;
          unint64_t v8 = 0xEE004C5255646565;
          break;
        case 6:
          unint64_t v7 = 1684632420;
          break;
        case 7:
          unint64_t v7 = 0x49746E65746E6F63;
          unint64_t v8 = 0xED000064496D6574;
          break;
        case 8:
          unint64_t v7 = 0x4765646F73697065;
LABEL_12:
          unint64_t v8 = 0xEB00000000646975;
          break;
        case 9:
          unint64_t v7 = 0x5465646F73697065;
          goto LABEL_15;
        case 0xA:
          unint64_t v7 = 0x5474736163646F70;
LABEL_15:
          uint64_t v9 = 1701606505;
          goto LABEL_22;
        case 0xB:
          unint64_t v7 = 0x72556D6165727473;
          unint64_t v8 = 0xE90000000000006CLL;
          break;
        case 0xC:
          unint64_t v8 = 0xE800000000000000;
          unint64_t v7 = 0x6461656879616C70;
          break;
        case 0xD:
          unint64_t v7 = 0x7361655279616C70;
          unint64_t v8 = 0xEA00000000006E6FLL;
          break;
        case 0xE:
          unint64_t v8 = 0xE700000000000000;
          unint64_t v7 = 0x747865746E6F63;
          break;
        case 0xF:
          unint64_t v7 = 0x53747865746E6F63;
          unint64_t v8 = 0xEF6570795474726FLL;
          break;
        case 0x10:
          unint64_t v7 = 0x7265756575716E65;
          uint64_t v9 = 1145656132;
LABEL_22:
          unint64_t v8 = v9 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        default:
          break;
      }
      unint64_t v10 = 0xE400000000000000;
      switch(v6)
      {
        case 1:
          uint64_t v12 = 0x5565646F73697065;
          goto LABEL_42;
        case 2:
          unint64_t v10 = 0x80000001ACEC4370;
          if (v7 != 0xD000000000000011) {
            goto LABEL_26;
          }
          goto LABEL_25;
        case 3:
          uint64_t v13 = 0x61725465726F7473;
          uint64_t v14 = 1682533219;
          goto LABEL_58;
        case 4:
          uint64_t v15 = 0x6B63616279616C70;
          uint64_t v16 = 0x726564724FLL;
          goto LABEL_39;
        case 5:
          unint64_t v10 = 0xEE004C5255646565;
          if (v7 != 0x4674736163646F70) {
            goto LABEL_26;
          }
          goto LABEL_25;
        case 6:
          if (v7 != 1684632420) {
            goto LABEL_26;
          }
          goto LABEL_25;
        case 7:
          uint64_t v15 = 0x49746E65746E6F63;
          uint64_t v16 = 0x64496D6574;
LABEL_39:
          unint64_t v10 = v16 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
          if (v7 != v15) {
            goto LABEL_26;
          }
          goto LABEL_25;
        case 8:
          uint64_t v12 = 0x4765646F73697065;
LABEL_42:
          unint64_t v10 = 0xEB00000000646975;
          if (v7 != v12) {
            goto LABEL_26;
          }
          goto LABEL_25;
        case 9:
          uint64_t v13 = 0x5465646F73697065;
          goto LABEL_46;
        case 10:
          uint64_t v13 = 0x5474736163646F70;
LABEL_46:
          uint64_t v14 = 1701606505;
          goto LABEL_58;
        case 11:
          unint64_t v10 = 0xE90000000000006CLL;
          if (v7 != 0x72556D6165727473) {
            goto LABEL_26;
          }
          goto LABEL_25;
        case 12:
          unint64_t v10 = 0xE800000000000000;
          if (v7 != 0x6461656879616C70) {
            goto LABEL_26;
          }
          goto LABEL_25;
        case 13:
          unint64_t v10 = 0xEA00000000006E6FLL;
          if (v7 != 0x7361655279616C70) {
            goto LABEL_26;
          }
          goto LABEL_25;
        case 14:
          unint64_t v10 = 0xE700000000000000;
          if (v7 != 0x747865746E6F63) {
            goto LABEL_26;
          }
          goto LABEL_25;
        case 15:
          unint64_t v10 = 0xEF6570795474726FLL;
          if (v7 != 0x53747865746E6F63) {
            goto LABEL_26;
          }
          goto LABEL_25;
        case 16:
          uint64_t v13 = 0x7265756575716E65;
          uint64_t v14 = 1145656132;
LABEL_58:
          unint64_t v10 = v14 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          if (v7 != v13) {
            goto LABEL_26;
          }
          goto LABEL_25;
        default:
          if (v7 != 1684632949) {
            goto LABEL_26;
          }
LABEL_25:
          if (v8 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_26:
          char v11 = sub_1ACE77848();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1ACA68798(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  long long v24 = a5;
  uint64_t v25 = a6;
  long long v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_1ACA69FA4(v23, v24);
      char v19 = sub_1ACE76168();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_1ACA68938(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1ACA50D4C(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_1ACE76F68();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_1ACE76F68();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1ACA68A4C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v11 = ~v6;
    uint64_t v12 = *(void *)(v4 + 48);
    do
    {
      unint64_t v13 = (uint64_t *)(v12 + 24 * v7);
      uint64_t v14 = *v13;
      if (*((unsigned char *)v13 + 16) == 1)
      {
        if (a3)
        {
          BOOL v15 = v14 == a1 && v13[1] == a2;
          if (v15 || (sub_1ACE77848() & 1) != 0) {
            return v7;
          }
        }
      }
      else if ((a3 & 1) == 0 && v14 == a1)
      {
        return v7;
      }
      unint64_t v7 = (v7 + 1) & v11;
    }
    while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_1ACA68B3C(_OWORD *a1, uint64_t a2)
{
  long long v3 = a1[3];
  v37[2] = a1[2];
  void v37[3] = v3;
  v38[0] = a1[4];
  *(_OWORD *)((char *)v38 + 11) = *(_OWORD *)((char *)a1 + 75);
  long long v4 = a1[1];
  v37[0] = *a1;
  v37[1] = v4;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v6 = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = ~v5;
    do
    {
      uint64_t v8 = *(void *)(v2 + 48) + 96 * v6;
      char v9 = *(unsigned char *)(v8 + 8);
      char v10 = *(unsigned char *)(v8 + 9);
      char v11 = *(unsigned char *)(v8 + 10);
      char v12 = *(unsigned char *)(v8 + 11);
      char v13 = *(unsigned char *)(v8 + 12);
      char v14 = *(unsigned char *)(v8 + 13);
      uint64_t v15 = *(void *)(v8 + 32);
      char v16 = *(unsigned char *)(v8 + 40);
      uint64_t v17 = *(void *)(v8 + 80);
      __int16 v18 = *(_WORD *)(v8 + 88);
      char v19 = *(unsigned char *)(v8 + 90);
      uint64_t v22 = *(void *)v8;
      char v23 = v9;
      char v24 = v10;
      char v25 = v11;
      char v26 = v12;
      char v27 = v13;
      char v28 = v14;
      long long v29 = *(_OWORD *)(v8 + 16);
      uint64_t v30 = v15;
      char v31 = v16;
      long long v20 = *(_OWORD *)(v8 + 64);
      long long v32 = *(_OWORD *)(v8 + 48);
      long long v33 = v20;
      uint64_t v34 = v17;
      char v36 = v19;
      __int16 v35 = v18;
      if (_s18PodcastsFoundation17EpisodeStateModelV2eeoiySbAC_ACtFZ_0((uint64_t)&v22, (uint64_t)v37)) {
        break;
      }
      unint64_t v6 = (v6 + 1) & v7;
    }
    while (((*(void *)(v2 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_1ACA68C74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, uint64_t))
{
  uint64_t v10 = a3(0) - 8;
  MEMORY[0x1F4188790](v10);
  char v13 = (char *)&v20 - v12;
  uint64_t v14 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v15 = a2 & ~v14;
  if ((*(void *)(v5 + 64 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    uint64_t v16 = ~v14;
    uint64_t v17 = *(void *)(v11 + 72);
    do
    {
      sub_1ACA69EDC(*(void *)(v5 + 48) + v17 * v15, (uint64_t)v13, a4);
      char v18 = a5(v13, a1);
      sub_1ACA69F44((uint64_t)v13, a4);
      if (v18) {
        break;
      }
      unint64_t v15 = (v15 + 1) & v16;
    }
    while (((*(void *)(v5 + 64 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
  }
  return v15;
}

unint64_t sub_1ACA68DC8(_OWORD *a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1ACA69E2C(*(void *)(v2 + 48) + (v4 << 8), (uint64_t)v9);
      BOOL v7 = _s18PodcastsFoundation14ArtworkRequestV2eeoiySbAC_ACtFZ_0(v9, a1);
      sub_1ACA69E88((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1ACA68E84(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v34 = a1;
  uint64_t v35 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v36 = v8;
  uint64_t v37 = 0;
  uint64_t v38 = v11 & v9;
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1ACA4FC28(&v32);
  uint64_t v12 = *((void *)&v32 + 1);
  if (!*((void *)&v32 + 1))
  {
LABEL_19:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1ACA50A70();
    return swift_release();
  }
  while (1)
  {
    uint64_t v14 = v32;
    sub_1ACA3AA44(&v33, v31);
    uint64_t v15 = *a5;
    unint64_t v17 = sub_1ACA66910(v14, v12, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1ACA669A4);
    uint64_t v18 = *(void *)(v15 + 16);
    BOOL v19 = (v16 & 1) == 0;
    if (__OFADD__(v18, v19)) {
      break;
    }
    char v20 = v16;
    if (*(void *)(v15 + 24) >= v18 + v19)
    {
      if (a4)
      {
        if (v16) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_1ACD0568C();
        if (v20) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      sub_1ACCFB66C();
      uint64_t v21 = sub_1ACA66910(v14, v12, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1ACA669A4);
      if ((v20 & 1) != (v22 & 1)) {
        goto LABEL_22;
      }
      unint64_t v17 = v21;
      if (v20)
      {
LABEL_6:
        sub_1ACA33128(*(void *)(*a5 + 56) + 32 * v17, (uint64_t)v29);
        sub_1ACA33128((uint64_t)v29, (uint64_t)v30);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
        swift_bridgeObjectRelease();
        char v13 = (_OWORD *)(*(void *)(*a5 + 56) + 32 * v17);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
        sub_1ACA3AA44(v30, v13);
        goto LABEL_7;
      }
    }
    char v23 = (void *)*a5;
    *(void *)(*a5 + 8 * (v17 >> 6) + 64) |= 1 << v17;
    char v24 = (uint64_t *)(v23[6] + 16 * v17);
    uint64_t *v24 = v14;
    v24[1] = v12;
    sub_1ACA3AA44(v31, (_OWORD *)(v23[7] + 32 * v17));
    uint64_t v25 = v23[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_21;
    }
    v23[2] = v27;
LABEL_7:
    sub_1ACA4FC28(&v32);
    uint64_t v12 = *((void *)&v32 + 1);
    a4 = 1;
    if (!*((void *)&v32 + 1)) {
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

double sub_1ACA69138@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1ACA66910(a1, a2, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1ACA669A4);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1ACD0568C();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1ACA3AA44((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_1ACB1B018(v8, v11);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1ACA69264(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB771C88);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACA692E0()
{
  unint64_t result = qword_1EB771C40;
  if (!qword_1EB771C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771C40);
  }
  return result;
}

uint64_t sub_1ACA69334(uint64_t a1, uint64_t a2)
{
  return sub_1ACA6938C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1ACB1B6A4, (void (*)(void))sub_1ACD06108);
}

uint64_t sub_1ACA69360(uint64_t a1, uint64_t a2)
{
  return sub_1ACA6938C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1ACB1B6A4, (void (*)(void))sub_1ACD06114);
}

uint64_t sub_1ACA6938C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), void (*a4)(void))
{
  uint64_t v7 = v4;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1ACA66910(a1, a2, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1ACA669A4);
  LOBYTE(a2) = v11;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v7;
  uint64_t v16 = *v7;
  *uint64_t v7 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a4();
    uint64_t v13 = v16;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(*(void *)(v13 + 56) + 8 * v10);
  a3(v10, v13);
  *uint64_t v7 = v13;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1ACA6949C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1ACA66158(a1);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v8)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v3;
    uint64_t v20 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1ACD06B84();
      uint64_t v10 = v20;
    }
    uint64_t v11 = *(void *)(v10 + 56);
    uint64_t v12 = sub_1ACE750A8();
    uint64_t v19 = *(void *)(v12 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v19 + 32))(a2, v11 + *(void *)(v19 + 72) * v6, v12);
    sub_1ACB1BBD4(v6, v10);
    *uint64_t v3 = v10;
    swift_bridgeObjectRelease();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
    uint64_t v14 = a2;
    uint64_t v15 = 0;
    uint64_t v16 = v12;
  }
  else
  {
    uint64_t v17 = sub_1ACE750A8();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v16 = v17;
    uint64_t v14 = a2;
    uint64_t v15 = 1;
  }
  return v13(v14, v15, 1, v16);
}

uint64_t sub_1ACA69638(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1ACA65E48(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  unint64_t v5 = v3;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v1;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1ACD071F0();
    uint64_t v7 = v10;
  }
  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 8 * v5);
  sub_1ACB1BFFC(v5, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

double sub_1ACA696D0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  char v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1ACC524A8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *char v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1ACD0568C();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1ACA3AA44((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_1ACB1B018(v8, v11);
    *char v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1ACA697D4(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1ACA66034(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v1;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1ACD0920C();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_1ACE74898();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_1ACB1D610(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1ACA698D8(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1ACA65E48(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  unint64_t v5 = v3;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v1;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1ACD094A0();
    uint64_t v7 = v10;
  }
  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 8 * v5);
  sub_1ACB1BFE0(v5, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1ACA69970(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1ACA66910(a1, a2, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1ACA669A4);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *unint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1ACD09A24();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1ACB1B6A4(v6, v9);
  *unint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1ACA69A68(uint64_t a1, uint64_t a2)
{
  return sub_1ACA6938C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1ACB1B6A4, (void (*)(void))sub_1ACD09BE0);
}

uint64_t sub_1ACA69A94(uint64_t a1, uint64_t a2)
{
  return sub_1ACA6938C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1ACB1B6A4, (void (*)(void))sub_1ACD09BEC);
}

uint64_t sub_1ACA69AC0(uint64_t a1, uint64_t a2)
{
  return sub_1ACA6938C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1ACB1B6A4, (void (*)(void))sub_1ACD09BF8);
}

uint64_t sub_1ACA69AEC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1ACA66910(a1, a2, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1ACA669A4);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *unint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1ACD0A6F4();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1ACB1DD78(v6, v9);
  *unint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1ACA69BE4(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3F0);
  uint64_t result = sub_1ACE77538();
  unint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v26 = a1;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v22 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v23 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v26 + 48) + 16 * i);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    sub_1ACA6A14C(*(void *)(v26 + 56) + 40 * i, (uint64_t)v25);
    swift_bridgeObjectRetain();
    AnyCodable.value.getter((uint64_t)v24);
    sub_1ACA6A1A8((uint64_t)v25);
    *(void *)(v9 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v18 = (void *)(v3[6] + 16 * i);
    void *v18 = v16;
    v18[1] = v17;
    uint64_t result = (uint64_t)sub_1ACA3AA44(v24, (_OWORD *)(v3[7] + 32 * i));
    uint64_t v19 = v3[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v21;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v12 >= v23) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v22 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v23) {
        return (uint64_t)v3;
      }
      unint64_t v13 = *(void *)(v22 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v23) {
          return (uint64_t)v3;
        }
        unint64_t v13 = *(void *)(v22 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v23) {
    return (uint64_t)v3;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v23) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v22 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t dispatch thunk of RemoteSyncTypeWithUnknownSyncProperties.unknownSyncProperties.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static RemoteSyncTypeWithUnknownSyncProperties.unknownSyncKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1ACA69E2C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ACA69E88(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACA69EDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACA69F44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1ACA69FA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACA69FEC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ACA6A048(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACA6A09C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ACA6A0F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACA6A14C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ACA6A1A8(uint64_t a1)
{
  return a1;
}

uint64_t DatabasePropertyPublisher.objectsToObserve.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DatabasePropertyPublisher.entitiesToObserve.getter()
{
  return swift_bridgeObjectRetain();
}

id DatabasePropertyPublisher.notificationCenter.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t DatabasePropertyPublisher.init(objectsToObserve:entitiesToObserve:notificationCenter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770520);
  swift_allocObject();
  id v8 = a3;
  uint64_t v9 = sub_1ACE758B8();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770778);
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 24) = 0;
  *(void *)(v10 + 16) = MEMORY[0x1E4FBC870];
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB772738);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = 0;
  *a4 = a1;
  a4[1] = a2;
  a4[2] = v8;
  a4[3] = v9;
  a4[4] = v10;
  a4[5] = result;
  return result;
}

uint64_t sub_1ACA6A2E0()
{
  long long v1 = v0[1];
  v108[0] = *v0;
  v108[1] = v1;
  v108[2] = v0[2];
  uint64_t result = sub_1ACE749D8();
  if (!result) {
    return result;
  }
  uint64_t v3 = result;
  uint64_t v107 = MEMORY[0x1E4FBC860];
  uint64_t v98 = sub_1ACE761B8();
  sub_1ACE771F8();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1ACA65B48((uint64_t)v104), (v5 & 1) != 0))
  {
    sub_1ACA33128(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v105);
  }
  else
  {
    long long v105 = 0u;
    long long v106 = 0u;
  }
  sub_1ACA6A0F8((uint64_t)v104);
  if (*((void *)&v106 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E0C0);
    if (swift_dynamicCast())
    {
      uint64_t v90 = v3;
      sub_1ACA6B7E8((uint64_t)v108);
      uint64_t v6 = sub_1ACA6C3A0(v98, (uint64_t)v108);
      uint64_t v89 = 0;
      sub_1ACA6D60C((uint64_t)v108);
      unint64_t v95 = v6 & 0xC000000000000001;
      if ((v6 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = sub_1ACE77178();
        if (v7)
        {
LABEL_10:
          uint64_t v99 = MEMORY[0x1E4FBC860];
          sub_1ACC82E88(0, v7 & ~(v7 >> 63), 0);
          if (v95)
          {
            uint64_t result = sub_1ACE77128();
            char v9 = 1;
          }
          else
          {
            uint64_t result = sub_1ACDC4144(v6);
            char v9 = v12 & 1;
          }
          *(void *)&long long v105 = result;
          *((void *)&v105 + 1) = v8;
          LOBYTE(v106) = v9;
          if (v7 < 0)
          {
            __break(1u);
            goto LABEL_99;
          }
          uint64_t v92 = v6;
          do
          {
            while (1)
            {
              long long v18 = v105;
              uint64_t v19 = v106;
              sub_1ACDC3C54(v105, *((uint64_t *)&v105 + 1), v106, v6);
              uint64_t v21 = v20;
              id v22 = objc_msgSend(v20, sel_entity);
              id v23 = objc_msgSend(v22, sel_name);

              if (v23)
              {
                uint64_t v24 = sub_1ACE761B8();
                unint64_t v26 = v25;
              }
              else
              {
                uint64_t v24 = 0;
                unint64_t v26 = 0xE000000000000000;
              }
              id v27 = objc_msgSend(v21, sel_objectID, v89);

              uint64_t v28 = v99;
              uint64_t result = swift_isUniquelyReferenced_nonNull_native();
              if ((result & 1) == 0)
              {
                uint64_t result = sub_1ACC82E88(0, *(void *)(v99 + 16) + 1, 1);
                uint64_t v28 = v99;
              }
              unint64_t v30 = *(void *)(v28 + 16);
              unint64_t v29 = *(void *)(v28 + 24);
              if (v30 >= v29 >> 1)
              {
                uint64_t result = sub_1ACC82E88(v29 > 1, v30 + 1, 1);
                uint64_t v28 = v99;
              }
              *(void *)(v28 + 16) = v30 + 1;
              unint64_t v31 = v28 + 32 * v30;
              *(unsigned char *)(v31 + 32) = 0;
              *(void *)(v31 + 40) = v24;
              *(void *)(v31 + 48) = v26;
              *(void *)(v31 + 56) = v27;
              if (v95) {
                break;
              }
              uint64_t v6 = v92;
              uint64_t v13 = sub_1ACDC3B6C(v18, *((void *)&v18 + 1), v19, v92);
              uint64_t v15 = v14;
              char v17 = v16;
              sub_1ACA6D674(v18, *((uint64_t *)&v18 + 1), v19);
              *(void *)&long long v105 = v13;
              *((void *)&v105 + 1) = v15;
              LOBYTE(v106) = v17 & 1;
              if (!--v7) {
                goto LABEL_32;
              }
            }
            uint64_t v6 = v92;
            if ((v19 & 1) == 0) {
              goto LABEL_101;
            }
            if (sub_1ACE77148()) {
              swift_isUniquelyReferenced_nonNull_native();
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0FB0);
            long long v32 = (void (*)(void *, void))sub_1ACE769E8();
            sub_1ACE771C8();
            v32(v104, 0);
            --v7;
          }
          while (v7);
LABEL_32:
          sub_1ACA6D674(v105, *((uint64_t *)&v105 + 1), v106);
          swift_release();
          uint64_t v11 = v99;
          goto LABEL_33;
        }
      }
      else
      {
        uint64_t v7 = *(void *)(v6 + 16);
        if (v7) {
          goto LABEL_10;
        }
      }
      swift_release();
      uint64_t v11 = MEMORY[0x1E4FBC860];
LABEL_33:
      sub_1ACA6EE38(v11);
      uint64_t v10 = v89;
      uint64_t v3 = v90;
      goto LABEL_34;
    }
  }
  else
  {
    sub_1ACA50E78((uint64_t)&v105, qword_1EB7725E0);
  }
  uint64_t v10 = 0;
LABEL_34:
  uint64_t v100 = sub_1ACE761B8();
  sub_1ACE771F8();
  if (*(void *)(v3 + 16) && (unint64_t v33 = sub_1ACA65B48((uint64_t)v104), (v34 & 1) != 0))
  {
    sub_1ACA33128(*(void *)(v3 + 56) + 32 * v33, (uint64_t)&v105);
  }
  else
  {
    long long v105 = 0u;
    long long v106 = 0u;
  }
  sub_1ACA6A0F8((uint64_t)v104);
  if (!*((void *)&v106 + 1))
  {
    sub_1ACA50E78((uint64_t)&v105, qword_1EB7725E0);
    goto LABEL_65;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E0C0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_65:
    uint64_t v102 = sub_1ACE761B8();
    sub_1ACE771F8();
    if (*(void *)(v3 + 16) && (unint64_t v61 = sub_1ACA65B48((uint64_t)v104), (v62 & 1) != 0))
    {
      sub_1ACA33128(*(void *)(v3 + 56) + 32 * v61, (uint64_t)&v105);
    }
    else
    {
      long long v105 = 0u;
      long long v106 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1ACA6A0F8((uint64_t)v104);
    if (*((void *)&v106 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E0C0);
      if (swift_dynamicCast())
      {
        sub_1ACA6B7E8((uint64_t)v108);
        uint64_t v63 = sub_1ACA6C3A0(v102, (uint64_t)v108);
        sub_1ACA6D60C((uint64_t)v108);
        unint64_t v97 = v63 & 0xC000000000000001;
        if ((v63 & 0xC000000000000001) != 0)
        {
          uint64_t v64 = sub_1ACE77178();
          if (v64) {
            goto LABEL_73;
          }
        }
        else
        {
          uint64_t v64 = *(void *)(v63 + 16);
          if (v64)
          {
LABEL_73:
            uint64_t v103 = MEMORY[0x1E4FBC860];
            sub_1ACC82E88(0, v64 & ~(v64 >> 63), 0);
            if (v97)
            {
              uint64_t result = sub_1ACE77128();
              char v66 = 1;
            }
            else
            {
              uint64_t result = sub_1ACDC4144(v63);
              char v66 = v68 & 1;
            }
            *(void *)&long long v105 = result;
            *((void *)&v105 + 1) = v65;
            LOBYTE(v106) = v66;
            if ((v64 & 0x8000000000000000) == 0)
            {
              uint64_t v94 = v63;
              do
              {
                while (1)
                {
                  long long v74 = v105;
                  uint64_t v75 = v106;
                  sub_1ACDC3C54(v105, *((uint64_t *)&v105 + 1), v106, v63);
                  __int16 v77 = v76;
                  id v78 = objc_msgSend(v76, sel_entity);
                  id v79 = objc_msgSend(v78, sel_name);

                  if (v79)
                  {
                    uint64_t v80 = sub_1ACE761B8();
                    unint64_t v82 = v81;
                  }
                  else
                  {
                    uint64_t v80 = 0;
                    unint64_t v82 = 0xE000000000000000;
                  }
                  id v83 = objc_msgSend(v77, sel_objectID, v89);

                  uint64_t v84 = v103;
                  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
                  if ((result & 1) == 0)
                  {
                    uint64_t result = sub_1ACC82E88(0, *(void *)(v103 + 16) + 1, 1);
                    uint64_t v84 = v103;
                  }
                  unint64_t v86 = *(void *)(v84 + 16);
                  unint64_t v85 = *(void *)(v84 + 24);
                  if (v86 >= v85 >> 1)
                  {
                    uint64_t result = sub_1ACC82E88(v85 > 1, v86 + 1, 1);
                    uint64_t v84 = v103;
                  }
                  *(void *)(v84 + 16) = v86 + 1;
                  unint64_t v87 = v84 + 32 * v86;
                  *(unsigned char *)(v87 + 32) = 2;
                  *(void *)(v87 + 40) = v80;
                  *(void *)(v87 + 48) = v82;
                  *(void *)(v87 + 56) = v83;
                  if (v97) {
                    break;
                  }
                  uint64_t v63 = v94;
                  uint64_t v69 = sub_1ACDC3B6C(v74, *((void *)&v74 + 1), v75, v94);
                  uint64_t v71 = v70;
                  char v73 = v72;
                  sub_1ACA6D674(v74, *((uint64_t *)&v74 + 1), v75);
                  *(void *)&long long v105 = v69;
                  *((void *)&v105 + 1) = v71;
                  LOBYTE(v106) = v73 & 1;
                  if (!--v64) {
                    goto LABEL_94;
                  }
                }
                uint64_t v63 = v94;
                if ((v75 & 1) == 0) {
                  goto LABEL_103;
                }
                if (sub_1ACE77148()) {
                  swift_isUniquelyReferenced_nonNull_native();
                }
                __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0FB0);
                uint64_t v88 = (void (*)(void *, void))sub_1ACE769E8();
                sub_1ACE771C8();
                v88(v104, 0);
                --v64;
              }
              while (v64);
LABEL_94:
              sub_1ACA6D674(v105, *((uint64_t *)&v105 + 1), v106);
              swift_release();
              uint64_t v67 = v103;
              goto LABEL_95;
            }
            goto LABEL_100;
          }
        }
        swift_release();
        uint64_t v67 = MEMORY[0x1E4FBC860];
LABEL_95:
        sub_1ACA6EE38(v67);
      }
    }
    else
    {
      sub_1ACA50E78((uint64_t)&v105, qword_1EB7725E0);
    }
    v104[0] = v107;
    sub_1ACE75898();
    return swift_bridgeObjectRelease();
  }
  uint64_t v91 = v3;
  sub_1ACA6B7E8((uint64_t)v108);
  uint64_t v35 = sub_1ACA6C3A0(v100, (uint64_t)v108);
  uint64_t v89 = v10;
  sub_1ACA6D60C((uint64_t)v108);
  unint64_t v96 = v35 & 0xC000000000000001;
  if ((v35 & 0xC000000000000001) != 0)
  {
    uint64_t v36 = sub_1ACE77178();
    if (v36) {
      goto LABEL_42;
    }
LABEL_46:
    swift_release();
    uint64_t v39 = MEMORY[0x1E4FBC860];
LABEL_64:
    sub_1ACA6EE38(v39);
    uint64_t v3 = v91;
    goto LABEL_65;
  }
  uint64_t v36 = *(void *)(v35 + 16);
  if (!v36) {
    goto LABEL_46;
  }
LABEL_42:
  uint64_t v101 = MEMORY[0x1E4FBC860];
  sub_1ACC82E88(0, v36 & ~(v36 >> 63), 0);
  if (v96)
  {
    uint64_t result = sub_1ACE77128();
    char v38 = 1;
  }
  else
  {
    uint64_t result = sub_1ACDC4144(v35);
    char v38 = v40 & 1;
  }
  *(void *)&long long v105 = result;
  *((void *)&v105 + 1) = v37;
  LOBYTE(v106) = v38;
  if ((v36 & 0x8000000000000000) == 0)
  {
    uint64_t v93 = v35;
    do
    {
      while (1)
      {
        long long v46 = v105;
        uint64_t v47 = v106;
        sub_1ACDC3C54(v105, *((uint64_t *)&v105 + 1), v106, v35);
        uint64_t v49 = v48;
        id v50 = objc_msgSend(v48, sel_entity);
        id v51 = objc_msgSend(v50, sel_name);

        if (v51)
        {
          uint64_t v52 = sub_1ACE761B8();
          unint64_t v54 = v53;
        }
        else
        {
          uint64_t v52 = 0;
          unint64_t v54 = 0xE000000000000000;
        }
        id v55 = objc_msgSend(v49, sel_objectID, v89);

        uint64_t v56 = v101;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1ACC82E88(0, *(void *)(v101 + 16) + 1, 1);
          uint64_t v56 = v101;
        }
        unint64_t v58 = *(void *)(v56 + 16);
        unint64_t v57 = *(void *)(v56 + 24);
        if (v58 >= v57 >> 1)
        {
          uint64_t result = sub_1ACC82E88(v57 > 1, v58 + 1, 1);
          uint64_t v56 = v101;
        }
        *(void *)(v56 + 16) = v58 + 1;
        unint64_t v59 = v56 + 32 * v58;
        *(unsigned char *)(v59 + 32) = 1;
        *(void *)(v59 + 40) = v52;
        *(void *)(v59 + 48) = v54;
        *(void *)(v59 + 56) = v55;
        if (v96) {
          break;
        }
        uint64_t v35 = v93;
        uint64_t v41 = sub_1ACDC3B6C(v46, *((void *)&v46 + 1), v47, v93);
        uint64_t v43 = v42;
        char v45 = v44;
        sub_1ACA6D674(v46, *((uint64_t *)&v46 + 1), v47);
        *(void *)&long long v105 = v41;
        *((void *)&v105 + 1) = v43;
        LOBYTE(v106) = v45 & 1;
        if (!--v36) {
          goto LABEL_63;
        }
      }
      uint64_t v35 = v93;
      if ((v47 & 1) == 0) {
        goto LABEL_102;
      }
      if (sub_1ACE77148()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0FB0);
      uint64_t v60 = (void (*)(void *, void))sub_1ACE769E8();
      sub_1ACE771C8();
      v60(v104, 0);
      --v36;
    }
    while (v36);
LABEL_63:
    sub_1ACA6D674(v105, *((uint64_t *)&v105 + 1), v106);
    swift_release();
    uint64_t v39 = v101;
    goto LABEL_64;
  }
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
  return result;
}

PodcastsFoundation::DatabaseEntityChange __swiftcall DatabaseEntityChange.init(type:entityName:entityID:)(PodcastsFoundation::DatabaseEntityChangeType type, Swift::String entityName, NSManagedObjectID entityID)
{
  *(unsigned char *)uint64_t v3 = *(unsigned char *)type;
  *(Swift::String *)(v3 + 8) = entityName;
  *(NSManagedObjectID *)(v3 + 24) = entityID;
  result.entityName = entityName;
  result.entityID = entityID;
  result.type = type;
  return result;
}

uint64_t DatabasePropertyPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v34 = a1;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770328);
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  unint64_t v31 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE75118();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  char v9 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  char v12 = (char *)v28 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v28 - v13;
  long long v15 = v3[2];
  long long v41 = v3[1];
  long long v42 = v15;
  long long v40 = *v3;
  char v16 = (os_unfair_lock_s *)v15;
  sub_1ACE75108();
  char v38 = v12;
  os_unfair_lock_lock(v16 + 6);
  sub_1ACA6B6EC((uint64_t)&v16[4]);
  uint64_t v30 = 0;
  os_unfair_lock_unlock(v16 + 6);
  uint64_t v29 = v6;
  char v17 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v17(v14, v12, v5);
  v28[1] = *((void *)&v41 + 1);
  uint64_t v39 = *((void *)&v41 + 1);
  v28[0] = *(void *)(v6 + 16);
  ((void (*)(char *, char *, uint64_t))v28[0])(v9, v14, v5);
  unint64_t v18 = (*(unsigned __int8 *)(v6 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  long long v20 = v41;
  *((_OWORD *)v19 + 1) = v40;
  *((_OWORD *)v19 + 2) = v20;
  *((_OWORD *)v19 + 3) = v42;
  v17(&v19[v18], v9, v5);
  ((void (*)(char *, char *, uint64_t))v28[0])(v9, v14, v5);
  uint64_t v21 = (char *)swift_allocObject();
  long long v22 = v41;
  *((_OWORD *)v21 + 1) = v40;
  *((_OWORD *)v21 + 2) = v22;
  *((_OWORD *)v21 + 3) = v42;
  v17(&v21[v18], v9, v5);
  sub_1ACA6B7E8((uint64_t)&v40);
  sub_1ACA6B7E8((uint64_t)&v40);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770520);
  sub_1ACA6B854();
  id v23 = v31;
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v24 = v32;
  sub_1ACE755D8();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v24);
  uint64_t v37 = &v40;
  unint64_t v25 = (uint64_t *)(*((void *)&v42 + 1) + 16);
  unint64_t v26 = (os_unfair_lock_s *)(*((void *)&v42 + 1) + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(*((void *)&v42 + 1) + 24));
  sub_1ACA6B8B0(v25);
  os_unfair_lock_unlock(v26);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v14, v5);
}

void sub_1ACA6B224(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(os_unfair_lock_s **)(a2 + 32);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1ACA6D764(v4);
  os_unfair_lock_unlock(v5);
  uint64_t v6 = *(os_unfair_lock_s **)(a2 + 40);
  uint64_t v7 = v6 + 4;
  uint64_t v8 = v6 + 6;
  os_unfair_lock_lock(v6 + 6);
  sub_1ACA6D77C(v7);
  os_unfair_lock_unlock(v8);
}

void sub_1ACA6B2B0(uint64_t a1)
{
  uint64_t v2 = *(os_unfair_lock_s **)(a1 + 32);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_1ACA6D728(v3);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = *(os_unfair_lock_s **)(a1 + 40);
  uint64_t v6 = v5 + 4;
  uint64_t v7 = v5 + 6;
  os_unfair_lock_lock(v5 + 6);
  sub_1ACA6D744(v6);
  os_unfair_lock_unlock(v7);
}

void sub_1ACA6B33C(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = sub_1ACE76E78();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*a1)
  {
    char v9 = *(os_unfair_lock_s **)(a2 + 32);
    uint64_t v10 = v9 + 4;
    uint64_t v11 = v9 + 6;
    os_unfair_lock_lock(v9 + 6);
    sub_1ACA6BBEC(v10, &v17);
    if (v2)
    {
      os_unfair_lock_unlock(v11);
      __break(1u);
    }
    else
    {
      os_unfair_lock_unlock(v11);
      uint64_t v12 = *(void *)(v17 + 16);
      swift_bridgeObjectRelease();
      if (v12)
      {
        sub_1ACE76E88();
        uint64_t v13 = (_OWORD *)swift_allocObject();
        long long v14 = *(_OWORD *)(a2 + 16);
        v13[1] = *(_OWORD *)a2;
        v13[2] = v14;
        v13[3] = *(_OWORD *)(a2 + 32);
        sub_1ACA6B7E8(a2);
        sub_1ACA6D5C4((unint64_t *)&qword_1EB768EF8, MEMORY[0x1E4F27FC8]);
        uint64_t v15 = sub_1ACE75D58();
        swift_release();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        *a1 = v15;
      }
    }
  }
}

void sub_1ACA6B52C(void *a1, uint64_t a2)
{
  uint64_t v4 = *(os_unfair_lock_s **)(a2 + 32);
  uint64_t v5 = v4 + 4;
  uint64_t v6 = v4 + 6;
  os_unfair_lock_lock(v4 + 6);
  sub_1ACA6BBEC(v5, &v8);
  if (v2)
  {
    os_unfair_lock_unlock(v6);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v6);
    uint64_t v7 = *(void *)(v8 + 16);
    swift_bridgeObjectRelease();
    if (!v7)
    {
      if (*a1) {
        sub_1ACE75848();
      }
    }
  }
}

uint64_t sub_1ACA6B5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1ACE75118();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)v11 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a2, v3);
  sub_1ACD30820((uint64_t)v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_1ACA6B6EC(uint64_t a1)
{
  return sub_1ACA6B5C4(a1, *(void *)(v1 + 16));
}

void sub_1ACA6B70C(uint64_t a1)
{
  sub_1ACE75118();
  sub_1ACA6B224(a1, v1 + 16);
}

void sub_1ACA6B784()
{
  sub_1ACE75118();
  sub_1ACA6B2B0(v0 + 16);
}

uint64_t sub_1ACA6B7E8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

unint64_t sub_1ACA6B854()
{
  unint64_t result = qword_1EB770518;
  if (!qword_1EB770518)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB770520);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770518);
  }
  return result;
}

void sub_1ACA6B8B0(uint64_t *a1)
{
  sub_1ACA6B33C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1ACA6B8CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A978);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACC3EC7C(a2, (uint64_t)v5);
  return sub_1ACA50E78((uint64_t)v5, &qword_1EB76A978);
}

BOOL static DatabaseEntityChangeType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DatabaseEntityChangeType.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t DatabaseEntityChangeType.hashValue.getter()
{
  return sub_1ACE77B78();
}

void DatabaseEntityChange.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t DatabaseEntityChange.entityName.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

id DatabaseEntityChange.entityID.getter()
{
  return *(id *)(v0 + 24);
}

uint64_t NSManagedObjectContext.observeChanges<A>(to:entities:)@<X0>(void *a1@<X8>)
{
  id v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entity);
  id v3 = objc_msgSend(v2, sel_name);

  if (v3)
  {
    uint64_t v4 = sub_1ACE761B8();
    uint64_t v6 = v5;

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
    *(void *)(inited + 32) = v4;
    *(void *)(inited + 40) = v6;
    uint64_t v8 = sub_1ACA6C680(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    id v9 = objc_msgSend(self, sel_defaultCenter);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770520);
    swift_allocObject();
    id v10 = v9;
    id v3 = (id)sub_1ACE758B8();

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770778);
    uint64_t v11 = swift_allocObject();
    *(_DWORD *)(v11 + 24) = 0;
    *(void *)(v11 + 16) = MEMORY[0x1E4FBC870];
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB772738);
    uint64_t result = swift_allocObject();
    *(_DWORD *)(result + 24) = 0;
    *(void *)(result + 16) = 0;
    *a1 = 0;
    a1[1] = v8;
    a1[2] = v10;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t result = 0;
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
  a1[3] = v3;
  a1[4] = v11;
  a1[5] = result;
  return result;
}

uint64_t sub_1ACA6BBEC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACA6BC0C(uint64_t a1)
{
  uint64_t v2 = sub_1ACE751E8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3B0);
    uint64_t v9 = sub_1ACE77238();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    unint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1ACA6D5C4(&qword_1EB76A988, MEMORY[0x1E4F27C88]);
      uint64_t v16 = sub_1ACE760E8();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1ACA6D5C4(&qword_1EB76A990, MEMORY[0x1E4F27C88]);
          char v23 = sub_1ACE76168();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        unint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1ACA6BF24(uint64_t a1, uint64_t a2)
{
  v15[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  sub_1ACA6B7E8(a2);
  uint64_t isStackAllocationSafe = sub_1ACA6B7E8(a2);
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    sub_1ACA6B7E8(a2);
    sub_1ACA6C100((void *)((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    uint64_t v11 = v10;
    sub_1ACA6D60C(a2);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
    sub_1ACA6D60C(a2);
    sub_1ACA6D60C(a2);
  }
  else
  {
    uint64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    sub_1ACA6B7E8(a2);
    sub_1ACA6C100((unint64_t *)v12, v7, a1, a2);
    uint64_t v11 = v13;
    sub_1ACA6D60C(a2);
    swift_release();
    MEMORY[0x1AD11B340](v12, -1, -1);
    sub_1ACA6D60C(a2);
    sub_1ACA6D60C(a2);
  }
  return v11;
}

void sub_1ACA6C100(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = 0;
  int64_t v5 = 0;
  uint64_t v8 = *(void *)(a3 + 56);
  uint64_t v6 = a3 + 56;
  uint64_t v7 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v6 - 24);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v7;
  uint64_t v31 = v6;
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v13 = v12 | (v5 << 6);
      goto LABEL_21;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v14 >= v32) {
      goto LABEL_30;
    }
    unint64_t v15 = *(void *)(v31 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v32) {
        goto LABEL_30;
      }
      unint64_t v15 = *(void *)(v31 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v32) {
          goto LABEL_30;
        }
        unint64_t v15 = *(void *)(v31 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
LABEL_21:
    id v17 = *(id *)(*(void *)(a3 + 48) + 8 * v13);
    id v18 = objc_msgSend(v17, sel_entity, v28);
    id v19 = objc_msgSend(v18, sel_name);

    if (v19
      && (uint64_t v20 = *(void *)(a4 + 8),
          uint64_t v21 = sub_1ACE761B8(),
          uint64_t v23 = v22,
          v19,
          LOBYTE(v21) = sub_1ACCEA330(v21, v23, v20),
          swift_bridgeObjectRelease(),
          (v21 & 1) == 0))
    {
    }
    else
    {
      sub_1ACA6D6C0(a4, (uint64_t)v34);
      sub_1ACA6D6C0((uint64_t)v34, (uint64_t)&v35);
      uint64_t v24 = v35;
      if (v35)
      {
        id v25 = objc_msgSend(v17, sel_objectID);
        char v26 = sub_1ACCEA468(v25, v24);

        if (v26) {
          goto LABEL_27;
        }
      }
      else
      {

LABEL_27:
        *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        if (__OFADD__(v30++, 1))
        {
          __break(1u);
LABEL_30:
          swift_retain();
          sub_1ACB85CF8(a1, v28, v30, a3);
          return;
        }
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v32) {
    goto LABEL_30;
  }
  unint64_t v15 = *(void *)(v31 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v32) {
      goto LABEL_30;
    }
    unint64_t v15 = *(void *)(v31 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_1ACA6C3A0(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = MEMORY[0x1E4FBC870];
    uint64_t v29 = MEMORY[0x1E4FBC870];
    sub_1ACA6B7E8(a2);
    sub_1ACE77138();
    if (sub_1ACE771A8())
    {
      sub_1ACA6D680();
      do
      {
        swift_dynamicCast();
        id v5 = objc_msgSend(v28, sel_entity);
        id v6 = objc_msgSend(v5, sel_name);

        if (v6)
        {
          uint64_t v7 = *(void *)(a2 + 8);
          uint64_t v8 = sub_1ACE761B8();
          uint64_t v10 = v9;

          char v11 = sub_1ACCEA330(v8, v10, v7);
          swift_bridgeObjectRelease();
          if ((v11 & 1) == 0) {
            goto LABEL_4;
          }
        }
        sub_1ACA6D6C0(a2, (uint64_t)v30);
        sub_1ACA6D6C0((uint64_t)v30, (uint64_t)&v31);
        uint64_t v12 = v31;
        if (v31
          && (id v13 = objc_msgSend(v28, sel_objectID),
              char v14 = sub_1ACCEA468(v13, v12),
              v13,
              (v14 & 1) == 0))
        {
LABEL_4:
        }
        else
        {
          uint64_t v15 = v29;
          unint64_t v16 = *(void *)(v29 + 16);
          if (*(void *)(v29 + 24) <= v16)
          {
            sub_1ACBECA84(v16 + 1);
            uint64_t v15 = v29;
          }
          uint64_t result = sub_1ACE76F58();
          uint64_t v18 = v15 + 56;
          uint64_t v19 = -1 << *(unsigned char *)(v15 + 32);
          unint64_t v20 = result & ~v19;
          unint64_t v21 = v20 >> 6;
          if (((-1 << v20) & ~*(void *)(v15 + 56 + 8 * (v20 >> 6))) != 0)
          {
            unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v15 + 56 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v23 = 0;
            unint64_t v24 = (unint64_t)(63 - v19) >> 6;
            do
            {
              if (++v21 == v24 && (v23 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              BOOL v25 = v21 == v24;
              if (v21 == v24) {
                unint64_t v21 = 0;
              }
              v23 |= v25;
              uint64_t v26 = *(void *)(v18 + 8 * v21);
            }
            while (v26 == -1);
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          }
          *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
          *(void *)(*(void *)(v15 + 48) + 8 * v22) = v28;
          ++*(void *)(v15 + 16);
        }
      }
      while (sub_1ACE771A8());
      uint64_t v3 = v29;
    }
    swift_release();
    sub_1ACA6D60C(a2);
  }
  else
  {
    uint64_t v27 = sub_1ACA6BF24(a1, a2);
    if (!v2) {
      return v27;
    }
  }
  return v3;
}

uint64_t sub_1ACA6C680(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769008);
    uint64_t v3 = sub_1ACE77238();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      id v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_1ACE77B18();
      swift_bridgeObjectRetain();
      sub_1ACE76108();
      uint64_t result = sub_1ACE77B78();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        unint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_1ACE77848(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_1ACE77848();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      unint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      void *v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

unint64_t sub_1ACA6C828()
{
  unint64_t result = qword_1E99F0FA0;
  if (!qword_1E99F0FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0FA0);
  }
  return result;
}

uint64_t destroy for DatabasePropertyPublisher(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for DatabasePropertyPublisher(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v5 = (void *)a2[2];
  uint64_t v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for DatabasePropertyPublisher(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[2];
  uint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DatabasePropertyPublisher(uint64_t a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();

  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DatabasePropertyPublisher(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabasePropertyPublisher(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabasePropertyPublisher()
{
  return &type metadata for DatabasePropertyPublisher;
}

unsigned char *storeEnumTagSinglePayload for DatabaseEntityChangeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACA6CBE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseEntityChangeType()
{
  return &type metadata for DatabaseEntityChangeType;
}

void destroy for DatabaseEntityChange(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 24);
}

uint64_t initializeWithCopy for DatabaseEntityChange(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  unsigned int v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

uint64_t assignWithCopy for DatabaseEntityChange(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unsigned int v4 = *(void **)(a2 + 24);
  id v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for DatabaseEntityChange(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  unsigned int v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseEntityChange(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseEntityChange(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseEntityChange()
{
  return &type metadata for DatabaseEntityChange;
}

uint64_t sub_1ACA6CDF4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB769010);
    uint64_t v3 = sub_1ACE77238();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      id v6 = *(void **)(v32 + 8 * v4);
      sub_1ACE761B8();
      sub_1ACE77B18();
      id v7 = v6;
      sub_1ACE76108();
      uint64_t v8 = sub_1ACE77B78();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_1ACE761B8();
        uint64_t v17 = v16;
        if (v15 == sub_1ACE761B8() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_1ACE77848();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_1ACE761B8();
          uint64_t v24 = v23;
          if (v22 == sub_1ACE761B8() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_1ACE77848();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1ACA6D024(uint64_t a1)
{
  uint64_t v2 = sub_1ACE77CA8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  id v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F78);
    uint64_t v9 = sub_1ACE77238();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1ACA6D5C4(&qword_1EB772F90, MEMORY[0x1E4F281B0]);
      uint64_t v16 = sub_1ACE760E8();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1ACA6D5C4(&qword_1EB772F98, MEMORY[0x1E4F281B0]);
          char v23 = sub_1ACE76168();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1ACA6D33C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC870];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0FA8);
  uint64_t v3 = sub_1ACE77238();
  uint64_t v4 = 0;
  uint64_t v5 = v3 + 56;
  uint64_t v6 = a1 + 32;
  do
  {
    uint64_t v7 = v6 + 16 * v4;
    unint64_t v8 = *(void *)v7;
    char v9 = *(unsigned char *)(v7 + 8);
    sub_1ACE77B18();
    sub_1ACE77B28();
    uint64_t v10 = sub_1ACE77B78();
    uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v12 = v10 & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)(v5 + 8 * (v12 >> 6));
    uint64_t v15 = 1 << v12;
    uint64_t v16 = *(void *)(v3 + 48);
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v17 = ~v11;
      if (v8 > 3) {
        char v18 = v9;
      }
      else {
        char v18 = 0;
      }
      if (v8 == 3) {
        char v19 = v9;
      }
      else {
        char v19 = 0;
      }
      if (v8 == 2) {
        char v20 = v9;
      }
      else {
        char v20 = 0;
      }
      if (v8 == 1) {
        char v21 = v9;
      }
      else {
        char v21 = 0;
      }
      if (v8) {
        char v22 = 0;
      }
      else {
        char v22 = v9;
      }
      while (1)
      {
        uint64_t v23 = v16 + 16 * v12;
        if (*(unsigned char *)(v23 + 8) == 1) {
          break;
        }
        if ((v9 & 1) == 0) {
          goto LABEL_3;
        }
LABEL_21:
        unint64_t v12 = (v12 + 1) & v17;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)(v5 + 8 * (v12 >> 6));
        uint64_t v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0) {
          goto LABEL_34;
        }
      }
      switch(*(void *)v23)
      {
        case 1:
          if ((v21 & 1) == 0) {
            goto LABEL_21;
          }
          break;
        case 2:
          if ((v20 & 1) == 0) {
            goto LABEL_21;
          }
          break;
        case 3:
          if ((v19 & 1) == 0) {
            goto LABEL_21;
          }
          break;
        case 4:
          if ((v18 & 1) == 0) {
            goto LABEL_21;
          }
          break;
        default:
          if ((v22 & 1) == 0) {
            goto LABEL_21;
          }
          break;
      }
    }
    else
    {
LABEL_34:
      *(void *)(v5 + 8 * v13) = v15 | v14;
      uint64_t v24 = v16 + 16 * v12;
      *(void *)uint64_t v24 = v8;
      *(unsigned char *)(v24 + 8) = v9;
      uint64_t v25 = *(void *)(v3 + 16);
      BOOL v26 = __OFADD__(v25, 1);
      uint64_t v27 = v25 + 1;
      if (v26)
      {
        __break(1u);
        JUMPOUT(0x1ACA6D514);
      }
      *(void *)(v3 + 16) = v27;
    }
LABEL_3:
    ++v4;
  }
  while (v4 != v1);
  return v3;
}

uint64_t sub_1ACA6D528()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA6D588()
{
  return sub_1ACA6A2E0();
}

uint64_t sub_1ACA6D5C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACA6D60C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ACA6D674(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1ACA6D680()
{
  unint64_t result = qword_1EB772590;
  if (!qword_1EB772590)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB772590);
  }
  return result;
}

uint64_t sub_1ACA6D6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770668);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACA6D728(uint64_t a1)
{
  return sub_1ACA6B8CC(a1, *(void *)(v1 + 16));
}

void sub_1ACA6D744(void *a1)
{
  sub_1ACA6B52C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1ACA6D764(uint64_t a1)
{
  return sub_1ACA6D728(a1);
}

void sub_1ACA6D77C(void *a1)
{
}

unint64_t PodcastsStateChangeOrigin.init(rawValue:)(unint64_t a1)
{
  return sub_1ACA6D9C4(a1);
}

void *static PodcastsStateChangeOrigin.allCases.getter()
{
  return &unk_1F037FE30;
}

uint64_t sub_1ACA6D7C0()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACA6D808()
{
  return sub_1ACE77B28();
}

uint64_t sub_1ACA6D834()
{
  return sub_1ACE77B78();
}

unint64_t sub_1ACA6D878@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1ACA6D9C4(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_1ACA6D8AC(void *a1@<X8>)
{
  *a1 = &unk_1F037FE78;
}

unint64_t PodcastsStateChangeOrigin.description.getter(uint64_t a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x6B72616D6B6F6F62;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x536D6F7246746F6ELL;
      break;
    case 4:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      sub_1ACE77A18();
      __break(1u);
      JUMPOUT(0x1ACA6D9A8);
  }
  return result;
}

unint64_t sub_1ACA6D9BC()
{
  return PodcastsStateChangeOrigin.description.getter(*v0);
}

unint64_t sub_1ACA6D9C4(unint64_t result)
{
  if (result > 4) {
    return 0;
  }
  return result;
}

unint64_t sub_1ACA6D9D8()
{
  unint64_t result = qword_1E99F0FB8;
  if (!qword_1E99F0FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0FB8);
  }
  return result;
}

unint64_t sub_1ACA6DA30()
{
  unint64_t result = qword_1E99F0FC0;
  if (!qword_1E99F0FC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F0FC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0FC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsStateChangeOrigin()
{
  return &type metadata for PodcastsStateChangeOrigin;
}

uint64_t sub_1ACA6DA9C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void static MTPodcast.recalculateAvailabilityDates(in:completion:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(self, sel_predicateForEpisodesWithUnsatisfiedAvailabilityDate);
  sub_1ACA6DC4C();
  id v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  objc_msgSend(v7, sel_setPredicate_, v6);
  unint64_t v8 = (void *)swift_allocObject();
  _DWORD v8[2] = a1;
  v8[3] = v7;
  v8[4] = a2;
  v8[5] = a3;
  v12[4] = sub_1ACA6DEBC;
  v12[5] = v8;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  _OWORD v12[2] = sub_1ACA6DA9C;
  uint64_t v12[3] = &block_descriptor_6;
  char v9 = _Block_copy(v12);
  id v10 = a1;
  id v11 = v7;
  sub_1ACA6DEC8(a2);
  swift_release();
  objc_msgSend(v10, sel_performBlock_, v9);
  _Block_release(v9);
}

unint64_t sub_1ACA6DC4C()
{
  unint64_t result = qword_1EB7669E0;
  if (!qword_1EB7669E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB7669E0);
  }
  return result;
}

id sub_1ACA6DC8C(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E1A0);
  unint64_t v5 = sub_1ACE76EE8();
  unint64_t v6 = sub_1ACC2BAD0(v5);
  id result = (id)swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_17;
  }
  id v18 = a1;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1ACE77508();
    id result = (id)swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
LABEL_4:
      if (v8 < 1)
      {
        __break(1u);
        return result;
      }
      for (uint64_t i = 0; i != v8; ++i)
      {
        if ((v6 & 0xC000000000000001) != 0) {
          id v11 = (id)MEMORY[0x1AD119490](i, v6);
        }
        else {
          id v11 = *(id *)(v6 + 8 * i + 32);
        }
        unint64_t v12 = v11;
        objc_msgSend(v11, sel_resolveAvailabilityDate, v18);
        id v13 = objc_msgSend(v12, sel_podcast);
        if (v13)
        {
          uint64_t v14 = v13;
          objc_msgSend(v13, sel_latestEpisodeAvailabilityTime);
          double v16 = v15;
          objc_msgSend(v12, sel_firstTimeAvailable);
          if (v16 >= v17)
          {
            id v10 = v14;
          }
          else
          {
            objc_msgSend(v12, sel_firstTimeAvailable);
            objc_msgSend(v14, sel_setLatestEpisodeAvailabilityTime_);
            id v10 = v12;
            unint64_t v12 = v14;
          }
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  id result = objc_msgSend(v18, sel_saveInCurrentBlock);
LABEL_17:
  if (a3) {
    return (id)a3();
  }
  return result;
}

uint64_t sub_1ACA6DE6C()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  return swift_deallocObject();
}

id sub_1ACA6DEBC()
{
  return sub_1ACA6DC8C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(void))(v0 + 32));
}

uint64_t sub_1ACA6DEC8(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t PodcastsBagFeatureFlags.Key.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t PodcastsBagFeatureFlags.Key.rawValue.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_1ACA6DF4C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACA6DFA4()
{
  return sub_1ACE76108();
}

uint64_t sub_1ACA6DFC0()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACA6E014@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1ACA6E068(void *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x80000001ACEC3750;
}

uint64_t sub_1ACA6E088()
{
  unint64_t v0 = sub_1ACA36884(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8A8);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = v0;
  qword_1EB76A240 = result;
  return result;
}

uint64_t static PodcastsBagFeatureFlags.isEnabled(_:)()
{
  if (qword_1EB76A250 != -1) {
    swift_once();
  }
  unint64_t v0 = (uint64_t *)(qword_1EB76A240 + 16);
  uint64_t v1 = (os_unfair_lock_s *)(qword_1EB76A240 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1EB76A240 + 24));
  sub_1ACA6E2E8(v0, (char *)&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_1ACA6E170@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = *a1;
  if (*(void *)(*a1 + 16) && (uint64_t result = sub_1ACA657FC(0xD000000000000017, 0x80000001ACEC3750), (v6 & 1) != 0))
  {
    char v7 = *(unsigned char *)(*(void *)(v4 + 56) + result);
  }
  else
  {
    sub_1ACE77268();
    swift_bridgeObjectRelease();
    sub_1ACA6E684(0xD000000000000017, 0x80000001ACEC3750, 0xD000000000000027, 0x80000001ACEC5E50);
    id v8 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults, 0, 0xE000000000000000);
    char v9 = (void *)sub_1ACE76178();
    char v7 = objc_msgSend(v8, sel_BOOLForKey_, v9);

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *a1;
    *a1 = 0x8000000000000000;
    sub_1ACD0C2C8(v7, 0xD000000000000017, 0x80000001ACEC3750, isUniquelyReferenced_nonNull_native);
    *a1 = v11;
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a2 = v7;
  return result;
}

uint64_t sub_1ACA6E2E8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1ACA6E170(a1, a2);
}

unint64_t sub_1ACA6E304()
{
  unint64_t result = qword_1E99F0FD0;
  if (!qword_1E99F0FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0FD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsBagFeatureFlags()
{
  return &type metadata for PodcastsBagFeatureFlags;
}

unsigned char *storeEnumTagSinglePayload for PodcastsBagFeatureFlags.Key(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACA6E404);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsBagFeatureFlags.Key()
{
  return &type metadata for PodcastsBagFeatureFlags.Key;
}

void sub_1ACA6E43C(void *a1, int a2, id a3)
{
  if (a1)
  {
    if (!a3)
    {
      unsigned int v4 = self;
      id v5 = a1;
      id v6 = objc_msgSend(v4, sel__applePodcastsFoundationSharedUserDefaults);
      id v7 = v5;
      id v12 = (id)sub_1ACE76178();
      objc_msgSend(v6, sel_setObject_forKey_, v7, v12);

      return;
    }
  }
  else if (!a3)
  {
    return;
  }
  id v8 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
  type metadata accessor for AMSError(0);
  if (swift_dynamicCast())
  {
    sub_1ACA6E814();
    uint64_t v9 = sub_1ACE74D58();
    if (v9 == 204 || v9 == 202)
    {
      id v10 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
      uint64_t v11 = (void *)sub_1ACE76178();
      objc_msgSend(v10, sel_removeObjectForKey_, v11);
    }
    else
    {
    }
  }
}

void sub_1ACA6E5F0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v9 = a2;
  id v8 = a4;
  v7(a2, a3, a4);
  swift_release();
}

void sub_1ACA6E684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = objc_msgSend(self, sel_sharedInstance);
  id v7 = (void *)sub_1ACE76178();
  id v8 = objc_msgSend(v6, sel_BOOLForKey_, v7);

  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a4;
  _OWORD v11[4] = sub_1ACA6E80C;
  uint64_t v11[5] = v9;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  void v11[2] = sub_1ACA6E5F0;
  v11[3] = &block_descriptor_7;
  id v10 = _Block_copy(v11);
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v8, sel_valueWithCompletion_, v10);
  _Block_release(v10);
}

uint64_t sub_1ACA6E7D4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACA6E80C(void *a1, int a2, id a3)
{
}

unint64_t sub_1ACA6E814()
{
  unint64_t result = qword_1EB76A788;
  if (!qword_1EB76A788)
  {
    type metadata accessor for AMSError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A788);
  }
  return result;
}

uint64_t DirectTimelineAlignment.isInProgress.getter()
{
  return 0;
}

Swift::Double_optional __swiftcall DirectTimelineAlignment.playerTimestamp(for:)(Swift::Double a1)
{
  char v1 = LOBYTE(a1);
  result.value = a1;
  result.is_nil = v1;
  return result;
}

uint64_t DirectTimelineAlignment.nonMatchingRangesInPlayer(with:)()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1ACA6E89C()
{
  return MEMORY[0x1E4FBC860];
}

ValueMetadata *type metadata accessor for DirectTimelineAlignment()
{
  return &type metadata for DirectTimelineAlignment;
}

uint64_t sub_1ACA6E8C4(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  int v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  int v3 = sub_1ACA414E4(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v10 = &v3[4 * v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[4 * v8] && (unint64_t)v10 < a1 + 32 + 32 * v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), 32 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA6EA10(uint64_t result)
{
  uint64_t v3 = *(void *)(result + 16);
  int64_t v4 = *(void **)v1;
  int64_t v5 = *(void *)(*(void *)v1 + 16);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = result;
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6) {
      int64_t v10 = v5 + v3;
    }
    else {
      int64_t v10 = v5;
    }
    int64_t v4 = sub_1ACA4161C(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    int64_t v9 = v4[3] >> 1;
  }
  uint64_t v11 = v4[2];
  uint64_t v12 = v9 - v11;
  uint64_t result = sub_1ACD108C8((uint64_t)v41, (uint64_t)&v4[3 * v11 + 4], v9 - v11, v7);
  if (result < v3) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v15 = v4[2];
    BOOL v16 = __OFADD__(v15, result);
    uint64_t v17 = v15 + result;
    if (v16)
    {
      __break(1u);
      goto LABEL_46;
    }
    v4[2] = v17;
  }
  if (result != v12)
  {
LABEL_13:
    uint64_t result = sub_1ACA50A70();
    *(void *)uint64_t v1 = v4;
    return result;
  }
LABEL_16:
  int64_t v2 = v4[2];
  uint64_t v13 = v42;
  uint64_t v39 = v41[1];
  uint64_t v40 = v41[0];
  uint64_t v14 = v43;
  if (v44)
  {
    unint64_t v18 = (v44 - 1) & v44;
    uint64_t v19 = v43;
    unint64_t v20 = __clz(__rbit64(v44)) | (v43 << 6);
    int64_t v38 = (unint64_t)(v42 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_46:
  int64_t v35 = v14 + 1;
  if (__OFADD__(v14, 1)) {
    goto LABEL_65;
  }
  int64_t v38 = (unint64_t)(v13 + 64) >> 6;
  if (v35 >= v38) {
    goto LABEL_13;
  }
  unint64_t v36 = *(void *)(v39 + 8 * v35);
  uint64_t v19 = v14 + 1;
  if (!v36)
  {
    uint64_t v19 = v14 + 2;
    if (v14 + 2 >= v38) {
      goto LABEL_13;
    }
    unint64_t v36 = *(void *)(v39 + 8 * v19);
    if (!v36)
    {
      uint64_t v19 = v14 + 3;
      if (v14 + 3 >= v38) {
        goto LABEL_13;
      }
      unint64_t v36 = *(void *)(v39 + 8 * v19);
      if (!v36)
      {
        uint64_t v19 = v14 + 4;
        if (v14 + 4 >= v38) {
          goto LABEL_13;
        }
        unint64_t v36 = *(void *)(v39 + 8 * v19);
        if (!v36)
        {
          uint64_t v19 = v14 + 5;
          if (v14 + 5 >= v38) {
            goto LABEL_13;
          }
          unint64_t v36 = *(void *)(v39 + 8 * v19);
          if (!v36)
          {
            uint64_t v37 = v14 + 6;
            do
            {
              if (v38 == v37) {
                goto LABEL_13;
              }
              unint64_t v36 = *(void *)(v39 + 8 * v37++);
            }
            while (!v36);
            uint64_t v19 = v37 - 1;
          }
        }
      }
    }
  }
  unint64_t v18 = (v36 - 1) & v36;
  unint64_t v20 = __clz(__rbit64(v36)) + (v19 << 6);
LABEL_18:
  uint64_t v21 = *(void *)(v40 + 48) + 24 * v20;
  uint64_t v22 = *(void *)v21;
  uint64_t v23 = *(void *)(v21 + 8);
  char v24 = *(unsigned char *)(v21 + 16);
  uint64_t result = sub_1ACA72530(*(void *)v21, v23, v24);
  while (1)
  {
    unint64_t v25 = v4[3];
    int64_t v26 = v25 >> 1;
    if ((uint64_t)(v25 >> 1) < v2 + 1) {
      break;
    }
    if (v2 < v26) {
      goto LABEL_25;
    }
LABEL_19:
    v4[2] = v2;
  }
  uint64_t result = (uint64_t)sub_1ACA4161C((void *)(v25 > 1), v2 + 1, 1, v4);
  int64_t v4 = (void *)result;
  int64_t v26 = *(void *)(result + 24) >> 1;
  if (v2 >= v26) {
    goto LABEL_19;
  }
  while (1)
  {
LABEL_25:
    uint64_t v30 = (uint64_t)&v4[3 * v2 + 4];
    *(void *)uint64_t v30 = v22;
    *(void *)(v30 + 8) = v23;
    *(unsigned char *)(v30 + 16) = v24 & 1;
    ++v2;
    if (v18)
    {
      unint64_t v27 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v28 = v27 | (v19 << 6);
      goto LABEL_24;
    }
    int64_t v31 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v31 >= v38) {
      goto LABEL_44;
    }
    unint64_t v32 = *(void *)(v39 + 8 * v31);
    uint64_t v33 = v19 + 1;
    if (!v32)
    {
      uint64_t v33 = v19 + 2;
      if (v19 + 2 >= v38) {
        goto LABEL_44;
      }
      unint64_t v32 = *(void *)(v39 + 8 * v33);
      if (!v32)
      {
        uint64_t v33 = v19 + 3;
        if (v19 + 3 >= v38) {
          goto LABEL_44;
        }
        unint64_t v32 = *(void *)(v39 + 8 * v33);
        if (!v32)
        {
          uint64_t v33 = v19 + 4;
          if (v19 + 4 >= v38) {
            goto LABEL_44;
          }
          unint64_t v32 = *(void *)(v39 + 8 * v33);
          if (!v32)
          {
            uint64_t v33 = v19 + 5;
            if (v19 + 5 >= v38) {
              goto LABEL_44;
            }
            unint64_t v32 = *(void *)(v39 + 8 * v33);
            if (!v32)
            {
              uint64_t v34 = v19 + 6;
              while (v38 != v34)
              {
                unint64_t v32 = *(void *)(v39 + 8 * v34++);
                if (v32)
                {
                  uint64_t v33 = v34 - 1;
                  goto LABEL_41;
                }
              }
LABEL_44:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_41:
    unint64_t v18 = (v32 - 1) & v32;
    unint64_t v28 = __clz(__rbit64(v32)) + (v33 << 6);
    uint64_t v19 = v33;
LABEL_24:
    uint64_t v29 = *(void *)(v40 + 48) + 24 * v28;
    uint64_t v22 = *(void *)v29;
    uint64_t v23 = *(void *)(v29 + 8);
    char v24 = *(unsigned char *)(v29 + 16);
    uint64_t result = sub_1ACA72530(*(void *)v29, v23, v24);
    if (v2 >= v26) {
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_1ACA6EE20(unint64_t a1)
{
  return sub_1ACA70048(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1ACD0B634);
}

uint64_t sub_1ACA6EE38(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1ACA41B70(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA6EF90(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1ACA41C80(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = &v3[4 * v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[4 * v8] && (unint64_t)v10 < a1 + 32 + 32 * v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), 32 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA6F0DC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x1AD1194A0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_1ACD0B854(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_1ACE76598();
}

uint64_t sub_1ACA6F2A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1ACA42218(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA6F3FC(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v6 = result;
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v8 = v3[3] >> 1, v8 < v5))
  {
    if (v4 <= v5) {
      int64_t v9 = v4 + v2;
    }
    else {
      int64_t v9 = v4;
    }
    uint64_t v3 = sub_1ACA42624(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    int64_t v8 = v3[3] >> 1;
  }
  uint64_t v10 = v3[2];
  uint64_t v11 = v8 - v10;
  uint64_t result = (uint64_t)sub_1ACD10E70(v112, (uint64_t)&v3[12 * v10 + 4], v8 - v10, v6);
  if (result < v2) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v14 = v3[2];
    BOOL v15 = __OFADD__(v14, result);
    uint64_t v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_71;
    }
    v3[2] = v16;
  }
  if (result != v11) {
    goto LABEL_13;
  }
LABEL_16:
  int64_t v13 = v3[2];
  uint64_t v94 = v112[0];
  uint64_t v89 = v112[1];
  int64_t v12 = v113;
  uint64_t v86 = v112[2];
  if (!v114)
  {
LABEL_71:
    int64_t v69 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      return result;
    }
    int64_t v67 = (unint64_t)(v86 + 64) >> 6;
    if (v69 >= v67) {
      goto LABEL_13;
    }
    int64_t v111 = v13;
    unint64_t v78 = *(void *)(v89 + 8 * v69);
    if (!v78)
    {
      int64_t v79 = v12 + 2;
      if (v12 + 2 >= v67) {
        goto LABEL_13;
      }
      unint64_t v78 = *(void *)(v89 + 8 * v79);
      if (v78)
      {
LABEL_80:
        int64_t v69 = v79;
      }
      else
      {
        if (v12 + 3 >= v67) {
          goto LABEL_13;
        }
        unint64_t v78 = *(void *)(v89 + 8 * (v12 + 3));
        if (!v78) {
          goto LABEL_86;
        }
        int64_t v69 = v12 + 3;
      }
    }
LABEL_74:
    unint64_t v17 = (v78 - 1) & v78;
    unint64_t v18 = __clz(__rbit64(v78)) + (v69 << 6);
    int64_t v108 = v69;
    goto LABEL_18;
  }
  int64_t v108 = v113;
  int64_t v111 = v3[2];
  unint64_t v17 = (v114 - 1) & v114;
  unint64_t v18 = __clz(__rbit64(v114)) | (v113 << 6);
LABEL_18:
  uint64_t v19 = *(void *)(v94 + 48) + 96 * v18;
  uint64_t v98 = *(void *)v19;
  uint64_t v83 = *(unsigned __int8 *)(v19 + 8);
  int v81 = *(unsigned __int8 *)(v19 + 9);
  int v82 = *(unsigned __int8 *)(v19 + 10);
  int v87 = *(unsigned __int8 *)(v19 + 11);
  int v90 = *(unsigned __int8 *)(v19 + 12);
  int v91 = *(unsigned __int8 *)(v19 + 13);
  uint64_t v20 = *(void *)(v19 + 24);
  uint64_t v21 = *(void *)(v19 + 32);
  char v22 = *(unsigned char *)(v19 + 40);
  uint64_t v23 = *(void *)(v19 + 48);
  uint64_t v103 = *(void *)(v19 + 56);
  uint64_t v105 = *(void *)(v19 + 16);
  uint64_t v25 = *(void *)(v19 + 64);
  uint64_t v24 = *(void *)(v19 + 72);
  uint64_t v101 = *(void *)(v19 + 80);
  unsigned int v26 = *(unsigned __int16 *)(v19 + 88) | (*(unsigned __int8 *)(v19 + 90) << 16);
  swift_bridgeObjectRetain();
  uint64_t v92 = v25;
  uint64_t v84 = v24;
  sub_1ACA3A9E8(v23, v103, v25, v24, v101);
  uint64_t v27 = v98;
  if (!v98) {
    goto LABEL_13;
  }
  uint64_t v28 = 256;
  if (!v81) {
    uint64_t v28 = 0;
  }
  uint64_t v29 = v28 | v83;
  uint64_t v30 = 0x10000;
  if (!v82) {
    uint64_t v30 = 0;
  }
  uint64_t v31 = 0x1000000;
  if (!v87) {
    uint64_t v31 = 0;
  }
  uint64_t v32 = v29 | v30 | v31;
  uint64_t v33 = 0x100000000;
  if (!v90) {
    uint64_t v33 = 0;
  }
  uint64_t v34 = 0x10000000000;
  if (!v91) {
    uint64_t v34 = 0;
  }
  unint64_t v35 = v32 | v33 | v34;
  uint64_t v36 = v84;
  int64_t v88 = (unint64_t)(v86 + 64) >> 6;
  int64_t v12 = v108;
  int64_t v37 = v111;
  uint64_t v39 = v103;
  uint64_t v38 = v105;
  uint64_t v40 = v92;
  uint64_t v41 = v101;
  while (1)
  {
    unint64_t v42 = v3[3];
    int64_t v95 = v42 >> 1;
    if ((uint64_t)(v42 >> 1) < v37 + 1)
    {
      uint64_t v97 = v23;
      uint64_t v100 = v27;
      uint64_t v93 = v40;
      uint64_t v107 = v38;
      uint64_t v110 = v12;
      char v73 = v3;
      int64_t v74 = v37;
      uint64_t v85 = v36;
      uint64_t v75 = v41;
      unint64_t v76 = v35;
      __int16 v77 = sub_1ACA42624((void *)(v42 > 1), v37 + 1, 1, v73);
      unint64_t v35 = v76;
      uint64_t v41 = v75;
      uint64_t v36 = v85;
      uint64_t v40 = v93;
      uint64_t v38 = v107;
      int64_t v12 = v110;
      int64_t v37 = v74;
      uint64_t v3 = v77;
      uint64_t v23 = v97;
      uint64_t v27 = v100;
      int64_t v95 = v77[3] >> 1;
    }
    if (v37 < v95) {
      break;
    }
LABEL_30:
    v3[2] = v37;
    if (!v27) {
      goto LABEL_13;
    }
  }
  while (1)
  {
    uint64_t v64 = (uint64_t)&v3[12 * v37 + 4];
    *(void *)uint64_t v64 = v27;
    uint64x2_t v65 = (uint64x2_t)vdupq_n_s64(v35);
    *(unsigned char *)(v64 + 8) = v35 & 1;
    int16x8_t v66 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v65, (uint64x2_t)xmmword_1ACE85700), (int32x4_t)vshlq_u64(v65, (uint64x2_t)xmmword_1ACE856F0));
    *(int8x8_t *)v66.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v66), (int8x8_t)0x1000100010001);
    *(_DWORD *)(v64 + 9) = vmovn_s16(v66).u32[0];
    *(unsigned char *)(v64 + 13) = BYTE5(v35) & 1;
    *(void *)(v64 + 16) = v38;
    *(void *)(v64 + 24) = v20;
    *(void *)(v64 + 32) = v21;
    *(unsigned char *)(v64 + 40) = v22 & 1;
    *(void *)(v64 + 48) = v23;
    *(void *)(v64 + 56) = v39;
    *(void *)(v64 + 64) = v40;
    *(void *)(v64 + 72) = v36;
    *(void *)(v64 + 80) = v41;
    int64_t v67 = HIWORD(v26);
    *(unsigned char *)(v64 + 90) = BYTE2(v26);
    *(_WORD *)(v64 + 88) = v26;
    int64_t v68 = v37 + 1;
    int64_t v111 = v68;
    if (!v17) {
      break;
    }
    uint64_t v104 = (v17 - 1) & v17;
    int64_t v109 = v12;
    unint64_t v43 = __clz(__rbit64(v17)) | (v12 << 6);
LABEL_36:
    uint64_t v44 = *(void *)(v94 + 48) + 96 * v43;
    uint64_t v45 = *(void *)v44;
    uint64_t v46 = *(unsigned __int8 *)(v44 + 8);
    int v47 = *(unsigned __int8 *)(v44 + 9);
    int v48 = *(unsigned __int8 *)(v44 + 10);
    int v49 = *(unsigned __int8 *)(v44 + 11);
    int v50 = *(unsigned __int8 *)(v44 + 12);
    int v51 = *(unsigned __int8 *)(v44 + 13);
    uint64_t v106 = *(void *)(v44 + 16);
    uint64_t v102 = *(void *)(v44 + 24);
    uint64_t v99 = *(void *)(v44 + 32);
    char v96 = *(unsigned char *)(v44 + 40);
    uint64_t v23 = *(void *)(v44 + 48);
    uint64_t v39 = *(void *)(v44 + 56);
    uint64_t v53 = *(void *)(v44 + 64);
    uint64_t v52 = *(void *)(v44 + 72);
    uint64_t v54 = *(void *)(v44 + 80);
    unsigned int v26 = *(unsigned __int16 *)(v44 + 88) | (*(unsigned __int8 *)(v44 + 90) << 16);
    uint64_t v55 = 256;
    if (!v47) {
      uint64_t v55 = 0;
    }
    uint64_t v56 = v55 | v46;
    uint64_t v57 = 0x10000;
    if (!v48) {
      uint64_t v57 = 0;
    }
    uint64_t v58 = 0x1000000;
    if (!v49) {
      uint64_t v58 = 0;
    }
    uint64_t v59 = v56 | v57 | v58;
    uint64_t v60 = 0x100000000;
    if (!v50) {
      uint64_t v60 = 0;
    }
    uint64_t v61 = 0x10000000000;
    if (!v51) {
      uint64_t v61 = 0;
    }
    unint64_t v62 = v59 | v60 | v61;
    swift_bridgeObjectRetain();
    sub_1ACA3A9E8(v23, v39, v53, v52, v54);
    unint64_t v35 = v62;
    uint64_t v41 = v54;
    uint64_t v36 = v52;
    uint64_t v40 = v53;
    uint64_t v27 = v45;
    uint64_t v38 = v106;
    int64_t v12 = v109;
    char v22 = v96;
    uint64_t v21 = v99;
    uint64_t v20 = v102;
    unint64_t v17 = v104;
    int64_t v37 = v111;
    if (v27) {
      BOOL v63 = v111 < v95;
    }
    else {
      BOOL v63 = 0;
    }
    if (!v63) {
      goto LABEL_30;
    }
  }
  int64_t v69 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v69 >= v88) {
      goto LABEL_76;
    }
    unint64_t v70 = *(void *)(v89 + 8 * v69);
    if (v70) {
      goto LABEL_61;
    }
    int64_t v71 = v12 + 2;
    if (v12 + 2 >= v88) {
      goto LABEL_76;
    }
    unint64_t v70 = *(void *)(v89 + 8 * v71);
    if (!v70)
    {
      if (v12 + 3 >= v88) {
        goto LABEL_76;
      }
      unint64_t v70 = *(void *)(v89 + 8 * (v12 + 3));
      if (v70)
      {
        int64_t v69 = v12 + 3;
        goto LABEL_61;
      }
      int64_t v71 = v12 + 4;
      if (v12 + 4 >= v88) {
        goto LABEL_76;
      }
      unint64_t v70 = *(void *)(v89 + 8 * v71);
      if (!v70)
      {
        int64_t v69 = v12 + 5;
        if (v12 + 5 >= v88) {
          goto LABEL_76;
        }
        unint64_t v70 = *(void *)(v89 + 8 * v69);
        if (!v70)
        {
          uint64_t v72 = v12 + 6;
          while (v88 != v72)
          {
            unint64_t v70 = *(void *)(v89 + 8 * v72++);
            if (v70)
            {
              int64_t v69 = v72 - 1;
              goto LABEL_61;
            }
          }
LABEL_76:
          v3[2] = v68;
          goto LABEL_13;
        }
        goto LABEL_61;
      }
    }
    int64_t v69 = v71;
LABEL_61:
    uint64_t v104 = (v70 - 1) & v70;
    unint64_t v43 = __clz(__rbit64(v70)) + (v69 << 6);
    int64_t v109 = v69;
    goto LABEL_36;
  }
  __break(1u);
LABEL_86:
  int64_t v79 = v69 + 3;
  if (v69 + 3 < v67)
  {
    unint64_t v78 = *(void *)(v89 + 8 * v79);
    if (v78) {
      goto LABEL_80;
    }
    v69 += 4;
    if (v69 >= v67) {
      goto LABEL_13;
    }
    unint64_t v78 = *(void *)(v89 + 8 * v69);
    if (!v78)
    {
      uint64_t v80 = v12 + 6;
      while (v67 != v80)
      {
        unint64_t v78 = *(void *)(v89 + 8 * v80++);
        if (v78)
        {
          int64_t v69 = v80 - 1;
          goto LABEL_74;
        }
      }
      goto LABEL_13;
    }
    goto LABEL_74;
  }
LABEL_13:
  uint64_t result = sub_1ACA50A70();
  *(void *)uint64_t v1 = v3;
  return result;
}

uint64_t sub_1ACA6FB18(unint64_t a1)
{
  return sub_1ACA70048(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1ACD0BA68);
}

uint64_t sub_1ACA6FB30(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1ACA41EA0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA6FC84(uint64_t a1)
{
  return sub_1ACA70B04(a1, (uint64_t)sub_1ACD10E6C);
}

uint64_t sub_1ACA6FC9C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v6 = a1;
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v8 = v3[3] >> 1, v8 < v5))
  {
    if (v4 <= v5) {
      int64_t v9 = v4 + v2;
    }
    else {
      int64_t v9 = v4;
    }
    uint64_t v3 = sub_1ACA41D90(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    int64_t v8 = v3[3] >> 1;
  }
  uint64_t v10 = v3[2];
  uint64_t v11 = v8 - v10;
  uint64_t result = (uint64_t)sub_1ACD10AD8(v42, &v3[v10 + 4], v8 - v10, v6);
  if (result < v2) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v16 = v3[2];
    BOOL v17 = __OFADD__(v16, result);
    uint64_t v18 = v16 + result;
    if (v17)
    {
      __break(1u);
      goto LABEL_47;
    }
    v3[2] = v18;
  }
  if (result != v11)
  {
LABEL_13:
    uint64_t result = sub_1ACA50A70();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_16:
  uint64_t v6 = v3[2];
  uint64_t result = v42[0];
  uint64_t v13 = v42[1];
  uint64_t v14 = v43;
  uint64_t v15 = v44;
  if (v45)
  {
    unint64_t v19 = (v45 - 1) & v45;
    unint64_t v20 = __clz(__rbit64(v45)) | (v44 << 6);
    int64_t v21 = (unint64_t)(v43 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_47:
  int64_t v35 = v15 + 1;
  if (__OFADD__(v15, 1)) {
    goto LABEL_65;
  }
  int64_t v21 = (unint64_t)(v14 + 64) >> 6;
  if (v35 >= v21) {
    goto LABEL_13;
  }
  unint64_t v36 = *(void *)(v13 + 8 * v35);
  uint64_t v37 = v15 + 1;
  if (!v36)
  {
    uint64_t v37 = v15 + 2;
    if (v15 + 2 >= v21) {
      goto LABEL_13;
    }
    unint64_t v36 = *(void *)(v13 + 8 * v37);
    if (!v36)
    {
      uint64_t v37 = v15 + 3;
      if (v15 + 3 >= v21) {
        goto LABEL_13;
      }
      unint64_t v36 = *(void *)(v13 + 8 * v37);
      if (!v36)
      {
        uint64_t v37 = v15 + 4;
        if (v15 + 4 >= v21) {
          goto LABEL_13;
        }
        unint64_t v36 = *(void *)(v13 + 8 * v37);
        if (!v36)
        {
          uint64_t v37 = v15 + 5;
          if (v15 + 5 >= v21) {
            goto LABEL_13;
          }
          unint64_t v36 = *(void *)(v13 + 8 * v37);
          if (!v36)
          {
            uint64_t v38 = v15 + 6;
            do
            {
              if (v21 == v38) {
                goto LABEL_13;
              }
              unint64_t v36 = *(void *)(v13 + 8 * v38++);
            }
            while (!v36);
            uint64_t v37 = v38 - 1;
          }
        }
      }
    }
  }
  unint64_t v19 = (v36 - 1) & v36;
  unint64_t v20 = __clz(__rbit64(v36)) + (v37 << 6);
  uint64_t v15 = v37;
LABEL_18:
  uint64_t v22 = *(void *)(*(void *)(result + 48) + 8 * v20);
  while (1)
  {
    unint64_t v23 = v3[3];
    int64_t v24 = v23 >> 1;
    if ((uint64_t)(v23 >> 1) < v6 + 1) {
      break;
    }
    if (v6 < v24) {
      goto LABEL_25;
    }
LABEL_19:
    v3[2] = v6;
  }
  uint64_t v40 = v13;
  uint64_t v41 = result;
  uint64_t v39 = v14;
  uint64_t v31 = v15;
  uint64_t v32 = v3;
  unint64_t v33 = v19;
  uint64_t v34 = sub_1ACA41D90((void *)(v23 > 1), v6 + 1, 1, v32);
  unint64_t v19 = v33;
  uint64_t v15 = v31;
  uint64_t v14 = v39;
  uint64_t v13 = v40;
  uint64_t v3 = v34;
  uint64_t result = v41;
  int64_t v24 = v3[3] >> 1;
  if (v6 >= v24) {
    goto LABEL_19;
  }
  while (1)
  {
LABEL_25:
    v3[v6++ + 4] = v22;
    if (v19)
    {
      unint64_t v25 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v26 = v25 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v27 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v27 >= v21) {
      goto LABEL_44;
    }
    unint64_t v28 = *(void *)(v13 + 8 * v27);
    uint64_t v29 = v15 + 1;
    if (!v28)
    {
      uint64_t v29 = v15 + 2;
      if (v15 + 2 >= v21) {
        goto LABEL_44;
      }
      unint64_t v28 = *(void *)(v13 + 8 * v29);
      if (!v28)
      {
        uint64_t v29 = v15 + 3;
        if (v15 + 3 >= v21) {
          goto LABEL_44;
        }
        unint64_t v28 = *(void *)(v13 + 8 * v29);
        if (!v28)
        {
          uint64_t v29 = v15 + 4;
          if (v15 + 4 >= v21) {
            goto LABEL_44;
          }
          unint64_t v28 = *(void *)(v13 + 8 * v29);
          if (!v28)
          {
            uint64_t v29 = v15 + 5;
            if (v15 + 5 >= v21) {
              goto LABEL_44;
            }
            unint64_t v28 = *(void *)(v13 + 8 * v29);
            if (!v28)
            {
              uint64_t v30 = v15 + 6;
              while (v21 != v30)
              {
                unint64_t v28 = *(void *)(v13 + 8 * v30++);
                if (v28)
                {
                  uint64_t v29 = v30 - 1;
                  goto LABEL_41;
                }
              }
LABEL_44:
              v3[2] = v6;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_41:
    unint64_t v19 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
    uint64_t v15 = v29;
LABEL_24:
    uint64_t v22 = *(void *)(*(void *)(result + 48) + 8 * v26);
    if (v6 >= v24) {
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_1ACA70030(unint64_t a1)
{
  return sub_1ACA70048(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1ACD0BC78);
}

uint64_t sub_1ACA70048(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x1AD1194A0](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *uint64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();
  return sub_1ACE76598();
}

uint64_t sub_1ACA7021C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x1AD1194A0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_1ACD0BE98(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_1ACE76598();
}

uint64_t sub_1ACA703E8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1ACA436DC(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[v9 + 4];
  if (a1 + 32 < v10 + 8 * v8 && v10 < a1 + 32 + 8 * v8) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA70558(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1ACA43704(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[3 * v9 + 4];
  if (a1 + 32 < v10 + 24 * v8 && v10 < a1 + 32 + 24 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA706B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1ACA4161C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA70814(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1ACA439A8(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = &v3[v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + 8 * v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), 8 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA70960(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_1ACA42334(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_1ACE74A28() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA70B04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  int64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v10 = v4[3] >> 1, v10 < v6))
  {
    if (v5 <= v6) {
      int64_t v11 = v5 + v3;
    }
    else {
      int64_t v11 = v5;
    }
    int64_t v4 = sub_1ACA41D90(isUniquelyReferenced_nonNull_native, v11, 1, v4);
    int64_t v10 = v4[3] >> 1;
  }
  uint64_t v12 = v4[2];
  uint64_t v13 = v10 - v12;
  uint64_t result = ((uint64_t (*)(void *, void *, int64_t, uint64_t))a2)(v44, &v4[v12 + 4], v10 - v12, a1);
  if (result < v3) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v18 = v4[2];
    BOOL v19 = __OFADD__(v18, result);
    uint64_t v20 = v18 + result;
    if (v19)
    {
      __break(1u);
      goto LABEL_47;
    }
    v4[2] = v20;
  }
  if (result != v13)
  {
LABEL_13:
    uint64_t result = sub_1ACA50A70();
    *(void *)uint64_t v2 = v4;
    return result;
  }
LABEL_16:
  a2 = v4[2];
  uint64_t result = v44[0];
  uint64_t v15 = v44[1];
  uint64_t v16 = v45;
  uint64_t v17 = v46;
  if (v47)
  {
    unint64_t v21 = (v47 - 1) & v47;
    unint64_t v22 = __clz(__rbit64(v47)) | (v46 << 6);
    int64_t v23 = (unint64_t)(v45 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_47:
  int64_t v38 = v17 + 1;
  if (__OFADD__(v17, 1)) {
    goto LABEL_65;
  }
  int64_t v23 = (unint64_t)(v16 + 64) >> 6;
  if (v38 >= v23) {
    goto LABEL_13;
  }
  unint64_t v39 = *(void *)(v15 + 8 * v38);
  uint64_t v40 = v17 + 1;
  if (!v39)
  {
    uint64_t v40 = v17 + 2;
    if (v17 + 2 >= v23) {
      goto LABEL_13;
    }
    unint64_t v39 = *(void *)(v15 + 8 * v40);
    if (!v39)
    {
      uint64_t v40 = v17 + 3;
      if (v17 + 3 >= v23) {
        goto LABEL_13;
      }
      unint64_t v39 = *(void *)(v15 + 8 * v40);
      if (!v39)
      {
        uint64_t v40 = v17 + 4;
        if (v17 + 4 >= v23) {
          goto LABEL_13;
        }
        unint64_t v39 = *(void *)(v15 + 8 * v40);
        if (!v39)
        {
          uint64_t v40 = v17 + 5;
          if (v17 + 5 >= v23) {
            goto LABEL_13;
          }
          unint64_t v39 = *(void *)(v15 + 8 * v40);
          if (!v39)
          {
            uint64_t v41 = v17 + 6;
            do
            {
              if (v23 == v41) {
                goto LABEL_13;
              }
              unint64_t v39 = *(void *)(v15 + 8 * v41++);
            }
            while (!v39);
            uint64_t v40 = v41 - 1;
          }
        }
      }
    }
  }
  unint64_t v21 = (v39 - 1) & v39;
  unint64_t v22 = __clz(__rbit64(v39)) + (v40 << 6);
  uint64_t v17 = v40;
LABEL_18:
  uint64_t v24 = *(void *)(*(void *)(result + 48) + 8 * v22);
  while (1)
  {
    unint64_t v25 = v4[3];
    int64_t v26 = v25 >> 1;
    if ((uint64_t)(v25 >> 1) < a2 + 1) {
      break;
    }
    if (a2 < v26) {
      goto LABEL_25;
    }
LABEL_19:
    v4[2] = a2;
  }
  uint64_t v42 = v15;
  uint64_t v43 = result;
  uint64_t v33 = v16;
  uint64_t v34 = v17;
  int64_t v35 = v4;
  uint64_t v36 = v24;
  uint64_t v37 = sub_1ACA41D90((void *)(v25 > 1), a2 + 1, 1, v35);
  uint64_t v24 = v36;
  uint64_t v17 = v34;
  uint64_t v16 = v33;
  int64_t v4 = v37;
  uint64_t v15 = v42;
  uint64_t result = v43;
  int64_t v26 = v4[3] >> 1;
  if (a2 >= v26) {
    goto LABEL_19;
  }
  while (1)
  {
LABEL_25:
    v4[a2++ + 4] = v24;
    if (v21)
    {
      unint64_t v27 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v28 = v27 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v29 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v29 >= v23) {
      goto LABEL_44;
    }
    unint64_t v30 = *(void *)(v15 + 8 * v29);
    uint64_t v31 = v17 + 1;
    if (!v30)
    {
      uint64_t v31 = v17 + 2;
      if (v17 + 2 >= v23) {
        goto LABEL_44;
      }
      unint64_t v30 = *(void *)(v15 + 8 * v31);
      if (!v30)
      {
        uint64_t v31 = v17 + 3;
        if (v17 + 3 >= v23) {
          goto LABEL_44;
        }
        unint64_t v30 = *(void *)(v15 + 8 * v31);
        if (!v30)
        {
          uint64_t v31 = v17 + 4;
          if (v17 + 4 >= v23) {
            goto LABEL_44;
          }
          unint64_t v30 = *(void *)(v15 + 8 * v31);
          if (!v30)
          {
            uint64_t v31 = v17 + 5;
            if (v17 + 5 >= v23) {
              goto LABEL_44;
            }
            unint64_t v30 = *(void *)(v15 + 8 * v31);
            if (!v30)
            {
              uint64_t v32 = v17 + 6;
              while (v23 != v32)
              {
                unint64_t v30 = *(void *)(v15 + 8 * v32++);
                if (v30)
                {
                  uint64_t v31 = v32 - 1;
                  goto LABEL_41;
                }
              }
LABEL_44:
              v4[2] = a2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_41:
    unint64_t v21 = (v30 - 1) & v30;
    unint64_t v28 = __clz(__rbit64(v30)) + (v31 << 6);
    uint64_t v17 = v31;
LABEL_24:
    uint64_t v24 = *(void *)(*(void *)(result + 48) + 8 * v28);
    if (a2 >= v26) {
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

double EpisodeTimelineAlignment.Alignment.playerTimeRange.getter()
{
  return *(double *)v0;
}

double EpisodeTimelineAlignment.Alignment.referenceTimeRange.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t EpisodeTimelineAlignment.Alignment.hasMatchedBeginning.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t EpisodeTimelineAlignment.Alignment.hasMatchedEnd.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t EpisodeTimelineAlignment.Alignment.init(playerTimeRange:referenceTimeRange:hasMatchedBeginning:hasMatchedEnd:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  *(double *)a3 = a4;
  *(double *)(a3 + 8) = a5;
  *(double *)(a3 + 16) = a6;
  *(double *)(a3 + 24) = a7;
  *(unsigned char *)(a3 + 32) = result;
  *(unsigned char *)(a3 + 33) = a2;
  return result;
}

uint64_t EpisodeTimelineAlignment.alignments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EpisodeTimelineAlignment.initialPlayhead.getter()
{
  return *(void *)(v0 + 8);
}

PodcastsFoundation::EpisodeTimelineAlignment __swiftcall EpisodeTimelineAlignment.init(alignments:initialPlayhead:)(Swift::OpaquePointer alignments, Swift::Double_optional initialPlayhead)
{
  *(Swift::OpaquePointer *)uint64_t v3 = alignments;
  *(void *)(v3 + 8) = *(void *)&initialPlayhead.is_nil;
  *(unsigned char *)(v3 + 16) = v2 & 1;
  *(unsigned char *)(v3 + 17) = 0;
  result.initialPlayhead.value = initialPlayhead.value;
  result.initialPlayhead.is_nil = initialPlayhead.is_nil;
  result.alignments = alignments;
  return result;
}

uint64_t EpisodeTimelineAlignment.isInProgress.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

Swift::Double_optional __swiftcall EpisodeTimelineAlignment.referenceTimestamp(for:)(Swift::Double a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  if (v2)
  {
    double v3 = 0.0;
    int64_t v4 = (double *)(*(void *)v1 + 48);
    char v5 = 1;
    do
    {
      double v6 = *(v4 - 2);
      if (v6 + -0.5 <= a1 && *(v4 - 1) + 0.5 >= a1)
      {
        double v8 = v6 - *v4;
        if ((v5 & 1) != 0 || fabs(v8) < COERCE_DOUBLE(*(void *)&v3 & 0x7FFFFFFFFFFFFFFFLL))
        {
          char v5 = 0;
          double v3 = v8;
        }
        else
        {
          char v5 = 0;
        }
      }
      v4 += 5;
      --v2;
    }
    while (v2);
    a1 = a1 - v3;
    if (v5) {
      char v9 = LOBYTE(v3);
    }
    else {
      char v9 = LOBYTE(a1);
    }
  }
  else
  {
    char v9 = 0;
  }
  result.value = a1;
  result.is_nil = v9;
  return result;
}

Swift::Double_optional __swiftcall EpisodeTimelineAlignment.playerTimestamp(for:)(Swift::Double a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  if (v2)
  {
    double v3 = 0.0;
    int64_t v4 = (double *)(*(void *)v1 + 56);
    char v5 = 1;
    do
    {
      double v6 = *(v4 - 1);
      if (v6 + -0.5 <= a1 && *v4 + 0.5 >= a1)
      {
        double v8 = v6 - *(v4 - 3);
        if ((v5 & 1) != 0 || fabs(v8) < COERCE_DOUBLE(*(void *)&v3 & 0x7FFFFFFFFFFFFFFFLL))
        {
          char v5 = 0;
          double v3 = v8;
        }
        else
        {
          char v5 = 0;
        }
      }
      v4 += 5;
      --v2;
    }
    while (v2);
    a1 = a1 - v3;
    if (v5) {
      char v9 = LOBYTE(v3);
    }
    else {
      char v9 = LOBYTE(a1);
    }
  }
  else
  {
    char v9 = 0;
  }
  result.value = a1;
  result.is_nil = v9;
  return result;
}

void *EpisodeTimelineAlignment.nonMatchingRangesInReference(with:)(uint64_t a1, uint64_t a2)
{
  double v6 = *(void **)v2;
  unint64_t v7 = *(void *)(*(void *)v2 + 16);
  Swift::Double_optional result = (void *)MEMORY[0x1E4FBC860];
  if (v7)
  {
    uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
    if (*((unsigned char *)v6 + 64) != 1 || *((double *)v6 + 6) <= 0.0) {
      goto LABEL_7;
    }
    int64_t v10 = (void *)sub_1ACE77D18();
    uint64_t KeyPath = v11;
    if (sub_1ACE77CD8()) {
      goto LABEL_18;
    }
    uint64_t v13 = sub_1ACA41C80(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v4 = v13[2];
    unint64_t v14 = v13[3];
    uint64_t v3 = v4 + 1;
    if (v4 >= v14 >> 1) {
      goto LABEL_19;
    }
    while (1)
    {
      v13[2] = v3;
      uint64_t v15 = &v13[4 * v4];
      v15[4] = 0;
      v15[5] = 0;
      v15[6] = v10;
      v15[7] = KeyPath;
      uint64_t v24 = v13;
LABEL_7:
      int64_t v23 = v6;
      swift_bridgeObjectRetain_n();
      sub_1ACA71818((uint64_t *)&v23);
      swift_bridgeObjectRelease();
      uint64_t v16 = (uint64_t)v23;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v3 = sub_1ACA712AC(KeyPath, v16);
      swift_release();
      swift_release();
      int64_t v10 = &v24;
      sub_1ACA6EF90(v3);
      unint64_t v14 = v6[2];
      if (v7 <= v14) {
        break;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      uint64_t v13 = sub_1ACA41C80((void *)(v14 > 1), v3, 1, v13);
    }
    if (BYTE1(v6[5 * v7 + 3]) != 1) {
      return v24;
    }
    sub_1ACE77D18();
    if ((sub_1ACE77CD8() & 1) == 0) {
      return v24;
    }
    uint64_t v17 = sub_1ACE77D18();
    uint64_t v19 = v18;
    if (sub_1ACE77CD8())
    {
      __break(1u);
    }
    else
    {
      double v6 = v24;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
LABEL_12:
        unint64_t v21 = v6[2];
        unint64_t v20 = v6[3];
        if (v21 >= v20 >> 1) {
          double v6 = sub_1ACA41C80((void *)(v20 > 1), v21 + 1, 1, v6);
        }
        _OWORD v6[2] = v21 + 1;
        unint64_t v22 = &v6[4 * v21];
        v22[4] = v17;
        v22[5] = v19;
        void v22[6] = a1;
        v22[7] = a2;
        return v6;
      }
    }
    double v6 = sub_1ACA41C80(0, v6[2] + 1, 1, v6);
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_1ACA712AC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = 2 * v2 - 1;
  v7[0] = a2;
  v7[1] = a2 + 32;
  if (v2 <= 1) {
    uint64_t v3 = 1;
  }
  _DWORD v7[2] = 0;
  v7[3] = v3;
  v7[4] = a2;
  v7[5] = a2 + 32;
  v7[6] = v2 != 0;
  v7[7] = (2 * v2) | 1;
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_1ACA72690((uint64_t)v7, (uint64_t (*)(void *, void *))sub_1ACA72540);
  uint64_t v5 = sub_1ACA72548(v4, (uint64_t (*)(_OWORD *, _OWORD *))sub_1ACA728F4);
  swift_bridgeObjectRelease();
  return v5;
}

void *EpisodeTimelineAlignment.nonMatchingRangesInPlayer(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)v2;
  unint64_t v7 = *(void *)(*(void *)v2 + 16);
  Swift::Double_optional result = (void *)MEMORY[0x1E4FBC860];
  if (v7)
  {
    double v10 = *(double *)(v2 + 8);
    char v11 = *(unsigned char *)(v2 + 16);
    uint64_t v37 = (void *)MEMORY[0x1E4FBC860];
    double v12 = *(double *)(v6 + 32);
    if (v12 <= 0.0) {
      goto LABEL_14;
    }
    if (*(unsigned char *)(v6 + 64) == 1)
    {
      uint64_t v13 = (void *)sub_1ACE77D18();
      uint64_t v15 = v14;
      if (sub_1ACE77CD8()) {
        goto LABEL_25;
      }
      uint64_t v16 = sub_1ACA41C80(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v4 = v16[2];
      unint64_t v17 = v16[3];
      int64_t v3 = v4 + 1;
      if (v4 >= v17 >> 1) {
        goto LABEL_26;
      }
      while (1)
      {
        _OWORD v16[2] = v3;
        uint64_t v18 = &v16[4 * v4];
        v18[4] = 0;
        v18[5] = 0;
        v18[6] = v13;
        v18[7] = v15;
LABEL_13:
        uint64_t v37 = v16;
LABEL_14:
        uint64_t KeyPath = swift_getKeyPath();
        uint64_t v15 = (void *)sub_1ACA712AC(KeyPath, v6);
        swift_release();
        uint64_t v13 = &v37;
        sub_1ACA6EF90((uint64_t)v15);
        unint64_t v17 = *(void *)(v6 + 16);
        if (v7 <= v17) {
          break;
        }
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        uint64_t v16 = sub_1ACA41C80((void *)(v17 > 1), v3, 1, v16);
      }
      if (*(unsigned char *)(v6 + 32 + 40 * v7 - 7) != 1) {
        return v37;
      }
      sub_1ACE77D18();
      if ((sub_1ACE77CD8() & 1) == 0) {
        return v37;
      }
      uint64_t v28 = sub_1ACE77D18();
      uint64_t v30 = v29;
      if (sub_1ACE77CD8())
      {
        __break(1u);
      }
      else
      {
        uint64_t v15 = v37;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
LABEL_19:
          unint64_t v32 = v15[2];
          unint64_t v31 = v15[3];
          if (v32 >= v31 >> 1) {
            uint64_t v15 = sub_1ACA41C80((void *)(v31 > 1), v32 + 1, 1, v15);
          }
          void v15[2] = v32 + 1;
          uint64_t v33 = &v15[4 * v32];
          v33[4] = v28;
          v33[5] = v30;
          v33[6] = a1;
          v33[7] = a2;
          return v15;
        }
      }
      uint64_t v15 = sub_1ACA41C80(0, v15[2] + 1, 1, v15);
      goto LABEL_19;
    }
    if (v10 > v12) {
      char v11 = 1;
    }
    if (v11) {
      goto LABEL_14;
    }
    uint64_t v19 = sub_1ACE77D18();
    uint64_t v21 = v20;
    int64_t v3 = sub_1ACE77D18();
    unint64_t v4 = v22;
    if (sub_1ACE77CD8())
    {
      __break(1u);
    }
    else
    {
      uint64_t v16 = sub_1ACA41C80(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v23 = v16[2];
      unint64_t v25 = v16[3];
      int64_t v24 = v23 + 1;
      if (v23 < v25 >> 1)
      {
LABEL_12:
        _OWORD v16[2] = v24;
        int64_t v26 = &v16[4 * v23];
        v26[4] = v19;
        v26[5] = v21;
        v26[6] = v3;
        v26[7] = v4;
        goto LABEL_13;
      }
    }
    unint64_t v35 = v23;
    int64_t v36 = v24;
    uint64_t v34 = sub_1ACA41C80((void *)(v25 > 1), v24, 1, v16);
    unint64_t v23 = v35;
    int64_t v24 = v36;
    uint64_t v16 = v34;
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_1ACA7163C()
{
  return *(unsigned __int8 *)(v0 + 17);
}

double sub_1ACA71644(Swift::Double a1)
{
  *(void *)&double result = (unint64_t)EpisodeTimelineAlignment.referenceTimestamp(for:)(a1);
  return result;
}

double sub_1ACA71660(Swift::Double a1)
{
  *(void *)&double result = (unint64_t)EpisodeTimelineAlignment.playerTimestamp(for:)(a1);
  return result;
}

BOOL sub_1ACA71684()
{
  swift_getAtKeyPath();
  swift_getAtKeyPath();
  return v2 < v1;
}

uint64_t sub_1ACA71734()
{
  swift_getAtKeyPath();
  uint64_t v0 = sub_1ACE77D18();
  swift_getAtKeyPath();
  sub_1ACE77D18();
  uint64_t result = sub_1ACE77CD8();
  if ((result & 1) == 0) {
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACA71818(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1ACBE803C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1ACA71884(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1ACA71884(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1ACE777B8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v93 = *a1;
      uint64_t v94 = -1;
      uint64_t v95 = 1;
      uint64_t v96 = *a1;
      do
      {
        uint64_t v97 = v94;
        uint64_t v98 = v96;
        do
        {
          double v99 = *(double *)(v98 + 56);
          if (v99 >= *(double *)(v98 + 16)) {
            break;
          }
          if (!v93) {
            goto LABEL_141;
          }
          uint64_t v100 = v98 + 40;
          uint64_t v101 = *(void *)(v98 + 64);
          char v102 = *(unsigned char *)(v98 + 72);
          char v103 = *(unsigned char *)(v98 + 73);
          long long v104 = *(_OWORD *)(v98 + 40);
          long long v105 = *(_OWORD *)(v98 + 16);
          *(_OWORD *)(v98 + 40) = *(_OWORD *)v98;
          *(_OWORD *)(v98 + 56) = v105;
          uint64_t v106 = *(void *)(v98 + 32);
          *(_OWORD *)uint64_t v98 = v104;
          *(double *)(v98 + 16) = v99;
          *(void *)(v98 + 24) = v101;
          *(unsigned char *)(v98 + 32) = v102;
          *(unsigned char *)(v98 + 33) = v103;
          v98 -= 40;
          *(void *)(v100 + 32) = v106;
        }
        while (!__CFADD__(v97++, 1));
        ++v95;
        v96 += 40;
        --v94;
      }
      while (v95 != v3);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v6 = result;
  uint64_t v117 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (double *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      double v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      int64_t v108 = v12;
      uint64_t v120 = v9;
      if (v13 >= 2)
      {
        uint64_t v109 = *v117;
        do
        {
          unint64_t v110 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v109) {
            goto LABEL_145;
          }
          int64_t v111 = v108;
          uint64_t v112 = *(void *)&v108[16 * v110 + 32];
          uint64_t v113 = *(void *)&v108[16 * v13 + 24];
          sub_1ACA71FD4((double *)(v109 + 40 * v112), (double *)(v109 + 40 * *(void *)&v108[16 * v13 + 16]), v109 + 40 * v113, __dst);
          if (v1) {
            break;
          }
          if (v113 < v112) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int64_t v111 = sub_1ACBE8028((uint64_t)v111);
          }
          if (v110 >= *((void *)v111 + 2)) {
            goto LABEL_134;
          }
          unint64_t v114 = &v111[16 * v110 + 32];
          *(void *)unint64_t v114 = v112;
          *((void *)v114 + 1) = v113;
          unint64_t v115 = *((void *)v111 + 2);
          if (v13 > v115) {
            goto LABEL_135;
          }
          memmove(&v111[16 * v13 + 16], &v111[16 * v13 + 32], 16 * (v115 - v13));
          int64_t v108 = v111;
          *((void *)v111 + 2) = v115 - 1;
          unint64_t v13 = v115 - 1;
        }
        while (v115 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v120 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v120 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1ACE76608();
    *(void *)(v8 + 16) = v7;
    uint64_t v120 = v8;
    __dst = (double *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v118 = *a1 + 56;
  uint64_t v119 = *a1 + 16;
  uint64_t v116 = *a1 - 40;
  double v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v121 = v6;
  uint64_t v122 = v3;
  uint64_t v123 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v119 + 40 * v10);
      double v16 = *(double *)(v119 + 40 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        unint64_t v17 = (double *)(v118 + 40 * v14);
        while (v15 < v16 != v17[5] >= *v17)
        {
          ++v10;
          v17 += 5;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v18 = 40 * v10;
          uint64_t v19 = 40 * v14;
          uint64_t v20 = v10;
          uint64_t v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v22 = v11 + v19;
              char v23 = *(unsigned char *)(v11 + v19 + 32);
              uint64_t v24 = v11 + v18;
              char v25 = *(unsigned char *)(v11 + v19 + 33);
              long long v26 = *(_OWORD *)(v11 + v19);
              long long v27 = *(_OWORD *)(v11 + v19 + 16);
              uint64_t v28 = *(void *)(v11 + v18 - 8);
              long long v29 = *(_OWORD *)(v11 + v18 - 24);
              *(_OWORD *)uint64_t v22 = *(_OWORD *)(v11 + v18 - 40);
              *(_OWORD *)(v22 + 16) = v29;
              *(void *)(v22 + 32) = v28;
              *(_OWORD *)(v24 - 40) = v26;
              *(_OWORD *)(v24 - 24) = v27;
              *(unsigned char *)(v24 - 8) = v23;
              *(unsigned char *)(v24 - 7) = v25;
            }
            ++v21;
            v18 -= 40;
            v19 += 40;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v30 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v30 >= v3) {
      uint64_t v30 = v3;
    }
    if (v30 < v14) {
      break;
    }
    if (v10 != v30)
    {
      uint64_t v31 = v116 + 40 * v10;
      do
      {
        uint64_t v32 = v14;
        uint64_t v33 = v31;
        do
        {
          double v34 = *(double *)(v33 + 56);
          if (v34 >= *(double *)(v33 + 16)) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          uint64_t v35 = v33 + 40;
          uint64_t v36 = *(void *)(v33 + 64);
          char v37 = *(unsigned char *)(v33 + 72);
          char v38 = *(unsigned char *)(v33 + 73);
          long long v39 = *(_OWORD *)(v33 + 40);
          long long v40 = *(_OWORD *)(v33 + 16);
          *(_OWORD *)(v33 + 40) = *(_OWORD *)v33;
          *(_OWORD *)(v33 + 56) = v40;
          uint64_t v41 = *(void *)(v33 + 32);
          *(_OWORD *)uint64_t v33 = v39;
          *(double *)(v33 + 16) = v34;
          *(void *)(v33 + 24) = v36;
          *(unsigned char *)(v33 + 32) = v37;
          *(unsigned char *)(v33 + 33) = v38;
          v33 -= 40;
          ++v32;
          *(void *)(v35 + 32) = v41;
        }
        while (v10 != v32);
        ++v10;
        v31 += 40;
      }
      while (v10 != v30);
      uint64_t v10 = v30;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v12 = sub_1ACBE7A88(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v43 = *((void *)v12 + 2);
    unint64_t v42 = *((void *)v12 + 3);
    unint64_t v13 = v43 + 1;
    uint64_t v11 = v123;
    if (v43 >= v42 >> 1)
    {
      uint64_t v92 = sub_1ACBE7A88((char *)(v42 > 1), v43 + 1, 1, v12);
      uint64_t v11 = v123;
      double v12 = v92;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v44 = v12 + 32;
    uint64_t v45 = &v12[16 * v43 + 32];
    *(void *)uint64_t v45 = v14;
    *((void *)v45 + 1) = v10;
    if (v43)
    {
      while (1)
      {
        unint64_t v46 = v13 - 1;
        if (v13 >= 4)
        {
          int v51 = &v44[16 * v13];
          uint64_t v52 = *((void *)v51 - 8);
          uint64_t v53 = *((void *)v51 - 7);
          BOOL v57 = __OFSUB__(v53, v52);
          uint64_t v54 = v53 - v52;
          if (v57) {
            goto LABEL_120;
          }
          uint64_t v56 = *((void *)v51 - 6);
          uint64_t v55 = *((void *)v51 - 5);
          BOOL v57 = __OFSUB__(v55, v56);
          uint64_t v49 = v55 - v56;
          char v50 = v57;
          if (v57) {
            goto LABEL_121;
          }
          unint64_t v58 = v13 - 2;
          uint64_t v59 = &v44[16 * v13 - 32];
          uint64_t v61 = *(void *)v59;
          uint64_t v60 = *((void *)v59 + 1);
          BOOL v57 = __OFSUB__(v60, v61);
          uint64_t v62 = v60 - v61;
          if (v57) {
            goto LABEL_123;
          }
          BOOL v57 = __OFADD__(v49, v62);
          uint64_t v63 = v49 + v62;
          if (v57) {
            goto LABEL_126;
          }
          if (v63 >= v54)
          {
            int v81 = &v44[16 * v46];
            uint64_t v83 = *(void *)v81;
            uint64_t v82 = *((void *)v81 + 1);
            BOOL v57 = __OFSUB__(v82, v83);
            uint64_t v84 = v82 - v83;
            if (v57) {
              goto LABEL_130;
            }
            BOOL v74 = v49 < v84;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v75 = *((void *)v12 + 4);
            uint64_t v76 = *((void *)v12 + 5);
            BOOL v57 = __OFSUB__(v76, v75);
            uint64_t v68 = v76 - v75;
            char v69 = v57;
            goto LABEL_77;
          }
          uint64_t v48 = *((void *)v12 + 4);
          uint64_t v47 = *((void *)v12 + 5);
          BOOL v57 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          char v50 = v57;
        }
        if (v50) {
          goto LABEL_122;
        }
        unint64_t v58 = v13 - 2;
        uint64_t v64 = &v44[16 * v13 - 32];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v67 = __OFSUB__(v65, v66);
        uint64_t v68 = v65 - v66;
        char v69 = v67;
        if (v67) {
          goto LABEL_125;
        }
        unint64_t v70 = &v44[16 * v46];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v57 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v57) {
          goto LABEL_128;
        }
        if (__OFADD__(v68, v73)) {
          goto LABEL_129;
        }
        if (v68 + v73 >= v49)
        {
          BOOL v74 = v49 < v73;
LABEL_83:
          if (v74) {
            unint64_t v46 = v58;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v69) {
          goto LABEL_124;
        }
        __int16 v77 = &v44[16 * v46];
        uint64_t v79 = *(void *)v77;
        uint64_t v78 = *((void *)v77 + 1);
        BOOL v57 = __OFSUB__(v78, v79);
        uint64_t v80 = v78 - v79;
        if (v57) {
          goto LABEL_127;
        }
        if (v80 < v68) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v85 = v46 - 1;
        if (v46 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v86 = v12;
        int v87 = &v44[16 * v85];
        uint64_t v88 = *(void *)v87;
        uint64_t v89 = &v44[16 * v46];
        uint64_t v90 = *((void *)v89 + 1);
        sub_1ACA71FD4((double *)(v11 + 40 * *(void *)v87), (double *)(v11 + 40 * *(void *)v89), v11 + 40 * v90, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v90 < v88) {
          goto LABEL_117;
        }
        if (v46 > *((void *)v86 + 2)) {
          goto LABEL_118;
        }
        *(void *)int v87 = v88;
        *(void *)&v44[16 * v85 + 8] = v90;
        unint64_t v91 = *((void *)v86 + 2);
        if (v46 >= v91) {
          goto LABEL_119;
        }
        double v12 = v86;
        unint64_t v13 = v91 - 1;
        memmove(&v44[16 * v46], v89 + 16, 16 * (v91 - 1 - v46));
        *((void *)v86 + 2) = v91 - 1;
        uint64_t v11 = v123;
        if (v91 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v121;
    uint64_t v3 = v122;
    if (v10 >= v122)
    {
      uint64_t v9 = v120;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

uint64_t sub_1ACA71FD4(double *__src, double *a2, unint64_t a3, double *__dst)
{
  unint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = ((char *)a2 - (char *)__src) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  uint64_t v30 = __dst;
  uint64_t v31 = __src;
  if (v9 >= v11)
  {
    if (v10 >= -39)
    {
      uint64_t v19 = 5 * v11;
      if (__dst != a2 || &a2[v19] <= __dst) {
        memmove(__dst, a2, 40 * v11);
      }
      uint64_t v20 = &v4[v19];
      long long v29 = &v4[v19];
      uint64_t v31 = v6;
      if (v7 < v6 && v10 >= 40)
      {
        unint64_t v21 = a3 - 40;
        do
        {
          uint64_t v22 = (double *)(v21 + 40);
          if (*(v20 - 3) >= *(v6 - 3))
          {
            long long v29 = v20 - 5;
            if (v22 < v20 || v21 >= (unint64_t)v20 || v22 != v20)
            {
              long long v26 = *(_OWORD *)(v20 - 5);
              long long v27 = *(_OWORD *)(v20 - 3);
              *(double *)(v21 + 32) = *(v20 - 1);
              *(_OWORD *)unint64_t v21 = v26;
              *(_OWORD *)(v21 + 16) = v27;
            }
            char v23 = v6;
            v20 -= 5;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            char v23 = v6 - 5;
            if (v22 != v6 || v21 >= (unint64_t)v6)
            {
              long long v24 = *(_OWORD *)v23;
              long long v25 = *(_OWORD *)(v6 - 3);
              *(double *)(v21 + 32) = *(v6 - 1);
              *(_OWORD *)unint64_t v21 = v24;
              *(_OWORD *)(v21 + 16) = v25;
            }
            uint64_t v31 = v6 - 5;
            if (v23 <= v7) {
              break;
            }
          }
          v21 -= 40;
          uint64_t v6 = v23;
        }
        while (v20 > v4);
      }
LABEL_40:
      sub_1ACBE7B84((void **)&v31, (const void **)&v30, &v29);
      return 1;
    }
  }
  else if (v8 >= -39)
  {
    size_t v12 = 5 * v9;
    if (__dst != __src || &__src[v12] <= __dst) {
      memmove(__dst, __src, v12 * 8);
    }
    unint64_t v13 = &v4[v12];
    long long v29 = &v4[v12];
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      uint64_t v14 = v4;
      while (1)
      {
        if (v6[2] >= v14[2])
        {
          unint64_t v4 = v14 + 5;
          double v16 = v14;
          double v15 = v6;
          if (v7 == v14)
          {
            v14 += 5;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v14 += 5;
          }
        }
        else
        {
          double v15 = v6 + 5;
          double v16 = v6;
          if (v7 == v6 && v7 < v15) {
            goto LABEL_18;
          }
        }
        long long v17 = *(_OWORD *)v16;
        long long v18 = *((_OWORD *)v16 + 1);
        v7[4] = v16[4];
        *(_OWORD *)uint64_t v7 = v17;
        *((_OWORD *)v7 + 1) = v18;
LABEL_18:
        v7 += 5;
        if (v14 < v13)
        {
          uint64_t v6 = v15;
          if ((unint64_t)v15 < a3) {
            continue;
          }
        }
        uint64_t v30 = v4;
        uint64_t v31 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

BOOL _s18PodcastsFoundation24EpisodeTimelineAlignmentV0E0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint16x4_t v2 = (uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)a1, *(float64x2_t *)a2), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16))))), 0xFuLL));
  v2.i16[0] = vmaxv_u16(v2);
  return ((v2.i32[0] | *(unsigned __int8 *)(a1 + 32) ^ *(unsigned __int8 *)(a2 + 32) | *(unsigned __int8 *)(a2 + 33) ^ *(unsigned __int8 *)(a1 + 33)) & 1) == 0;
}

uint64_t destroy for EpisodeTimelineAlignment()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s18PodcastsFoundation24EpisodeTimelineAlignmentVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EpisodeTimelineAlignment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for EpisodeTimelineAlignment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeTimelineAlignment(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 18)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeTimelineAlignment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeTimelineAlignment()
{
  return &type metadata for EpisodeTimelineAlignment;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for EpisodeTimelineAlignment.Alignment(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 34)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeTimelineAlignment.Alignment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeTimelineAlignment.Alignment()
{
  return &type metadata for EpisodeTimelineAlignment.Alignment;
}

uint64_t sub_1ACA72530(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

BOOL sub_1ACA72540()
{
  return sub_1ACA71684();
}

uint64_t sub_1ACA72548(uint64_t a1, uint64_t (*a2)(_OWORD *, _OWORD *))
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1ACC82EA8(0, v2, 0);
    uint64_t v3 = v29;
    int v5 = (char *)(a1 + 64);
    do
    {
      char v6 = *v5;
      char v7 = v5[1];
      char v8 = v5[40];
      char v9 = v5[41];
      long long v10 = *((_OWORD *)v5 - 1);
      v23[0] = *((_OWORD *)v5 - 2);
      v23[1] = v10;
      char v24 = v6;
      char v25 = v7;
      v26[0] = *(_OWORD *)(v5 + 8);
      v26[1] = *(_OWORD *)(v5 + 24);
      char v27 = v8;
      char v28 = v9;
      uint64_t v12 = a2(v23, v26);
      uint64_t v14 = v13;
      uint64_t v16 = v15;
      uint64_t v29 = v3;
      unint64_t v18 = *(void *)(v3 + 16);
      unint64_t v17 = *(void *)(v3 + 24);
      if (v18 >= v17 >> 1)
      {
        uint64_t v20 = v11;
        sub_1ACC82EA8(v17 > 1, v18 + 1, 1);
        uint64_t v11 = v20;
        uint64_t v3 = v29;
      }
      *(void *)(v3 + 16) = v18 + 1;
      uint64_t v19 = (void *)(v3 + 32 * v18);
      v19[4] = v12;
      v19[5] = v14;
      v19[6] = v11;
      v19[7] = v16;
      v5 += 80;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1ACA72690(uint64_t result, uint64_t (*a2)(void *, void *))
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v31 = *(void *)(result + 24) >> 1;
  uint64_t v30 = v2 - v31;
  if (v2 == v31)
  {
    uint64_t v32 = MEMORY[0x1E4FBC860];
LABEL_3:
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return v32;
  }
  else
  {
    uint64_t v3 = a2;
    uint64_t v4 = 0;
    uint64_t v5 = *(void *)(result + 48);
    char v6 = (char *)(*(void *)(result + 40) + 40 * v5 + 33);
    char v7 = (char *)(*(void *)(result + 8) + 40 * v2 + 33);
    uint64_t v27 = *(void *)(result + 56) >> 1;
    uint64_t v28 = v5;
    uint64_t v29 = v5 - v27;
    uint64_t v32 = MEMORY[0x1E4FBC860];
    uint64_t v26 = *(void *)(result + 16);
    while (v2 + v4 < v31)
    {
      if (!(v29 + v4)) {
        goto LABEL_3;
      }
      if (v28 + v4 >= v27) {
        goto LABEL_16;
      }
      uint64_t v12 = *(void *)(v7 - 33);
      uint64_t v13 = *(void *)(v7 - 25);
      uint64_t v14 = *(void *)(v7 - 17);
      uint64_t v15 = *(void *)(v7 - 9);
      char v16 = *(v7 - 1);
      char v17 = *v7;
      uint64_t v18 = *(void *)(v6 - 33);
      uint64_t v19 = *(void *)(v6 - 25);
      uint64_t v20 = *(void *)(v6 - 17);
      uint64_t v21 = *(void *)(v6 - 9);
      char v22 = *v6;
      char v23 = *(v6 - 1);
      v33[0] = v12;
      v33[1] = v13;
      void v33[2] = v14;
      v33[3] = v15;
      char v34 = v16;
      char v35 = v17;
      v36[0] = v18;
      v36[1] = v19;
      _OWORD v36[2] = v20;
      v36[3] = v21;
      char v37 = v23;
      char v38 = v22;
      uint64_t result = v3(v33, v36);
      if (result)
      {
        uint64_t v24 = v32;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v39 = v32;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1ACC82EC8(0, *(void *)(v32 + 16) + 1, 1);
          uint64_t v24 = v39;
        }
        unint64_t v9 = *(void *)(v24 + 16);
        unint64_t v8 = *(void *)(v24 + 24);
        unint64_t v10 = v9 + 1;
        if (v9 >= v8 >> 1)
        {
          uint64_t result = sub_1ACC82EC8(v8 > 1, v9 + 1, 1);
          unint64_t v10 = v9 + 1;
          uint64_t v24 = v39;
        }
        *(void *)(v24 + 16) = v10;
        uint64_t v32 = v24;
        uint64_t v11 = v24 + 80 * v9;
        *(void *)(v11 + 32) = v12;
        *(void *)(v11 + 40) = v13;
        *(void *)(v11 + 48) = v14;
        *(void *)(v11 + 56) = v15;
        *(unsigned char *)(v11 + 64) = v16;
        *(unsigned char *)(v11 + 65) = v17;
        *(void *)(v11 + 72) = v18;
        *(void *)(v11 + 80) = v19;
        *(void *)(v11 + 88) = v20;
        *(void *)(v11 + 96) = v21;
        *(unsigned char *)(v11 + 104) = v23;
        *(unsigned char *)(v11 + 105) = v22;
        uint64_t v3 = a2;
      }
      ++v4;
      v6 += 40;
      v7 += 40;
      uint64_t v2 = v26;
      if (!(v30 + v4)) {
        goto LABEL_3;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACA728F4()
{
  return sub_1ACA71734();
}

uint64_t EyebrowBuilderSourceCopy.channelName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilderSourceCopy.subscriptionName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilderSourceCopy.entitlementState.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t EyebrowBuilderSourceCopy.hasFreeVersion.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

void EyebrowBuilderSourceCopy.listenNowReason.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 56);
  char v3 = *(unsigned char *)(v1 + 57);
  *(void *)a1 = *(void *)(v1 + 48);
  *(unsigned char *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 9) = v3;
}

uint64_t EyebrowBuilderSourceCopy.episodeTypeResolvedValue.getter()
{
  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t EyebrowBuilderSourceCopy.mediaType.getter()
{
  return *(unsigned __int8 *)(v0 + 59);
}

uint64_t EyebrowBuilderSourceCopy.isExplicit.getter()
{
  return *(unsigned __int8 *)(v0 + 60);
}

uint64_t EyebrowBuilderSourceCopy.showTypeIsSerial.getter()
{
  return *(unsigned __int8 *)(v0 + 61);
}

uint64_t EyebrowBuilderSourceCopy.durationOpt.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t EyebrowBuilderSourceCopy.seasonNumberOpt.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t EyebrowBuilderSourceCopy.episodeNumberOpt.getter()
{
  return *(void *)(v0 + 96);
}

uint64_t EyebrowBuilderSourceCopy.releaseDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EyebrowBuilderSourceCopy() + 64);
  return sub_1ACA72A5C(v3, a1);
}

uint64_t type metadata accessor for EyebrowBuilderSourceCopy()
{
  uint64_t result = qword_1EB76EA58;
  if (!qword_1EB76EA58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACA72A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t EyebrowBuilderSourceCopy.timeRemainingOpt.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EyebrowBuilderSourceCopy() + 68));
}

uint64_t EyebrowBuilderSourceCopy.init(source:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for EyebrowBuilderSourceCopy();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  *(void *)char v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  *((void *)v7 + 1) = v10;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  *((void *)v7 + 2) = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  *((void *)v7 + 3) = v13;
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  *((void *)v7 + 4) = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v7[40] = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 32))(v16, v17) & 1;
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v19 + 40))(&v47, v18, v19);
  char v20 = v48;
  char v21 = v49;
  *((void *)v7 + 6) = v47;
  v7[56] = v20;
  v7[57] = v21;
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v7[58] = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 48))(v22, v23);
  uint64_t v24 = a1[3];
  uint64_t v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  v7[59] = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 56))(v24, v25);
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  v7[60] = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 64))(v26, v27) & 1;
  uint64_t v28 = a1[3];
  uint64_t v29 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v28);
  v7[61] = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 72))(v28, v29) & 1;
  uint64_t v30 = a1[3];
  uint64_t v31 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  *((void *)v7 + 8) = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 80))(v30, v31);
  v7[72] = v32 & 1;
  uint64_t v33 = a1[3];
  uint64_t v34 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v33);
  *((void *)v7 + 10) = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 88))(v33, v34);
  v7[88] = v35 & 1;
  uint64_t v36 = a1[3];
  uint64_t v37 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v36);
  *((void *)v7 + 12) = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 96))(v36, v37);
  v7[104] = v38 & 1;
  uint64_t v39 = a1[3];
  uint64_t v40 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v39);
  (*(void (**)(uint64_t, uint64_t))(v40 + 104))(v39, v40);
  uint64_t v41 = a1[3];
  uint64_t v42 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v41);
  uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 112))(v41, v42);
  uint64_t v44 = &v7[*(int *)(v5 + 76)];
  *(void *)uint64_t v44 = v43;
  v44[8] = v45 & 1;
  sub_1ACA72EB8((uint64_t)v7, a2);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1ACA72EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EyebrowBuilderSourceCopy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACA72F1C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACA72F4C()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_1ACA72F54()
{
  return *(unsigned __int8 *)(v0 + 40);
}

void sub_1ACA72F5C(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 56);
  char v3 = *(unsigned char *)(v1 + 57);
  *(void *)a1 = *(void *)(v1 + 48);
  *(unsigned char *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 9) = v3;
}

uint64_t sub_1ACA72F78()
{
  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t sub_1ACA72F80()
{
  return *(unsigned __int8 *)(v0 + 59);
}

uint64_t sub_1ACA72F88()
{
  return *(unsigned __int8 *)(v0 + 60);
}

uint64_t sub_1ACA72F90()
{
  return *(unsigned __int8 *)(v0 + 61);
}

uint64_t sub_1ACA72F98()
{
  return *(void *)(v0 + 64);
}

uint64_t sub_1ACA72FA4()
{
  return *(void *)(v0 + 80);
}

uint64_t sub_1ACA72FB0()
{
  return *(void *)(v0 + 96);
}

uint64_t sub_1ACA72FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACA72A5C(v2 + *(int *)(a1 + 64), a2);
}

uint64_t sub_1ACA72FCC(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 68));
}

void *initializeBufferWithCopyOfBuffer for EyebrowBuilderSourceCopy(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(void *)(a1 + 48) = a2[6];
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    *(_DWORD *)(a1 + 58) = *(_DWORD *)((char *)a2 + 58);
    *(void *)(a1 + 64) = a2[8];
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(void *)(a1 + 80) = a2[10];
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    *(void *)(a1 + 96) = a2[12];
    *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
    uint64_t v9 = *(int *)(a3 + 64);
    __dst = (void *)(a1 + v9);
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_1ACE750A8();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 68);
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = *(unsigned char *)(v18 + 8);
  }
  return v4;
}

uint64_t destroy for EyebrowBuilderSourceCopy(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 64);
  uint64_t v5 = sub_1ACE750A8();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t initializeWithCopy for EyebrowBuilderSourceCopy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 58) = *(_DWORD *)(a2 + 58);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v7 = *(int *)(a3 + 64);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1ACE750A8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 68);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  return a1;
}

uint64_t assignWithCopy for EyebrowBuilderSourceCopy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(unsigned char *)(a1 + 59) = *(unsigned char *)(a2 + 59);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(unsigned char *)(a1 + 61) = *(unsigned char *)(a2 + 61);
  uint64_t v7 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v8;
  uint64_t v9 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v9;
  uint64_t v10 = *(int *)(a3 + 64);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_1ACE750A8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  uint64_t v19 = *(int *)(a3 + 68);
  uint64_t v20 = a1 + v19;
  char v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  *(unsigned char *)(v20 + 8) = *((unsigned char *)v21 + 8);
  *(void *)uint64_t v20 = v22;
  return a1;
}

uint64_t initializeWithTake for EyebrowBuilderSourceCopy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_DWORD *)(a1 + 58) = *(_DWORD *)(a2 + 58);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v7 = *(int *)(a3 + 64);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1ACE750A8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = *(int *)(a3 + 68);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  return a1;
}

uint64_t assignWithTake for EyebrowBuilderSourceCopy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(unsigned char *)(a1 + 61) = *(unsigned char *)(a2 + 61);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v8 = *(int *)(a3 + 64);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1ACE750A8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 68);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for EyebrowBuilderSourceCopy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACA73AA8);
}

uint64_t sub_1ACA73AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 64);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for EyebrowBuilderSourceCopy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACA73B7C);
}

uint64_t sub_1ACA73B7C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 64);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1ACA73C28()
{
  sub_1ACA73D00();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1ACA73D00()
{
  if (!qword_1EB773510)
  {
    sub_1ACE750A8();
    unint64_t v0 = sub_1ACE76FD8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB773510);
    }
  }
}

uint64_t FormatConversionProcessingStep.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA69E2C(v1, a1);
}

uint64_t FormatConversionProcessingStep.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t FormatConversionProcessingStep.format.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 40));
}

uint64_t FormatConversionProcessingStep.init(upstream:format:)@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 40))(v19, a3, a4);
  ArtworkRequest.with(format:)(a2, (uint64_t)v20);
  sub_1ACA69E88((uint64_t)v19);
  long long v9 = v20[13];
  *((_OWORD *)a5 + 12) = v20[12];
  *((_OWORD *)a5 + 13) = v9;
  long long v10 = v20[15];
  *((_OWORD *)a5 + 14) = v20[14];
  *((_OWORD *)a5 + 15) = v10;
  long long v11 = v20[9];
  *((_OWORD *)a5 + 8) = v20[8];
  *((_OWORD *)a5 + 9) = v11;
  long long v12 = v20[11];
  *((_OWORD *)a5 + 10) = v20[10];
  *((_OWORD *)a5 + 11) = v12;
  long long v13 = v20[5];
  *((_OWORD *)a5 + 4) = v20[4];
  *((_OWORD *)a5 + 5) = v13;
  long long v14 = v20[7];
  *((_OWORD *)a5 + 6) = v20[6];
  *((_OWORD *)a5 + 7) = v14;
  long long v15 = v20[1];
  *(_OWORD *)a5 = v20[0];
  *((_OWORD *)a5 + 1) = v15;
  long long v16 = v20[3];
  *((_OWORD *)a5 + 2) = v20[2];
  *((_OWORD *)a5 + 3) = v16;
  uint64_t v17 = type metadata accessor for FormatConversionProcessingStep();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(&a5[*(int *)(v17 + 36)], a1, a3);
  a5[*(int *)(v17 + 40)] = a2;
  return result;
}

uint64_t type metadata accessor for FormatConversionProcessingStep()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FormatConversionProcessingStep.publisher.getter(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  uint64_t v25 = *(void *)(v3 + 64);
  uint64_t v4 = MEMORY[0x1F4188790](a1);
  uint64_t v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v4 + 16);
  uint64_t v6 = *(void *)(v4 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v20 = (char *)&v19 - v9;
  uint64_t v22 = type metadata accessor for ArtworkContent();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = sub_1ACE756F8();
  uint64_t v24 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  long long v12 = (char *)&v19 - v11;
  (*(void (**)(uint64_t, uint64_t))(v6 + 48))(v7, v6);
  long long v13 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v23, v1, a1);
  unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v7;
  *(void *)(v15 + 24) = v6;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v15 + v14, v13, a1);
  long long v16 = v20;
  sub_1ACE75C28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v16, AssociatedTypeWitness);
  swift_getWitnessTable();
  uint64_t v17 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
  return v17;
}

uint64_t sub_1ACA7421C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void (*v15)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void v26[33];
  uint64_t v27;

  uint64_t v23 = a1;
  char v21 = a5;
  uint64_t v27 = sub_1ACE74F28();
  uint64_t v8 = *(void *)(v27 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v27);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  long long v13 = (char *)&v21 - v12;
  uint64_t v14 = *(unsigned __int8 *)(a2 + *(int *)(type metadata accessor for FormatConversionProcessingStep() + 40));
  uint64_t v25 = v13;
  sub_1ACA746F4(v14, (uint64_t)v13);
  uint64_t v15 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 40);
  v15(v26, a3, a4);
  uint64_t v22 = v11;
  long long v16 = v24;
  sub_1ACA749CC(v23, v14, a4, (uint64_t)v11);
  sub_1ACA69E88((uint64_t)v26);
  if (v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v25, v27);
  }
  v15(v26, a3, a4);
  uint64_t v18 = (uint64_t)v22;
  uint64_t v19 = (uint64_t)v25;
  sub_1ACC504D4((uint64_t)v22, (uint64_t)v25, (uint64_t)v26);
  sub_1ACA69E88((uint64_t)v26);
  uint64_t v20 = v27;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v18, v27);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v21, v19, v20);
  type metadata accessor for ArtworkContent();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1ACA74494()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for FormatConversionProcessingStep();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  swift_bridgeObjectRelease();
  int v4 = *(unsigned __int8 *)(v3 + 32);
  if (v4 != 255) {
    sub_1ACA74630(*(void *)(v3 + 16), *(void *)(v3 + 24), v4);
  }
  int v5 = *(unsigned __int8 *)(v3 + 64);
  if (v5 != 255) {
    sub_1ACA74648(*(id *)(v3 + 56), v5);
  }
  int v6 = *(unsigned __int8 *)(v3 + 80);
  if (v6 != 255) {
    sub_1ACA74648(*(id *)(v3 + 72), v6);
  }
  int v7 = *(unsigned __int8 *)(v3 + 96);
  if (v7 != 255) {
    sub_1ACA74648(*(id *)(v3 + 88), v7);
  }
  int v8 = *(unsigned __int8 *)(v3 + 112);
  if (v8 != 255) {
    sub_1ACA74648(*(id *)(v3 + 104), v8);
  }
  int v9 = *(unsigned __int8 *)(v3 + 128);
  if (v9 != 255) {
    sub_1ACA74648(*(id *)(v3 + 120), v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v3 + 240)) {
    __swift_destroy_boxed_opaque_existential_0(v3 + 216);
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + *(int *)(v2 + 36), v1);
  return swift_deallocObject();
}

uint64_t sub_1ACA74630(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1ACA74648(id a1, char a2)
{
  if (a2 == 1) {
}
  }

uint64_t sub_1ACA7465C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for FormatConversionProcessingStep() - 8);
  return sub_1ACA7421C(a1, v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v5, v6, a2);
}

uint64_t sub_1ACA746F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[0] = a1;
  v17[1] = a2;
  uint64_t v2 = sub_1ACE75118();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v17 - v11;
  id v13 = objc_msgSend(self, sel_defaultManager);
  id v14 = objc_msgSend(v13, sel_temporaryDirectory);

  sub_1ACE74E98();
  sub_1ACE75108();
  sub_1ACE750C8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1ACE74E38();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  v17[2] = 0x6D726F662E706D74;
  void v17[3] = 0xEB000000002E7461;
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE74E48();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v15)(v12, v6);
}

uint64_t sub_1ACA749CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  v17[1] = a3;
  uint64_t v18 = a4;
  uint64_t v7 = sub_1ACE74F28();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ArtworkContent();
  MEMORY[0x1F4188790](v11);
  id v13 = (void *)((char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ACA569F0(a1, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = (char *)v13;
  }
  else
  {
    uint64_t v14 = *v13;
    unint64_t v15 = v13[1];
    sub_1ACA746F4(a2, (uint64_t)v10);
    sub_1ACE74F98();
    if (v4)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return sub_1ACA50850(v14, v15);
    }
    sub_1ACA50850(v14, v15);
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v18, v10, v7);
}

uint64_t sub_1ACA74BA4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = FormatConversionProcessingStep.publisher.getter(a1);
  *a2 = result;
  return result;
}

uint64_t AssetProcessingStep<>.convert(to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  unsigned __int8 v7 = a1;
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v10, v4, a2);
  return FormatConversionProcessingStep.init(upstream:format:)((uint64_t)v10, v7, a2, a3, a4);
}

_UNKNOWN **sub_1ACA74CAC()
{
  return &protocol witness table for ArtworkRequest;
}

unint64_t sub_1ACA74CBC()
{
  unint64_t result = qword_1EB7704E0;
  if (!qword_1EB7704E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7704E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7704E0);
  }
  return result;
}

uint64_t sub_1ACA74D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t sub_1ACA74D20()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1ACA74DC4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || (unint64_t)(*(void *)(v5 + 64) + 257) > 0x18)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
    swift_retain();
  }
  else
  {
    uint64_t v36 = *(void *)(v5 + 64);
    uint64_t v37 = *(void *)(a3 + 16);
    uint64_t v10 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v10;
    int v11 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v11 == 255)
    {
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    }
    else
    {
      uint64_t v12 = a2[2];
      uint64_t v13 = a2[3];
      sub_1ACA75154(v12, v13, v11);
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v13;
      *(unsigned char *)(a1 + 32) = v11;
    }
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    uint64_t v14 = (id *)(a2 + 7);
    int v15 = *((unsigned __int8 *)a2 + 64);
    if (v15 == 255)
    {
      *(void *)(a1 + 56) = *v14;
      *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    }
    else
    {
      id v16 = *v14;
      sub_1ACA7516C(*v14, *((unsigned char *)a2 + 64));
      *(void *)(a1 + 56) = v16;
      *(unsigned char *)(a1 + 64) = v15;
    }
    uint64_t v17 = (id *)(a2 + 9);
    int v18 = *((unsigned __int8 *)a2 + 80);
    if (v18 == 255)
    {
      *(void *)(a1 + 72) = *v17;
      *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    }
    else
    {
      id v19 = *v17;
      sub_1ACA7516C(*v17, *((unsigned char *)a2 + 80));
      *(void *)(a1 + 72) = v19;
      *(unsigned char *)(a1 + 80) = v18;
    }
    uint64_t v20 = (id *)(a2 + 11);
    int v21 = *((unsigned __int8 *)a2 + 96);
    if (v21 == 255)
    {
      *(void *)(a1 + 88) = *v20;
      *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    }
    else
    {
      id v22 = *v20;
      sub_1ACA7516C(*v20, *((unsigned char *)a2 + 96));
      *(void *)(a1 + 88) = v22;
      *(unsigned char *)(a1 + 96) = v21;
    }
    uint64_t v23 = (id *)(a2 + 13);
    int v24 = *((unsigned __int8 *)a2 + 112);
    if (v24 == 255)
    {
      *(void *)(a1 + 104) = *v23;
      *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    }
    else
    {
      id v25 = *v23;
      sub_1ACA7516C(*v23, *((unsigned char *)a2 + 112));
      *(void *)(a1 + 104) = v25;
      *(unsigned char *)(a1 + 112) = v24;
    }
    uint64_t v26 = (id *)(a2 + 15);
    int v27 = *((unsigned __int8 *)a2 + 128);
    if (v27 == 255)
    {
      *(void *)(a1 + 120) = *v26;
      *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    }
    else
    {
      id v28 = *v26;
      sub_1ACA7516C(*v26, *((unsigned char *)a2 + 128));
      *(void *)(a1 + 120) = v28;
      *(unsigned char *)(a1 + 128) = v27;
    }
    uint64_t v29 = ~v6;
    *(unsigned char *)(a1 + 129) = *((unsigned char *)a2 + 129);
    *(_WORD *)(a1 + 130) = *((_WORD *)a2 + 65);
    uint64_t v30 = a2[18];
    *(void *)(a1 + 136) = a2[17];
    *(void *)(a1 + 144) = v30;
    *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
    *(_WORD *)(a1 + 153) = *(_WORD *)((char *)a2 + 153);
    uint64_t v31 = a2[21];
    *(void *)(a1 + 160) = a2[20];
    *(void *)(a1 + 168) = v31;
    *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
    *(void *)(a1 + 192) = a2[24];
    *(_WORD *)(a1 + 200) = *((_WORD *)a2 + 100);
    *(unsigned char *)(a1 + 202) = *((unsigned char *)a2 + 202);
    *(unsigned char *)(a1 + 203) = *((unsigned char *)a2 + 203);
    *(void *)(a1 + 208) = a2[26];
    uint64_t v32 = a2[30];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32)
    {
      uint64_t v33 = a2[31];
      *(void *)(a1 + 240) = v32;
      *(void *)(a1 + 248) = v33;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v32 - 8))(a1 + 216, (uint64_t)(a2 + 27), v32);
    }
    else
    {
      long long v34 = *(_OWORD *)(a2 + 29);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 27);
      *(_OWORD *)(a1 + 232) = v34;
      *(void *)(a1 + 248) = a2[31];
    }
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))((a1 + v6 + 256) & v29, ((unint64_t)a2 + v6 + 256) & v29, v37);
    *(unsigned char *)(((a1 + v6 + 256) & v29) + v36) = *(unsigned char *)((((unint64_t)a2 + v6 + 256) & v29) + v36);
  }
  return a1;
}

uint64_t sub_1ACA75154(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

id sub_1ACA7516C(id result, char a2)
{
  if (a2 == 1) {
    return result;
  }
  return result;
}

uint64_t sub_1ACA75180(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  int v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 != 255) {
    sub_1ACA74630(*(void *)(a1 + 16), *(void *)(a1 + 24), v4);
  }
  int v5 = *(unsigned __int8 *)(a1 + 64);
  if (v5 != 255) {
    sub_1ACA74648(*(id *)(a1 + 56), v5);
  }
  int v6 = *(unsigned __int8 *)(a1 + 80);
  if (v6 != 255) {
    sub_1ACA74648(*(id *)(a1 + 72), v6);
  }
  int v7 = *(unsigned __int8 *)(a1 + 96);
  if (v7 != 255) {
    sub_1ACA74648(*(id *)(a1 + 88), v7);
  }
  int v8 = *(unsigned __int8 *)(a1 + 112);
  if (v8 != 255) {
    sub_1ACA74648(*(id *)(a1 + 104), v8);
  }
  int v9 = *(unsigned __int8 *)(a1 + 128);
  if (v9 != 255) {
    sub_1ACA74648(*(id *)(a1 + 120), v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 240)) {
    __swift_destroy_boxed_opaque_existential_0(a1 + 216);
  }
  uint64_t v10 = *(void *)(*(void *)(a2 + 16) - 8);
  int v11 = *(uint64_t (**)(unint64_t))(v10 + 8);
  unint64_t v12 = (a1 + *(unsigned __int8 *)(v10 + 80) + 256) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  return v11(v12);
}

uint64_t sub_1ACA75294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  int v7 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v7 == 255)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  }
  else
  {
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 24);
    sub_1ACA75154(v8, v9, v7);
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(unsigned char *)(a1 + 32) = v7;
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v10 = (id *)(a2 + 56);
  int v11 = *(unsigned __int8 *)(a2 + 64);
  if (v11 == 255)
  {
    *(void *)(a1 + 56) = *v10;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  }
  else
  {
    id v12 = *v10;
    sub_1ACA7516C(*v10, *(unsigned char *)(a2 + 64));
    *(void *)(a1 + 56) = v12;
    *(unsigned char *)(a1 + 64) = v11;
  }
  uint64_t v13 = (id *)(a2 + 72);
  int v14 = *(unsigned __int8 *)(a2 + 80);
  if (v14 == 255)
  {
    *(void *)(a1 + 72) = *v13;
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  }
  else
  {
    id v15 = *v13;
    sub_1ACA7516C(*v13, *(unsigned char *)(a2 + 80));
    *(void *)(a1 + 72) = v15;
    *(unsigned char *)(a1 + 80) = v14;
  }
  id v16 = (id *)(a2 + 88);
  int v17 = *(unsigned __int8 *)(a2 + 96);
  if (v17 == 255)
  {
    *(void *)(a1 + 88) = *v16;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  }
  else
  {
    id v18 = *v16;
    sub_1ACA7516C(*v16, *(unsigned char *)(a2 + 96));
    *(void *)(a1 + 88) = v18;
    *(unsigned char *)(a1 + 96) = v17;
  }
  id v19 = (id *)(a2 + 104);
  int v20 = *(unsigned __int8 *)(a2 + 112);
  if (v20 == 255)
  {
    *(void *)(a1 + 104) = *v19;
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  }
  else
  {
    id v21 = *v19;
    sub_1ACA7516C(*v19, *(unsigned char *)(a2 + 112));
    *(void *)(a1 + 104) = v21;
    *(unsigned char *)(a1 + 112) = v20;
  }
  id v22 = (id *)(a2 + 120);
  int v23 = *(unsigned __int8 *)(a2 + 128);
  if (v23 == 255)
  {
    *(void *)(a1 + 120) = *v22;
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  }
  else
  {
    id v24 = *v22;
    sub_1ACA7516C(*v22, *(unsigned char *)(a2 + 128));
    *(void *)(a1 + 120) = v24;
    *(unsigned char *)(a1 + 128) = v23;
  }
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(_WORD *)(a1 + 130) = *(_WORD *)(a2 + 130);
  uint64_t v25 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v25;
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
  uint64_t v26 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v26;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_WORD *)(a1 + 200) = *(_WORD *)(a2 + 200);
  *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
  *(unsigned char *)(a1 + 203) = *(unsigned char *)(a2 + 203);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  uint64_t v27 = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27)
  {
    uint64_t v28 = *(void *)(a2 + 248);
    *(void *)(a1 + 240) = v27;
    *(void *)(a1 + 248) = v28;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8))(a1 + 216, a2 + 216, v27);
  }
  else
  {
    long long v29 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v29;
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
  }
  uint64_t v30 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v31 = v30 + 16;
  uint64_t v32 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v33 = ((v32 | 0x100) + a1) & ~v32;
  uint64_t v34 = ((v32 | 0x100) + a2) & ~v32;
  (*(void (**)(uint64_t, uint64_t))(v30 + 16))(v33, v34);
  *(unsigned char *)(*(void *)(v31 + 48) + v33) = *(unsigned char *)(*(void *)(v31 + 48) + v34);
  return a1;
}

uint64_t sub_1ACA7559C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (long long *)(a1 + 16);
  int v7 = (long long *)(a2 + 16);
  int v8 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v8 == 255)
    {
      long long v17 = *v7;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *uint64_t v6 = v17;
    }
    else
    {
      uint64_t v14 = *(void *)(a2 + 16);
      uint64_t v15 = *(void *)(a2 + 24);
      sub_1ACA75154(v14, v15, *(unsigned char *)(a2 + 32));
      *(void *)(a1 + 16) = v14;
      *(void *)(a1 + 24) = v15;
      *(unsigned char *)(a1 + 32) = v8;
    }
  }
  else if (v8 == 255)
  {
    sub_1ACA75B3C(a1 + 16);
    char v16 = *(unsigned char *)(a2 + 32);
    *uint64_t v6 = *v7;
    *(unsigned char *)(a1 + 32) = v16;
  }
  else
  {
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    sub_1ACA75154(v9, v10, *(unsigned char *)(a2 + 32));
    uint64_t v11 = *(void *)(a1 + 16);
    uint64_t v12 = *(void *)(a1 + 24);
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    unsigned __int8 v13 = *(unsigned char *)(a1 + 32);
    *(unsigned char *)(a1 + 32) = v8;
    sub_1ACA74630(v11, v12, v13);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  id v18 = (id *)(a1 + 56);
  id v19 = (id *)(a2 + 56);
  int v20 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v20 == 255)
    {
      id v26 = *v19;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      id *v18 = v26;
    }
    else
    {
      id v24 = *v19;
      sub_1ACA7516C(*v19, *(unsigned char *)(a2 + 64));
      *(void *)(a1 + 56) = v24;
      *(unsigned char *)(a1 + 64) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_1ACA75B90(a1 + 56);
    char v25 = *(unsigned char *)(a2 + 64);
    id *v18 = *v19;
    *(unsigned char *)(a1 + 64) = v25;
  }
  else
  {
    id v21 = *v19;
    sub_1ACA7516C(*v19, *(unsigned char *)(a2 + 64));
    id v22 = *(void **)(a1 + 56);
    *(void *)(a1 + 56) = v21;
    char v23 = *(unsigned char *)(a1 + 64);
    *(unsigned char *)(a1 + 64) = v20;
    sub_1ACA74648(v22, v23);
  }
  uint64_t v27 = (id *)(a1 + 72);
  uint64_t v28 = (id *)(a2 + 72);
  int v29 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v29 == 255)
    {
      id v35 = *v28;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      id *v27 = v35;
    }
    else
    {
      id v33 = *v28;
      sub_1ACA7516C(*v28, *(unsigned char *)(a2 + 80));
      *(void *)(a1 + 72) = v33;
      *(unsigned char *)(a1 + 80) = v29;
    }
  }
  else if (v29 == 255)
  {
    sub_1ACA75B90(a1 + 72);
    char v34 = *(unsigned char *)(a2 + 80);
    id *v27 = *v28;
    *(unsigned char *)(a1 + 80) = v34;
  }
  else
  {
    id v30 = *v28;
    sub_1ACA7516C(*v28, *(unsigned char *)(a2 + 80));
    uint64_t v31 = *(void **)(a1 + 72);
    *(void *)(a1 + 72) = v30;
    char v32 = *(unsigned char *)(a1 + 80);
    *(unsigned char *)(a1 + 80) = v29;
    sub_1ACA74648(v31, v32);
  }
  uint64_t v36 = (id *)(a1 + 88);
  uint64_t v37 = (id *)(a2 + 88);
  int v38 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v38 == 255)
    {
      id v44 = *v37;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      id *v36 = v44;
    }
    else
    {
      id v42 = *v37;
      sub_1ACA7516C(*v37, *(unsigned char *)(a2 + 96));
      *(void *)(a1 + 88) = v42;
      *(unsigned char *)(a1 + 96) = v38;
    }
  }
  else if (v38 == 255)
  {
    sub_1ACA75B90(a1 + 88);
    char v43 = *(unsigned char *)(a2 + 96);
    id *v36 = *v37;
    *(unsigned char *)(a1 + 96) = v43;
  }
  else
  {
    id v39 = *v37;
    sub_1ACA7516C(*v37, *(unsigned char *)(a2 + 96));
    uint64_t v40 = *(void **)(a1 + 88);
    *(void *)(a1 + 88) = v39;
    char v41 = *(unsigned char *)(a1 + 96);
    *(unsigned char *)(a1 + 96) = v38;
    sub_1ACA74648(v40, v41);
  }
  char v45 = (id *)(a1 + 104);
  unint64_t v46 = (id *)(a2 + 104);
  int v47 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v47 == 255)
    {
      id v53 = *v46;
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      id *v45 = v53;
    }
    else
    {
      id v51 = *v46;
      sub_1ACA7516C(*v46, *(unsigned char *)(a2 + 112));
      *(void *)(a1 + 104) = v51;
      *(unsigned char *)(a1 + 112) = v47;
    }
  }
  else if (v47 == 255)
  {
    sub_1ACA75B90(a1 + 104);
    char v52 = *(unsigned char *)(a2 + 112);
    id *v45 = *v46;
    *(unsigned char *)(a1 + 112) = v52;
  }
  else
  {
    id v48 = *v46;
    sub_1ACA7516C(*v46, *(unsigned char *)(a2 + 112));
    char v49 = *(void **)(a1 + 104);
    *(void *)(a1 + 104) = v48;
    char v50 = *(unsigned char *)(a1 + 112);
    *(unsigned char *)(a1 + 112) = v47;
    sub_1ACA74648(v49, v50);
  }
  uint64_t v54 = (id *)(a1 + 120);
  uint64_t v55 = (id *)(a2 + 120);
  int v56 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v56 == 255)
    {
      id v62 = *v55;
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *uint64_t v54 = v62;
    }
    else
    {
      id v60 = *v55;
      sub_1ACA7516C(*v55, *(unsigned char *)(a2 + 128));
      *(void *)(a1 + 120) = v60;
      *(unsigned char *)(a1 + 128) = v56;
    }
  }
  else if (v56 == 255)
  {
    sub_1ACA75B90(a1 + 120);
    char v61 = *(unsigned char *)(a2 + 128);
    *uint64_t v54 = *v55;
    *(unsigned char *)(a1 + 128) = v61;
  }
  else
  {
    id v57 = *v55;
    sub_1ACA7516C(*v55, *(unsigned char *)(a2 + 128));
    unint64_t v58 = *(void **)(a1 + 120);
    *(void *)(a1 + 120) = v57;
    char v59 = *(unsigned char *)(a1 + 128);
    *(unsigned char *)(a1 + 128) = v56;
    sub_1ACA74648(v58, v59);
  }
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
  *(unsigned char *)(a1 + 131) = *(unsigned char *)(a2 + 131);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
  *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
  *(unsigned char *)(a1 + 203) = *(unsigned char *)(a2 + 203);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = *(void *)(a2 + 240);
  if (!*(void *)(a1 + 240))
  {
    if (v63)
    {
      *(void *)(a1 + 240) = v63;
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      (**(void (***)(uint64_t, uint64_t))(v63 - 8))(a1 + 216, a2 + 216);
      goto LABEL_50;
    }
LABEL_49:
    long long v64 = *(_OWORD *)(a2 + 216);
    long long v65 = *(_OWORD *)(a2 + 232);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(_OWORD *)(a1 + 216) = v64;
    *(_OWORD *)(a1 + 232) = v65;
    goto LABEL_50;
  }
  if (!v63)
  {
    __swift_destroy_boxed_opaque_existential_0(a1 + 216);
    goto LABEL_49;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 216), (uint64_t *)(a2 + 216));
LABEL_50:
  uint64_t v66 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v67 = v66 + 24;
  uint64_t v68 = *(unsigned __int8 *)(v66 + 80);
  uint64_t v69 = ((v68 | 0x100) + a1) & ~v68;
  uint64_t v70 = ((v68 | 0x100) + a2) & ~v68;
  (*(void (**)(uint64_t, uint64_t))(v66 + 24))(v69, v70);
  *(unsigned char *)(*(void *)(v67 + 40) + v69) = *(unsigned char *)(*(void *)(v67 + 40) + v70);
  return a1;
}

uint64_t sub_1ACA75B3C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACA75B90(uint64_t a1)
{
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

_OWORD *sub_1ACA75E14(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[13];
  a1[12] = a2[12];
  a1[13] = v4;
  long long v5 = a2[15];
  a1[14] = a2[14];
  a1[15] = v5;
  long long v6 = a2[9];
  a1[8] = a2[8];
  a1[9] = v6;
  long long v7 = a2[11];
  a1[10] = a2[10];
  a1[11] = v7;
  long long v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  long long v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  long long v10 = a2[1];
  *a1 = *a2;
  a1[1] = v10;
  long long v11 = a2[3];
  a1[2] = a2[2];
  a1[3] = v11;
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v13 = v12 + 32;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = ((unint64_t)a1 + (v14 | 0x100)) & ~v14;
  uint64_t v16 = ((unint64_t)a2 + (v14 | 0x100)) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v15, v16);
  *(unsigned char *)(*(void *)(v13 + 32) + v15) = *(unsigned char *)(*(void *)(v13 + 32) + v16);
  return a1;
}

uint64_t sub_1ACA75ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  long long v7 = (_OWORD *)(a2 + 16);
  int v8 = *(unsigned __int8 *)(a1 + 32);
  if (v8 != 255)
  {
    int v9 = *(unsigned __int8 *)(a2 + 32);
    if (v9 != 255)
    {
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      *(_OWORD *)(a1 + 16) = *v7;
      *(unsigned char *)(a1 + 32) = v9;
      sub_1ACA74630(v10, v11, v8);
      goto LABEL_6;
    }
    sub_1ACA75B3C(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
LABEL_6:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v12 = (void *)(a2 + 56);
  int v13 = *(unsigned __int8 *)(a1 + 64);
  if (v13 != 255)
  {
    int v14 = *(unsigned __int8 *)(a2 + 64);
    if (v14 != 255)
    {
      uint64_t v15 = *(void **)(a1 + 56);
      *(void *)(a1 + 56) = *v12;
      *(unsigned char *)(a1 + 64) = v14;
      sub_1ACA74648(v15, v13);
      goto LABEL_11;
    }
    sub_1ACA75B90(a1 + 56);
  }
  *(void *)(a1 + 56) = *v12;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
LABEL_11:
  uint64_t v16 = (void *)(a2 + 72);
  int v17 = *(unsigned __int8 *)(a1 + 80);
  if (v17 != 255)
  {
    int v18 = *(unsigned __int8 *)(a2 + 80);
    if (v18 != 255)
    {
      id v19 = *(void **)(a1 + 72);
      *(void *)(a1 + 72) = *v16;
      *(unsigned char *)(a1 + 80) = v18;
      sub_1ACA74648(v19, v17);
      goto LABEL_16;
    }
    sub_1ACA75B90(a1 + 72);
  }
  *(void *)(a1 + 72) = *v16;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
LABEL_16:
  int v20 = (void *)(a2 + 88);
  int v21 = *(unsigned __int8 *)(a1 + 96);
  if (v21 != 255)
  {
    int v22 = *(unsigned __int8 *)(a2 + 96);
    if (v22 != 255)
    {
      char v23 = *(void **)(a1 + 88);
      *(void *)(a1 + 88) = *v20;
      *(unsigned char *)(a1 + 96) = v22;
      sub_1ACA74648(v23, v21);
      goto LABEL_21;
    }
    sub_1ACA75B90(a1 + 88);
  }
  *(void *)(a1 + 88) = *v20;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
LABEL_21:
  id v24 = (void *)(a2 + 104);
  int v25 = *(unsigned __int8 *)(a1 + 112);
  if (v25 != 255)
  {
    int v26 = *(unsigned __int8 *)(a2 + 112);
    if (v26 != 255)
    {
      uint64_t v27 = *(void **)(a1 + 104);
      *(void *)(a1 + 104) = *v24;
      *(unsigned char *)(a1 + 112) = v26;
      sub_1ACA74648(v27, v25);
      goto LABEL_26;
    }
    sub_1ACA75B90(a1 + 104);
  }
  *(void *)(a1 + 104) = *v24;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
LABEL_26:
  uint64_t v28 = (void *)(a2 + 120);
  int v29 = *(unsigned __int8 *)(a1 + 128);
  if (v29 != 255)
  {
    int v30 = *(unsigned __int8 *)(a2 + 128);
    if (v30 != 255)
    {
      uint64_t v31 = *(void **)(a1 + 120);
      *(void *)(a1 + 120) = *v28;
      *(unsigned char *)(a1 + 128) = v30;
      sub_1ACA74648(v31, v29);
      goto LABEL_31;
    }
    sub_1ACA75B90(a1 + 120);
  }
  *(void *)(a1 + 120) = *v28;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
LABEL_31:
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(_WORD *)(a1 + 130) = *(_WORD *)(a2 + 130);
  uint64_t v32 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v32;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  uint64_t v33 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v33;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
  *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
  *(unsigned char *)(a1 + 203) = *(unsigned char *)(a2 + 203);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 240)) {
    __swift_destroy_boxed_opaque_existential_0(a1 + 216);
  }
  long long v34 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v34;
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  uint64_t v35 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v36 = v35 + 40;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = ((v37 | 0x100) + a1) & ~v37;
  uint64_t v39 = ((v37 | 0x100) + a2) & ~v37;
  (*(void (**)(uint64_t, uint64_t))(v35 + 40))(v38, v39);
  *(unsigned char *)(*(void *)(v36 + 24) + v38) = *(unsigned char *)(*(void *)(v36 + 24) + v39);
  return a1;
}

uint64_t sub_1ACA76214(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = v6 + 257;
  char v10 = 8 * (v6 + 1);
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1
      }
                                                                      + *(unsigned __int8 *)(v4 + 80)
                                                                      + 256) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1ACA763AC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 257;
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) != -257)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1ACA76648);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 256] & ~v9;
          id v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *((void *)a1 + 31) = 0;
          *(_OWORD *)(a1 + 232) = 0u;
          *(_OWORD *)(a1 + 216) = 0u;
          *(_OWORD *)(a1 + 200) = 0u;
          *(_OWORD *)(a1 + 184) = 0u;
          *(_OWORD *)(a1 + 168) = 0u;
          *(_OWORD *)(a1 + 152) = 0u;
          *(_OWORD *)(a1 + 136) = 0u;
          *(_OWORD *)(a1 + 120) = 0u;
          *(_OWORD *)(a1 + 104) = 0u;
          *(_OWORD *)(a1 + 88) = 0u;
          *(_OWORD *)(a1 + 72) = 0u;
          *(_OWORD *)(a1 + 56) = 0u;
          *(_OWORD *)(a1 + 40) = 0u;
          *(_OWORD *)(a1 + 24) = 0u;
          *(_OWORD *)(a1 + 8) = 0u;
          *(void *)a1 = a2 ^ 0x80000000;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

unint64_t *initializeBufferWithCopyOfBuffer for AlignmentCoordinatorError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1ACA766A4(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_1ACA766A4(unint64_t result)
{
  if (result >> 62)
  {
    if (result >> 62 != 1) {
      return result;
    }
    result &= 0x3FFFFFFFFFFFFFFFuLL;
  }
  return (unint64_t)(id)result;
}

void destroy for AlignmentCoordinatorError(unint64_t *a1)
{
}

void sub_1ACA766C8(unint64_t a1)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 != 1) {
      return;
    }
    a1 &= 0x3FFFFFFFFFFFFFFFuLL;
  }
}

unint64_t *assignWithCopy for AlignmentCoordinatorError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1ACA766A4(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_1ACA766C8(v4);
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for AlignmentCoordinatorError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_1ACA766C8(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for AlignmentCoordinatorError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AlignmentCoordinatorError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)uint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1ACA7680C(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *sub_1ACA76828(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_1ACA76838(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for AlignmentCoordinatorError()
{
  return &type metadata for AlignmentCoordinatorError;
}

uint64_t dispatch thunk of AlignmentCoordinator.align(asset:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of AlignmentCoordinator.fetchPlayerTimestamp(for:)(uint64_t a1, uint64_t a2, double a3)
{
  size_t v10 = (uint64_t (*)(uint64_t, uint64_t, __n128))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  unsigned int v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unsigned int v7 = v3;
  v7[1] = sub_1ACA7699C;
  v8.n128_f64[0] = a3;
  return v10(a1, a2, v8);
}

uint64_t sub_1ACA7699C(double a1)
{
  uint64_t v6 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(__n128))(v6 + 8);
  v4.n128_f64[0] = a1;
  return v3(v4);
}

uint64_t ContentMode.rawValue.getter(uint64_t result)
{
  return result;
}

unint64_t sub_1ACA76AA8@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s18PodcastsFoundation11ContentModeO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1ACA76AD4(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1ACA76AE0()
{
  return sub_1ACE76528();
}

uint64_t sub_1ACA76B40()
{
  return sub_1ACE764E8();
}

unint64_t _s18PodcastsFoundation11ContentModeO8rawValueACSgSi_tcfC_0(unint64_t result)
{
  if (result >= 0xD) {
    return 13;
  }
  return result;
}

unint64_t sub_1ACA76BA4()
{
  unint64_t result = qword_1E99F0FE0;
  if (!qword_1E99F0FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0FE0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContentMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ContentMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACA76D54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentMode()
{
  return &type metadata for ContentMode;
}

unint64_t sub_1ACA76D8C()
{
  unint64_t result = qword_1EB770EE0;
  if (!qword_1EB770EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770EE0);
  }
  return result;
}

uint64_t sub_1ACA76DE0()
{
  sub_1ACA76F34(*(void *)(v0 + 16));
  sub_1ACA76F34(*(void *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FairPlayKeySessionProvidingMock()
{
  return self;
}

uint64_t sub_1ACA76E44(uint64_t a1)
{
  int v2 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 16);
  if (v2)
  {
    swift_retain();
    uint64_t v1 = v2(a1);
    sub_1ACA76F34((uint64_t)v2);
  }
  else
  {
    sub_1ACA76EE0();
    swift_allocError();
    swift_willThrow();
  }
  return v1;
}

unint64_t sub_1ACA76EE0()
{
  unint64_t result = qword_1E99F0FE8;
  if (!qword_1E99F0FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0FE8);
  }
  return result;
}

uint64_t sub_1ACA76F34(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FairPlayKeySessionProvidingMockError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACA76FE0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FairPlayKeySessionProvidingMockError()
{
  return &type metadata for FairPlayKeySessionProvidingMockError;
}

unint64_t sub_1ACA7701C()
{
  unint64_t result = qword_1E99F0FF0;
  if (!qword_1E99F0FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F0FF0);
  }
  return result;
}

uint64_t InMemoryStateStore.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  InMemoryStateStore.init()();
  return v0;
}

void *InMemoryStateStore.init()()
{
  uint64_t v1 = v0;
  sub_1ACB4FDE8();
  type metadata accessor for InMemoryStateCache();
  uint64_t v2 = sub_1ACC727FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1[2] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0FF8);
  swift_allocObject();
  v1[3] = sub_1ACE758B8();
  swift_allocObject();
  v1[4] = sub_1ACE758B8();
  return v1;
}

uint64_t InMemoryStateStore.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t InMemoryStateStore.__deallocating_deinit()
{
  InMemoryStateStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t InMemoryStateStore.stateUpdates.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
  return swift_retain();
}

uint64_t InMemoryStateStore.consolidatedStateUpdates.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
  return swift_retain();
}

void InMemoryStateStore.state(for:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[2];
  v4[2] = *(void *)(*v1 + 80);
  v4[3] = *(void *)(v2 + 88);
  v4[4] = a1;
  type metadata accessor for InMemoryStateCache();
  sub_1ACE76FD8();
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACA798A0, (uint64_t)v4, v3);
}

uint64_t InMemoryStateStore.allAdamIDs<>(forConsolidatedState:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[2];
  uint64_t v5[2] = *(void *)(*v1 + 80);
  v5[3] = *(void *)(v2 + 88);
  void v5[4] = a1;
  type metadata accessor for InMemoryStateCache();
  __swift_instantiateConcreteTypeFromMangledName(qword_1E99F1000);
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACA798D8, (uint64_t)v5, v3);
  return v5[7];
}

uint64_t sub_1ACA77380@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  uint64_t v16 = a1;
  void v12[6] = a2;
  v12[7] = a3;
  unsigned __int8 v12[8] = sub_1ACA79B50;
  v12[9] = &v13;
  sub_1ACA798F8();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1ACE76068();
  _OWORD v12[2] = a2;
  uint64_t v12[3] = a3;
  uint64_t v7 = sub_1ACE76088();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v10 = sub_1ACB4AA30((void (*)(char *, char *))sub_1ACA79BA8, (uint64_t)v12, v7, (uint64_t)&type metadata for AdamID, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v9);
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v10;
  return result;
}

uint64_t sub_1ACA774D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v7 = MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = *(int *)(v7 + 56);
  uint64_t v11 = &v9[v10];
  unsigned int v12 = (char *)a1 + v10;
  uint64_t v13 = *a1;
  *(void *)uint64_t v9 = v13;
  uint64_t v14 = *(void *)(a2 - 8);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(&v9[v10], v12, a2);
  *a3 = v13;
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v11, a2);
}

Swift::Void __swiftcall InMemoryStateStore.register(remoteStates:)(Swift::OpaquePointer remoteStates)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *v1;
  rawValue = remoteStates._rawValue;
  unsigned int v6 = *(void **)(v4 + 80);
  sub_1ACA798F8();
  uint64_t v7 = sub_1ACE76088();
  uint64_t WitnessTable = swift_getWitnessTable();
  if (Collection.isNotEmpty.getter())
  {
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1ACE754C8();
    __swift_project_value_buffer(v9, (uint64_t)qword_1E99F2BF8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1ACE75498();
    os_log_type_t v11 = sub_1ACE76BC8();
    int v12 = v11;
    if (os_log_type_enabled(v10, v11))
    {
      int v31 = v12;
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = (void *)swift_slowAlloc();
      int v30 = v14;
      v28[0] = v28;
      rawValue = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      v28[1] = v13 + 4;
      int v29 = v13;
      uint64_t v32 = (uint64_t)remoteStates._rawValue;
      MEMORY[0x1F4188790](v14);
      uint64_t v15 = *(void *)(v5 + 88);
      int v26 = v6;
      uint64_t v27 = v15;
      sub_1ACB4AA30((void (*)(char *, char *))sub_1ACA7996C, (uint64_t)v25, v7, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v16);
      uint64_t v17 = MEMORY[0x1AD118740]();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();
      uint64_t v32 = sub_1ACA3189C(v17, v19, (uint64_t *)&rawValue);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v20 = v29;
      _os_log_impl(&dword_1AC9D5000, v10, (os_log_type_t)v31, "Registering remote states: %s", v29, 0xCu);
      int v21 = v30;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v21, -1, -1);
      MEMORY[0x1AD11B340](v20, -1, -1);
    }
    else
    {

      uint64_t v22 = swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(v5 + 88);
    }
    uint64_t v23 = v2[2];
    MEMORY[0x1F4188790](v22);
    v25[0] = v6;
    v25[1] = v15;
    int v26 = remoteStates._rawValue;
    type metadata accessor for InMemoryStateCache();
    __swift_instantiateConcreteTypeFromMangledName(qword_1E99F1000);
    sub_1ACC723D4((void (*)(uint64_t))sub_1ACA7994C, (uint64_t)&v24, v23);
    sub_1ACE75898();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACA77978@<X0>(void *a1@<X8>)
{
  sub_1ACA55E4C();
  sub_1ACE770B8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  swift_getTupleTypeMetadata2();
  uint64_t result = sub_1ACE77808();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1ACA77A48@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v88 = a4;
  uint64_t v106 = a1;
  int v81 = a5;
  uint64_t v7 = sub_1ACE76FD8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  unint64_t v113 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v10 = (char *)&v77 - v9;
  uint64_t v11 = *(void *)(v7 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v8);
  uint64_t v83 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v77 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  unint64_t v19 = (char *)&v77 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  unint64_t v115 = (char *)&v77 - v21;
  uint64_t v22 = *(void *)(a3 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  int v87 = (char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  unint64_t v114 = (char *)&v77 - v25;
  uint64_t v26 = swift_getTupleTypeMetadata2();
  uint64_t v104 = sub_1ACE76FD8();
  uint64_t v27 = MEMORY[0x1F4188790](v104);
  int64_t v108 = (char *)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v107 = (char *)&v77 - v30;
  uint64_t v31 = *(void *)(a2 + 64);
  uint64_t v85 = a2 + 64;
  uint64_t v32 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v33 = -1;
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  uint64_t v116 = v33 & v31;
  unint64_t v34 = (unint64_t)(v32 + 63) >> 6;
  uint64_t v112 = (void (**)(char *, char *, uint64_t))(v22 + 16);
  char v102 = (void (**)(uint64_t *, char *, uint64_t))(v29 + 32);
  uint64_t v103 = v26 - 8;
  unint64_t v110 = (void (**)(char *, char *, uint64_t))(v22 + 32);
  long long v105 = (void (**)(char *, void, uint64_t, uint64_t))(v22 + 56);
  uint64_t v94 = (void (**)(char *, char *, uint64_t))(v11 + 16);
  int64_t v111 = (uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  uint64_t v91 = v22;
  uint64_t v100 = (void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v35 = v26;
  uint64_t v93 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v80 = (void (**)(char *, uint64_t))(v113 + 8);
  unint64_t v78 = v34 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v37 = 0;
  int64_t v86 = v34;
  unint64_t v79 = v34 - 4;
  uint64_t v92 = a2;
  uint64_t v82 = a2 + 96;
  uint64_t v84 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v90 = v16;
  uint64_t v95 = v26;
  uint64_t v89 = v19;
LABEL_4:
  uint64_t v39 = (uint64_t *)v107;
  uint64_t v38 = v108;
  unint64_t v40 = v116;
  while (1)
  {
    if (v40)
    {
      uint64_t v116 = (v40 - 1) & v40;
      unint64_t v113 = v37;
      unint64_t v45 = __clz(__rbit64(v40)) | (v37 << 6);
      goto LABEL_10;
    }
    int64_t v66 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v66 >= v86)
    {
      unint64_t v113 = v37;
      uint64_t v116 = 0;
      uint64_t v47 = 1;
    }
    else
    {
      unint64_t v67 = *(void *)(v85 + 8 * v66);
      if (v67) {
        goto LABEL_19;
      }
      if ((uint64_t)(v37 + 2) >= v86)
      {
        uint64_t v116 = 0;
        uint64_t v47 = 1;
        unint64_t v113 = v37 + 1;
      }
      else
      {
        unint64_t v67 = *(void *)(v85 + 8 * (v37 + 2));
        if (v67)
        {
          int64_t v66 = v37 + 2;
LABEL_19:
          uint64_t v116 = (v67 - 1) & v67;
          unint64_t v45 = __clz(__rbit64(v67)) + (v66 << 6);
          unint64_t v113 = v66;
LABEL_10:
          uint64_t v46 = *(void *)(v92 + 56);
          *(void *)uint64_t v38 = *(void *)(*(void *)(v92 + 48) + 8 * v45);
          (*(void (**)(char *, unint64_t, uint64_t))(v91 + 16))(&v38[*(int *)(v35 + 48)], v46 + *(void *)(v91 + 72) * v45, a3);
          uint64_t v47 = 0;
          goto LABEL_11;
        }
        int64_t v66 = v37 + 3;
        if ((uint64_t)(v37 + 3) >= v86)
        {
          uint64_t v116 = 0;
          uint64_t v47 = 1;
          unint64_t v113 = v37 + 2;
        }
        else
        {
          unint64_t v67 = *(void *)(v85 + 8 * v66);
          if (v67) {
            goto LABEL_19;
          }
          while (v79 != v37)
          {
            unint64_t v67 = *(void *)(v82 + 8 * v37++);
            if (v67)
            {
              int64_t v66 = v37 + 3;
              goto LABEL_19;
            }
          }
          uint64_t v116 = 0;
          uint64_t v47 = 1;
          unint64_t v113 = v78;
        }
      }
    }
LABEL_11:
    uint64_t v48 = *(void *)(v35 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v38, v47, 1, v35);
    (*v102)(v39, v38, v104);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v48 + 48))(v39, 1, v35) == 1)
    {
      uint64_t result = swift_release();
      void *v81 = v84;
      return result;
    }
    uint64_t v49 = *v39;
    char v50 = (char *)v39 + *(int *)(v35 + 48);
    id v51 = v114;
    uint64_t v109 = *v110;
    v109(v114, v50, a3);
    uint64_t v52 = *v106;
    uint64_t v99 = v49;
    uint64_t v117 = v49;
    unint64_t v53 = sub_1ACA798F8();
    uint64_t v54 = v115;
    unint64_t v98 = v53;
    MEMORY[0x1AD118260](&v117, v52, &type metadata for AdamID, a3);
    uint64_t v96 = *v112;
    v96(v19, v51, a3);
    uint64_t v97 = *v105;
    v97(v19, 0, 1, a3);
    uint64_t v55 = &v10[*(int *)(TupleTypeMetadata2 + 48)];
    int v56 = v10;
    uint64_t v57 = v7;
    unint64_t v58 = *v94;
    (*v94)(v56, v54, v57);
    v58(v55, v19, v57);
    char v59 = *v111;
    if ((*v111)(v56, 1, a3) == 1)
    {
      char v41 = *v93;
      (*v93)(v19, v57);
      v41(v115, v57);
      int v42 = v59(v55, 1, a3);
      uint64_t v43 = v57;
      if (v42 != 1) {
        goto LABEL_33;
      }
      uint64_t v10 = v56;
      v41(v56, v43);
      id v44 = *v100;
      uint64_t v39 = (uint64_t *)v107;
      uint64_t v38 = v108;
      uint64_t v7 = v43;
    }
    else
    {
      uint64_t v60 = a3;
      char v61 = v90;
      v58(v90, v56, v57);
      if (v59(v55, 1, a3) == 1)
      {
        uint64_t v68 = *v93;
        uint64_t v69 = v89;
        (*v93)(v89, v57);
        v68(v115, v57);
        uint64_t v70 = v61;
        unint64_t v19 = v69;
        (*v100)(v70, v60);
        uint64_t v43 = v57;
        a3 = v60;
LABEL_33:
        uint64_t v10 = v56;
        (*v80)(v56, TupleTypeMetadata2);
        uint64_t v7 = v43;
LABEL_34:
        uint64_t v71 = v84;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v71 = sub_1ACA41D90(0, v71[2] + 1, 1, v71);
        }
        unint64_t v73 = v71[2];
        unint64_t v72 = v71[3];
        uint64_t v35 = v95;
        if (v73 >= v72 >> 1) {
          uint64_t v71 = sub_1ACA41D90((void *)(v72 > 1), v73 + 1, 1, v71);
        }
        v71[2] = v73 + 1;
        uint64_t v84 = v71;
        uint64_t v74 = v99;
        v71[v73 + 4] = v99;
        uint64_t v75 = v83;
        uint64_t v76 = v114;
        v96(v83, v114, a3);
        v97(v75, 0, 1, a3);
        uint64_t v117 = v74;
        sub_1ACE76088();
        sub_1ACE760B8();
        uint64_t result = ((uint64_t (*)(char *, uint64_t))*v100)(v76, a3);
        unint64_t v37 = v113;
        goto LABEL_4;
      }
      id v62 = v87;
      v109(v87, v55, a3);
      LODWORD(v109) = sub_1ACE76168();
      id v44 = *v100;
      (*v100)(v62, a3);
      uint64_t v63 = *v93;
      long long v64 = v89;
      (*v93)(v89, v57);
      v63(v115, v57);
      long long v65 = v61;
      unint64_t v19 = v64;
      v44(v65, a3);
      v63(v56, v57);
      uint64_t v7 = v57;
      uint64_t v10 = v56;
      uint64_t v39 = (uint64_t *)v107;
      uint64_t v38 = v108;
      if ((v109 & 1) == 0) {
        goto LABEL_34;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v44)(v114, a3);
    uint64_t v35 = v95;
    unint64_t v40 = v116;
    unint64_t v37 = v113;
  }
  __break(1u);
  return result;
}

uint64_t InMemoryStateStore.registerInFlightStateChangeRequest(for:to:requestID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3[2];
  uint64_t v6 = *v3;
  _DWORD v8[2] = *(void *)(*v3 + 80);
  v8[3] = *(void *)(v6 + 88);
  v8[4] = a1;
  v8[5] = a2;
  v8[6] = a3;
  type metadata accessor for InMemoryStateCache();
  sub_1ACC723D4(sub_1ACA7998C, (uint64_t)v8, v5);
  v8[8] = a1;
  return sub_1ACE75898();
}

void sub_1ACA7864C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    uint64_t v8 = type metadata accessor for InMemoryStateCache();
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v4; ++i)
    {
      uint64_t v10 = *(void *)(a2 + 8 * i + 32);
      sub_1ACB50838(v10, a3, a4, v8);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t InMemoryStateStore.didSucceedInFlightRequest(for:requestID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = v2[2];
  _DWORD v7[2] = *(void *)(*v2 + 80);
  v7[3] = *(void *)(v4 + 88);
  v7[4] = a1;
  v7[5] = a2;
  type metadata accessor for InMemoryStateCache();
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACA799B0, (uint64_t)v7, v5);
  v7[6] = a1;
  return sub_1ACE75898();
}

uint64_t sub_1ACA787A8(uint64_t a1, uint64_t a2, void (**a3)(char *, void), void (**a4)(char *, void), void (**a5)(char *, void))
{
  uint64_t v54 = a3;
  uint64_t v55 = a5;
  uint64_t v9 = sub_1ACE76FD8();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v49 = (char *)&v41 - v10;
  sub_1ACE75118();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v48 = (char *)&v41 - v14;
  uint64_t v15 = (uint64_t)*(a4 - 1);
  uint64_t result = MEMORY[0x1F4188790](v13);
  unint64_t v53 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a2 + 16);
  if (v19)
  {
    uint64_t v57 = v5;
    uint64_t v46 = v17;
    uint64_t v47 = a1;
    uint64_t v20 = (void *)(a1 + 8);
    uint64_t v21 = sub_1ACE76688();
    unint64_t v22 = sub_1ACA798F8();
    id v44 = (void (**)(char *, uint64_t))(v12 + 8);
    unint64_t v45 = (void (**)(char *, char *, void (**)(char *, void)))(v15 + 16);
    uint64_t v43 = (void (**)(char *, void, uint64_t, void (**)(char *, void)))(v15 + 56);
    char v41 = (void (**)(char *, void))(v15 + 8);
    uint64_t v23 = v21;
    uint64_t v24 = v20;
    swift_bridgeObjectRetain();
    uint64_t v25 = 0;
    char v50 = v24;
    uint64_t v51 = a2;
    uint64_t v42 = v19;
    unint64_t v52 = v22;
    uint64_t v58 = v21;
    while (1)
    {
      uint64_t v26 = *v24;
      uint64_t v56 = *(void *)(a2 + 8 * v25 + 32);
      uint64_t v62 = v56;
      uint64_t v27 = MEMORY[0x1AD118260](&v59, &v62, v26, &type metadata for AdamID, v23, v22);
      if (v59)
      {
        uint64_t v62 = v59;
        uint64_t v61 = v59;
        MEMORY[0x1F4188790](v27);
        uint64_t v28 = v55;
        *(&v41 - 4) = a4;
        *(&v41 - 3) = v28;
        *(&v41 - 2) = v54;
        swift_bridgeObjectRetain_n();
        swift_getWitnessTable();
        uint64_t v29 = v57;
        uint64_t v23 = v58;
        sub_1ACE76AB8();
        uint64_t v57 = v29;
        swift_bridgeObjectRelease();
        if (v60)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v24 = v50;
          a2 = v51;
          unint64_t v22 = v52;
        }
        else
        {
          uint64_t v30 = v59;
          uint64_t v31 = a4;
          uint64_t v32 = v53;
          uint64_t v33 = v48;
          uint64_t v34 = v46;
          sub_1ACE766B8();
          uint64_t v35 = *v45;
          (*v45)(v32, &v33[*(int *)(v34 + 48)], v31);
          uint64_t v36 = v33;
          unint64_t v37 = v32;
          a4 = v31;
          (*v44)(v36, v34);
          uint64_t v38 = v49;
          v35(v49, v37, v31);
          (*v43)(v38, 0, 1, v31);
          uint64_t v39 = v56;
          uint64_t v59 = v56;
          unint64_t v22 = v52;
          sub_1ACE76088();
          sub_1ACE760B8();
          uint64_t result = swift_bridgeObjectRelease();
          if (v30 < 0)
          {
            __break(1u);
            return result;
          }
          uint64_t v59 = 0;
          uint64_t v60 = v30;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F10A0);
          uint64_t v40 = v58;
          swift_getWitnessTable();
          sub_1ACA51EA4(&qword_1E99F10A8, &qword_1E99F10A0);
          uint64_t v23 = v40;
          sub_1ACE76B18();
          uint64_t v59 = v62;
          uint64_t v61 = v39;
          sub_1ACE76088();
          uint64_t v24 = v50;
          sub_1ACE760B8();
          (*v41)(v53, a4);
          a2 = v51;
          uint64_t v19 = v42;
        }
      }
      if (v19 == ++v25) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void InMemoryStateStore.didFailInFlightRequest(for:requestID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = v2[2];
  uint64_t v5[2] = *(void *)(*v2 + 80);
  v5[3] = *(void *)(v3 + 88);
  void v5[4] = a1;
  v5[5] = a2;
  type metadata accessor for InMemoryStateCache();
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACA799D0, (uint64_t)v5, v4);
}

uint64_t sub_1ACA78D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v30 = a3;
  uint64_t v31 = a5;
  uint64_t v8 = sub_1ACE75118();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t result = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v25 = (char *)v22 - v12;
  uint64_t v32 = *(void *)(a2 + 16);
  if (v32)
  {
    uint64_t v13 = (void *)(a1 + 8);
    uint64_t v23 = v11;
    uint64_t v14 = sub_1ACE76688();
    unint64_t v15 = sub_1ACA798F8();
    uint64_t v29 = a4;
    uint64_t v24 = v8;
    v22[1] = v8 - 8;
    void v22[2] = a4 - 8;
    swift_bridgeObjectRetain();
    uint64_t v16 = 0;
    uint64_t v27 = v13;
    uint64_t v28 = a2;
    unint64_t v26 = v15;
    do
    {
      uint64_t v17 = *(void *)(a2 + 8 * v16 + 32);
      uint64_t v18 = *v13;
      uint64_t v36 = v17;
      MEMORY[0x1AD118260](&v34, &v36, v18, &type metadata for AdamID, v14, v15);
      if (v34)
      {
        uint64_t v36 = v34;
        uint64_t v33 = v34;
        MEMORY[0x1F4188790](v34);
        uint64_t v19 = v29;
        uint64_t v20 = v31;
        v22[-4] = v29;
        v22[-3] = v20;
        v22[-2] = v30;
        swift_bridgeObjectRetain();
        swift_getWitnessTable();
        sub_1ACE76AB8();
        swift_bridgeObjectRelease();
        if (v35)
        {
          swift_bridgeObjectRelease();
          uint64_t v13 = v27;
          a2 = v28;
          unint64_t v15 = v26;
        }
        else
        {
          uint64_t v21 = v25;
          sub_1ACE76658();
          (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(&v21[*(int *)(v23 + 48)], v19);
          (*(void (**)(char *))(*(void *)(v24 - 8) + 8))(v21);
          uint64_t v33 = v17;
          uint64_t v34 = v36;
          unint64_t v15 = v26;
          sub_1ACE76088();
          uint64_t v13 = v27;
          sub_1ACE760B8();
          a2 = v28;
        }
      }
      ++v16;
    }
    while (v32 != v16);
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall InMemoryStateStore.overrideAllState(withSnapshot:isInitialFetch:)(Swift::OpaquePointer withSnapshot, Swift::Bool isInitialFetch)
{
  uint64_t v4 = *v2;
  uint64_t v5 = v2[2];
  _DWORD v7[2] = *(void *)(v4 + 80);
  v7[3] = *(void *)(v4 + 88);
  v7[4] = withSnapshot._rawValue;
  type metadata accessor for InMemoryStateCache();
  __swift_instantiateConcreteTypeFromMangledName(qword_1E99F1000);
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACA799F0, (uint64_t)v7, v5);
  uint64_t v6 = v8;
  sub_1ACE75898();
  if (!isInitialFetch)
  {
    uint64_t v8 = v6;
    sub_1ACE75898();
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_1ACA79124@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v11 = MEMORY[0x1E4FBC860];
  __swift_instantiateConcreteTypeFromMangledName(qword_1E99F1000);
  uint64_t v5 = *a1;
  sub_1ACA798F8();
  nullsub_1(v5);
  sub_1ACE76048();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1ACE76A48();
  nullsub_1(a2);
  sub_1ACE769B8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1090);
  sub_1ACA51EA4(&qword_1E99F1098, qword_1E99F1000);
  swift_getWitnessTable();
  sub_1ACE76B28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1ACE76068();
  nullsub_1(v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1ACE76B28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = a2;
  *a3 = v11;
  return result;
}

uint64_t sub_1ACA793D0(uint64_t a1, char *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v47 = a5;
  unint64_t v53 = a2;
  uint64_t v8 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v46 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE76FD8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v48 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v14 = (char *)&v45 - v13;
  uint64_t v15 = *(void *)(v10 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v12);
  unint64_t v52 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v45 - v19;
  MEMORY[0x1F4188790](v18);
  unint64_t v22 = (char *)&v45 - v21;
  uint64_t v23 = *a3;
  uint64_t v54 = a1;
  unint64_t v24 = sub_1ACA798F8();
  MEMORY[0x1AD118260](&v54, v23, &type metadata for AdamID, a4, v24);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v20, v53, a4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v20, 0, 1, a4);
  uint64_t v50 = TupleTypeMetadata2;
  uint64_t v25 = &v14[*(int *)(TupleTypeMetadata2 + 48)];
  unint64_t v26 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v26(v14, v22, v10);
  uint64_t v51 = v25;
  v26(v25, v20, v10);
  uint64_t v49 = v8;
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  unint64_t v53 = v14;
  if (v27(v14, 1, a4) != 1)
  {
    uint64_t v31 = v10;
    v26(v52, v53, v10);
    uint64_t v32 = v51;
    int v33 = v27(v51, 1, a4);
    uint64_t v34 = v49;
    char v35 = (void (**)(char *, uint64_t))(v49 + 8);
    if (v33 != 1)
    {
      unint64_t v37 = v46;
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v32, a4);
      uint64_t v38 = v52;
      uint64_t v39 = v31;
      uint64_t v40 = a4;
      char v41 = sub_1ACE76168();
      uint64_t v42 = *(void (**)(char *, uint64_t))(v34 + 8);
      v42(v37, v40);
      uint64_t v43 = *(void (**)(char *, uint64_t))(v15 + 8);
      v43(v20, v39);
      v43(v22, v39);
      v42(v38, v40);
      v43(v53, v39);
      char v30 = v41 ^ 1;
      return v30 & 1;
    }
    uint64_t v28 = v53;
    uint64_t v36 = *(void (**)(char *, uint64_t))(v15 + 8);
    v36(v20, v31);
    v36(v22, v31);
    (*v35)(v52, a4);
    goto LABEL_6;
  }
  uint64_t v28 = v53;
  uint64_t v29 = *(void (**)(char *, uint64_t))(v15 + 8);
  v29(v20, v10);
  v29(v22, v10);
  if (v27(v51, 1, a4) != 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v48 + 8))(v28, v50);
    char v30 = 1;
    return v30 & 1;
  }
  v29(v28, v10);
  char v30 = 0;
  return v30 & 1;
}

uint64_t sub_1ACA798A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACB4FECC(*(void *)(v2 + 32), *a1, a1[1], *(void *)(v2 + 16), a2);
}

uint64_t sub_1ACA798D8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACA77380(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_1ACA798F8()
{
  unint64_t result = qword_1EB76A538;
  if (!qword_1EB76A538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A538);
  }
  return result;
}

uint64_t sub_1ACA7994C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1ACA77A48(a1, v2[4], v2[2], v2[3], a2);
}

uint64_t sub_1ACA7996C@<X0>(void *a1@<X8>)
{
  return sub_1ACA77978(a1);
}

void sub_1ACA7998C(uint64_t a1)
{
  sub_1ACA7864C(a1, v1[4], v1[5], v1[6]);
}

uint64_t sub_1ACA799B0(uint64_t a1)
{
  return sub_1ACA787A8(a1, *(void *)(v1 + 32), *(void (***)(char *, void))(v1 + 40), *(void (***)(char *, void))(v1 + 16), *(void (***)(char *, void))(v1 + 24));
}

uint64_t sub_1ACA799D0(uint64_t a1)
{
  return sub_1ACA78D5C(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_1ACA799F0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1ACA79124(a1, *(void *)(v2 + 32), a2);
}

uint64_t sub_1ACA79A10()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for InMemoryStateStore()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for InMemoryStateStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InMemoryStateStore);
}

uint64_t dispatch thunk of InMemoryStateStore.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1ACA79AA0()
{
  return sub_1ACA51EA4((unint64_t *)&qword_1E99F1088, &qword_1E99F0FF8);
}

uint64_t sub_1ACA79ADC(uint64_t a1, char *a2)
{
  return sub_1ACA793D0(a1, a2, *(uint64_t **)(v2 + 32), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1ACA79AE8(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 32))(*a1) & 1;
}

uint64_t sub_1ACA79B20()
{
  return sub_1ACE750E8() & 1;
}

uint64_t sub_1ACA79B50()
{
  return sub_1ACE76168() & 1;
}

uint64_t sub_1ACA79B84(void *a1, uint64_t a2)
{
  return sub_1ACB6C9C4(a1, a2, *(uint64_t (**)(void))(v2 + 32)) & 1;
}

uint64_t sub_1ACA79BA8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1ACA774D4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1ACA79BC8()
{
  return sub_1ACA79B20() & 1;
}

uint64_t Sequence.uniqued<A>(by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = sub_1ACE75FB8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v11, v4, a2);
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v17 = a4;
  uint64_t v18 = a1;
  uint64_t v19 = &v20;
  uint64_t v12 = sub_1ACE76418();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1ACA79D4C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(*MEMORY[0x1E4FBC5F0] + *a2 + 8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v15 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v15 - v10;
  swift_getAtKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v11, v2);
  sub_1ACE76A38();
  char v12 = sub_1ACE76A08();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v9, v2);
  v13(v11, v2);
  return v12 & 1;
}

uint64_t sub_1ACA79EF4(uint64_t a1)
{
  return sub_1ACA79D4C(a1, *(void **)(v1 + 40)) & 1;
}

PodcastsFoundation::PodcastsSettingsDeepLinkURLs_optional __swiftcall PodcastsSettingsDeepLinkURLs.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1ACE775B8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t PodcastsSettingsDeepLinkURLs.rawValue.getter()
{
  unint64_t result = 0xD000000000000040;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000053;
      break;
    case 2:
      unint64_t result = 0xD000000000000048;
      break;
    case 3:
      unint64_t result = 0xD000000000000049;
      break;
    case 4:
      unint64_t result = 0xD000000000000055;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACA7A010(unsigned __int8 *a1, char *a2)
{
  return sub_1ACCF7654(*a1, *a2);
}

unint64_t sub_1ACA7A020()
{
  unint64_t result = qword_1E99F10B0;
  if (!qword_1E99F10B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F10B0);
  }
  return result;
}

uint64_t sub_1ACA7A074()
{
  return sub_1ACAE568C();
}

uint64_t sub_1ACA7A07C()
{
  return sub_1ACBD5844();
}

uint64_t sub_1ACA7A084()
{
  return sub_1ACD23BE8();
}

PodcastsFoundation::PodcastsSettingsDeepLinkURLs_optional sub_1ACA7A08C(Swift::String *a1)
{
  return PodcastsSettingsDeepLinkURLs.init(rawValue:)(*a1);
}

unint64_t sub_1ACA7A098@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PodcastsSettingsDeepLinkURLs.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for PodcastsSettingsDeepLinkURLs(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PodcastsSettingsDeepLinkURLs(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACA7A21CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsSettingsDeepLinkURLs()
{
  return &type metadata for PodcastsSettingsDeepLinkURLs;
}

uint64_t sub_1ACA7A29C()
{
  uint64_t v1 = v0 + OBJC_IVAR___MTPartialFeedRequest_limit;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1ACA7A330(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR___MTPartialFeedRequest_limit);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*sub_1ACA7A37C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1ACA7A454()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACA7A508(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR___MTPartialFeedRequest_sections);
  swift_beginAccess();
  *int v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACA7A55C(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  int v3 = (void *)(*a2 + OBJC_IVAR___MTPartialFeedRequest_sections);
  swift_beginAccess();
  *int v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1ACA7A5C8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1ACA7A66C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MTPartialFeedRequest_showTypeIsSerial);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1ACA7A700(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR___MTPartialFeedRequest_showTypeIsSerial);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*sub_1ACA7A74C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1ACA7A7A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = 0;
  memset(v31, 0, sizeof(v31));
  char v33 = 4;
  char v30 = 1;
  char v29 = 1;
  char v28 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7725D0);
  uint64_t inited = swift_initStackObject();
  long long v22 = xmmword_1ACE843F0;
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = &unk_1F037FEF8;
  unint64_t v23 = sub_1ACA364C4(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = v22;
  uint64_t v26 = *(void *)(v1 + OBJC_IVAR___MTBaseFeedRequest_storeID);
  *(void *)(v6 + 32) = sub_1ACE777C8();
  *(void *)(v6 + 40) = v7;
  char v27 = 1;
  int v8 = (uint64_t *)(v1 + OBJC_IVAR___MTPartialFeedRequest_limit);
  swift_beginAccess();
  uint64_t v9 = *v8;
  char v25 = 1;
  uint64_t v10 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  unint64_t v12 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v13 = sub_1ACA35F90(v11);
  unint64_t v14 = sub_1ACA35FB0(v11);
  unint64_t v15 = sub_1ACA360BC(v11);
  unint64_t v16 = sub_1ACA360DC(v11);
  *((void *)&v21 + 1) = sub_1ACA360FC(v11);
  *(void *)&long long v21 = v16;
  *((void *)&v20 + 1) = v11;
  *((void *)&v19 + 1) = v11;
  *(void *)&long long v20 = v11;
  *((void *)&v18 + 1) = v15;
  *(void *)&long long v19 = v23;
  *(void *)&long long v18 = v11;
  return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(v31, &v30, &v29, &v28, v12, v13, v14, v11, v24, v18, v19, v20, v6, &v27, v9, 0, v21, 0, 1,
           &v25,
           0,
           (uint64_t)v4,
           0,
           0,
           0,
           0,
           0,
           v11,
           0,
           0,
           2);
}

id sub_1ACA7AA3C(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MediaRequest.Params();
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v25 - v10;
  sub_1ACA7C910(a3, (uint64_t)&v25 - v10, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  unint64_t v12 = (char *)objc_allocWithZone((Class)type metadata accessor for PartialFeedResponse());
  sub_1ACA7C910((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  unint64_t v13 = (void **)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(void *)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(void *)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = a1;
  *(void *)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = a2;
  sub_1ACA7C910((uint64_t)v9, (uint64_t)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params], (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  unint64_t v14 = *(void **)&a2[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  unint64_t v15 = *v13;
  *unint64_t v13 = v14;
  unint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v17 = v12;
  id v18 = v14;

  uint64_t v19 = MEMORY[0x1E4FBC860];
  unint64_t v20 = sub_1ACA3A048(MEMORY[0x1E4FBC860]);
  long long v21 = &v17[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(void *)long long v21 = v19;
  *((void *)v21 + 1) = v20;
  *((void *)v21 + 2) = v19;
  *((void *)v21 + 3) = 0;

  long long v22 = (objc_class *)type metadata accessor for BaseFeedResponse();
  v26.id receiver = v17;
  v26.Class super_class = v22;
  id v23 = objc_msgSendSuper2(&v26, sel_init);
  sub_1ACA7C9E0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);

  sub_1ACA7C9E0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  return v23;
}

id PartialFeedResponse.__allocating_init(jsonArray:request:params:)(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (char *)objc_allocWithZone(v3);
  sub_1ACA7C910(a3, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  uint64_t v11 = (void **)&v10[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(void *)&v10[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(void *)&v10[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = a1;
  *(void *)&v10[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = a2;
  sub_1ACA7C910((uint64_t)v9, (uint64_t)&v10[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params], (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  unint64_t v12 = *(void **)&a2[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  unint64_t v13 = *v11;
  *uint64_t v11 = v12;
  unint64_t v14 = v10;
  unint64_t v15 = a2;
  id v16 = v12;

  uint64_t v17 = MEMORY[0x1E4FBC860];
  unint64_t v18 = sub_1ACA3A048(MEMORY[0x1E4FBC860]);
  uint64_t v19 = &v14[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(void *)uint64_t v19 = v17;
  *((void *)v19 + 1) = v18;
  *((void *)v19 + 2) = v17;
  *((void *)v19 + 3) = 0;

  unint64_t v20 = (objc_class *)type metadata accessor for BaseFeedResponse();
  v24.id receiver = v14;
  v24.Class super_class = v20;
  id v21 = objc_msgSendSuper2(&v24, sel_init);
  sub_1ACA7C9E0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);

  sub_1ACA7C9E0(a3, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  return v21;
}

id PartialFeedRequest.__allocating_init(storeID:)(uint64_t a1)
{
  uint64_t v3 = objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR___MTPartialFeedRequest_limit] = 25;
  *(void *)&v3[OBJC_IVAR___MTPartialFeedRequest_sections] = MEMORY[0x1E4FBC860];
  v3[OBJC_IVAR___MTPartialFeedRequest_showTypeIsSerial] = 0;
  *(void *)&v3[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = 0;
  *(void *)&v3[OBJC_IVAR___MTBaseFeedRequest_storeID] = a1;
  v5.id receiver = v3;
  v5.Class super_class = (Class)type metadata accessor for BaseFeedRequest();
  return objc_msgSendSuper2(&v5, sel_init);
}

id PartialFeedRequest.init(storeID:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___MTPartialFeedRequest_limit] = 25;
  *(void *)&v1[OBJC_IVAR___MTPartialFeedRequest_sections] = MEMORY[0x1E4FBC860];
  v1[OBJC_IVAR___MTPartialFeedRequest_showTypeIsSerial] = 0;
  *(void *)&v1[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = 0;
  *(void *)&v1[OBJC_IVAR___MTBaseFeedRequest_storeID] = a1;
  v3.id receiver = v1;
  v3.Class super_class = (Class)type metadata accessor for BaseFeedRequest();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t sub_1ACA7AFAC()
{
  return swift_bridgeObjectRelease();
}

id PartialFeedRequest.__deallocating_deinit(uint64_t a1)
{
  return sub_1ACA7C17C(a1, type metadata accessor for PartialFeedRequest);
}

uint64_t sub_1ACA7AFE4()
{
  sub_1ACCF8838();
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1ACE774B8();
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
    uint64_t v3 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    sub_1ACE779C8();
    if (swift_dynamicCastMetatype() || (uint64_t v5 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = (void *)(v3 + 32);
      while (*v6)
      {
        ++v6;
        if (!--v5) {
          goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
      return v3 | 1;
    }
  }
  return v2;
}

uint64_t sub_1ACA7B190(unint64_t a1, unint64_t a2)
{
  sub_1ACCF8838();
  if ((a1 & 0x8000000000000000) != 0) {
    goto LABEL_20;
  }
  type metadata accessor for PartialFeedRequest();
  uint64_t v5 = swift_dynamicCastClassUnconditional() + OBJC_IVAR___MTPartialFeedRequest_sections;
  swift_beginAccess();
  if (*(void *)(*(void *)v5 + 16) <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)(*(void *)v5 + 8 * a1 + 32);
  if (v6 == 1)
  {
    uint64_t v10 = (void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
    swift_beginAccess();
    if ((a2 & 0x8000000000000000) == 0)
    {
      if (*(void *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
      {
        uint64_t v8 = *(void *)(*v10 + 8 * a2 + 32);
        goto LABEL_12;
      }
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (!v6)
  {
    uint64_t v7 = (void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
    swift_beginAccess();
    uint64_t v8 = v7[3];
    if (!v8)
    {
      if ((a2 & 0x8000000000000000) == 0)
      {
        if (*(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
        {
          uint64_t v9 = *(void *)(*v7 + 8 * a2 + 32);
          swift_unknownObjectRetain();
LABEL_13:
          swift_unknownObjectRetain();
          return v9;
        }
        goto LABEL_18;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
LABEL_12:
    uint64_t v9 = v8;
    goto LABEL_13;
  }
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

uint64_t sub_1ACA7B3A8(unint64_t a1)
{
  type metadata accessor for PartialFeedRequest();
  uint64_t result = swift_dynamicCastClassUnconditional();
  if ((a1 & 0x8000000000000000) != 0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v4 = result + OBJC_IVAR___MTPartialFeedRequest_sections;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v4 + 16) <= a1)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v5 = *(void *)(*(void *)v4 + 8 * a1 + 32);
  if (!v5) {
    return 1;
  }
  if (v5 == 1)
  {
    uint64_t v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response);
    swift_beginAccess();
    uint64_t v7 = *v6;
    uint64_t v8 = *(void *)(*v6 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *(void *)(v7 + 8 * v10 + 32);
        swift_bridgeObjectRetain();
        sub_1ACE771F8();
        if (*(void *)(v11 + 16) && (unint64_t v12 = sub_1ACA65B48((uint64_t)v16), (v13 & 1) != 0))
        {
          sub_1ACA33128(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&v17);
        }
        else
        {
          long long v17 = 0u;
          long long v18 = 0u;
        }
        sub_1ACA6A0F8((uint64_t)v16);
        if (*((void *)&v18 + 1))
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772250);
          if (swift_dynamicCast())
          {
            swift_bridgeObjectRelease();
            uint64_t v14 = MEMORY[0x61746174];
            uint64_t result = swift_bridgeObjectRelease();
            goto LABEL_16;
          }
        }
        else
        {
          sub_1ACA50E78((uint64_t)&v17, qword_1EB7725E0);
        }
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v14 = 0;
LABEL_16:
        BOOL v15 = __CFADD__(v9, v14);
        v9 += v14;
        if (v15)
        {
          __break(1u);
          goto LABEL_23;
        }
        if (v8 == ++v10)
        {
          swift_bridgeObjectRelease();
          return v9;
        }
      }
    }
    return 0;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1ACA7B618()
{
  type metadata accessor for PartialFeedRequest();
  uint64_t v0 = swift_dynamicCastClassUnconditional() + OBJC_IVAR___MTPartialFeedRequest_sections;
  swift_beginAccess();
  return *(void *)(*(void *)v0 + 16);
}

char *sub_1ACA7B708(uint64_t a1)
{
  uint64_t v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x100))();
  uint64_t v5 = v4;
  uint64_t v6 = (objc_class *)type metadata accessor for GenericDataSourceSection();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  uint64_t v8 = (uint64_t (**)())&v7[OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock];
  *uint64_t v8 = sub_1ACA58428;
  v8[1] = 0;
  uint64_t v9 = (uint64_t *)&v7[OBJC_IVAR___MTGenericDataSourceSection_storedTitle];
  *uint64_t v9 = v3;
  v9[1] = v5;
  v15.id receiver = v7;
  v15.Class super_class = v6;
  uint64_t v10 = (char *)objc_msgSendSuper2(&v15, sel_init);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  unint64_t v12 = (uint64_t (**)())&v10[OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock];
  swift_beginAccess();
  *unint64_t v12 = sub_1ACA7C3C8;
  v12[1] = (uint64_t (*)())v11;
  char v13 = v1;
  swift_release();
  return v10;
}

uint64_t sub_1ACA7B844(uint64_t a1, unint64_t a2)
{
  type metadata accessor for PartialFeedRequest();
  uint64_t result = swift_dynamicCastClassUnconditional();
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v5 = result + OBJC_IVAR___MTPartialFeedRequest_sections;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v5 + 16) <= a2)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v6 = *(void *)(*(void *)v5 + 8 * a2 + 32);
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_13:
      __break(1u);
      return result;
    }
    uint64_t v7 = a1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response;
    uint64_t result = swift_beginAccess();
    if (*(void *)(*(void *)v7 + 16))
    {
      uint64_t v8 = swift_bridgeObjectRetain();
      _s18PodcastsFoundation26MediaRequestResponseParserC15extractNextPageySSSgSDys11AnyHashableVypGFZ_0(v8);
      uint64_t v10 = v9;
      swift_bridgeObjectRelease();
      if (v10)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
      return 0;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  return 0;
}

uint64_t sub_1ACA7BAB0(unint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772E38);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EyebrowBuilder.ListContext(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PartialFeedRequest();
  uint64_t v8 = swift_dynamicCastClassUnconditional();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v9 = v8 + OBJC_IVAR___MTPartialFeedRequest_sections;
  swift_beginAccess();
  if (*(void *)(*(void *)v9 + 16) <= a1)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v10 = *(void *)(*(void *)v9 + 8 * a1 + 32);
  if (v10)
  {
    if (v10 == 1)
    {
      if (qword_1EB7730A8 == -1) {
        return sub_1ACE74C48();
      }
LABEL_17:
      swift_once();
      return sub_1ACE74C48();
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1ACA7B190(a1, 0);
  type metadata accessor for ServerPodcastEpisode();
  uint64_t v11 = (void *)swift_dynamicCastClassUnconditional();
  unint64_t v12 = (unsigned char *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR___MTPartialFeedRequest_showTypeIsSerial);
  swift_beginAccess();
  LOBYTE(v12) = *v12;
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
  type metadata accessor for EyebrowBuilder(0);
  uint64_t v14 = swift_allocObject();
  id v15 = v11;
  uint64_t v16 = sub_1ACA7C1B4((uint64_t)v15, (char)v12, (uint64_t)v7, 0, 1, 0, 0, (uint64_t)v4, 1, 0, v14);
  swift_beginAccess();
  uint64_t v17 = *(void *)(v16 + 16);
  if (*(void *)(v16 + 24))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_1EB7730A8 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1ACE74C48();
  }
  swift_release();

  return v17;
}

unint64_t sub_1ACA7BE54(unint64_t a1)
{
  type metadata accessor for PartialFeedRequest();
  unint64_t result = swift_dynamicCastClassUnconditional();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  unint64_t v3 = result + OBJC_IVAR___MTPartialFeedRequest_sections;
  unint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v3 + 16) <= a1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  unint64_t result = *(void *)(*(void *)v3 + 8 * a1 + 32);
  if (result > 1) {
LABEL_7:
  }
    __break(1u);
  return result;
}

BOOL PartialFeedResponse.SectionType.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

void *static PartialFeedResponse.SectionType.allCases.getter()
{
  return &unk_1F0380068;
}

void *sub_1ACA7BF28@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

void sub_1ACA7BF58(void *a1@<X8>)
{
  *a1 = &unk_1F0380098;
}

id PartialFeedResponse.init(jsonArray:request:params:)(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA7C910(a3, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  uint64_t v10 = (void **)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(void *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = a1;
  *(void *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = a2;
  sub_1ACA7C910((uint64_t)v9, (uint64_t)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params], (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  uint64_t v11 = *(void **)&a2[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  unint64_t v12 = *v10;
  *uint64_t v10 = v11;
  uint64_t v13 = v3;
  uint64_t v14 = a2;
  id v15 = v11;

  uint64_t v16 = MEMORY[0x1E4FBC860];
  unint64_t v17 = sub_1ACA3A048(MEMORY[0x1E4FBC860]);
  long long v18 = &v13[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(void *)long long v18 = v16;
  *((void *)v18 + 1) = v17;
  *((void *)v18 + 2) = v16;
  *((void *)v18 + 3) = 0;

  uint64_t v19 = (objc_class *)type metadata accessor for BaseFeedResponse();
  v23.id receiver = v13;
  v23.Class super_class = v19;
  id v20 = objc_msgSendSuper2(&v23, sel_init);
  sub_1ACA7C9E0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);

  sub_1ACA7C9E0(a3, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  return v20;
}

uint64_t type metadata accessor for PartialFeedResponse()
{
  uint64_t result = qword_1E99F10E8;
  if (!qword_1E99F10E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id PartialFeedResponse.__deallocating_deinit()
{
  return sub_1ACA7C17C(0, type metadata accessor for PartialFeedResponse);
}

id sub_1ACA7C17C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.id receiver = v2;
  v4.Class super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_1ACA7C1B4(uint64_t a1, char a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10, uint64_t a11)
{
  objc_super v23 = &type metadata for IntermediateEyebrowBuilderEpisode;
  objc_super v24 = &protocol witness table for IntermediateEyebrowBuilderEpisode;
  uint64_t v21 = a1;
  char v22 = a2;
  *(_OWORD *)(a11 + 32) = 0u;
  *(_OWORD *)(a11 + 48) = 0u;
  *(_OWORD *)(a11 + 64) = 0u;
  *(_OWORD *)(a11 + 80) = 0u;
  *(_OWORD *)(a11 + 96) = 0u;
  *(_OWORD *)(a11 + 112) = 0u;
  *(_OWORD *)(a11 + 128) = 0u;
  *(_WORD *)(a11 + 160) = 0;
  *(_OWORD *)(a11 + 16) = 0u;
  *(_OWORD *)(a11 + 144) = 0u;
  sub_1ACA3E158((uint64_t)&v21, a11 + 168);
  sub_1ACA7C910(a3, a11 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context, type metadata accessor for EyebrowBuilder.ListContext);
  *(unsigned char *)(a11 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) = a4;
  *(unsigned char *)(a11 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_uppercase) = a5;
  swift_beginAccess();
  *(void *)(a11 + 144) = a6;
  *(void *)(a11 + 152) = a7;
  swift_bridgeObjectRelease();
  sub_1ACA7C978(a8, a11 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_abbreviatedPubDateConfig);
  *(unsigned char *)(a11 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_showsSubscriptionBadge) = a9;
  *(unsigned char *)(a11 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_hostingViewHasLimitedSpace) = a10;
  sub_1ACD84ED4();
  uint64_t v17 = sub_1ACD861C0();
  uint64_t v19 = v18;
  sub_1ACA50E78(a8, &qword_1EB772E38);
  sub_1ACA7C9E0(a3, type metadata accessor for EyebrowBuilder.ListContext);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v21);
  swift_beginAccess();
  *(void *)(a11 + 16) = v17;
  *(void *)(a11 + 24) = v19;
  swift_bridgeObjectRelease();
  return a11;
}

uint64_t type metadata accessor for PartialFeedRequest()
{
  return self;
}

uint64_t sub_1ACA7C390()
{
  return swift_deallocObject();
}

uint64_t sub_1ACA7C3C8()
{
  return sub_1ACA7B844(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_1ACA7C3D4()
{
  unint64_t result = qword_1E99F10D0;
  if (!qword_1E99F10D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F10D0);
  }
  return result;
}

unint64_t sub_1ACA7C42C()
{
  unint64_t result = qword_1E99F10D8;
  if (!qword_1E99F10D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F10E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F10D8);
  }
  return result;
}

uint64_t sub_1ACA7C488@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = (void *)(*a1 + OBJC_IVAR___MTPartialFeedRequest_limit);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1ACA7C4DC(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = (void *)(*a2 + OBJC_IVAR___MTPartialFeedRequest_limit);
  uint64_t result = swift_beginAccess();
  *unint64_t v3 = v2;
  return result;
}

uint64_t sub_1ACA7C52C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = (void *)(*a1 + OBJC_IVAR___MTPartialFeedRequest_sections);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACA7C588@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR___MTPartialFeedRequest_showTypeIsSerial);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1ACA7C5DC(char *a1, void *a2)
{
  char v2 = *a1;
  unint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR___MTPartialFeedRequest_showTypeIsSerial);
  uint64_t result = swift_beginAccess();
  *unint64_t v3 = v2;
  return result;
}

uint64_t method lookup function for PartialFeedRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PartialFeedRequest);
}

uint64_t dispatch thunk of PartialFeedRequest.limit.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of PartialFeedRequest.limit.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of PartialFeedRequest.limit.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of PartialFeedRequest.sections.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of PartialFeedRequest.sections.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of PartialFeedRequest.sections.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of PartialFeedRequest.showTypeIsSerial.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of PartialFeedRequest.showTypeIsSerial.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of PartialFeedRequest.showTypeIsSerial.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t sub_1ACA7C830()
{
  return type metadata accessor for PartialFeedResponse();
}

uint64_t sub_1ACA7C838()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for PartialFeedResponse(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PartialFeedResponse);
}

uint64_t dispatch thunk of PartialFeedResponse.sectionTitle(at:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of PartialFeedResponse.sectionType(at:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

ValueMetadata *type metadata accessor for PartialFeedResponse.SectionType()
{
  return &type metadata for PartialFeedResponse.SectionType;
}

uint64_t sub_1ACA7C910(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACA7C978(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772E38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACA7C9E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id static SHCatalog.episodeCatalog(with:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84830;
  *(void *)(inited + 32) = a1;
  unint64_t v6 = inited;
  sub_1ACE76598();
  id v3 = a1;
  id v4 = sub_1ACA7CC20(v6);
  swift_bridgeObjectRelease();
  return v4;
}

id static SHCatalog.episodeCatalog(with:)(unint64_t a1)
{
  return sub_1ACA7CC20(a1);
}

id sub_1ACA7CAF4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F3BE80]), sel_init);
  objc_msgSend(v0, sel_setNumHistogramBuckets_, 2);
  LODWORD(v1) = 2.0;
  objc_msgSend(v0, sel_setScoreThreshold_, v1);
  id v2 = objc_allocWithZone(MEMORY[0x1E4F3BE98]);
  id v3 = v0;
  id v4 = objc_msgSend(v2, sel_initWithLowerBound_upperBound_, 1.0, 86400.0);
  objc_msgSend(v3, sel_setSignatureDurationRange_, v4);

  id result = objc_msgSend(v3, sel_setSupportsSignatureTracking_, 1);
  qword_1E99F10F8 = (uint64_t)v3;
  return result;
}

id static SHCustomCatalogConfiguration.podcasts.getter()
{
  if (qword_1E99EFE58 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_1E99F10F8;
  return v0;
}

id sub_1ACA7CC20(unint64_t a1)
{
  v18[1] = *(id *)MEMORY[0x1E4F143B8];
  if (qword_1E99EFE58 != -1) {
    goto LABEL_16;
  }
  while (1)
  {
    id v2 = (void *)qword_1E99F10F8;
    id v3 = objc_allocWithZone(MEMORY[0x1E4F3BE78]);
    v18[0] = 0;
    id v4 = v2;
    id v5 = objc_msgSend(v3, sel_initWithConfiguration_error_, v4, v18);
    if (!v5)
    {
      id v15 = v18[0];
      sub_1ACE74D78();

      swift_willThrow();
      return v5;
    }
    id v6 = v18[0];

    if (a1 >> 62) {
      break;
    }
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v7) {
      goto LABEL_18;
    }
LABEL_5:
    uint64_t v8 = 4;
    while (1)
    {
      id v9 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AD119490](v8 - 4, a1) : *(id *)(a1 + 8 * v8);
      uint64_t v10 = v9;
      uint64_t v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      sub_1ACA7CE70();
      unint64_t v12 = (void *)sub_1ACE76558();
      v18[0] = 0;
      unsigned int v13 = objc_msgSend(v5, sel_addReferenceSignature_representingMediaItems_error_, v10, v12, v18);

      if (!v13)
      {
        id v16 = v18[0];
        swift_bridgeObjectRelease();
        sub_1ACE74D78();

        swift_willThrow();
        return v5;
      }
      id v14 = v18[0];

      ++v8;
      if (v11 == v7) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_16:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1ACE77508();
  if (v7) {
    goto LABEL_5;
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_1ACA7CE70()
{
  unint64_t result = qword_1E99F1100;
  if (!qword_1E99F1100)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E99F1100);
  }
  return result;
}

uint64_t ServerGenericResponse.data.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ServerGenericResponse.init(data:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1ACA7CEC0(uint64_t a1, uint64_t a2)
{
  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1ACA7CF38()
{
  return 1635017060;
}

uint64_t sub_1ACA7CF48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACA7CEC0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1ACA7CF80@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACA317E4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1ACA7CFB8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1ACA7D00C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t ServerGenericResponse.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  v10[1] = *(void *)(a2 + 16);
  uint64_t v11 = v4;
  type metadata accessor for ServerGenericResponse.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1ACE777A8();
  uint64_t v12 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v10 - v6;
  uint64_t v8 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C78();
  uint64_t v14 = v8;
  sub_1ACE76688();
  uint64_t v13 = v11;
  swift_getWitnessTable();
  sub_1ACE77788();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v7, v5);
}

uint64_t type metadata accessor for ServerGenericResponse.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ServerGenericResponse.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v12 = a3;
  uint64_t v13 = a2;
  type metadata accessor for ServerGenericResponse.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1ACE776C8();
  uint64_t v11 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v11 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C48();
  if (!v3)
  {
    uint64_t v9 = v11;
    uint64_t v8 = v12;
    sub_1ACE76688();
    uint64_t v14 = v13;
    swift_getWitnessTable();
    sub_1ACE77698();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v5);
    *uint64_t v8 = v15;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1ACA7D414@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return ServerGenericResponse.init(from:)(a1, *(void *)(a2 + 24), a3);
}

uint64_t sub_1ACA7D438(void *a1, uint64_t a2)
{
  return ServerGenericResponse.encode(to:)(a1, a2);
}

uint64_t type metadata accessor for ServerGenericResponse()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACA7D468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

unsigned char *sub_1ACA7D470(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACA7D50CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACA7D534()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACA7D550()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACA7D56C()
{
  return swift_getWitnessTable();
}

id FullFeedRequest.__allocating_init(storeID:isSerial:hasSeasons:)(uint64_t a1, char a2, char a3)
{
  uint64_t v7 = objc_allocWithZone(v3);
  v7[OBJC_IVAR___MTFullFeedRequest_isSerial] = a2;
  v7[OBJC_IVAR___MTFullFeedRequest_hasSeasons] = a3;
  *(void *)&v7[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = 0;
  *(void *)&v7[OBJC_IVAR___MTBaseFeedRequest_storeID] = a1;
  v9.id receiver = v7;
  v9.Class super_class = (Class)type metadata accessor for BaseFeedRequest();
  return objc_msgSendSuper2(&v9, sel_init);
}

id FullFeedRequest.init(storeID:isSerial:hasSeasons:)(uint64_t a1, char a2, char a3)
{
  v3[OBJC_IVAR___MTFullFeedRequest_isSerial] = a2;
  v3[OBJC_IVAR___MTFullFeedRequest_hasSeasons] = a3;
  *(void *)&v3[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = 0;
  *(void *)&v3[OBJC_IVAR___MTBaseFeedRequest_storeID] = a1;
  v5.id receiver = v3;
  v5.Class super_class = (Class)type metadata accessor for BaseFeedRequest();
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t sub_1ACA7D700@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = 0;
  memset(v28, 0, sizeof(v28));
  char v30 = 4;
  char v27 = 1;
  char v26 = 1;
  char v25 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7725D0);
  uint64_t inited = swift_initStackObject();
  long long v21 = xmmword_1ACE843F0;
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = &unk_1F037FF20;
  unint64_t v6 = sub_1ACA364C4(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = v21;
  uint64_t v24 = *(void *)(v1 + OBJC_IVAR___MTBaseFeedRequest_storeID);
  *(void *)(v7 + 32) = sub_1ACE777C8();
  *(void *)(v7 + 40) = v8;
  LOBYTE(v24) = 1;
  char v23 = 1;
  uint64_t v9 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  unint64_t v11 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v12 = sub_1ACA35F90(v10);
  unint64_t v13 = sub_1ACA35FB0(v10);
  unint64_t v14 = sub_1ACA360BC(v10);
  unint64_t v15 = sub_1ACA360DC(v10);
  *((void *)&v20 + 1) = sub_1ACA360FC(v10);
  *(void *)&long long v20 = v15;
  *(void *)&long long v19 = v10;
  *((void *)&v19 + 1) = v10;
  *(void *)&long long v18 = v6;
  *((void *)&v18 + 1) = v10;
  *(void *)&long long v17 = v10;
  *((void *)&v17 + 1) = v14;
  return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(v28, &v27, &v26, &v25, v11, v12, v13, v10, v22, v17, v18, v19, v7, (char *)&v24, 300, 0, v20, 0, 1,
           &v23,
           1,
           (uint64_t)v4,
           0,
           0,
           0,
           0,
           0,
           v10,
           0,
           0,
           2);
}

id sub_1ACA7D964(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MediaRequest.Params();
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)&v26 - v10;
  sub_1ACA394B0(a3, (uint64_t)&v26 - v10);
  unint64_t v12 = (char *)objc_allocWithZone((Class)type metadata accessor for FullFeedResponse());
  type metadata accessor for FullFeedRequest();
  *(void *)&v12[OBJC_IVAR___MTFullFeedResponse_fullFeedRequest] = swift_dynamicCastClassUnconditional();
  sub_1ACA394B0((uint64_t)v11, (uint64_t)v9);
  unint64_t v13 = (void **)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(void *)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(void *)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = a1;
  *(void *)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = a2;
  sub_1ACA394B0((uint64_t)v9, (uint64_t)&v12[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params]);
  unint64_t v14 = *(void **)&a2[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  unint64_t v15 = *v13;
  *unint64_t v13 = v14;
  id v16 = a2;
  swift_bridgeObjectRetain();
  long long v17 = v12;
  id v18 = v14;

  uint64_t v19 = MEMORY[0x1E4FBC860];
  unint64_t v20 = sub_1ACA3A048(MEMORY[0x1E4FBC860]);
  long long v21 = &v17[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(void *)long long v21 = v19;
  *((void *)v21 + 1) = v20;
  *((void *)v21 + 2) = v19;
  *((void *)v21 + 3) = 0;

  uint64_t v22 = (objc_class *)type metadata accessor for BaseFeedResponse();
  v27.id receiver = v17;
  v27.Class super_class = v22;
  id v23 = objc_msgSendSuper2(&v27, sel_init);
  sub_1ACA39598((uint64_t)v9);

  id v24 = v23;
  sub_1ACCF8838();

  sub_1ACA39598((uint64_t)v11);
  return v24;
}

id FullFeedResponse.__allocating_init(jsonArray:request:params:)(uint64_t a1, char *a2, uint64_t a3)
{
  unsigned int v4 = v3;
  uint64_t v8 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = (char *)objc_allocWithZone(v4);
  type metadata accessor for FullFeedRequest();
  *(void *)&v11[OBJC_IVAR___MTFullFeedResponse_fullFeedRequest] = swift_dynamicCastClassUnconditional();
  sub_1ACA394B0(a3, (uint64_t)v10);
  unint64_t v12 = (void **)&v11[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(void *)&v11[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(void *)&v11[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = a1;
  *(void *)&v11[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = a2;
  sub_1ACA394B0((uint64_t)v10, (uint64_t)&v11[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params]);
  unint64_t v13 = *(void **)&a2[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  unint64_t v14 = *v12;
  *unint64_t v12 = v13;
  unint64_t v15 = a2;
  id v16 = v11;
  id v17 = v13;

  uint64_t v18 = MEMORY[0x1E4FBC860];
  unint64_t v19 = sub_1ACA3A048(MEMORY[0x1E4FBC860]);
  unint64_t v20 = &v16[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(void *)unint64_t v20 = v18;
  *((void *)v20 + 1) = v19;
  *((void *)v20 + 2) = v18;
  *((void *)v20 + 3) = 0;

  long long v21 = (objc_class *)type metadata accessor for BaseFeedResponse();
  v26.id receiver = v16;
  v26.Class super_class = v21;
  id v22 = objc_msgSendSuper2(&v26, sel_init);
  sub_1ACA39598((uint64_t)v10);
  id v23 = v22;
  sub_1ACCF8838();

  sub_1ACA39598(a3);
  return v23;
}

void FullFeedRequest.__allocating_init(storeID:)()
{
}

void FullFeedRequest.init(storeID:)()
{
}

id FullFeedRequest.__deallocating_deinit(uint64_t a1)
{
  return sub_1ACA7EAA8(a1, type metadata accessor for FullFeedRequest);
}

id FullFeedResponse.init(jsonArray:request:params:)(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FullFeedRequest();
  *(void *)&v3[OBJC_IVAR___MTFullFeedResponse_fullFeedRequest] = swift_dynamicCastClassUnconditional();
  sub_1ACA394B0(a3, (uint64_t)v9);
  uint64_t v10 = (void **)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(void *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = a1;
  *(void *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = a2;
  sub_1ACA394B0((uint64_t)v9, (uint64_t)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params]);
  unint64_t v11 = *(void **)&a2[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  unint64_t v12 = *v10;
  *uint64_t v10 = v11;
  unint64_t v13 = a2;
  unint64_t v14 = v3;
  id v15 = v11;

  uint64_t v16 = MEMORY[0x1E4FBC860];
  unint64_t v17 = sub_1ACA3A048(MEMORY[0x1E4FBC860]);
  uint64_t v18 = &v14[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(void *)uint64_t v18 = v16;
  *((void *)v18 + 1) = v17;
  *((void *)v18 + 2) = v16;
  *((void *)v18 + 3) = 0;

  unint64_t v19 = (objc_class *)type metadata accessor for BaseFeedResponse();
  v24.id receiver = v14;
  v24.Class super_class = v19;
  id v20 = objc_msgSendSuper2(&v24, sel_init);
  sub_1ACA39598((uint64_t)v9);
  id v21 = v20;
  sub_1ACCF8838();

  sub_1ACA39598(a3);
  return v21;
}

uint64_t type metadata accessor for FullFeedResponse()
{
  uint64_t result = qword_1E99F1120;
  if (!qword_1E99F1120) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FullFeedRequest()
{
  return self;
}

uint64_t sub_1ACA7E020()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1ACE774B8();
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
    uint64_t v3 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    sub_1ACE779C8();
    if (swift_dynamicCastMetatype() || (uint64_t v5 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = (void *)(v3 + 32);
      while (*v6)
      {
        ++v6;
        if (!--v5) {
          goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
      return v3 | 1;
    }
  }
  return v2;
}

unint64_t sub_1ACA7E1C8(unint64_t a1, unint64_t a2)
{
  unsigned int v4 = (void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
  if (*(unsigned char *)(*(void *)(v2 + OBJC_IVAR___MTFullFeedResponse_fullFeedRequest)
                + OBJC_IVAR___MTFullFeedRequest_isSerial) != 1)
  {
    swift_beginAccess();
    if ((a2 & 0x8000000000000000) == 0)
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
      {
        uint64_t v10 = *(void *)(*v4 + 8 * a2 + 32);
        swift_unknownObjectRetain();
        return v10;
      }
      goto LABEL_20;
    }
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    uint64_t v10 = MEMORY[0x1AD119490](a2, v2);
    goto LABEL_15;
  }
  unint64_t result = swift_beginAccess();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v7 = v4[2];
  if (*(void *)(v7 + 16) <= a1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v4[1];
  if (*(void *)(v8 + 16) && (unint64_t result = sub_1ACA65E48(*(void *)(v7 + 8 * a1 + 32)), (v9 & 1) != 0))
  {
    uint64_t v2 = *(void *)(*(void *)(v8 + 56) + 8 * result);
    unint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC860];
  }
  if ((v2 & 0xC000000000000001) != 0) {
    goto LABEL_21;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v10 = *(void *)(v2 + 8 * a2 + 32);
    swift_unknownObjectRetain();
LABEL_15:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACA7E390(unint64_t a1)
{
  int v2 = *(unsigned __int8 *)(*(void *)(v1 + OBJC_IVAR___MTFullFeedResponse_fullFeedRequest)
                          + OBJC_IVAR___MTFullFeedRequest_isSerial);
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
  if (v2 != 1)
  {
    swift_beginAccess();
    if (!(*v3 >> 62)) {
      return *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    goto LABEL_14;
  }
  swift_beginAccess();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if ((v10 & 0x8000000000000000) == 0) {
      return v10;
    }
    goto LABEL_18;
  }
  uint64_t v5 = v3[2];
  if (*(void *)(v5 + 16) <= a1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = v3[1];
    if (*(void *)(v6 + 16) && (unint64_t v7 = sub_1ACA65E48(*(void *)(v5 + 8 * a1 + 32)), (v8 & 1) != 0))
    {
      unint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v9 = MEMORY[0x1E4FBC860];
    }
    if (!(v9 >> 62))
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
      return v10;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1ACE77508();
  swift_bridgeObjectRelease_n();
  if ((v10 & 0x8000000000000000) == 0) {
    return v10;
  }
LABEL_18:
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

uint64_t sub_1ACA7E598()
{
  if (*(unsigned char *)(*(void *)(v0 + OBJC_IVAR___MTFullFeedResponse_fullFeedRequest)
                + OBJC_IVAR___MTFullFeedRequest_isSerial) != 1)
    return 1;
  uint64_t v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache;
  swift_beginAccess();
  return *(void *)(*(void *)(v1 + 16) + 16);
}

id sub_1ACA7E688(unint64_t a1)
{
  uint64_t v1 = sub_1ACA7E7DC(a1);
  uint64_t v3 = v2;
  unsigned int v4 = (objc_class *)type metadata accessor for GenericDataSourceSection();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  uint64_t v6 = (uint64_t (**)())&v5[OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock];
  *uint64_t v6 = sub_1ACA58428;
  v6[1] = 0;
  unint64_t v7 = (uint64_t *)&v5[OBJC_IVAR___MTGenericDataSourceSection_storedTitle];
  *unint64_t v7 = v1;
  v7[1] = v3;
  v9.id receiver = v5;
  v9.Class super_class = v4;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_1ACA7E7DC(unint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache;
  swift_beginAccess();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v4 = *(void *)(v3 + 16);
  if (*(void *)(v4 + 16) <= a1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR___MTFullFeedResponse_fullFeedRequest);
  if (*(unsigned char *)(v5 + OBJC_IVAR___MTFullFeedRequest_isSerial) != 1) {
    return 0;
  }
  uint64_t v6 = *(void *)(v4 + 8 * a1 + 32);
  if (v6 == -1)
  {
    if (qword_1EB7730A8 == -1) {
      return sub_1ACE74C48();
    }
LABEL_19:
    swift_once();
    return sub_1ACE74C48();
  }
  if (!v6)
  {
    if (*(unsigned char *)(v5 + OBJC_IVAR___MTFullFeedRequest_hasSeasons) == 1)
    {
      if (qword_1EB7730A8 == -1) {
        return sub_1ACE74C48();
      }
      goto LABEL_19;
    }
    return 0;
  }
  if (*(unsigned char *)(v5 + OBJC_IVAR___MTFullFeedRequest_hasSeasons) != 1) {
    return 0;
  }
  if (qword_1EB7730A8 != -1) {
    swift_once();
  }
  sub_1ACE74C48();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v8 + 16) = xmmword_1ACE843F0;
  uint64_t v10 = MEMORY[0x1E4FBB5C8];
  *(void *)(v8 + 56) = v9;
  *(void *)(v8 + 64) = v10;
  *(void *)(v8 + 32) = v6;
  uint64_t v7 = sub_1ACE76188();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

void sub_1ACA7EA7C()
{
}

id FullFeedResponse.__deallocating_deinit()
{
  return sub_1ACA7EAA8(0, type metadata accessor for FullFeedResponse);
}

id sub_1ACA7EAA8(uint64_t a1, uint64_t (*a2)(void))
{
  v4.id receiver = v2;
  v4.Class super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t method lookup function for FullFeedRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FullFeedRequest);
}

uint64_t dispatch thunk of FullFeedRequest.__allocating_init(storeID:isSerial:hasSeasons:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t sub_1ACA7EB1C()
{
  return type metadata accessor for FullFeedResponse();
}

uint64_t sub_1ACA7EB24()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for FullFeedResponse(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FullFeedResponse);
}

uint64_t PodcastPlayerItem.adamID.getter()
{
  return *(void *)v0;
}

uint64_t PodcastPlayerItem.feedURL.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastPlayerItem.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastPlayerItem.displayType.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastPlayerItem.isSubscribeable.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t PodcastPlayerItem.init(adamID:feedURL:title:displayType:isSubscribeable:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8;
  return result;
}

uint64_t EpisodePlayerItem.adamID.getter()
{
  return *(void *)v0;
}

uint64_t EpisodePlayerItem.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EpisodePlayerItem.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EpisodePlayerItem.guid.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EpisodePlayerItem.pubDate.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t EpisodePlayerItem.init(adamID:title:subtitle:guid:pubDate:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 64) = a10 & 1;
  return result;
}

uint64_t PlayerItem.podcast.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  char v3 = *(unsigned char *)(v1 + 56);
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(void *)(a1 + 48) = v2;
  *(unsigned char *)(a1 + 56) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t PlayerItem.episode.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 128);
  long long v3 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 64) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 PlayerItem.init(podcast:episode:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 48);
  char v4 = *(unsigned char *)(a1 + 56);
  char v5 = *(unsigned char *)(a2 + 64);
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v6;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(a3 + 48) = v3;
  *(unsigned char *)(a3 + 56) = v4;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 64) = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 80) = v7;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v9 = *(_OWORD *)(a2 + 48);
  *(__n128 *)(a3 + 96) = result;
  *(_OWORD *)(a3 + 112) = v9;
  *(unsigned char *)(a3 + 128) = v5;
  return result;
}

uint64_t PodcastsStateCoordinatorPersistentStore.__allocating_init(syncKeysRepository:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedURLComposer()), sel_init);
  *(void *)(v2 + 24) = a1;
  return v2;
}

uint64_t PodcastsStateCoordinatorPersistentStore.init(syncKeysRepository:)(uint64_t a1)
{
  *(void *)(v1 + 16) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedURLComposer()), sel_init);
  *(void *)(v1 + 24) = a1;
  return v1;
}

id PodcastsStateCoordinatorPersistentStore.insertPodcastInStoreState(in:for:)(char *a1, uint64_t *a2)
{
  uint64_t v57 = a1;
  uint64_t v55 = sub_1ACE74F28();
  uint64_t v53 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  char v5 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  long long v9 = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)v50 - v10;
  uint64_t v12 = *a2;
  v50[1] = a2[1];
  uint64_t v13 = a2[2];
  v50[2] = a2[3];
  uint64_t v54 = a2[4];
  v50[3] = a2[5];
  uint64_t v51 = v13;
  id v56 = (id)a2[6];
  uint64_t v52 = v2;
  unint64_t v14 = *(void **)(v2 + 24);
  uint64_t v15 = (uint64_t)v14 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  id v16 = v14;
  swift_beginAccess();
  if ((isRunningUnitTests() & 1) == 0
    && (objc_msgSend(self, sel_isRunningOnHomepod) & 1) != 0
    && (uint64_t v59 = &type metadata for Podcasts,
        unint64_t v60 = sub_1ACA56248(),
        LOBYTE(v58[0]) = 26,
        char v17 = sub_1ACE75298(),
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v58),
        (v17 & 1) != 0))
  {
    char v18 = 0;
  }
  else
  {
    sub_1ACA3E158(v15, (uint64_t)v58);
    unint64_t v19 = v59;
    unint64_t v20 = v60;
    __swift_project_boxed_opaque_existential_1(v58, (uint64_t)v59);
    char v18 = (*(uint64_t (**)(void, ValueMetadata *, unint64_t))(v20 + 80))(0, v19, v20);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
  }
  id v21 = (void *)MEMORY[0x1E4FBC860];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v21 = sub_1ACA41FB0(0, v21[2] + 1, 1, v21);
  }
  unint64_t v23 = v21[2];
  unint64_t v22 = v21[3];
  if (v23 >= v22 >> 1) {
    id v21 = sub_1ACA41FB0((void *)(v22 > 1), v23 + 1, 1, v21);
  }
  void v21[2] = v23 + 1;
  objc_super v24 = &v21[2 * v23];
  unsigned char v24[4] = 0;
  *((unsigned char *)v24 + 40) = v18 & 1;
  if ((isRunningUnitTests() & 1) == 0
    && objc_msgSend(self, sel_isRunningOnHomepod)
    && (uint64_t v59 = &type metadata for Podcasts,
        unint64_t v60 = sub_1ACA56248(),
        LOBYTE(v58[0]) = 26,
        char v25 = sub_1ACE75298(),
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v58),
        (v25 & 1) != 0))
  {
    char v26 = 0;
  }
  else
  {
    sub_1ACA3E158(v15, (uint64_t)v58);
    objc_super v27 = v59;
    unint64_t v28 = v60;
    __swift_project_boxed_opaque_existential_1(v58, (uint64_t)v59);
    char v26 = (*(uint64_t (**)(uint64_t, ValueMetadata *, unint64_t))(v28 + 80))(1, v27, v28);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
  }
  uint64_t v29 = v55;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v21 = sub_1ACA41FB0(0, v21[2] + 1, 1, v21);
  }
  unint64_t v31 = v21[2];
  unint64_t v30 = v21[3];
  if (v31 >= v30 >> 1) {
    id v21 = sub_1ACA41FB0((void *)(v30 > 1), v31 + 1, 1, v21);
  }
  void v21[2] = v31 + 1;
  uint64_t v32 = &v21[2 * v31];
  v32[4] = 1;
  *((unsigned char *)v32 + 40) = v26 & 1;

  uint64_t v33 = v53;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v11, 1, 1, v29);
  if (v51)
  {
    sub_1ACE74EF8();
    sub_1ACA7FA64((uint64_t)v11);
    sub_1ACA7FAC4((uint64_t)v9, (uint64_t)v11);
  }
  uint64_t v34 = v12;
  sub_1ACAA6D98((uint64_t)v11, v12, (uint64_t)v5);
  sub_1ACE74DD8();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v29);
  char v35 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  uint64_t v36 = self;
  id v37 = objc_msgSend(v36, sel_defaultShowType);
  if (v54)
  {
    uint64_t v38 = (void *)sub_1ACE76178();
    if (v56)
    {
LABEL_23:
      uint64_t v39 = (void *)sub_1ACE76178();
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v38 = 0;
    if (v56) {
      goto LABEL_23;
    }
  }
  uint64_t v39 = 0;
LABEL_26:
  id v40 = objc_msgSend(v36, sel_insertNewPodcastInManagedObjectContext_subscribed_feedUrl_showType_showTypeInFeed_title_author_provider_imageUrl_description_adamId_displayType_showSpecificUpsellCopy_, v57, 0, v35, v37, 0, v38, 0, 0, 0, 0, v34, v39, 0);

  objc_msgSend(v40, sel_setHidden_, 1);
  objc_msgSend(v40, sel_setImporting_, 1);
  uint64_t v41 = v21[2];
  if (v41)
  {
    id v56 = v40;
    uint64_t v57 = v11;
    uint64_t v42 = (uint64_t)v16 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v43 = (unsigned __int8 *)(v21 + 5);
    do
    {
      uint64_t v46 = *((void *)v43 - 1);
      uint64_t v47 = *v43;
      if ((isRunningUnitTests() & 1) != 0
        || (objc_msgSend(self, sel_isRunningOnHomepod) & 1) == 0
        || (uint64_t v59 = &type metadata for Podcasts,
            unint64_t v60 = sub_1ACA56248(),
            LOBYTE(v58[0]) = 26,
            char v48 = sub_1ACE75298(),
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v58),
            (v48 & 1) == 0))
      {
        sub_1ACA3E158(v42, (uint64_t)v58);
        id v44 = v59;
        unint64_t v45 = v60;
        __swift_project_boxed_opaque_existential_1(v58, (uint64_t)v59);
        (*(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t))(v45 + 88))(v47, v46, v44, v45);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
      }
      v43 += 16;
      --v41;
    }
    while (v41);
    swift_bridgeObjectRelease();
    id v40 = v56;
    unint64_t v11 = v57;
  }
  swift_bridgeObjectRelease();
  sub_1ACA7FA64((uint64_t)v11);
  return v40;
}

id PodcastsStateCoordinatorPersistentStore.insertPodcastInStoreState(in:for:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *(void **)(v2 + 24);
  uint64_t v5 = (uint64_t)v4 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  id v6 = v4;
  swift_beginAccess();
  if ((isRunningUnitTests() & 1) == 0
    && (objc_msgSend(self, sel_isRunningOnHomepod) & 1) != 0
    && (id v37 = &type metadata for Podcasts,
        unint64_t v38 = sub_1ACA56248(),
        LOBYTE(v36[0]) = 26,
        char v7 = sub_1ACE75298(),
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v36),
        (v7 & 1) != 0))
  {
    char v8 = 0;
  }
  else
  {
    sub_1ACA3E158(v5, (uint64_t)v36);
    long long v9 = v37;
    unint64_t v10 = v38;
    __swift_project_boxed_opaque_existential_1(v36, (uint64_t)v37);
    char v8 = (*(uint64_t (**)(void, ValueMetadata *, unint64_t))(v10 + 80))(0, v9, v10);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  }
  unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v11 = sub_1ACA41FB0(0, v11[2] + 1, 1, v11);
  }
  unint64_t v13 = v11[2];
  unint64_t v12 = v11[3];
  if (v13 >= v12 >> 1) {
    unint64_t v11 = sub_1ACA41FB0((void *)(v12 > 1), v13 + 1, 1, v11);
  }
  void v11[2] = v13 + 1;
  unint64_t v14 = &v11[2 * v13];
  _OWORD v14[4] = 0;
  *((unsigned char *)v14 + 40) = v8 & 1;
  if ((isRunningUnitTests() & 1) == 0
    && objc_msgSend(self, sel_isRunningOnHomepod)
    && (id v37 = &type metadata for Podcasts,
        unint64_t v38 = sub_1ACA56248(),
        LOBYTE(v36[0]) = 26,
        char v15 = sub_1ACE75298(),
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v36),
        (v15 & 1) != 0))
  {
    char v16 = 0;
  }
  else
  {
    sub_1ACA3E158(v5, (uint64_t)v36);
    char v17 = v37;
    unint64_t v18 = v38;
    __swift_project_boxed_opaque_existential_1(v36, (uint64_t)v37);
    char v16 = (*(uint64_t (**)(uint64_t, ValueMetadata *, unint64_t))(v18 + 80))(1, v17, v18);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v11 = sub_1ACA41FB0(0, v11[2] + 1, 1, v11);
  }
  unint64_t v20 = v11[2];
  unint64_t v19 = v11[3];
  if (v20 >= v19 >> 1) {
    unint64_t v11 = sub_1ACA41FB0((void *)(v19 > 1), v20 + 1, 1, v11);
  }
  void v11[2] = v20 + 1;
  id v21 = &v11[2 * v20];
  v21[4] = 1;
  *((unsigned char *)v21 + 40) = v16 & 1;

  unint64_t v22 = self;
  unint64_t v23 = (void *)sub_1ACE76178();
  id v24 = objc_msgSend(v22, sel_insertNewPodcastInManagedObjectContext_subscribed_feedUrl_showType_showTypeInFeed_title_author_provider_imageUrl_description_adamId_displayType_showSpecificUpsellCopy_, a1, 0, v23, objc_msgSend(v22, sel_defaultShowType), 0, 0, 0, 0, 0, 0, v3, 0, 0);

  objc_msgSend(v24, sel_setHidden_, 1);
  objc_msgSend(v24, sel_setImporting_, 1);
  uint64_t v25 = v11[2];
  if (v25)
  {
    id v35 = v24;
    uint64_t v26 = (uint64_t)v6 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    objc_super v27 = (unsigned __int8 *)(v11 + 5);
    do
    {
      uint64_t v30 = *((void *)v27 - 1);
      uint64_t v31 = *v27;
      if ((isRunningUnitTests() & 1) != 0
        || (objc_msgSend(self, sel_isRunningOnHomepod) & 1) == 0
        || (id v37 = &type metadata for Podcasts,
            unint64_t v38 = sub_1ACA56248(),
            LOBYTE(v36[0]) = 26,
            char v32 = sub_1ACE75298(),
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v36),
            (v32 & 1) == 0))
      {
        sub_1ACA3E158(v26, (uint64_t)v36);
        unint64_t v28 = v37;
        unint64_t v29 = v38;
        __swift_project_boxed_opaque_existential_1(v36, (uint64_t)v37);
        (*(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t))(v29 + 88))(v31, v30, v28, v29);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
      }
      v27 += 16;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    id v24 = v35;
  }
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t PodcastsStateCoordinatorPersistentStore.deinit()
{
  return v0;
}

uint64_t PodcastsStateCoordinatorPersistentStore.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1ACA7FA18(char *a1, uint64_t *a2)
{
  return PodcastsStateCoordinatorPersistentStore.insertPodcastInStoreState(in:for:)(a1, a2);
}

id sub_1ACA7FA3C(uint64_t a1, uint64_t *a2)
{
  return PodcastsStateCoordinatorPersistentStore.insertPodcastInStoreState(in:for:)(a1, a2);
}

uint64_t sub_1ACA7FA64(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ACA7FAC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id _s18PodcastsFoundation0A31StateCoordinatorPersistentStoreC13insertEpisode2in3for8asPartOfSo9MTEpisodeCSo22NSManagedObjectContextC_AA0H10PlayerItemVSo9MTPodcastCSgtF_0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[6];
  double v9 = *((double *)a2 + 7);
  char v16 = *((unsigned char *)a2 + 64);
  unint64_t v10 = self;
  id v11 = objc_msgSend(v10, sel_insertNewEpisodeInManagedObjectContext_canSendNotifications_, a1, _s18PodcastsFoundation20NotificationSettingsC07canSendC0SbyFZ_0() & 1);
  objc_msgSend(v11, sel_setPodcast_, a3);
  objc_msgSend(v11, sel_setStoreTrackId_, v5);
  if (v6) {
    unint64_t v12 = (void *)sub_1ACE76178();
  }
  else {
    unint64_t v12 = 0;
  }
  objc_msgSend(v11, sel_setTitle_, v12);

  if (v7) {
    unint64_t v13 = (void *)sub_1ACE76178();
  }
  else {
    unint64_t v13 = 0;
  }
  objc_msgSend(v11, sel_setItunesSubtitle_, v13);

  if (v8) {
    unint64_t v14 = (void *)sub_1ACE76178();
  }
  else {
    unint64_t v14 = 0;
  }
  objc_msgSend(v11, sel_setGuid_, v14);

  if ((v16 & 1) == 0) {
    objc_msgSend(v11, sel_setPubDate_, v9);
  }
  return v11;
}

uint64_t initializeWithCopy for PodcastPlayerItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PodcastPlayerItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PodcastPlayerItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for PodcastPlayerItem(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PodcastPlayerItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastPlayerItem()
{
  return &type metadata for PodcastPlayerItem;
}

uint64_t _s18PodcastsFoundation17PodcastPlayerItemVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EpisodePlayerItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EpisodePlayerItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v4;
  return a1;
}

uint64_t assignWithTake for EpisodePlayerItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodePlayerItem(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodePlayerItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodePlayerItem()
{
  return &type metadata for EpisodePlayerItem;
}

uint64_t destroy for PlayerItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PlayerItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  uint64_t v7 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v7;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlayerItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = v4;
  return a1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for PlayerItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayerItem(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 129)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayerItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 128) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 129) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 129) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayerItem()
{
  return &type metadata for PlayerItem;
}

uint64_t dispatch thunk of PodcastsStateCoordinatorPersistentStoreProtocol.insertPodcastInStoreState(in:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorPersistentStoreProtocol.insertEpisode(in:for:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t type metadata accessor for PodcastsStateCoordinatorPersistentStore()
{
  return self;
}

uint64_t method lookup function for PodcastsStateCoordinatorPersistentStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastsStateCoordinatorPersistentStore);
}

uint64_t dispatch thunk of PodcastsStateCoordinatorPersistentStore.__allocating_init(syncKeysRepository:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t LibrarySnapshot.savedEpisodesAdamIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LibrarySnapshot.followedShows.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACA80634()
{
  if (*v0) {
    return 0x6465776F6C6C6F66;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_1ACA80680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACA81B4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACA806A8(uint64_t a1)
{
  unint64_t v2 = sub_1ACA80940();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACA806E4(uint64_t a1)
{
  unint64_t v2 = sub_1ACA80940();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LibrarySnapshot.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1130);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACA80940();
  sub_1ACE77C78();
  uint64_t v12 = v8;
  char v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1E99F1000);
  sub_1ACA80D28(&qword_1E99F1140, qword_1E99F1000, (void (*)(void))sub_1ACA80994);
  sub_1ACE77788();
  if (!v2)
  {
    uint64_t v12 = v10;
    char v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1148);
    sub_1ACA80D28(&qword_1E99F1150, &qword_1E99F1148, (void (*)(void))sub_1ACA809E8);
    sub_1ACE77788();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1ACA80940()
{
  unint64_t result = qword_1E99F1138;
  if (!qword_1E99F1138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1138);
  }
  return result;
}

unint64_t sub_1ACA80994()
{
  unint64_t result = qword_1EB7714D0;
  if (!qword_1EB7714D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7714D0);
  }
  return result;
}

unint64_t sub_1ACA809E8()
{
  unint64_t result = qword_1E99F1158;
  if (!qword_1E99F1158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1158);
  }
  return result;
}

uint64_t LibrarySnapshot.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1160);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACA80940();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1E99F1000);
  char v13 = 0;
  sub_1ACA80D28(&qword_1E99F1168, qword_1E99F1000, (void (*)(void))sub_1ACA80CD4);
  sub_1ACE77698();
  uint64_t v9 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1148);
  char v13 = 1;
  sub_1ACA80D28(&qword_1E99F1170, &qword_1E99F1148, (void (*)(void))sub_1ACA80D94);
  swift_bridgeObjectRetain();
  sub_1ACE77698();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = v14;
  *a2 = v9;
  a2[1] = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1ACA80CD4()
{
  unint64_t result = qword_1EB7714D8;
  if (!qword_1EB7714D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7714D8);
  }
  return result;
}

uint64_t sub_1ACA80D28(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACA80D94()
{
  unint64_t result = qword_1E99F1178;
  if (!qword_1E99F1178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1178);
  }
  return result;
}

uint64_t sub_1ACA80DE8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return LibrarySnapshot.init(from:)(a1, a2);
}

uint64_t sub_1ACA80E00(void *a1)
{
  return LibrarySnapshot.encode(to:)(a1);
}

uint64_t LibrarySnapshotFollowedShow.adamId.getter()
{
  return *(void *)v0;
}

uint64_t LibrarySnapshotFollowedShow.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibrarySnapshotFollowedShow.artistName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibrarySnapshotFollowedShow.init(adamId:name:artistName:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t sub_1ACA80E90()
{
  uint64_t v1 = 1701667182;
  if (*v0 != 1) {
    uint64_t v1 = 0x614E747369747261;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x64496D616461;
  }
}

uint64_t sub_1ACA80EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACA81C60(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ACA80F0C(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1ACA80F18(uint64_t a1)
{
  unint64_t v2 = sub_1ACA81150();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACA80F54(uint64_t a1)
{
  unint64_t v2 = sub_1ACA81150();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LibrarySnapshotFollowedShow.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1180);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v12[3] = v1[2];
  v12[4] = v8;
  uint64_t v10 = v1[3];
  v12[1] = v1[4];
  _OWORD v12[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACA81150();
  sub_1ACE77C78();
  uint64_t v16 = v9;
  char v15 = 0;
  sub_1ACA80994();
  sub_1ACE77788();
  if (!v2)
  {
    char v14 = 1;
    sub_1ACE77748();
    char v13 = 2;
    sub_1ACE77748();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1ACA81150()
{
  unint64_t result = qword_1E99F1188;
  if (!qword_1E99F1188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1188);
  }
  return result;
}

uint64_t LibrarySnapshotFollowedShow.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1190);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACA81150();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v23 = 0;
  sub_1ACA80CD4();
  sub_1ACE77698();
  uint64_t v9 = v24;
  char v22 = 1;
  uint64_t v10 = sub_1ACE77658();
  uint64_t v12 = v11;
  uint64_t v19 = v10;
  uint64_t v20 = v9;
  char v21 = 2;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1ACE77658();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = v19;
  *a2 = v20;
  a2[1] = v16;
  a2[2] = v12;
  a2[3] = v13;
  a2[4] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACA813F0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return LibrarySnapshotFollowedShow.init(from:)(a1, a2);
}

uint64_t sub_1ACA81408(void *a1)
{
  return LibrarySnapshotFollowedShow.encode(to:)(a1);
}

uint64_t destroy for LibrarySnapshot()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s18PodcastsFoundation15LibrarySnapshotVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LibrarySnapshot(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for LibrarySnapshot(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LibrarySnapshot()
{
  return &type metadata for LibrarySnapshot;
}

uint64_t destroy for LibrarySnapshotFollowedShow()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LibrarySnapshotFollowedShow(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LibrarySnapshotFollowedShow(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LibrarySnapshotFollowedShow(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibrarySnapshotFollowedShow(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibrarySnapshotFollowedShow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibrarySnapshotFollowedShow()
{
  return &type metadata for LibrarySnapshotFollowedShow;
}

unsigned char *storeEnumTagSinglePayload for LibrarySnapshotFollowedShow.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACA81800);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibrarySnapshotFollowedShow.CodingKeys()
{
  return &type metadata for LibrarySnapshotFollowedShow.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LibrarySnapshot.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACA81904);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibrarySnapshot.CodingKeys()
{
  return &type metadata for LibrarySnapshot.CodingKeys;
}

unint64_t sub_1ACA81940()
{
  unint64_t result = qword_1E99F1198;
  if (!qword_1E99F1198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1198);
  }
  return result;
}

unint64_t sub_1ACA81998()
{
  unint64_t result = qword_1E99F11A0;
  if (!qword_1E99F11A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F11A0);
  }
  return result;
}

unint64_t sub_1ACA819F0()
{
  unint64_t result = qword_1E99F11A8;
  if (!qword_1E99F11A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F11A8);
  }
  return result;
}

unint64_t sub_1ACA81A48()
{
  unint64_t result = qword_1E99F11B0;
  if (!qword_1E99F11B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F11B0);
  }
  return result;
}

unint64_t sub_1ACA81AA0()
{
  unint64_t result = qword_1E99F11B8;
  if (!qword_1E99F11B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F11B8);
  }
  return result;
}

unint64_t sub_1ACA81AF8()
{
  unint64_t result = qword_1E99F11C0;
  if (!qword_1E99F11C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F11C0);
  }
  return result;
}

uint64_t sub_1ACA81B4C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001ACEC61E0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465776F6C6C6F66 && a2 == 0xED000073776F6853)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACA81C60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64496D616461 && a2 == 0xE600000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1ACA81DAC@<X0>(uint64_t a1@<X8>)
{
  BOOL v2 = v1;
  unsigned int v4 = *(void **)v1;
  uint64_t v5 = v4[10];
  uint64_t v6 = sub_1ACE76FD8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v17 - v11;
  (*(void (**)(void *__return_ptr, void, void, void))(*(void *)&v2[v4[14] + 8] + 8))(v17, *(void *)&v2[v4[13]], *((void *)v2 + 2), *((void *)v2 + 3));
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB7725E0);
  int v13 = swift_dynamicCast();
  uint64_t v14 = *(void *)(v5 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, v13 ^ 1u, 1, v5);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v5) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(a1, &v2[*(void *)(*(void *)v2 + 96)], v5);
    uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
    v15(v10, v6);
    return ((uint64_t (*)(char *, uint64_t))v15)(v12, v6);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a1, v10, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
}

uint64_t sub_1ACA8203C(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_1ACA83164(a1);
  unsigned int v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8);
  return v4(a1);
}

void (*sub_1ACA820B8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  void v3[3] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[4] = v7;
  sub_1ACA81DAC((uint64_t)v7);
  return sub_1ACA8218C;
}

void sub_1ACA8218C(uint64_t a1, char a2)
{
  BOOL v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void *)(*(void *)a1 + 8);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    sub_1ACA83164((uint64_t)v3);
    uint64_t v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
    v7(v4, v5);
  }
  else
  {
    sub_1ACA83164(*(void *)(*(void *)a1 + 32));
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t *WrappedUserDefaults.deinit()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 96));

  return v0;
}

uint64_t WrappedUserDefaults.__deallocating_deinit()
{
  WrappedUserDefaults.deinit();
  return swift_deallocClassInstance();
}

uint64_t WrappedUserDefaults.__allocating_init<A>(defaultValue:key:store:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76BCE8);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 32) = a1;
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = a3;
  *(void *)(result + 40) = a4;
  *(void *)(result + 48) = &type metadata for BoolTransform;
  *(void *)(result + 56) = &off_1F0383EC8;
  return result;
}

void *WrappedUserDefaults.__allocating_init<A>(defaultValue:key:store:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F11C8);
  uint64_t result = (void *)swift_allocObject();
  result[4] = a1;
  result[5] = a2;
  result[2] = a3;
  result[3] = a4;
  result[6] = a5;
  result[7] = &type metadata for StringTransform;
  result[8] = &off_1F0383EB0;
  return result;
}

void *WrappedUserDefaults.__allocating_init<A>(defaultValue:key:store:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770960);
  uint64_t result = (void *)swift_allocObject();
  result[2] = a2;
  result[3] = a3;
  result[4] = a1;
  result[5] = a4;
  result[6] = &type metadata for IntegerTransform;
  result[7] = &off_1F0383E98;
  return result;
}

{
  void *result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76BD00);
  uint64_t result = (void *)swift_allocObject();
  result[2] = a2;
  result[3] = a3;
  result[4] = a1;
  result[5] = a4;
  result[6] = &type metadata for Int64Transform;
  result[7] = &off_1F0383E80;
  return result;
}

{
  void *v8;
  char *v9;
  uint64_t v10;
  void *v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F11D0);
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = (char *)v8 + *(void *)(*v8 + 96);
  uint64_t v10 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a1, v10);
  _DWORD v8[2] = a2;
  v8[3] = a3;
  *(void *)((char *)v8 + *(void *)(*v8 + 104)) = a4;
  uint64_t v11 = (void *)((char *)v8 + *(void *)(*v8 + 112));
  *uint64_t v11 = &type metadata for URLTransform;
  v11[1] = &off_1F0383E68;
  return v8;
}

uint64_t WrappedUserDefaults.__allocating_init<A>(defaultValue:key:store:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76BCF0);
  uint64_t result = swift_allocObject();
  *(double *)(result + 32) = a4;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 40) = a3;
  *(void *)(result + 48) = &type metadata for DoubleTransform;
  *(void *)(result + 56) = &off_1F0383E50;
  return result;
}

void sub_1ACA8267C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (void *)sub_1ACE76178();
  LOBYTE(a1) = objc_msgSend(a1, sel_BOOLForKey_, v4);

  *(void *)(a2 + 24) = MEMORY[0x1E4FBB390];
  *(unsigned char *)a2 = (_BYTE)a1;
}

double sub_1ACA826E8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (void *)sub_1ACE76178();
  id v5 = objc_msgSend(a1, sel_stringForKey_, v4);

  if (v5)
  {
    uint64_t v6 = sub_1ACE761B8();
    uint64_t v8 = v7;

    *(void *)(a2 + 24) = MEMORY[0x1E4FBB1A0];
    *(void *)a2 = v6;
    *(void *)(a2 + 8) = v8;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void sub_1ACA82780(void *a1@<X0>, void *a2@<X8>)
{
}

void sub_1ACA82790(void *a1@<X0>, void *a2@<X8>)
{
}

void sub_1ACA8279C(void *a1@<X0>, uint64_t a2@<X5>, void *a3@<X8>)
{
  uint64_t v6 = (void *)sub_1ACE76178();
  id v7 = objc_msgSend(a1, sel_integerForKey_, v6);

  a3[3] = a2;
  *a3 = v7;
}

uint64_t sub_1ACA82804@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  id v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = (void *)sub_1ACE76178();
  id v11 = objc_msgSend(a1, sel_URLForKey_, v10);

  if (v11)
  {
    sub_1ACE74E98();

    uint64_t v12 = sub_1ACE74F28();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 0, 1, v12);
  }
  else
  {
    uint64_t v12 = sub_1ACE74F28();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
  }
  sub_1ACA7FAC4((uint64_t)v7, (uint64_t)v9);
  sub_1ACE74F28();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) == 1)
  {
    uint64_t result = sub_1ACA50E78((uint64_t)v9, &qword_1EB7731B0);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    *(void *)(a2 + 24) = v12;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v13 + 32))(boxed_opaque_existential_1, v9, v12);
  }
  return result;
}

void sub_1ACA82A18(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (void *)sub_1ACE76178();
  objc_msgSend(a1, sel_doubleForKey_, v4);
  uint64_t v6 = v5;

  a2[3] = MEMORY[0x1E4FBB3D0];
  *a2 = v6;
}

void sub_1ACA82A8C(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1ACE74F28();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ACA83470(a1, (uint64_t)v15);
  if (v16)
  {
    int v11 = swift_dynamicCast();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v6, v11 ^ 1u, 1, v7);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v10, v6, v7);
      uint64_t v12 = (void *)sub_1ACE74E18();
      uint64_t v13 = (void *)sub_1ACE76178();
      objc_msgSend(a2, sel_setURL_forKey_, v12, v13);

      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
      return;
    }
  }
  else
  {
    sub_1ACA50E78((uint64_t)v15, qword_1EB7725E0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_1ACA50E78((uint64_t)v6, &qword_1EB7731B0);
  uint64_t v14 = (void *)sub_1ACE76178();
  objc_msgSend(a2, sel_removeObjectForKey_, v14);
}

void sub_1ACA82CF8(uint64_t a1, void *a2)
{
  sub_1ACA83470(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_1ACA50E78((uint64_t)v5, qword_1EB7725E0);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    uint64_t v3 = (void *)sub_1ACE76178();
    objc_msgSend(a2, sel_removeObjectForKey_, v3);
    goto LABEL_6;
  }
  uint64_t v3 = (void *)sub_1ACE76178();
  objc_msgSend(a2, sel_setBool_forKey_, v4, v3);
LABEL_6:
}

void sub_1ACA82DD0(uint64_t a1, void *a2)
{
  sub_1ACA83470(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_1ACA50E78((uint64_t)v5, qword_1EB7725E0);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    unsigned __int8 v4 = (void *)sub_1ACE76178();
    objc_msgSend(a2, sel_removeObjectForKey_, v4);
    goto LABEL_6;
  }
  uint64_t v3 = (void *)sub_1ACE77AF8();
  unsigned __int8 v4 = (void *)sub_1ACE76178();
  objc_msgSend(a2, sel_setObject_forKey_, v3, v4);

LABEL_6:
}

void sub_1ACA82EB4(uint64_t a1, void *a2)
{
  sub_1ACA83470(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_1ACA50E78((uint64_t)v5, qword_1EB7725E0);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    uint64_t v3 = (void *)sub_1ACE76178();
    objc_msgSend(a2, sel_removeObjectForKey_, v3);
    goto LABEL_6;
  }
  uint64_t v3 = (void *)sub_1ACE76178();
  objc_msgSend(a2, sel_setDouble_forKey_, v3, v4);
LABEL_6:
}

void sub_1ACA82F94(uint64_t a1, void *a2)
{
  sub_1ACA83470(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_1ACA50E78((uint64_t)v5, qword_1EB7725E0);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    double v4 = (void *)sub_1ACE76178();
    objc_msgSend(a2, sel_removeObjectForKey_, v4);
    goto LABEL_6;
  }
  uint64_t v3 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  double v4 = (void *)sub_1ACE76178();
  objc_msgSend(a2, sel_setObject_forKey_, v3, v4);

LABEL_6:
}

void sub_1ACA8308C(uint64_t a1, void *a2)
{
  sub_1ACA83470(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_1ACA50E78((uint64_t)v5, qword_1EB7725E0);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    uint64_t v3 = (void *)sub_1ACE76178();
    objc_msgSend(a2, sel_removeObjectForKey_, v3);
    goto LABEL_6;
  }
  uint64_t v3 = (void *)sub_1ACE76178();
  objc_msgSend(a2, sel_setInteger_forKey_, v4, v3);
LABEL_6:
}

uint64_t sub_1ACA83164(uint64_t a1)
{
  uint64_t v3 = (void *)((char *)v1 + *(void *)(*v1 + 112));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v10 = *(void *)(*v1 + 80);
  uint64_t v6 = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_1, a1, v6);
  (*(void (**)(uint64_t *, void, void, void, uint64_t, uint64_t))(v5 + 16))(v9, *(void *)((char *)v1 + *(void *)(*v1 + 104)), v1[2], v1[3], v4, v5);
  return sub_1ACA50E78((uint64_t)v9, qword_1EB7725E0);
}

uint64_t sub_1ACA8325C@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA81DAC(a1);
}

uint64_t sub_1ACA83280(uint64_t a1)
{
  return sub_1ACA83164(a1);
}

uint64_t sub_1ACA832A4()
{
  return 8;
}

void *sub_1ACA832B0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1ACA832BC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for WrappedUserDefaults()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for WrappedUserDefaults(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WrappedUserDefaults);
}

uint64_t dispatch thunk of WrappedUserDefaults.wrappedValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of WrappedUserDefaults.wrappedValue.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of WrappedUserDefaults.wrappedValue.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

ValueMetadata *type metadata accessor for DoubleTransform()
{
  return &type metadata for DoubleTransform;
}

ValueMetadata *type metadata accessor for URLTransform()
{
  return &type metadata for URLTransform;
}

ValueMetadata *type metadata accessor for Int64Transform()
{
  return &type metadata for Int64Transform;
}

ValueMetadata *type metadata accessor for IntegerTransform()
{
  return &type metadata for IntegerTransform;
}

ValueMetadata *type metadata accessor for StringTransform()
{
  return &type metadata for StringTransform;
}

ValueMetadata *type metadata accessor for BoolTransform()
{
  return &type metadata for BoolTransform;
}

uint64_t sub_1ACA83470(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB7725E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static PodcastsMediaLibrary.Error.== infix(_:_:)(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *a2;
  switch((unint64_t)*a1)
  {
    case 0uLL:
      if (!v3) {
        goto LABEL_5;
      }
      goto LABEL_3;
    case 1uLL:
      if (v3 == (void *)1) {
        goto LABEL_5;
      }
      goto LABEL_3;
    case 2uLL:
      if (v3 != (void *)2) {
        goto LABEL_3;
      }
      goto LABEL_5;
    case 3uLL:
      if (v3 != (void *)3) {
        goto LABEL_3;
      }
      goto LABEL_5;
    case 4uLL:
      if (v3 != (void *)4) {
        goto LABEL_3;
      }
      goto LABEL_5;
    case 5uLL:
      if (v3 != (void *)5) {
        goto LABEL_3;
      }
LABEL_5:
      uint64_t v4 = 1;
      break;
    default:
LABEL_3:
      uint64_t v4 = 0;
      break;
  }
  sub_1ACA63448(*a1);
  sub_1ACA63448(v3);
  sub_1ACA63464(v2);
  sub_1ACA63464(v3);
  return v4;
}

uint64_t sub_1ACA835B4(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *a2;
  switch((unint64_t)*a1)
  {
    case 0uLL:
      if (!v3) {
        goto LABEL_13;
      }
      goto LABEL_3;
    case 1uLL:
      if (v3 == (void *)1) {
        goto LABEL_13;
      }
      goto LABEL_3;
    case 2uLL:
      if (v3 == (void *)2) {
        goto LABEL_13;
      }
      goto LABEL_3;
    case 3uLL:
      if (v3 == (void *)3) {
        goto LABEL_13;
      }
      goto LABEL_3;
    case 4uLL:
      if (v3 == (void *)4) {
        goto LABEL_13;
      }
      goto LABEL_3;
    case 5uLL:
      if (v3 != (void *)5) {
        goto LABEL_3;
      }
LABEL_13:
      uint64_t v4 = 1;
      break;
    default:
LABEL_3:
      uint64_t v4 = 0;
      break;
  }
  sub_1ACA63448(*a1);
  sub_1ACA63448(v3);
  sub_1ACA63464(v2);
  sub_1ACA63464(v3);
  return v4;
}

void *_s5ErrorOwCP(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void _s5ErrorOwxx(void **a1)
{
  unint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **_s5ErrorOwca(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF) {
      id v7 = v4;
    }
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    id v5 = v4;
    uint64_t v6 = *a1;
    *a1 = v4;
  }
  return a1;
}

void **_s5ErrorOwta(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t _s5ErrorOwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFF9 && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483641);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 6;
  if (v4 >= 8) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t _s5ErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF9)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483641;
    if (a3 >= 0x7FFFFFF9) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF9) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 6;
    }
  }
  return result;
}

uint64_t sub_1ACA83888(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1ACA838A0(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for PodcastsMediaLibrary.Error()
{
  return &type metadata for PodcastsMediaLibrary.Error;
}

uint64_t *sub_1ACA83F08()
{
  sub_1ACA76F34(v0[2]);
  sub_1ACA76F34(v0[4]);
  sub_1ACA76F34(v0[6]);
  sub_1ACA76F34(v0[8]);
  sub_1ACA76F34(v0[10]);
  sub_1ACA76F34(v0[12]);
  sub_1ACA76F34(v0[14]);
  return v0;
}

uint64_t sub_1ACA83F58()
{
  sub_1ACA83F08();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FairPlayKeyLoadingMock()
{
  return self;
}

uint64_t sub_1ACA83FB0()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1ACA83FE8(uint64_t a1, uint64_t a2)
{
  sub_1ACE5C518(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1ACA8400C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  sub_1ACC82EA8(0, v1, 0);
  uint64_t v2 = v15;
  for (uint64_t i = a1 + 80; ; i += 64)
  {
    uint64_t v5 = sub_1ACE77D18();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1ACE77D18();
    uint64_t v10 = v9;
    uint64_t result = sub_1ACE77CD8();
    if (result) {
      break;
    }
    unint64_t v13 = *(void *)(v15 + 16);
    unint64_t v12 = *(void *)(v15 + 24);
    if (v13 >= v12 >> 1) {
      sub_1ACC82EA8(v12 > 1, v13 + 1, 1);
    }
    *(void *)(v15 + 16) = v13 + 1;
    uint64_t v14 = (void *)(v15 + 32 * v13);
    _OWORD v14[4] = v5;
    v14[5] = v7;
    void v14[6] = v8;
    v14[7] = v10;
    if (!--v1) {
      return v2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACA84120(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  sub_1ACC82EA8(0, v1, 0);
  uint64_t v2 = v15;
  for (uint64_t i = a1 + 40; ; i += 64)
  {
    uint64_t v5 = sub_1ACE77D18();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1ACE77D18();
    uint64_t v10 = v9;
    uint64_t result = sub_1ACE77CD8();
    if (result) {
      break;
    }
    unint64_t v13 = *(void *)(v15 + 16);
    unint64_t v12 = *(void *)(v15 + 24);
    if (v13 >= v12 >> 1) {
      sub_1ACC82EA8(v12 > 1, v13 + 1, 1);
    }
    *(void *)(v15 + 16) = v13 + 1;
    uint64_t v14 = (void *)(v15 + 32 * v13);
    _OWORD v14[4] = v5;
    v14[5] = v7;
    void v14[6] = v8;
    v14[7] = v10;
    if (!--v1) {
      return v2;
    }
  }
  __break(1u);
  return result;
}

double AssetReaderTimelineAlignment.Alignment.queryTimeRange.getter()
{
  return *(double *)v0;
}

double AssetReaderTimelineAlignment.Alignment.referenceTimeRange.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t sub_1ACA84248()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0x6D69547972657571;
  }
}

uint64_t sub_1ACA84294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACA8B1C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACA842BC(uint64_t a1)
{
  unint64_t v2 = sub_1ACA8AE30();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACA842F8(uint64_t a1)
{
  unint64_t v2 = sub_1ACA8AE30();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AssetReaderTimelineAlignment.Alignment.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F11D8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACA8AE30();
  sub_1ACE77C78();
  uint64_t v15 = v8;
  uint64_t v16 = v9;
  char v14 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F11E8);
  sub_1ACA8AE84(&qword_1E99F11F0);
  sub_1ACE77788();
  if (!v2)
  {
    uint64_t v15 = v10;
    uint64_t v16 = v11;
    char v14 = 1;
    sub_1ACE77788();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AssetReaderTimelineAlignment.Alignment.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F11F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACA8AE30();
  sub_1ACE77C48();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F11E8);
    char v13 = 0;
    sub_1ACA8AE84(&qword_1E99F1200);
    sub_1ACE77698();
    long long v9 = v12;
    char v13 = 1;
    sub_1ACE77698();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v10 = v12;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1ACA84708@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return AssetReaderTimelineAlignment.Alignment.init(from:)(a1, a2);
}

uint64_t sub_1ACA84720(void *a1)
{
  return AssetReaderTimelineAlignment.Alignment.encode(to:)(a1);
}

uint64_t sub_1ACA84738()
{
  int v1 = *v0;
  sub_1ACE77B18();
  sub_1ACE77B28();
  if (v1 != 2) {
    sub_1ACE77B38();
  }
  return sub_1ACE77B78();
}

uint64_t sub_1ACA847A8()
{
  if (*v0 == 2) {
    return sub_1ACE77B28();
  }
  sub_1ACE77B28();
  return sub_1ACE77B38();
}

uint64_t sub_1ACA847F8()
{
  int v1 = *v0;
  sub_1ACE77B18();
  sub_1ACE77B28();
  if (v1 != 2) {
    sub_1ACE77B38();
  }
  return sub_1ACE77B78();
}

uint64_t sub_1ACA84864(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  char v3 = v2 == 2;
  int v4 = *a2;
  if (v4 != 2) {
    char v3 = 0;
  }
  if (v2 != 2 && v4 != 2) {
    char v3 = ((v2 & 1) == 0) ^ v4;
  }
  return v3 & 1;
}

BOOL sub_1ACA8489C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 4) {
    return v3 == 4;
  }
  if (v2 == 3) {
    return v3 == 3;
  }
  if ((v3 - 3) < 2) {
    return 0;
  }
  if (v2 == 2)
  {
    if (v3 == 2) {
      return 1;
    }
  }
  else
  {
    BOOL v5 = (v2 & 1) == 0;
    if (v3 != 2 && ((v5 ^ v3) & 1) != 0) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1ACA84918@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F12A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84470;
  uint64_t v5 = *a1;
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_1ACA65F9C(0), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v8 = 0;
  }
  *(void *)(inited + 32) = v8;
  if (*(void *)(v5 + 16) && (unint64_t v9 = sub_1ACA65F9C(1), (v10 & 1) != 0))
  {
    uint64_t v11 = *(void *)(*(void *)(v5 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v11 = 0;
  }
  *(void *)(inited + 40) = v11;
  if (*(void *)(v5 + 16) && (unint64_t v12 = sub_1ACA65F9C(2), (v13 & 1) != 0))
  {
    uint64_t v14 = *(void *)(*(void *)(v5 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    *(void *)(inited + 48) = v14;
    if (!v8) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v14 = 0;
    *(void *)(inited + 48) = 0;
    if (!v8)
    {
LABEL_12:
      uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1ACA420C0(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v17 = v15[2];
  unint64_t v16 = v15[3];
  if (v17 >= v16 >> 1) {
    uint64_t v15 = sub_1ACA420C0((void *)(v16 > 1), v17 + 1, 1, v15);
  }
  void v15[2] = v17 + 1;
  v15[v17 + 4] = v8;
  if (v11)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v15 = sub_1ACA420C0(0, v15[2] + 1, 1, v15);
    }
    unint64_t v19 = v15[2];
    unint64_t v18 = v15[3];
    if (v19 >= v18 >> 1) {
      uint64_t v15 = sub_1ACA420C0((void *)(v18 > 1), v19 + 1, 1, v15);
    }
    void v15[2] = v19 + 1;
    v15[v19 + 4] = v11;
  }
LABEL_23:
  if (v14)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v15 = sub_1ACA420C0(0, v15[2] + 1, 1, v15);
    }
    unint64_t v21 = v15[2];
    unint64_t v20 = v15[3];
    if (v21 >= v20 >> 1) {
      uint64_t v15 = sub_1ACA420C0((void *)(v20 > 1), v21 + 1, 1, v15);
    }
    void v15[2] = v21 + 1;
    v15[v21 + 4] = v14;
  }
  uint64_t result = swift_release();
  *a2 = v15;
  return result;
}

BOOL AssetReaderTimelineAlignment.isInProgress.getter()
{
  int v1 = *(os_unfair_lock_s **)(v0 + 16);
  int v2 = v1 + 4;
  int v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1ACA8ADD8(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5 != 4;
}

uint64_t AssetReaderTimelineAlignment.alignments.getter()
{
  int v1 = *(os_unfair_lock_s **)(v0 + 24);
  int v2 = (uint64_t *)&v1[4];
  int v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACA84918(v2, &v21);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v21;
  uint64_t v5 = *(void *)(v21 + 16);
  if (!v5)
  {
    char v7 = (void *)MEMORY[0x1E4FBC860];
LABEL_25:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  char v7 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v8 = *(void *)(v4 + 8 * v6 + 32);
    uint64_t v9 = *(void *)(v8 + 16);
    int64_t v10 = v7[2];
    int64_t v11 = v10 + v9;
    if (__OFADD__(v10, v9)) {
      break;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v11 <= v7[3] >> 1)
    {
      if (*(void *)(v8 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v10 <= v11) {
        int64_t v13 = v10 + v9;
      }
      else {
        int64_t v13 = v10;
      }
      char v7 = sub_1ACA414E4(isUniquelyReferenced_nonNull_native, v13, 1, v7);
      if (*(void *)(v8 + 16))
      {
LABEL_14:
        uint64_t v14 = v7[2];
        if ((v7[3] >> 1) - v14 < v9) {
          goto LABEL_28;
        }
        uint64_t v15 = &v7[4 * v14 + 4];
        if (v8 + 32 < (unint64_t)&v15[4 * v9] && (unint64_t)v15 < v8 + 32 + 32 * v9) {
          goto LABEL_30;
        }
        memcpy(v15, (const void *)(v8 + 32), 32 * v9);
        if (v9)
        {
          uint64_t v17 = v7[2];
          BOOL v18 = __OFADD__(v17, v9);
          uint64_t v19 = v17 + v9;
          if (v18) {
            goto LABEL_29;
          }
          _DWORD v7[2] = v19;
        }
        goto LABEL_4;
      }
    }
    if (v9) {
      goto LABEL_27;
    }
LABEL_4:
    ++v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5 == v6)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

BOOL AssetReaderTimelineAlignment.matchedBeginning.getter()
{
  int v1 = *(os_unfair_lock_s **)(v0 + 16);
  int v2 = v1 + 4;
  int v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1ACA8ADD8(v2, &v5);
  os_unfair_lock_unlock(v3);
  return (v5 & 0xFE) != 2;
}

BOOL AssetReaderTimelineAlignment.matchedEnd.getter()
{
  int v1 = *(os_unfair_lock_s **)(v0 + 16);
  int v2 = v1 + 4;
  int v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1ACA8ADD8(v2, &v7);
  os_unfair_lock_unlock(v3);
  BOOL v4 = v7;
  unsigned int v5 = v7 - 2;
  if (v5 < 3) {
    return (v5 & 7) == 2;
  }
  return v4;
}

void *sub_1ACA84ED4(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1260);
  uint64_t v15 = swift_allocObject();
  *(_DWORD *)(v15 + 24) = 0;
  *(void *)(v15 + 16) = a1;
  v7[3] = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1268);
  uint64_t v16 = swift_allocObject();
  *(_DWORD *)(v16 + 28) = 0;
  *(void *)(v16 + 16) = a2;
  *(unsigned char *)(v16 + 24) = a3 & 1;
  v7[4] = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1270);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 20) = 0;
  *(unsigned char *)(v17 + 16) = a4;
  _DWORD v7[2] = v17;
  v7[5] = a5;
  v7[6] = a6;
  BOOL v18 = (char *)v7 + OBJC_IVAR____TtC18PodcastsFoundation28AssetReaderTimelineAlignment_logger;
  uint64_t v19 = sub_1ACE754C8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a7, v19);
  return v7;
}

void sub_1ACA84FE8(unint64_t a1)
{
  uint64_t v2 = v1;
  BOOL v4 = *(os_unfair_lock_s **)(v1 + 16);
  unsigned int v5 = v4 + 4;
  uint64_t v6 = v4 + 5;
  os_unfair_lock_lock(v4 + 5);
  sub_1ACA8ADD8(v5, &v44);
  os_unfair_lock_unlock(v6);
  v47[0] = v44 == 3;
  if (a1 >> 62) {
    goto LABEL_27;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v39 = v5;
    id v40 = v6;
    if (!v7) {
      break;
    }
    uint64_t v46 = MEMORY[0x1E4FBC860];
    sub_1ACC82EE8(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0)
    {
      __break(1u);
      swift_release();
      __break(1u);
      return;
    }
    uint64_t v6 = 0;
    uint64_t v8 = v46;
    unsigned int v5 = (os_unfair_lock_s *)(a1 & 0xC000000000000001);
    while ((os_unfair_lock_s *)v7 != v6)
    {
      if (v5) {
        id v9 = (id)MEMORY[0x1AD119490](v6, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * (void)v6 + 32);
      }
      int64_t v10 = v9;
      id v43 = v9;
      sub_1ACA85580(&v43, v47, (double *)&v44);

      long long v11 = v44;
      long long v12 = v45;
      uint64_t v46 = v8;
      unint64_t v14 = *(void *)(v8 + 16);
      unint64_t v13 = *(void *)(v8 + 24);
      if (v14 >= v13 >> 1)
      {
        long long v41 = v44;
        long long v38 = v45;
        sub_1ACC82EE8(v13 > 1, v14 + 1, 1);
        long long v12 = v38;
        long long v11 = v41;
        uint64_t v8 = v46;
      }
      uint64_t v6 = (os_unfair_lock_s *)((char *)v6 + 1);
      *(void *)(v8 + 16) = v14 + 1;
      unint64_t v15 = v8 + 32 * v14;
      *(_OWORD *)(v15 + 32) = v11;
      *(_OWORD *)(v15 + 48) = v12;
      if ((os_unfair_lock_s *)v7 == v6) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
LABEL_13:
  *(void *)&long long v44 = v8;
  swift_bridgeObjectRetain();
  sub_1ACA89044((uint64_t *)&v44, sub_1ACBE8064, sub_1ACA891DC);
  uint64_t v16 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v16);
  BOOL v18 = (uint64_t *)&v17[4];
  uint64_t v19 = v17 + 6;
  os_unfair_lock_lock(v17 + 6);
  sub_1ACA8C01C((unint64_t)v18, &v44);
  os_unfair_lock_unlock(v19);
  uint64_t v20 = *(void *)(v44 + 16);
  if (v20)
  {
    uint64_t v21 = (double *)(v44 + 56);
    uint64_t v22 = MEMORY[0x1E4FBC860];
    do
    {
      double v26 = *(v21 - 3);
      long long v42 = *((_OWORD *)v21 - 1);
      double v27 = *v21;
      sub_1ACE76F48();
      if (v26 <= v28)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v44 = v22;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1ACC82EE8(0, *(void *)(v22 + 16) + 1, 1);
          uint64_t v22 = v44;
        }
        unint64_t v24 = *(void *)(v22 + 16);
        unint64_t v23 = *(void *)(v22 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_1ACC82EE8(v23 > 1, v24 + 1, 1);
          uint64_t v22 = v44;
        }
        *(void *)(v22 + 16) = v24 + 1;
        uint64_t v25 = v22 + 32 * v24;
        *(double *)(v25 + 32) = v26;
        *(_OWORD *)(v25 + 40) = v42;
        *(double *)(v25 + 56) = v27;
      }
      v21 += 4;
      --v20;
    }
    while (v20);
  }
  uint64_t v30 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v30);
  os_unfair_lock_lock(v19);
  sub_1ACA8C038(v18);
  os_unfair_lock_unlock(v19);
  swift_release();
  uint64_t v31 = swift_release();
  MEMORY[0x1F4188790](v31);
  os_unfair_lock_lock(v40);
  sub_1ACA8C05C(v39);
  os_unfair_lock_unlock(v40);
  swift_retain_n();
  char v32 = sub_1ACE75498();
  os_log_type_t v33 = sub_1ACE76C08();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(void *)&long long v44 = v35;
    *(_DWORD *)uint64_t v34 = 136315138;
    uint64_t v46 = v2;
    swift_retain();
    uint64_t v36 = sub_1ACE76248();
    uint64_t v46 = sub_1ACA3189C(v36, v37, (uint64_t *)&v44);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v32, v33, "Matched:\n%s", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v35, -1, -1);
    MEMORY[0x1AD11B340](v34, -1, -1);
  }
  else
  {
    swift_release_n();
  }
}

void sub_1ACA85580(id *a1@<X0>, unsigned char *a2@<X1>, double *a3@<X8>)
{
  id v7 = *a1;
  if (*a2 == 1)
  {
    BOOL v4 = (os_unfair_lock_s *)objc_msgSend(*a1, sel_queryTimeRange);
    [(os_unfair_lock_s *)v4 lowerBound];
    double v9 = v8;

    if (v9 > 1.0)
    {
      v32[1] = v32;
      MEMORY[0x1F4188790](v10);
      uint64_t v12 = (uint64_t)&v11[4];
      BOOL v4 = v11 + 7;
      os_unfair_lock_lock(v11 + 7);
      sub_1ACA8C068(v12);
      if (v3) {
        goto LABEL_10;
      }
      os_unfair_lock_unlock(v4);
    }
  }
  *a2 = 0;
  id v13 = objc_msgSend(v7, sel_referenceTimeRange);
  objc_msgSend(v13, sel_lowerBound);
  double v15 = v14;

  id v16 = objc_msgSend(v7, sel_referenceTimeRange);
  objc_msgSend(v16, sel_upperBound);
  double v18 = v17;

  if (v15 > v18)
  {
    __break(1u);
  }
  else
  {
    sub_1ACE76F48();
    double v20 = v19;
    id v21 = objc_msgSend(v7, sel_queryTimeRange);
    objc_msgSend(v21, sel_lowerBound);
    double v23 = v22;

    double v24 = v20 + v23;
    id v25 = objc_msgSend(v7, sel_queryTimeRange);
    objc_msgSend(v25, sel_upperBound);
    double v27 = v26;

    id v28 = objc_msgSend(v7, sel_queryTimeRange);
    objc_msgSend(v28, sel_lowerBound);
    double v30 = v29;

    double v31 = v24 + v27 - v30;
    if (v24 <= v31)
    {
      *a3 = v24;
      a3[1] = v31;
      a3[2] = v15;
      a3[3] = v18;
      return;
    }
  }
  __break(1u);
LABEL_10:
  os_unfair_lock_unlock(v4);
  __break(1u);
}

unint64_t sub_1ACA857C4@<X0>(unint64_t result@<X0>, int a2@<W1>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)result;
  if (*(void *)(*(void *)result + 16) && (uint64_t result = sub_1ACA65F9C(a2), (v5 & 1) != 0))
  {
    *a3 = *(void *)(*(void *)(v4 + 56) + 8 * result);
    return swift_bridgeObjectRetain();
  }
  else
  {
    *a3 = MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1ACA8582C(uint64_t *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain();
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_1ACA6E8C4(v8);
  uint64_t v9 = sub_1ACA85900(*(void *)(a5 + 40), *(void *)(a5 + 48), a3);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1ACA859D4(v9);
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *a1;
  *a1 = 0x8000000000000000;
  sub_1ACD0C434(v10, a2, isUniquelyReferenced_nonNull_native);
  *a1 = v14;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACA85900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v14 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = (long long *)(a3 + 48);
    uint64_t v9 = v6;
    do
    {
      long long v10 = *v8;
      v13[0] = *(v8 - 1);
      v13[1] = v10;
      sub_1ACA88CD4((double *)v13);
      v8 += 2;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    uint64_t v5 = v14;
  }
  if (*(void *)(v5 + 16) == v6) {
    return v5;
  }
  uint64_t v12 = sub_1ACA85900(a1, a2, v5);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1ACA859D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = (double *)(swift_bridgeObjectRetain() + 56);
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v4 = v1;
    while (1)
    {
      uint64_t v6 = *((void *)v2 - 3);
      long long v7 = *((_OWORD *)v2 - 1);
      double v8 = *v2;
      unint64_t v9 = v3[2];
      if (v9 && (unint64_t v10 = v9 - 1, v11 = (uint64_t)&v3[4 * v9], v12 = *(double *)(v11 + 16), *((double *)&v7 + 1) <= v12))
      {
        if (*(double *)(v11 + 24) - v12 >= v8 - *((double *)&v7 + 1)) {
          goto LABEL_5;
        }
        long long v19 = *((_OWORD *)v2 - 1);
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1ACDE6EE0(v3);
          uint64_t v3 = (void *)result;
        }
        long long v14 = v19;
        if (v9 > v3[2])
        {
          __break(1u);
          return result;
        }
      }
      else
      {
        long long v18 = *((_OWORD *)v2 - 1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1ACA414E4(0, v9 + 1, 1, v3);
        }
        unint64_t v10 = v3[2];
        unint64_t v13 = v3[3];
        long long v14 = v18;
        if (v10 >= v13 >> 1)
        {
          double v15 = sub_1ACA414E4((void *)(v13 > 1), v10 + 1, 1, v3);
          long long v14 = v18;
          uint64_t v3 = v15;
        }
        v3[2] = v10 + 1;
      }
      uint64_t v5 = &v3[4 * v10];
      void v5[4] = v6;
      *(_OWORD *)(v5 + 5) = v14;
      *((double *)v5 + 7) = v8;
LABEL_5:
      v2 += 4;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
  }
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
LABEL_19:
  if (v3[2] == v1) {
    return (uint64_t)v3;
  }
  uint64_t v17 = sub_1ACA859D4(v3);
  swift_bridgeObjectRelease();
  return v17;
}

void sub_1ACA85B7C()
{
  AssetReaderTimelineAlignment.alignments.getter();
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  p_os_unfair_lock_opaque = (unint64_t *)&v1[4]._os_unfair_lock_opaque;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACA8C0F0(p_os_unfair_lock_opaque);
  os_unfair_lock_unlock(v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v5 = v4 + 4;
  uint64_t v6 = v4 + 5;
  os_unfair_lock_lock(v4 + 5);
  sub_1ACA85E5C(v5);
  os_unfair_lock_unlock(v6);
  swift_retain_n();
  long long v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76C08();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v13 = v10;
    *(_DWORD *)unint64_t v9 = 136315138;
    swift_retain();
    uint64_t v11 = sub_1ACE76248();
    sub_1ACA3189C(v11, v12, &v13);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v7, v8, "Completed Alignment:\n%s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v10, -1, -1);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }
  else
  {
    swift_release_n();
  }
}

uint64_t sub_1ACA85D88(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1280);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(unsigned char *)(inited + 32) = 0;
  uint64_t v7 = sub_1ACA85900(*(void *)(a3 + 40), *(void *)(a3 + 48), a2);
  uint64_t v8 = sub_1ACA859D4(v7);
  swift_bridgeObjectRelease();
  *(void *)(inited + 40) = v8;
  unint64_t v9 = sub_1ACA3A054(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1288);
  uint64_t result = swift_arrayDestroy();
  *a1 = v9;
  return result;
}

unsigned char *sub_1ACA85E5C(unsigned char *result)
{
  *uint64_t result = 4;
  return result;
}

Swift::Double_optional __swiftcall AssetReaderTimelineAlignment.referenceTimestamp(for:)(Swift::Double a1)
{
  uint64_t v2 = AssetReaderTimelineAlignment.alignments.getter();
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v5 = (double *)(v2 + 56);
    uint64_t v6 = MEMORY[0x1E4FBC860];
    do
    {
      double v10 = *(v5 - 3);
      if (v10 + -0.5 <= a1 && *(v5 - 2) + 0.5 >= a1)
      {
        long long v23 = *((_OWORD *)v5 - 1);
        double v12 = *v5;
        uint64_t v24 = v6;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1ACC82EE8(0, *(void *)(v6 + 16) + 1, 1);
          uint64_t v6 = v24;
        }
        unint64_t v8 = *(void *)(v6 + 16);
        unint64_t v7 = *(void *)(v6 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1ACC82EE8(v7 > 1, v8 + 1, 1);
          uint64_t v6 = v24;
        }
        *(void *)(v6 + 16) = v8 + 1;
        uint64_t v9 = v6 + 32 * v8;
        *(double *)(v9 + 32) = v10;
        *(_OWORD *)(v9 + 40) = v23;
        *(double *)(v9 + 56) = v12;
      }
      v5 += 4;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  int64_t v13 = *(void *)(v6 + 16);
  if (v13)
  {
    uint64_t v24 = v4;
    sub_1ACC82F08(0, v13, 0);
    uint64_t v14 = v4;
    unint64_t v15 = *(void *)(v4 + 16);
    id v16 = (double *)(v6 + 48);
    do
    {
      double v17 = *(v16 - 2);
      double v18 = *v16;
      uint64_t v24 = v14;
      unint64_t v19 = *(void *)(v14 + 24);
      if (v15 >= v19 >> 1)
      {
        sub_1ACC82F08(v19 > 1, v15 + 1, 1);
        uint64_t v14 = v24;
      }
      *(void *)(v14 + 16) = v15 + 1;
      *(double *)(v14 + 8 * v15 + 32) = v17 - v18;
      v16 += 4;
      ++v15;
      --v13;
    }
    while (v13);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  uint64_t v24 = v14;
  swift_bridgeObjectRetain();
  sub_1ACA89044(&v24, sub_1ACBE8078, sub_1ACA89FA4);
  swift_bridgeObjectRelease();
  if (*(void *)(v24 + 16))
  {
    double v20 = *(double *)(v24 + 32);
    swift_release();
    double v21 = a1 - v20;
    double v22 = a1 - v20;
  }
  else
  {
    swift_release();
    LOBYTE(v22) = 0;
  }
  result.value = v21;
  result.is_nil = LOBYTE(v22);
  return result;
}

Swift::Double_optional __swiftcall AssetReaderTimelineAlignment.playerTimestamp(for:)(Swift::Double a1)
{
  if (sub_1ACA861BC())
  {
    uint64_t v3 = AssetReaderTimelineAlignment.alignments.getter();
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      double v5 = 0.0;
      uint64_t v6 = (double *)(v3 + 56);
      char v7 = 1;
      do
      {
        double v8 = *(v6 - 1);
        if (v8 + -0.5 <= a1 && *v6 + 0.5 >= a1)
        {
          double v10 = v8 - *(v6 - 3);
          if ((v7 & 1) != 0 || fabs(v10) < COERCE_DOUBLE(*(void *)&v5 & 0x7FFFFFFFFFFFFFFFLL))
          {
            char v7 = 0;
            double v5 = v10;
          }
          else
          {
            char v7 = 0;
          }
        }
        v6 += 4;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
      double v2 = a1 - v5;
      if (v7) {
        LOBYTE(v11) = LOBYTE(v5);
      }
      else {
        double v11 = a1 - v5;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      LOBYTE(v11) = 0;
    }
  }
  else
  {
    LOBYTE(v11) = LOBYTE(a1);
  }
  result.value = v2;
  result.is_nil = LOBYTE(v11);
  return result;
}

uint64_t sub_1ACA861BC()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  double v2 = v1 + 4;
  uint64_t v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1ACA8ADD8(v2, &v9);
  os_unfair_lock_unlock(v3);
  if (v9 != 4) {
    return 1;
  }
  uint64_t v4 = *(void *)(AssetReaderTimelineAlignment.alignments.getter() + 16);
  swift_bridgeObjectRelease();
  if (v4)
  {
    uint64_t v5 = AssetReaderTimelineAlignment.alignments.getter();
    uint64_t v6 = *(void *)(v5 + 16);
    if (!v6)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return 0;
    }
    char v7 = (double *)(v5 + 56);
    while (vabdd_f64(*(v7 - 1), *(v7 - 3)) <= 0.1 && vabdd_f64(*v7, *(v7 - 2)) <= 0.1)
    {
      v7 += 4;
      if (!--v6) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
  }
  return 2;
}

void *AssetReaderTimelineAlignment.nonMatchingRangesInReference(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)v2;
  uint64_t v7 = *(void *)(AssetReaderTimelineAlignment.alignments.getter() + 16);
  swift_bridgeObjectRelease();
  Swift::Double_optional result = (void *)MEMORY[0x1E4FBC860];
  if (v7)
  {
    long long v41 = (void *)MEMORY[0x1E4FBC860];
    char v9 = *(os_unfair_lock_s **)(v2 + 16);
    unint64_t v10 = (unint64_t)&v9[4];
    double v11 = v9 + 5;
    os_unfair_lock_lock(v9 + 5);
    sub_1ACA8ADD8((unsigned char *)v10, v42);
    os_unfair_lock_unlock(v11);
    if ((v42[0] & 0xFE) == 2) {
      goto LABEL_9;
    }
    uint64_t v12 = AssetReaderTimelineAlignment.alignments.getter();
    if (!*(void *)(v12 + 16))
    {
      swift_bridgeObjectRelease();
LABEL_9:
      double v21 = (os_unfair_lock_s *)v4[3];
      double v22 = (uint64_t *)&v21[4];
      long long v23 = v21 + 6;
      os_unfair_lock_lock(v21 + 6);
      sub_1ACA84918(v22, v42);
      os_unfair_lock_unlock(v23);
      uint64_t v24 = v42[0];
      uint64_t v25 = *(void *)(v42[0] + 16);
      if (v25)
      {
        long long v38 = v11;
        uint64_t v39 = a2;
        uint64_t v26 = 0;
        do
        {
          v40[0] = *(void *)(v24 + 8 * v26 + 32);
          swift_bridgeObjectRetain_n();
          sub_1ACA89044(v40, sub_1ACBE8064, sub_1ACA898CC);
          ++v26;
          swift_bridgeObjectRelease();
          uint64_t v27 = v40[0];
          swift_getKeyPath();
          unint64_t v28 = *(void *)(v27 + 16);
          v42[0] = v27;
          v42[1] = v27 + 32;
          uint64_t v29 = 2 * v28 - 1;
          if (v28 <= 1) {
            uint64_t v29 = 1;
          }
          void v42[2] = 0;
          v42[3] = v29;
          v42[4] = v27;
          v42[5] = v27 + 32;
          v42[6] = v28 != 0;
          v42[7] = (2 * v28) | 1;
          swift_retain_n();
          uint64_t v30 = sub_1ACA8AEE8((uint64_t)v42, (uint64_t (*)(void *, void *))sub_1ACA88CAC);
          uint64_t v31 = sub_1ACA8400C(v30);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          sub_1ACA6EF90(v31);
        }
        while (v25 != v26);
        swift_bridgeObjectRelease();
        a2 = v39;
        double v11 = v38;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      os_unfair_lock_lock(v11);
      sub_1ACA8ADD8((unsigned char *)v10, v40);
      os_unfair_lock_unlock(v11);
      if (LOBYTE(v40[0]) - 2 < 2 || LOBYTE(v40[0]) != 4 && (v40[0] & 1) == 0) {
        return v41;
      }
      if (*(void *)(AssetReaderTimelineAlignment.alignments.getter() + 16))
      {
        swift_bridgeObjectRelease();
        sub_1ACE77D18();
        if (sub_1ACE77CD8())
        {
          uint64_t v32 = sub_1ACE77D18();
          uint64_t v34 = v33;
          if (sub_1ACE77CD8())
          {
            __break(1u);
          }
          else
          {
            uint64_t v4 = v41;
            if (swift_isUniquelyReferenced_nonNull_native())
            {
LABEL_23:
              unint64_t v36 = v4[2];
              unint64_t v35 = v4[3];
              if (v36 >= v35 >> 1) {
                uint64_t v4 = sub_1ACA41C80((void *)(v35 > 1), v36 + 1, 1, v4);
              }
              v4[2] = v36 + 1;
              unint64_t v37 = &v4[4 * v36];
              _OWORD v37[4] = v32;
              v37[5] = v34;
              v37[6] = a1;
              v37[7] = a2;
              return v4;
            }
          }
          uint64_t v4 = sub_1ACA41C80(0, v4[2] + 1, 1, v4);
          goto LABEL_23;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      return v41;
    }
    double v13 = *(double *)(v12 + 48);
    swift_bridgeObjectRelease();
    if (v13 <= 0.0) {
      goto LABEL_9;
    }
    uint64_t v14 = (unsigned char *)v10;
    uint64_t v15 = sub_1ACE77D18();
    uint64_t v17 = v16;
    if (sub_1ACE77CD8())
    {
      __break(1u);
    }
    else
    {
      double v18 = sub_1ACA41C80(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v10 = v18[2];
      unint64_t v19 = v18[3];
      int64_t v3 = v10 + 1;
      if (v10 < v19 >> 1)
      {
LABEL_7:
        id v18[2] = v3;
        double v20 = &v18[4 * v10];
        v20[4] = 0;
        v20[5] = 0;
        v20[6] = v15;
        v20[7] = v17;
        long long v41 = v18;
        unint64_t v10 = (unint64_t)v14;
        goto LABEL_9;
      }
    }
    double v18 = sub_1ACA41C80((void *)(v19 > 1), v3, 1, v18);
    goto LABEL_7;
  }
  return result;
}

void *AssetReaderTimelineAlignment.nonMatchingRangesInPlayer(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)v2;
  unint64_t v7 = *(void *)(AssetReaderTimelineAlignment.alignments.getter() + 16);
  swift_bridgeObjectRelease();
  Swift::Double_optional result = (void *)MEMORY[0x1E4FBC860];
  if (v7)
  {
    id v56 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v9 = AssetReaderTimelineAlignment.alignments.getter();
    if (!*(void *)(v9 + 16))
    {
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    double v10 = *(double *)(v9 + 32);
    swift_bridgeObjectRelease();
    if (v10 <= 0.0) {
      goto LABEL_14;
    }
    double v11 = *(os_unfair_lock_s **)(v2 + 16);
    uint64_t v12 = v11 + 4;
    double v13 = v11 + 5;
    os_unfair_lock_lock(v11 + 5);
    sub_1ACA8ADD8(v12, &v57);
    os_unfair_lock_unlock(v13);
    if ((v57 & 0xFE) == 2)
    {
      uint64_t v14 = (os_unfair_lock_s *)v4[4];
      uint64_t v15 = (uint64_t)&v14[4];
      uint64_t v16 = v14 + 7;
      os_unfair_lock_lock(v14 + 7);
      sub_1ACA8ADE4(v15, (uint64_t)&v57);
      os_unfair_lock_unlock(v16);
      if (v58) {
        goto LABEL_14;
      }
      uint64_t v17 = sub_1ACE77D18();
      uint64_t v19 = v18;
      uint64_t v20 = sub_1ACE77D18();
      uint64_t v22 = v21;
      if (sub_1ACE77CD8())
      {
        __break(1u);
      }
      else
      {
        long long v23 = sub_1ACA41C80(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v7 = v23[2];
        unint64_t v25 = v23[3];
        int64_t v24 = v7 + 1;
        if (v7 < v25 >> 1)
        {
LABEL_8:
          _OWORD v23[2] = v24;
          uint64_t v26 = &v23[4 * v7];
          v26[4] = v17;
          v26[5] = v19;
          v26[6] = v20;
          v26[7] = v22;
LABEL_13:
          id v56 = v23;
LABEL_14:
          uint64_t v32 = (os_unfair_lock_s *)v4[3];
          uint64_t v33 = (uint64_t *)&v32[4];
          uint64_t v34 = v32 + 6;
          os_unfair_lock_lock(v32 + 6);
          sub_1ACA84918(v33, &v57);
          os_unfair_lock_unlock(v34);
          uint64_t v35 = v57;
          uint64_t v36 = *(void *)(v57 + 16);
          if (v36)
          {
            uint64_t v53 = a2;
            uint64_t v37 = 0;
            do
            {
              uint64_t v38 = *(void *)(v35 + 8 * v37++ + 32);
              swift_getKeyPath();
              unint64_t v39 = *(void *)(v38 + 16);
              uint64_t v57 = v38;
              uint64_t v58 = v38 + 32;
              uint64_t v40 = 2 * v39 - 1;
              if (v39 <= 1) {
                uint64_t v40 = 1;
              }
              uint64_t v59 = 0;
              uint64_t v60 = v40;
              uint64_t v61 = v38;
              uint64_t v62 = v38 + 32;
              BOOL v63 = v39 != 0;
              uint64_t v64 = (2 * v39) | 1;
              swift_bridgeObjectRetain_n();
              uint64_t v41 = sub_1ACA8AEE8((uint64_t)&v57, (uint64_t (*)(void *, void *))sub_1ACA88CC0);
              uint64_t v42 = sub_1ACA84120(v41);
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1ACA6EF90(v42);
            }
            while (v36 != v37);
            swift_bridgeObjectRelease();
            a2 = v53;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          id v43 = (os_unfair_lock_s *)v4[2];
          long long v44 = v43 + 4;
          long long v45 = v43 + 5;
          os_unfair_lock_lock(v43 + 5);
          sub_1ACA8ADD8(v44, &v55);
          os_unfair_lock_unlock(v45);
          if (v55 - 2 < 2 || v55 != 4 && (v55 & 1) == 0) {
            return v56;
          }
          if (*(void *)(AssetReaderTimelineAlignment.alignments.getter() + 16))
          {
            swift_bridgeObjectRelease();
            sub_1ACE77D18();
            if (sub_1ACE77CD8())
            {
              uint64_t v46 = sub_1ACE77D18();
              uint64_t v48 = v47;
              if (sub_1ACE77CD8())
              {
                __break(1u);
              }
              else
              {
                uint64_t v4 = v56;
                if (swift_isUniquelyReferenced_nonNull_native())
                {
LABEL_28:
                  unint64_t v50 = v4[2];
                  unint64_t v49 = v4[3];
                  if (v50 >= v49 >> 1) {
                    uint64_t v4 = sub_1ACA41C80((void *)(v49 > 1), v50 + 1, 1, v4);
                  }
                  v4[2] = v50 + 1;
                  uint64_t v51 = &v4[4 * v50];
                  v51[4] = v46;
                  v51[5] = v48;
                  v51[6] = a1;
                  v51[7] = a2;
                  return v4;
                }
              }
              uint64_t v4 = sub_1ACA41C80(0, v4[2] + 1, 1, v4);
              goto LABEL_28;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          return v56;
        }
      }
      int64_t v54 = v24;
      uint64_t v52 = sub_1ACA41C80((void *)(v25 > 1), v24, 1, v23);
      int64_t v24 = v54;
      long long v23 = v52;
      goto LABEL_8;
    }
    uint64_t v27 = sub_1ACE77D18();
    uint64_t v29 = v28;
    if (sub_1ACE77CD8())
    {
      __break(1u);
    }
    else
    {
      long long v23 = sub_1ACA41C80(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v7 = v23[2];
      unint64_t v30 = v23[3];
      int64_t v3 = v7 + 1;
      if (v7 < v30 >> 1)
      {
LABEL_12:
        _OWORD v23[2] = v3;
        uint64_t v31 = &v23[4 * v7];
        v31[4] = 0;
        v31[5] = 0;
        v31[6] = v27;
        v31[7] = v29;
        goto LABEL_13;
      }
    }
    long long v23 = sub_1ACA41C80((void *)(v30 > 1), v3, 1, v23);
    goto LABEL_12;
  }
  return result;
}

uint64_t AssetReaderTimelineAlignment.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation28AssetReaderTimelineAlignment_logger;
  uint64_t v2 = sub_1ACE754C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AssetReaderTimelineAlignment.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation28AssetReaderTimelineAlignment_logger;
  uint64_t v2 = sub_1ACE754C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

BOOL sub_1ACA86C40()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 16);
  uint64_t v2 = v1 + 4;
  int64_t v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1ACA8ADD8(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5 != 4;
}

double sub_1ACA86CAC(Swift::Double a1)
{
  *(void *)&double result = (unint64_t)AssetReaderTimelineAlignment.referenceTimestamp(for:)(a1);
  return result;
}

double sub_1ACA86CD4(Swift::Double a1)
{
  *(void *)&double result = (unint64_t)AssetReaderTimelineAlignment.playerTimestamp(for:)(a1);
  return result;
}

void *sub_1ACA86CFC(uint64_t a1, uint64_t a2)
{
  return AssetReaderTimelineAlignment.nonMatchingRangesInReference(with:)(a1, a2);
}

void *sub_1ACA86D20(uint64_t a1, uint64_t a2)
{
  return AssetReaderTimelineAlignment.nonMatchingRangesInPlayer(with:)(a1, a2);
}

uint64_t AssetReaderTimelineAlignment.debugDescription.getter()
{
  if (*(void *)(AssetReaderTimelineAlignment.alignments.getter() + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
    uint64_t v2 = (uint64_t *)&v1[4];
    int64_t v3 = v1 + 6;
    os_unfair_lock_lock(v1 + 6);
    sub_1ACA84918(v2, &v55);
    os_unfair_lock_unlock(v3);
    int64_t v4 = *(void *)(v55 + 16);
    unint64_t v5 = MEMORY[0x1E4FBC860];
    if (v4)
    {
      unint64_t v55 = MEMORY[0x1E4FBC860];
      sub_1ACC82D44(0, v4, 0);
      uint64_t v6 = 0;
      unint64_t v7 = v55;
      do
      {
        uint64_t v8 = swift_bridgeObjectRetain();
        uint64_t v9 = MEMORY[0x1AD118740](v8, &type metadata for AssetReaderTimelineAlignment.Alignment);
        uint64_t v11 = v10;
        swift_bridgeObjectRelease();
        unint64_t v55 = v7;
        unint64_t v13 = *(void *)(v7 + 16);
        unint64_t v12 = *(void *)(v7 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_1ACC82D44(v12 > 1, v13 + 1, 1);
          unint64_t v7 = v55;
        }
        ++v6;
        *(void *)(v7 + 16) = v13 + 1;
        unint64_t v14 = v7 + 16 * v13;
        *(void *)(v14 + 32) = v9;
        *(void *)(v14 + 40) = v11;
      }
      while (v4 != v6);
      swift_bridgeObjectRelease();
      unint64_t v5 = MEMORY[0x1E4FBC860];
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v7 = MEMORY[0x1E4FBC860];
    }
    unint64_t v55 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
    sub_1ACA8B0C0();
    sub_1ACE76138();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1ACE77D18();
    uint64_t v18 = AssetReaderTimelineAlignment.nonMatchingRangesInPlayer(with:)(v16, v17);
    int64_t v19 = v18[2];
    if (v19)
    {
      unint64_t v57 = v5;
      sub_1ACC82D44(0, v19, 0);
      unint64_t v20 = v57;
      uint64_t v21 = v18 + 7;
      do
      {
        int64_t v53 = v19;
        unint64_t v22 = *(v21 - 3);
        unint64_t v23 = *(v21 - 2);
        uint64_t v24 = *(v21 - 1);
        uint64_t v25 = *v21;
        unint64_t v55 = 0;
        unint64_t v56 = 0xE000000000000000;
        sub_1ACE77268();
        unint64_t v55 = v22;
        unint64_t v56 = v23;
        sub_1ACE77458();
        sub_1ACE762C8();
        sub_1ACE77458();
        swift_bridgeObjectRelease();
        unint64_t v55 = 0;
        unint64_t v56 = 0xE000000000000000;
        sub_1ACE762C8();
        MEMORY[0x1AD119EA0](v24, v25, v22, v23);
        sub_1ACE77CC8();
        sub_1ACE762C8();
        swift_bridgeObjectRelease();
        unint64_t v26 = v55;
        unint64_t v27 = v56;
        unint64_t v57 = v20;
        unint64_t v29 = *(void *)(v20 + 16);
        unint64_t v28 = *(void *)(v20 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_1ACC82D44(v28 > 1, v29 + 1, 1);
          unint64_t v20 = v57;
        }
        v21 += 4;
        *(void *)(v20 + 16) = v29 + 1;
        unint64_t v30 = v20 + 16 * v29;
        *(void *)(v30 + 32) = v26;
        *(void *)(v30 + 40) = v27;
        int64_t v19 = v53 - 1;
      }
      while (v53 != 1);
      swift_bridgeObjectRelease();
      unint64_t v5 = MEMORY[0x1E4FBC860];
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v20 = MEMORY[0x1E4FBC860];
    }
    unint64_t v55 = v20;
    sub_1ACE76138();
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_1ACE77D18();
    uint64_t v33 = AssetReaderTimelineAlignment.nonMatchingRangesInReference(with:)(v31, v32);
    int64_t v34 = v33[2];
    if (v34)
    {
      unint64_t v57 = v5;
      sub_1ACC82D44(0, v34, 0);
      unint64_t v35 = v57;
      uint64_t v36 = v33 + 7;
      do
      {
        int64_t v52 = v34;
        unint64_t v54 = v35;
        unint64_t v37 = *(v36 - 3);
        unint64_t v38 = *(v36 - 2);
        uint64_t v40 = *(v36 - 1);
        uint64_t v39 = *v36;
        unint64_t v55 = 0;
        unint64_t v56 = 0xE000000000000000;
        sub_1ACE77268();
        unint64_t v55 = v37;
        unint64_t v56 = v38;
        sub_1ACE77458();
        sub_1ACE762C8();
        sub_1ACE77458();
        swift_bridgeObjectRelease();
        unint64_t v55 = 0;
        unint64_t v56 = 0xE000000000000000;
        sub_1ACE762C8();
        uint64_t v41 = v40;
        unint64_t v35 = v54;
        MEMORY[0x1AD119EA0](v41, v39, v37, v38);
        sub_1ACE77CC8();
        sub_1ACE762C8();
        swift_bridgeObjectRelease();
        unint64_t v42 = v55;
        unint64_t v43 = v56;
        unint64_t v57 = v54;
        unint64_t v45 = *(void *)(v54 + 16);
        unint64_t v44 = *(void *)(v54 + 24);
        if (v45 >= v44 >> 1)
        {
          sub_1ACC82D44(v44 > 1, v45 + 1, 1);
          unint64_t v35 = v57;
        }
        v36 += 4;
        *(void *)(v35 + 16) = v45 + 1;
        unint64_t v46 = v35 + 16 * v45;
        *(void *)(v46 + 32) = v42;
        *(void *)(v46 + 40) = v43;
        int64_t v34 = v52 - 1;
      }
      while (v52 != 1);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v35 = MEMORY[0x1E4FBC860];
    }
    unint64_t v55 = v35;
    sub_1ACE76138();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_1ACE84470;
    unint64_t v55 = 0;
    unint64_t v56 = 0xE000000000000000;
    sub_1ACE77268();
    swift_bridgeObjectRelease();
    unint64_t v55 = 0xD000000000000011;
    unint64_t v56 = 0x80000001ACEC6330;
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    unint64_t v48 = v56;
    *(void *)(v47 + 32) = v55;
    *(void *)(v47 + 40) = v48;
    unint64_t v55 = 0;
    unint64_t v56 = 0xE000000000000000;
    sub_1ACE77268();
    swift_bridgeObjectRelease();
    unint64_t v55 = 0xD00000000000001BLL;
    unint64_t v56 = 0x80000001ACEC6350;
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    unint64_t v49 = v56;
    *(void *)(v47 + 48) = v55;
    *(void *)(v47 + 56) = v49;
    unint64_t v55 = 0;
    unint64_t v56 = 0xE000000000000000;
    sub_1ACE77268();
    swift_bridgeObjectRelease();
    unint64_t v55 = 0xD00000000000001FLL;
    unint64_t v56 = 0x80000001ACEC6370;
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    unint64_t v50 = v56;
    *(void *)(v47 + 64) = v55;
    *(void *)(v47 + 72) = v50;
    unint64_t v55 = v47;
    uint64_t v15 = sub_1ACE76138();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 1701736270;
  }
  return v15;
}

uint64_t sub_1ACA87414()
{
  return AssetReaderTimelineAlignment.debugDescription.getter();
}

uint64_t AssetReaderTimelineAlignment.Alignment.debugDescription.getter()
{
  double v1 = *v0;
  if (*v0 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v1 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  double v2 = v0[1];
  if (v2 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((uint64_t)v2 < (uint64_t)v1)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  double v3 = v0[2];
  if (v3 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if ((*(void *)&v1 & 0x7FF0000000000000) == 0x7FF0000000000000) {
    goto LABEL_23;
  }
  if ((*(void *)&v2 & 0x7FF0000000000000) == 0x7FF0000000000000) {
    goto LABEL_23;
  }
  if ((*(void *)&v3 & 0x7FF0000000000000) == 0x7FF0000000000000) {
    goto LABEL_23;
  }
  double v4 = v0[3];
  if ((*(void *)&v4 & 0x7FF0000000000000) == 0x7FF0000000000000) {
    goto LABEL_23;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((uint64_t)v4 >= (uint64_t)v3)
  {
    sub_1ACE77268();
    sub_1ACE762C8();
    sub_1ACE77458();
    sub_1ACE762C8();
    sub_1ACE77458();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    sub_1ACE77458();
    sub_1ACE762C8();
    sub_1ACE77458();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    return 0;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t static AssetReaderTimelineAlignment.== infix(_:_:)()
{
  uint64_t v0 = AssetReaderTimelineAlignment.alignments.getter();
  uint64_t v1 = AssetReaderTimelineAlignment.alignments.getter();
  char v2 = sub_1ACA87848(v0, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0) {
    return 0;
  }
  return sub_1ACE77CF8();
}

uint64_t sub_1ACA877A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v9 = 1;
    }
    else
    {
      double v3 = (uint64_t *)(a1 + 32);
      double v4 = (unint64_t *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v7 = *v3++;
        uint64_t v6 = v7;
        unint64_t v8 = *v4++;
        unint64_t v13 = v8;
        uint64_t v14 = v6;
        char v9 = static NSPredicate.EvaluationTree.== infix(_:_:)(&v14, &v13);
        BOOL v11 = v5-- != 0;
      }
      while ((v9 & 1) != 0 && v11);
    }
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_1ACA87830(uint64_t a1, uint64_t a2)
{
  return sub_1ACA87AEC(a1, a2, type metadata accessor for ServerTranscript);
}

uint64_t sub_1ACA87848(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  double v3 = (float64x2_t *)(a1 + 32);
  double v4 = (float64x2_t *)(a2 + 32);
  uint64_t v5 = v2 - 1;
  do
  {
    char v6 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*v3, *v4), (int32x4_t)vceqq_f64(v3[1], v4[1]))), 0xFuLL)));
    BOOL v8 = v5-- != 0;
    if ((v6 & 1) == 0) {
      break;
    }
    v3 += 2;
    v4 += 2;
  }
  while (v8);
  return v6 & 1;
}

uint64_t sub_1ACA878D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  for (uint64_t i = 0; ; i += 56)
  {
    uint64_t v5 = 0;
    uint64_t v6 = a1 + i;
    uint64_t v7 = a2 + i;
    if (*(void *)(a1 + i + 32) != *(void *)(a2 + i + 32) || *(double *)(v6 + 40) != *(double *)(v7 + 40)) {
      break;
    }
    int v8 = *(unsigned __int8 *)(v6 + 48);
    double v9 = *(double *)(v6 + 56);
    char v10 = *(unsigned char *)(v6 + 64);
    double v11 = *(double *)(v6 + 72);
    char v12 = *(unsigned char *)(v6 + 80);
    int v13 = *(unsigned __int8 *)(v7 + 48);
    double v14 = *(double *)(v7 + 56);
    int v15 = *(unsigned __int8 *)(v7 + 64);
    double v16 = *(double *)(v7 + 72);
    int v17 = *(unsigned __int8 *)(v7 + 80);
    if (v8 == 2)
    {
      if (v13 != 2) {
        return 0;
      }
    }
    else
    {
      uint64_t v5 = 0;
      BOOL v18 = (v8 & 1) == 0;
      if (v13 == 2 || ((v18 ^ v13) & 1) == 0) {
        return v5;
      }
    }
    if (v10)
    {
      if (!v15) {
        return 0;
      }
    }
    else
    {
      if (v9 == v14) {
        char v19 = v15;
      }
      else {
        char v19 = 1;
      }
      if (v19) {
        return 0;
      }
    }
    if (v12)
    {
      if (!v17) {
        return 0;
      }
    }
    else
    {
      if (v11 == v16) {
        char v4 = v17;
      }
      else {
        char v4 = 1;
      }
      if (v4) {
        return 0;
      }
    }
    if (!--v2) {
      return 1;
    }
  }
  return v5;
}

BOOL sub_1ACA879C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = v2 - 1;
  char v4 = (double *)(a2 + 40);
  uint64_t v5 = (double *)(a1 + 40);
  do
  {
    BOOL result = *v5 == *v4 && *((void *)v5 - 1) == *((void *)v4 - 1);
    BOOL v9 = v3-- != 0;
    if (!result) {
      break;
    }
    v4 += 2;
    v5 += 2;
  }
  while (v9);
  return result;
}

uint64_t sub_1ACA87A38(uint64_t a1, uint64_t a2)
{
  return sub_1ACA8819C(a1, a2, (uint64_t (*)(void))type metadata accessor for DownloadedAssetEffect, (uint64_t (*)(void))type metadata accessor for DownloadedAssetEffect, (uint64_t (*)(char *, char *))_s18PodcastsFoundation21DownloadedAssetEffectO2eeoiySbAC_ACtFZ_0);
}

BOOL sub_1ACA87A68(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  uint64_t v3 = a1 + 5;
  char v4 = a2 + 5;
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    uint64_t v8 = *v3++;
    uint64_t v7 = v8;
    uint64_t v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1ACA87AD4(uint64_t a1, uint64_t a2)
{
  return sub_1ACA87AEC(a1, a2, (uint64_t (*)(void))sub_1ACA8C10C);
}

uint64_t sub_1ACA87AEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v7 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_1ACE77508();
    swift_bridgeObjectRelease();
    if ((void *)v8 == v9) {
      goto LABEL_5;
    }
    return 0;
  }
  uint64_t v9 = *(void **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((void *)v8 != v9) {
    return 0;
  }
LABEL_5:
  if (!v8) {
    return 1;
  }
  uint64_t v10 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v11 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v10 = a1;
  }
  if (v7) {
    uint64_t v11 = v10;
  }
  uint64_t v12 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v13 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v12 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v13 = v12;
  }
  if (v11 == v13) {
    return 1;
  }
  if (v8 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v25 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = MEMORY[0x1AD119490](0, a1);
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  uint64_t v9 = (void *)result;
  unint64_t v3 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v15 = (id)MEMORY[0x1AD119490](0, a2);
LABEL_22:
    double v16 = v15;
    a3 = (uint64_t (*)(void))a3(0);
    char v17 = sub_1ACE76F68();

    if (v17)
    {
      uint64_t v18 = 1 - v8;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v8 = v18 + i == 5;
        if (v18 + i == 5) {
          return v8;
        }
        unint64_t v23 = i - 4;
        if (v25)
        {
          id v24 = (id)MEMORY[0x1AD119490](i - 4, a1);
          if (v3) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v23 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          id v24 = *(id *)(a1 + 8 * i);
          if (v3)
          {
LABEL_24:
            id v20 = (id)MEMORY[0x1AD119490](i - 4, a2);
            goto LABEL_25;
          }
        }
        if (v23 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v20 = *(id *)(a2 + 8 * i);
LABEL_25:
        uint64_t v21 = v20;
        char v22 = sub_1ACE76F68();

        if ((v22 & 1) == 0) {
          return v8;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v15 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACA87D64(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1ACE77848(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1ACE77848() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1ACA87E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v22 = a2 + 32;
    uint64_t v23 = a1 + 32;
    while (1)
    {
      uint64_t v4 = v23 + 32 * v3;
      uint64_t v5 = v22 + 32 * v3;
      if (*(double *)v4 != *(double *)v5 || *(double *)(v4 + 8) != *(double *)(v5 + 8)) {
        return 0;
      }
      uint64_t v7 = *(void *)(v4 + 16);
      uint64_t v8 = *(void *)(v5 + 16);
      uint64_t v9 = *(void *)(v7 + 16);
      if (v9 != *(void *)(v8 + 16)) {
        return 0;
      }
      int v10 = *(unsigned __int8 *)(v4 + 24);
      int v11 = *(unsigned __int8 *)(v5 + 24);
      if (v9) {
        BOOL v12 = v7 == v8;
      }
      else {
        BOOL v12 = 1;
      }
      if (!v12)
      {
        uint64_t v14 = 0;
        do
        {
          uint64_t v15 = v7 + v14;
          uint64_t v16 = v8 + v14;
          if (*(double *)(v7 + v14 + 32) != *(double *)(v8 + v14 + 32)
            || *(double *)(v7 + v14 + 40) != *(double *)(v8 + v14 + 40))
          {
            return 0;
          }
          int v18 = *(unsigned __int8 *)(v15 + 64);
          int v19 = *(unsigned __int8 *)(v16 + 64);
          if (*(void *)(v15 + 48) == *(void *)(v16 + 48) && *(void *)(v15 + 56) == *(void *)(v16 + 56))
          {
            if (v18 != v19) {
              return 0;
            }
          }
          else
          {
            char v21 = sub_1ACE77848();
            uint64_t result = 0;
            if (v21 & 1) == 0 || ((v18 ^ v19)) {
              return result;
            }
          }
          v14 += 40;
        }
        while (--v9);
      }
      if (v10 != v11) {
        return 0;
      }
      ++v3;
      uint64_t result = 1;
      if (v3 == v2) {
        return result;
      }
    }
  }
  return 1;
}

uint64_t sub_1ACA87F88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    for (uint64_t i = 0; ; i += 40)
    {
      uint64_t v6 = a1 + i;
      uint64_t v7 = a2 + i;
      if (*(double *)(a1 + i + 32) != *(double *)(a2 + i + 32) || *(double *)(a1 + i + 40) != *(double *)(a2 + i + 40)) {
        break;
      }
      int v9 = *(unsigned __int8 *)(v6 + 64);
      int v10 = *(unsigned __int8 *)(v7 + 64);
      if (*(void *)(v6 + 48) == *(void *)(v7 + 48) && *(void *)(v6 + 56) == *(void *)(v7 + 56))
      {
        if (v9 != v10) {
          return 0;
        }
      }
      else
      {
        char v12 = sub_1ACE77848();
        uint64_t result = 0;
        if (v12 & 1) == 0 || ((v9 ^ v10)) {
          return result;
        }
      }
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1ACA88058(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    for (uint64_t i = 0; ; i += 40)
    {
      uint64_t v6 = (void *)(a1 + i);
      uint64_t v7 = (void *)(a2 + i);
      int32x2_t v8 = vmovn_s64(vceqq_f64(*(float64x2_t *)(a1 + i + 32), *(float64x2_t *)(a2 + i + 32)));
      if ((v8.i32[0] & v8.i32[1] & 1) == 0) {
        break;
      }
      uint64_t v9 = v6[7];
      uint64_t v10 = v6[8];
      uint64_t v11 = v7[7];
      uint64_t v12 = v7[8];
      if (v9)
      {
        if (!v11) {
          return 0;
        }
        BOOL v13 = v6[6] == v7[6] && v9 == v11;
        if (!v13 && (sub_1ACE77848() & 1) == 0) {
          return 0;
        }
      }
      else if (v11)
      {
        return 0;
      }
      if ((sub_1ACA87E2C(v10, v12) & 1) == 0) {
        return 0;
      }
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1ACA88134(uint64_t a1, uint64_t a2)
{
  return sub_1ACA88490(a1, a2, MEMORY[0x1E4F276F0], &qword_1EB770E98, MEMORY[0x1E4F276F0], MEMORY[0x1E4F27708]);
}

uint64_t sub_1ACA8816C(uint64_t a1, uint64_t a2)
{
  return sub_1ACA8819C(a1, a2, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot, (uint64_t (*)(char *, char *))static PodcastsMediaLibrary.MediaItemSnapshot.== infix(_:_:));
}

uint64_t sub_1ACA8819C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, char *))
{
  uint64_t v9 = a3(0) - 8;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16 == *(void *)(a2 + 16))
  {
    if (!v16 || a1 == a2)
    {
      char v20 = 1;
    }
    else
    {
      unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v18 = *(void *)(v13 + 72);
      uint64_t v19 = v16 - 1;
      do
      {
        sub_1ACA8C210(a1 + v17, (uint64_t)v15, a4);
        sub_1ACA8C210(a2 + v17, (uint64_t)v12, a4);
        char v20 = a5(v15, v12);
        sub_1ACA8C278((uint64_t)v12, a4);
        sub_1ACA8C278((uint64_t)v15, a4);
        BOOL v22 = v19-- != 0;
        if ((v20 & 1) == 0) {
          break;
        }
        v17 += v18;
      }
      while (v22);
    }
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_1ACA88324(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned char *)(a2 + 64);
    uint64_t v4 = (unsigned char *)(a1 + 64);
    do
    {
      uint64_t v5 = *((void *)v4 - 4);
      uint64_t v6 = *((void *)v3 - 4);
      uint64_t v8 = *((void *)v3 - 2);
      uint64_t v7 = *((void *)v3 - 1);
      if (*v4 == 1)
      {
        if ((*v3 & 1) == 0) {
          goto LABEL_23;
        }
        uint64_t v9 = *((void *)v4 - 2);
        uint64_t v10 = *((void *)v4 - 1);
        BOOL v11 = v5 == v6 && *((void *)v4 - 3) == *((void *)v3 - 3);
        if (!v11 && (sub_1ACE77848() & 1) == 0) {
          return 0;
        }
        BOOL v12 = v9 == v8 && v10 == v7;
        if (!v12 && (sub_1ACE77848() & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (*v3) {
          return 0;
        }
        if (v5 != v6)
        {
LABEL_23:
          sub_1ACA626E4(*((void *)v3 - 4), *((void *)v3 - 3), *((void *)v3 - 2), *((void *)v3 - 1), 0);
          return 0;
        }
        sub_1ACA626E4(v5, *((void *)v3 - 3), *((void *)v3 - 2), *((void *)v3 - 1), 0);
      }
      v3 += 40;
      v4 += 40;
      --v2;
    }
    while (v2);
  }
  return 1;
}

BOOL sub_1ACA88444(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + 16) == *(void *)(a2 + 16);
}

uint64_t sub_1ACA88458(uint64_t a1, uint64_t a2)
{
  return sub_1ACA88490(a1, a2, MEMORY[0x1E4F26EA0], &qword_1E99F1278, MEMORY[0x1E4F26EA0], MEMORY[0x1E4F26EA8]);
}

uint64_t sub_1ACA88490(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v37 = a6;
  uint64_t v10 = a3(0);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16 == *(void *)(a2 + 16))
  {
    if (!v16 || a1 == a2)
    {
      char v24 = 1;
    }
    else
    {
      unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
      uint64_t v18 = v12 + 16;
      int64_t v34 = v19;
      unint64_t v35 = v13;
      uint64_t v30 = *(void *)(v18 + 56);
      uint64_t v31 = a2;
      uint64_t v36 = v18;
      uint64_t v32 = a1;
      uint64_t v33 = (void (**)(char *, uint64_t))(v18 - 8);
      uint64_t v20 = v16 - 1;
      do
      {
        char v21 = v34;
        v34(v15, a1 + v17, v10);
        BOOL v22 = v15;
        uint64_t v23 = v35;
        v21(v35, a2 + v17, v10);
        sub_1ACA8C0A8(a4, a5);
        char v24 = sub_1ACE76168();
        unint64_t v25 = *v33;
        unint64_t v26 = v23;
        uint64_t v15 = v22;
        (*v33)(v26, v10);
        v25(v22, v10);
        BOOL v28 = v20-- != 0;
        if ((v24 & 1) == 0) {
          break;
        }
        v17 += v30;
        a2 = v31;
        a1 = v32;
      }
      while (v28);
    }
  }
  else
  {
    char v24 = 0;
  }
  return v24 & 1;
}

uint64_t sub_1ACA886A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = (uint64_t *)(a2 + 40);
    for (uint64_t i = (uint64_t *)(a1 + 40); *(i - 1) == *(v3 - 1); i += 2)
    {
      uint64_t v5 = *i;
      uint64_t v6 = *v3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v7 = sub_1ACA87AEC(v5, v6, (uint64_t (*)(void))sub_1ACA8C10C);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v7 & 1) == 0) {
        break;
      }
      v3 += 2;
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1ACA88774()
{
  uint64_t v0 = AssetReaderTimelineAlignment.alignments.getter();
  uint64_t v1 = AssetReaderTimelineAlignment.alignments.getter();
  char v2 = sub_1ACA87848(v0, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0) {
    return 0;
  }
  return sub_1ACE77CF8();
}

uint64_t sub_1ACA88814()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACA8886C()
{
  return sub_1ACE76108();
}

uint64_t sub_1ACA88888()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACA888DC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1ACA88930(void *a1@<X8>)
{
  *a1 = 0x6E656D6E67696C61;
  a1[1] = 0xEA00000000007374;
}

uint64_t sub_1ACA88950()
{
  return 0x6E656D6E67696C61;
}

uint64_t sub_1ACA8896C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1ACA889C4(uint64_t a1)
{
  unint64_t v2 = sub_1ACA8B11C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACA88A00(uint64_t a1)
{
  unint64_t v2 = sub_1ACA8B11C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AssetReaderTimelineAlignment.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1208);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACA8B11C();
  sub_1ACE77C78();
  v7[1] = AssetReaderTimelineAlignment.alignments.getter();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0D88);
  sub_1ACA8C14C(&qword_1E99F1218, (void (*)(void))sub_1ACA8B170);
  sub_1ACE77788();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t AssetReaderTimelineAlignment.__allocating_init(from:)(void *a1)
{
  return sub_1ACA8B2D8(a1);
}

uint64_t sub_1ACA88BE8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1ACA8B2D8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1ACA88C14(void *a1)
{
  return AssetReaderTimelineAlignment.encode(to:)(a1);
}

uint64_t AssetReaderTimelineAlignment.inMemorySize.getter()
{
  unint64_t v0 = *(void *)(AssetReaderTimelineAlignment.alignments.getter() + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (!(v0 >> 59)) {
    return 32 * v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACA88C70()
{
  unint64_t v0 = *(void *)(AssetReaderTimelineAlignment.alignments.getter() + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (!(v0 >> 59)) {
    return 32 * v0;
  }
  __break(1u);
  return result;
}

BOOL sub_1ACA88CAC(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 24) < *(double *)(a2 + 16);
}

BOOL sub_1ACA88CC0(uint64_t a1, double *a2)
{
  return *(double *)(a1 + 8) < *a2;
}

uint64_t sub_1ACA88CD4(double *a1)
{
  uint64_t v2 = v1;
  double v4 = *a1;
  double v3 = a1[1];
  double v6 = a1[2];
  double v5 = a1[3];
  char v7 = *v1;
  uint64_t v8 = v7[2];
  if (v8)
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = 0;
    uint64_t v10 = v8 - 1;
    uint64_t v11 = 7;
    while (1)
    {
      double v12 = *(double *)&v7[v11 - 3];
      double v13 = *(double *)&v7[v11 - 2];
      double v14 = *(double *)&v7[v11 - 1];
      double v15 = *(double *)&v7[v11];
      uint64_t v16 = sub_1ACE77CB8();
      double v17 = v12 - (double)v16;
      double v18 = v13 + (double)v16;
      double v19 = v4 - (double)v16;
      double v20 = v3 + (double)v16;
      if (v17 > v18 || v19 > v20)
      {
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      BOOL v22 = v19 == v20 || v17 == v18;
      BOOL v23 = !v22 && v20 > v17;
      if (v23 && v18 > v19)
      {
        uint64_t v25 = sub_1ACE77CB8();
        double v26 = v14 - (double)v25;
        double v27 = v15 + (double)v25;
        double v28 = v6 - (double)v25;
        double v29 = v5 + (double)v25;
        if (v26 > v27 || v28 > v29) {
          goto LABEL_47;
        }
        BOOL v31 = v29 > v26 && v27 > v28;
        BOOL v32 = !v31 || v26 == v27;
        if (!v32 && v28 != v29) {
          break;
        }
      }
      if (v10 == v9) {
        goto LABEL_36;
      }
      ++v9;
      v11 += 4;
      if (v9 >= v7[2])
      {
        __break(1u);
LABEL_36:
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
    }
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    sub_1ACA88F54();
    uint64_t v45 = v38;
    uint64_t v46 = v37;
    swift_release();
    swift_getKeyPath();
    sub_1ACA88F54();
    uint64_t v40 = v39;
    uint64_t v42 = v41;
    swift_release();
    char v7 = *v2;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1ACDE6EE0(v7);
      char v7 = (void *)result;
    }
    if (v9 < v7[2])
    {
      unint64_t v44 = &v7[v11];
      *(v44 - 3) = v46;
      *(v44 - 2) = v45;
      *(v44 - 1) = v40;
      *unint64_t v44 = v42;
      goto LABEL_41;
    }
    __break(1u);
  }
  else
  {
LABEL_37:
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
LABEL_48:
      uint64_t result = (uint64_t)sub_1ACA414E4(0, v7[2] + 1, 1, v7);
      char v7 = (void *)result;
    }
    unint64_t v35 = v7[2];
    unint64_t v34 = v7[3];
    if (v35 >= v34 >> 1)
    {
      uint64_t result = (uint64_t)sub_1ACA414E4((void *)(v34 > 1), v35 + 1, 1, v7);
      char v7 = (void *)result;
    }
    void v7[2] = v35 + 1;
    uint64_t v36 = (double *)&v7[4 * v35];
    void v36[4] = v4;
    v36[5] = v3;
    v36[6] = v6;
    v36[7] = v5;
LABEL_41:
    *uint64_t v2 = v7;
  }
  return result;
}

uint64_t sub_1ACA88F54()
{
  swift_getAtKeyPath();
  double v0 = v5;
  swift_getAtKeyPath();
  if (v3 < v5) {
    double v0 = v3;
  }
  swift_getAtKeyPath();
  uint64_t result = swift_getAtKeyPath();
  if (v6 > v4) {
    double v2 = v6;
  }
  else {
    double v2 = v4;
  }
  if (v0 > v2) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACA89044(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_1ACA890C8(int64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!result || a1 > *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v3 + 16) <= a1) {
      int64_t v5 = a1;
    }
    else {
      int64_t v5 = *(void *)(v3 + 16);
    }
    return sub_1ACC82D44(result, v5, 0);
  }
  return result;
}

uint64_t sub_1ACA89140()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *double v0 = v1;
  if ((result & 1) == 0)
  {
    int64_t v3 = *(void *)(v1 + 16) + 1;
    return sub_1ACC82D44(0, v3, 1);
  }
  return result;
}

uint64_t sub_1ACA8919C(uint64_t result)
{
  unint64_t v2 = *(void *)(*(void *)v1 + 24);
  if (result + 1 > (uint64_t)(v2 >> 1)) {
    return sub_1ACC82D44(v2 > 1, result + 1, 1);
  }
  return result;
}

uint64_t sub_1ACA891C4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 16) = result + 1;
  uint64_t v5 = v4 + 16 * result;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 40) = a3;
  return result;
}

uint64_t sub_1ACA891DC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1ACE777B8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v89 = *a1;
      uint64_t v90 = -1;
      uint64_t v91 = 1;
      uint64_t v92 = *a1;
      do
      {
        double v93 = *(double *)(v89 + 32 * v91);
        uint64_t v94 = v90;
        uint64_t v95 = v92;
        do
        {
          if (v93 >= *(double *)v95) {
            break;
          }
          if (!v89) {
            goto LABEL_141;
          }
          uint64_t v96 = *(void *)(v95 + 56);
          long long v97 = *(_OWORD *)(v95 + 40);
          long long v98 = *(_OWORD *)(v95 + 16);
          *(_OWORD *)(v95 + 32) = *(_OWORD *)v95;
          *(_OWORD *)(v95 + 48) = v98;
          *(double *)uint64_t v95 = v93;
          *(_OWORD *)(v95 + 8) = v97;
          *(void *)(v95 + 24) = v96;
          v95 -= 32;
        }
        while (!__CFADD__(v94++, 1));
        ++v91;
        v92 += 32;
        --v90;
      }
      while (v91 != v3);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v6 = result;
  uint64_t v109 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (double *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      double v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v100 = v12;
      uint64_t v111 = v9;
      if (v13 >= 2)
      {
        uint64_t v101 = *v109;
        do
        {
          unint64_t v102 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v101) {
            goto LABEL_145;
          }
          uint64_t v103 = v100;
          uint64_t v104 = *(void *)&v100[16 * v102 + 32];
          uint64_t v105 = *(void *)&v100[16 * v13 + 24];
          sub_1ACA8A650((double *)(v101 + 32 * v104), (double *)(v101 + 32 * *(void *)&v100[16 * v13 + 16]), v101 + 32 * v105, __dst);
          if (v1) {
            break;
          }
          if (v105 < v104) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v103 = sub_1ACBE8028((uint64_t)v103);
          }
          if (v102 >= *((void *)v103 + 2)) {
            goto LABEL_134;
          }
          uint64_t v106 = &v103[16 * v102 + 32];
          *(void *)uint64_t v106 = v104;
          *((void *)v106 + 1) = v105;
          unint64_t v107 = *((void *)v103 + 2);
          if (v13 > v107) {
            goto LABEL_135;
          }
          memmove(&v103[16 * v13 + 16], &v103[16 * v13 + 32], 16 * (v107 - v13));
          uint64_t v100 = v103;
          *((void *)v103 + 2) = v107 - 1;
          unint64_t v13 = v107 - 1;
        }
        while (v107 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v111 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v111 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1ACE76608();
    *(void *)(v8 + 16) = v7;
    uint64_t v111 = v8;
    __dst = (double *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v110 = *a1 + 64;
  uint64_t v108 = *a1 + 24;
  double v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v112 = v6;
  uint64_t v113 = v3;
  uint64_t v114 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 32 * v10);
      uint64_t v16 = 32 * v14;
      double v17 = *(double *)(v11 + 32 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        double v18 = (double *)(v110 + 32 * v14);
        double v19 = v15;
        while (1)
        {
          double v20 = v19;
          double v19 = *v18;
          if (v15 < v17 == *v18 >= v20) {
            break;
          }
          ++v10;
          v18 += 4;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v21 = 32 * v10;
          uint64_t v22 = v10;
          uint64_t v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              char v24 = (_OWORD *)(v11 + v16);
              uint64_t v25 = v11 + v21;
              long long v26 = *(_OWORD *)(v11 + v16);
              long long v27 = *(_OWORD *)(v11 + v16 + 16);
              long long v28 = *(_OWORD *)(v11 + v21 - 16);
              _OWORD *v24 = *(_OWORD *)(v11 + v21 - 32);
              v24[1] = v28;
              *(_OWORD *)(v25 - 32) = v26;
              *(_OWORD *)(v25 - 16) = v27;
            }
            ++v23;
            v21 -= 32;
            v16 += 32;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v29 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v29 >= v3) {
      uint64_t v29 = v3;
    }
    if (v29 < v14) {
      break;
    }
    if (v10 != v29)
    {
      uint64_t v30 = v108 + 32 * v10;
      do
      {
        double v31 = *(double *)(v11 + 32 * v10);
        uint64_t v32 = v14;
        uint64_t v33 = v30;
        do
        {
          unint64_t v34 = (long long *)(v33 - 56);
          if (v31 >= *(double *)(v33 - 56)) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          long long v36 = *v34;
          long long v35 = *(_OWORD *)(v33 - 40);
          *(void *)(v33 - 32) = *(void *)v33;
          v33 -= 32;
          long long v37 = *(_OWORD *)(v33 + 16);
          v34[2] = v36;
          v34[3] = v35;
          *(double *)(v33 - 24) = v31;
          *(_OWORD *)(v33 - 16) = v37;
          ++v32;
        }
        while (v10 != v32);
        ++v10;
        v30 += 32;
      }
      while (v10 != v29);
      uint64_t v10 = v29;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v12 = sub_1ACBE7A88(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v39 = *((void *)v12 + 2);
    unint64_t v38 = *((void *)v12 + 3);
    unint64_t v13 = v39 + 1;
    uint64_t v11 = v114;
    if (v39 >= v38 >> 1)
    {
      uint64_t v88 = sub_1ACBE7A88((char *)(v38 > 1), v39 + 1, 1, v12);
      uint64_t v11 = v114;
      double v12 = v88;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v40 = v12 + 32;
    uint64_t v41 = &v12[16 * v39 + 32];
    *(void *)uint64_t v41 = v14;
    *((void *)v41 + 1) = v10;
    if (v39)
    {
      while (1)
      {
        unint64_t v42 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v47 = &v40[16 * v13];
          uint64_t v48 = *((void *)v47 - 8);
          uint64_t v49 = *((void *)v47 - 7);
          BOOL v53 = __OFSUB__(v49, v48);
          uint64_t v50 = v49 - v48;
          if (v53) {
            goto LABEL_120;
          }
          uint64_t v52 = *((void *)v47 - 6);
          uint64_t v51 = *((void *)v47 - 5);
          BOOL v53 = __OFSUB__(v51, v52);
          uint64_t v45 = v51 - v52;
          char v46 = v53;
          if (v53) {
            goto LABEL_121;
          }
          unint64_t v54 = v13 - 2;
          unint64_t v55 = &v40[16 * v13 - 32];
          uint64_t v57 = *(void *)v55;
          uint64_t v56 = *((void *)v55 + 1);
          BOOL v53 = __OFSUB__(v56, v57);
          uint64_t v58 = v56 - v57;
          if (v53) {
            goto LABEL_123;
          }
          BOOL v53 = __OFADD__(v45, v58);
          uint64_t v59 = v45 + v58;
          if (v53) {
            goto LABEL_126;
          }
          if (v59 >= v50)
          {
            uint64_t v77 = &v40[16 * v42];
            uint64_t v79 = *(void *)v77;
            uint64_t v78 = *((void *)v77 + 1);
            BOOL v53 = __OFSUB__(v78, v79);
            uint64_t v80 = v78 - v79;
            if (v53) {
              goto LABEL_130;
            }
            BOOL v70 = v45 < v80;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v71 = *((void *)v12 + 4);
            uint64_t v72 = *((void *)v12 + 5);
            BOOL v53 = __OFSUB__(v72, v71);
            uint64_t v64 = v72 - v71;
            char v65 = v53;
            goto LABEL_77;
          }
          uint64_t v44 = *((void *)v12 + 4);
          uint64_t v43 = *((void *)v12 + 5);
          BOOL v53 = __OFSUB__(v43, v44);
          uint64_t v45 = v43 - v44;
          char v46 = v53;
        }
        if (v46) {
          goto LABEL_122;
        }
        unint64_t v54 = v13 - 2;
        uint64_t v60 = &v40[16 * v13 - 32];
        uint64_t v62 = *(void *)v60;
        uint64_t v61 = *((void *)v60 + 1);
        BOOL v63 = __OFSUB__(v61, v62);
        uint64_t v64 = v61 - v62;
        char v65 = v63;
        if (v63) {
          goto LABEL_125;
        }
        int64_t v66 = &v40[16 * v42];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v53 = __OFSUB__(v67, v68);
        uint64_t v69 = v67 - v68;
        if (v53) {
          goto LABEL_128;
        }
        if (__OFADD__(v64, v69)) {
          goto LABEL_129;
        }
        if (v64 + v69 >= v45)
        {
          BOOL v70 = v45 < v69;
LABEL_83:
          if (v70) {
            unint64_t v42 = v54;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v65) {
          goto LABEL_124;
        }
        unint64_t v73 = &v40[16 * v42];
        uint64_t v75 = *(void *)v73;
        uint64_t v74 = *((void *)v73 + 1);
        BOOL v53 = __OFSUB__(v74, v75);
        uint64_t v76 = v74 - v75;
        if (v53) {
          goto LABEL_127;
        }
        if (v76 < v64) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v81 = v42 - 1;
        if (v42 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v82 = v12;
        uint64_t v83 = &v40[16 * v81];
        uint64_t v84 = *(void *)v83;
        uint64_t v85 = &v40[16 * v42];
        uint64_t v86 = *((void *)v85 + 1);
        sub_1ACA8A650((double *)(v11 + 32 * *(void *)v83), (double *)(v11 + 32 * *(void *)v85), v11 + 32 * v86, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v86 < v84) {
          goto LABEL_117;
        }
        if (v42 > *((void *)v82 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v83 = v84;
        *(void *)&v40[16 * v81 + 8] = v86;
        unint64_t v87 = *((void *)v82 + 2);
        if (v42 >= v87) {
          goto LABEL_119;
        }
        double v12 = v82;
        unint64_t v13 = v87 - 1;
        memmove(&v40[16 * v42], v85 + 16, 16 * (v87 - 1 - v42));
        *((void *)v82 + 2) = v87 - 1;
        uint64_t v11 = v114;
        if (v87 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v112;
    uint64_t v3 = v113;
    if (v10 >= v113)
    {
      uint64_t v9 = v111;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

uint64_t sub_1ACA898CC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1ACE777B8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v88 = *a1;
      uint64_t v89 = *a1 + 32;
      uint64_t v90 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v92 = *(double *)(v88 + 32 * i + 16);
        uint64_t v93 = v90;
        uint64_t v94 = v89;
        do
        {
          if (v92 >= *(double *)(v94 - 16)) {
            break;
          }
          if (!v88) {
            goto LABEL_141;
          }
          uint64_t v95 = *(void *)(v94 + 24);
          long long v96 = *(_OWORD *)v94;
          long long v97 = *(_OWORD *)(v94 - 16);
          *(_OWORD *)uint64_t v94 = *(_OWORD *)(v94 - 32);
          *(_OWORD *)(v94 + 16) = v97;
          *(double *)(v94 - 16) = v92;
          *(void *)(v94 - 8) = v95;
          *(_OWORD *)(v94 - 32) = v96;
          v94 -= 32;
        }
        while (!__CFADD__(v93++, 1));
        v89 += 32;
        --v90;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v6 = result;
  unint64_t v107 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (double *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      double v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v99 = v12;
      uint64_t v109 = v9;
      if (v13 >= 2)
      {
        uint64_t v100 = *v107;
        do
        {
          unint64_t v101 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v100) {
            goto LABEL_145;
          }
          unint64_t v102 = v99;
          uint64_t v103 = *(void *)&v99[16 * v101 + 32];
          uint64_t v104 = *(void *)&v99[16 * v13 + 24];
          sub_1ACA8A8CC((double *)(v100 + 32 * v103), (double *)(v100 + 32 * *(void *)&v99[16 * v13 + 16]), v100 + 32 * v104, __dst);
          if (v1) {
            break;
          }
          if (v104 < v103) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v102 = sub_1ACBE8028((uint64_t)v102);
          }
          if (v101 >= *((void *)v102 + 2)) {
            goto LABEL_134;
          }
          uint64_t v105 = &v102[16 * v101 + 32];
          *(void *)uint64_t v105 = v103;
          *((void *)v105 + 1) = v104;
          unint64_t v106 = *((void *)v102 + 2);
          if (v13 > v106) {
            goto LABEL_135;
          }
          memmove(&v102[16 * v13 + 16], &v102[16 * v13 + 32], 16 * (v106 - v13));
          uint64_t v99 = v102;
          *((void *)v102 + 2) = v106 - 1;
          unint64_t v13 = v106 - 1;
        }
        while (v106 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v109 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v109 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1ACE76608();
    *(void *)(v8 + 16) = v7;
    uint64_t v109 = v8;
    __dst = (double *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v108 = *a1 + 80;
  double v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v110 = v6;
  uint64_t v111 = v3;
  uint64_t v112 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 32 * v10 + 16);
      double v16 = *(double *)(v11 + 32 * v14 + 16);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        double v17 = (double *)(v108 + 32 * v14);
        double v18 = v15;
        while (1)
        {
          double v19 = v18;
          double v18 = *v17;
          if (v15 < v16 == *v17 >= v19) {
            break;
          }
          ++v10;
          v17 += 4;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 32 * v10;
          uint64_t v21 = 32 * v14;
          uint64_t v22 = v10;
          uint64_t v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              char v24 = (_OWORD *)(v11 + v21);
              uint64_t v25 = v11 + v20;
              long long v26 = *(_OWORD *)(v11 + v21);
              long long v27 = *(_OWORD *)(v11 + v21 + 16);
              long long v28 = *(_OWORD *)(v11 + v20 - 16);
              _OWORD *v24 = *(_OWORD *)(v11 + v20 - 32);
              v24[1] = v28;
              *(_OWORD *)(v25 - 32) = v26;
              *(_OWORD *)(v25 - 16) = v27;
            }
            ++v23;
            v20 -= 32;
            v21 += 32;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v29 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v29 >= v3) {
      uint64_t v29 = v3;
    }
    if (v29 < v14) {
      break;
    }
    if (v10 != v29)
    {
      uint64_t v30 = (double *)(v11 + 32 * v10);
      do
      {
        double v31 = *(double *)(v11 + 32 * v10 + 16);
        uint64_t v32 = v14;
        uint64_t v33 = v30;
        do
        {
          if (v31 >= *(v33 - 2)) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          uint64_t v34 = *((void *)v33 + 3);
          long long v35 = *(_OWORD *)v33;
          long long v36 = *((_OWORD *)v33 - 1);
          *(_OWORD *)uint64_t v33 = *((_OWORD *)v33 - 2);
          *((_OWORD *)v33 + 1) = v36;
          *(v33 - 2) = v31;
          *((void *)v33 - 1) = v34;
          *((_OWORD *)v33 - 2) = v35;
          v33 -= 4;
          ++v32;
        }
        while (v10 != v32);
        ++v10;
        v30 += 4;
      }
      while (v10 != v29);
      uint64_t v10 = v29;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v12 = sub_1ACBE7A88(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v38 = *((void *)v12 + 2);
    unint64_t v37 = *((void *)v12 + 3);
    unint64_t v13 = v38 + 1;
    uint64_t v11 = v112;
    if (v38 >= v37 >> 1)
    {
      unint64_t v87 = sub_1ACBE7A88((char *)(v37 > 1), v38 + 1, 1, v12);
      uint64_t v11 = v112;
      double v12 = v87;
    }
    *((void *)v12 + 2) = v13;
    unint64_t v39 = v12 + 32;
    uint64_t v40 = &v12[16 * v38 + 32];
    *(void *)uint64_t v40 = v14;
    *((void *)v40 + 1) = v10;
    if (v38)
    {
      while (1)
      {
        unint64_t v41 = v13 - 1;
        if (v13 >= 4)
        {
          char v46 = &v39[16 * v13];
          uint64_t v47 = *((void *)v46 - 8);
          uint64_t v48 = *((void *)v46 - 7);
          BOOL v52 = __OFSUB__(v48, v47);
          uint64_t v49 = v48 - v47;
          if (v52) {
            goto LABEL_120;
          }
          uint64_t v51 = *((void *)v46 - 6);
          uint64_t v50 = *((void *)v46 - 5);
          BOOL v52 = __OFSUB__(v50, v51);
          uint64_t v44 = v50 - v51;
          char v45 = v52;
          if (v52) {
            goto LABEL_121;
          }
          unint64_t v53 = v13 - 2;
          unint64_t v54 = &v39[16 * v13 - 32];
          uint64_t v56 = *(void *)v54;
          uint64_t v55 = *((void *)v54 + 1);
          BOOL v52 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          if (v52) {
            goto LABEL_123;
          }
          BOOL v52 = __OFADD__(v44, v57);
          uint64_t v58 = v44 + v57;
          if (v52) {
            goto LABEL_126;
          }
          if (v58 >= v49)
          {
            uint64_t v76 = &v39[16 * v41];
            uint64_t v78 = *(void *)v76;
            uint64_t v77 = *((void *)v76 + 1);
            BOOL v52 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            if (v52) {
              goto LABEL_130;
            }
            BOOL v69 = v44 < v79;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v70 = *((void *)v12 + 4);
            uint64_t v71 = *((void *)v12 + 5);
            BOOL v52 = __OFSUB__(v71, v70);
            uint64_t v63 = v71 - v70;
            char v64 = v52;
            goto LABEL_77;
          }
          uint64_t v43 = *((void *)v12 + 4);
          uint64_t v42 = *((void *)v12 + 5);
          BOOL v52 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          char v45 = v52;
        }
        if (v45) {
          goto LABEL_122;
        }
        unint64_t v53 = v13 - 2;
        uint64_t v59 = &v39[16 * v13 - 32];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v62 = __OFSUB__(v60, v61);
        uint64_t v63 = v60 - v61;
        char v64 = v62;
        if (v62) {
          goto LABEL_125;
        }
        char v65 = &v39[16 * v41];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v52 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v52) {
          goto LABEL_128;
        }
        if (__OFADD__(v63, v68)) {
          goto LABEL_129;
        }
        if (v63 + v68 >= v44)
        {
          BOOL v69 = v44 < v68;
LABEL_83:
          if (v69) {
            unint64_t v41 = v53;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v64) {
          goto LABEL_124;
        }
        uint64_t v72 = &v39[16 * v41];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v52 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v52) {
          goto LABEL_127;
        }
        if (v75 < v63) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v80 = v41 - 1;
        if (v41 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        unint64_t v81 = v12;
        uint64_t v82 = &v39[16 * v80];
        uint64_t v83 = *(void *)v82;
        uint64_t v84 = &v39[16 * v41];
        uint64_t v85 = *((void *)v84 + 1);
        sub_1ACA8A8CC((double *)(v11 + 32 * *(void *)v82), (double *)(v11 + 32 * *(void *)v84), v11 + 32 * v85, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v85 < v83) {
          goto LABEL_117;
        }
        if (v41 > *((void *)v81 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v82 = v83;
        *(void *)&v39[16 * v80 + 8] = v85;
        unint64_t v86 = *((void *)v81 + 2);
        if (v41 >= v86) {
          goto LABEL_119;
        }
        double v12 = v81;
        unint64_t v13 = v86 - 1;
        memmove(&v39[16 * v41], v84 + 16, 16 * (v86 - 1 - v41));
        *((void *)v81 + 2) = v86 - 1;
        uint64_t v11 = v112;
        if (v86 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v110;
    uint64_t v3 = v111;
    if (v10 >= v111)
    {
      uint64_t v9 = v109;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

uint64_t sub_1ACA89FA4(void *a1)
{
  unint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1ACE777B8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_135;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v81 = 0;
      uint64_t v82 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v84 = *(double *)(v82 + 8 * i);
        double v85 = fabs(v84);
        uint64_t v86 = v81;
        do
        {
          uint64_t v87 = v82 + 8 * v86;
          if (v85 >= fabs(*(double *)v87)) {
            break;
          }
          if (!v82) {
            goto LABEL_139;
          }
          *(void *)(v87 + 8) = *(void *)v87;
          *(double *)(v82 + 8 * v86--) = v84;
        }
        while (v86 != -1);
        ++v81;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_144;
  }
  uint64_t v99 = result;
  uint64_t v100 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (double *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_101:
      uint64_t v98 = v8;
      if (v12 >= 2)
      {
        uint64_t v88 = *v2;
        do
        {
          unint64_t v89 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_130;
          }
          if (!v88) {
            goto LABEL_143;
          }
          uint64_t v90 = v11;
          uint64_t v91 = v11 + 32;
          uint64_t v92 = *(void *)&v11[16 * v89 + 32];
          uint64_t v93 = *(void *)&v11[16 * v12 + 24];
          sub_1ACA8AB58((double *)(v88 + 8 * v92), (double *)(v88 + 8 * *(void *)&v91[16 * v12 - 16]), v88 + 8 * v93, __dst);
          if (v1) {
            break;
          }
          if (v93 < v92) {
            goto LABEL_131;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v90 = sub_1ACBE8028((uint64_t)v90);
          }
          if (v89 >= *((void *)v90 + 2)) {
            goto LABEL_132;
          }
          uint64_t v94 = &v90[16 * v89 + 32];
          *(void *)uint64_t v94 = v92;
          *((void *)v94 + 1) = v93;
          unint64_t v95 = *((void *)v90 + 2);
          if (v12 > v95) {
            goto LABEL_133;
          }
          memmove(&v90[16 * v12 + 16], &v90[16 * v12 + 32], 16 * (v95 - v12));
          uint64_t v11 = v90;
          *((void *)v90 + 2) = v95 - 1;
          unint64_t v12 = v95 - 1;
        }
        while (v95 > 2);
      }
LABEL_112:
      swift_bridgeObjectRelease();
      *(void *)(v98 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v98 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1ACE76608();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v100;
    uint64_t v98 = v7;
    __dst = (double *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  long long v96 = v2;
  uint64_t v97 = *v2 - 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v101 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      double v14 = *(double *)(v10 + 8 * v9);
      double v15 = fabs(v14);
      double v16 = fabs(*(double *)(v10 + 8 * v13));
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        while (1)
        {
          double v17 = fabs(v14);
          double v14 = *(double *)(v10 + 8 * v9);
          if (v15 < v16 == fabs(v14) >= v17) {
            break;
          }
          if (v3 == ++v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v9 < v13) {
          goto LABEL_136;
        }
        if (v13 < v9)
        {
          double v18 = (uint64_t *)(v97 + 8 * v9);
          uint64_t v19 = v9;
          uint64_t v20 = v13;
          uint64_t v21 = (uint64_t *)(v10 + 8 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10) {
                goto LABEL_142;
              }
              uint64_t v22 = *v21;
              uint64_t *v21 = *v18;
              uint64_t *v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_45;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_134;
    }
    if (v9 - v13 >= v99) {
      goto LABEL_45;
    }
    uint64_t v23 = v13 + v99;
    if (__OFADD__(v13, v99)) {
      goto LABEL_137;
    }
    if (v23 >= v3) {
      uint64_t v23 = v3;
    }
    if (v23 < v13) {
      break;
    }
    if (v9 != v23)
    {
      uint64_t v24 = v97 + 8 * v9;
      do
      {
        double v25 = *(double *)(v10 + 8 * v9);
        double v26 = fabs(v25);
        uint64_t v27 = v13;
        long long v28 = (double *)v24;
        do
        {
          double v29 = *v28;
          if (v26 >= fabs(*v28)) {
            break;
          }
          if (!v10) {
            goto LABEL_140;
          }
          *long long v28 = v25;
          v28[1] = v29;
          --v28;
          ++v27;
        }
        while (v9 != v27);
        ++v9;
        v24 += 8;
      }
      while (v9 != v23);
      uint64_t v9 = v23;
    }
LABEL_45:
    if (v9 < v13) {
      goto LABEL_129;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1ACBE7A88(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v31 = *((void *)v11 + 2);
    unint64_t v30 = *((void *)v11 + 3);
    unint64_t v12 = v31 + 1;
    uint64_t v10 = v101;
    if (v31 >= v30 >> 1)
    {
      unint64_t v80 = sub_1ACBE7A88((char *)(v30 > 1), v31 + 1, 1, v11);
      uint64_t v10 = v101;
      uint64_t v11 = v80;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v32 = v11 + 32;
    uint64_t v33 = &v11[16 * v31 + 32];
    *(void *)uint64_t v33 = v13;
    *((void *)v33 + 1) = v9;
    if (v31)
    {
      while (1)
      {
        unint64_t v34 = v12 - 1;
        if (v12 >= 4)
        {
          unint64_t v39 = &v32[16 * v12];
          uint64_t v40 = *((void *)v39 - 8);
          uint64_t v41 = *((void *)v39 - 7);
          BOOL v45 = __OFSUB__(v41, v40);
          uint64_t v42 = v41 - v40;
          if (v45) {
            goto LABEL_118;
          }
          uint64_t v44 = *((void *)v39 - 6);
          uint64_t v43 = *((void *)v39 - 5);
          BOOL v45 = __OFSUB__(v43, v44);
          uint64_t v37 = v43 - v44;
          char v38 = v45;
          if (v45) {
            goto LABEL_119;
          }
          unint64_t v46 = v12 - 2;
          uint64_t v47 = &v32[16 * v12 - 32];
          uint64_t v49 = *(void *)v47;
          uint64_t v48 = *((void *)v47 + 1);
          BOOL v45 = __OFSUB__(v48, v49);
          uint64_t v50 = v48 - v49;
          if (v45) {
            goto LABEL_121;
          }
          BOOL v45 = __OFADD__(v37, v50);
          uint64_t v51 = v37 + v50;
          if (v45) {
            goto LABEL_124;
          }
          if (v51 >= v42)
          {
            BOOL v69 = &v32[16 * v34];
            uint64_t v71 = *(void *)v69;
            uint64_t v70 = *((void *)v69 + 1);
            BOOL v45 = __OFSUB__(v70, v71);
            uint64_t v72 = v70 - v71;
            if (v45) {
              goto LABEL_128;
            }
            BOOL v62 = v37 < v72;
            goto LABEL_82;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v63 = *((void *)v11 + 4);
            uint64_t v64 = *((void *)v11 + 5);
            BOOL v45 = __OFSUB__(v64, v63);
            uint64_t v56 = v64 - v63;
            char v57 = v45;
            goto LABEL_76;
          }
          uint64_t v36 = *((void *)v11 + 4);
          uint64_t v35 = *((void *)v11 + 5);
          BOOL v45 = __OFSUB__(v35, v36);
          uint64_t v37 = v35 - v36;
          char v38 = v45;
        }
        if (v38) {
          goto LABEL_120;
        }
        unint64_t v46 = v12 - 2;
        BOOL v52 = &v32[16 * v12 - 32];
        uint64_t v54 = *(void *)v52;
        uint64_t v53 = *((void *)v52 + 1);
        BOOL v55 = __OFSUB__(v53, v54);
        uint64_t v56 = v53 - v54;
        char v57 = v55;
        if (v55) {
          goto LABEL_123;
        }
        uint64_t v58 = &v32[16 * v34];
        uint64_t v60 = *(void *)v58;
        uint64_t v59 = *((void *)v58 + 1);
        BOOL v45 = __OFSUB__(v59, v60);
        uint64_t v61 = v59 - v60;
        if (v45) {
          goto LABEL_126;
        }
        if (__OFADD__(v56, v61)) {
          goto LABEL_127;
        }
        if (v56 + v61 >= v37)
        {
          BOOL v62 = v37 < v61;
LABEL_82:
          if (v62) {
            unint64_t v34 = v46;
          }
          goto LABEL_84;
        }
LABEL_76:
        if (v57) {
          goto LABEL_122;
        }
        char v65 = &v32[16 * v34];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v45 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v45) {
          goto LABEL_125;
        }
        if (v68 < v56) {
          goto LABEL_15;
        }
LABEL_84:
        unint64_t v73 = v34 - 1;
        if (v34 - 1 >= v12)
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (!v10) {
          goto LABEL_141;
        }
        uint64_t v74 = &v32[16 * v73];
        uint64_t v75 = *(void *)v74;
        uint64_t v76 = v32;
        uint64_t v77 = &v32[16 * v34];
        uint64_t v78 = *((void *)v77 + 1);
        sub_1ACA8AB58((double *)(v10 + 8 * *(void *)v74), (double *)(v10 + 8 * *(void *)v77), v10 + 8 * v78, __dst);
        if (v1) {
          goto LABEL_112;
        }
        if (v78 < v75) {
          goto LABEL_115;
        }
        if (v34 > *((void *)v11 + 2)) {
          goto LABEL_116;
        }
        *(void *)uint64_t v74 = v75;
        *(void *)&v76[16 * v73 + 8] = v78;
        unint64_t v79 = *((void *)v11 + 2);
        if (v34 >= v79) {
          goto LABEL_117;
        }
        unint64_t v12 = v79 - 1;
        memmove(v77, v77 + 16, 16 * (v79 - 1 - v34));
        uint64_t v32 = v76;
        *((void *)v11 + 2) = v79 - 1;
        uint64_t v10 = v101;
        if (v79 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v100;
    if (v9 >= v100)
    {
      uint64_t v8 = v98;
      unint64_t v2 = v96;
      goto LABEL_101;
    }
  }
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

uint64_t sub_1ACA8A650(double *__src, double *a2, unint64_t a3, double *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 31;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 5;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 31;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 5;
  long long v28 = __src;
  uint64_t v27 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[4 * v13] <= __dst) {
        memmove(__dst, a2, 32 * v13);
      }
      double v18 = &v4[4 * v13];
      double v26 = v18;
      long long v28 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        uint64_t v19 = (double *)(a3 - 32);
        uint64_t v20 = v6;
        while (1)
        {
          uint64_t v21 = v19 + 4;
          double v22 = *(v20 - 4);
          v20 -= 4;
          if (*(v18 - 4) >= v22)
          {
            double v26 = v18 - 4;
            if (v21 < v18 || v19 >= v18 || v21 != v18)
            {
              long long v24 = *((_OWORD *)v18 - 1);
              *(_OWORD *)uint64_t v19 = *((_OWORD *)v18 - 2);
              *((_OWORD *)v19 + 1) = v24;
            }
            uint64_t v20 = v6;
            v18 -= 4;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v21 != v6 || v19 >= v6)
            {
              long long v23 = *((_OWORD *)v20 + 1);
              *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
              *((_OWORD *)v19 + 1) = v23;
            }
            long long v28 = v20;
            if (v20 <= v7) {
              goto LABEL_42;
            }
          }
          v19 -= 4;
          uint64_t v6 = v20;
          if (v18 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[4 * v10] <= __dst) {
      memmove(__dst, __src, 32 * v10);
    }
    double v14 = &v4[4 * v10];
    double v26 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
          {
            long long v17 = *((_OWORD *)v4 + 1);
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
            *((_OWORD *)v7 + 1) = v17;
          }
          v4 += 4;
          uint64_t v27 = v4;
          double v15 = v6;
        }
        else
        {
          double v15 = v6 + 4;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
          {
            long long v16 = *((_OWORD *)v6 + 1);
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
            *((_OWORD *)v7 + 1) = v16;
          }
        }
        v7 += 4;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      long long v28 = v7;
    }
LABEL_42:
    sub_1ACBE7C50((void **)&v28, (const void **)&v27, &v26);
    return 1;
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA8A8CC(double *__src, double *a2, unint64_t a3, double *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 31;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 5;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 31;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 5;
  long long v28 = __src;
  uint64_t v27 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[4 * v13] <= __dst) {
        memmove(__dst, a2, 32 * v13);
      }
      uint64_t v19 = &v4[4 * v13];
      double v26 = (char *)v19;
      long long v28 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        uint64_t v20 = (double *)(a3 - 32);
        do
        {
          uint64_t v21 = v20 + 4;
          if (*(v19 - 2) >= *(v6 - 2))
          {
            double v26 = (char *)(v19 - 4);
            if (v21 < v19 || v20 >= v19 || v21 != v19)
            {
              long long v24 = *((_OWORD *)v19 - 1);
              *(_OWORD *)uint64_t v20 = *((_OWORD *)v19 - 2);
              *((_OWORD *)v20 + 1) = v24;
            }
            double v22 = v6;
            v19 -= 4;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            double v22 = v6 - 4;
            if (v21 != v6 || v20 >= v6)
            {
              long long v23 = *((_OWORD *)v6 - 1);
              *(_OWORD *)uint64_t v20 = *(_OWORD *)v22;
              *((_OWORD *)v20 + 1) = v23;
            }
            long long v28 = v6 - 4;
            if (v22 <= v7) {
              break;
            }
          }
          v20 -= 4;
          uint64_t v6 = v22;
        }
        while (v19 > v4);
      }
LABEL_44:
      sub_1ACBE7C50((void **)&v28, (const void **)&v27, &v26);
      return 1;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[4 * v10] <= __dst) {
      memmove(__dst, __src, 32 * v10);
    }
    double v14 = &v4[4 * v10];
    double v26 = (char *)v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      double v15 = v4;
      while (1)
      {
        if (v6[2] >= v15[2])
        {
          uint64_t v4 = v15 + 4;
          long long v17 = v15;
          long long v16 = v6;
          if (v7 == v15)
          {
            v15 += 4;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v15 += 4;
          }
        }
        else
        {
          long long v16 = v6 + 4;
          long long v17 = v6;
          if (v7 == v6 && v7 < v16) {
            goto LABEL_22;
          }
        }
        long long v18 = *((_OWORD *)v17 + 1);
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v17;
        *((_OWORD *)v7 + 1) = v18;
LABEL_22:
        v7 += 4;
        if (v15 < v14)
        {
          uint64_t v6 = v16;
          if ((unint64_t)v16 < a3) {
            continue;
          }
        }
        uint64_t v27 = v4;
        long long v28 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACA8AB58(double *__src, double *a2, unint64_t a3, double *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  long long v24 = __src;
  long long v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      long long v16 = &v4[v13];
      double v22 = v16;
      long long v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        long long v17 = (double *)(a3 - 8);
        while (1)
        {
          long long v18 = v17 + 1;
          uint64_t v19 = v6 - 1;
          double v20 = *(v6 - 1);
          if (fabs(*(v16 - 1)) >= fabs(v20))
          {
            double v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              double *v17 = *(v16 - 1);
            }
            --v16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              double *v17 = v20;
            }
            long long v24 = --v6;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          --v17;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    double v14 = &v4[v10];
    double v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (fabs(*v6) >= fabs(*v4))
        {
          if (v7 != v4) {
            *uint64_t v7 = *v4;
          }
          long long v23 = ++v4;
          double v15 = v6;
        }
        else
        {
          double v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *uint64_t v7 = *v6;
          }
        }
        ++v7;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      long long v24 = v7;
    }
LABEL_42:
    sub_1ACBE7D0C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

unsigned char *sub_1ACA8ADD8@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1ACA8ADE4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)a2 = *(void *)result;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

BOOL _s18PodcastsFoundation28AssetReaderTimelineAlignmentC0F0V2eeoiySbAE_AEtFZ_0(double *a1, double *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1]) {
    return 0;
  }
  if (a1[3] == a2[3]) {
    return a1[2] == a2[2];
  }
  return 0;
}

unint64_t sub_1ACA8AE30()
{
  unint64_t result = qword_1E99F11E0;
  if (!qword_1E99F11E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F11E0);
  }
  return result;
}

uint64_t sub_1ACA8AE84(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F11E8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACA8AEE8(uint64_t result, uint64_t (*a2)(void *, void *))
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *(void *)(result + 24) >> 1;
  if (v2 == v3)
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
LABEL_3:
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return v4;
  }
  else
  {
    uint64_t v5 = a2;
    uint64_t v6 = *(void *)(result + 48);
    uint64_t v7 = *(void *)(result + 56) >> 1;
    int64_t v8 = (uint64_t *)(*(void *)(result + 40) + 32 * v6 + 16);
    int64_t v9 = (uint64_t *)(*(void *)(result + 8) + 32 * v2 + 16);
    uint64_t v4 = MEMORY[0x1E4FBC860];
    uint64_t v21 = v7;
    while (v2 < v3)
    {
      if (v7 == v6) {
        goto LABEL_3;
      }
      if (v6 >= v7) {
        goto LABEL_16;
      }
      uint64_t v13 = *(v9 - 2);
      uint64_t v14 = *(v9 - 1);
      uint64_t v15 = *v9;
      uint64_t v16 = v9[1];
      uint64_t v17 = *(v8 - 2);
      uint64_t v18 = *(v8 - 1);
      uint64_t v19 = *v8;
      uint64_t v20 = v8[1];
      v23[0] = v13;
      v23[1] = v14;
      _OWORD v23[2] = v15;
      v23[3] = v16;
      v24[0] = v17;
      v24[1] = v18;
      _OWORD v24[2] = v19;
      v24[3] = v20;
      uint64_t result = v5(v23, v24);
      if (result)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v25 = v4;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1ACC82F28(0, *(void *)(v4 + 16) + 1, 1);
          uint64_t v4 = v25;
        }
        unint64_t v11 = *(void *)(v4 + 16);
        unint64_t v10 = *(void *)(v4 + 24);
        if (v11 >= v10 >> 1)
        {
          uint64_t result = sub_1ACC82F28(v10 > 1, v11 + 1, 1);
          uint64_t v4 = v25;
        }
        *(void *)(v4 + 16) = v11 + 1;
        uint64_t v12 = (void *)(v4 + (v11 << 6));
        v12[4] = v13;
        void v12[5] = v14;
        void v12[6] = v15;
        v12[7] = v16;
        unsigned __int8 v12[8] = v17;
        v12[9] = v18;
        void v12[10] = v19;
        v12[11] = v20;
        uint64_t v5 = a2;
        uint64_t v7 = v21;
      }
      ++v2;
      v8 += 4;
      v9 += 4;
      ++v6;
      if (v3 == v2) {
        goto LABEL_3;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  return result;
}

unint64_t sub_1ACA8B0C0()
{
  unint64_t result = qword_1EB7731C0;
  if (!qword_1EB7731C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7731B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7731C0);
  }
  return result;
}

unint64_t sub_1ACA8B11C()
{
  unint64_t result = qword_1E99F1210;
  if (!qword_1E99F1210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1210);
  }
  return result;
}

unint64_t sub_1ACA8B170()
{
  unint64_t result = qword_1E99F1220;
  if (!qword_1E99F1220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1220);
  }
  return result;
}

uint64_t sub_1ACA8B1C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D69547972657571 && a2 == 0xEE0065676E615265;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ACEC6450)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACA8B2D8(void *a1)
{
  uint64_t v3 = sub_1ACE754C8();
  uint64_t v17 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1290);
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACA8B11C();
  sub_1ACE77C48();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    uint64_t v15 = v5;
    uint64_t v16 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0D88);
    sub_1ACA8C14C(&qword_1E99F1298, (void (*)(void))sub_1ACA8C1BC);
    sub_1ACE77698();
    uint64_t v10 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1280);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
    *(unsigned char *)(inited + 32) = 0;
    *(void *)(inited + 40) = v10;
    unint64_t v12 = sub_1ACA3A054(inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1288);
    swift_arrayDestroy();
    if (qword_1E99EFEF0 != -1) {
      swift_once();
    }
    uint64_t v13 = __swift_project_value_buffer(v3, (uint64_t)qword_1E99F2C10);
    uint64_t v14 = (uint64_t)v15;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, v13, v3);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
    type metadata accessor for AssetReaderTimelineAlignment();
    uint64_t v6 = swift_allocObject();
    sub_1ACA84ED4(v12, 0, 1, 3, 2000000000000000000, 0, v14);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  }
  return v6;
}

uint64_t sub_1ACA8B62C()
{
  return type metadata accessor for AssetReaderTimelineAlignment();
}

uint64_t type metadata accessor for AssetReaderTimelineAlignment()
{
  uint64_t result = qword_1EB76A430;
  if (!qword_1EB76A430) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACA8B680()
{
  uint64_t result = sub_1ACE754C8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AssetReaderTimelineAlignment(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AssetReaderTimelineAlignment);
}

uint64_t getEnumTagSinglePayload for AssetReaderTimelineAlignment.Alignment(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AssetReaderTimelineAlignment.Alignment(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AssetReaderTimelineAlignment.Alignment()
{
  return &type metadata for AssetReaderTimelineAlignment.Alignment;
}

uint64_t getEnumTagSinglePayload for AssetReaderTimelineAlignment.ReadStartPosition(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1ACA8B85CLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for AssetReaderTimelineAlignment.ReadStartPosition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1ACA8B944);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1ACA8B96C(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_1ACA8B988(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetReaderTimelineAlignment.ReadStartPosition()
{
  return &type metadata for AssetReaderTimelineAlignment.ReadStartPosition;
}

uint64_t getEnumTagSinglePayload for AssetReaderTimelineAlignment.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    unsigned int v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 4;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1ACA8BA78);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 < 2) {
    unsigned int v9 = 0;
  }
  if (v9 >= 3) {
    return v9 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for AssetReaderTimelineAlignment.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFC) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v7 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1ACA8BB60);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_1ACA8BB88(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  unsigned int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (!v2) {
    unsigned int v3 = -1;
  }
  if (v3 + 1 >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1ACA8BBB4(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetReaderTimelineAlignment.State()
{
  return &type metadata for AssetReaderTimelineAlignment.State;
}

unsigned char *storeEnumTagSinglePayload for AssetReaderTimelineAlignment.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACA8BC78);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetReaderTimelineAlignment.CodingKeys()
{
  return &type metadata for AssetReaderTimelineAlignment.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AssetReaderTimelineAlignment.Alignment.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACA8BD7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetReaderTimelineAlignment.Alignment.CodingKeys()
{
  return &type metadata for AssetReaderTimelineAlignment.Alignment.CodingKeys;
}

unint64_t sub_1ACA8BDB8()
{
  unint64_t result = qword_1E99F1228;
  if (!qword_1E99F1228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1228);
  }
  return result;
}

unint64_t sub_1ACA8BE10()
{
  unint64_t result = qword_1E99F1230;
  if (!qword_1E99F1230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1230);
  }
  return result;
}

unint64_t sub_1ACA8BE68()
{
  unint64_t result = qword_1E99F1238;
  if (!qword_1E99F1238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1238);
  }
  return result;
}

unint64_t sub_1ACA8BEC0()
{
  unint64_t result = qword_1E99F1240;
  if (!qword_1E99F1240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1240);
  }
  return result;
}

unint64_t sub_1ACA8BF18()
{
  unint64_t result = qword_1E99F1248;
  if (!qword_1E99F1248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1248);
  }
  return result;
}

unint64_t sub_1ACA8BF70()
{
  unint64_t result = qword_1E99F1250;
  if (!qword_1E99F1250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1250);
  }
  return result;
}

unint64_t sub_1ACA8BFC8()
{
  unint64_t result = qword_1E99F1258;
  if (!qword_1E99F1258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1258);
  }
  return result;
}

unint64_t sub_1ACA8C01C@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1ACA857C4(a1, *(unsigned __int8 *)(v2 + 16), a2);
}

uint64_t sub_1ACA8C038(uint64_t *a1)
{
  return sub_1ACA8582C(a1, *(unsigned __int8 *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

unsigned char *sub_1ACA8C05C(unsigned char *result)
{
  *unint64_t result = *(unsigned char *)(v1 + 16);
  return result;
}

uint64_t sub_1ACA8C068(uint64_t a1)
{
  uint64_t result = sub_1ACE76F48();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_1ACA8C0A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACA8C0F0(unint64_t *a1)
{
  return sub_1ACA85D88(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1ACA8C10C()
{
  unint64_t result = qword_1EB768ED8;
  if (!qword_1EB768ED8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB768ED8);
  }
  return result;
}

uint64_t sub_1ACA8C14C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F0D88);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACA8C1BC()
{
  unint64_t result = qword_1E99F12A0;
  if (!qword_1E99F12A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F12A0);
  }
  return result;
}

uint64_t sub_1ACA8C210(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACA8C278(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1ACA8C2D8()
{
  uint64_t v1 = v0;
  sub_1ACE77B18();
  int v2 = *(unsigned __int8 *)(v0 + 24);
  sub_1ACE76108();
  sub_1ACE77B38();
  if (v2 != 1) {
    sub_1ACE77B58();
  }
  sub_1ACA8F4F4(v1 + 32, (uint64_t)v4);
  sub_1ACA8F4F4((uint64_t)v4, (uint64_t)v5);
  if (v6 > 2)
  {
    sub_1ACE77B28();
    sub_1ACE77B38();
    sub_1ACE76108();
    sub_1ACE77B38();
    sub_1ACE77B58();
  }
  else
  {
    sub_1ACE77B28();
  }
  return sub_1ACE77B78();
}

uint64_t sub_1ACA8C410()
{
  return sub_1ACA8C2D8();
}

uint64_t sub_1ACA8C454()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 48);
  sub_1ACE76108();
  if (v1 != 1)
  {
    sub_1ACE77B38();
    sub_1ACE77B58();
    if (v2) {
      goto LABEL_3;
    }
    return sub_1ACE77B28();
  }
  sub_1ACE77B38();
  if (!v2) {
    return sub_1ACE77B28();
  }
LABEL_3:
  if (v2 == 1 || v2 == 2) {
    return sub_1ACE77B28();
  }
  sub_1ACE77B28();
  sub_1ACE77B38();
  sub_1ACE76108();
  sub_1ACE77B38();
  return sub_1ACE77B58();
}

uint64_t sub_1ACA8C530()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 48);
  sub_1ACE77B18();
  sub_1ACE76108();
  if (v1 == 1)
  {
    sub_1ACE77B38();
    if (!v2) {
      goto LABEL_7;
    }
  }
  else
  {
    sub_1ACE77B38();
    sub_1ACE77B58();
    if (!v2) {
      goto LABEL_7;
    }
  }
  if (v2 != 1 && v2 != 2)
  {
    sub_1ACE77B28();
    sub_1ACE77B38();
    sub_1ACE76108();
    sub_1ACE77B38();
    sub_1ACE77B58();
    return sub_1ACE77B78();
  }
LABEL_7:
  sub_1ACE77B28();
  return sub_1ACE77B78();
}

BOOL sub_1ACA8C64C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  void v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  uint64_t v8 = *(void *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  void v9[2] = *(_OWORD *)(a2 + 32);
  uint64_t v9[3] = v4;
  uint64_t v10 = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1ACA8E768((uint64_t)v7, (uint64_t)v9);
}

double sub_1ACA8C6A8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  long long v3 = (os_unfair_lock_s *)(*(void *)(*(void *)a1 + 24) + 16);
  os_unfair_lock_lock(v3);
  sub_1ACA8E6B0(&v5);
  os_unfair_lock_unlock(v3);
  double result = *(double *)&v5;
  *a2 = v5;
  return result;
}

uint64_t sub_1ACA8C720(uint64_t a1, uint64_t a2)
{
  long long v2 = (os_unfair_lock_s *)(*(void *)(*(void *)a2 + 24) + 16);
  swift_unknownObjectRetain();
  os_unfair_lock_lock(v2);
  sub_1ACA8F73C();
  os_unfair_lock_unlock(v2);
  return swift_unknownObjectRelease();
}

uint64_t sub_1ACA8C7AC()
{
  int v1 = (os_unfair_lock_s *)(*(void *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1ACA8E6B0(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_1ACA8C818@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACA8F614(a1);
}

uint64_t sub_1ACA8C830()
{
  int v1 = (os_unfair_lock_s *)(*(void *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1ACA8E6E8();
  os_unfair_lock_unlock(v1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1ACA8C8AC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE75DC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unsigned int v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE75E48();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1[7] = a3;
  uint64_t result = swift_unknownObjectWeakAssign();
  if (a2)
  {
    if (a1[5])
    {
      uint64_t v15 = a1[2];
      aBlock[4] = sub_1ACA8F6D0;
      aBlock[5] = a1;
      uint64_t v20 = v15;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1ACA6DA9C;
      aBlock[3] = &block_descriptor_8;
      uint64_t v19 = v10;
      uint64_t v18 = _Block_copy(aBlock);
      swift_retain();
      sub_1ACE75E08();
      void aBlock[7] = MEMORY[0x1E4FBC860];
      sub_1ACA8F6D8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
      sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
      sub_1ACE770E8();
      uint64_t v16 = v18;
      MEMORY[0x1AD118ED0](0, v13, v9, v18);
      _Block_release(v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v19);
      return swift_release();
    }
  }
  return result;
}

void (*sub_1ACA8CB8C(void *a1))(uint64_t a1, char a2)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  long long v4 = *(os_unfair_lock_s **)(v1 + 24);
  v3[2] = v1;
  void v3[3] = v4;
  long long v5 = v4 + 4;
  os_unfair_lock_lock(v4 + 4);
  sub_1ACA8E6B0(&v7);
  v3[4] = 0;
  os_unfair_lock_unlock(v5);
  *(_OWORD *)long long v3 = v7;
  return sub_1ACA8CC3C;
}

void sub_1ACA8CC3C(uint64_t a1, char a2)
{
  long long v2 = *(void **)a1;
  long long v3 = (os_unfair_lock_s *)(*(void *)(*(void *)a1 + 24) + 16);
  if (a2)
  {
    swift_unknownObjectRetain();
    os_unfair_lock_lock(v3);
    sub_1ACA8F73C();
    os_unfair_lock_unlock(v3);
    swift_unknownObjectRelease();
  }
  else
  {
    os_unfair_lock_lock(v3);
    sub_1ACA8F73C();
    os_unfair_lock_unlock(v3);
  }
  swift_unknownObjectRelease();
  free(v2);
}

void *LibraryPodcastStateDataSource.__allocating_init(contextProvider:)(void *a1)
{
  swift_allocObject();
  long long v2 = sub_1ACA8E90C(a1);
  swift_unknownObjectRelease();
  return v2;
}

void *LibraryPodcastStateDataSource.init(contextProvider:)(void *a1)
{
  uint64_t v1 = sub_1ACA8E90C(a1);
  swift_unknownObjectRelease();
  return v1;
}

void sub_1ACA8CDB4(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = a1;
  id v4 = objc_msgSend(v3, sel_uuid);
  if (v4)
  {
    long long v5 = v4;
    uint64_t v6 = sub_1ACE761B8();
    uint64_t v8 = v7;

    unsigned int v9 = self;
    swift_bridgeObjectRetain();
    unsigned int v10 = objc_msgSend(v9, sel_isEmpty_, objc_msgSend(v3, sel_storeCollectionId));
    if (v10)
    {
      uint64_t v11 = 0;
    }
    else
    {
      uint64_t v16 = (uint64_t)objc_msgSend(v3, sel_storeCollectionId);
      uint64_t v11 = v16 & ~(v16 >> 63);
    }
    unsigned int v17 = objc_msgSend(v3, sel_isPastAutodownloadOrEpisodeLimitDark);
    id v15 = objc_msgSend(v3, sel_episodeLimit);
    unsigned int v18 = objc_msgSend(v3, sel_subscribed);

    uint64_t v13 = v18;
    uint64_t v14 = v17;
    uint64_t v12 = v10;
  }
  else
  {

    uint64_t v8 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v6 = 0;
    uint64_t v14 = 0;
    id v15 = 0;
  }
  *a2 = v6;
  a2[1] = v8;
  a2[2] = v11;
  a2[3] = v12;
  a2[4] = v13;
  a2[5] = v6;
  a2[6] = v8;
  a2[7] = v14;
  a2[8] = (uint64_t)v15;
}

BOOL sub_1ACA8CF08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 16);
  int v8 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  unint64_t v11 = *(void *)(a2 + 48);
  uint64_t v16 = *(void *)(a2 + 56);
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a2 + 64);
  uint64_t v15 = *(void *)(a1 + 64);
  if ((*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8)) && (sub_1ACE77848() & 1) == 0) {
    return 1;
  }
  if (v3)
  {
    if (!v8) {
      return 1;
    }
  }
  else
  {
    if (v2 == v7) {
      char v12 = v8;
    }
    else {
      char v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  switch(v6)
  {
    case 0:
      return v11 != 0;
    case 1:
      return v11 != 1;
    case 2:
      return v11 != 2;
  }
  if (v11 < 3 || ((((v5 & 1) == 0) ^ v10) & 1) == 0) {
    return 1;
  }
  if (v4 == v9 && v6 == v11) {
    return ((v17 ^ v16) & 1) != 0 || v15 != v14;
  }
  if ((sub_1ACE77848() & 1) == 0) {
    return 1;
  }
  if ((v17 ^ v16)) {
    return 1;
  }
  BOOL result = 0;
  if (v15 != v14) {
    return 1;
  }
  return result;
}

uint64_t sub_1ACA8D078@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1ACDF7294(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_1ACA8D0C0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1ACE75EC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v8 = *(void **)(v2 + 16);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  id v9 = v8;
  LOBYTE(v8) = sub_1ACE75EF8();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    uint64_t v11 = MEMORY[0x1F4188790](result);
    *(void *)&v15[-16] = v2;
    *(void *)&v15[-8] = a1;
    MEMORY[0x1F4188790](v11);
    *(void *)&v15[-16] = sub_1ACA8F550;
    *(void *)&v15[-8] = v12;
    uint64_t v14 = v13 + 4;
    os_unfair_lock_lock(v13 + 4);
    sub_1ACA8E6B0(&v16);
    os_unfair_lock_unlock(v14);
    sub_1ACA8DCB4(v16, *((uint64_t *)&v16 + 1));
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACA8D27C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v104 = MEMORY[0x1E4FBC870];
  uint64_t v102 = MEMORY[0x1E4FBC870];
  uint64_t v4 = a1[8];
  if (*(void *)(a2 + 16) <= *(void *)(v4 + 16) >> 3)
  {
    v103[0] = a1[8];
    swift_bridgeObjectRetain();
    sub_1ACC40D64(a2);
    uint64_t v5 = v4;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1ACB86E74(a2, v4);
  }
  int64_t v6 = 0;
  uint64_t v81 = v5 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(v5 + 56);
  uint64_t v10 = a1 + 10;
  int64_t v82 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v84 = v5;
  uint64_t v86 = a1 + 9;
  while (1)
  {
    if (v9)
    {
      unint64_t v15 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v16 = v15 | (v6 << 6);
      goto LABEL_22;
    }
    BOOL v17 = __OFADD__(v6++, 1);
    if (v17)
    {
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    if (v6 >= v82) {
      goto LABEL_35;
    }
    unint64_t v18 = *(void *)(v81 + 8 * v6);
    if (!v18) {
      break;
    }
LABEL_21:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v6 << 6);
LABEL_22:
    uint64_t v20 = *(void *)(v5 + 48) + 72 * v16;
    uint64_t v22 = *(void *)v20;
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t v87 = *(void *)(v20 + 16);
    char v97 = *(unsigned char *)(v20 + 24);
    uint64_t v24 = *(void *)(v20 + 32);
    uint64_t v23 = *(void *)(v20 + 40);
    unint64_t v25 = *(void *)(v20 + 48);
    swift_bridgeObjectRetain();
    uint64_t v94 = v23;
    unint64_t v92 = v25;
    sub_1ACA50D88(v24, v23, v25);
    swift_bridgeObjectRetain();
    sub_1ACD3007C(v103, v22, v21);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_1ACA657FC(v22, v21);
    LOBYTE(v23) = v27;
    swift_bridgeObjectRelease();
    if (v23)
    {
      int64_t v83 = v6;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v29 = *v10;
      uint64_t v101 = *v10;
      *uint64_t v10 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1ACD05F04();
        uint64_t v29 = v101;
      }
      swift_bridgeObjectRelease();
      unint64_t v30 = (uint64_t *)(*(void *)(v29 + 56) + 40 * v26);
      uint64_t v31 = *v30;
      uint64_t v32 = v30[1];
      unint64_t v33 = v30[2];
      sub_1ACB1B4B8(v26, v29);
      *uint64_t v10 = v29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1ACA50D9C(v31, v32, v33);
      uint64_t v5 = v84;
      unint64_t v34 = a1 + 9;
      int64_t v6 = v83;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v5 = v84;
      unint64_t v34 = a1 + 9;
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1ACA50D9C(v24, v94, v92);
    if ((v97 & 1) == 0)
    {
      sub_1ACD30438(v103, v87);
      swift_beginAccess();
      uint64_t v35 = sub_1ACA65CC4(v87);
      if (v36)
      {
        unint64_t v37 = v35;
        int64_t v38 = v6;
        char v39 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v40 = *v34;
        uint64_t v101 = *v34;
        *unint64_t v34 = 0x8000000000000000;
        if ((v39 & 1) == 0)
        {
          sub_1ACD05D40();
          uint64_t v40 = v101;
        }
        uint64_t v11 = (uint64_t *)(*(void *)(v40 + 56) + 40 * v37);
        uint64_t v12 = *v11;
        uint64_t v13 = v11[1];
        unint64_t v14 = v11[2];
        sub_1ACB1B2E8(v37, v40);
        *unint64_t v34 = v40;
        swift_bridgeObjectRelease();
        sub_1ACA50D9C(v12, v13, v14);
        uint64_t v10 = a1 + 10;
        uint64_t v5 = v84;
        int64_t v6 = v38;
      }
      swift_endAccess();
    }
  }
  int64_t v19 = v6 + 1;
  if (v6 + 1 >= v82) {
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v81 + 8 * v19);
  if (v18) {
    goto LABEL_20;
  }
  int64_t v19 = v6 + 2;
  if (v6 + 2 >= v82) {
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v81 + 8 * v19);
  if (v18)
  {
LABEL_20:
    int64_t v6 = v19;
    goto LABEL_21;
  }
  int64_t v19 = v6 + 3;
  if (v6 + 3 < v82)
  {
    unint64_t v18 = *(void *)(v81 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        int64_t v6 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          break;
        }
        if (v6 >= v82) {
          goto LABEL_35;
        }
        unint64_t v18 = *(void *)(v81 + 8 * v6);
        ++v19;
        if (v18) {
          goto LABEL_21;
        }
      }
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    goto LABEL_20;
  }
LABEL_35:
  swift_release();
  if (*(void *)(a1[8] + 16) <= *(void *)(a2 + 16) >> 3)
  {
    v103[0] = a2;
    swift_bridgeObjectRetain();
    uint64_t v43 = swift_bridgeObjectRetain();
    sub_1ACC40D64(v43);
    swift_bridgeObjectRelease();
    uint64_t v42 = v103[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = swift_bridgeObjectRetain();
    uint64_t v42 = sub_1ACB86E74(v41, a2);
    swift_bridgeObjectRelease();
  }
  int64_t v44 = 0;
  uint64_t v85 = v42 + 56;
  uint64_t v45 = 1 << *(unsigned char *)(v42 + 32);
  uint64_t v46 = -1;
  if (v45 < 64) {
    uint64_t v46 = ~(-1 << v45);
  }
  unint64_t v47 = v46 & *(void *)(v42 + 56);
  int64_t v88 = (unint64_t)(v45 + 63) >> 6;
  uint64_t v89 = v42;
  while (2)
  {
    if (v47)
    {
      uint64_t v96 = (v47 - 1) & v47;
      int64_t v98 = v44;
      unint64_t v48 = __clz(__rbit64(v47)) | (v44 << 6);
      goto LABEL_55;
    }
    BOOL v17 = __OFADD__(v44, 1);
    int64_t v49 = v44 + 1;
    if (v17) {
      goto LABEL_76;
    }
    if (v49 >= v88)
    {
LABEL_72:
      swift_release();
      a1[8] = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v75 = sub_1ACD0AA78(v104);
      swift_bridgeObjectRelease();
      *a3 = v75;
      uint64_t v76 = sub_1ACD0AA58(v102);
      uint64_t result = swift_bridgeObjectRelease();
      a3[1] = v76;
      return result;
    }
    unint64_t v50 = *(void *)(v85 + 8 * v49);
    if (v50)
    {
LABEL_54:
      uint64_t v96 = (v50 - 1) & v50;
      int64_t v98 = v49;
      unint64_t v48 = __clz(__rbit64(v50)) + (v49 << 6);
LABEL_55:
      uint64_t v52 = *(void *)(v42 + 48) + 72 * v48;
      uint64_t v53 = *(void *)v52;
      uint64_t v54 = *(void *)(v52 + 8);
      uint64_t v90 = *(void *)(v52 + 16);
      char v91 = *(unsigned char *)(v52 + 24);
      uint64_t v56 = *(void *)(v52 + 32);
      uint64_t v55 = *(void *)(v52 + 40);
      unint64_t v57 = *(void *)(v52 + 48);
      uint64_t v58 = *(void *)(v52 + 56);
      uint64_t v59 = *(void *)(v52 + 64);
      swift_bridgeObjectRetain();
      sub_1ACA50D88(v56, v55, v57);
      swift_bridgeObjectRetain();
      sub_1ACD3007C(&v101, v53, v54);
      swift_bridgeObjectRelease();
      v103[0] = v56;
      v103[1] = v55;
      v103[2] = v57;
      v103[3] = v58;
      v103[4] = v59;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      unint64_t v93 = v57;
      uint64_t v95 = v55;
      sub_1ACA50D88(v56, v55, v57);
      char v60 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v61 = *v10;
      uint64_t v99 = (void *)*v10;
      *uint64_t v10 = 0x8000000000000000;
      unint64_t v63 = sub_1ACA657FC(v53, v54);
      uint64_t v64 = *(void *)(v61 + 16);
      BOOL v65 = (v62 & 1) == 0;
      uint64_t v66 = v64 + v65;
      if (__OFADD__(v64, v65))
      {
        __break(1u);
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
      char v67 = v62;
      if (*(void *)(v61 + 24) < v66)
      {
        sub_1ACCFC8C0(v66, v60);
        uint64_t v68 = sub_1ACA657FC(v53, v54);
        if ((v67 & 1) != (v69 & 1)) {
          goto LABEL_79;
        }
        unint64_t v63 = v68;
        uint64_t v70 = v99;
        if ((v67 & 1) == 0) {
          goto LABEL_59;
        }
LABEL_63:
        sub_1ACA8F56C((uint64_t)v103, v70[7] + 40 * v63);
LABEL_64:
        uint64_t v10 = a1 + 10;
        a1[10] = (uint64_t)v70;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        if ((v91 & 1) == 0)
        {
          sub_1ACD30438(&v101, v90);
          swift_beginAccess();
          sub_1ACA50D88(v56, v95, v93);
          char v74 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v100 = *v86;
          *uint64_t v86 = 0x8000000000000000;
          uint64_t v10 = a1 + 10;
          sub_1ACD0C56C((uint64_t)v103, v90, v74);
          *uint64_t v86 = v100;
          swift_bridgeObjectRelease();
          swift_endAccess();
        }
        swift_bridgeObjectRelease();
        sub_1ACA50D9C(v56, v95, v93);
        uint64_t v42 = v89;
        unint64_t v47 = v96;
        int64_t v44 = v98;
        continue;
      }
      if (v60)
      {
        uint64_t v70 = v99;
        if (v62) {
          goto LABEL_63;
        }
      }
      else
      {
        sub_1ACD05F04();
        uint64_t v70 = v99;
        if (v67) {
          goto LABEL_63;
        }
      }
LABEL_59:
      v70[(v63 >> 6) + 8] |= 1 << v63;
      uint64_t v71 = (uint64_t *)(v70[6] + 16 * v63);
      *uint64_t v71 = v53;
      v71[1] = v54;
      sub_1ACA8F4F4((uint64_t)v103, v70[7] + 40 * v63);
      uint64_t v72 = v70[2];
      BOOL v17 = __OFADD__(v72, 1);
      uint64_t v73 = v72 + 1;
      if (v17) {
        goto LABEL_74;
      }
      v70[2] = v73;
      swift_bridgeObjectRetain();
      goto LABEL_64;
    }
    break;
  }
  int64_t v51 = v49 + 1;
  if (v49 + 1 >= v88) {
    goto LABEL_72;
  }
  unint64_t v50 = *(void *)(v85 + 8 * v51);
  if (v50) {
    goto LABEL_53;
  }
  int64_t v51 = v49 + 2;
  if (v49 + 2 >= v88) {
    goto LABEL_72;
  }
  unint64_t v50 = *(void *)(v85 + 8 * v51);
  if (v50) {
    goto LABEL_53;
  }
  int64_t v51 = v49 + 3;
  if (v49 + 3 >= v88) {
    goto LABEL_72;
  }
  unint64_t v50 = *(void *)(v85 + 8 * v51);
  if (v50)
  {
LABEL_53:
    int64_t v49 = v51;
    goto LABEL_54;
  }
  while (1)
  {
    int64_t v49 = v51 + 1;
    if (__OFADD__(v51, 1)) {
      break;
    }
    if (v49 >= v88) {
      goto LABEL_72;
    }
    unint64_t v50 = *(void *)(v85 + 8 * v49);
    ++v51;
    if (v50) {
      goto LABEL_54;
    }
  }
LABEL_78:
  __break(1u);
LABEL_79:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACA8DB78(uint64_t a1)
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(a1 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1ACA8E6B0(&v3);
  os_unfair_lock_unlock(v1);
  sub_1ACA8DCB4(v3, *((uint64_t *)&v3 + 1));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACA8DC08@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1ACD0AC6C(v2);
  swift_bridgeObjectRelease();
  *a1 = v3;
  swift_beginAccess();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1ACD0AB60(v4);
  uint64_t result = swift_bridgeObjectRelease();
  a1[1] = (uint64_t)v5;
  return result;
}

void sub_1ACA8DCB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1ACE75EC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = *(void **)(v3 + 16);
  *unint64_t v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
  id v11 = v10;
  LOBYTE(v10) = sub_1ACE75EF8();
  uint64_t v12 = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    return;
  }
  if (!*(void *)(a1 + 16))
  {
    if (!*(void *)(a2 + 16)) {
      return;
    }
    goto LABEL_8;
  }
  MEMORY[0x1F4188790](v12);
  *(void *)&v21[-16] = sub_1ACA8C818;
  *(void *)&v21[-8] = v3;
  unint64_t v14 = v13 + 4;
  os_unfair_lock_lock(v13 + 4);
  sub_1ACA8E6B0(&v22);
  os_unfair_lock_unlock(v14);
  if ((void)v22)
  {
    uint64_t v15 = *((void *)&v22 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(a1, ObjectType, v15);
    uint64_t v12 = swift_unknownObjectRelease();
  }
  if (*(void *)(a2 + 16))
  {
LABEL_8:
    MEMORY[0x1F4188790](v12);
    *(void *)&v21[-16] = sub_1ACA8C818;
    *(void *)&v21[-8] = v3;
    unint64_t v18 = v17 + 4;
    os_unfair_lock_lock(v17 + 4);
    sub_1ACA8E6B0(&v22);
    os_unfair_lock_unlock(v18);
    if ((void)v22)
    {
      uint64_t v19 = *((void *)&v22 + 1);
      uint64_t v20 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 8))(a2, v20, v19);
      swift_unknownObjectRelease();
    }
  }
}

void sub_1ACA8DF28()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1ACA8F73C();
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1ACA8DF8C(uint64_t result)
{
  if (!*(void *)(result + 40))
  {
    uint64_t v1 = result;
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76DDD8);
    sub_1ACA51EA4(&qword_1EB76DDD0, (uint64_t *)&unk_1EB76DDD8);
    uint64_t v2 = sub_1ACE75D58();
    swift_release();
    swift_release();
    *(void *)(v1 + 40) = v2;
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACA8E080(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1ACA8D0C0(v1);
    return swift_release();
  }
  return result;
}

double sub_1ACA8E0E0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 24) + 16);
  os_unfair_lock_lock(v3);
  sub_1ACA8EF14((uint64_t)v7);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v8;
  double result = *(double *)v7;
  long long v6 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = v4;
  return result;
}

uint64_t sub_1ACA8E164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 72);
  if (*(void *)(v7 + 16) && (uint64_t result = sub_1ACA65CC4(a2), (v8 & 1) != 0))
  {
    unint64_t v9 = (uint64_t *)(*(void *)(v7 + 56) + 40 * result);
    uint64_t v10 = *v9;
    uint64_t v11 = v9[1];
    unint64_t v13 = v9[2];
    uint64_t v12 = v9[3];
    uint64_t v14 = v9[4];
    uint64_t result = sub_1ACA50D88(*v9, v11, v13);
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v14 = 0;
    unint64_t v13 = 3;
  }
  *a3 = v10;
  a3[1] = v11;
  a3[2] = v13;
  a3[3] = v12;
  a3[4] = v14;
  return result;
}

double sub_1ACA8E234@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 24) + 16);
  os_unfair_lock_lock(v3);
  sub_1ACA8EF14((uint64_t)v7);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v8;
  double result = *(double *)v7;
  long long v6 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = v4;
  return result;
}

uint64_t sub_1ACA8E2BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 80);
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1ACA657FC(a2, a3);
    if (v11)
    {
      uint64_t v12 = (uint64_t *)(*(void *)(v9 + 56) + 40 * v10);
      uint64_t v13 = *v12;
      uint64_t v14 = v12[1];
      unint64_t v16 = v12[2];
      uint64_t v15 = v12[3];
      uint64_t v17 = v12[4];
      sub_1ACA50D88(*v12, v14, v16);
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v17 = 0;
      unint64_t v16 = 3;
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v17 = 0;
    unint64_t v16 = 3;
  }
  *a4 = v13;
  a4[1] = v14;
  a4[2] = v16;
  a4[3] = v15;
  a4[4] = v17;
  return result;
}

uint64_t LibraryPodcastStateDataSource.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  sub_1ACA8EF4C(v0 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LibraryPodcastStateDataSource.__deallocating_deinit()
{
  LibraryPodcastStateDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACA8E460()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1ACA8F73C();
  os_unfair_lock_unlock(v1);
  return swift_unknownObjectRelease();
}

void (*sub_1ACA8E4DC(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ACA8CB8C(v2);
  return sub_1ACA8E534;
}

void sub_1ACA8E534(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

double sub_1ACA8E57C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 24) + 16);
  os_unfair_lock_lock(v3);
  sub_1ACA8EF14((uint64_t)v7);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v8;
  double result = *(double *)v7;
  long long v6 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = v4;
  return result;
}

double sub_1ACA8E600@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 24) + 16);
  os_unfair_lock_lock(v3);
  sub_1ACA8EF14((uint64_t)v7);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v8;
  double result = *(double *)v7;
  long long v6 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = v4;
  return result;
}

uint64_t sub_1ACA8E688(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

double sub_1ACA8E6B0@<D0>(_OWORD *a1@<X8>)
{
  return sub_1ACA8F64C(a1);
}

uint64_t sub_1ACA8E6C8()
{
  return sub_1ACA8C8AC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1ACA8E6E8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1ACA8E710(void *a1@<X8>)
{
  *a1 = 1;
}

double sub_1ACA8E71C@<D0>(void (*a1)(_OWORD *__return_ptr)@<X1>, uint64_t a2@<X8>)
{
  a1(v7);
  if (!v2)
  {
    uint64_t v5 = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    *(void *)(a2 + 32) = v5;
  }
  return result;
}

BOOL sub_1ACA8E768(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (v5 = sub_1ACE77848(), BOOL result = 0, (v5 & 1) != 0))
  {
    char v7 = *(unsigned char *)(a2 + 24);
    if (*(unsigned char *)(a1 + 24))
    {
      if (!*(unsigned char *)(a2 + 24)) {
        return 0;
      }
    }
    else
    {
      if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
        char v7 = 1;
      }
      if (v7) {
        return 0;
      }
    }
    sub_1ACA8F4F4(a1 + 32, (uint64_t)v16);
    sub_1ACA8F4F4(a2 + 32, (uint64_t)v15);
    sub_1ACA8F4F4((uint64_t)v16, (uint64_t)v17);
    uint64_t v8 = v19;
    switch(v19)
    {
      case 2:
        sub_1ACA8F4F4((uint64_t)v15, (uint64_t)v22);
        if (v24 != 2) {
          return 0;
        }
        break;
      case 1:
        sub_1ACA8F4F4((uint64_t)v15, (uint64_t)v22);
        if (v24 != 1) {
          return 0;
        }
        break;
      case 0:
        sub_1ACA8F4F4((uint64_t)v15, (uint64_t)v22);
        return !v24;
      default:
        int v9 = v17[0];
        uint64_t v10 = v18;
        int v11 = v20;
        uint64_t v12 = v21;
        sub_1ACA8F4F4((uint64_t)v15, (uint64_t)v22);
        if (v24 < 3 || v9 != v22[0]) {
          return 0;
        }
        int v13 = v25;
        uint64_t v14 = v26;
        if (v10 == v23 && v8 == v24)
        {
          if (v11 != v25) {
            return 0;
          }
        }
        else if ((sub_1ACE77848() & 1) == 0 || v11 != v13)
        {
          return 0;
        }
        if (v12 != v14) {
          return 0;
        }
        break;
    }
    return 1;
  }
  return result;
}

void *sub_1ACA8E90C(void *a1)
{
  uint64_t v2 = v1;
  id v28 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D880);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  uint64_t v31 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v29 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE76CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v27 = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACE75E08();
  uint64_t v32 = MEMORY[0x1E4FBC860];
  sub_1ACA8F6D8((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCC58], v6);
  uint64_t v12 = (void *)sub_1ACE76D28();
  v1[2] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = 0;
  v1[3] = v13;
  v1[5] = 0;
  v1[7] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v14 = MEMORY[0x1E4FBC868];
  v1[8] = MEMORY[0x1E4FBC870];
  v1[9] = v14;
  v1[10] = v14;
  sub_1ACE761B8();
  id v15 = objc_msgSend(self, sel_predicateForNotHiddenPodcasts);
  id v16 = objc_msgSend(v28, sel_importContext);
  id v17 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v18 = v12;
  uint64_t v19 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v17, sel_initWithEntityName_, v19);

  objc_msgSend(v20, sel_setPredicate_, v15);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  uint64_t v21 = (void *)sub_1ACE76558();
  objc_msgSend(v20, sel_setSortDescriptors_, v21);

  objc_msgSend(v20, sel_setFetchBatchSize_, 0x7FFFFFFFFFFFFFFFLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D330);
  swift_allocObject();
  *((void *)&v26 + 1) = sub_1ACA8E710;
  *(void *)&long long v26 = 0;
  uint64_t v32 = sub_1ACA97690(0xD00000000000001DLL, 0x80000001ACE86E90, (uint64_t)v20, (uint64_t)v16, (uint64_t)v18, (uint64_t)sub_1ACA8CDB4, 0, (uint64_t)sub_1ACA8CF08, v26, 0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76C878);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E0B8);
  sub_1ACA51EA4(&qword_1EB76C870, (uint64_t *)&unk_1EB76C878);
  long long v22 = v29;
  sub_1ACE75B58();
  swift_release();
  sub_1ACA51EA4(&qword_1EB76D878, &qword_1EB76D880);
  uint64_t v23 = v30;
  uint64_t v24 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v23);
  v2[4] = v24;
  return v2;
}

uint64_t sub_1ACA8EEDC()
{
  return sub_1ACA8DF8C(v0);
}

uint64_t sub_1ACA8EEF8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACA8E164(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

double sub_1ACA8EF14@<D0>(uint64_t a1@<X8>)
{
  return sub_1ACA8F5C8(a1);
}

uint64_t sub_1ACA8EF2C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACA8E2BC(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1ACA8EF4C(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for LibraryPodcastStateDataSource()
{
  return self;
}

uint64_t method lookup function for LibraryPodcastStateDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LibraryPodcastStateDataSource);
}

uint64_t dispatch thunk of LibraryPodcastStateDataSource.delegate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of LibraryPodcastStateDataSource.delegate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of LibraryPodcastStateDataSource.delegate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of LibraryPodcastStateDataSource.__allocating_init(contextProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of LibraryPodcastStateDataSource.activate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of LibraryPodcastStateDataSource.state(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

unint64_t destroy for LibraryPodcastStateDataSource.State(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)(a1 + 48);
  if (result >= 3)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for LibraryPodcastStateDataSource.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v5 >= 3)
  {
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v5;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
  }
  return a1;
}

uint64_t assignWithCopy for LibraryPodcastStateDataSource.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  unint64_t v5 = (_OWORD *)(a1 + 32);
  long long v6 = (_OWORD *)(a2 + 32);
  unint64_t v7 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48) >= 3uLL)
  {
    if (v7 >= 3)
    {
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
    }
    else
    {
      sub_1ACA8F2E4(a1 + 32);
      uint64_t v10 = *(void *)(a2 + 64);
      long long v11 = *(_OWORD *)(a2 + 48);
      *unint64_t v5 = *v6;
      *(_OWORD *)(a1 + 48) = v11;
      *(void *)(a1 + 64) = v10;
    }
  }
  else if (v7 >= 3)
  {
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *v6;
    long long v9 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *unint64_t v5 = v8;
    *(_OWORD *)(a1 + 48) = v9;
  }
  return a1;
}

uint64_t sub_1ACA8F2E4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F12B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t assignWithTake for LibraryPodcastStateDataSource.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  if (*(void *)(a1 + 48) >= 3uLL)
  {
    unint64_t v5 = *(void *)(a2 + 48);
    if (v5 >= 3)
    {
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v5;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      return a1;
    }
    sub_1ACA8F2E4(a1 + 32);
  }
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryPodcastStateDataSource.State(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryPodcastStateDataSource.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryPodcastStateDataSource.State()
{
  return &type metadata for LibraryPodcastStateDataSource.State;
}

unint64_t sub_1ACA8F4A0()
{
  unint64_t result = qword_1EB76CBC8;
  if (!qword_1EB76CBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76CBC8);
  }
  return result;
}

uint64_t sub_1ACA8F4F4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ACA8F550@<X0>(void *a1@<X8>)
{
  return sub_1ACA8D27C(*(uint64_t **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1ACA8F56C(uint64_t a1, uint64_t a2)
{
  return a2;
}

double sub_1ACA8F5C8@<D0>(uint64_t a1@<X8>)
{
  (*(void (**)(_OWORD *__return_ptr))(v1 + 16))(v7);
  if (!v2)
  {
    uint64_t v5 = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a1 = v7[0];
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = v5;
  }
  return result;
}

uint64_t sub_1ACA8F614@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MEMORY[0x1AD11B470](v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  *a1 = result;
  a1[1] = v4;
  return result;
}

double sub_1ACA8F64C@<D0>(_OWORD *a1@<X8>)
{
  (*(void (**)(long long *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
  {
    double result = *(double *)&v5;
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1ACA8F690()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACA8F6C8(uint64_t *a1)
{
  return sub_1ACA8E080(a1);
}

uint64_t sub_1ACA8F6D0()
{
  return sub_1ACA8DB78(v0);
}

uint64_t sub_1ACA8F6D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACA8F720@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACA8DC08(a1);
}

uint64_t sub_1ACA8F73C()
{
  return sub_1ACA8E6E8();
}

uint64_t sub_1ACA8F754@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACA8EEF8(a1);
}

uint64_t sub_1ACA8F76C()
{
  return sub_1ACA8E6C8();
}

uint64_t sub_1ACA8F784@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACA8EF2C(a1);
}

uint64_t EpisodeType.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x73756E6F62;
  }
  if (a1 == 1) {
    return 1819047270;
  }
  return 0x72656C69617274;
}

uint64_t sub_1ACA8F7EC(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = 1819047270;
  if (v2 != 1)
  {
    uint64_t v4 = 0x72656C69617274;
    unint64_t v3 = 0xE700000000000000;
  }
  if (*a1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0x73756E6F62;
  }
  if (v2) {
    unint64_t v6 = v3;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  unint64_t v7 = 0xE400000000000000;
  uint64_t v8 = 1819047270;
  if (*a2 != 1)
  {
    uint64_t v8 = 0x72656C69617274;
    unint64_t v7 = 0xE700000000000000;
  }
  if (*a2) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0x73756E6F62;
  }
  if (*a2) {
    unint64_t v10 = v7;
  }
  else {
    unint64_t v10 = 0xE500000000000000;
  }
  if (v5 == v9 && v6 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1ACA8F8E0()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACA8F978()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACA8F9FC()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACA8FA90@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s18PodcastsFoundation11EpisodeTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1ACA8FAC0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1819047270;
  if (v2 != 1)
  {
    uint64_t v5 = 0x72656C69617274;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x73756E6F62;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1ACA8FB14()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACA8FB74()
{
  return sub_1ACE764C8();
}

uint64_t _s18PodcastsFoundation11EpisodeTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_1ACA8FC14()
{
  unint64_t result = qword_1E99F12B8;
  if (!qword_1E99F12B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F12B8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EpisodeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACA8FD34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeType()
{
  return &type metadata for EpisodeType;
}

unint64_t sub_1ACA8FD6C()
{
  unint64_t result = qword_1EB76AB30;
  if (!qword_1EB76AB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76AB30);
  }
  return result;
}

unint64_t sub_1ACA8FDC0(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x1AD11B360](&v3, 8);
    unint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x1AD11B360](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACA8FE4C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v0 - 8);
  unint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v3 = sub_1ACA8FDC0(0x186A0uLL);
  sub_1ACE74EF8();
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    id v7 = objc_allocWithZone(MEMORY[0x1E4F166C8]);
    uint64_t v8 = (void *)sub_1ACE74E18();
    id v9 = objc_msgSend(v7, sel_initWithURL_options_, v8, 0);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v2, v4);
    unint64_t v10 = (objc_class *)type metadata accessor for FairPlayAsset();
    char v11 = (char *)objc_allocWithZone(v10);
    *(void *)&v11[OBJC_IVAR___PFFairPlayAsset_adamID] = v3;
    *(void *)&v11[OBJC_IVAR___PFFairPlayAsset_avAsset] = v9;
    sub_1ACA90040();
    id v12 = v9;
    uint64_t v13 = v11;
    *(void *)&v13[OBJC_IVAR___PFFairPlayAsset_keyStore] = sub_1ACC47E5C(v12);

    v15.id receiver = v13;
    v15.Class super_class = v10;
    id v14 = objc_msgSendSuper2(&v15, sel_init);

    return (uint64_t)v14;
  }
  return result;
}

unint64_t sub_1ACA90040()
{
  unint64_t result = qword_1E99F12C0;
  if (!qword_1E99F12C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E99F12C0);
  }
  return result;
}

BOOL CompoundScheduleType.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

uint64_t CompoundSchedule.type.getter()
{
  return *(void *)(v0 + OBJC_IVAR___PFCompoundSchedule_type);
}

uint64_t CompoundSchedule.children.getter()
{
  return swift_bridgeObjectRetain();
}

id CompoundSchedule.__allocating_init(type:children:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR___PFCompoundSchedule_type] = a1;
  *(void *)&v5[OBJC_IVAR___PFCompoundSchedule_children] = a2;
  v7.id receiver = v5;
  v7.Class super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id CompoundSchedule.init(type:children:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR___PFCompoundSchedule_type] = a1;
  *(void *)&v2[OBJC_IVAR___PFCompoundSchedule_children] = a2;
  v4.id receiver = v2;
  v4.Class super_class = (Class)type metadata accessor for CompoundSchedule();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for CompoundSchedule()
{
  return self;
}

uint64_t sub_1ACA9021C(unsigned int (**a1)(char *, uint64_t, uint64_t), uint64_t a2)
{
  unint64_t v50 = a1;
  uint64_t v53 = (char *)a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  uint64_t v52 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v52 + 64);
  uint64_t v4 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v46 - v7;
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v54 = (uint64_t)&v46 - v10;
  MEMORY[0x1F4188790](v9);
  id v12 = (void (**)(char *, uint64_t))((char *)&v46 - v11);
  uint64_t v13 = sub_1ACE750A8();
  uint64_t v48 = *(void *)(v13 - 8);
  uint64_t v14 = v48;
  uint64_t v15 = *(void *)(v48 + 64);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  MEMORY[0x1F4188790](v16);
  id v18 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)&v46 - v17);
  uint64_t v19 = *(void (**)(char *, unsigned int (**)(char *, uint64_t, uint64_t), uint64_t))(v14 + 16);
  v19((char *)&v46 - v17, v50, v13);
  int64_t v49 = v12;
  sub_1ACA72A5C((uint64_t)v53, (uint64_t)v12);
  uint64_t v53 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19(v53, v18, v13);
  sub_1ACA72A5C((uint64_t)v12, v54);
  uint64_t v20 = v48;
  unint64_t v21 = (*(unsigned __int8 *)(v48 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  unint64_t v22 = (v15 + *(unsigned __int8 *)(v52 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  unint64_t v23 = swift_allocObject();
  uint64_t v24 = *(void (**)(unint64_t, char *, uint64_t))(v20 + 32);
  uint64_t v52 = v13;
  v24(v23 + v21, (char *)v18, v13);
  sub_1ACA909B4((uint64_t)v49, v23 + v22);
  uint64_t v25 = *(void *)(v51 + OBJC_IVAR___PFCompoundSchedule_type);
  if (v25 == 1)
  {
    unint64_t v26 = *(void *)(v51 + OBJC_IVAR___PFCompoundSchedule_children);
    if (v26 >> 62) {
      goto LABEL_34;
    }
    uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v27) {
      goto LABEL_35;
    }
    goto LABEL_4;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v53, v52);
    sub_1ACA3E034(v54);
    uint64_t v55 = v25;
    uint64_t result = sub_1ACE77A18();
    __break(1u);
  }
  else
  {
    unint64_t v26 = *(void *)(v51 + OBJC_IVAR___PFCompoundSchedule_children);
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v5 = (char *)sub_1ACE77508();
      if (v5) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v5 = *(char **)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v5)
      {
LABEL_19:
        unint64_t v47 = v23;
        unint64_t v23 = v26 & 0xC000000000000001;
        unint64_t v37 = (unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
        int64_t v49 = (void (**)(char *, uint64_t))(v48 + 8);
        unint64_t v50 = (unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
        uint64_t v38 = 4;
        unint64_t v51 = v26;
        while (1)
        {
          uint64_t v39 = v38 - 4;
          if (v23)
          {
            uint64_t v40 = (void *)MEMORY[0x1AD119490](v38 - 4, v26);
            uint64_t v41 = (char *)(v38 - 3);
            if (__OFADD__(v39, 1))
            {
LABEL_33:
              __break(1u);
LABEL_34:
              swift_bridgeObjectRetain_n();
              uint64_t v27 = sub_1ACE77508();
              if (!v27)
              {
LABEL_35:
                uint64_t v36 = 0;
                goto LABEL_38;
              }
LABEL_4:
              unint64_t v47 = v23;
              unint64_t v23 = v26 & 0xC000000000000001;
              id v28 = (unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
              int64_t v49 = (void (**)(char *, uint64_t))(v48 + 8);
              unint64_t v50 = (unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
              uint64_t v29 = 4;
              unint64_t v51 = v26;
              while (1)
              {
                uint64_t v30 = v29 - 4;
                if (v23)
                {
                  uint64_t v31 = (void *)MEMORY[0x1AD119490](v29 - 4, v26);
                  uint64_t v32 = v29 - 3;
                  if (__OFADD__(v30, 1)) {
                    goto LABEL_32;
                  }
                }
                else
                {
                  uint64_t v31 = *(void **)(v26 + 8 * v29);
                  swift_unknownObjectRetain();
                  uint64_t v32 = v29 - 3;
                  if (__OFADD__(v30, 1))
                  {
LABEL_32:
                    __break(1u);
                    goto LABEL_33;
                  }
                }
                unint64_t v33 = (void *)sub_1ACE75008();
                sub_1ACA72A5C(v54, (uint64_t)v5);
                uint64_t v34 = v52;
                if ((*v28)(v5, 1, v52) == 1)
                {
                  uint64_t v35 = 0;
                }
                else
                {
                  uint64_t v35 = (void *)sub_1ACE75008();
                  id v28 = v50;
                  (*v49)(v5, v34);
                }
                uint64_t v36 = (uint64_t)objc_msgSend(v31, sel_shouldExecuteOn_previousExecution_, v33, v35);
                swift_unknownObjectRelease();

                if ((v36 & 1) == 0)
                {
                  ++v29;
                  unint64_t v26 = v51;
                  if (v32 != v27) {
                    continue;
                  }
                }
                goto LABEL_38;
              }
            }
          }
          else
          {
            uint64_t v40 = *(void **)(v26 + 8 * v38);
            swift_unknownObjectRetain();
            uint64_t v41 = (char *)(v38 - 3);
            if (__OFADD__(v39, 1)) {
              goto LABEL_33;
            }
          }
          uint64_t v42 = (void *)sub_1ACE75008();
          sub_1ACA72A5C(v54, (uint64_t)v8);
          uint64_t v43 = v52;
          if ((*v37)(v8, 1, v52) == 1)
          {
            int64_t v44 = 0;
          }
          else
          {
            int64_t v44 = (void *)sub_1ACE75008();
            unint64_t v37 = v50;
            (*v49)(v8, v43);
          }
          uint64_t v36 = (uint64_t)objc_msgSend(v40, sel_shouldExecuteOn_previousExecution_, v42, v44);
          swift_unknownObjectRelease();

          if (v36)
          {
            ++v38;
            unint64_t v26 = v51;
            if (v41 != v5) {
              continue;
            }
          }
          goto LABEL_38;
        }
      }
    }
    uint64_t v36 = 1;
LABEL_38:
    swift_release();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v53, v52);
    sub_1ACA3E034(v54);
    return v36;
  }
  return result;
}

uint64_t sub_1ACA9084C()
{
  uint64_t v1 = sub_1ACE750A8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v7(v0 + v3, v1);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v2 + 48))(v0 + v6, 1, v1)) {
    v7(v0 + v6, v1);
  }
  return swift_deallocObject();
}

uint64_t sub_1ACA909B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id CompoundSchedule.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CompoundSchedule.init()()
{
}

id CompoundSchedule.__deallocating_deinit()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CompoundSchedule();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1ACA90C74()
{
  unint64_t result = qword_1E99F12D8;
  if (!qword_1E99F12D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F12D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CompoundScheduleType()
{
  return &type metadata for CompoundScheduleType;
}

uint64_t method lookup function for CompoundSchedule(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CompoundSchedule);
}

uint64_t dispatch thunk of CompoundSchedule.__allocating_init(type:children:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of CompoundSchedule.shouldExecute(on:previousExecution:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t sub_1ACA90D48@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1ACA91C80;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_1ACA6DEC8(v4);
}

uint64_t sub_1ACA90DDC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1ACA91C78;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 16);
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  sub_1ACA6DEC8(v3);
  return sub_1ACA76F34(v8);
}

uint64_t InMemoryEpisodeStateDataSource.refreshControllerStates.getter()
{
  uint64_t v0 = sub_1ACA91A90();
  sub_1ACA6DEC8(v0);
  return v0;
}

uint64_t InMemoryEpisodeStateDataSource.refreshControllerStates.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return sub_1ACA76F34(v5);
}

uint64_t (*InMemoryEpisodeStateDataSource.refreshControllerStates.modify())()
{
  return j__swift_endAccess;
}

void *InMemoryEpisodeStateDataSource.__allocating_init(inMemoryStateStore:)(uint64_t a1)
{
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = 0;
  v2[3] = 0;
  v2[4] = a1;
  v2[5] = 0;
  swift_retain();
  InMemoryEpisodeStateDataSource.startObservingChanges()();
  swift_release();
  return v2;
}

void *InMemoryEpisodeStateDataSource.init(inMemoryStateStore:)(uint64_t a1)
{
  id v1 = sub_1ACA91AC4(a1);
  swift_release();
  return v1;
}

Swift::Void __swiftcall InMemoryEpisodeStateDataSource.startObservingChanges()()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F12E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  InMemoryStateStore.stateUpdates.getter(&v11);
  uint64_t v10 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0FF8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E58);
  sub_1ACA51EA4((unint64_t *)&qword_1E99F1088, &qword_1E99F0FF8);
  sub_1ACE75B58();
  swift_release();
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = (void *)swift_allocObject();
  _DWORD v8[2] = *(void *)(v2 + 80);
  v8[3] = *(void *)(v2 + 88);
  v8[4] = v7;
  sub_1ACA51EA4(qword_1E99F12F0, &qword_1E99F12E8);
  uint64_t v9 = sub_1ACE75D58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v1[5] = v9;
  swift_release();
}

uint64_t sub_1ACA91244@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)result;
  int64_t v4 = *(void *)(*(void *)result + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    unint64_t result = sub_1ACC82F48(0, v4, 0);
    uint64_t v5 = v14;
    uint64_t v6 = (uint64_t *)(v3 + 32);
    unint64_t v7 = *(void *)(v14 + 16);
    uint64_t v8 = 24 * v7;
    do
    {
      uint64_t v10 = *v6++;
      uint64_t v9 = v10;
      uint64_t v15 = v5;
      unint64_t v11 = *(void *)(v5 + 24);
      unint64_t v12 = v7 + 1;
      if (v7 >= v11 >> 1)
      {
        unint64_t result = sub_1ACC82F48(v11 > 1, v7 + 1, 1);
        uint64_t v5 = v15;
      }
      *(void *)(v5 + 16) = v12;
      uint64_t v13 = v5 + v8;
      *(void *)(v13 + 32) = v9;
      *(void *)(v13 + 40) = 0;
      *(unsigned char *)(v13 + 48) = 0;
      v8 += 24;
      unint64_t v7 = v12;
      --v4;
    }
    while (v4);
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1ACA91324(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    swift_beginAccess();
    int64_t v4 = *(void (**)(uint64_t))(v3 + 16);
    if (v4)
    {
      sub_1ACA6DEC8(*(void *)(v3 + 16));
      swift_release();
      v4(v1);
      return sub_1ACA76F34((uint64_t)v4);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

void sub_1ACA913D8(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  if (a3)
  {
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1ACE754C8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1E99F2BF8);
    swift_bridgeObjectRetain_n();
    unint64_t v11 = sub_1ACE75498();
    os_log_type_t v12 = sub_1ACE76BE8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v18 = v14;
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1ACE76228();
      sub_1ACA3189C(v15, v16, &v18);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACA91B68(a1, a2, 1);
      sub_1ACA91B68(a1, a2, 1);
      _os_log_impl(&dword_1AC9D5000, v11, v12, "Episode ID not supported on thin clients: %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v14, -1, -1);
      MEMORY[0x1AD11B340](v13, -1, -1);
    }
    else
    {
      sub_1ACA91B68(a1, a2, 1);
      sub_1ACA91B68(a1, a2, 1);
    }

    uint64_t v17 = type metadata accessor for EpisodePlayState();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a4, 1, 1, v17);
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    unint64_t v7 = (uint64_t *)&v6[4];
    uint64_t v8 = v6 + 8;
    os_unfair_lock_lock(v6 + 8);
    sub_1ACA91C88(v7, a4);
    os_unfair_lock_unlock(v8);
  }
}

void InMemoryEpisodeStateDataSource.state(for:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  if (a3)
  {
    uint64_t v8 = *v4;
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1ACE754C8();
    __swift_project_value_buffer(v9, (uint64_t)qword_1E99F2BF8);
    sub_1ACA72530(a1, a2, 1);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1ACE75498();
    os_log_type_t v11 = sub_1ACE76BE8();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v17 = v8;
      os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v12 = 136315138;
      uint64_t v18 = v13;
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_1ACE76228();
      sub_1ACA3189C(v14, v15, &v18);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACA91B68(a1, a2, 1);
      sub_1ACA91B68(a1, a2, 1);
      _os_log_impl(&dword_1AC9D5000, v10, v11, "Episode ID not supported on thin clients: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v13, -1, -1);
      unint64_t v16 = v12;
      uint64_t v8 = v17;
      MEMORY[0x1AD11B340](v16, -1, -1);
    }
    else
    {
      sub_1ACA91B68(a1, a2, 1);
      sub_1ACA91B68(a1, a2, 1);
    }

    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v8 + 80) - 8) + 56))(a4, 1, 1);
  }
  else
  {
    InMemoryStateStore.state(for:)(a1);
  }
}

uint64_t InMemoryEpisodeStateDataSource.deinit()
{
  sub_1ACA76F34(*(void *)(v0 + 16));
  swift_release();
  swift_release();
  return v0;
}

uint64_t InMemoryEpisodeStateDataSource.__deallocating_deinit()
{
  InMemoryEpisodeStateDataSource.deinit();
  return swift_deallocClassInstance();
}

void sub_1ACA9195C()
{
}

uint64_t sub_1ACA91980()
{
  uint64_t v0 = sub_1ACA91A90();
  sub_1ACA6DEC8(v0);
  return v0;
}

uint64_t sub_1ACA919B8(uint64_t a1, uint64_t a2)
{
  return InMemoryEpisodeStateDataSource.refreshControllerStates.setter(a1, a2);
}

void (*sub_1ACA919DC(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = InMemoryEpisodeStateDataSource.refreshControllerStates.modify();
  return sub_1ACA8E534;
}

void sub_1ACA91A38(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
}

void InMemoryEpisodeStateDataSource<>.estimatedPlayState(for:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
}

void sub_1ACA91A68(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
}

uint64_t sub_1ACA91A90()
{
  swift_beginAccess();
  return *(void *)(v0 + 16);
}

void *sub_1ACA91AC4(uint64_t a1)
{
  v1[2] = 0;
  v1[3] = 0;
  v1[4] = a1;
  v1[5] = 0;
  swift_retain();
  InMemoryEpisodeStateDataSource.startObservingChanges()();
  return v1;
}

uint64_t sub_1ACA91AEC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACA91B24()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA91B5C(uint64_t *a1)
{
  return sub_1ACA91324(a1);
}

uint64_t sub_1ACA91B68(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACA91B78(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_1ACA91B88()
{
  return 16;
}

__n128 sub_1ACA91B94(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1ACA91BA0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for InMemoryEpisodeStateDataSource()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for InMemoryEpisodeStateDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InMemoryEpisodeStateDataSource);
}

uint64_t dispatch thunk of InMemoryEpisodeStateDataSource.__allocating_init(inMemoryStateStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1ACA91C40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA91C78(uint64_t a1)
{
  return sub_1ACDD0204(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1ACA91C80(void *a1)
{
  return sub_1ACDD01D8(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1ACA91C88@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACC48FE8(*(void *)(v2 + 16), *a1, a1[1], a2);
}

uint64_t NSManagedObjectContextProvider.managedObjectContext(for:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_1ACE767F8();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACA91D90, 0, 0);
}

uint64_t sub_1ACA91D90()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  (*(void (**)(void, void, uint64_t))(v3 + 16))(*(void *)(v0 + 56), *(void *)(v0 + 16), v2);
  sub_1ACE76788();
  sub_1ACA9204C();
  char v4 = sub_1ACE76168();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v1, v2);
  if ((v4 & 1) != 0
    || (uint64_t v6 = *(void *)(v0 + 48),
        uint64_t v7 = *(void *)(v0 + 32),
        sub_1ACE767A8(),
        char v8 = sub_1ACE76168(),
        v5(v6, v7),
        (v8 & 1) != 0))
  {
    uint64_t v9 = &selRef_importContext;
LABEL_4:
    v5(*(void *)(v0 + 56), *(void *)(v0 + 32));
    goto LABEL_5;
  }
  uint64_t v13 = *(void *)(v0 + 48);
  uint64_t v14 = *(void *)(v0 + 32);
  sub_1ACE767D8();
  char v15 = sub_1ACE76168();
  v5(v13, v14);
  if (v15)
  {
    uint64_t v9 = &selRef_privateQueueContext;
    goto LABEL_4;
  }
  uint64_t v16 = *(void *)(v0 + 48);
  uint64_t v17 = *(void *)(v0 + 32);
  sub_1ACE767A8();
  char v18 = sub_1ACE76168();
  v5(v16, v17);
  uint64_t v9 = &selRef_privateQueueContext;
  if (v18) {
    goto LABEL_4;
  }
  uint64_t v19 = *(void *)(v0 + 48);
  uint64_t v20 = *(void *)(v0 + 32);
  sub_1ACE76798();
  char v21 = sub_1ACE76168();
  v5(v19, v20);
  uint64_t v9 = &selRef_mainQueueContext;
  if (v21) {
    goto LABEL_4;
  }
  uint64_t v23 = *(void *)(v0 + 48);
  uint64_t v22 = *(void *)(v0 + 56);
  uint64_t v24 = *(void *)(v0 + 32);
  sub_1ACE76798();
  char v25 = sub_1ACE76168();
  v5(v23, v24);
  v5(v22, v24);
  if ((v25 & 1) == 0) {
    uint64_t v9 = &selRef_privateQueueContext;
  }
LABEL_5:
  id v10 = [*(id *)(v0 + 24) *v9];
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v11 = *(uint64_t (**)(id))(v0 + 8);
  return v11(v10);
}

unint64_t sub_1ACA9204C()
{
  unint64_t result = qword_1EB771BF8;
  if (!qword_1EB771BF8)
  {
    sub_1ACE767F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771BF8);
  }
  return result;
}

uint64_t BundleAssetTranscriptProvider.ttmlFileName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BundleAssetTranscriptProvider.signatureFileName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id BundleAssetTranscriptProvider.bundle.getter()
{
  return *(id *)(v0 + 32);
}

void __swiftcall BundleAssetTranscriptProvider.init(ttmlFileName:signatureFileName:bundle:)(PodcastsFoundation::BundleAssetTranscriptProvider *__return_ptr retstr, Swift::String ttmlFileName, Swift::String signatureFileName, NSBundle bundle)
{
  retstr->ttmlFileName = ttmlFileName;
  retstr->signatureFileName = signatureFileName;
  retstr->bundle = bundle;
}

uint64_t BundleAssetTranscriptProvider.transcript(for:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1380);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v65 = v1;
  uint64_t v66 = v2;
  MEMORY[0x1F4188790](v1);
  unint64_t v63 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1388);
  uint64_t v61 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v55 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1390);
  uint64_t v64 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v56 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1398);
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v52);
  unint64_t v51 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  int64_t v49 = (char *)v44 - v8;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F13A0);
  uint64_t v60 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  unint64_t v50 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F13A8);
  uint64_t v47 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v45 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F13B0);
  uint64_t v57 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  char v69 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F13B8);
  uint64_t v70 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F13C0);
  uint64_t v54 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  char v67 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v0[1];
  uint64_t v18 = v0[2];
  uint64_t v19 = v0[3];
  uint64_t v20 = v0[4];
  uint64_t v71 = *v0;
  uint64_t v16 = v71;
  uint64_t v72 = v17;
  uint64_t v73 = v18;
  uint64_t v74 = v19;
  uint64_t v75 = v20;
  sub_1ACA92B88(v71, v17, 1819112564, 0xE400000000000000, (uint64_t)v14);
  v44[1] = MEMORY[0x1E4F1AA20];
  sub_1ACA51EA4(&qword_1E99F13C8, &qword_1E99F13B8);
  sub_1ACE75C28();
  char v21 = *(void (**)(char *, uint64_t))(v70 + 8);
  v70 += 8;
  v21(v14, v12);
  uint64_t v71 = v16;
  uint64_t v72 = v17;
  uint64_t v73 = v18;
  uint64_t v74 = v19;
  uint64_t v75 = v20;
  sub_1ACA92B88(v18, v19, 0x727574616E676973, 0xE900000000000065, (uint64_t)v14);
  sub_1ACA50D4C(0, &qword_1E99F13D0);
  uint64_t v22 = v45;
  sub_1ACE75C28();
  v21(v14, v12);
  sub_1ACA50D4C(0, &qword_1E99F13D8);
  uint64_t v23 = v46;
  sub_1ACE756D8();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v22, v23);
  uint64_t v24 = v49;
  sub_1ACE756E8();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1ACA93074;
  *(void *)(v25 + 24) = 0;
  uint64_t v26 = v51;
  uint64_t v27 = v48;
  sub_1ACE756E8();
  swift_release();
  sub_1ACA51EA4(&qword_1E99F13E0, &qword_1E99F1398);
  id v28 = v50;
  uint64_t v29 = v26;
  uint64_t v30 = v52;
  sub_1ACE75BB8();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v53 + 8);
  v31(v29, v30);
  v31(v24, v30);
  sub_1ACA51EA4(&qword_1E99F13E8, &qword_1E99F13B0);
  sub_1ACA51EA4(&qword_1E99F13F0, &qword_1E99F13C0);
  uint64_t v32 = v55;
  unint64_t v33 = v69;
  sub_1ACE75B18();
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_1ACA93170;
  *(void *)(v34 + 24) = 0;
  sub_1ACA51EA4(&qword_1E99F13F8, &qword_1E99F1388);
  uint64_t v35 = v56;
  uint64_t v36 = v59;
  sub_1ACE75B58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v32, v36);
  sub_1ACA51EA4(&qword_1E99F1400, &qword_1E99F13A0);
  sub_1ACA51EA4(&qword_1E99F1408, &qword_1E99F1390);
  unint64_t v37 = v63;
  uint64_t v38 = v35;
  uint64_t v39 = v58;
  uint64_t v40 = v62;
  sub_1ACE75BA8();
  sub_1ACA51EA4(&qword_1E99F1410, &qword_1E99F1380);
  uint64_t v41 = v65;
  uint64_t v42 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v37, v41);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v38, v40);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v28, v39);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v33, v27);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v67, v68);
  return v42;
}

uint64_t sub_1ACA92B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v24[1] = a5;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1428);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v17 = *(_OWORD *)(v5 + 16);
  v27[0] = *(_OWORD *)v5;
  v27[1] = v17;
  uint64_t v28 = *(void *)(v5 + 32);
  uint64_t v18 = swift_allocObject();
  long long v19 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)v5;
  *(_OWORD *)(v18 + 32) = v19;
  *(void *)(v18 + 48) = *(void *)(v5 + 32);
  *(void *)(v18 + 56) = a1;
  *(void *)(v18 + 64) = a2;
  *(void *)(v18 + 72) = a3;
  *(void *)(v18 + 80) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1430);
  swift_allocObject();
  sub_1ACA93A28((uint64_t)v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1ACE75A18();
  if (qword_1E99EFEA8 != -1) {
    swift_once();
  }
  uint64_t v20 = (void *)qword_1E99F2630;
  id v25 = (id)qword_1E99F2630;
  uint64_t v21 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v12, 1, 1, v21);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1E99F1438, &qword_1E99F1430);
  sub_1ACA93A6C();
  id v22 = v20;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v12, &qword_1EB7669C8);

  swift_release();
  sub_1ACA51EA4(&qword_1E99F1440, &qword_1E99F1428);
  sub_1ACE75C28();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

void sub_1ACA92EC4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1ACA92EE4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  id v6 = objc_allocWithZone(MEMORY[0x1E4F3BEA8]);
  sub_1ACA3985C(v4, v5);
  id v7 = sub_1ACC4ED00();
  uint64_t result = sub_1ACA50850(v4, v5);
  if (!v2) {
    *a2 = v7;
  }
  return result;
}

uint64_t sub_1ACA92F68@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84830;
  *(void *)(inited + 32) = v4;
  unint64_t v9 = inited;
  sub_1ACE76598();
  id v6 = v4;
  id v7 = sub_1ACA7CC20(v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2) {
    *a2 = v7;
  }
  return result;
}

uint64_t sub_1ACA93008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(void *)(a2 + 16) = v2;
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v3;
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = 0;
  *(unsigned char *)(a2 + 64) = 1;
  sub_1ACA3985C(v4, v3);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

id sub_1ACA93074@<X0>(id a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 49) = 0u;
  return a1;
}

uint64_t sub_1ACA93090()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA930C8(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1ACA930F4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)a3 = a1;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a2;
  *(void *)(a3 + 24) = v3;
  *(void *)(a3 + 32) = v4;
  *(void *)(a3 + 40) = v5;
  *(void *)(a3 + 48) = v6;
  *(void *)(a3 + 56) = v7;
  *(unsigned char *)(a3 + 64) = 2;
  id v8 = a1;
  sub_1ACA3985C(v4, v5);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACA93174(void *a1)
{
  return (*(uint64_t (**)(void, void *))(v1 + 16))(*a1, a1 + 1);
}

uint64_t BundleAssetTranscriptProvider.prefetch(request:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1418);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE759D8();
  sub_1ACA51EA4(&qword_1E99F1420, &qword_1E99F1418);
  uint64_t v4 = sub_1ACE75D58();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t BundleAssetTranscriptProvider.invalidate(for:)()
{
  return 1;
}

uint64_t sub_1ACA932E0(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a7;
  uint64_t v33 = a2;
  uint64_t v34 = a1;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1448);
  MEMORY[0x1F4188790](v32);
  uint64_t v11 = (uint64_t *)((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1ACE74F28();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  long long v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v29 - v20;
  id v22 = *(void **)(a3 + 32);
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v23 = (void *)sub_1ACE76178();
  uint64_t v24 = (void *)sub_1ACE76178();
  id v25 = objc_msgSend(v22, sel_URLForResource_withExtension_, v23, v24);

  if (v25)
  {
    sub_1ACE74E98();

    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v26(v14, v19, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      v26(v21, v14, v15);
      (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v11, v21, v15);
      swift_storeEnumTagMultiPayload();
      v34(v11);
      sub_1ACA50E78((uint64_t)v11, &qword_1E99F1448);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  sub_1ACA50E78((uint64_t)v14, &qword_1EB7731B0);
  uint64_t v28 = v30;
  *uint64_t v11 = v29;
  v11[1] = v28;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v34(v11);
  return sub_1ACA50E78((uint64_t)v11, &qword_1E99F1448);
}

uint64_t sub_1ACA93634@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1ACE74F38();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_1ACA93664()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1418);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE759D8();
  sub_1ACA51EA4(&qword_1E99F1420, &qword_1E99F1418);
  uint64_t v4 = sub_1ACE75D58();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void destroy for BundleAssetTranscriptProvider(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for BundleAssetTranscriptProvider(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  unint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for BundleAssetTranscriptProvider(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[4];
  unint64_t v5 = (void *)a1[4];
  a1[4] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for BundleAssetTranscriptProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  unint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for BundleAssetTranscriptProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BundleAssetTranscriptProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BundleAssetTranscriptProvider()
{
  return &type metadata for BundleAssetTranscriptProvider;
}

ValueMetadata *type metadata accessor for BundleAssetTranscriptProvider.LocalAssetError()
{
  return &type metadata for BundleAssetTranscriptProvider.LocalAssetError;
}

uint64_t sub_1ACA939C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACA93A18(void (*a1)(void *), uint64_t a2)
{
  return sub_1ACA932E0(a1, a2, (uint64_t)(v2 + 2), v2[7], v2[8], v2[9], v2[10]);
}

uint64_t sub_1ACA93A28(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return a1;
}

unint64_t sub_1ACA93A6C()
{
  unint64_t result = qword_1EB7669D0;
  if (!qword_1EB7669D0)
  {
    sub_1ACA50D4C(255, (unint64_t *)&qword_1EB7734B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7669D0);
  }
  return result;
}

uint64_t Publisher.makeOptional.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1ACE76FD8();
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v6 = (char *)&WitnessTable - v5;
  uint64_t v7 = sub_1ACE75678();
  uint64_t v19 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&WitnessTable - v8;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v10 = sub_1ACE755F8();
  uint64_t v18 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&WitnessTable - v11;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a1;
  v14[3] = a2;
  _OWORD v14[4] = sub_1ACA93F24;
  v14[5] = v13;
  sub_1ACE75B58();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v6, 1, 1);
  sub_1ACE75B08();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v7);
  swift_getWitnessTable();
  uint64_t v15 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v10);
  return v15;
}

uint64_t sub_1ACA93E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a2, a1, AssociatedTypeWitness);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  return v5(a2, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_1ACA93F14()
{
  return swift_deallocObject();
}

uint64_t sub_1ACA93F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACA93E3C(a1, a2);
}

uint64_t sub_1ACA93F2C(uint64_t a1, uint64_t (*a2)(char *))
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  id v6 = (char *)&v9 - v5;
  (*(void (**)(char *, uint64_t))(v7 + 16))((char *)&v9 - v5, a1);
  return a2(v6);
}

uint64_t sub_1ACA94028()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACA94060(uint64_t a1)
{
  return sub_1ACA93F2C(a1, *(uint64_t (**)(char *))(v1 + 32));
}

uint64_t CategoryObserverProvider.favoritedCategoriesPublisher.getter()
{
  return swift_retain();
}

uint64_t CategoryObserverProvider.categoriesForCategoriesInLibraryPublisher.getter()
{
  return swift_retain();
}

uint64_t CategoryObserverProvider.categoriesCountForCategoriesInLibraryPublisher.getter()
{
  return swift_retain();
}

uint64_t CategoryObserverProvider.__allocating_init(ctx:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  CategoryObserverProvider.init(ctx:)(a1);
  return v2;
}

void *CategoryObserverProvider.init(ctx:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770320);
  uint64_t v62 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v58 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770310);
  uint64_t v61 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v59 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770338);
  uint64_t v56 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[2] = a1;
  id v9 = a1;
  uint64_t v10 = (void *)sub_1ACD635A8();
  v55[2] = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  id v11 = v9;
  uint64_t v12 = sub_1ACE76CF8();
  id v13 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v14 = (void *)sub_1ACE76178();
  id v15 = objc_msgSend(v13, sel_initWithEntityName_, v14);

  objc_msgSend(v15, sel_setPredicate_, v10);
  v55[1] = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  uint64_t v16 = (void *)sub_1ACE76558();
  objc_msgSend(v15, sel_setSortDescriptors_, v16);

  objc_msgSend(v15, sel_setFetchBatchSize_, 100);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76FEA0);
  swift_allocObject();
  *((void *)&v52 + 1) = sub_1ACA8E710;
  *(void *)&long long v52 = 0;
  uint64_t v17 = sub_1ACA976A4(0xD000000000000034, 0x80000001ACEC6630, (uint64_t)v15, (uint64_t)v11, v12, (uint64_t)sub_1ACA94A88, 0, (uint64_t)sub_1ACA94B5C, v52, 0);
  uint64_t v18 = sub_1ACA94B60(v17);
  swift_release();
  v2[3] = v18;
  uint64_t v19 = (void *)sub_1ACD635BC();
  uint64_t v20 = (void *)_s18PodcastsFoundation10MTCategoryC46predicateForPrimaryCategoriesFromFollowedShowsSo11NSPredicateCyFZ_0();
  id v21 = objc_msgSend(v19, sel_AND_, v20);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1ACE84830;
  id v23 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v24 = (void *)sub_1ACE76178();
  id v25 = objc_msgSend(v23, sel_initWithKey_ascending_, v24, 1);

  *(void *)(v22 + 32) = v25;
  uint64_t v64 = v22;
  sub_1ACE76598();
  id v26 = v11;
  uint64_t v27 = sub_1ACE76CF8();
  id v28 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v29 = (void *)sub_1ACE76178();
  id v30 = objc_msgSend(v28, sel_initWithEntityName_, v29);

  objc_msgSend(v30, sel_setPredicate_, v21);
  uint64_t v31 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_setSortDescriptors_, v31);

  objc_msgSend(v30, sel_setFetchBatchSize_, 100);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76FE98);
  swift_allocObject();
  *((void *)&v53 + 1) = sub_1ACA8E710;
  *(void *)&long long v53 = 0;
  uint64_t v64 = sub_1ACA976A4(0xD000000000000041, 0x80000001ACEC6670, (uint64_t)v30, (uint64_t)v26, v27, (uint64_t)sub_1ACA973D4, 0, (uint64_t)sub_1ACA94B5C, v53, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F8E8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705C0);
  sub_1ACA51EA4(&qword_1EB76F8E0, &qword_1EB76F8E8);
  sub_1ACE75B58();
  swift_release();
  uint64_t v32 = sub_1ACA94F1C();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v8, v57);
  v2[4] = v32;
  id v33 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
  uint64_t v34 = (void *)sub_1ACD635BC();
  uint64_t v35 = (void *)_s18PodcastsFoundation10MTCategoryC46predicateForPrimaryCategoriesFromFollowedShowsSo11NSPredicateCyFZ_0();
  id v36 = objc_msgSend(v34, sel_AND_, v35);

  id v37 = v26;
  uint64_t v38 = sub_1ACE76CF8();
  id v39 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v40 = (void *)sub_1ACE76178();
  id v41 = objc_msgSend(v39, sel_initWithEntityName_, v40);

  objc_msgSend(v41, sel_setPredicate_, v36);
  uint64_t v42 = (void *)sub_1ACE76558();
  objc_msgSend(v41, sel_setSortDescriptors_, v42);

  objc_msgSend(v41, sel_setFetchBatchSize_, 1);
  objc_msgSend(v41, sel_setIncludesSubentities_, 0);
  objc_msgSend(v41, sel_setIncludesPropertyValues_, 0);
  objc_msgSend(v41, sel_setReturnsObjectsAsFaults_, 1);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D338);
  swift_allocObject();
  *((void *)&v54 + 1) = sub_1ACA8E710;
  *(void *)&long long v54 = 0;
  uint64_t v64 = sub_1ACA976A4(0xD00000000000001DLL, 0x80000001ACEC66C0, (uint64_t)v41, (uint64_t)v37, v38, (uint64_t)sub_1ACA56B68, 0, (uint64_t)sub_1ACA58428, v54, 0);
  *(void *)(swift_allocObject() + 16) = v33;
  sub_1ACA97860();
  id v43 = v33;
  int64_t v44 = v58;
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769180);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1ACE843F0;
  uint64_t v46 = (void *)sub_1ACE76178();
  id v47 = objc_msgSend(v43, sel_integerForKey_, v46);

  *(void *)(v45 + 32) = v47;
  sub_1ACA51EA4(&qword_1EB770318, &qword_1EB770320);
  int64_t v49 = v59;
  uint64_t v48 = v60;
  sub_1ACE75C88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v44, v48);
  uint64_t v50 = sub_1ACA952BC();

  (*(void (**)(char *, uint64_t))(v61 + 8))(v49, v63);
  v2[5] = v50;
  return v2;
}

uint64_t sub_1ACA94A88@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  type metadata accessor for MTCategory();
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    id v6 = a1;
    sub_1ACD38224(v5, a2);
    uint64_t v7 = type metadata accessor for CategoryModel();
    uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v12 = type metadata accessor for CategoryModel();
    uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }
  return v8(v10, v11, 1, v9);
}

uint64_t sub_1ACA94B60(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770348);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7702B0);
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F8F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7701A8);
  sub_1ACA51EA4(&qword_1EB76F8F0, &qword_1EB76F8F8);
  sub_1ACE75B58();
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770530);
  swift_allocObject();
  sub_1ACE75938();
  sub_1ACA51EA4(&qword_1EB770340, &qword_1EB770348);
  sub_1ACA51EA4(&qword_1EB770528, &qword_1EB770530);
  uint64_t v9 = sub_1ACE75CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770480);
  sub_1ACA51EA4(&qword_1EB770478, &qword_1EB770480);
  uint64_t v10 = sub_1ACE75948();
  swift_release();
  uint64_t v16 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7702E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7701A0);
  sub_1ACA51EA4(&qword_1EB7702D8, &qword_1EB7702E0);
  sub_1ACE75AE8();
  swift_release();
  sub_1ACA51EA4(&qword_1EB7702A8, &qword_1EB7702B0);
  uint64_t v11 = v15;
  uint64_t v12 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v11);
  return v12;
}

uint64_t sub_1ACA94F1C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7703C0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7702D0);
  uint64_t v4 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770338);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705C8);
  sub_1ACA51EA4(&qword_1EB770330, &qword_1EB770338);
  sub_1ACE75B58();
  uint64_t v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770540);
  swift_allocObject();
  sub_1ACE75938();
  sub_1ACA51EA4(&qword_1EB7703B8, &qword_1EB7703C0);
  sub_1ACA51EA4(&qword_1EB770538, &qword_1EB770540);
  uint64_t v7 = sub_1ACE75CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v13 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7704A0);
  sub_1ACA51EA4(&qword_1EB770498, &qword_1EB7704A0);
  uint64_t v8 = sub_1ACE75948();
  swift_release();
  uint64_t v13 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770300);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705C0);
  sub_1ACA51EA4(&qword_1EB7702F8, &qword_1EB770300);
  sub_1ACE75AE8();
  swift_release();
  sub_1ACA51EA4(&qword_1EB7702C8, &qword_1EB7702D0);
  uint64_t v9 = v12;
  uint64_t v10 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v9);
  return v10;
}

uint64_t sub_1ACA952BC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770368);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7702C0);
  uint64_t v4 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770310);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E0C8);
  sub_1ACA51EA4(&qword_1EB770308, &qword_1EB770310);
  sub_1ACE75B58();
  uint64_t v14 = 0;
  char v15 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE88);
  swift_allocObject();
  sub_1ACE75938();
  sub_1ACA51EA4(&qword_1EB770360, &qword_1EB770368);
  sub_1ACA51EA4(&qword_1EB76DE80, &qword_1EB76DE88);
  uint64_t v7 = sub_1ACE75CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v14 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770490);
  sub_1ACA51EA4(&qword_1EB770488, &qword_1EB770490);
  uint64_t v8 = sub_1ACE75948();
  swift_release();
  uint64_t v14 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7702F0);
  sub_1ACA51EA4(&qword_1EB7702E8, &qword_1EB7702F0);
  sub_1ACE75AE8();
  swift_release();
  sub_1ACA51EA4(&qword_1EB7702B8, &qword_1EB7702C0);
  uint64_t v9 = v13;
  uint64_t v10 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v9);
  return v10;
}

uint64_t sub_1ACA95664()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768CC8);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768C78);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768C58);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB7675D8);
  uint64_t v12 = MEMORY[0x1E4F1A820];
  sub_1ACA51EA4(&qword_1EB768C50, &qword_1EB768C58);
  sub_1ACE75B58();
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768DB8);
  swift_allocObject();
  sub_1ACE75938();
  sub_1ACA51EA4(&qword_1EB768CC0, &qword_1EB768CC8);
  sub_1ACA51EA4(&qword_1EB768DB0, &qword_1EB768DB8);
  uint64_t v8 = sub_1ACE75CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v13 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768D58);
  sub_1ACA51EA4(&qword_1EB768D50, &qword_1EB768D58);
  uint64_t v9 = sub_1ACE75948();
  swift_release();
  uint64_t v13 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768C88);
  sub_1ACA51EA4(&qword_1EB768C80, &qword_1EB768C88);
  sub_1ACE75AE8();
  swift_release();
  sub_1ACA51EA4(&qword_1EB768C70, &qword_1EB768C78);
  uint64_t v10 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v10;
}

uint64_t sub_1ACA959F8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768CD8);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768C68);
  uint64_t v4 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768CB8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E80);
  sub_1ACA51EA4(&qword_1EB768CB0, &qword_1EB768CB8);
  sub_1ACE75B58();
  LOBYTE(v13) = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768DD0);
  swift_allocObject();
  sub_1ACE75938();
  sub_1ACA51EA4(&qword_1EB768CD0, &qword_1EB768CD8);
  sub_1ACA51EA4(&qword_1EB768DC8, &qword_1EB768DD0);
  uint64_t v7 = sub_1ACE75CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v13 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768D68);
  sub_1ACA51EA4(&qword_1EB768D60, &qword_1EB768D68);
  uint64_t v8 = sub_1ACE75948();
  swift_release();
  uint64_t v13 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768C98);
  sub_1ACA51EA4(&qword_1EB768C90, &qword_1EB768C98);
  sub_1ACE75AE8();
  swift_release();
  sub_1ACA51EA4(&qword_1EB768C60, &qword_1EB768C68);
  uint64_t v9 = v12;
  uint64_t v10 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v9);
  return v10;
}

uint64_t sub_1ACA95D9C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D8E8);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769570);
  uint64_t v4 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76D6D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E0C8);
  sub_1ACA51EA4(&qword_1EB76D6C8, (uint64_t *)&unk_1EB76D6D0);
  sub_1ACE75B58();
  uint64_t v14 = 0;
  char v15 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE88);
  swift_allocObject();
  sub_1ACE75938();
  sub_1ACA51EA4(&qword_1EB76D8E0, &qword_1EB76D8E8);
  sub_1ACA51EA4(&qword_1EB76DE80, &qword_1EB76DE88);
  uint64_t v7 = sub_1ACE75CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v14 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DC20);
  sub_1ACA51EA4(&qword_1EB76DC18, &qword_1EB76DC20);
  uint64_t v8 = sub_1ACE75948();
  swift_release();
  uint64_t v14 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D6A0);
  sub_1ACA51EA4(&qword_1EB76D698, &qword_1EB76D6A0);
  sub_1ACE75AE8();
  swift_release();
  sub_1ACA51EA4(&qword_1EB76D660, &qword_1EB769570);
  uint64_t v9 = v13;
  uint64_t v10 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v9);
  return v10;
}

uint64_t sub_1ACA96144(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A698);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A620);
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A3F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A550);
  sub_1ACA51EA4(&qword_1EB76A3F0, &qword_1EB76A3F8);
  sub_1ACE75B58();
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A738);
  swift_allocObject();
  sub_1ACE75938();
  sub_1ACA51EA4(&qword_1EB76A690, &qword_1EB76A698);
  sub_1ACA51EA4(&qword_1EB76A730, &qword_1EB76A738);
  uint64_t v9 = sub_1ACE75CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A6E8);
  sub_1ACA51EA4(&qword_1EB76A6E0, &qword_1EB76A6E8);
  uint64_t v10 = sub_1ACE75948();
  swift_release();
  uint64_t v16 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A640);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A548);
  sub_1ACA51EA4(&qword_1EB76A638, &qword_1EB76A640);
  sub_1ACE75AE8();
  swift_release();
  sub_1ACA51EA4(&qword_1EB76A618, &qword_1EB76A620);
  uint64_t v11 = v15;
  uint64_t v12 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v11);
  return v12;
}

uint64_t sub_1ACA96500(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771608);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771598);
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771478);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771520);
  sub_1ACA51EA4(&qword_1EB771470, &qword_1EB771478);
  sub_1ACE75B58();
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7716F8);
  swift_allocObject();
  sub_1ACE75938();
  sub_1ACA51EA4(&qword_1EB771600, &qword_1EB771608);
  sub_1ACA51EA4(&qword_1EB7716F0, &qword_1EB7716F8);
  uint64_t v9 = sub_1ACE75CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB771688);
  sub_1ACA51EA4(&qword_1EB771680, (uint64_t *)&unk_1EB771688);
  uint64_t v10 = sub_1ACE75948();
  swift_release();
  uint64_t v16 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7715B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771518);
  sub_1ACA51EA4(&qword_1EB7715B0, &qword_1EB7715B8);
  sub_1ACE75AE8();
  swift_release();
  sub_1ACA51EA4(&qword_1EB771590, &qword_1EB771598);
  uint64_t v11 = v15;
  uint64_t v12 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v11);
  return v12;
}

uint64_t sub_1ACA968BC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7715F8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771588);
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771468);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771510);
  sub_1ACA51EA4(&qword_1EB771460, &qword_1EB771468);
  sub_1ACE75B58();
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7716E8);
  swift_allocObject();
  sub_1ACE75938();
  sub_1ACA51EA4(&qword_1EB7715F0, &qword_1EB7715F8);
  sub_1ACA51EA4(&qword_1EB7716E0, &qword_1EB7716E8);
  uint64_t v9 = sub_1ACE75CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771678);
  sub_1ACA51EA4(&qword_1EB771670, &qword_1EB771678);
  uint64_t v10 = sub_1ACE75948();
  swift_release();
  uint64_t v16 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7715A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771508);
  sub_1ACA51EA4(&qword_1EB7715A0, &qword_1EB7715A8);
  sub_1ACE75AE8();
  swift_release();
  sub_1ACA51EA4(&qword_1EB771580, &qword_1EB771588);
  uint64_t v11 = v15;
  uint64_t v12 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v11);
  return v12;
}

uint64_t sub_1ACA96C78()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1450);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1458);
  uint64_t v4 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1468);
  sub_1ACA51EA4(&qword_1E99F1470, &qword_1E99F1460);
  sub_1ACE75B58();
  long long v14 = xmmword_1ACE87320;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1478);
  swift_allocObject();
  sub_1ACE75938();
  sub_1ACA51EA4(&qword_1E99F1480, &qword_1E99F1450);
  sub_1ACA51EA4(&qword_1E99F1488, &qword_1E99F1478);
  uint64_t v7 = sub_1ACE75CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  *(void *)&long long v14 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1490);
  sub_1ACA51EA4(&qword_1E99F1498, &qword_1E99F1490);
  uint64_t v8 = sub_1ACE75948();
  swift_release();
  *(void *)&long long v14 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F14A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
  sub_1ACA51EA4(&qword_1E99F14A8, &qword_1E99F14A0);
  sub_1ACE75AE8();
  swift_release();
  sub_1ACA51EA4(&qword_1E99F14B0, &qword_1E99F1458);
  uint64_t v9 = v13;
  uint64_t v10 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v9);
  return v10;
}

uint64_t sub_1ACA9702C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A6B8);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A630);
  uint64_t v4 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A688);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E0B0);
  sub_1ACA51EA4(&qword_1EB76A680, &qword_1EB76A688);
  sub_1ACE75B58();
  uint64_t v14 = 0;
  char v15 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A748);
  swift_allocObject();
  sub_1ACE75938();
  sub_1ACA51EA4(&qword_1EB76A6B0, &qword_1EB76A6B8);
  sub_1ACA51EA4(&qword_1EB76A740, &qword_1EB76A748);
  uint64_t v7 = sub_1ACE75CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v14 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A6F8);
  sub_1ACA51EA4(&qword_1EB76A6F0, &qword_1EB76A6F8);
  uint64_t v8 = sub_1ACE75948();
  swift_release();
  uint64_t v14 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A650);
  sub_1ACA51EA4(&qword_1EB76A648, &qword_1EB76A650);
  sub_1ACE75AE8();
  swift_release();
  sub_1ACA51EA4(&qword_1EB76A628, &qword_1EB76A630);
  uint64_t v9 = v13;
  uint64_t v10 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v9);
  return v10;
}

uint64_t sub_1ACA973D4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1ACD38224(a1, a2);
  uint64_t v3 = type metadata accessor for CategoryModel();
  uint64_t v4 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  return v4(a2, 0, 1, v3);
}

uint64_t sub_1ACA9744C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for CategoryModel();
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15 - v8;
  uint64_t v10 = *a1;
  uint64_t v11 = *a2;
  sub_1ACA979A0((uint64_t)a1, (uint64_t)&v15 - v8);
  sub_1ACA979A0((uint64_t)a2, (uint64_t)v7);
  if (v10 == v11)
  {
    if (*((void *)v9 + 1) == *((void *)v7 + 1) && *((void *)v9 + 2) == *((void *)v7 + 2)) {
      char v13 = 0;
    }
    else {
      char v13 = sub_1ACE77848() ^ 1;
    }
  }
  else
  {
    char v13 = 1;
  }
  sub_1ACA97A04((uint64_t)v9);
  sub_1ACA97A04((uint64_t)v7);
  return v13 & 1;
}

uint64_t sub_1ACA97554@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

void sub_1ACA97560(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)sub_1ACE76A58();
  id v4 = (id)sub_1ACE76178();
  objc_msgSend(a2, sel_setValue_forKey_, v3, v4);
}

uint64_t CategoryObserverProvider.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t CategoryObserverProvider.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACA9766C()
{
  return swift_retain();
}

uint64_t sub_1ACA97678()
{
  return swift_retain();
}

uint64_t sub_1ACA97684()
{
  return swift_retain();
}

uint64_t sub_1ACA97690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10)
{
  return sub_1ACA976A4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1ACA976A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10)
{
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0;
  *(void *)(v10 + 112) = v19;
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = a3;
  *(void *)(v10 + 40) = a4;
  *(void *)(v10 + 48) = a5;
  *(void *)(v10 + 56) = a6;
  *(void *)(v10 + 64) = a7;
  *(void *)(v10 + 72) = a8;
  *(_OWORD *)(v10 + 80) = a9;
  *(void *)(v10 + 96) = a10;
  return v10;
}

uint64_t sub_1ACA97768@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACA977B8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  return sub_1ACA97954(v3);
}

uint64_t sub_1ACA977D0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  *a2 = *(void *)a1;
  a2[1] = v2;
  a2[2] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACA977EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(void *)(a2 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACA97804@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACA97810@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return sub_1ACA97940(v3, v2);
}

uint64_t sub_1ACA97820()
{
  return swift_deallocObject();
}

void sub_1ACA97858(uint64_t a1)
{
  sub_1ACA97560(a1, *(void **)(v1 + 16));
}

unint64_t sub_1ACA97860()
{
  unint64_t result = qword_1EB76A440;
  if (!qword_1EB76A440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A440);
  }
  return result;
}

uint64_t dispatch thunk of CategoryObserverProviderProtocol.favoritedCategoriesPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CategoryObserverProviderProtocol.categoriesForCategoriesInLibraryPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CategoryObserverProviderProtocol.categoriesCountForCategoriesInLibraryPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for CategoryObserverProvider()
{
  return self;
}

uint64_t method lookup function for CategoryObserverProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CategoryObserverProvider);
}

uint64_t dispatch thunk of CategoryObserverProvider.__allocating_init(ctx:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1ACA97940(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1ACA97954(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1ACA979A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CategoryModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACA97A04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CategoryModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void static Persona.current.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[5] = &type metadata for Persona.CurrentUserExecutionStrategy;
  a1[6] = &off_1F0384AB8;
}

void Persona.init()(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[5] = &type metadata for Persona.CurrentUserExecutionStrategy;
  a1[6] = &off_1F0384AB8;
}

uint64_t Persona.identifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Persona.init(personaIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  a3[5] = &type metadata for Persona.AdoptPersonaExecutionStrategy;
  a3[6] = &off_1F0384AA8;
  a3[2] = a1;
  a3[3] = a2;
  return swift_bridgeObjectRetain();
}

uint64_t Persona.perform<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  void v5[4] = a3;
  uint64_t v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1ACA97AFC, 0, 0);
}

uint64_t sub_1ACA97AFC()
{
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8)
                                                                                     + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1ACA97C0C;
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[2];
  uint64_t v8 = v0[3];
  return v10(v7, v8, v5, v6, v2, v3);
}

uint64_t sub_1ACA97C0C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1ACA97D04(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1ACA51034;
  return v6(a1);
}

uint64_t sub_1ACA97DE0(uint64_t a1, int *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1ACA51034;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v6 = (void *)swift_task_alloc();
  uint64_t v5[2] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1ACA51034;
  return v8(a1);
}

uint64_t sub_1ACA97F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[20] = a4;
  v5[21] = a5;
  v5[18] = a2;
  v5[19] = a3;
  v5[17] = a1;
  return MEMORY[0x1F4188298](sub_1ACA97FA0, 0, 0);
}

uint64_t sub_1ACA97FA0()
{
  int64_t v82 = v0;
  uint64_t v81 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = self;
  uint64_t v2 = &selRef_refetch_;
  id v3 = objc_msgSend(v1, sel_currentPersona);
  v0[22] = v3;
  if (v3)
  {
    uint64_t v4 = v3;
    swift_bridgeObjectRetain();
    id v5 = objc_msgSend(v4, sel_userPersonaUniqueString);
    uint64_t v6 = v0[21];
    if (v5)
    {
      uint64_t v7 = v5;
      uint64_t v8 = v0[20];
      uint64_t v9 = sub_1ACE761B8();
      uint64_t v11 = v10;

      if (v9 == v8 && v11 == v6)
      {
        swift_bridgeObjectRelease_n();
LABEL_16:
        if (qword_1EB76D4A0 != -1) {
          swift_once();
        }
        uint64_t v32 = sub_1ACE754C8();
        __swift_project_value_buffer(v32, (uint64_t)qword_1EB76D488);
        swift_bridgeObjectRetain_n();
        id v33 = sub_1ACE75498();
        os_log_type_t v34 = sub_1ACE76BD8();
        BOOL v35 = os_log_type_enabled(v33, v34);
        unint64_t v36 = v0[21];
        if (v35)
        {
          uint64_t v37 = v0[20];
          uint64_t v38 = (uint8_t *)swift_slowAlloc();
          uint64_t v39 = swift_slowAlloc();
          uint64_t v79 = v39;
          *(_DWORD *)uint64_t v38 = 136315138;
          swift_bridgeObjectRetain();
          v0[16] = sub_1ACA3189C(v37, v36, &v79);
          sub_1ACE76FF8();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1AC9D5000, v33, v34, "Already running as persona %s, nothing to do.", v38, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v39, -1, -1);
          MEMORY[0x1AD11B340](v38, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        uint64_t v78 = (uint64_t (*)(uint64_t))(v0[18] + *(int *)v0[18]);
        uint64_t v56 = (void *)swift_task_alloc();
        v0[26] = v56;
        *uint64_t v56 = v0;
        uint64_t v57 = sub_1ACA98CE4;
LABEL_39:
        v56[1] = v57;
        uint64_t v74 = v0[17];
        return v78(v74);
      }
      char v13 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_16;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v16 = v0 + 12;
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1ACE754C8();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EB76D488);
    swift_bridgeObjectRetain_n();
    id v18 = v4;
    uint64_t v19 = sub_1ACE75498();
    os_log_type_t v20 = sub_1ACE76C08();
    BOOL v21 = os_log_type_enabled(v19, v20);
    unint64_t v22 = v0[21];
    if (v21)
    {
      uint64_t v76 = v1;
      id v23 = v18;
      uint64_t v24 = v0[20];
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v79 = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v27 = v24;
      id v18 = v23;
      uint64_t v1 = v76;
      v0[14] = sub_1ACA3189C(v27, v22, &v79);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v28 = sub_1ACA98FEC();
      v0[15] = sub_1ACA3189C(v28, v29, &v79);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AC9D5000, v19, v20, "Request to execute as user %s, currently running as %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      uint64_t v30 = v26;
      uint64_t v16 = v0 + 12;
      MEMORY[0x1AD11B340](v30, -1, -1);
      uint64_t v31 = v25;
      uint64_t v2 = &selRef_refetch_;
      MEMORY[0x1AD11B340](v31, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    v0[12] = 0;
    id v40 = objc_msgSend(v18, sel_copyCurrentPersonaContextWithError_, v16);
    v0[23] = v40;
    id v41 = (void *)v0[12];
    if (v40)
    {
      uint64_t v42 = v40;
      id v43 = v41;
      int64_t v44 = (void *)sub_1ACE76178();
      id v45 = objc_msgSend(v18, sel_generateAndRestorePersonaContextWithPersonaUniqueString_, v44);

      if (!v45)
      {
        uint64_t v59 = sub_1ACE75498();
        os_log_type_t v60 = sub_1ACE76C08();
        if (os_log_type_enabled(v59, v60))
        {
          uint64_t v61 = (uint8_t *)swift_slowAlloc();
          uint64_t v62 = swift_slowAlloc();
          uint64_t v79 = v62;
          *(_DWORD *)uint64_t v61 = 136315138;
          id v63 = [v1 v2[509]];
          if (v63)
          {
            uint64_t v64 = v63;
            uint64_t v65 = sub_1ACA98FEC();
            unint64_t v67 = v66;
          }
          else
          {
            unint64_t v67 = 0xE300000000000000;
            uint64_t v65 = 7104878;
          }
          v0[9] = sub_1ACA3189C(v65, v67, &v79);
          sub_1ACE76FF8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1AC9D5000, v59, v60, "Executing as %s", v61, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v62, -1, -1);
          MEMORY[0x1AD11B340](v61, -1, -1);
        }

        uint64_t v78 = (uint64_t (*)(uint64_t))(v0[18] + *(int *)v0[18]);
        uint64_t v56 = (void *)swift_task_alloc();
        v0[24] = v56;
        *uint64_t v56 = v0;
        uint64_t v57 = sub_1ACA98B04;
        goto LABEL_39;
      }
      uint64_t v77 = v18;
      id v46 = v45;
      swift_bridgeObjectRetain_n();
      id v47 = v46;
      uint64_t v48 = sub_1ACE75498();
      os_log_type_t v49 = sub_1ACE76BE8();
      BOOL v50 = os_log_type_enabled(v48, v49);
      unint64_t v51 = v0[21];
      if (v50)
      {
        uint64_t v52 = v0[20];
        uint64_t v53 = swift_slowAlloc();
        uint64_t v75 = swift_slowAlloc();
        uint64_t v79 = v75;
        *(_DWORD *)uint64_t v53 = 136315394;
        swift_bridgeObjectRetain();
        v0[10] = sub_1ACA3189C(v52, v51, &v79);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v53 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v54 = sub_1ACE77A98();
        v0[13] = sub_1ACA3189C(v54, v55, &v79);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1AC9D5000, v48, v49, "Failed adopting persona %s: %s", (uint8_t *)v53, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v75, -1, -1);
        MEMORY[0x1AD11B340](v53, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
      uint64_t v68 = sub_1ACE752E8();
      sub_1ACA99A48();
      swift_allocError();
      uint64_t v70 = v69;
      uint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1ACE77268();
      swift_bridgeObjectRelease();
      uint64_t v79 = 0xD000000000000018;
      unint64_t v80 = 0x80000001ACEC6800;
      swift_bridgeObjectRetain();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      sub_1ACE762C8();
      swift_getErrorValue();
      sub_1ACE77A98();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      unint64_t v71 = v80;
      *uint64_t v70 = v79;
      v70[1] = v71;
      (*(void (**)(void *, void, uint64_t))(*(void *)(v68 - 8) + 104))(v70, *MEMORY[0x1E4F4ACD0], v68);
      swift_willThrow();

      sub_1ACA99340(v77, v42);
    }
    else
    {
      id v58 = v41;
      sub_1ACE74D78();

      swift_willThrow();
    }
  }
  else
  {
    uint64_t v14 = sub_1ACE752E8();
    sub_1ACA99A48();
    swift_allocError();
    *uint64_t v15 = 0xD000000000000033;
    v15[1] = 0x80000001ACEC67C0;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v14 - 8) + 104))(v15, *MEMORY[0x1E4F4ACD0], v14);
    swift_willThrow();
  }
  uint64_t v72 = (uint64_t (*)(void))v0[1];
  return v72();
}

uint64_t sub_1ACA98B04()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1ACA98F44;
  }
  else {
    uint64_t v2 = sub_1ACA98C44;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACA98C44()
{
  uint64_t v1 = *(void **)(v0 + 176);
  sub_1ACA99340(v1, *(void **)(v0 + 184));

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1ACA98CE4()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1ACA98EB4;
  }
  else {
    uint64_t v2 = sub_1ACA98E24;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACA98E24()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1ACA98EB4()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1ACA98F44()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = (void *)v0[23];
  sub_1ACA99340(v1, v2);

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1ACA98FEC()
{
  uint64_t v1 = v0;
  sub_1ACE77268();
  id v2 = objc_msgSend(v0, sel_userPersonaUniqueString);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_1ACE761B8();
  }
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  id v4 = objc_msgSend(v1, sel_userPersonaNickName);
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1ACE761B8();
  }
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  objc_msgSend(v1, sel_userPersonaType);
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  objc_msgSend(v1, sel_uid);
  sub_1ACE777C8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  objc_msgSend(v1, sel_gid);
  sub_1ACE777C8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  return 0;
}

void sub_1ACA99340(void *a1, void *a2)
{
  if (qword_1EB76D4A0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1ACE754C8();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB76D488);
  id v17 = a2;
  id v4 = sub_1ACE75498();
  os_log_type_t v5 = sub_1ACE76C08();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v18 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    id v8 = objc_msgSend(v17, sel_description);
    uint64_t v9 = sub_1ACE761B8();
    unint64_t v11 = v10;

    sub_1ACA3189C(v9, v11, &v18);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    id v12 = objc_msgSend(self, sel_currentPersona);
    if (v12)
    {
      char v13 = v12;
      uint64_t v14 = sub_1ACA98FEC();
      unint64_t v16 = v15;
    }
    else
    {
      unint64_t v16 = 0xE300000000000000;
      uint64_t v14 = 7104878;
    }
    sub_1ACA3189C(v14, v16, &v18);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v4, v5, "Restored persona context %s, executing as %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v7, -1, -1);
    MEMORY[0x1AD11B340](v6, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1ACA995DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *v3;
  uint64_t v8 = v3[1];
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v10;
  *unint64_t v10 = v4;
  v10[1] = sub_1ACA50B84;
  v10[20] = v9;
  v10[21] = v8;
  v10[18] = a2;
  v10[19] = a3;
  v10[17] = a1;
  return MEMORY[0x1F4188298](sub_1ACA97FA0, 0, 0);
}

uint64_t _s18PodcastsFoundation7PersonaV10IdentifierO2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (!v3)
  {
    if (!v4)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    return 0;
  }
  if (!v4) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  return sub_1ACE77848();
}

uint64_t destroy for Persona(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0(a1 + 16);
}

uint64_t initializeWithCopy for Persona(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2 + 16;
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  v7(a1 + 16, v4, v6);
  return a1;
}

void *assignWithCopy for Persona(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  return a1;
}

uint64_t assignWithTake for Persona(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for Persona(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Persona(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Persona()
{
  return &type metadata for Persona;
}

uint64_t getEnumTagSinglePayload for Persona.Identifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Persona.Identifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_1ACA999E0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1ACA999F8(void *result, int a2)
{
  if (a2 < 0)
  {
    *uint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Persona.Identifier()
{
  return &type metadata for Persona.Identifier;
}

ValueMetadata *type metadata accessor for Persona.AdoptPersonaExecutionStrategy()
{
  return &type metadata for Persona.AdoptPersonaExecutionStrategy;
}

ValueMetadata *type metadata accessor for Persona.CurrentUserExecutionStrategy()
{
  return &type metadata for Persona.CurrentUserExecutionStrategy;
}

unint64_t sub_1ACA99A48()
{
  unint64_t result = qword_1E99F14E0;
  if (!qword_1E99F14E0)
  {
    sub_1ACE752E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F14E0);
  }
  return result;
}

uint64_t sub_1ACA99AA8(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v6; ++i)
    {
      uint64_t v11 = *(void *)(a3 + 8 * i + 32);
      swift_bridgeObjectRetain();
      a1(&v10, &v11);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v9 = swift_bridgeObjectRelease();
      if (v10)
      {
        MEMORY[0x1AD118700](v9);
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1ACE765C8();
        }
        sub_1ACE76628();
        sub_1ACE76598();
      }
    }
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

void *sub_1ACA99BEC(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v13 = *(void *)(a3 + 16);
  if (!v13) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v17 = *(void *)(a3 + 8 * v5 + 32);
    a1(&v15, &v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    uint64_t v8 = v16;
    if (v16)
    {
      uint64_t v9 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_1ACA41EA0(0, v6[2] + 1, 1, v6);
      }
      unint64_t v11 = v6[2];
      unint64_t v10 = v6[3];
      if (v11 >= v10 >> 1) {
        uint64_t v6 = sub_1ACA41EA0((void *)(v10 > 1), v11 + 1, 1, v6);
      }
      _OWORD v6[2] = v11 + 1;
      uint64_t v7 = &v6[2 * v11];
      _OWORD v7[4] = v9;
      v7[5] = v8;
    }
    ++v5;
  }
  while (v13 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

Swift::Void __swiftcall RecommendationModulesCache.writeToCache(with:)(Swift::OpaquePointer with)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1ACE74DB8();
  uint64_t v80 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  uint64_t v96 = (char *)v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1ACE74F28();
  uint64_t v8 = *(void *)(v95 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v95);
  uint64_t v78 = (char *)v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v94 = (char *)v72 - v11;
  uint64_t v99 = sub_1ACE754C8();
  uint64_t v12 = *(void *)(v99 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v99);
  uint64_t v15 = (char *)v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)v72 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v21 = (uint64_t)v72 - v20;
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  unint64_t v93 = (char *)v72 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)v72 - v24;
  if (*((void *)with._rawValue + 2))
  {
    uint64_t v79 = v8;
    uint64_t v75 = v6;
    sub_1ACA9B448();
    uint64_t v26 = _s18PodcastsFoundation26MediaRequestResponseParserC11extractDataySaySDys11AnyHashableVypGGSgAGFZ_0((uint64_t)with._rawValue);
    if (v26) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = MEMORY[0x1E4FBC860];
    }
    MEMORY[0x1F4188790](v26);
    v72[-2] = v2;
    unint64_t v28 = sub_1ACA99AA8((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1ACA9CF48, (uint64_t)&v72[-4], v27);
    swift_bridgeObjectRelease();
    sub_1ACE74928();
    swift_allocObject();
    uint64_t v98 = sub_1ACE74918();
    if (v28 >> 62) {
      goto LABEL_26;
    }
    uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (1)
    {
      unint64_t v92 = v2;
      uint64_t v73 = v21;
      uint64_t v74 = v4;
      uint64_t v76 = v15;
      uint64_t v77 = v12;
      if (!v29) {
        break;
      }
      v72[2] = v18;
      unint64_t v91 = v28 & 0xC000000000000001;
      unsigned int v88 = *MEMORY[0x1E4F276C0];
      uint64_t v87 = (void (**)(char *, void, uint64_t))(v80 + 104);
      uint64_t v86 = (void (**)(char *, uint64_t))(v80 + 8);
      uint64_t v85 = (void (**)(char *, uint64_t))(v79 + 8);
      uint64_t v90 = (void (**)(char *, uint64_t))(v12 + 8);
      uint64_t v21 = 4;
      v72[1] = "Division by zero";
      unint64_t v83 = 0x80000001ACEC5A50;
      *(void *)&long long v30 = 136315138;
      long long v82 = v30;
      uint64_t v81 = MEMORY[0x1E4FBC840] + 8;
      unint64_t v89 = v28;
      uint64_t v84 = v29;
      while (1)
      {
        BOOL v35 = v91 ? (char *)MEMORY[0x1AD119490](v21 - 4, v28) : (char *)*(id *)(v28 + 8 * v21);
        uint64_t v4 = (uint64_t)v35;
        uint64_t v15 = (char *)(v21 - 3);
        if (__OFADD__(v21 - 4, 1)) {
          break;
        }
        uint64_t v102 = v35;
        type metadata accessor for RecommendationModule();
        sub_1ACA9D764(&qword_1E99F1500, (void (*)(uint64_t))type metadata accessor for RecommendationModule);
        uint64_t v36 = sub_1ACE74908();
        uint64_t v18 = v37;
        uint64_t v100 = v21;
        uint64_t v101 = v21 - 3;
        uint64_t v38 = (uint64_t *)&v92[*(int *)(type metadata accessor for RecommendationModulesCache() + 24)];
        uint64_t v40 = *v38;
        uint64_t v39 = v38[1];
        id v41 = (uint64_t *)(v4 + OBJC_IVAR___MTRecommendationModule_id);
        swift_beginAccess();
        uint64_t v42 = (void *)v4;
        uint64_t v102 = (char *)v40;
        uint64_t v103 = v39;
        swift_bridgeObjectRetain();
        sub_1ACE762C8();
        id v43 = v96;
        uint64_t v44 = v97;
        (*v87)(v96, v88, v97);
        sub_1ACA4F4AC();
        id v45 = v94;
        sub_1ACE74F08();
        (*v86)(v43, v44);
        swift_bridgeObjectRelease();
        sub_1ACE74F98();
        (*v85)(v45, v95);
        sub_1ACA50850(v36, (unint64_t)v18);
        id v46 = v93;
        sub_1ACE754A8();
        unint64_t v2 = v42;
        id v47 = sub_1ACE75498();
        os_log_type_t v48 = sub_1ACE76C08();
        uint64_t v12 = v48;
        if (os_log_type_enabled(v47, v48))
        {
          uint64_t v49 = swift_slowAlloc();
          uint64_t v18 = (char *)swift_slowAlloc();
          uint64_t v102 = v18;
          *(_DWORD *)uint64_t v49 = v82;
          uint64_t v51 = *v41;
          unint64_t v50 = v41[1];
          swift_bridgeObjectRetain();
          *(void *)(v49 + 4) = sub_1ACA3189C(v51, v50, (uint64_t *)&v102);

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1AC9D5000, v47, (os_log_type_t)v12, "Cached module content for id %s", (uint8_t *)v49, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v18, -1, -1);
          MEMORY[0x1AD11B340](v49, -1, -1);
        }
        else
        {
        }
        (*v90)(v46, v99);
        uint64_t v31 = v101;
        uint64_t v32 = v100;
        id v33 = &v2[OBJC_IVAR___MTRecommendationModule_shows];
        swift_beginAccess();
        *(void *)id v33 = 0;
        swift_bridgeObjectRelease();
        os_log_type_t v34 = &v2[OBJC_IVAR___MTRecommendationModule_episodes];
        swift_beginAccess();
        *(void *)os_log_type_t v34 = 0;

        swift_bridgeObjectRelease();
        uint64_t v21 = v32 + 1;
        unint64_t v28 = v89;
        if (v31 == v84) {
          goto LABEL_20;
        }
      }
      __break(1u);
LABEL_26:
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1ACE77508();
    }
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v102 = (char *)v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1508);
    sub_1ACA9D018(&qword_1E99F1510, &qword_1E99F1500);
    uint64_t v55 = sub_1ACE74908();
    unint64_t v57 = v56;
    swift_bridgeObjectRelease();
    id v58 = (uint64_t *)&v92[*(int *)(type metadata accessor for RecommendationModulesCache() + 20)];
    uint64_t v59 = v58[1];
    uint64_t v102 = (char *)*v58;
    uint64_t v103 = v59;
    uint64_t v60 = v80;
    uint64_t v61 = v96;
    uint64_t v62 = v97;
    (*(void (**)(char *, void, uint64_t))(v80 + 104))(v96, *MEMORY[0x1E4F276C0], v97);
    sub_1ACA4F4AC();
    swift_bridgeObjectRetain();
    id v63 = v78;
    sub_1ACE74F08();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
    swift_bridgeObjectRelease();
    sub_1ACE74F98();
    uint64_t v64 = v77;
    (*(void (**)(char *, uint64_t))(v79 + 8))(v63, v95);
    sub_1ACA50850(v55, v57);
    uint64_t v65 = v73;
    sub_1ACE754A8();
    unint64_t v66 = sub_1ACE75498();
    os_log_type_t v67 = sub_1ACE76C08();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v68 = 0;
      _os_log_impl(&dword_1AC9D5000, v66, v67, "Write to Listen Now cache succeeded", v68, 2u);
      MEMORY[0x1AD11B340](v68, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v65, v99);
    if (qword_1E99EFE60 != -1) {
      swift_once();
    }
    uint64_t v69 = __swift_project_value_buffer(v74, (uint64_t)qword_1E99F14E8);
    uint64_t v70 = (uint64_t)v75;
    sub_1ACE75098();
    uint64_t v71 = sub_1ACE750A8();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v70, 0, 1, v71);
    swift_beginAccess();
    sub_1ACA9CFB0(v70, v69);
    swift_endAccess();
    swift_release();
  }
  else
  {
    sub_1ACE754A8();
    uint64_t v52 = sub_1ACE75498();
    os_log_type_t v53 = sub_1ACE76C08();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl(&dword_1AC9D5000, v52, v53, "Write to Listen Now cache failed because the json is empty", v54, 2u);
      MEMORY[0x1AD11B340](v54, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v25, v99);
  }
}

uint64_t RecommendationModulesCache.modulesMetadata.getter()
{
  uint64_t v1 = sub_1ACE754C8();
  void v17[2] = *(void *)(v1 - 8);
  void v17[3] = v1;
  MEMORY[0x1F4188790](v1);
  v17[1] = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1ACE74DB8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE74F28();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE748C8();
  swift_allocObject();
  sub_1ACE748B8();
  uint64_t v11 = (void *)(v0 + *(int *)(type metadata accessor for RecommendationModulesCache() + 20));
  uint64_t v12 = v11[1];
  v17[9] = *v11;
  v17[10] = v12;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F276C0], v3);
  sub_1ACA4F4AC();
  swift_bridgeObjectRetain();
  sub_1ACE74F08();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1ACE74F38();
  unint64_t v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1508);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1ACA9D018(&qword_1E99F1518, &qword_1E99F1520);
  sub_1ACE748A8();
  sub_1ACA50850(v13, v15);
  swift_release();
  return v17[11];
}

uint64_t sub_1ACA9B320()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  __swift_allocate_value_buffer(v0, qword_1E99F14E8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E99F14E8);
  uint64_t v2 = sub_1ACE750A8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(v1, 1, 1, v2);
}

uint64_t static RecommendationModulesCache.dateLastCached.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E99EFE60 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E99F14E8);
  swift_beginAccess();
  return sub_1ACA72A5C(v3, a1);
}

void sub_1ACA9B448()
{
  v26[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1ACE754C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_defaultManager);
  sub_1ACE74EC8();
  uint64_t v6 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  unsigned __int8 v7 = objc_msgSend(v5, sel_fileExistsAtPath_, v6);

  if ((v7 & 1) == 0)
  {
    id v8 = objc_msgSend(v4, sel_defaultManager);
    uint64_t v9 = (void *)sub_1ACE74E18();
    v26[0] = 0;
    unsigned int v10 = objc_msgSend(v8, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v9, 1, 0, v26);

    id v11 = v26[0];
    if (v10)
    {
      id v12 = v11;
    }
    else
    {
      id v24 = v26[0];
      id v13 = v26[0];
      unint64_t v14 = (void *)sub_1ACE74D78();

      swift_willThrow();
      sub_1ACE754A8();
      id v15 = v14;
      id v16 = v14;
      uint64_t v17 = sub_1ACE75498();
      os_log_type_t v18 = sub_1ACE76BE8();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v20 = (void *)swift_slowAlloc();
        v26[0] = v20;
        *(_DWORD *)uint64_t v19 = 136315138;
        id v24 = v19 + 4;
        swift_getErrorValue();
        uint64_t v21 = sub_1ACE77A98();
        uint64_t v25 = sub_1ACA3189C(v21, v22, (uint64_t *)v26);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1AC9D5000, v17, v18, "Failed to create Listen Now Cache directory with error: %s", v19, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v20, -1, -1);
        MEMORY[0x1AD11B340](v19, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
  }
}

uint64_t RecommendationModulesCache.moduleContent(moduleID:)(uint64_t a1)
{
  uint64_t v3 = sub_1ACE754C8();
  v19[3] = *(void *)(v3 - 8);
  v19[4] = v3;
  MEMORY[0x1F4188790](v3);
  void v19[2] = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE74DB8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE74F28();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE748C8();
  swift_allocObject();
  v19[5] = sub_1ACE748B8();
  id v13 = (void *)(v1 + *(int *)(type metadata accessor for RecommendationModulesCache() + 24));
  uint64_t v14 = v13[1];
  v19[11] = *v13;
  v19[12] = v14;
  swift_bridgeObjectRetain();
  v19[1] = a1;
  sub_1ACE762C8();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F276C0], v5);
  sub_1ACA4F4AC();
  sub_1ACE74F08();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_1ACE74F38();
  unint64_t v17 = v16;
  type metadata accessor for RecommendationModule();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1ACA9D764(&qword_1E99F1520, (void (*)(uint64_t))type metadata accessor for RecommendationModule);
  sub_1ACE748A8();
  sub_1ACA50850(v15, v17);
  swift_release();
  return v19[13];
}

void sub_1ACA9BD5C(void *a1@<X8>)
{
  v55[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1ACE754C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = self;
  id v8 = (void *)sub_1ACE75FC8();
  v55[0] = 0;
  id v9 = objc_msgSend(v7, sel_dataWithJSONObject_options_error_, v8, 0, v55);

  id v10 = v55[0];
  if (!v9)
  {
    uint64_t v25 = v10;
    uint64_t v26 = (void *)sub_1ACE74D78();

    swift_willThrow();
LABEL_12:
    uint64_t v27 = 0;
LABEL_13:
    *a1 = v27;
    return;
  }
  uint64_t v51 = v4;
  uint64_t v52 = v3;
  uint64_t v11 = sub_1ACE74F88();
  unint64_t v13 = v12;

  sub_1ACE748C8();
  swift_allocObject();
  sub_1ACE748B8();
  type metadata accessor for RecommendationModule();
  sub_1ACA9D764(&qword_1E99F1520, (void (*)(uint64_t))type metadata accessor for RecommendationModule);
  sub_1ACE748A8();
  if (v1)
  {
    swift_release();
    sub_1ACE754A8();
    id v14 = v1;
    id v15 = v1;
    unint64_t v16 = sub_1ACE75498();
    os_log_type_t v17 = sub_1ACE76BE8();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v50 = v11;
      uint64_t v19 = (uint8_t *)v18;
      uint64_t v20 = (void *)swift_slowAlloc();
      uint64_t v49 = a1;
      uint64_t v21 = v20;
      v55[0] = v20;
      *(_DWORD *)uint64_t v19 = 136315138;
      unint64_t v48 = v13;
      swift_getErrorValue();
      uint64_t v22 = sub_1ACE77A98();
      *(void *)&v54[0] = sub_1ACA3189C(v22, v23, (uint64_t *)v55);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AC9D5000, v16, v17, "Could not decode RecommendationModules from JSON with error: %s", v19, 0xCu);
      swift_arrayDestroy();
      id v24 = v21;
      a1 = v49;
      MEMORY[0x1AD11B340](v24, -1, -1);
      MEMORY[0x1AD11B340](v19, -1, -1);
      sub_1ACA50850(v50, v48);
    }
    else
    {
      sub_1ACA50850(v11, v13);
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v6, v52);
    goto LABEL_12;
  }
  uint64_t v50 = v11;
  swift_release();
  uint64_t v27 = (char *)v55[0];
  uint64_t v28 = *(void *)((char *)v55[0] + OBJC_IVAR___MTRecommendationModule_attributes);
  if (v28
    && (uint64_t v29 = (uint64_t *)(v28 + OBJC_IVAR___MTRecommendationModuleAttributes_resourceTypes),
        swift_beginAccess(),
        (uint64_t v30 = *v29) != 0))
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = *(void *)(v30 + 16);
    if (!v31)
    {
LABEL_9:
      sub_1ACA50850(v50, v13);

      swift_bridgeObjectRelease();
LABEL_20:
      uint64_t v27 = 0;
      goto LABEL_13;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x1E4FBC860];
    uint64_t v31 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v31) {
      goto LABEL_9;
    }
  }
  unint64_t v32 = v13;
  int v33 = *(unsigned __int8 *)(v30 + 32);
  swift_bridgeObjectRelease();
  if (v31 != 1)
  {
    sub_1ACA50850(v50, v32);
    goto LABEL_19;
  }
  uint64_t v49 = a1;
  os_log_type_t v34 = (void *)sub_1ACE75FC8();
  BOOL v35 = (void *)sub_1ACE76178();
  id v36 = objc_msgSend(v34, sel_valueForKeyPath_, v35);

  if (v36)
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v54, 0, sizeof(v54));
  }
  sub_1ACA9D6FC((uint64_t)v54, (uint64_t)v55);
  if (v55[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772250);
    if (swift_dynamicCast())
    {
      uint64_t v37 = v53;
      goto LABEL_27;
    }
  }
  else
  {
    sub_1ACA65828((uint64_t)v55);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E490);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1ACE843F0;
  *(void *)(v37 + 32) = sub_1ACA364E4(MEMORY[0x1E4FBC860]);
LABEL_27:
  if (!v33)
  {
    unint64_t v38 = sub_1ACA9CA5C(v37);
    swift_bridgeObjectRelease();
    uint64_t v39 = OBJC_IVAR___MTRecommendationModule_episodes;
LABEL_31:
    uint64_t v40 = (unint64_t *)&v27[v39];
    swift_beginAccess();
    *uint64_t v40 = v38;
    swift_bridgeObjectRelease();
    id v41 = &v27[OBJC_IVAR___MTRecommendationModule_shows];
    swift_beginAccess();
    unint64_t v42 = *(void *)v41;
    if (v42)
    {
      if (v42 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v43 = sub_1ACE77508();
        swift_bridgeObjectRelease();
        if (v43) {
          goto LABEL_34;
        }
      }
      else if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_34:
        sub_1ACA50850(v50, v32);
LABEL_42:
        a1 = v49;
        goto LABEL_13;
      }
    }
    uint64_t v44 = &v27[OBJC_IVAR___MTRecommendationModule_episodes];
    swift_beginAccess();
    unint64_t v45 = *(void *)v44;
    if (!v45)
    {
      sub_1ACA50850(v50, v32);

      uint64_t v27 = 0;
      goto LABEL_42;
    }
    a1 = v49;
    if (v45 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_1ACE77508();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v46 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    sub_1ACA50850(v50, v32);
    if (v46) {
      goto LABEL_13;
    }
LABEL_19:

    goto LABEL_20;
  }
  if (v33 == 1)
  {
    unint64_t v38 = sub_1ACA9C570(v37);
    swift_bridgeObjectRelease();
    uint64_t v39 = OBJC_IVAR___MTRecommendationModule_shows;
    goto LABEL_31;
  }
  sub_1ACE77498();
  __break(1u);
}

unint64_t sub_1ACA9C570(uint64_t a1)
{
  v32[1] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1ACE754C8();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v26 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v4 = MEMORY[0x1E4FBC860];
  v32[0] = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    id v29 = self;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v5; ++i)
    {
      swift_bridgeObjectRetain();
      id v9 = (void *)sub_1ACE75FC8();
      id v30 = 0;
      id v10 = objc_msgSend(v29, sel_dataWithJSONObject_options_error_, v9, 0, &v30);

      id v11 = v30;
      if (v10)
      {
        uint64_t v12 = sub_1ACE74F88();
        unint64_t v14 = v13;

        sub_1ACE748C8();
        swift_allocObject();
        sub_1ACE748B8();
        type metadata accessor for ServerPodcast();
        sub_1ACA9D764(qword_1EB766E50, (void (*)(uint64_t))type metadata accessor for ServerPodcast);
        sub_1ACE748A8();
        sub_1ACA50850(v12, v14);
        swift_bridgeObjectRelease();
        uint64_t v15 = swift_release();
        if (v31)
        {
          MEMORY[0x1AD118700](v15);
          if (*(void *)((v32[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1ACE765C8();
          }
          sub_1ACE76628();
          sub_1ACE76598();
        }
      }
      else
      {
        uint64_t v7 = v11;
        id v8 = (void *)sub_1ACE74D78();

        swift_willThrow();
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v4 = v32[0];
  }
  unint64_t v16 = v26;
  sub_1ACE754A8();
  swift_bridgeObjectRetain_n();
  os_log_type_t v17 = sub_1ACE75498();
  os_log_type_t v18 = sub_1ACE76C08();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    v32[0] = v20;
    *(_DWORD *)uint64_t v19 = 134218242;
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1ACE77508();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v31 = v21;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v31 = type metadata accessor for ServerPodcast();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1538);
    uint64_t v22 = sub_1ACE76228();
    uint64_t v31 = sub_1ACA3189C(v22, v23, v32);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v17, v18, "Parsed %ld %s(s)", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v20, -1, -1);
    MEMORY[0x1AD11B340](v19, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v28);
  return v4;
}

unint64_t sub_1ACA9CA5C(uint64_t a1)
{
  v32[1] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1ACE754C8();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v26 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v4 = MEMORY[0x1E4FBC860];
  v32[0] = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    id v29 = self;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v5; ++i)
    {
      swift_bridgeObjectRetain();
      id v9 = (void *)sub_1ACE75FC8();
      id v30 = 0;
      id v10 = objc_msgSend(v29, sel_dataWithJSONObject_options_error_, v9, 0, &v30);

      id v11 = v30;
      if (v10)
      {
        uint64_t v12 = sub_1ACE74F88();
        unint64_t v14 = v13;

        sub_1ACE748C8();
        swift_allocObject();
        sub_1ACE748B8();
        type metadata accessor for ServerPodcastEpisode();
        sub_1ACA9D764(qword_1EB767AA0, (void (*)(uint64_t))type metadata accessor for ServerPodcastEpisode);
        sub_1ACE748A8();
        sub_1ACA50850(v12, v14);
        swift_bridgeObjectRelease();
        uint64_t v15 = swift_release();
        if (v31)
        {
          MEMORY[0x1AD118700](v15);
          if (*(void *)((v32[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1ACE765C8();
          }
          sub_1ACE76628();
          sub_1ACE76598();
        }
      }
      else
      {
        uint64_t v7 = v11;
        id v8 = (void *)sub_1ACE74D78();

        swift_willThrow();
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v4 = v32[0];
  }
  unint64_t v16 = v26;
  sub_1ACE754A8();
  swift_bridgeObjectRetain_n();
  os_log_type_t v17 = sub_1ACE75498();
  os_log_type_t v18 = sub_1ACE76C08();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    v32[0] = v20;
    *(_DWORD *)uint64_t v19 = 134218242;
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1ACE77508();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v31 = v21;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v31 = type metadata accessor for ServerPodcastEpisode();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1540);
    uint64_t v22 = sub_1ACE76228();
    uint64_t v31 = sub_1ACA3189C(v22, v23, v32);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v17, v18, "Parsed %ld %s(s)", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v20, -1, -1);
    MEMORY[0x1AD11B340](v19, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v28);
  return v4;
}

void sub_1ACA9CF48(void *a1@<X8>)
{
}

uint64_t type metadata accessor for RecommendationModulesCache()
{
  uint64_t result = qword_1E99F1528;
  if (!qword_1E99F1528) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACA9CFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACA9D018(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F1508);
    sub_1ACA9D764(a2, (void (*)(uint64_t))type metadata accessor for RecommendationModule);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for RecommendationModulesCache(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1ACE74F28();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    id v10 = (uint64_t *)((char *)a1 + v8);
    id v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *id v10 = *v11;
    v10[1] = v12;
    unint64_t v13 = (uint64_t *)((char *)a1 + v9);
    unint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *unint64_t v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for RecommendationModulesCache(uint64_t a1)
{
  uint64_t v2 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RecommendationModulesCache(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  id v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  unint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RecommendationModulesCache(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for RecommendationModulesCache(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for RecommendationModulesCache(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  unint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *unint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecommendationModulesCache(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACA9D4CC);
}

uint64_t sub_1ACA9D4CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for RecommendationModulesCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACA9D5A4);
}

uint64_t sub_1ACA9D5A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1ACE74F28();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1ACA9D664()
{
  uint64_t result = sub_1ACE74F28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1ACA9D6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB7725E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACA9D764(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACA9D7AC(void (*a1)(uint64_t *__return_ptr, id *, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    if (!v6) {
      return v7;
    }
    uint64_t v19 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1ACC82F98(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0) {
      break;
    }
    uint64_t v9 = 0;
    uint64_t v7 = v19;
    while (v6 != v9)
    {
      if ((a3 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1AD119490](v9, a3);
      }
      else {
        id v10 = *(id *)(a3 + 8 * v9 + 32);
      }
      uint64_t v11 = v10;
      id v17 = v10;
      a1(&v18, &v17, &v16);
      if (v4)
      {
        swift_release();

        return v7;
      }
      uint64_t v4 = 0;

      uint64_t v12 = v18;
      uint64_t v19 = v7;
      unint64_t v14 = *(void *)(v7 + 16);
      unint64_t v13 = *(void *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1ACC82F98(v13 > 1, v14 + 1, 1);
        uint64_t v7 = v19;
      }
      ++v9;
      *(void *)(v7 + 16) = v14 + 1;
      *(void *)(v7 + 8 * v14 + 32) = v12;
      if (v6 == v9) {
        return v7;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACA9D940(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, void *))
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    uint64_t v7 = (void *)sub_1ACC82F98(0, v3, 0);
    uint64_t v4 = v14;
    uint64_t v8 = a1 + 32;
    do
    {
      v8 += 8;
      uint64_t v7 = a3(&v13, v7);
      uint64_t v9 = v13;
      uint64_t v14 = v4;
      unint64_t v11 = *(void *)(v4 + 16);
      unint64_t v10 = *(void *)(v4 + 24);
      if (v11 >= v10 >> 1)
      {
        uint64_t v7 = (void *)sub_1ACC82F98(v10 > 1, v11 + 1, 1);
        uint64_t v4 = v14;
      }
      *(void *)(v4 + 16) = v11 + 1;
      *(void *)(v4 + 8 * v11 + 32) = v9;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_1ACA9DA30(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v20 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1ACC833CC(0, v9, 0);
    uint64_t v10 = v23;
    unint64_t v19 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v11 = a3 + v19;
    uint64_t v18 = *(void *)(v6 + 72);
    uint64_t v12 = (void (**)(unint64_t, char *, uint64_t))(v6 + 32);
    while (1)
    {
      v21(v11);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v23 = v10;
      unint64_t v14 = *(void *)(v10 + 16);
      unint64_t v13 = *(void *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1ACC833CC(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v23;
      }
      *(void *)(v10 + 16) = v14 + 1;
      uint64_t v15 = v18;
      (*v12)(v10 + v19 + v14 * v18, v8, v20);
      v11 += v15;
      if (!--v9) {
        return v10;
      }
    }
    swift_release();
  }
  return v10;
}

uint64_t NSPredicate.EvaluationTree.hash(into:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  switch((unint64_t)*v1 >> 62)
  {
    case 1uLL:
      uint64_t v5 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1ACE77B28();
      sub_1ACE77B38();
      uint64_t v6 = *(void *)(v5 + 16);
      uint64_t result = sub_1ACE77B28();
      if (v6)
      {
        uint64_t v7 = v5 + 32;
        do
        {
          v7 += 8;
          uint64_t result = NSPredicate.EvaluationTree.hash(into:)(a1);
          --v6;
        }
        while (v6);
      }
      break;
    case 2uLL:
      uint64_t v8 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1ACE77B28();
      sub_1ACE77B38();
      uint64_t v9 = *(void *)(v8 + 16);
      uint64_t result = sub_1ACE77B28();
      if (v9)
      {
        uint64_t v10 = v8 + 32;
        do
        {
          v10 += 8;
          uint64_t result = NSPredicate.EvaluationTree.hash(into:)(a1);
          --v9;
        }
        while (v9);
      }
      break;
    case 3uLL:
      sub_1ACE77B28();
      sub_1ACE77B38();
      uint64_t result = NSPredicate.EvaluationTree.hash(into:)(a1);
      break;
    default:
      sub_1ACE77B28();
      sub_1ACE77B38();
      uint64_t result = sub_1ACE76108();
      break;
  }
  return result;
}

uint64_t static NSPredicate.EvaluationTree.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch((unint64_t)*a1 >> 62)
  {
    case 1uLL:
      if (v3 >> 62 != 1) {
        goto LABEL_18;
      }
      goto LABEL_17;
    case 2uLL:
      if (v3 >> 62 != 2) {
        goto LABEL_18;
      }
LABEL_17:
      if (*(unsigned __int8 *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) != *(unsigned __int8 *)((v3 & 0x3FFFFFFFFFFFFFFFLL)
                                                                                          + 0x10))
      {
LABEL_18:
        char v8 = 0;
        goto LABEL_19;
      }
      uint64_t v9 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v10 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_retain();
      LOBYTE(v9) = sub_1ACA877A0(v9, v10);
      swift_release();
      swift_release();
      uint64_t result = v9 & 1;
      break;
    case 3uLL:
      if (v3 >> 62 != 3) {
        goto LABEL_18;
      }
      uint64_t v6 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      if (*(unsigned __int8 *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) != *(unsigned __int8 *)((v3 & 0x3FFFFFFFFFFFFFFFLL)
                                                                                          + 0x10))
        goto LABEL_18;
      uint64_t v7 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v11 = *(void *)(v6 + 24);
      uint64_t v12 = v7;
      swift_retain();
      swift_retain();
      char v8 = static NSPredicate.EvaluationTree.== infix(_:_:)(&v12, &v11);
      swift_release();
      swift_release();
      goto LABEL_19;
    default:
      if (v3 >> 62 || *(unsigned __int8 *)(v2 + 16) != *(unsigned __int8 *)(v3 + 16)) {
        goto LABEL_18;
      }
      if (*(void *)(v2 + 24) == *(void *)(v3 + 24) && *(void *)(v2 + 32) == *(void *)(v3 + 32))
      {
        char v8 = 1;
LABEL_19:
        uint64_t result = v8 & 1;
      }
      else
      {
        uint64_t result = sub_1ACE77848();
      }
      break;
  }
  return result;
}

uint64_t sub_1ACA9DF28(uint64_t a1)
{
  unint64_t v2 = sub_1ACA9F764();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACA9DF64(uint64_t a1)
{
  unint64_t v2 = sub_1ACA9F764();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACA9DFA0()
{
  uint64_t result = 0x6C6261756C617665;
  switch(*v0)
  {
    case 1:
      uint64_t result = 6581857;
      break;
    case 2:
      uint64_t result = 29295;
      break;
    case 3:
      uint64_t result = 7630702;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACA9E018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACAA18F8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ACA9E040(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1ACA9E04C(uint64_t a1)
{
  unint64_t v2 = sub_1ACA9F614();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACA9E088(uint64_t a1)
{
  unint64_t v2 = sub_1ACA9F614();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACA9E0C4()
{
  if (*v0) {
    return 0x7461636964657270;
  }
  else {
    return 0x746C75736572;
  }
}

uint64_t sub_1ACA9E100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACAA1A88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACA9E128(uint64_t a1)
{
  unint64_t v2 = sub_1ACA9F7B8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACA9E164(uint64_t a1)
{
  unint64_t v2 = sub_1ACA9F7B8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACA9E1A0()
{
  if (*v0) {
    return 0x646C696863;
  }
  else {
    return 0x746C75736572;
  }
}

uint64_t sub_1ACA9E1D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACAA1B80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACA9E1FC(uint64_t a1)
{
  unint64_t v2 = sub_1ACA9F668();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACA9E238(uint64_t a1)
{
  unint64_t v2 = sub_1ACA9F668();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACA9E274()
{
  if (*v0) {
    return 0x6E6572646C696863;
  }
  else {
    return 0x746C75736572;
  }
}

uint64_t sub_1ACA9E2AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACAA1C64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACA9E2D4(uint64_t a1)
{
  unint64_t v2 = sub_1ACA9F710();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACA9E310(uint64_t a1)
{
  unint64_t v2 = sub_1ACA9F710();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t NSPredicate.EvaluationTree.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1548);
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v44 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1550);
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  MEMORY[0x1F4188790](v6);
  id v41 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1558);
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1560);
  uint64_t v38 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1568);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v48 = v14;
  uint64_t v49 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACA9F614();
  unint64_t v19 = v17;
  sub_1ACE77C78();
  switch(v18 >> 62)
  {
    case 1uLL:
      uint64_t v23 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      LOBYTE(v51) = 1;
      sub_1ACA9F764();
      uint64_t v24 = v48;
      sub_1ACE776D8();
      LOBYTE(v51) = 0;
      uint64_t v25 = v40;
      uint64_t v26 = v47;
      sub_1ACE77758();
      if (!v26)
      {
        uint64_t v51 = v23;
        char v50 = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1590);
        sub_1ACA9F91C(&qword_1E99F1598, (void (*)(void))sub_1ACA9F6BC);
        sub_1ACE77788();
      }
      (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v25);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v17, v24);
      break;
    case 2uLL:
      uint64_t v27 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      LOBYTE(v51) = 2;
      sub_1ACA9F710();
      uint64_t v28 = v41;
      uint64_t v29 = v48;
      sub_1ACE776D8();
      LOBYTE(v51) = 0;
      uint64_t v30 = v43;
      uint64_t v31 = v47;
      sub_1ACE77758();
      if (!v31)
      {
        uint64_t v51 = v27;
        char v50 = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1590);
        sub_1ACA9F91C(&qword_1E99F1598, (void (*)(void))sub_1ACA9F6BC);
        sub_1ACE77788();
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v30);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v19, v29);
      break;
    case 3uLL:
      uint64_t v32 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      LOBYTE(v51) = 3;
      sub_1ACA9F668();
      swift_retain();
      int v33 = v44;
      uint64_t v34 = v48;
      sub_1ACE776D8();
      LOBYTE(v51) = 0;
      uint64_t v36 = v46;
      uint64_t v35 = v47;
      sub_1ACE77758();
      if (v35)
      {
        swift_release();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v33, v36);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v19, v34);
      }
      else
      {
        uint64_t v51 = v32;
        char v50 = 1;
        sub_1ACA9F6BC();
        sub_1ACE77788();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v33, v36);
        (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v34);
        uint64_t result = swift_release();
      }
      break;
    default:
      uint64_t v46 = *(void *)(v18 + 24);
      LOBYTE(v51) = 0;
      sub_1ACA9F7B8();
      uint64_t v20 = v48;
      sub_1ACE776D8();
      LOBYTE(v51) = 0;
      uint64_t v21 = v47;
      sub_1ACE77758();
      if (!v21)
      {
        LOBYTE(v51) = 1;
        sub_1ACE77748();
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v11);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v17, v20);
      break;
  }
  return result;
}

uint64_t NSPredicate.EvaluationTree.hashValue.getter()
{
  v2[9] = *v0;
  sub_1ACE77B18();
  NSPredicate.EvaluationTree.hash(into:)((uint64_t)v2);
  return sub_1ACE77B78();
}

uint64_t NSPredicate.EvaluationTree.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  char v50 = a2;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F15B0);
  uint64_t v46 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v52 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F15B8);
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v51 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F15C0);
  uint64_t v45 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F15C8);
  uint64_t v44 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F15D0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v53 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1ACA9F614();
  uint64_t v16 = v54;
  sub_1ACE77C48();
  if (!v16)
  {
    uint64_t v17 = v10;
    uint64_t v54 = v8;
    unint64_t v18 = v51;
    unint64_t v19 = v52;
    uint64_t v20 = sub_1ACE776B8();
    if (*(void *)(v20 + 16) == 1)
    {
      switch(*(unsigned char *)(v20 + 32))
      {
        case 1:
          uint64_t v28 = (uint64_t *)v50;
          char v60 = 1;
          sub_1ACA9F764();
          uint64_t v29 = v7;
          sub_1ACE775D8();
          uint64_t v32 = swift_allocObject();
          char v59 = 0;
          char v33 = sub_1ACE77668();
          uint64_t v52 = (char *)(v32 + 24);
          uint64_t v54 = v32;
          *(unsigned char *)(v32 + 16) = v33 & 1;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1590);
          char v58 = 1;
          sub_1ACA9F91C(&qword_1E99F15E0, (void (*)(void))sub_1ACA9F890);
          sub_1ACE77698();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v49);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
          *uint64_t v28 = v54 | 0x4000000000000000;
          return __swift_destroy_boxed_opaque_existential_0((uint64_t)v53);
        case 2:
          char v63 = 2;
          sub_1ACA9F710();
          sub_1ACE775D8();
          uint64_t v34 = swift_allocObject();
          char v62 = 0;
          char v35 = sub_1ACE77668();
          uint64_t v54 = v34 + 24;
          *(unsigned char *)(v34 + 16) = v35 & 1;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1590);
          char v61 = 1;
          sub_1ACA9F91C(&qword_1E99F15E0, (void (*)(void))sub_1ACA9F890);
          sub_1ACE77698();
          (*(void (**)(char *, uint64_t))(v47 + 8))(v18, v48);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
          unint64_t v22 = v34 | 0x8000000000000000;
          goto LABEL_10;
        case 3:
          uint64_t v54 = v20;
          char v66 = 3;
          sub_1ACA9F668();
          uint64_t v30 = v19;
          sub_1ACE775D8();
          uint64_t v51 = (char *)swift_allocObject();
          char v65 = 0;
          uint64_t v36 = v43;
          char v37 = sub_1ACE77668();
          unint64_t v38 = (unint64_t)v51;
          v51[16] = v37 & 1;
          char v64 = 1;
          sub_1ACA9F890();
          sub_1ACE77698();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v30, v36);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
          unint64_t v22 = v38 | 0xC000000000000000;
          goto LABEL_10;
        default:
          char v57 = 0;
          sub_1ACA9F7B8();
          uint64_t v21 = v17;
          sub_1ACE775D8();
          unint64_t v22 = swift_allocObject();
          char v56 = 0;
          uint64_t v23 = v54;
          char v24 = sub_1ACE77668();
          uint64_t v52 = v14;
          *(unsigned char *)(v22 + 16) = v24 & 1;
          char v55 = 1;
          uint64_t v39 = sub_1ACE77658();
          uint64_t v41 = v40;
          (*(void (**)(char *, uint64_t))(v44 + 8))(v21, v23);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v12 + 8))(v52, v11);
          *(void *)(v22 + 24) = v39;
          *(void *)(v22 + 32) = v41;
LABEL_10:
          *char v50 = v22;
          break;
      }
    }
    else
    {
      uint64_t v25 = sub_1ACE77328();
      swift_allocError();
      uint64_t v27 = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0EC8);
      void *v27 = &type metadata for NSPredicate.EvaluationTree;
      sub_1ACE775E8();
      sub_1ACE77308();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, *MEMORY[0x1E4FBBA70], v25);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v53);
}

uint64_t sub_1ACA9F594@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return NSPredicate.EvaluationTree.init(from:)(a1, a2);
}

uint64_t sub_1ACA9F5AC(void *a1)
{
  return NSPredicate.EvaluationTree.encode(to:)(a1);
}

uint64_t sub_1ACA9F5C4()
{
  v2[9] = *v0;
  sub_1ACE77B18();
  NSPredicate.EvaluationTree.hash(into:)((uint64_t)v2);
  return sub_1ACE77B78();
}

unint64_t sub_1ACA9F614()
{
  unint64_t result = qword_1E99F1570;
  if (!qword_1E99F1570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1570);
  }
  return result;
}

unint64_t sub_1ACA9F668()
{
  unint64_t result = qword_1E99F1578;
  if (!qword_1E99F1578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1578);
  }
  return result;
}

unint64_t sub_1ACA9F6BC()
{
  unint64_t result = qword_1E99F1580;
  if (!qword_1E99F1580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1580);
  }
  return result;
}

unint64_t sub_1ACA9F710()
{
  unint64_t result = qword_1E99F1588;
  if (!qword_1E99F1588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1588);
  }
  return result;
}

unint64_t sub_1ACA9F764()
{
  unint64_t result = qword_1E99F15A0;
  if (!qword_1E99F15A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F15A0);
  }
  return result;
}

unint64_t sub_1ACA9F7B8()
{
  unint64_t result = qword_1E99F15A8;
  if (!qword_1E99F15A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F15A8);
  }
  return result;
}

uint64_t sub_1ACA9F80C()
{
  v2[9] = *v0;
  sub_1ACE77B18();
  NSPredicate.EvaluationTree.hash(into:)((uint64_t)v2);
  return sub_1ACE77B78();
}

uint64_t sub_1ACA9F854()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1ACA9F890()
{
  unint64_t result = qword_1E99F15D8;
  if (!qword_1E99F15D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F15D8);
  }
  return result;
}

uint64_t sub_1ACA9F8E4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACA9F91C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F1590);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACA9F98C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void NSPredicate.explain(with:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unsigned int v6 = objc_msgSend(v2, sel_evaluateWithObject_, sub_1ACE77828());
  swift_unknownObjectRelease();
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();
  if (!v7)
  {
    uint64_t v19 = swift_allocObject();
    *(unsigned char *)(v19 + 16) = v6;
    id v20 = objc_msgSend(v2, sel_description);
    uint64_t v21 = sub_1ACE761B8();
    uint64_t v23 = v22;

    *(void *)(v19 + 24) = v21;
    *(void *)(v19 + 32) = v23;
    *a2 = v19;
    return;
  }
  uint64_t v8 = (void *)v7;
  unsigned int v43 = v6;
  uint64_t v42 = (unint64_t *)a2;
  uint64_t v44 = v3;
  id v9 = v2;
  id v10 = objc_msgSend(v8, sel_subpredicates);
  uint64_t v11 = sub_1ACE76578();

  unint64_t v12 = MEMORY[0x1E4FBC860];
  unint64_t v48 = MEMORY[0x1E4FBC860];
  uint64_t v13 = *(void *)(v11 + 16);
  if (v13)
  {
    id v41 = v9;
    uint64_t v14 = v11 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1ACA33128(v14, (uint64_t)v47);
      sub_1ACA33128((uint64_t)v47, (uint64_t)v45);
      sub_1ACA9FDB0();
      if ((swift_dynamicCast() & 1) == 0) {
        uint64_t v46 = 0;
      }
      uint64_t v15 = __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
      if (v46)
      {
        MEMORY[0x1AD118700](v15);
        if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1ACE765C8();
        }
        sub_1ACE76628();
        sub_1ACE76598();
      }
      v14 += 32;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    unint64_t v12 = v48;
    id v9 = v41;
  }
  uint64_t v16 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v16);
  uint64_t v40[2] = a1;
  uint64_t v17 = v44;
  uint64_t v18 = sub_1ACA9D7AC((void (*)(uint64_t *__return_ptr, id *, uint64_t *))sub_1ACA9FDF0, (uint64_t)v40, v12);
  swift_bridgeObjectRelease();
  if (v17)
  {

    return;
  }
  id v24 = objc_msgSend(v8, sel_compoundPredicateType);
  if (!v24)
  {
    uint64_t v30 = v9;
    uint64_t v31 = swift_allocObject();
    *(unsigned char *)(v31 + 16) = v43;
    if (!*(void *)(v18 + 16))
    {
      swift_bridgeObjectRelease();
      __break(1u);
      return;
    }
    uint64_t v32 = v31;
    uint64_t v33 = *(void *)(v18 + 32);
    swift_retain();

    swift_bridgeObjectRelease();
    *(void *)(v32 + 24) = v33;
    unint64_t v29 = v32 | 0xC000000000000000;
LABEL_22:
    *uint64_t v42 = v29;
    return;
  }
  if (v24 == (id)2)
  {

    uint64_t v28 = swift_allocObject();
    *(unsigned char *)(v28 + 16) = v43;
    *(void *)(v28 + 24) = v18;
    unint64_t v29 = v28 | 0x8000000000000000;
    goto LABEL_22;
  }
  uint64_t v25 = (uint64_t *)v42;
  char v26 = v43;
  if (v24 == (id)1)
  {

    uint64_t v27 = swift_allocObject();
    *(unsigned char *)(v27 + 16) = v26;
    *(void *)(v27 + 24) = v18;
    uint64_t *v25 = v27 | 0x4000000000000000;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v34 = objc_msgSend(v8, sel_debugDescription);
    uint64_t v35 = sub_1ACE761B8();
    uint64_t v36 = v9;
    uint64_t v38 = v37;

    sub_1ACA9FE2C();
    swift_allocError();
    *uint64_t v39 = v35;
    v39[1] = v38;
    swift_willThrow();
  }
}

unint64_t sub_1ACA9FDB0()
{
  unint64_t result = qword_1EB772260;
  if (!qword_1EB772260)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB772260);
  }
  return result;
}

uint64_t sub_1ACA9FDF0(uint64_t a1, void *a2)
{
  uint64_t result = NSPredicate.explain(with:)(*(void *)(v2 + 16));
  if (v3) {
    *a2 = v3;
  }
  return result;
}

unint64_t sub_1ACA9FE2C()
{
  unint64_t result = qword_1E99F15E8;
  if (!qword_1E99F15E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F15E8);
  }
  return result;
}

uint64_t NSPredicate.EvaluationTree.result.getter()
{
  uint64_t v1 = *v0;
  switch((unint64_t)*v0 >> 62)
  {
    case 1uLL:
    case 2uLL:
    case 3uLL:
      v1 &= 0x3FFFFFFFFFFFFFFFuLL;
      break;
    default:
      return *(unsigned __int8 *)(v1 + 16);
  }
  return *(unsigned __int8 *)(v1 + 16);
}

Swift::String __swiftcall NSPredicate.EvaluationTree.printableTreeString(depth:spacer:)(Swift::Int depth, Swift::String spacer)
{
  object = spacer._object;
  uint64_t countAndFlagsBits = spacer._countAndFlagsBits;
  unint64_t v6 = *v2;
  swift_bridgeObjectRetain();
  uint64_t spacera = countAndFlagsBits;
  uint64_t v7 = MEMORY[0x1AD118510](countAndFlagsBits, object, depth);
  uint64_t v9 = v7;
  id v10 = v8;
  switch(v6 >> 62)
  {
    case 1uLL:
      uint64_t v11 = *(void *)((v6 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v35 = v7;
      uint64_t v36 = v8;
      sub_1ACE762C8();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      sub_1ACE762C8();
      int64_t v12 = *(void *)(v11 + 16);
      if (!v12) {
        goto LABEL_16;
      }
      uint64_t v33 = MEMORY[0x1E4FBC860];
      sub_1ACC82D44(0, v12, 0);
      BOOL v13 = __OFADD__(depth, 1);
      Swift::Int v14 = depth + 1;
      if (v13) {
        goto LABEL_22;
      }
      uint64_t v15 = v11 + 32;
      do
      {
        v15 += 8;
        swift_retain();
        v16._uint64_t countAndFlagsBits = spacera;
        v16._object = object;
        Swift::String v17 = NSPredicate.EvaluationTree.printableTreeString(depth:spacer:)(v14, v16);
        swift_release();
        unint64_t v19 = *(void *)(v33 + 16);
        unint64_t v18 = *(void *)(v33 + 24);
        if (v19 >= v18 >> 1) {
          sub_1ACC82D44(v18 > 1, v19 + 1, 1);
        }
        *(void *)(v33 + 16) = v19 + 1;
        *(Swift::String *)(v33 + 16 * v19 + 32) = v17;
        --v12;
      }
      while (v12);
      goto LABEL_16;
    case 2uLL:
      uint64_t v20 = *(void *)((v6 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v35 = v7;
      uint64_t v36 = v8;
      sub_1ACE762C8();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      sub_1ACE762C8();
      int64_t v21 = *(void *)(v20 + 16);
      if (!v21) {
        goto LABEL_16;
      }
      uint64_t v34 = MEMORY[0x1E4FBC860];
      sub_1ACC82D44(0, v21, 0);
      BOOL v13 = __OFADD__(depth, 1);
      Swift::Int v22 = depth + 1;
      if (v13) {
        goto LABEL_23;
      }
      uint64_t v23 = v20 + 32;
      do
      {
        v23 += 8;
        swift_retain();
        v24._uint64_t countAndFlagsBits = spacera;
        v24._object = object;
        Swift::String v25 = NSPredicate.EvaluationTree.printableTreeString(depth:spacer:)(v22, v24);
        swift_release();
        unint64_t v27 = *(void *)(v34 + 16);
        unint64_t v26 = *(void *)(v34 + 24);
        if (v27 >= v26 >> 1) {
          sub_1ACC82D44(v26 > 1, v27 + 1, 1);
        }
        *(void *)(v34 + 16) = v27 + 1;
        *(Swift::String *)(v34 + 16 * v27 + 32) = v25;
        --v21;
      }
      while (v21);
LABEL_16:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
      sub_1ACA8B0C0();
      sub_1ACE76138();
      swift_bridgeObjectRelease();
      sub_1ACE762C8();
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    case 3uLL:
      uint64_t v35 = v7;
      uint64_t v36 = v8;
      swift_retain();
      sub_1ACE762C8();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      sub_1ACE762C8();
      if (__OFADD__(depth, 1))
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAA0378);
      }
      v28._uint64_t countAndFlagsBits = countAndFlagsBits;
      v28._object = object;
      NSPredicate.EvaluationTree.printableTreeString(depth:spacer:)(depth + 1, v28);
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      swift_release();
      break;
    default:
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      sub_1ACE762C8();
      sub_1ACE762C8();
      uint64_t v35 = v9;
      uint64_t v36 = v10;
      swift_bridgeObjectRetain();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      goto LABEL_17;
  }
  uint64_t v29 = v35;
  uint64_t v30 = v36;
  result._object = v30;
  result._uint64_t countAndFlagsBits = v29;
  return result;
}

uint64_t NSPredicate.EvaluationTree.prune(invertNot:by:)@<X0>(char a1@<W0>, BOOL (*a2)(uint64_t *a1)@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  unint64_t v5 = *v4;
  switch(*v4 >> 62)
  {
    case 1uLL:
      char v13 = *(unsigned char *)((v5 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v14 = *(void *)((v5 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      unint64_t v23 = *v4;
      uint64_t result = ((uint64_t (*)(unint64_t *))a2)(&v23);
      if ((result & 1) == 0) {
        goto LABEL_19;
      }
      uint64_t v15 = sub_1ACAA17AC(v14, (uint64_t)a2, a3);
      if (!v15[2]) {
        goto LABEL_18;
      }
      uint64_t result = swift_allocObject();
      *(unsigned char *)(result + 16) = v13;
      *(void *)(result + 24) = v15;
      unint64_t v5 = result | 0x4000000000000000;
      goto LABEL_20;
    case 2uLL:
      char v10 = *(unsigned char *)((v5 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v11 = *(void *)((v5 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      unint64_t v23 = *v4;
      uint64_t result = ((uint64_t (*)(unint64_t *))a2)(&v23);
      if ((result & 1) == 0) {
        goto LABEL_19;
      }
      int64_t v12 = sub_1ACAA17AC(v11, (uint64_t)a2, a3);
      if (!v12[2])
      {
LABEL_18:
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      uint64_t result = swift_allocObject();
      *(unsigned char *)(result + 16) = v10;
      *(void *)(result + 24) = v12;
      unint64_t v5 = result | 0x8000000000000000;
      goto LABEL_20;
    case 3uLL:
      char v22 = *(unsigned char *)((v5 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      if (a1)
      {
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = a2;
        *(void *)(v17 + 24) = a3;
        unint64_t v18 = sub_1ACAA0D70;
        unint64_t v19 = sub_1ACAA0D70;
      }
      else
      {
        unint64_t v19 = 0;
        unint64_t v18 = a2;
        uint64_t v17 = a3;
      }
      unint64_t v23 = v5;
      swift_retain();
      if ((((uint64_t (*)(unint64_t *))a2)(&v23) & 1) == 0)
      {
        swift_release();
        goto LABEL_17;
      }
      NSPredicate.EvaluationTree.prune(invertNot:by:)(&v23, a1 & 1, v18, v17);
      swift_release();
      unint64_t v20 = v23;
      if ((~v23 & 0xF000000000000007) == 0)
      {
LABEL_17:
        uint64_t result = sub_1ACA76F34((uint64_t)v19);
        goto LABEL_19;
      }
      uint64_t v21 = swift_allocObject();
      *(unsigned char *)(v21 + 16) = v22;
      *(void *)(v21 + 24) = v20;
      uint64_t result = sub_1ACA76F34((uint64_t)v19);
      unint64_t v5 = v21 | 0xC000000000000000;
LABEL_20:
      *a4 = v5;
      return result;
    default:
      unint64_t v23 = *v4;
      uint64_t result = ((uint64_t (*)(unint64_t *))a2)(&v23);
      if (result) {
        uint64_t result = swift_retain();
      }
      else {
LABEL_19:
      }
        unint64_t v5 = 0xF000000000000007;
      goto LABEL_20;
  }
}

uint64_t NSPredicate.EvaluationTree.influences.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *v1;
  switch(v2 >> 62)
  {
    case 1uLL:
      char v14 = *(unsigned char *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v15 = swift_allocObject();
      *(unsigned char *)(v15 + 16) = v14;
      unint64_t v20 = v2;
      uint64_t v16 = sub_1ACAA07CC();
      uint64_t v17 = sub_1ACA9D940(v16, (uint64_t)&v18, (void *(*)(uint64_t *__return_ptr, void *))NSPredicate.EvaluationTree.influences.getter);
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v15 + 24) = v17;
      unint64_t v9 = v15 | 0x4000000000000000;
      goto LABEL_8;
    case 2uLL:
      char v5 = *(unsigned char *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v6 = swift_allocObject();
      *(unsigned char *)(v6 + 16) = v5;
      unint64_t v20 = v2;
      uint64_t v7 = sub_1ACAA07CC();
      uint64_t v8 = sub_1ACA9D940(v7, (uint64_t)v19, (void *(*)(uint64_t *__return_ptr, void *))NSPredicate.EvaluationTree.influences.getter);
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v6 + 24) = v8;
      unint64_t v9 = v6 | 0x8000000000000000;
      goto LABEL_8;
    case 3uLL:
      uint64_t v10 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      char v11 = *(unsigned char *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v12 = *(void *)(v10 + 24);
      uint64_t v13 = swift_allocObject();
      *(unsigned char *)(v13 + 16) = v11;
      unint64_t v20 = v12;
      uint64_t result = NSPredicate.EvaluationTree.influences.getter();
      unint64_t v9 = v13 | 0xC000000000000000;
LABEL_8:
      *a1 = v9;
      break;
    default:
      *a1 = v2;
      uint64_t result = swift_retain();
      break;
  }
  return result;
}

uint64_t sub_1ACAA07CC()
{
  if ((*v0 >> 62) - 1 > 1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v1 = *(void *)((*v0 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  int v3 = *(unsigned __int8 *)((*v0 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  do
  {
    unint64_t v8 = *(void *)(v1 + 8 * v4 + 32);
    switch(v8 >> 62)
    {
      case 1uLL:
      case 2uLL:
      case 3uLL:
        unint64_t v9 = (unsigned __int8 *)((v8 & 0x3FFFFFFFFFFFFFFFLL) + 16);
        break;
      default:
        unint64_t v9 = (unsigned __int8 *)(v8 + 16);
        break;
    }
    if (v3 == *v9)
    {
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1ACC82F98(0, *(void *)(v5 + 16) + 1, 1);
      }
      unint64_t v7 = *(void *)(v5 + 16);
      unint64_t v6 = *(void *)(v5 + 24);
      if (v7 >= v6 >> 1) {
        sub_1ACC82F98(v6 > 1, v7 + 1, 1);
      }
      *(void *)(v5 + 16) = v7 + 1;
      *(void *)(v5 + 8 * v7 + 32) = v8;
    }
    ++v4;
  }
  while (v2 != v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t NSPredicate.EvaluationTree.flattened.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *v1;
  switch(*v1 >> 62)
  {
    case 1uLL:
      uint64_t v4 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v5 = *(void *)(v4 + 16);
      if (!v5) {
        goto LABEL_12;
      }
      char v6 = *(unsigned char *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v7 = *(void *)(v4 + 32);
      if (v5 == 1)
      {
        uint64_t v8 = swift_retain();
        if (v7 >> 62 == 1) {
          goto LABEL_10;
        }
      }
      else
      {
        swift_retain();
      }
      uint64_t v17 = swift_allocObject();
      *(unsigned char *)(v17 + 16) = v6;
      uint64_t v18 = sub_1ACA9D940(v4, (uint64_t)v21, (void *(*)(uint64_t *__return_ptr, void *))NSPredicate.EvaluationTree.flattened.getter);
      uint64_t result = swift_release();
      *(void *)(v17 + 24) = v18;
      unint64_t v13 = v17 | 0x4000000000000000;
      goto LABEL_20;
    case 2uLL:
      uint64_t v9 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v10 = *(void *)(v9 + 16);
      if (v10)
      {
        char v11 = *(unsigned char *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
        unint64_t v7 = *(void *)(v9 + 32);
        if (v10 == 1)
        {
          uint64_t v8 = swift_retain();
          if (v7 >> 62 == 2)
          {
LABEL_10:
            unint64_t v22 = v7;
            NSPredicate.EvaluationTree.flattened.getter(&v24, v8);
            uint64_t result = swift_release();
            unint64_t v13 = v24;
LABEL_20:
            *a1 = v13;
            return result;
          }
        }
        else
        {
          swift_retain();
        }
        uint64_t v19 = swift_allocObject();
        *(unsigned char *)(v19 + 16) = v11;
        uint64_t v20 = sub_1ACA9D940(v9, (uint64_t)v23, (void *(*)(uint64_t *__return_ptr, void *))NSPredicate.EvaluationTree.flattened.getter);
        uint64_t result = swift_release();
        *(void *)(v19 + 24) = v20;
        unint64_t v13 = v19 | 0x8000000000000000;
        goto LABEL_20;
      }
LABEL_12:
      *a1 = v2;
LABEL_13:
      return swift_retain();
    case 3uLL:
      char v14 = *(unsigned char *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v15 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v16 = swift_allocObject();
      *(unsigned char *)(v16 + 16) = v14;
      unint64_t v24 = v15;
      uint64_t result = ((uint64_t (*)(void))NSPredicate.EvaluationTree.flattened.getter)();
      unint64_t v13 = v16 | 0xC000000000000000;
      goto LABEL_20;
    default:
      *a1 = v2;
      goto LABEL_13;
  }
}

BOOL NSPredicate.EvaluationTree.existentially(matches:)(unint64_t *a1)
{
  unint64_t v2 = *a1;
  switch(*v1 >> 62)
  {
    case 1:
      BOOL result = v2 >> 62 == 1;
      break;
    case 2:
      BOOL result = v2 >> 62 == 2;
      break;
    case 3:
      BOOL result = v2 >> 62 == 3;
      break;
    default:
      BOOL result = v2 >> 62 == 0;
      break;
  }
  return result;
}

uint64_t NSPredicate.EvaluationTree.evaluableComponents.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = (unint64_t)*v0 >> 62;
  if ((v2 - 1) >= 2)
  {
    if (v2)
    {
      return ((uint64_t (*)(void))NSPredicate.EvaluationTree.evaluableComponents.getter)();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0D70);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1ACE843F0;
      *(void *)(v3 + 32) = v1;
      swift_retain();
    }
  }
  else
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    uint64_t v9 = MEMORY[0x1E4FBC860];
    uint64_t v4 = *(void *)(*(void *)((v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18) + 16);
    if (v4)
    {
      uint64_t v5 = swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v7 = NSPredicate.EvaluationTree.evaluableComponents.getter(v5);
        uint64_t v5 = sub_1ACA6F2A8(v7);
      }
      swift_bridgeObjectRelease();
      return v9;
    }
  }
  return v3;
}

uint64_t NSPredicate.EvaluationTree.description.getter()
{
  v0._uint64_t countAndFlagsBits = 8224;
  v0._object = (void *)0xE200000000000000;
  return NSPredicate.EvaluationTree.printableTreeString(depth:spacer:)(0, v0)._countAndFlagsBits;
}

uint64_t sub_1ACAA0D20()
{
  v0._uint64_t countAndFlagsBits = 8224;
  v0._object = (void *)0xE200000000000000;
  return NSPredicate.EvaluationTree.printableTreeString(depth:spacer:)(0, v0)._countAndFlagsBits;
}

uint64_t sub_1ACAA0D60()
{
  return swift_deallocObject();
}

BOOL sub_1ACAA0D70(uint64_t *a1)
{
  unint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = *a1;
  return (v2(&v4) & 1) == 0;
}

unint64_t sub_1ACAA0DB8()
{
  unint64_t result = qword_1E99F15F0;
  if (!qword_1E99F15F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F15F0);
  }
  return result;
}

void *_s14EvaluationTreeOwCP(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t _s14EvaluationTreeOwxx()
{
  return swift_release();
}

void *_s14EvaluationTreeOwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *_s14EvaluationTreeOwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t _s14EvaluationTreeOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s14EvaluationTreeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(void *)unint64_t result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1ACAA0F74(void *a1)
{
  return *a1 >> 62;
}

uint64_t *sub_1ACAA0F80(uint64_t *result, uint64_t a2)
{
  *unint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for NSPredicate.EvaluationTree()
{
  return &type metadata for NSPredicate.EvaluationTree;
}

ValueMetadata *type metadata accessor for NSPredicate.PredicateCrawlError()
{
  return &type metadata for NSPredicate.PredicateCrawlError;
}

uint64_t getEnumTagSinglePayload for SubscriptionOffer.AppType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14EvaluationTreeO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAA1110);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14EvaluationTreeO10CodingKeysOMa()
{
  return &_s14EvaluationTreeO10CodingKeysON;
}

ValueMetadata *_s14EvaluationTreeO19EvaluableCodingKeysOMa()
{
  return &_s14EvaluationTreeO19EvaluableCodingKeysON;
}

ValueMetadata *_s14EvaluationTreeO13AndCodingKeysOMa()
{
  return &_s14EvaluationTreeO13AndCodingKeysON;
}

ValueMetadata *_s14EvaluationTreeO12OrCodingKeysOMa()
{
  return &_s14EvaluationTreeO12OrCodingKeysON;
}

unsigned char *_s14EvaluationTreeO19EvaluableCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAA124CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14EvaluationTreeO13NotCodingKeysOMa()
{
  return &_s14EvaluationTreeO13NotCodingKeysON;
}

unint64_t sub_1ACAA1288()
{
  unint64_t result = qword_1E99F15F8;
  if (!qword_1E99F15F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F15F8);
  }
  return result;
}

unint64_t sub_1ACAA12E0()
{
  unint64_t result = qword_1E99F1600;
  if (!qword_1E99F1600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1600);
  }
  return result;
}

unint64_t sub_1ACAA1338()
{
  unint64_t result = qword_1E99F1608;
  if (!qword_1E99F1608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1608);
  }
  return result;
}

unint64_t sub_1ACAA1390()
{
  unint64_t result = qword_1E99F1610;
  if (!qword_1E99F1610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1610);
  }
  return result;
}

unint64_t sub_1ACAA13E8()
{
  unint64_t result = qword_1E99F1618;
  if (!qword_1E99F1618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1618);
  }
  return result;
}

unint64_t sub_1ACAA1440()
{
  unint64_t result = qword_1E99F1620;
  if (!qword_1E99F1620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1620);
  }
  return result;
}

unint64_t sub_1ACAA1498()
{
  unint64_t result = qword_1E99F1628;
  if (!qword_1E99F1628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1628);
  }
  return result;
}

unint64_t sub_1ACAA14F0()
{
  unint64_t result = qword_1E99F1630;
  if (!qword_1E99F1630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1630);
  }
  return result;
}

unint64_t sub_1ACAA1548()
{
  unint64_t result = qword_1E99F1638;
  if (!qword_1E99F1638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1638);
  }
  return result;
}

unint64_t sub_1ACAA15A0()
{
  unint64_t result = qword_1E99F1640;
  if (!qword_1E99F1640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1640);
  }
  return result;
}

unint64_t sub_1ACAA15F8()
{
  unint64_t result = qword_1E99F1648;
  if (!qword_1E99F1648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1648);
  }
  return result;
}

unint64_t sub_1ACAA1650()
{
  unint64_t result = qword_1E99F1650;
  if (!qword_1E99F1650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1650);
  }
  return result;
}

unint64_t sub_1ACAA16A8()
{
  unint64_t result = qword_1E99F1658;
  if (!qword_1E99F1658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1658);
  }
  return result;
}

unint64_t sub_1ACAA1700()
{
  unint64_t result = qword_1E99F1660;
  if (!qword_1E99F1660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1660);
  }
  return result;
}

unint64_t sub_1ACAA1758()
{
  unint64_t result = qword_1E99F1668;
  if (!qword_1E99F1668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1668);
  }
  return result;
}

void *sub_1ACAA17AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  BOOL v7 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    swift_retain();
    NSPredicate.EvaluationTree.prune(invertNot:by:)(&v12, 0, a2, a3);
    swift_release();
    uint64_t v8 = v12;
    if ((~v12 & 0xF000000000000007) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        BOOL v7 = sub_1ACA42218(0, v7[2] + 1, 1, v7);
      }
      unint64_t v10 = v7[2];
      unint64_t v9 = v7[3];
      if (v10 >= v9 >> 1) {
        BOOL v7 = sub_1ACA42218((void *)(v9 > 1), v10 + 1, 1, v7);
      }
      _OWORD v7[2] = v10 + 1;
      v7[v10 + 4] = v8;
    }
    ++v6;
  }
  while (v3 != v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1ACAA18F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6261756C617665 && a2 == 0xE900000000000065;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6581857 && a2 == 0xE300000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 29295 && a2 == 0xE200000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7630702 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1ACAA1A88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746C75736572 && a2 == 0xE600000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461636964657270 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACAA1B80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746C75736572 && a2 == 0xE600000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646C696863 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACAA1C64(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746C75736572 && a2 == 0xE600000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t dispatch thunk of ThinClientStateNetworkingProtocol.fetchNewEpisodeStates(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of ThinClientStateNetworkingProtocol.fetchNewPodcastStates(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

void ContentID.hash(into:)(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  if (a4)
  {
    if (a4 == 1)
    {
      sub_1ACE77B28();
      id v6 = a2;
      sub_1ACE76F78();
      sub_1ACA50D28(a2, a3, 1);
    }
    else
    {
      sub_1ACE77B28();
      sub_1ACE76108();
    }
  }
  else
  {
    sub_1ACE77B28();
    sub_1ACE77B58();
  }
}

uint64_t ContentID.hashValue.getter(void *a1, uint64_t a2, char a3)
{
  sub_1ACE77B18();
  if (a3)
  {
    sub_1ACE77B28();
    if (a3 == 1)
    {
      id v6 = a1;
      sub_1ACE76F78();
      sub_1ACA50D28(a1, a2, 1);
    }
    else
    {
      sub_1ACE76108();
    }
  }
  else
  {
    sub_1ACE77B28();
    sub_1ACE77B58();
  }
  return sub_1ACE77B78();
}

uint64_t sub_1ACAA1F24()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  sub_1ACE77B18();
  if (v3)
  {
    sub_1ACE77B28();
    if (v3 == 1)
    {
      id v4 = v1;
      sub_1ACE76F78();
      sub_1ACA50D28(v1, v2, 1);
    }
    else
    {
      sub_1ACE76108();
    }
  }
  else
  {
    sub_1ACE77B28();
    sub_1ACE77B58();
  }
  return sub_1ACE77B78();
}

void sub_1ACAA1FE0()
{
  uint64_t v1 = *(void **)v0;
  if (*(unsigned char *)(v0 + 16))
  {
    uint64_t v2 = *(void *)(v0 + 8);
    if (*(unsigned char *)(v0 + 16) == 1)
    {
      sub_1ACE77B28();
      id v3 = v1;
      sub_1ACE76F78();
      sub_1ACA50D28(v1, v2, 1);
    }
    else
    {
      sub_1ACE77B28();
      sub_1ACE76108();
    }
  }
  else
  {
    sub_1ACE77B28();
    sub_1ACE77B58();
  }
}

uint64_t sub_1ACAA20B4()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  sub_1ACE77B18();
  if (v3)
  {
    sub_1ACE77B28();
    if (v3 == 1)
    {
      id v4 = v1;
      sub_1ACE76F78();
      sub_1ACA50D28(v1, v2, 1);
    }
    else
    {
      sub_1ACE76108();
    }
  }
  else
  {
    sub_1ACE77B28();
    sub_1ACE77B58();
  }
  return sub_1ACE77B78();
}

uint64_t sub_1ACAA216C(uint64_t a1, uint64_t a2)
{
  return _s18PodcastsFoundation9ContentIDO2eeoiySbAC_ACtFZ_0(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void **)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t ContentID.stringValue.getter(void *a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    if (a3 == 1)
    {
      id v10 = objc_msgSend(a1, sel_URIRepresentation);
      sub_1ACE74E98();

      uint64_t v11 = sub_1ACE74DD8();
      sub_1ACA50D28(a1, a2, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return v11;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    v13[1] = a1;
    sub_1ACA55E4C();
    return sub_1ACE770B8();
  }
  return (uint64_t)a1;
}

uint64_t sub_1ACAA22F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF3ED0(*a1, *a2);
}

uint64_t sub_1ACAA2304()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAA23A0()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACAA2428()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAA24C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACAA2C18();
  *a1 = result;
  return result;
}

void sub_1ACAA24F0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE400000000000000;
  unint64_t v5 = 1684632949;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000010;
    unint64_t v4 = 0x80000001ACEC49D0;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x64496D616461;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1ACAA2548()
{
  unint64_t v1 = 1684632949;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x64496D616461;
  }
}

uint64_t sub_1ACAA259C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACAA2C18();
  *a1 = result;
  return result;
}

uint64_t sub_1ACAA25C4(uint64_t a1)
{
  unint64_t v2 = sub_1ACAA322C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACAA2600(uint64_t a1)
{
  unint64_t v2 = sub_1ACAA322C();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *ContentID.init(from:)(void *a1)
{
  uint64_t result = sub_1ACAA2C64(a1);
  if (v1) {
    return (void *)v3;
  }
  return result;
}

uint64_t ContentID.encode(to:)(void *a1, void *a2, uint64_t a3, char a4)
{
  uint64_t v20 = a3;
  uint64_t v7 = sub_1ACE74F28();
  uint64_t v18 = *(void *)(v7 - 8);
  uint64_t v19 = v7;
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1670);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAA322C();
  sub_1ACE77C78();
  if (a4)
  {
    if (a4 == 1)
    {
      id v14 = objc_msgSend(a2, sel_URIRepresentation);
      sub_1ACE74E98();

      char v23 = 2;
      sub_1ACA57B98(&qword_1E99F0E98);
      uint64_t v15 = v19;
      sub_1ACE77788();
      sub_1ACA50D28(a2, v20, 1);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v15);
    }
    else
    {
      char v24 = 1;
      sub_1ACE77748();
    }
  }
  else
  {
    uint64_t v21 = a2;
    char v22 = 0;
    sub_1ACA80994();
    sub_1ACE77788();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void *sub_1ACAA2908@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1ACAA2C64(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1ACAA2938(void *a1)
{
  return ContentID.encode(to:)(a1, *(void **)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

unint64_t ContentID.debugDescription.getter(void *a1, uint64_t a2, char a3)
{
  if (!a3)
  {
    unint64_t v8 = 0xD000000000000011;
    AdamID.debugDescription.getter();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
LABEL_6:
    sub_1ACE762C8();
    return v8;
  }
  if (a3 != 1)
  {
    unint64_t v8 = 0xD000000000000010;
    sub_1ACE762C8();
    goto LABEL_6;
  }
  id v5 = a1;
  sub_1ACE77268();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0xD00000000000001ALL;
  id v6 = objc_msgSend(v5, sel_debugDescription);
  sub_1ACE761B8();

  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  sub_1ACA50D28(a1, a2, 1);
  return v8;
}

unint64_t sub_1ACAA2AE0()
{
  return ContentID.debugDescription.getter(*(void **)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t _s18PodcastsFoundation9ContentIDO2eeoiySbAC_ACtFZ_0(void *a1, uint64_t a2, char a3, void *a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if (a3 == 1)
    {
      if (a6 == 1)
      {
        sub_1ACAA3690();
        sub_1ACA50CB8(a1, a2, 1);
        sub_1ACA50CB8(a4, a5, 1);
        char v10 = sub_1ACE76F68();
        sub_1ACA50D28(a4, a5, 1);
        sub_1ACA50D28(a1, a2, 1);
        return v10 & 1;
      }
      return 0;
    }
    if (a6 != 2) {
      return 0;
    }
    if (a1 == a4 && a2 == a5)
    {
      return 1;
    }
    else
    {
      return sub_1ACE77848();
    }
  }
  else
  {
    return !a6 && a1 == a4;
  }
}

uint64_t sub_1ACAA2C18()
{
  unint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

void *sub_1ACAA2C64(void *a1)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v34 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (**)(char *, uint64_t))((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1698);
  unint64_t v9 = *(void (***)(char *, uint64_t))(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v36 = a1;
  unint64_t v13 = __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1ACAA322C();
  id v14 = v35;
  sub_1ACE77C48();
  if (v14)
  {
    uint64_t v16 = v36;
  }
  else
  {
    uint64_t v15 = v9;
    char v37 = 0;
    sub_1ACA80CD4();
    sub_1ACE77638();
    if (v39 == 1)
    {
      LOBYTE(v38) = 2;
      sub_1ACA57B98(&qword_1E99F0ED0);
      uint64_t v18 = (uint64_t)v4;
      uint64_t v19 = v5;
      sub_1ACE77638();
      uint64_t v20 = v34;
      int v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v18, 1, v5);
      uint64_t v16 = v36;
      if (v21 == 1)
      {
        sub_1ACA7FA64(v18);
        LOBYTE(v38) = 1;
        uint64_t v22 = sub_1ACE775F8();
        if (v23)
        {
          unint64_t v13 = (void *)v22;
          v15[1](v11, v8);
        }
        else
        {
          uint64_t v35 = v15;
          uint64_t v29 = sub_1ACE77328();
          swift_allocError();
          uint64_t v30 = v11;
          uint64_t v32 = v31;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0EC8);
          uint64_t v34 = v8;
          void *v32 = &type metadata for ContentID;
          unint64_t v13 = __swift_project_boxed_opaque_existential_1(v16, v16[3]);
          sub_1ACE77C28();
          sub_1ACE77308();
          (*(void (**)(void *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v32, *MEMORY[0x1E4FBBA80], v29);
          swift_willThrow();
          v35[1](v30, v34);
        }
      }
      else
      {
        char v24 = *(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))(v20 + 32);
        uint64_t v35 = v7;
        v24(v7, v18, v19);
        Swift::String v25 = (void *)sub_1ACE5C2CC();
        uint64_t v33 = v11;
        unint64_t v26 = (void *)sub_1ACE74E18();
        id v38 = 0;
        unint64_t v13 = objc_msgSend(v25, sel_managedObjectIDForURI_error_, v26, &v38);

        if (v13)
        {
          unint64_t v27 = *(void (**)(void, uint64_t))(v34 + 8);
          id v28 = v38;
          v27(v35, v19);
        }
        else
        {
          unint64_t v13 = v38;
          sub_1ACE74D78();

          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v34 + 8))((char *)v35, v19);
        }
        v15[1](v33, v8);
      }
    }
    else
    {
      unint64_t v13 = v38;
      v9[1](v11, v8);
      uint64_t v16 = v36;
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  return v13;
}

unint64_t sub_1ACAA322C()
{
  unint64_t result = qword_1E99F1678;
  if (!qword_1E99F1678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1678);
  }
  return result;
}

unint64_t sub_1ACAA3284()
{
  unint64_t result = qword_1EB770198;
  if (!qword_1EB770198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770198);
  }
  return result;
}

void destroy for ContentID(uint64_t a1)
{
}

uint64_t _s18PodcastsFoundation9ContentIDOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1ACA50CB8(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ContentID(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1ACA50CB8(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1ACA50D28(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ContentID(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1ACA50D28(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryEntity(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryEntity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1ACAA3464(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1ACAA346C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ContentID()
{
  return &type metadata for ContentID;
}

unsigned char *storeEnumTagSinglePayload for ContentID.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAA3550);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentID.CodingKeys()
{
  return &type metadata for ContentID.CodingKeys;
}

unint64_t sub_1ACAA358C()
{
  unint64_t result = qword_1E99F1680;
  if (!qword_1E99F1680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1680);
  }
  return result;
}

unint64_t sub_1ACAA35E4()
{
  unint64_t result = qword_1E99F1688;
  if (!qword_1E99F1688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1688);
  }
  return result;
}

unint64_t sub_1ACAA363C()
{
  unint64_t result = qword_1E99F1690;
  if (!qword_1E99F1690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1690);
  }
  return result;
}

unint64_t sub_1ACAA3690()
{
  unint64_t result = qword_1EB768F68;
  if (!qword_1EB768F68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB768F68);
  }
  return result;
}

void AMSBagProtocol.createLocalSnapshot(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  _OWORD v7[4] = sub_1ACAA3908;
  v7[5] = v5;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  _OWORD v7[2] = sub_1ACAA3910;
  v7[3] = &block_descriptor_9;
  unsigned int v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_createSnapshotWithCompletion_, v6);
  _Block_release(v6);
}

void sub_1ACAA37B0(void *a1, id a2, void (*a3)(uint64_t, uint64_t))
{
  if (a1)
  {
    type metadata accessor for LocalSnapshotBag();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    id v6 = a1;
    a3(v5, 0);
    swift_release();
  }
  else
  {
    if (a2)
    {
      id v8 = a2;
    }
    else
    {
      unint64_t v9 = (void *)sub_1ACE76178();
      id v8 = (id)AMSError();
    }
    id v10 = a2;
    id v11 = v8;
    a3((uint64_t)v8, 1);
  }
}

uint64_t sub_1ACAA38D0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACAA3908(void *a1, void *a2)
{
  sub_1ACAA37B0(a1, a2, *(void (**)(uint64_t, uint64_t))(v2 + 16));
}

void sub_1ACAA3910(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1ACAA399C(uint64_t a1)
{
  id v2 = objc_msgSend(*(id *)(v1 + 16), sel_arrayForKey_, a1);
  id v3 = objc_msgSend(v2, sel_unsafeSnapshotSyncValue);

  if (!v3) {
    return 0;
  }
  sub_1ACAA3A54();
  sub_1ACE76688();
  if (swift_dynamicCast()) {
    return v5;
  }
  else {
    return 0;
  }
}

unint64_t sub_1ACAA3A54()
{
  unint64_t result = qword_1E99F16A0;
  if (!qword_1E99F16A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E99F16A0);
  }
  return result;
}

uint64_t sub_1ACAA3A94(uint64_t a1)
{
  id v2 = objc_msgSend(*(id *)(v1 + 16), sel_BOOLForKey_, a1);
  id v3 = objc_msgSend(v2, sel_unsafeSnapshotSyncValue);

  if (!v3) {
    return 2;
  }
  id v4 = objc_msgSend(v3, sel_BOOLValue);

  return (uint64_t)v4;
}

id sub_1ACAA3B14(uint64_t a1)
{
  id v2 = objc_msgSend(*(id *)(v1 + 16), sel_integerForKey_, a1);
  id v3 = objc_msgSend(v2, sel_unsafeSnapshotSyncValue);

  if (!v3) {
    return 0;
  }
  id v4 = objc_msgSend(v3, sel_integerValue);

  return v4;
}

uint64_t sub_1ACAA3B9C(uint64_t a1)
{
  id v2 = objc_msgSend(*(id *)(v1 + 16), sel_stringForKey_, a1);
  id v3 = objc_msgSend(v2, sel_unsafeSnapshotSyncValue);

  if (v3)
  {
    sub_1ACE761A8();
  }
  return 0;
}

uint64_t sub_1ACAA3C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  *(void *)&double v6 = MEMORY[0x1F4188790](v5 - 8).n128_u64[0];
  id v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(*(id *)(v2 + 16), sel_URLForKey_, a1, v6);
  id v10 = objc_msgSend(v9, sel_unsafeSnapshotSyncValue);

  uint64_t v11 = sub_1ACE74F28();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if (v10)
  {
    uint64_t v14 = *(void *)(v11 - 8);
    v18[0] = *(void *)(v12 + 56);
    v18[1] = v12 + 56;
    v13(v8, 1, 1, v11);
    sub_1ACAA3E14();
    sub_1ACE77598();

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v11) == 1)
    {
      uint64_t v15 = a2;
      uint64_t v16 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v8, v11);
      uint64_t v15 = a2;
      uint64_t v16 = 0;
    }
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18[0])(v15, v16, 1, v11);
  }
  else
  {
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v13)(a2, 1, 1, v11);
  }
}

unint64_t sub_1ACAA3E14()
{
  unint64_t result = qword_1EB76A210;
  if (!qword_1EB76A210)
  {
    sub_1ACE74F28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A210);
  }
  return result;
}

uint64_t LocalSnapshotBag.deinit()
{
  return v0;
}

uint64_t LocalSnapshotBag.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LocalSnapshotBag()
{
  return self;
}

uint64_t method lookup function for LocalSnapshotBag(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LocalSnapshotBag);
}

uint64_t dispatch thunk of LocalSnapshotBag.array<A>(forKey:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of LocalSnapshotBag.BOOL(forKey:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of LocalSnapshotBag.integer(forKey:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of LocalSnapshotBag.string(forKey:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of LocalSnapshotBag.url(forKey:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

double URLTaskAssetSource.init<A>(downloader:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, _OWORD *a4@<X8>)
{
  AssetURLSessionProtocol.eraseToAnySession()(a2, a3, (uint64_t (**)())&v8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  double result = *(double *)&v8;
  *a4 = v8;
  return result;
}

uint64_t URLTaskAssetSource.fetch(asset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v62 = a3;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v51);
  unint64_t v48 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F16A8);
  uint64_t v50 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v47 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F16B0);
  uint64_t v54 = *(void *)(v8 - 8);
  uint64_t v55 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v53 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F16B8);
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v58 = v10;
  MEMORY[0x1F4188790](v10);
  char v56 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F16C0);
  uint64_t v60 = *(void *)(v12 - 8);
  uint64_t v61 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  char v59 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a2;
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v18 = MEMORY[0x1F4188790](v13);
  uint64_t v19 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v44 = *v3;
  uint64_t v45 = v3[1];
  uint64_t v21 = a1;
  unsigned int v43 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v43((char *)&v43 - v20, a1, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D370);
  if (swift_dynamicCast())
  {
    uint64_t v23 = *((void *)&v64 + 1);
    uint64_t v22 = v65;
    __swift_project_boxed_opaque_existential_1(&v63, *((uint64_t *)&v64 + 1));
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v22 + 8))(v66, v23, v22);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v63);
  }
  else
  {
    uint64_t v65 = 0;
    long long v63 = 0u;
    long long v64 = 0u;
    sub_1ACA50E78((uint64_t)&v63, &qword_1EB7693C8);
    memset(v66, 0, sizeof(v66));
    uint64_t v67 = 0;
  }
  uint64_t v24 = *(void *)(v49 + 24);
  Swift::String v25 = *(void (**)(uint64_t, uint64_t))(v24 + 16);
  uint64_t v46 = v21;
  v25(v15, v24);
  unint64_t v26 = v47;
  sub_1ACE759C8();
  sub_1ACE74898();
  unint64_t v27 = v53;
  uint64_t v28 = v52;
  sub_1ACE75988();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v26, v28);
  v43(v19, v21, v15);
  unint64_t v29 = (*(unsigned __int8 *)(v16 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v30 = (char *)swift_allocObject();
  *((void *)v30 + 2) = v15;
  *((void *)v30 + 3) = v24;
  uint64_t v31 = v45;
  *((void *)v30 + 4) = v44;
  *((void *)v30 + 5) = v31;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v30[v29], v19, v15);
  swift_retain();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771D98);
  sub_1ACA51EA4(&qword_1E99F16C8, &qword_1E99F16B0);
  sub_1ACA51EA4(&qword_1EB771D90, &qword_1EB771D98);
  uint64_t v32 = v55;
  uint64_t v33 = v56;
  sub_1ACE75D88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v27, v32);
  sub_1ACA3AAD4((uint64_t)v66, (uint64_t)&v63, &qword_1EB772EA0);
  uint64_t v34 = swift_allocObject();
  sub_1ACAA5040((uint64_t)&v63, v34 + 16);
  sub_1ACA51EA4(&qword_1E99F16D0, &qword_1E99F16B8);
  uint64_t v35 = v58;
  uint64_t v36 = v59;
  sub_1ACE75B38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v33, v35);
  char v37 = sub_1ACAA50C4(v46, v15, v24);
  uint64_t v39 = v38;
  uint64_t v40 = (void *)swift_allocObject();
  uint64_t v40[2] = v15;
  v40[3] = v24;
  v40[4] = v37;
  void v40[5] = v39;
  swift_getAssociatedTypeWitness();
  sub_1ACA51EA4(&qword_1E99F16D8, &qword_1E99F16C0);
  uint64_t v41 = v61;
  sub_1ACE75C28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v36, v41);
  return sub_1ACA50E78((uint64_t)v66, &qword_1EB772EA0);
}

uint64_t sub_1ACAA4818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA3AAD4(a1, (uint64_t)v13, &qword_1EB7731B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
  {
    uint64_t v14 = sub_1ACE74898();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v13, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
    sub_1ACE74848();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    uint64_t v16 = sub_1ACE74898();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a2, 0, 1, v16);
  }
}

uint64_t sub_1ACAA4A58()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1ACAA4B1C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for AnyAssetBackgroundSession();
  uint64_t result = AnyAssetBackgroundSession.start(task:for:)();
  *a1 = result;
  return result;
}

uint64_t sub_1ACAA4BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_1ACE74F28();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DownloadPhase();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACAA5464(a1, (uint64_t)v13);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1ACA3AAD4(a2, (uint64_t)v33, &qword_1EB772EA0);
    uint64_t v23 = v34;
    if (v34)
    {
      uint64_t v24 = v35;
      __swift_project_boxed_opaque_existential_1(v33, v34);
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      sub_1ACE76948();
      sub_1ACE762C8();
      (*(void (**)(const char *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v24 + 16))("Download Update", 15, 2, v31, v32, v23, v24);
      swift_bridgeObjectRelease();
LABEL_10:
      uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
LABEL_12:
      uint64_t v18 = 0;
      unint64_t v20 = 0xF000000000000000;
      goto LABEL_18;
    }
LABEL_11:
    uint64_t result = sub_1ACA50E78((uint64_t)v33, &qword_1EB772EA0);
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1ACA3AAD4(a2, (uint64_t)v33, &qword_1EB772EA0);
    uint64_t v25 = v34;
    if (v34)
    {
      uint64_t v26 = v35;
      __swift_project_boxed_opaque_existential_1(v33, v34);
      Trace.emit(event:)((uint64_t)"Download Pending", 16, 2, v25, v26);
      goto LABEL_10;
    }
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
  id v15 = objc_msgSend(self, sel_defaultManager);
  sub_1ACE74EC8();
  uint64_t v16 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v15, sel_contentsAtPath_, v16);

  if (!v17)
  {
    type metadata accessor for FileError();
    sub_1ACAA54C8();
    swift_allocError();
    uint64_t v29 = v28;
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v28, v10, v7);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 2, v7);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v18 = sub_1ACE74F88();
  unint64_t v20 = v19;

  sub_1ACA3AAD4(a2, (uint64_t)v33, &qword_1EB772EA0);
  uint64_t v21 = v34;
  if (v34)
  {
    uint64_t v22 = v35;
    __swift_project_boxed_opaque_existential_1(v33, v34);
    Trace.emit(event:)((uint64_t)"Download Complete", 17, 2, v21, v22);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  }
  else
  {
    sub_1ACA50E78((uint64_t)v33, &qword_1EB772EA0);
  }
  sub_1ACCA0F8C(512);
  if (v3) {

  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
LABEL_18:
  *a3 = v18;
  a3[1] = v20;
  return result;
}

uint64_t sub_1ACAA5000()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  }
  return swift_deallocObject();
}

uint64_t sub_1ACAA5040(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACAA50A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACAA4BB4(a1, v2 + 16, a2);
}

uint64_t (*sub_1ACAA50C4(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_1ACAA53F4;
}

uint64_t sub_1ACAA51E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACAA521C(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 32))(*a1, a1[1]);
}

uint64_t sub_1ACAA524C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for URLTaskAssetSource()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACAA52AC()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F16C0);
  swift_getAssociatedTypeWitness();
  sub_1ACA51EA4(&qword_1E99F16D8, &qword_1E99F16C0);
  sub_1ACE756F8();
  return swift_getWitnessTable();
}

uint64_t sub_1ACAA536C()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1ACAA53F4()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(v0 + 24) + 8) + 40))();
}

uint64_t sub_1ACAA5464(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DownloadPhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ACAA54C8()
{
  unint64_t result = qword_1E99F47B0;
  if (!qword_1E99F47B0)
  {
    type metadata accessor for FileError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F47B0);
  }
  return result;
}

id AssetProcessingStep.subscribe(on:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v13 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, a2);
  uint64_t v9 = type metadata accessor for SubscribeOnAssetProcessingStep();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&a3[*(int *)(v9 + 36)], v8, a2);
  uint64_t v10 = v13;
  *(void *)a3 = v13;
  return v10;
}

uint64_t SubscribeOnAssetProcessingStep.init(upstream:subscribeQueue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for SubscribeOnAssetProcessingStep();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(&a4[*(int *)(v8 + 36)], a1, a3);
  *(void *)a4 = a2;
  return result;
}

uint64_t type metadata accessor for SubscribeOnAssetProcessingStep()
{
  return __swift_instantiateGenericMetadata();
}

id SubscribeOnAssetProcessingStep.subscribeQueue.getter()
{
  return *v0;
}

uint64_t SubscribeOnAssetProcessingStep.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t SubscribeOnAssetProcessingStep.metadata.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 40))(*(void *)(a1 + 16));
}

uint64_t SubscribeOnAssetProcessingStep.publisher.getter(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v32 = a1;
  uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
  uint64_t v37 = *(AssociatedTypeWitness - 1);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = (void *)sub_1ACA51E1C();
  uint64_t v36 = v11;
  uint64_t AssociatedConformanceWitness = (void *)swift_getAssociatedConformanceWitness();
  uint64_t v35 = AssociatedConformanceWitness;
  uint64_t v34 = (void *)sub_1ACA93A6C();
  v41[0] = AssociatedTypeWitness;
  v41[1] = v11;
  void v41[2] = AssociatedConformanceWitness;
  v41[3] = v34;
  uint64_t v13 = sub_1ACE755C8();
  uint64_t v40 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v33 = (char *)&v32 - v14;
  swift_getWitnessTable();
  uint64_t v15 = type metadata accessor for EmitLifecycle();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v38 = v15;
  uint64_t v39 = v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v32 - v17;
  (*(void (**)(uint64_t, uint64_t))(v6 + 48))(v7, v6);
  unint64_t v19 = *v1;
  v41[0] = v19;
  uint64_t v20 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v5, 1, 1, v20);
  id v21 = v19;
  uint64_t v22 = v33;
  sub_1ACE75CF8();
  sub_1ACA50E78((uint64_t)v5, &qword_1EB7669C8);

  (*(void (**)(char *, void *))(v37 + 8))(v10, AssociatedTypeWitness);
  uint64_t v23 = v32;
  uint64_t WitnessTable = swift_getWitnessTable();
  AssetProcessingStep.metadataTrace.getter(v23, WitnessTable, (uint64_t)v41);
  uint64_t v25 = sub_1ACE76D38();
  unint64_t v27 = v26;
  char v28 = static EmitLifecycle.defaultVerbosity.getter();
  Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)((uint64_t)v41, (uint64_t)"SubscribeOnHop", 14, 2, 0, v25, v27, v28 & 1, (uint64_t)v18, v13);
  swift_bridgeObjectRelease();
  sub_1ACA50E78((uint64_t)v41, &qword_1EB772EA0);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v13);
  uint64_t v29 = v38;
  swift_getWitnessTable();
  uint64_t v30 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v29);
  return v30;
}

uint64_t sub_1ACAA5BB0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1ACAA5BCC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACAA5BEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = SubscribeOnAssetProcessingStep.publisher.getter(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1ACAA5C14()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void **sub_1ACAA5CB4(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = (char *)*a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (void **)&v9[(v6 & 0xF8 ^ 0x1F8) & (v6 + 16)];
    swift_retain();
  }
  else
  {
    uint64_t v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    uint64_t v15 = v9;
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_1ACAA5DB8(id *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = ((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void **sub_1ACAA5E2C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  id v11 = v4;
  v7(v9, v10, v5);
  return a1;
}

void **sub_1ACAA5EBC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

void *sub_1ACAA5F48(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void **sub_1ACAA5FB8(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1ACAA6040(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1ACAA61E0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 8) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1ACAA643CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
          uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t MTPodcast.episodeSortType.getter()
{
  if (!objc_msgSend(v0, sel_isSerialShowTypeInFeed)) {
    return (uint64_t)objc_msgSend(v0, sel_sortAscending);
  }
  id v1 = objc_msgSend(v0, sel_showTypeSetting);
  if ((unint64_t)v1 >= 5) {
    return 4;
  }
  else {
    return (0x504040604uLL >> (8 * v1));
  }
}

double FeedManagerLocalConfiguration.timeoutIntervalForResource.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_timeoutIntervalForResource);
}

uint64_t FeedManagerLocalConfiguration.concurrentDeltaUpdateLimit.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentDeltaUpdateLimit);
}

uint64_t FeedManagerLocalConfiguration.concurrentBootstrapUpdateLimit.getter()
{
  return *(void *)(v0
                   + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentBootstrapUpdateLimit);
}

uint64_t FeedManagerLocalConfiguration.concurrentRSSUpdateLimit.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentRSSUpdateLimit);
}

uint64_t FeedManagerLocalConfiguration.deltaNumberOfEpisodesToRequestPerPage.getter()
{
  return *(void *)(v0
                   + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_deltaNumberOfEpisodesToRequestPerPage);
}

uint64_t FeedManagerLocalConfiguration.useBackgroundFetchForFeedDownloads.getter()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_useBackgroundFetchForFeedDownloads);
}

uint64_t FeedManagerLocalConfiguration.keepsFeedFileInTempDirAfterDownload.getter()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_keepsFeedFileInTempDirAfterDownload);
}

uint64_t FeedManagerLocalConfiguration.usesCleanEpisodeTitles.getter()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_usesCleanEpisodeTitles);
}

id sub_1ACAA65CC()
{
  uint64_t v0 = (objc_class *)type metadata accessor for FeedManagerLocalConfiguration();
  id v1 = objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_timeoutIntervalForResource] = 0x4072C00000000000;
  v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration__workQueueConcurrent] = 1;
  v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_useBackgroundFetchForFeedDownloads] = 0;
  v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_keepsFeedFileInTempDirAfterDownload] = 0;
  v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration__supportsBatchInsertion] = 0;
  v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_usesCleanEpisodeTitles] = 1;
  *(void *)&v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentDeltaUpdateLimit] = 3;
  *(void *)&v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentBootstrapUpdateLimit] = 2;
  *(void *)&v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentRSSUpdateLimit] = 3;
  uint64_t v2 = &v1[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_deltaNumberOfEpisodesToRequestPerPage];
  *(void *)uint64_t v2 = 0;
  v2[8] = 1;
  v4.id receiver = v1;
  v4.Class super_class = v0;
  id result = objc_msgSendSuper2(&v4, sel_init);
  qword_1EB76CBB0 = (uint64_t)result;
  return result;
}

void sub_1ACAA66AC()
{
  if (qword_1EB76CBB8 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB76CBB0;
  id v1 = sub_1ACAA6AF8((uint64_t)v0, 0, 1, 2, 1, 2, 1, 2, 0, 1, 0, 1, 0, 1, 0, 1);

  qword_1E99F16E0 = (uint64_t)v1;
}

id static FeedManagerLocalConfiguration.platformSpecificConfiguration.getter()
{
  if (objc_msgSend(self, sel_isRunningOnHomepod))
  {
    if (qword_1E99EFE70 != -1) {
      swift_once();
    }
    id v0 = &qword_1E99F16E0;
  }
  else
  {
    if (qword_1EB76CBB8 != -1) {
      swift_once();
    }
    id v0 = &qword_1EB76CBB0;
  }
  id v1 = (void *)*v0;
  return v1;
}

id sub_1ACAA68D4(char a1, char a2, char a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, char a11)
{
  uint64_t v12 = a10;
  *(double *)&v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_timeoutIntervalForResource] = a9;
  v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration__workQueueConcurrent] = a1;
  v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_useBackgroundFetchForFeedDownloads] = a2;
  v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_keepsFeedFileInTempDirAfterDownload] = a3;
  v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration__supportsBatchInsertion] = a4;
  v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_usesCleanEpisodeTitles] = a5;
  *(void *)&v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentDeltaUpdateLimit] = a6;
  *(void *)&v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentBootstrapUpdateLimit] = a7;
  *(void *)&v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentRSSUpdateLimit] = a8;
  if ((a11 & 1) == 0 && a10 == 300) {
    uint64_t v12 = 0;
  }
  int v13 = &v11[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_deltaNumberOfEpisodesToRequestPerPage];
  *(void *)int v13 = v12;
  v13[8] = a11 & 1 | (a10 == 300);
  v15.id receiver = v11;
  v15.Class super_class = (Class)type metadata accessor for FeedManagerLocalConfiguration();
  return objc_msgSendSuper2(&v15, sel_init);
}

id FeedManagerLocalConfiguration.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void FeedManagerLocalConfiguration.init()()
{
}

id FeedManagerLocalConfiguration.__deallocating_deinit()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for FeedManagerLocalConfiguration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FeedManagerLocalConfiguration()
{
  return self;
}

uint64_t FeedManagerLocalConfiguration.supportsBatchInsertion.getter()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration__supportsBatchInsertion);
}

uint64_t FeedManagerLocalConfiguration.workQueueConcurrent.getter()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration__workQueueConcurrent);
}

uint64_t method lookup function for FeedManagerLocalConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedManagerLocalConfiguration);
}

id sub_1ACAA6AF8(uint64_t a1, uint64_t a2, char a3, char a4, char a5, char a6, char a7, char a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16)
{
  if (a3) {
    a2 = *(void *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_timeoutIntervalForResource);
  }
  if (a4 == 2) {
    char v17 = *(unsigned char *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration__workQueueConcurrent);
  }
  else {
    char v17 = a4 & 1;
  }
  if (a5 == 2) {
    char v18 = *(unsigned char *)(a1
  }
                   + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_useBackgroundFetchForFeedDownloads);
  else {
    char v18 = a5 & 1;
  }
  if (a6 == 2) {
    char v19 = *(unsigned char *)(a1
  }
                   + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_keepsFeedFileInTempDirAfterDownload);
  else {
    char v19 = a6 & 1;
  }
  if (a7 == 2) {
    char v20 = *(unsigned char *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration__supportsBatchInsertion);
  }
  else {
    char v20 = a7 & 1;
  }
  if (a8 == 2) {
    char v22 = *(unsigned char *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_usesCleanEpisodeTitles);
  }
  else {
    char v22 = a8 & 1;
  }
  if (a10) {
    a9 = *(void *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentDeltaUpdateLimit);
  }
  if ((a12 & 1) == 0)
  {
    char v25 = a16;
    if ((a14 & 1) == 0) {
      goto LABEL_23;
    }
LABEL_26:
    a13 = *(void *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentRSSUpdateLimit);
    if ((v25 & 1) == 0) {
      goto LABEL_24;
    }
LABEL_27:
    a15 = *(void *)(a1
                    + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_deltaNumberOfEpisodesToRequestPerPage);
    char v26 = *(unsigned char *)(a1
                   + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_deltaNumberOfEpisodesToRequestPerPage
                   + 8);
    goto LABEL_28;
  }
  a11 = *(void *)(a1
                  + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentBootstrapUpdateLimit);
  char v25 = a16;
  if (a14) {
    goto LABEL_26;
  }
LABEL_23:
  if (v25) {
    goto LABEL_27;
  }
LABEL_24:
  char v26 = 0;
LABEL_28:
  id v28 = objc_allocWithZone((Class)type metadata accessor for FeedManagerLocalConfiguration());
  return sub_1ACAA68D4(v17, v18, v19, v20, v22, a9, a11, a13, *(double *)&a2, a15, v26);
}

id FeedURLComposer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

PodcastsFoundation::FeedURLComposerError_optional __swiftcall FeedURLComposerError.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *id v1 = v2;
  return (PodcastsFoundation::FeedURLComposerError_optional)rawValue;
}

uint64_t FeedURLComposerError.rawValue.getter()
{
  return *v0;
}

PodcastsFoundation::FeedURLComposerError_optional sub_1ACAA6D08(Swift::Int *a1)
{
  return FeedURLComposerError.init(rawValue:)(*a1);
}

uint64_t sub_1ACAA6D10(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1ACAA7688();
  unint64_t v5 = sub_1ACA339A4();
  return MEMORY[0x1F4185E20](a1, a2, v4, v5);
}

uint64_t static FeedURLComposer.errorURLDoesNotExist.getter()
{
  return 0;
}

uint64_t static FeedURLComposer.errorURLInvalid.getter()
{
  return 1;
}

uint64_t static FeedURLComposer.errorCannotGenerateInternalURL.getter()
{
  return 2;
}

uint64_t sub_1ACAA6D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A930);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  int v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(int *)(v11 + 56);
  sub_1ACA615AC(a1, (uint64_t)v13);
  *(void *)&v13[v14] = a2;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
  {
    if (a2)
    {
      return sub_1ACAA7250(a2, a3);
    }
    else
    {
      sub_1ACAA7004();
      swift_allocError();
      unsigned char *v20 = 0;
      return swift_willThrow();
    }
  }
  else
  {
    uint64_t v22 = a3;
    unsigned int v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v16(v9, v13, v6);
    char v17 = self;
    sub_1ACE74DD8();
    char v18 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    LODWORD(v17) = objc_msgSend(v17, sel_isSupportedUrlString_, v18);

    if (v17)
    {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(v22, v9, v6);
    }
    else
    {
      sub_1ACAA7004();
      swift_allocError();
      *char v19 = 1;
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
}

unint64_t sub_1ACAA7004()
{
  unint64_t result = qword_1E99F1738;
  if (!qword_1E99F1738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1738);
  }
  return result;
}

uint64_t sub_1ACAA7250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    goto LABEL_4;
  }
  v11[0] = 0x6C616E7265746E69;
  v11[1] = 0xEB000000002F2F3ALL;
  v11[3] = a1;
  sub_1ACE777C8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE74EF8();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1ACE74F28();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1ACA7FA64((uint64_t)v6);
LABEL_4:
    sub_1ACAA7004();
    swift_allocError();
    *uint64_t v9 = 2;
    return swift_willThrow();
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
}

id FeedURLComposer.init()()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for FeedURLComposer();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for FeedURLComposer()
{
  return self;
}

id FeedURLComposer.__deallocating_deinit()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for FeedURLComposer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1ACAA74D0()
{
  unint64_t result = qword_1E99F1740;
  if (!qword_1E99F1740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1740);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedURLComposerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAA75F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedURLComposerError()
{
  return &type metadata for FeedURLComposerError;
}

uint64_t method lookup function for FeedURLComposer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedURLComposer);
}

uint64_t dispatch thunk of FeedURLComposer.feedURL(forOptionalURL:adamID:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

unint64_t sub_1ACAA7688()
{
  unint64_t result = qword_1E99F1748;
  if (!qword_1E99F1748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1748);
  }
  return result;
}

uint64_t AssetBackgroundSession.descriptor.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

id AssetBackgroundSession.delegate.getter(uint64_t a1)
{
  return *(id *)(v1 + *(int *)(a1 + 44));
}

uint64_t AssetBackgroundSession.session.getter()
{
  return swift_retain();
}

uint64_t AssetBackgroundSession.cache.getter()
{
  return swift_retain();
}

uint64_t AssetBackgroundSession.init(descriptor:jobLibrary:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v50 = a1;
  uint64_t v55 = a6;
  uint64_t v51 = *(void *)(a3 - 8);
  uint64_t v48 = *(void *)(v51 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](a6);
  int v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v53 = v14 + 16;
  uint64_t v54 = v15;
  ((void (*)(uint64_t, uint64_t))v15)(v11, a1);
  uint64_t v52 = AssetBackgroundSessionDescriptor.createJobCache(libraryPath:)(a2);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v19 = type metadata accessor for DownloadTaskIdentifier();
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  uint64_t v56 = v19;
  uint64_t v57 = AssociatedTypeWitness;
  uint64_t v58 = &protocol witness table for DownloadTaskIdentifier<A>;
  uint64_t v59 = v20;
  uint64_t v60 = MEMORY[0x1E4FBB1B0];
  uint64_t v21 = type metadata accessor for DiskAssetCache();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  uint64_t v56 = v21;
  uint64_t v57 = v22;
  uint64_t v58 = (_UNKNOWN **)v23;
  uint64_t v59 = a5;
  uint64_t v60 = AssociatedConformanceWitness;
  uint64_t v61 = v18;
  type metadata accessor for AssetBackgroundDelegate();
  uint64_t v56 = v52;
  uint64_t v44 = v13;
  uint64_t v24 = v50;
  v54(v13, v50, a3);
  uint64_t v25 = v51;
  uint64_t v26 = *(unsigned __int8 *)(v51 + 80);
  uint64_t v45 = ((v26 + 40) & ~v26) + v48;
  uint64_t v27 = (v26 + 40) & ~v26;
  uint64_t v47 = v27;
  uint64_t v48 = v26 | 7;
  id v28 = (char *)swift_allocObject();
  *((void *)v28 + 2) = a3;
  *((void *)v28 + 3) = a4;
  *((void *)v28 + 4) = a5;
  uint64_t v43 = a5;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  v46(&v28[v27], v13, a3);
  swift_retain();
  id v29 = sub_1ACC8E930((uint64_t)&v56, (uint64_t)sub_1ACAA7C84, (uint64_t)v28);
  swift_release();
  swift_release();
  uint64_t v30 = (int *)type metadata accessor for AssetBackgroundSession();
  *(void *)(v55 + v30[11]) = v29;
  uint64_t v31 = self;
  id v42 = v29;
  uint64_t v32 = v24;
  AssetBackgroundSessionDescriptor.name.getter();
  uint64_t v33 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(v31, sel_backgroundSessionConfigurationWithIdentifier_, v33);

  uint64_t v35 = v44;
  v54(v44, v32, a3);
  unint64_t v36 = (v45 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v37 = (char *)swift_allocObject();
  *((void *)v37 + 2) = a3;
  *((void *)v37 + 3) = a4;
  *((void *)v37 + 4) = v43;
  v46(&v37[v47], v35, a3);
  *(void *)&v37[v36] = v34;
  *(void *)&v37[(v36 + 15) & 0xFFFFFFFFFFFFFFF8] = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E008);
  swift_allocObject();
  uint64_t v38 = sub_1ACE75A18();
  uint64_t v39 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v49, v39);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8))(v50, a3);
  uint64_t v41 = v55;
  *(void *)(v55 + v30[12]) = v38;
  *(void *)(v41 + v30[13]) = v52;
  return result;
}

uint64_t sub_1ACAA7BFC()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1ACAA7C84(uint64_t a1, uint64_t a2)
{
  return sub_1ACAA7CD4(a2, a1, (uint64_t)v2+ ((*(unsigned __int8 *)(*(void *)(v2[2] - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2[2] - 8) + 80)), v2[2], v2[3], v2[4]);
}

uint64_t sub_1ACAA7CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v113 = a6;
  uint64_t v95 = a3;
  uint64_t v98 = a2;
  uint64_t v108 = a1;
  uint64_t v107 = sub_1ACE74F28();
  uint64_t v102 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  uint64_t v100 = v8;
  uint64_t v112 = (char *)v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v101 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v94 = *(void *)(v101 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v109 = (char *)v76 - v11;
  uint64_t v99 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v88 = v12;
  unint64_t v106 = (char *)v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = a5;
  uint64_t v111 = a4;
  swift_getAssociatedConformanceWitness();
  uint64_t v110 = AssociatedTypeWitness;
  swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_1ACE757F8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v82 = v13;
  uint64_t v81 = WitnessTable;
  uint64_t v15 = sub_1ACE755E8();
  uint64_t v96 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v105 = (char *)v76 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7716D8);
  uint64_t v18 = sub_1ACA51EA4(&qword_1EB7716D0, &qword_1EB7716D8);
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v86 = v17;
  uint64_t v115 = v17;
  uint64_t v116 = v15;
  uint64_t v97 = v15;
  uint64_t v85 = v18;
  uint64_t v117 = v18;
  uint64_t v118 = v19;
  uint64_t v84 = v19;
  uint64_t v20 = sub_1ACE75708();
  uint64_t v92 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  unint64_t v89 = (char *)v76 - v21;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v93 = v20;
  uint64_t v83 = v22;
  uint64_t v91 = sub_1ACE755E8();
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x1F4188790](v91);
  uint64_t v87 = (char *)v76 - v23;
  uint64_t v24 = sub_1ACE753F8();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  id v28 = (char *)v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)v76 - v29;
  if (qword_1EB771BE8 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1ACE75438();
  __swift_project_value_buffer(v31, (uint64_t)qword_1EB771BD0);
  sub_1ACE75428();
  sub_1ACE753C8();
  uint64_t v32 = sub_1ACE75428();
  os_signpost_type_t v33 = sub_1ACE76E18();
  if (sub_1ACE76FA8())
  {
    unint64_t v34 = (v25 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v114 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
    v114(v28, v30, v24);
    uint64_t v35 = v28;
    unint64_t v36 = v30;
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v37 = 0;
    os_signpost_id_t v38 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v32, v33, v38, "backgroundStash", "Start background stash", v37, 2u);
    uint64_t v39 = v37;
    uint64_t v30 = v36;
    id v28 = v35;
    MEMORY[0x1AD11B340](v39, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v35, v24);
  }
  else
  {

    uint64_t v114 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
    unint64_t v34 = (v25 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  v114(v28, v30, v24);
  sub_1ACE75478();
  swift_allocObject();
  uint64_t v80 = sub_1ACE75468();
  uint64_t v40 = sub_1ACE75428();
  os_signpost_type_t v41 = sub_1ACE76E28();
  if (sub_1ACE76FA8())
  {
    v114(v28, v30, v24);
    id v42 = v30;
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v43 = 0;
    os_signpost_id_t v44 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v40, v41, v44, "Start loading from source", "", v43, 2u);
    uint64_t v45 = v43;
    uint64_t v30 = v42;
    MEMORY[0x1AD11B340](v45, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
  }
  else
  {
  }
  uint64_t v46 = v24;
  uint64_t v47 = v25;
  v76[1] = v34;
  uint64_t v48 = v104;
  uint64_t v49 = v95;
  uint64_t v50 = v111;
  uint64_t v115 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v104 + 56))(v108, v111, v104);
  uint64_t v51 = v114;
  v114(v28, v30, v46);
  uint64_t v52 = *(unsigned __int8 *)(v47 + 80);
  uint64_t v53 = (char *)swift_allocObject();
  uint64_t v79 = v47;
  *((void *)v53 + 2) = v50;
  *((void *)v53 + 3) = v48;
  *((void *)v53 + 4) = v113;
  uint64_t v54 = *(void (**)(char *, void, uint64_t))(v47 + 32);
  v76[2] = v47 + 32;
  uint64_t v77 = v54;
  v54(&v53[(v52 + 40) & ~v52], v28, v46);
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  uint64_t v55 = v46;
  uint64_t v56 = v99;
  (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v106, v49, v50);
  uint64_t v57 = v101;
  (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v109, v98, v110);
  uint64_t v78 = v30;
  uint64_t v58 = v28;
  v76[0] = v28;
  uint64_t v59 = v102;
  (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v112, v108, v107);
  uint64_t v60 = v30;
  uint64_t v61 = v55;
  v51(v58, v60, v55);
  unint64_t v62 = (*(unsigned __int8 *)(v56 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  unint64_t v63 = (v88 + v62 + *(unsigned __int8 *)(v57 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  unint64_t v64 = (v94 + *(unsigned __int8 *)(v59 + 80) + v63) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v65 = (v100 + v52 + v64) & ~v52;
  char v66 = (char *)swift_allocObject();
  uint64_t v67 = v104;
  *((void *)v66 + 2) = v111;
  *((void *)v66 + 3) = v67;
  *((void *)v66 + 4) = v113;
  (*(void (**)(char *, char *))(v56 + 32))(&v66[v62], v106);
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(&v66[v63], v109, v110);
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v66[v64], v112, v107);
  v77(&v66[v65], v76[0], v61);
  sub_1ACE757D8();
  uint64_t v68 = v89;
  uint64_t v69 = v97;
  uint64_t v70 = v105;
  sub_1ACE75D98();
  swift_release();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v70, v69);
  swift_retain();
  uint64_t v71 = v93;
  uint64_t v72 = v87;
  sub_1ACE75AF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v68, v71);
  uint64_t v73 = v91;
  swift_getWitnessTable();
  uint64_t v74 = sub_1ACE75AD8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v72, v73);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v61);
  return v74;
}

uint64_t sub_1ACAA88E4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v38 = a7;
  uint64_t v39 = a4;
  uint64_t v37 = *MEMORY[0x1E4FBC8C8] & *a5;
  uint64_t v12 = sub_1ACE75DC8();
  uint64_t v44 = *(void *)(v12 - 8);
  uint64_t v45 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v43 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1ACE75E48();
  uint64_t v41 = *(void *)(v14 - 8);
  uint64_t v42 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v40 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a6 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  uint64_t v21 = qword_1EB76E130;
  swift_retain();
  if (v21 != -1) {
    swift_once();
  }
  v36[1] = qword_1EB76E120;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), a3, a6);
  unint64_t v22 = (*(unsigned __int8 *)(v17 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v23 = (v18 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = (char *)swift_allocObject();
  uint64_t v26 = v38;
  *((void *)v25 + 2) = a6;
  *((void *)v25 + 3) = v26;
  *((void *)v25 + 4) = *(void *)(v37 + 104);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v25[v22], v19, a6);
  uint64_t v27 = v39;
  *(void *)&v25[v23] = v39;
  *(void *)&v25[v24] = a5;
  id v28 = (uint64_t (**)(uint64_t, char))&v25[(v24 + 15) & 0xFFFFFFFFFFFFFFF8];
  *id v28 = sub_1ACAAC7AC;
  v28[1] = (uint64_t (*)(uint64_t, char))v20;
  aBlock[4] = sub_1ACAAC880;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_10;
  uint64_t v29 = _Block_copy(aBlock);
  id v30 = v27;
  uint64_t v31 = a5;
  uint64_t v32 = v40;
  sub_1ACE75E08();
  uint64_t v46 = MEMORY[0x1E4FBC860];
  sub_1ACAAC96C((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  os_signpost_type_t v33 = v43;
  uint64_t v34 = v45;
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v32, v33, v29);
  _Block_release(v29);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v33, v34);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v42);
  return swift_release();
}

uint64_t AssetBackgroundSession.start(task:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a1;
  uint64_t v62 = sub_1ACE74898();
  uint64_t v54 = *(void *)(v62 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v62);
  uint64_t v56 = v7;
  uint64_t v68 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = a3;
  uint64_t v8 = *(void *)(a3 - 8);
  a3 -= 8;
  uint64_t v52 = v8;
  MEMORY[0x1F4188790](v6);
  uint64_t v49 = v9;
  uint64_t v67 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a3 + 32);
  uint64_t v47 = *(void *)(a3 + 24);
  uint64_t v48 = v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v64 = (char *)v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46[2] = v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v46 - v18;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1750);
  uint64_t v58 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  char v66 = (char *)v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1758);
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v55 = (char *)v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(int *)(a3 + 56);
  uint64_t v50 = v3;
  uint64_t v51 = v15;
  uint64_t v23 = *(void *)(v3 + v22);
  unint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v57 = a2;
  v46[0] = v24;
  v46[1] = v15 + 16;
  v24(v19, a2, AssociatedTypeWitness);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D370);
  uint64_t v65 = AssociatedTypeWitness;
  if (swift_dynamicCast())
  {
    uint64_t v26 = *((void *)&v76 + 1);
    uint64_t v25 = v77;
    __swift_project_boxed_opaque_existential_1(&v75, *((uint64_t *)&v76 + 1));
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v25 + 8))(v74, v26, v25);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v75);
  }
  else
  {
    *(void *)&long long v77 = 0;
    long long v75 = 0u;
    long long v76 = 0u;
    sub_1ACA50E78((uint64_t)&v75, &qword_1EB7693C8);
    memset(v74, 0, 40);
  }
  sub_1ACAAAFAC((uint64_t)v74, (uint64_t)v73);
  *(void *)&v69[0] = v23;
  sub_1ACAAAFAC((uint64_t)v73, (uint64_t)v69 + 8);
  *(void *)&long long v70 = "AWAIT-SESSION";
  *((void *)&v70 + 1) = 13;
  LOBYTE(v71) = 2;
  LOBYTE(v72[2]) = 0;
  swift_retain();
  sub_1ACA50E78((uint64_t)v73, &qword_1EB772EA0);
  v72[0] = 0;
  v72[1] = 0xE000000000000000;
  BYTE1(v72[2]) = 0;
  long long v77 = v69[2];
  long long v78 = v70;
  long long v75 = v69[0];
  long long v76 = v69[1];
  v79[0] = v71;
  *(_OWORD *)((char *)v79 + 10) = *(_OWORD *)((char *)v72 + 2);
  sub_1ACA50E78((uint64_t)v74, &qword_1EB772EA0);
  swift_release();
  if (qword_1EB76E130 != -1) {
    swift_once();
  }
  uint64_t v27 = (void *)qword_1EB76E120;
  *(void *)&v69[0] = qword_1EB76E120;
  uint64_t v28 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v12, 1, 1, v28);
  id v29 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1760);
  sub_1ACA51E1C();
  sub_1ACA51EA4(&qword_1E99F1768, &qword_1E99F1760);
  sub_1ACAAC96C((unint64_t *)&qword_1EB7669D0, (void (*)(uint64_t))sub_1ACA51E1C);
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v12, &qword_1EB7669C8);

  sub_1ACA50E78((uint64_t)&v75, &qword_1E99F1760);
  uint64_t v30 = v52;
  uint64_t v31 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v67, v50, v63);
  uint64_t v32 = v54;
  uint64_t v33 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v68, v53, v62);
  ((void (*)(char *, uint64_t, uint64_t))v46[0])(v64, v57, v65);
  unint64_t v34 = (*(unsigned __int8 *)(v30 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  unint64_t v35 = (v49 + *(unsigned __int8 *)(v32 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v36 = v51;
  unint64_t v37 = (v56 + v35 + *(unsigned __int8 *)(v51 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v38 = (char *)swift_allocObject();
  uint64_t v39 = v48;
  *((void *)v38 + 2) = v47;
  *((void *)v38 + 3) = v39;
  *((void *)v38 + 4) = *(void *)(v31 + 32);
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v38[v34], v67, v31);
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(&v38[v35], v68, v33);
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v38[v37], v64, v65);
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1770);
  sub_1ACA51EA4(&qword_1E99F1778, &qword_1E99F1750);
  sub_1ACA51EA4(&qword_1E99F1780, &qword_1E99F1770);
  uint64_t v40 = v55;
  uint64_t v41 = v60;
  uint64_t v42 = v66;
  sub_1ACE75D88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v42, v41);
  sub_1ACA51EA4(&qword_1E99F1788, &qword_1E99F1758);
  uint64_t v43 = v61;
  uint64_t v44 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v40, v43);
  return v44;
}

uint64_t sub_1ACAA95AC@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v42 = a7;
  uint64_t v43 = a4;
  uint64_t v40 = a3;
  uint64_t v49 = a8;
  uint64_t v50 = a5;
  uint64_t v51 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v39 = (char *)&v39 - v12;
  uint64_t v14 = type metadata accessor for AssetBackgroundSession();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1790);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v47 = v19;
  uint64_t v48 = v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v44 = a2;
  uint64_t v45 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *a1;
  uint64_t v46 = *(int *)(v14 + 44);
  uint64_t v52 = AssetBackgroundDelegate.start(request:using:)(v40, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a2, v14);
  uint64_t v23 = v13;
  uint64_t v24 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v23, v43, AssociatedTypeWitness);
  unint64_t v25 = (*(unsigned __int8 *)(v15 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v26 = (v16 + v25 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v27 = (v11 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = (char *)swift_allocObject();
  uint64_t v29 = v51;
  *((void *)v28 + 2) = v50;
  *((void *)v28 + 3) = v29;
  *((void *)v28 + 4) = v42;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v28[v25], v18, v14);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v28[v26], v39, v24);
  *(void *)&v28[v27] = v22;
  id v30 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE08);
  sub_1ACA51EA4(&qword_1EB76DE00, &qword_1EB76DE08);
  uint64_t v31 = v45;
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  uint64_t v32 = *(void **)(v44 + v46);
  uint64_t v33 = (void *)swift_allocObject();
  uint64_t v34 = v51;
  void v33[2] = v50;
  void v33[3] = v34;
  void v33[4] = v32;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_1ACAAC788;
  *(void *)(v35 + 24) = v33;
  id v36 = v32;
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771D98);
  sub_1ACA51EA4(&qword_1E99F1798, &qword_1E99F1790);
  sub_1ACA51EA4(&qword_1EB771D90, &qword_1EB771D98);
  uint64_t v37 = v47;
  sub_1ACE75D88();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v31, v37);
}

uint64_t sub_1ACAA9A5C(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = *a1;
  type metadata accessor for AssetBackgroundSession();
  id v7 = objc_msgSend(a4, sel_configuration);
  id v8 = objc_msgSend(v7, sel_identifier);

  if (v8)
  {
    uint64_t v9 = sub_1ACE761B8();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0;
  }
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  DownloadTaskIdentifier.init(session:identifier:)(v9, v11, v6, &v18);
  long long v14 = v18;
  uint64_t v15 = v19;
  uint64_t v16 = v20;
  uint64_t v17 = v21;
  type metadata accessor for DownloadTaskIdentifier();
  uint64_t WitnessTable = swift_getWitnessTable();
  DiskAssetCache<>.store(asset:at:)(a3, (uint64_t)&v14, WitnessTable);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1ACAA9C28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1ACE753F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB771BE8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1ACE75438();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EB771BD0);
  uint64_t v13 = sub_1ACE75428();
  os_signpost_type_t v8 = sub_1ACE76E28();
  if (sub_1ACE76FA8())
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    os_signpost_id_t v10 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v13, v8, v10, "Loaded asset from URL", "", v9, 2u);
    MEMORY[0x1AD11B340](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    uint64_t v11 = v13;
  }
}

uint64_t sub_1ACAA9E04(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v50 = a5;
  uint64_t v60 = a4;
  uint64_t v51 = a3;
  uint64_t v52 = a2;
  uint64_t v57 = sub_1ACE74F28();
  uint64_t v11 = *(void *)(v57 - 8);
  uint64_t v55 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v57);
  uint64_t v54 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1ACE753F8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7715C8);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v58 = v17;
  uint64_t v59 = v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771628);
  uint64_t v64 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v53 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7715D8);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v65 = v22;
  uint64_t v66 = v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v56 = (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771618);
  uint64_t v69 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v61 = (char *)&v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7715E8);
  uint64_t v70 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v63 = (char *)&v47 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 64))(a1, v51, a6, a7);
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v47 = v13;
  v52(v16, a5, v13);
  uint64_t v27 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v28 = (v27 + 16) & ~v27;
  uint64_t v51 = v28 + v15;
  uint64_t v49 = v27 | 7;
  uint64_t v29 = swift_allocObject();
  uint64_t v48 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
  v48(v29 + v28, v16, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE28);
  sub_1ACA51EA4(&qword_1EB76DE20, &qword_1EB76DE28);
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  id v30 = v54;
  uint64_t v31 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v54, v60, v57);
  unint64_t v32 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v33 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v33 + v32, v30, v31);
  sub_1ACA51EA4(&qword_1EB7715C0, &qword_1EB7715C8);
  uint64_t v34 = v53;
  uint64_t v35 = v58;
  sub_1ACE75C28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v20, v35);
  uint64_t v36 = v47;
  v52(v16, v50, v47);
  uint64_t v37 = swift_allocObject();
  v48(v37 + v28, v16, v36);
  sub_1ACA51EA4(&qword_1EB771620, &qword_1EB771628);
  uint64_t v38 = v62;
  uint64_t v39 = v56;
  sub_1ACE75AF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v34, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771708);
  sub_1ACA51EA4(&qword_1EB7715D0, &qword_1EB7715D8);
  sub_1ACA51EA4(&qword_1EB771700, &qword_1EB771708);
  uint64_t v40 = v61;
  uint64_t v41 = v65;
  sub_1ACE75B98();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v39, v41);
  sub_1ACA51EA4(&qword_1EB771610, &qword_1EB771618);
  uint64_t v42 = v63;
  uint64_t v43 = v67;
  sub_1ACE75D48();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v40, v43);
  sub_1ACA51EA4(&qword_1EB7715E0, &qword_1EB7715E8);
  uint64_t v44 = v68;
  uint64_t v45 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v42, v44);
  return v45;
}

uint64_t sub_1ACAAA690()
{
  uint64_t v0 = sub_1ACE75448();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1ACE753F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  os_signpost_type_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  os_signpost_id_t v10 = &v18[-v9];
  if (qword_1EB771BE8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1ACE75438();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EB771BD0);
  uint64_t v12 = sub_1ACE75428();
  sub_1ACE75458();
  int v19 = sub_1ACE76E08();
  if (sub_1ACE76FA8())
  {
    swift_retain();
    sub_1ACE75488();
    swift_release();
    if ((*(unsigned int (**)(unsigned char *, uint64_t))(v1 + 88))(v3, v0) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v13 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
      uint64_t v13 = "COMPLETE";
    }
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v8, v10, v4);
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    os_signpost_id_t v16 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v12, (os_signpost_type_t)v19, v16, "backgroundStash", v13, v15, 2u);
    MEMORY[0x1AD11B340](v15, -1, -1);

    uint64_t v17 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
    v17(v10, v4);
    return ((uint64_t (*)(unsigned char *, uint64_t))v17)(v8, v4);
  }
  else
  {

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v10, v4);
  }
}

void sub_1ACAAA998(uint64_t a1, uint64_t a2)
{
}

id sub_1ACAAA9A4()
{
  v5[1] = *(id *)MEMORY[0x1E4F143B8];
  id v0 = objc_msgSend(self, sel_defaultManager);
  uint64_t v1 = (void *)sub_1ACE74E18();
  v5[0] = 0;
  unsigned int v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, v5);

  if (v2) {
    return v5[0];
  }
  id v4 = v5[0];
  sub_1ACE74D78();

  return (id)swift_willThrow();
}

void sub_1ACAAAA8C(uint64_t a1, uint64_t a2)
{
}

void sub_1ACAAAA98(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5 = sub_1ACE753F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  os_signpost_type_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB771BE8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1ACE75438();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB771BD0);
  uint64_t v15 = sub_1ACE75428();
  os_signpost_type_t v10 = sub_1ACE76E28();
  if (sub_1ACE76FA8())
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    os_signpost_id_t v12 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v15, v10, v12, a3, "", v11, 2u);
    MEMORY[0x1AD11B340](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    uint64_t v13 = v15;
  }
}

uint64_t sub_1ACAAAC80(void **a1)
{
  uint64_t v1 = *a1;
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1ACE754C8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB768C28);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1ACE75498();
  os_log_type_t v6 = sub_1ACE76BE8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    id v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    uint64_t v10 = sub_1ACE76228();
    sub_1ACA3189C(v10, v11, &v13);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AC9D5000, v5, v6, "Encountered error while stashing background download: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v8, -1, -1);
    MEMORY[0x1AD11B340](v7, -1, -1);
  }
  else
  {
  }
  return sub_1ACE759C8();
}

uint64_t type metadata accessor for AssetBackgroundSession()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACAAAE84()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);

  return swift_deallocObject();
}

uint64_t sub_1ACAAAF38(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80);
  unint64_t v4 = (*(void *)(*(void *)(*(void *)(v2 + 16) - 8) + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1ACAA88E4(a1, a2, v2 + v3, *(void **)(v2 + v4), *(void **)(v2 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1ACAAAFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACAAB014()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for AssetBackgroundSession() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v3 = *(void *)(*(void *)v2 + 64);
  uint64_t v12 = sub_1ACE74898();
  uint64_t v4 = *(void *)(v12 - 8);
  unint64_t v11 = (v10 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v8 = (v11 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v10, v1);

  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v11, v12);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1ACAAB260@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = *(void *)(type metadata accessor for AssetBackgroundSession() - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_1ACE74898() - 8);
  unint64_t v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64);
  uint64_t v14 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v15 = (uint64_t)v2 + ((v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  return sub_1ACAA95AC(a1, (uint64_t)v2 + v9, (uint64_t)v2 + v12, v15, v5, v6, v7, a2);
}

uint64_t sub_1ACAAB3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

uint64_t sub_1ACAAB3F0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1ACAAB49C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void **)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v12 = *v11;
    *uint64_t v10 = *v11;
    uint64_t v13 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v13 = *v14;
    *(void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
    id v15 = v12;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1ACAAB5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();

  swift_release();
  return swift_release();
}

uint64_t sub_1ACAAB65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *v8;
  *int v7 = *v8;
  uint64_t v10 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v12 = v9;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1ACAAB70C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void **)v8;
  v8 += 15;
  uint64_t v10 = *v7;
  *int v7 = v9;
  id v11 = v9;

  id v12 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  *id v12 = *(void *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  *(void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v8 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1ACAAB7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  *(void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1ACAAB870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *v7;
  *int v7 = *v8;

  uint64_t v10 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v11 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  swift_release();
  *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1ACAAB924(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1ACAABA80);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1ACAABA94(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              int v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v20 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v20 = a2 - 1;
              }
              *int v19 = v20;
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1ACAABC8CLL);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_1ACAABCB4()
{
  uint64_t v1 = sub_1ACE753F8();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_1ACAABD44(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1ACE753F8() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  sub_1ACAA9C28(a1, v4);
}

uint64_t sub_1ACAABDD8()
{
  uint64_t v14 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v14 - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v2 = v16 + *(void *)(v1 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v11 = (v2 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v13 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v13 - 8);
  unint64_t v6 = (v11 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v12 = sub_1ACE753F8();
  uint64_t v8 = *(void *)(v12 - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v16, v14);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v11, AssociatedTypeWitness);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v13);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v12);
  return swift_deallocObject();
}

uint64_t sub_1ACAAC04C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  unint64_t v8 = v7 + *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v10 = (v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(sub_1ACE74F28() - 8);
  unint64_t v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = *(void *)(v12 + 64);
  uint64_t v15 = *(void *)(sub_1ACE753F8() - 8);
  uint64_t result = sub_1ACAA9E04(a1, (void (*)(char *, uint64_t, uint64_t))(v2 + v7), v2 + v10, v2 + v13, v2 + ((v13 + v14 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), v6, v5);
  *a2 = result;
  return result;
}

uint64_t sub_1ACAAC210()
{
  return sub_1ACAAA690();
}

uint64_t sub_1ACAAC218()
{
  return objectdestroy_14Tm_0(MEMORY[0x1E4FBD318]);
}

void sub_1ACAAC230(uint64_t a1)
{
}

uint64_t sub_1ACAAC23C()
{
  return objectdestroy_14Tm_0(MEMORY[0x1E4F276F0]);
}

id sub_1ACAAC254()
{
  return sub_1ACAAA9A4();
}

uint64_t sub_1ACAAC2D0()
{
  return objectdestroy_14Tm_0(MEMORY[0x1E4FBD318]);
}

uint64_t objectdestroy_14Tm_0(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

void sub_1ACAAC380(uint64_t a1)
{
}

void sub_1ACAAC38C(uint64_t a1, const char *a2)
{
  uint64_t v5 = *(void *)(sub_1ACE753F8() - 8);
  sub_1ACAAAA98(a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_1ACAAC400()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for AssetBackgroundSession() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = *(void *)(*(void *)v2 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = v0 + v3;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v9, v1);

  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_1ACAAC5C8(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for AssetBackgroundSession() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = *(void **)(v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1ACAA9A5C(a1, v1 + v4, v1 + v7, v8);
}

uint64_t sub_1ACAAC710()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACAAC748@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACDB17B4(a1, *(uint64_t (**)(void))(v2 + 16), a2);
}

uint64_t sub_1ACAAC750()
{
  return swift_deallocObject();
}

uint64_t sub_1ACAAC788(void *a1)
{
  return AssetBackgroundDelegate.activeNotifier(for:)(a1);
}

uint64_t sub_1ACAAC7AC(uint64_t a1, char a2)
{
  return sub_1ACDAEBC4(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_1ACAAC7B8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);

  swift_release();
  return swift_deallocObject();
}

void sub_1ACAAC880()
{
  unint64_t v1 = (*(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64)
      + ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v2 = (v1 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v3 = *(void (**)(id, void))(v0 + ((v2 + 15) & 0xFFFFFFFFFFFFFFF8));
  id v4 = (id)(*(uint64_t (**)(void, void))(*(void *)(v0 + 24) + 48))(*(void *)(v0 + v1), *(void *)(v0 + v2));
  v3(v4, 0);
}

uint64_t sub_1ACAAC96C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of DownloadRecordKeeper.information(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1ACAAC9CC()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1 || (unint64_t v2 = *(void *)(v1 + 224)) == 0)
  {
    char v3 = 0;
    goto LABEL_12;
  }
  char v3 = v2 & 0xF8;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1ACE77508();
    if (v4) {
      goto LABEL_5;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    char v3 = v4;
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_11;
  }
LABEL_5:
  if ((v2 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1AD119490](0, v2);
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_32;
    }
    uint64_t v4 = *(void *)(v2 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = *(void **)(v4 + 24);
  swift_bridgeObjectRetain();
  v7._uint64_t countAndFlagsBits = v5;
  v7._object = v6;
  PriceType.init(rawValue:)(v7);
  swift_release();
  LOBYTE(v4) = 1;
  char v3 = 0;
  switch(v17)
  {
    case 2:
      goto LABEL_11;
    case 4:
      break;
    default:
      LOBYTE(v4) = sub_1ACE77848();
      goto LABEL_11;
  }
LABEL_12:
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships);
  if (!v8 || (uint64_t v9 = *(void *)(v8 + 16)) == 0)
  {
LABEL_27:
    int v15 = 0;
    uint64_t result = 0;
    if ((v3 & 1) == 0) {
      return result;
    }
    return v15 ^ 1u;
  }
  unint64_t v2 = *(void *)(v9 + 16);
  if (!(v2 >> 62))
  {
    uint64_t v10 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_16;
    }
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  if (!sub_1ACE77508())
  {
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
LABEL_16:
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_32:
    uint64_t v11 = (char *)MEMORY[0x1AD119490](0, v2);
    goto LABEL_19;
  }
  if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    JUMPOUT(0x1ACAACC28);
  }
  uint64_t v11 = (char *)*(id *)(v2 + 32);
LABEL_19:
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)&v12[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes];
  swift_retain();

  int v14 = *(unsigned __int8 *)(v13 + 74);
  swift_release();
  if (v14 == 2) {
    goto LABEL_27;
  }
  if ((v3 & 1) == 0) {
    return 0;
  }
  int v15 = v14 & 1;
  return v15 ^ 1u;
}

id sub_1ACAACC3C()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ResizedArtworkURLProvider()), sel_init);
  qword_1E99F17A0 = (uint64_t)result;
  return result;
}

id ResizedArtworkURLProvider.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id static ResizedArtworkURLProvider.shared.getter()
{
  if (qword_1E99EFE78 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)qword_1E99F17A0;
  return v0;
}

void static ResizedArtworkURLProvider.shared.setter(uint64_t a1)
{
  if (qword_1E99EFE78 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v2 = (void *)qword_1E99F17A0;
  qword_1E99F17A0 = a1;
}

uint64_t (*static ResizedArtworkURLProvider.shared.modify())()
{
  if (qword_1E99EFE78 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

id ResizedArtworkURLProvider.init()()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for ResizedArtworkURLProvider();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ResizedArtworkURLProvider.__deallocating_deinit()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for ResizedArtworkURLProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1ACAAD06C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_1ACE74D78();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_1ACAAD148(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE74F28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  unint64_t v16 = (char *)&v33 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v33 - v17;
  sub_1ACE74EF8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1ACA7FA64((uint64_t)v8);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v35 = v13;
    unint64_t v36 = a3;
    uint64_t v37 = v16;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v8, v9);
    sub_1ACE74E08();
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1ACE76288();
    id v20 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
    id v21 = sub_1ACAAD06C(0x2B645C782B645CLL, 0xE700000000000000, 0);
    uint64_t v33 = v19;
    if (v21)
    {
      id v34 = v21;
      uint64_t v40 = a1;
      uint64_t v41 = a2;
      unint64_t v38 = 0xD000000000000018;
      unint64_t v39 = 0x80000001ACEC7030;
      sub_1ACA4F4AC();
      if (sub_1ACE770A8())
      {
        uint64_t v23 = (void *)sub_1ACE76178();
        uint64_t v24 = (uint64_t)objc_msgSend(v34, sel_numberOfMatchesInString_options_range_, v23, 0, 0, v33);

        if (v24 >= 1)
        {
          uint64_t v25 = (void *)sub_1ACE76178();
          swift_bridgeObjectRelease();
          unint64_t v26 = v36;
          unint64_t v38 = v36;
          uint64_t v40 = sub_1ACE777C8();
          uint64_t v41 = v27;
          sub_1ACE762C8();
          unint64_t v38 = v26;
          sub_1ACE777C8();
          sub_1ACE762C8();
          swift_bridgeObjectRelease();
          uint64_t v28 = (void *)sub_1ACE76178();
          swift_bridgeObjectRelease();
          id v29 = objc_msgSend(v34, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v25, 0, 0, v33, v28);

          sub_1ACE761B8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          id v30 = v35;
          sub_1ACE74E58();
          uint64_t v31 = v37;
          sub_1ACE74E38();
          swift_bridgeObjectRelease();
          unint64_t v32 = *(void (**)(char *, uint64_t))(v10 + 8);
          v32(v30, v9);
          a1 = sub_1ACE74DD8();

          swift_bridgeObjectRelease();
          v32(v31, v9);
          v32(v18, v9);
          return a1;
        }
      }
      swift_bridgeObjectRelease();
      a1 = sub_1ACE74DD8();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      a1 = sub_1ACE74DD8();
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v9);
  }
  return a1;
}

uint64_t type metadata accessor for ResizedArtworkURLProvider()
{
  return self;
}

uint64_t method lookup function for ResizedArtworkURLProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ResizedArtworkURLProvider);
}

uint64_t dispatch thunk of ResizedArtworkURLProvider.resizedArtworkURLString(_:dimension:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

uint64_t BinaryInteger.clamped(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE76158();
  sub_1ACE77A48();
  sub_1ACE77A38();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, a2);
}

uint64_t BinaryInteger.clamped(to:)()
{
  return sub_1ACE77A38();
}

{
  return sub_1ACE77A48();
}

uint64_t IntermediateEyebrowBuilderEpisode.init(serverEpisode:showViewModelTypeIsSerial:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = a2;
  return result;
}

uint64_t IntermediateEyebrowBuilderEpisode.timeRemainingOpt.getter()
{
  return 0;
}

uint64_t IntermediateEyebrowBuilderEpisode.channelName.getter()
{
  return sub_1ACAAD7E0((SEL *)&selRef_name);
}

uint64_t IntermediateEyebrowBuilderEpisode.subscriptionName.getter()
{
  return sub_1ACAAD7E0((SEL *)&selRef_subscriptionName);
}

uint64_t sub_1ACAAD7E0(SEL *a1)
{
  uint64_t v3 = (void *)(*v1 + OBJC_IVAR___MTServerPodcastEpisode_relationships);
  swift_beginAccess();
  if (!*v3) {
    return 0;
  }
  uint64_t v4 = (void *)(*v3 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast);
  swift_beginAccess();
  if (!*v4) {
    return 0;
  }
  uint64_t v5 = (unint64_t *)(*v4 + OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data);
  swift_beginAccess();
  unint64_t v6 = *v5;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    if (!sub_1ACE77508()) {
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v7) {
      goto LABEL_22;
    }
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
    uint64_t v16 = MEMORY[0x1AD119490](0, v6);
    swift_bridgeObjectRelease();
    uint64_t v9 = *(void *)(v16 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships);
    swift_retain();
    swift_unknownObjectRelease();
    if (v9) {
      goto LABEL_8;
    }
    return 0;
  }
  if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_21;
  }
  id v8 = (char *)*(id *)(v6 + 32);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships];
  swift_retain();

  if (!v9) {
    return 0;
  }
LABEL_8:
  uint64_t v10 = *(void *)(v9 + 16);
  swift_retain();
  swift_release();
  if (!v10) {
    return 0;
  }
  unint64_t v6 = *(void *)(v10 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  if (!(v6 >> 62))
  {
    if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_11;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_21:
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1ACE77508();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v12 = (id)MEMORY[0x1AD119490](0, v6);
LABEL_14:
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    id v14 = [v13 *a1];

    if (v14)
    {
      uint64_t v15 = sub_1ACE761B8();

      return v15;
    }
    return 0;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(v6 + 32);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t IntermediateEyebrowBuilderEpisode.entitlementState.getter()
{
  id v1 = objc_msgSend(*v0, sel_priceType);
  if (v1)
  {
    objc_super v2 = v1;
    uint64_t v3 = sub_1ACE761B8();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0xE000000000000000;
  }
  uint64_t result = sub_1ACD483F4(v3, v5);
  if (v7) {
    return 0;
  }
  return result;
}

uint64_t IntermediateEyebrowBuilderEpisode.hasFreeVersion.getter()
{
  return objc_msgSend(*v0, sel_priceTypeIsPSUB) ^ 1;
}

void IntermediateEyebrowBuilderEpisode.listenNowReason.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 5;
  *(_WORD *)(a1 + 8) = 1;
}

uint64_t IntermediateEyebrowBuilderEpisode.episodeTypeResolvedValue.getter()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  objc_super v2 = *(void **)(v1 + 168);
  if (!v2) {
    return 1;
  }
  uint64_t v3 = *(void *)(v1 + 160);
  swift_bridgeObjectRetain();
  v4._uint64_t countAndFlagsBits = v3;
  v4._object = v2;
  PodcastEpisodeAttributes.EpisodeType.init(rawValue:)(v4);
  return 0x1000201u >> (8 * v6);
}

BOOL IntermediateEyebrowBuilderEpisode.mediaType.getter()
{
  uint64_t v0 = sub_1ACE75378();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = PodcastEpisodeAttributes.uti.getter();
  uint64_t v6 = v5;
  sub_1ACE75368();
  uint64_t v7 = sub_1ACE752F8();
  uint64_t v9 = v8;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v4 != v7 || v6 != v9)
  {
    char v11 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (v11 & 1) != 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t IntermediateEyebrowBuilderEpisode.isExplicit.getter()
{
  if (!*(void *)(*(void *)(*v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 224)
    || (swift_bridgeObjectRetain(), uint64_t v1 = sub_1ACE775B8(), swift_bridgeObjectRelease(), v1 != 1))
  {
    LOBYTE(v1) = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t IntermediateEyebrowBuilderEpisode.showTypeIsSerial.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

double IntermediateEyebrowBuilderEpisode.durationOpt.getter()
{
  return *(double *)(*(void *)(*v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 304) / 1000.0;
}

uint64_t IntermediateEyebrowBuilderEpisode.seasonNumberOpt.getter()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  if (*(unsigned char *)(v1 + 360)) {
    return 0;
  }
  uint64_t result = *(void *)(v1 + 352);
  if (result <= 0) {
    return 0;
  }
  return result;
}

uint64_t IntermediateEyebrowBuilderEpisode.episodeNumberOpt.getter()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  if (*(unsigned char *)(v1 + 344)) {
    return 0;
  }
  uint64_t result = *(void *)(v1 + 336);
  if (result <= 0) {
    return 0;
  }
  return result;
}

uint64_t IntermediateEyebrowBuilderEpisode.releaseDate.getter@<X0>(uint64_t a1@<X8>)
{
  return PodcastEpisodeAttributes.releaseDateResolved.getter(a1);
}

uint64_t sub_1ACAADEA4()
{
  id v1 = objc_msgSend(*v0, sel_priceType);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = sub_1ACE761B8();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0xE000000000000000;
  }
  uint64_t result = sub_1ACD483F4(v3, v5);
  if (v7) {
    return 0;
  }
  return result;
}

uint64_t sub_1ACAADF18()
{
  return objc_msgSend(*v0, sel_priceTypeIsPSUB) ^ 1;
}

void sub_1ACAADF40(uint64_t a1@<X8>)
{
  *(void *)a1 = 5;
  *(_WORD *)(a1 + 8) = 1;
}

uint64_t sub_1ACAADF60()
{
  return *(unsigned __int8 *)(v0 + 8);
}

double sub_1ACAADF68()
{
  return *(double *)(*(void *)(*v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 304) / 1000.0;
}

uint64_t sub_1ACAADFAC()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  if (*(unsigned char *)(v1 + 360)) {
    return 0;
  }
  uint64_t result = *(void *)(v1 + 352);
  if (result < 1) {
    return 0;
  }
  return result;
}

uint64_t sub_1ACAADFE8()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  if (*(unsigned char *)(v1 + 344)) {
    return 0;
  }
  uint64_t result = *(void *)(v1 + 336);
  if (result < 1) {
    return 0;
  }
  return result;
}

uint64_t sub_1ACAAE024@<X0>(uint64_t a1@<X8>)
{
  return PodcastEpisodeAttributes.releaseDateResolved.getter(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for IntermediateEyebrowBuilderEpisode(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v4 = v3;
  return a1;
}

void destroy for IntermediateEyebrowBuilderEpisode(id *a1)
{
}

uint64_t assignWithCopy for IntermediateEyebrowBuilderEpisode(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for IntermediateEyebrowBuilderEpisode(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for IntermediateEyebrowBuilderEpisode(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IntermediateEyebrowBuilderEpisode(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IntermediateEyebrowBuilderEpisode()
{
  return &type metadata for IntermediateEyebrowBuilderEpisode;
}

id ArtworkTextColors.primary.getter()
{
  id v1 = *(id *)v0;
  sub_1ACAAE1F8(*(id *)v0, *(unsigned char *)(v0 + 8));
  return v1;
}

id sub_1ACAAE1F8(id result, char a2)
{
  if (a2 != -1) {
    return sub_1ACA7516C(result, a2);
  }
  return result;
}

void *ArtworkTextColors.secondary.getter()
{
  id v1 = *(void **)(v0 + 16);
  sub_1ACAAE1F8(v1, *(unsigned char *)(v0 + 24));
  return v1;
}

void *ArtworkTextColors.tertiary.getter()
{
  id v1 = *(void **)(v0 + 32);
  sub_1ACAAE1F8(v1, *(unsigned char *)(v0 + 40));
  return v1;
}

void *ArtworkTextColors.quaternary.getter()
{
  id v1 = *(void **)(v0 + 48);
  sub_1ACAAE1F8(v1, *(unsigned char *)(v0 + 56));
  return v1;
}

uint64_t ArtworkTextColors.init(primary:secondary:tertiary:quaternary:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  *(void *)a9 = result;
  *(unsigned char *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8;
  return result;
}

uint64_t ArtworkTextColors.init(serverArtwork:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4 = a1[11];
  if (v4)
  {
    uint64_t v5 = a1[10];
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1ACDDBDBC(v5, v4);
    unsigned __int8 v24 = v9;
    uint64_t v25 = v6;
    unint64_t v7 = a1[13];
    if (!v7)
    {
LABEL_6:
      uint64_t v10 = 0;
      unsigned __int8 v11 = -1;
      unint64_t v12 = a1[15];
      if (v12) {
        goto LABEL_7;
      }
      goto LABEL_9;
    }
  }
  else
  {
    unsigned __int8 v24 = -1;
    uint64_t v25 = 0;
    unint64_t v7 = a1[13];
    if (!v7) {
      goto LABEL_6;
    }
  }
  uint64_t v8 = a1[12];
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1ACDDBDBC(v8, v7);
  unsigned __int8 v11 = v14;
  unint64_t v12 = a1[15];
  if (v12)
  {
LABEL_7:
    uint64_t v13 = a1[14];
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1ACDDBDBC(v13, v12);
    unsigned __int8 v16 = v18;
    unint64_t v17 = a1[17];
    if (v17) {
      goto LABEL_12;
    }
LABEL_13:
    uint64_t result = swift_release();
    uint64_t v20 = 0;
    char v22 = -1;
    goto LABEL_14;
  }
LABEL_9:
  uint64_t v15 = 0;
  unsigned __int8 v16 = -1;
  unint64_t v17 = a1[17];
  if (!v17) {
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v19 = a1[16];
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_1ACDDBDBC(v19, v17);
  char v22 = v21;
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
LABEL_14:
  *(void *)a2 = v25;
  *(void *)(a2 + 8) = v24;
  *(void *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v16;
  *(void *)(a2 + 48) = v20;
  *(unsigned char *)(a2 + 56) = v22;
  return result;
}

uint64_t sub_1ACAAE498()
{
  uint64_t result = 0x7972616D697270;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7261646E6F636573;
      break;
    case 2:
      uint64_t result = 0x7972616974726574;
      break;
    case 3:
      uint64_t result = 0x616E726574617571;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACAAE530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACAAEA04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACAAE558(uint64_t a1)
{
  unint64_t v2 = sub_1ACAAE8F4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACAAE594(uint64_t a1)
{
  unint64_t v2 = sub_1ACAAE8F4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ArtworkTextColors.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F17A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAAE8F4();
  sub_1ACE77C78();
  sub_1ACAAE948(v3, (uint64_t)v16);
  sub_1ACAAE948((uint64_t)v16, (uint64_t)v12);
  char v11 = 0;
  sub_1ACAAE9B0();
  sub_1ACE77728();
  if (!v2)
  {
    sub_1ACAAE948(v3 + 16, (uint64_t)v15);
    sub_1ACAAE948((uint64_t)v15, (uint64_t)v12);
    char v11 = 1;
    sub_1ACE77728();
    sub_1ACAAE948(v3 + 32, (uint64_t)v14);
    sub_1ACAAE948((uint64_t)v14, (uint64_t)v12);
    char v11 = 2;
    sub_1ACE77728();
    sub_1ACAAE948(v3 + 48, (uint64_t)v13);
    sub_1ACAAE948((uint64_t)v13, (uint64_t)v12);
    char v11 = 3;
    sub_1ACE77728();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double ArtworkTextColors.init(from:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1ACAAEBD8(a1, v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

double sub_1ACAAE864@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1ACAAEBD8(a1, v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_1ACAAE8B0(void *a1)
{
  return ArtworkTextColors.encode(to:)(a1);
}

unint64_t sub_1ACAAE8F4()
{
  unint64_t result = qword_1EB771218;
  if (!qword_1EB771218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771218);
  }
  return result;
}

uint64_t sub_1ACAAE948(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F17B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ACAAE9B0()
{
  unint64_t result = qword_1E99F17B8;
  if (!qword_1E99F17B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F17B8);
  }
  return result;
}

uint64_t sub_1ACAAEA04(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7972616D697270 && a2 == 0xE700000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7261646E6F636573 && a2 == 0xE900000000000079 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7972616974726574 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x616E726574617571 && a2 == 0xEA00000000007972)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void sub_1ACAAEBD8(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7719A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAAE8F4();
  sub_1ACE77C48();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    char v34 = 0;
    sub_1ACAAF8A8();
    sub_1ACE77638();
    id v30 = a2;
    id v9 = v31;
    int v10 = v32;
    char v34 = 1;
    sub_1ACAAE1F8(v31, v32);
    sub_1ACE77638();
    int v33 = v10;
    id v28 = v9;
    char v34 = 2;
    id v11 = v31;
    int v12 = v32;
    sub_1ACAAE1F8(v31, v32);
    id v27 = 0;
    sub_1ACE77638();
    id v29 = v11;
    int v26 = v12;
    char v34 = 3;
    id v25 = v31;
    int v24 = v32;
    sub_1ACAAE1F8(v31, v32);
    sub_1ACE77638();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    id v13 = v31;
    id v27 = v31;
    int v23 = v32;
    id v14 = v28;
    LOBYTE(v12) = v33;
    sub_1ACAAE1F8(v28, v33);
    id v15 = v29;
    char v16 = v26;
    sub_1ACAAE1F8(v29, v26);
    id v17 = v25;
    char v18 = v24;
    sub_1ACAAE1F8(v25, v24);
    uint64_t v19 = v13;
    LOBYTE(v13) = v23;
    sub_1ACAAE1F8(v19, v23);
    sub_1ACAAF8FC(v17, v18);
    sub_1ACAAF8FC(v15, v16);
    sub_1ACAAF8FC(v14, v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    sub_1ACAAF8FC(v14, v12);
    sub_1ACAAF8FC(v15, v16);
    sub_1ACAAF8FC(v17, v18);
    id v20 = v27;
    sub_1ACAAF8FC(v27, (char)v13);
    char v21 = v30;
    *id v30 = v14;
    *((unsigned char *)v21 + 8) = v12;
    void v21[2] = v15;
    *((unsigned char *)v21 + 24) = v16;
    v21[4] = v17;
    *((unsigned char *)v21 + 40) = v18;
    v21[6] = v20;
    *((unsigned char *)v21 + 56) = (_BYTE)v13;
  }
}

void destroy for ArtworkTextColors(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  if (v2 != 255) {
    sub_1ACA74648(*(id *)a1, v2);
  }
  int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 != 255) {
    sub_1ACA74648(*(id *)(a1 + 16), v3);
  }
  int v4 = *(unsigned __int8 *)(a1 + 40);
  if (v4 != 255) {
    sub_1ACA74648(*(id *)(a1 + 32), v4);
  }
  int v5 = *(unsigned __int8 *)(a1 + 56);
  if (v5 != 255)
  {
    uint64_t v6 = *(void **)(a1 + 48);
    sub_1ACA74648(v6, v5);
  }
}

uint64_t initializeWithCopy for ArtworkTextColors(uint64_t a1, uint64_t *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 8);
  if (v4 == 255)
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  }
  else
  {
    uint64_t v5 = *a2;
    sub_1ACA7516C((id)*a2, *((unsigned char *)a2 + 8));
    *(void *)a1 = v5;
    *(unsigned char *)(a1 + 8) = v4;
  }
  uint64_t v6 = (id *)(a2 + 2);
  int v7 = *((unsigned __int8 *)a2 + 24);
  if (v7 == 255)
  {
    *(void *)(a1 + 16) = *v6;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  }
  else
  {
    id v8 = *v6;
    sub_1ACA7516C(*v6, *((unsigned char *)a2 + 24));
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = v7;
  }
  id v9 = (id *)(a2 + 4);
  int v10 = *((unsigned __int8 *)a2 + 40);
  if (v10 == 255)
  {
    *(void *)(a1 + 32) = *v9;
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  }
  else
  {
    id v11 = *v9;
    sub_1ACA7516C(*v9, *((unsigned char *)a2 + 40));
    *(void *)(a1 + 32) = v11;
    *(unsigned char *)(a1 + 40) = v10;
  }
  int v12 = a2 + 6;
  int v13 = *((unsigned __int8 *)a2 + 56);
  if (v13 == 255)
  {
    *(void *)(a1 + 48) = *v12;
    *(unsigned char *)(a1 + 56) = *((unsigned char *)v12 + 8);
  }
  else
  {
    uint64_t v14 = *v12;
    sub_1ACA7516C((id)*v12, v13);
    *(void *)(a1 + 48) = v14;
    *(unsigned char *)(a1 + 56) = v13;
  }
  return a1;
}

uint64_t assignWithCopy for ArtworkTextColors(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned __int8 *)(a1 + 8) == 255)
  {
    if (v4 == 255)
    {
      id v10 = *(id *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(void *)a1 = v10;
    }
    else
    {
      id v8 = *(id *)a2;
      sub_1ACA7516C(*(id *)a2, *(unsigned char *)(a2 + 8));
      *(void *)a1 = v8;
      *(unsigned char *)(a1 + 8) = v4;
    }
  }
  else if (v4 == 255)
  {
    sub_1ACA75B90(a1);
    char v9 = *(unsigned char *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = v9;
  }
  else
  {
    id v5 = *(id *)a2;
    sub_1ACA7516C(*(id *)a2, *(unsigned char *)(a2 + 8));
    uint64_t v6 = *(void **)a1;
    *(void *)a1 = v5;
    char v7 = *(unsigned char *)(a1 + 8);
    *(unsigned char *)(a1 + 8) = v4;
    sub_1ACA74648(v6, v7);
  }
  id v11 = (id *)(a1 + 16);
  int v12 = (id *)(a2 + 16);
  int v13 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v13 == 255)
    {
      id v19 = *v12;
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *id v11 = v19;
    }
    else
    {
      id v17 = *v12;
      sub_1ACA7516C(*v12, *(unsigned char *)(a2 + 24));
      *(void *)(a1 + 16) = v17;
      *(unsigned char *)(a1 + 24) = v13;
    }
  }
  else if (v13 == 255)
  {
    sub_1ACA75B90(a1 + 16);
    char v18 = *(unsigned char *)(a2 + 24);
    *id v11 = *v12;
    *(unsigned char *)(a1 + 24) = v18;
  }
  else
  {
    id v14 = *v12;
    sub_1ACA7516C(*v12, *(unsigned char *)(a2 + 24));
    id v15 = *(void **)(a1 + 16);
    *(void *)(a1 + 16) = v14;
    char v16 = *(unsigned char *)(a1 + 24);
    *(unsigned char *)(a1 + 24) = v13;
    sub_1ACA74648(v15, v16);
  }
  id v20 = (id *)(a1 + 32);
  char v21 = (id *)(a2 + 32);
  int v22 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    if (v22 == 255)
    {
      id v28 = *v21;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      id *v20 = v28;
    }
    else
    {
      id v26 = *v21;
      sub_1ACA7516C(*v21, *(unsigned char *)(a2 + 40));
      *(void *)(a1 + 32) = v26;
      *(unsigned char *)(a1 + 40) = v22;
    }
  }
  else if (v22 == 255)
  {
    sub_1ACA75B90(a1 + 32);
    char v27 = *(unsigned char *)(a2 + 40);
    id *v20 = *v21;
    *(unsigned char *)(a1 + 40) = v27;
  }
  else
  {
    id v23 = *v21;
    sub_1ACA7516C(*v21, *(unsigned char *)(a2 + 40));
    int v24 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v23;
    char v25 = *(unsigned char *)(a1 + 40);
    *(unsigned char *)(a1 + 40) = v22;
    sub_1ACA74648(v24, v25);
  }
  id v29 = (void *)(a1 + 48);
  uint64_t v30 = a2 + 48;
  int v31 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) == 255)
  {
    if (v31 == 255)
    {
      id v37 = *(id *)v30;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(v30 + 8);
      void *v29 = v37;
    }
    else
    {
      id v35 = *(id *)v30;
      sub_1ACA7516C(*(id *)v30, v31);
      *(void *)(a1 + 48) = v35;
      *(unsigned char *)(a1 + 56) = v31;
    }
  }
  else if (v31 == 255)
  {
    sub_1ACA75B90(a1 + 48);
    char v36 = *(unsigned char *)(v30 + 8);
    void *v29 = *(void *)v30;
    *(unsigned char *)(a1 + 56) = v36;
  }
  else
  {
    id v32 = *(id *)v30;
    sub_1ACA7516C(*(id *)v30, v31);
    int v33 = *(void **)(a1 + 48);
    *(void *)(a1 + 48) = v32;
    char v34 = *(unsigned char *)(a1 + 56);
    *(unsigned char *)(a1 + 56) = v31;
    sub_1ACA74648(v33, v34);
  }
  return a1;
}

uint64_t assignWithTake for ArtworkTextColors(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 8);
  if (v4 != 255)
  {
    int v5 = *(unsigned __int8 *)(a2 + 8);
    if (v5 != 255)
    {
      uint64_t v6 = *(void **)a1;
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = v5;
      sub_1ACA74648(v6, v4);
      goto LABEL_6;
    }
    sub_1ACA75B90(a1);
  }
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
LABEL_6:
  char v7 = (void *)(a2 + 16);
  int v8 = *(unsigned __int8 *)(a1 + 24);
  if (v8 != 255)
  {
    int v9 = *(unsigned __int8 *)(a2 + 24);
    if (v9 != 255)
    {
      id v10 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = *v7;
      *(unsigned char *)(a1 + 24) = v9;
      sub_1ACA74648(v10, v8);
      goto LABEL_11;
    }
    sub_1ACA75B90(a1 + 16);
  }
  *(void *)(a1 + 16) = *v7;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
LABEL_11:
  id v11 = (void *)(a2 + 32);
  int v12 = *(unsigned __int8 *)(a1 + 40);
  if (v12 != 255)
  {
    int v13 = *(unsigned __int8 *)(a2 + 40);
    if (v13 != 255)
    {
      id v14 = *(void **)(a1 + 32);
      *(void *)(a1 + 32) = *v11;
      *(unsigned char *)(a1 + 40) = v13;
      sub_1ACA74648(v14, v12);
      goto LABEL_16;
    }
    sub_1ACA75B90(a1 + 32);
  }
  *(void *)(a1 + 32) = *v11;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
LABEL_16:
  id v15 = (void *)(a2 + 48);
  int v16 = *(unsigned __int8 *)(a1 + 56);
  if (v16 == 255)
  {
LABEL_20:
    *(void *)(a1 + 48) = *v15;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    return a1;
  }
  int v17 = *(unsigned __int8 *)(a2 + 56);
  if (v17 == 255)
  {
    sub_1ACA75B90(a1 + 48);
    goto LABEL_20;
  }
  char v18 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *v15;
  *(unsigned char *)(a1 + 56) = v17;
  sub_1ACA74648(v18, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkTextColors(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = (v3 ^ 0xFF) - 1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkTextColors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = ~(_BYTE)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkTextColors()
{
  return &type metadata for ArtworkTextColors;
}

unsigned char *storeEnumTagSinglePayload for ArtworkTextColors.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAAF768);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkTextColors.CodingKeys()
{
  return &type metadata for ArtworkTextColors.CodingKeys;
}

unint64_t sub_1ACAAF7A4()
{
  unint64_t result = qword_1E99F17C0;
  if (!qword_1E99F17C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F17C0);
  }
  return result;
}

unint64_t sub_1ACAAF7FC()
{
  unint64_t result = qword_1EB771228;
  if (!qword_1EB771228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771228);
  }
  return result;
}

unint64_t sub_1ACAAF854()
{
  unint64_t result = qword_1EB771220;
  if (!qword_1EB771220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771220);
  }
  return result;
}

unint64_t sub_1ACAAF8A8()
{
  unint64_t result = qword_1EB7714C8;
  if (!qword_1EB7714C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7714C8);
  }
  return result;
}

void sub_1ACAAF8FC(id a1, char a2)
{
  if (a2 != -1) {
    sub_1ACA74648(a1, a2);
  }
}

void *_s16MediaAPIProviderVwCP(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void _s16MediaAPIProviderVwxx(uint64_t a1)
{
  int v2 = *(void **)(a1 + 8);
}

uint64_t _s16MediaAPIProviderVwca(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  char v7 = *(void **)(a2 + 8);
  int v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t _s16MediaAPIProviderVwta(uint64_t a1, _OWORD *a2)
{
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *_s16MediaAPIProviderVMa()
{
  return &_s16MediaAPIProviderVN;
}

uint64_t sub_1ACAAFA28(long long *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v54 = a3;
  uint64_t v10 = type metadata accessor for MediaRequest.Params();
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v56 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v50 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v49 - v13;
  long long v15 = a1[11];
  long long v81 = a1[10];
  long long v82 = v15;
  long long v83 = a1[12];
  char v84 = *((unsigned char *)a1 + 208);
  long long v16 = a1[7];
  long long v77 = a1[6];
  long long v78 = v16;
  long long v17 = a1[9];
  long long v79 = a1[8];
  long long v80 = v17;
  long long v18 = a1[3];
  long long v73 = a1[2];
  long long v74 = v18;
  long long v19 = a1[5];
  long long v75 = a1[4];
  long long v76 = v19;
  long long v20 = a1[1];
  long long v71 = *a1;
  long long v72 = v20;
  uint64_t v51 = a4;
  objc_msgSend(a4, sel_setURLProtocolDelegate_, a5);
  long long v21 = a1[11];
  long long v67 = a1[10];
  long long v68 = v21;
  long long v69 = a1[12];
  char v70 = *((unsigned char *)a1 + 208);
  long long v22 = a1[7];
  long long v63 = a1[6];
  long long v64 = v22;
  long long v23 = a1[9];
  long long v65 = a1[8];
  long long v66 = v23;
  long long v24 = a1[3];
  long long v59 = a1[2];
  long long v60 = v24;
  long long v25 = a1[5];
  long long v61 = a1[4];
  long long v62 = v25;
  long long v26 = a1[1];
  long long v57 = *a1;
  long long v58 = v26;
  uint64_t v53 = v14;
  sub_1ACDD1E28((uint64_t)v14);
  uint64_t v55 = (void *)*((void *)&v73 + 1);
  uint64_t v27 = swift_allocObject();
  long long v28 = v82;
  *(_OWORD *)(v27 + 176) = v81;
  *(_OWORD *)(v27 + 192) = v28;
  *(_OWORD *)(v27 + 208) = v83;
  *(unsigned char *)(v27 + 224) = v84;
  long long v29 = v78;
  *(_OWORD *)(v27 + 112) = v77;
  *(_OWORD *)(v27 + 128) = v29;
  long long v30 = v80;
  *(_OWORD *)(v27 + 144) = v79;
  *(_OWORD *)(v27 + 160) = v30;
  long long v31 = v74;
  *(_OWORD *)(v27 + 48) = v73;
  *(_OWORD *)(v27 + 64) = v31;
  long long v32 = v76;
  *(_OWORD *)(v27 + 80) = v75;
  *(_OWORD *)(v27 + 96) = v32;
  long long v33 = v72;
  *(_OWORD *)(v27 + 16) = v71;
  *(_OWORD *)(v27 + 32) = v33;
  *(void *)(v27 + 232) = a2;
  *(void *)(v27 + 240) = a3;
  uint64_t v34 = swift_allocObject();
  uint64_t v52 = v34;
  swift_unknownObjectWeakInit();
  id v35 = (void *)swift_allocObject();
  v35[2] = v34;
  v35[3] = sub_1ACAB2B68;
  v35[4] = v27;
  sub_1ACE77B88();
  sub_1ACAB22F4((uint64_t)v14, (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  unint64_t v36 = (*(unsigned __int8 *)(v56 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  unint64_t v37 = (v11 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = swift_allocObject();
  sub_1ACAB2360(v50, v40 + v36, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  *(void *)(v40 + v37) = MEMORY[0x1E4FBC860];
  unint64_t v41 = v40 + v38;
  *(void *)(v41 + 64) = v61;
  long long v42 = v60;
  *(_OWORD *)(v41 + 32) = v59;
  *(_OWORD *)(v41 + 48) = v42;
  long long v43 = v58;
  *(_OWORD *)unint64_t v41 = v57;
  *(_OWORD *)(v41 + 16) = v43;
  uint64_t v44 = v51;
  *(void *)(v40 + v39) = v51;
  uint64_t v45 = (void *)(v40 + ((v39 + 15) & 0xFFFFFFFFFFFFFFF8));
  void *v45 = sub_1ACA3ACF4;
  v45[1] = v35;
  sub_1ACA64A2C((uint64_t)&v71);
  swift_retain();
  swift_retain();
  swift_retain();
  id v46 = v44;
  swift_retain();
  uint64_t v47 = (uint64_t)v53;
  sub_1ACB0443C((uint64_t)v53, v55, (uint64_t)sub_1ACA39594, v40);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_1ACAB2A5C(v47, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
}

void sub_1ACAAFDEC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(void), uint64_t a8)
{
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  MEMORY[0x1F4188790](v13 - 8);
  long long v15 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v16 = (void (*)(void))type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v95 = *((void *)v16 - 1);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  long long v19 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v94 = (uint64_t)&v89 - v20;
  if (!a5)
  {
    if (!a1) {
      goto LABEL_59;
    }
LABEL_10:
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_1ACE77508();
      if (v32) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v32 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v32)
      {
LABEL_12:
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v33 = a8;
          MEMORY[0x1AD119490](0, a1);
        }
        else
        {
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_64;
          }
          uint64_t v33 = a8;
          swift_unknownObjectRetain();
        }
        swift_bridgeObjectRelease();
        type metadata accessor for ServerPodcast();
        uint64_t v34 = swift_dynamicCastClass();
        if (v34)
        {
          id v35 = (int *)v34;
          long long v16 = a7;
          unint64_t v36 = (void *)(v34 + OBJC_IVAR___MTServerPodcast_episodes);
          swift_beginAccess();
          if (*v36)
          {
            swift_unknownObjectRetain();
            unint64_t v37 = swift_bridgeObjectRetain();
            unint64_t v38 = sub_1ACAB23EC(v37, v35);
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            if (*(void *)(v38 + 16)) {
              goto LABEL_39;
            }
          }
          else
          {
            unint64_t v38 = MEMORY[0x1E4FBC860];
            if (*(void *)(MEMORY[0x1E4FBC860] + 16)) {
              goto LABEL_39;
            }
          }
          long long v62 = *(_OWORD *)(a6 + 176);
          long long v123 = *(_OWORD *)(a6 + 160);
          long long v124 = v62;
          v125[0] = *(_OWORD *)(a6 + 192);
          LOBYTE(v125[1]) = *(unsigned char *)(a6 + 208);
          long long v63 = *(_OWORD *)(a6 + 112);
          long long v119 = *(_OWORD *)(a6 + 96);
          long long v120 = v63;
          long long v64 = *(_OWORD *)(a6 + 144);
          long long v121 = *(_OWORD *)(a6 + 128);
          long long v122 = v64;
          long long v65 = *(_OWORD *)(a6 + 48);
          long long v115 = *(_OWORD *)(a6 + 32);
          long long v116 = v65;
          long long v66 = *(_OWORD *)(a6 + 80);
          long long v117 = *(_OWORD *)(a6 + 64);
          long long v118 = v66;
          long long v67 = *(_OWORD *)(a6 + 16);
          long long v113 = *(_OWORD *)a6;
          long long v114 = v67;
          sub_1ACA64A2C(a6);
          long long v68 = sub_1ACBFDB7C(&v113);
          if (v68)
          {
            uint64_t v32 = (uint64_t)v68;
            if (v68[2])
            {
              swift_bridgeObjectRelease();
              if (qword_1E99EFF10 == -1)
              {
LABEL_35:
                uint64_t v69 = sub_1ACE754C8();
                __swift_project_value_buffer(v69, (uint64_t)qword_1E99F2C40);
                char v70 = sub_1ACE75498();
                os_log_type_t v71 = sub_1ACE76C08();
                if (os_log_type_enabled(v70, v71))
                {
                  long long v72 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)long long v72 = 0;
                  _os_log_impl(&dword_1AC9D5000, v70, v71, "No episodes in MAPI response. Using content from Siri sidepack", v72, 2u);
                  MEMORY[0x1AD11B340](v72, -1, -1);
                }

                sub_1ACA62728((uint64_t)v98);
                sub_1ACA50E14((uint64_t)v98, (uint64_t)&v113, &qword_1E99F0F40);
                sub_1ACABEBF4(v32, (uint64_t)&v113, 0, &v99);
                long long v123 = v109;
                long long v124 = v110;
                v125[0] = v111[0];
                long long v73 = *(_OWORD *)((char *)v111 + 10);
                goto LABEL_40;
              }
LABEL_70:
              swift_once();
              goto LABEL_35;
            }
            swift_bridgeObjectRelease();
          }
LABEL_39:
          sub_1ACA62728((uint64_t)v98);
          sub_1ACA50E14((uint64_t)v98, (uint64_t)&v113, &qword_1E99F0F40);
          char v74 = sub_1ACAAC9CC();
          sub_1ACABEBF4(v38, (uint64_t)&v113, v74 & 1, &v99);
          long long v123 = v109;
          long long v124 = v110;
          v125[0] = v111[0];
          long long v73 = *(_OWORD *)((char *)v111 + 10);
LABEL_40:
          *(_OWORD *)((char *)v125 + 10) = v73;
          long long v119 = v105;
          long long v120 = v106;
          long long v121 = v107;
          long long v122 = v108;
          long long v115 = v101;
          long long v116 = v102;
          long long v117 = v103;
          long long v118 = v104;
          long long v113 = v99;
          long long v114 = v100;
          sub_1ACA63474((uint64_t)&v113);
          sub_1ACA50E14((uint64_t)&v113, (uint64_t)v112, &qword_1E99F0F48);
          v16(v112);
          swift_unknownObjectRelease();
LABEL_68:
          sub_1ACA6347C((uint64_t)&v99);
          return;
        }
        swift_unknownObjectRelease();
        a8 = v33;
        goto LABEL_43;
      }
    }
    swift_bridgeObjectRelease();
LABEL_43:
    unint64_t v75 = sub_1ACC2BADC(a1);
    if (v75)
    {
      uint64_t v32 = v75;
      uint64_t v91 = (void (*)(void *))a7;
      if (!(v75 >> 62))
      {
        uint64_t v76 = *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        uint64_t v90 = a8;
        if (v76)
        {
LABEL_46:
          if (v76 < 1)
          {
            __break(1u);
            goto LABEL_70;
          }
          uint64_t v77 = 0;
          uint64_t v96 = (void (**)(char *, void, uint64_t, void (*)(void)))(v95 + 56);
          unint64_t v97 = v32 & 0xC000000000000001;
          long long v78 = (unsigned int (**)(char *, uint64_t, void (*)(void)))(v95 + 48);
          uint64_t v79 = MEMORY[0x1E4FBC860];
          uint64_t v92 = v76;
          uint64_t v93 = v19;
          do
          {
            if (v97) {
              id v80 = (id)MEMORY[0x1AD119490](v77, v32);
            }
            else {
              id v80 = *(id *)(v32 + 8 * v77 + 32);
            }
            long long v81 = (char *)v80;
            sub_1ACC55C1C(v81, 0, (uint64_t)v15);
            (*v96)(v15, 0, 1, v16);

            if ((*v78)(v15, 1, v16) == 1)
            {
              sub_1ACA50E78((uint64_t)v15, &qword_1EB76EFA0);
            }
            else
            {
              long long v82 = v16;
              uint64_t v83 = v32;
              uint64_t v84 = v94;
              sub_1ACAB2360((uint64_t)v15, v94, type metadata accessor for PodcastsMediaLibrary.MediaItem);
              sub_1ACAB2360(v84, (uint64_t)v19, type metadata accessor for PodcastsMediaLibrary.MediaItem);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v79 = sub_1ACA418BC(0, *(void *)(v79 + 16) + 1, 1, v79);
              }
              unint64_t v86 = *(void *)(v79 + 16);
              unint64_t v85 = *(void *)(v79 + 24);
              uint64_t v32 = v83;
              if (v86 >= v85 >> 1) {
                uint64_t v79 = sub_1ACA418BC(v85 > 1, v86 + 1, 1, v79);
              }
              long long v16 = v82;
              *(void *)(v79 + 16) = v86 + 1;
              uint64_t v87 = v79
                  + ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80))
                  + *(void *)(v95 + 72) * v86;
              long long v19 = v93;
              sub_1ACAB2360((uint64_t)v93, v87, type metadata accessor for PodcastsMediaLibrary.MediaItem);
              uint64_t v76 = v92;
            }
            ++v77;
          }
          while (v76 != v77);
LABEL_66:
          swift_bridgeObjectRelease_n();
          sub_1ACA62728((uint64_t)v98);
          sub_1ACA50E14((uint64_t)v98, (uint64_t)&v113, &qword_1E99F0F40);
          sub_1ACABEBF4(v79, (uint64_t)&v113, 0, &v99);
          long long v123 = v109;
          long long v124 = v110;
          v125[0] = v111[0];
          *(_OWORD *)((char *)v125 + 10) = *(_OWORD *)((char *)v111 + 10);
          long long v119 = v105;
          long long v120 = v106;
          long long v121 = v107;
          long long v122 = v108;
          long long v115 = v101;
          long long v116 = v102;
          long long v117 = v103;
          long long v118 = v104;
          long long v113 = v99;
          long long v114 = v100;
          sub_1ACA63474((uint64_t)&v113);
          sub_1ACA50E14((uint64_t)&v113, (uint64_t)v112, &qword_1E99F0F48);
LABEL_67:
          v91(v112);
          goto LABEL_68;
        }
LABEL_65:
        uint64_t v79 = MEMORY[0x1E4FBC860];
        goto LABEL_66;
      }
LABEL_64:
      swift_bridgeObjectRetain();
      uint64_t v76 = sub_1ACE77508();
      uint64_t v90 = a8;
      if (v76) {
        goto LABEL_46;
      }
      goto LABEL_65;
    }
LABEL_59:
    *(void *)&long long v113 = 4;
    sub_1ACA63458((uint64_t)&v113);
    sub_1ACA50E14((uint64_t)&v113, (uint64_t)v112, &qword_1E99F0F48);
    a7(v112);
    return;
  }
  if (!a1) {
    goto LABEL_5;
  }
  if (!(a1 >> 62))
  {
    if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v88 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (v88 > 0) {
    goto LABEL_10;
  }
LABEL_5:
  uint64_t v91 = (void (*)(void *))a7;
  if (qword_1E99EFF10 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1ACE754C8();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1E99F2C40);
  id v23 = a5;
  id v24 = a5;
  long long v25 = sub_1ACE75498();
  os_log_type_t v26 = sub_1ACE76BE8();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    unint64_t v97 = v22;
    long long v28 = (uint8_t *)v27;
    uint64_t v96 = (void (**)(char *, void, uint64_t, void (*)(void)))swift_slowAlloc();
    *(_DWORD *)long long v28 = 138412290;
    id v29 = a5;
    uint64_t v30 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)&long long v113 = v30;
    sub_1ACE76FF8();
    long long v31 = (void (**)(void, void, void, void))v96;
    *uint64_t v96 = (void (*)(char *, void, uint64_t, void (*)(void)))v30;

    _os_log_impl(&dword_1AC9D5000, v25, v26, "Received error from request controller: %@", v28, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v31, -1, -1);
    MEMORY[0x1AD11B340](v28, -1, -1);
  }
  else
  {
  }
  long long v39 = *(_OWORD *)(a6 + 176);
  long long v123 = *(_OWORD *)(a6 + 160);
  long long v124 = v39;
  v125[0] = *(_OWORD *)(a6 + 192);
  LOBYTE(v125[1]) = *(unsigned char *)(a6 + 208);
  long long v40 = *(_OWORD *)(a6 + 112);
  long long v119 = *(_OWORD *)(a6 + 96);
  long long v120 = v40;
  long long v41 = *(_OWORD *)(a6 + 144);
  long long v121 = *(_OWORD *)(a6 + 128);
  long long v122 = v41;
  long long v42 = *(_OWORD *)(a6 + 48);
  long long v115 = *(_OWORD *)(a6 + 32);
  long long v116 = v42;
  long long v43 = *(_OWORD *)(a6 + 80);
  long long v117 = *(_OWORD *)(a6 + 64);
  long long v118 = v43;
  long long v44 = *(_OWORD *)(a6 + 16);
  long long v113 = *(_OWORD *)a6;
  long long v114 = v44;
  sub_1ACA64A2C(a6);
  uint64_t v45 = sub_1ACBFDB7C(&v113);
  if (v45)
  {
    uint64_t v46 = (uint64_t)v45;
    if (v45[2])
    {
      uint64_t v47 = sub_1ACE75498();
      os_log_type_t v48 = sub_1ACE76C08();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v49 = 0;
        _os_log_impl(&dword_1AC9D5000, v47, v48, "No episodes in MAPI response. Using content from Siri sidepack", v49, 2u);
        MEMORY[0x1AD11B340](v49, -1, -1);
      }

      sub_1ACA62728((uint64_t)v98);
      sub_1ACA50E14((uint64_t)v98, (uint64_t)&v113, &qword_1E99F0F40);
      sub_1ACABEBF4(v46, (uint64_t)&v113, 0, &v99);
      long long v123 = v109;
      long long v124 = v110;
      v125[0] = v111[0];
      *(_OWORD *)((char *)v125 + 10) = *(_OWORD *)((char *)v111 + 10);
      long long v119 = v105;
      long long v120 = v106;
      long long v121 = v107;
      long long v122 = v108;
      long long v115 = v101;
      long long v116 = v102;
      long long v117 = v103;
      long long v118 = v104;
      long long v113 = v99;
      long long v114 = v100;
      sub_1ACA63474((uint64_t)&v113);
      sub_1ACA50E14((uint64_t)&v113, (uint64_t)v112, &qword_1E99F0F48);
      goto LABEL_67;
    }
    swift_bridgeObjectRelease();
  }
  id v50 = a5;
  id v51 = a5;
  id v52 = a5;
  uint64_t v53 = sub_1ACE75498();
  os_log_type_t v54 = sub_1ACE76BE8();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = (uint8_t *)swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    *(void *)&long long v113 = v56;
    *(_DWORD *)uint64_t v55 = 136315138;
    v112[0] = a5;
    id v57 = a5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    uint64_t v58 = sub_1ACE76228();
    v112[0] = sub_1ACA3189C(v58, v59, (uint64_t *)&v113);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AC9D5000, v53, v54, "Received error when fetching from MAPI: %s", v55, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v56, -1, -1);
    MEMORY[0x1AD11B340](v55, -1, -1);
  }
  else
  {
  }
  long long v60 = v91;
  *(void *)&long long v113 = a5;
  sub_1ACA63458((uint64_t)&v113);
  sub_1ACA50E14((uint64_t)&v113, (uint64_t)v112, &qword_1E99F0F48);
  id v61 = a5;
  v60(v112);
}

uint64_t sub_1ACAB0A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1ACAB0AC0, 0, 0);
}

uint64_t sub_1ACAB0AC0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  if (*(unsigned char *)(v1 + *(int *)(v2 + 172)) != 1)
  {
    if (qword_1E99EFF10 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1ACE754C8();
    __swift_project_value_buffer(v8, (uint64_t)qword_1E99F2C40);
    unsigned int v4 = sub_1ACE75498();
    os_log_type_t v5 = sub_1ACE76C08();
    if (!os_log_type_enabled(v4, v5)) {
      goto LABEL_12;
    }
    id v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v6 = 0;
    char v7 = "Item is not shallow, no need to refresh it from the network. Returning original.";
    goto LABEL_11;
  }
  if (*(unsigned char *)(v1 + 56))
  {
    if (qword_1E99EFF10 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1ACE754C8();
    __swift_project_value_buffer(v3, (uint64_t)qword_1E99F2C40);
    unsigned int v4 = sub_1ACE75498();
    os_log_type_t v5 = sub_1ACE76C08();
    if (!os_log_type_enabled(v4, v5)) {
      goto LABEL_12;
    }
    id v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v6 = 0;
    char v7 = "Item doesn't have an adam id. Unable to refetch from the network. Returning original.";
LABEL_11:
    _os_log_impl(&dword_1AC9D5000, v4, v5, v7, v6, 2u);
    MEMORY[0x1AD11B340](v6, -1, -1);
LABEL_12:
    uint64_t v9 = *(void *)(v0 + 16);
    uint64_t v10 = *(void *)(v0 + 24);

    sub_1ACAB22F4(v10, v9, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v9, 0, 1, v2);
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  uint64_t v13 = *(void *)(v1 + 48);
  uint64_t v14 = swift_task_alloc();
  *(void *)(v0 + 48) = v14;
  long long v15 = *(_OWORD *)(v0 + 32);
  *(void *)(v14 + 16) = v13;
  *(_OWORD *)(v14 + 24) = v15;
  *(void *)(v14 + 40) = v1;
  long long v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  *long long v16 = v0;
  v16[1] = sub_1ACAB0DC8;
  uint64_t v18 = *(void *)(v0 + 16);
  return MEMORY[0x1F41880D8](v18, 0, 0, 0xD000000000000013, 0x80000001ACEC5D90, sub_1ACAB1DE0, v14, v17);
}

uint64_t sub_1ACAB0DC8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1ACAB0ED8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v46 = (void *)a5;
  uint64_t v47 = a1;
  uint64_t v48 = a4;
  id v52 = a3;
  uint64_t v6 = type metadata accessor for MediaRequest.Params();
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v50 = *(void *)(v51 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v49 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v53 = (uint64_t)&v46 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F38);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x1F4188790](v14 - 8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7694A0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1ACE843F0;
  *(void *)(v17 + 32) = a2;
  v82[0] = v17;
  memset(&v82[1], 0, 24);
  v83[0] = 1;
  memset(&v83[8], 0, 96);
  uint64_t v84 = 0;
  BYTE2(v85) = 0;
  LOWORD(v85) = 2;
  *(void *)&long long v87 = 0;
  uint64_t v86 = 0;
  WORD4(v87) = 2;
  long long v88 = 0u;
  long long v89 = 0u;
  char v90 = -1;
  char v81 = -1;
  long long v74 = *(_OWORD *)&v83[64];
  long long v75 = *(_OWORD *)&v83[80];
  long long v76 = 0uLL;
  long long v77 = v85;
  long long v70 = *(_OWORD *)v83;
  long long v71 = *(_OWORD *)&v83[16];
  long long v72 = *(_OWORD *)&v83[32];
  long long v73 = *(_OWORD *)&v83[48];
  long long v68 = (unint64_t)v17;
  long long v69 = 0u;
  long long v78 = v87;
  long long v79 = 0u;
  long long v80 = 0u;
  sub_1ACAB22F4((uint64_t)v46, (uint64_t)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PodcastsMediaLibrary.MediaItem);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v47, v10);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v19 = (v16 + *(unsigned __int8 *)(v11 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v20 = swift_allocObject();
  sub_1ACAB2360((uint64_t)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v18, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  uint64_t v47 = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v20 + v19, v13, v10);
  objc_msgSend(v52, sel_setURLProtocolDelegate_, v48);
  long long v64 = v78;
  long long v65 = v79;
  long long v66 = v80;
  char v67 = v81;
  long long v60 = v74;
  long long v61 = v75;
  long long v62 = v76;
  long long v63 = v77;
  long long v56 = v70;
  long long v57 = v71;
  long long v58 = v72;
  long long v59 = v73;
  long long v54 = v68;
  long long v55 = v69;
  uint64_t v21 = v53;
  sub_1ACDD1E28(v53);
  uint64_t v22 = swift_allocObject();
  long long v23 = v79;
  *(_OWORD *)(v22 + 176) = v78;
  *(_OWORD *)(v22 + 192) = v23;
  *(_OWORD *)(v22 + 208) = v80;
  *(unsigned char *)(v22 + 224) = v81;
  long long v24 = v75;
  *(_OWORD *)(v22 + 112) = v74;
  *(_OWORD *)(v22 + 128) = v24;
  long long v25 = v77;
  *(_OWORD *)(v22 + 144) = v76;
  *(_OWORD *)(v22 + 160) = v25;
  long long v26 = v71;
  *(_OWORD *)(v22 + 48) = v70;
  *(_OWORD *)(v22 + 64) = v26;
  long long v27 = v73;
  *(_OWORD *)(v22 + 80) = v72;
  *(_OWORD *)(v22 + 96) = v27;
  long long v28 = v69;
  *(_OWORD *)(v22 + 16) = v68;
  *(_OWORD *)(v22 + 32) = v28;
  *(void *)(v22 + 232) = sub_1ACAB21AC;
  *(void *)(v22 + 240) = v20;
  uint64_t v29 = swift_allocObject();
  uint64_t v48 = v29;
  swift_unknownObjectWeakInit();
  uint64_t v30 = (void *)swift_allocObject();
  uint64_t v46 = v30;
  _OWORD v30[2] = v29;
  v30[3] = sub_1ACAB22AC;
  v30[4] = v22;
  sub_1ACE77B88();
  uint64_t v31 = v49;
  sub_1ACAB22F4(v21, v49, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  unint64_t v32 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  unint64_t v33 = (v50 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v34 + 79) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_1ACAB2360(v31, v36 + v32, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  *(void *)(v36 + v33) = MEMORY[0x1E4FBC860];
  unint64_t v37 = v36 + v34;
  *(void *)(v37 + 64) = v58;
  long long v38 = v57;
  *(_OWORD *)(v37 + 32) = v56;
  *(_OWORD *)(v37 + 48) = v38;
  long long v39 = v55;
  *(_OWORD *)unint64_t v37 = v54;
  *(_OWORD *)(v37 + 16) = v39;
  id v40 = v52;
  *(void *)(v36 + v35) = v52;
  long long v41 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v36 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v42 = (uint64_t)v46;
  *long long v41 = sub_1ACA394A4;
  v41[1] = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))v42;
  sub_1ACA64A2C((uint64_t)v82);
  swift_retain();
  swift_retain();
  swift_retain();
  id v43 = v40;
  swift_retain();
  uint64_t v44 = v53;
  sub_1ACB0443C(v53, 0, (uint64_t)sub_1ACA39594, v36);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1ACAB2A5C(v44, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  swift_release();
  return sub_1ACA64E8C((uint64_t)v82);
}

uint64_t sub_1ACAB14E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v50 = (uint8_t *)a2;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F17D8);
  uint64_t v5 = MEMORY[0x1F4188790](v56);
  uint64_t v51 = (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v49 - v8;
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v49 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v49 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v52 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)&v49 - v18;
  uint64_t v20 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v54 = *(void *)(v20 - 8);
  uint64_t v55 = v20;
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  long long v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  long long v25 = (char *)&v49 - v24;
  sub_1ACA50E14(a1, (uint64_t)v60, &qword_1E99F0F48);
  sub_1ACA50E14((uint64_t)v60, (uint64_t)v61, &qword_1E99F0F48);
  if (sub_1ACAB2754((uint64_t)v61) == 1)
  {
    uint64_t v26 = *(void *)nullsub_1(v61);
    sub_1ACA50E14((uint64_t)v60, (uint64_t)v58, &qword_1E99F0F48);
    long long v27 = *(void **)nullsub_1(v58);
    sub_1ACA63448(v27);
    if (qword_1E99EFF10 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1ACE754C8();
    __swift_project_value_buffer(v28, (uint64_t)qword_1E99F2C40);
    sub_1ACA50E14((uint64_t)v60, (uint64_t)v59, &qword_1E99F0F48);
    uint64_t v29 = (id *)nullsub_1(v59);
    sub_1ACA63448(*v29);
    sub_1ACA63448(v27);
    uint64_t v30 = sub_1ACE75498();
    os_log_type_t v31 = sub_1ACE76C08();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v53 = a3;
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      unint64_t v33 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v32 = 138412290;
      uint64_t v50 = v32 + 4;
      sub_1ACAB2A08();
      swift_allocError();
      *unint64_t v34 = v26;
      sub_1ACA63448(v27);
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v57 = v35;
      sub_1ACE76FF8();
      void *v33 = v35;
      sub_1ACAB275C((uint64_t)v60);
      sub_1ACAB275C((uint64_t)v60);
      _os_log_impl(&dword_1AC9D5000, v30, v31, "Received error refreshing item. Returning original shallow item. %@", v32, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v33, -1, -1);
      MEMORY[0x1AD11B340](v32, -1, -1);
    }
    else
    {
      sub_1ACAB275C((uint64_t)v60);
      sub_1ACAB275C((uint64_t)v60);
    }

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v9, 1, 1, v55);
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = v51;
    sub_1ACAB29A0((uint64_t)v9, v51);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F38);
      sub_1ACE766E8();
    }
    else
    {
      sub_1ACA50E14(v46, v52, &qword_1EB76EFA0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F38);
      sub_1ACE766F8();
    }
    sub_1ACAB275C((uint64_t)v60);
    return sub_1ACA50E78((uint64_t)v9, &qword_1E99F17D8);
  }
  else
  {
    uint64_t v53 = a3;
    uint64_t v36 = nullsub_1(v61);
    sub_1ACA50E14((uint64_t)v60, (uint64_t)v59, &qword_1E99F0F48);
    uint64_t v37 = nullsub_1(v59);
    sub_1ACA64BF4(v37);
    if (qword_1E99EFF10 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_1ACE754C8();
    __swift_project_value_buffer(v38, (uint64_t)qword_1E99F2C40);
    long long v39 = sub_1ACE75498();
    os_log_type_t v40 = sub_1ACE76C08();
    if (os_log_type_enabled(v39, v40))
    {
      long long v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v41 = 0;
      _os_log_impl(&dword_1AC9D5000, v39, v40, "Item successfully refreshed", v41, 2u);
      MEMORY[0x1AD11B340](v41, -1, -1);
    }

    uint64_t v42 = v54;
    if (*(void *)(*(void *)v36 + 16))
    {
      sub_1ACAB22F4(*(void *)v36 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80)), (uint64_t)v19, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      id v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
      uint64_t v44 = v19;
      uint64_t v45 = 0;
    }
    else
    {
      id v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56);
      uint64_t v44 = v19;
      uint64_t v45 = 1;
    }
    uint64_t v48 = v55;
    v43(v44, v45, 1, v55);
    sub_1ACAB22F4((uint64_t)v50, (uint64_t)v23, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v19, 1, v48) == 1)
    {
      sub_1ACAB2360((uint64_t)v23, (uint64_t)v25, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      sub_1ACA50E78((uint64_t)v19, &qword_1EB76EFA0);
    }
    else
    {
      sub_1ACAB2A5C((uint64_t)v23, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      sub_1ACAB2360((uint64_t)v19, (uint64_t)v25, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    }
    sub_1ACAB22F4((uint64_t)v25, (uint64_t)v14, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    v43(v14, 0, 1, v48);
    swift_storeEnumTagMultiPayload();
    sub_1ACAB29A0((uint64_t)v14, (uint64_t)v12);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F38);
      sub_1ACE766E8();
    }
    else
    {
      sub_1ACA50E14((uint64_t)v12, v52, &qword_1EB76EFA0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F38);
      sub_1ACE766F8();
    }
    sub_1ACAB275C((uint64_t)v60);
    sub_1ACA50E78((uint64_t)v14, &qword_1E99F17D8);
    return sub_1ACAB2A5C((uint64_t)v25, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  }
}

uint64_t sub_1ACAB1CDC(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_1ACAAFA28(a1, a2, a3, *(void **)v3, *(void *)(v3 + 8));
}

BOOL sub_1ACAB1CE4(int8x16_t *a1)
{
  unsigned int v1 = a1[2].u8[0];
  BOOL result = 1;
  if (v1 >= 2)
  {
    if (v1 != 8) {
      return 0;
    }
    int8x16_t v3 = vorrq_s8(*a1, a1[1]);
    if (vorr_s8(*(int8x8_t *)v3.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL))) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1ACAB1D20(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *(void *)uint64_t v6 = v3;
  *(_OWORD *)(v6 + 32) = *v2;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 8) = sub_1ACA50B84;
  return MEMORY[0x1F4188298](sub_1ACAB0AC0, 0, 0);
}

uint64_t sub_1ACAB1DE0(uint64_t a1)
{
  return sub_1ACAB0ED8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1ACAB1DEC()
{
  uint64_t v1 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v17 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v15 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F38);
  uint64_t v2 = *(void *)(v18 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v19 = v0;
  uint64_t v16 = (v17 + 16) & ~v17;
  uint64_t v3 = v0 + v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v16 + v1[12];
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = v3 + v1[16];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v9 = v3 + v1[20];
  uint64_t v10 = sub_1ACE750A8();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v3 + v1[36];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v19 + ((v16 + v15 + v14) & ~v14), v18);
  return swift_deallocObject();
}

uint64_t sub_1ACAB21AC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F38) - 8);
  uint64_t v7 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return sub_1ACAB14E0(a1, v1 + v4, v7);
}

void sub_1ACAB22AC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1ACAAFDEC(a1, a2, a3, a4, a5, v5 + 16, *(void (**)(void))(v5 + 232), *(void *)(v5 + 240));
}

uint64_t sub_1ACAB22B8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACAB22F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACAB2360(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1ACAB23EC(unint64_t a1, int *a2)
{
  uint64_t v3 = v2;
  unint64_t v33 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v28 = *(void *)(v32 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v32);
  uint64_t v31 = (uint64_t)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v27 = (uint64_t)&v25 - v10;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1ACE77508();
    if (v11) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
    {
LABEL_3:
      uint64_t v25 = v3;
      uint64_t v29 = (void (**)(char *, void, uint64_t, uint64_t))(v28 + 56);
      unint64_t v30 = a1 & 0xC000000000000001;
      uint64_t v12 = (unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      unint64_t v13 = MEMORY[0x1E4FBC860];
      uint64_t v14 = 4;
      unint64_t v26 = a1;
      while (1)
      {
        uint64_t v15 = v14 - 4;
        if (v30)
        {
          id v16 = (id)MEMORY[0x1AD119490](v14 - 4, a1);
          uint64_t v3 = v14 - 3;
          if (__OFADD__(v15, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          id v16 = *(id *)(a1 + 8 * v14);
          uint64_t v3 = v14 - 3;
          if (__OFADD__(v15, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        uint64_t v17 = (char *)v16;
        uint64_t v18 = v33;
        uint64_t v19 = v33;
        sub_1ACC55C1C(v17, v18, (uint64_t)v7);
        uint64_t v20 = v32;
        (*v29)(v7, 0, 1, v32);

        if ((*v12)(v7, 1, v20) == 1)
        {
          sub_1ACA50E78((uint64_t)v7, &qword_1EB76EFA0);
        }
        else
        {
          uint64_t v21 = v27;
          sub_1ACAB2360((uint64_t)v7, v27, type metadata accessor for PodcastsMediaLibrary.MediaItem);
          sub_1ACAB2360(v21, v31, type metadata accessor for PodcastsMediaLibrary.MediaItem);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v13 = sub_1ACA418BC(0, *(void *)(v13 + 16) + 1, 1, v13);
          }
          unint64_t v23 = *(void *)(v13 + 16);
          unint64_t v22 = *(void *)(v13 + 24);
          if (v23 >= v22 >> 1) {
            unint64_t v13 = sub_1ACA418BC(v22 > 1, v23 + 1, 1, v13);
          }
          *(void *)(v13 + 16) = v23 + 1;
          sub_1ACAB2360(v31, v13+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v23, type metadata accessor for PodcastsMediaLibrary.MediaItem);
          a1 = v26;
        }
        ++v14;
        if (v3 == v11)
        {
          swift_bridgeObjectRelease();
          return v13;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1ACAB2754(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 218);
}

uint64_t sub_1ACAB275C(uint64_t a1)
{
  sub_1ACAB27E0(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void **)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(_OWORD *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(_WORD *)(a1 + 216),
    HIBYTE(*(_WORD *)(a1 + 216)),
    *(unsigned char *)(a1 + 218));
  return a1;
}

void sub_1ACAB27E0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unsigned __int8 a28,char a29,char a30)
{
  if (a30)
  {
    sub_1ACA63464(a1);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1ACA63588(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28);
  }
}

uint64_t sub_1ACAB29A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F17D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ACAB2A08()
{
  unint64_t result = qword_1E99F17E0;
  if (!qword_1E99F17E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F17E0);
  }
  return result;
}

uint64_t sub_1ACAB2A5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t objectdestroy_4Tm()
{
  sub_1ACA63688(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + 160) != 2) {
    sub_1ACA63738(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(unsigned char *)(v0 + 144));
  }
  int v1 = *(unsigned __int8 *)(v0 + 224);
  if (v1 != 255) {
    sub_1ACA63688(*(void *)(v0 + 192), *(void *)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 216), v1);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t MTPodcast.episodeUserFilter.getter()
{
  int v1 = v0;
  objc_msgSend(v0, sel_willAccessValueForKey_, @"episodeUserFilter");
  if (objc_msgSend(v0, sel_primitiveValueForKey_, @"episodeUserFilter"))
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1ACA9D6FC((uint64_t)v6, (uint64_t)v7);
  if (!v7[3])
  {
    sub_1ACA65828((uint64_t)v7);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    uint64_t v3 = 0;
    goto LABEL_9;
  }
  sub_1ACE748C8();
  swift_allocObject();
  sub_1ACE748B8();
  sub_1ACAB2CF4();
  sub_1ACE748A8();
  sub_1ACA50850(v4, v5);
  swift_release();
  uint64_t v3 = v7[0];
LABEL_9:
  objc_msgSend(v1, sel_didAccessValueForKey_, @"episodeUserFilter");
  return v3;
}

unint64_t sub_1ACAB2CF4()
{
  unint64_t result = qword_1E99F17E8;
  if (!qword_1E99F17E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F17E8);
  }
  return result;
}

uint64_t MTPodcast.episodeUserFilter.setter(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  int v6 = ~a2;
  objc_msgSend(v3, sel_willChangeValueForKey_, @"episodeUserFilter");
  if (v6)
  {
    sub_1ACE74928();
    swift_allocObject();
    sub_1ACA63B70(a1, a2);
    sub_1ACE74918();
    sub_1ACAB2F04();
    uint64_t v7 = sub_1ACE74908();
    unint64_t v9 = v8;
    swift_release();
    sub_1ACAB2EDC(a1, a2);
    sub_1ACA3985C(v7, v9);
    uint64_t v10 = sub_1ACE74F68();
    sub_1ACA50850(v7, v9);
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v7 = 0;
    unint64_t v9 = 0xF000000000000000;
  }
  objc_msgSend(v3, sel_setPrimitiveValue_forKey_, v10, @"episodeUserFilter");
  swift_unknownObjectRelease();
  uint64_t v11 = @"episodeUserFilter";
  objc_msgSend(v3, sel_didChangeValueForKey_, v11);
  sub_1ACAB2EDC(a1, a2);

  return sub_1ACAB2EF0(v7, v9);
}

uint64_t sub_1ACAB2EDC(uint64_t a1, char a2)
{
  if (a2 != -1) {
    return sub_1ACA63830(a1, a2);
  }
  return a1;
}

uint64_t sub_1ACAB2EF0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1ACA50850(a1, a2);
  }
  return a1;
}

unint64_t sub_1ACAB2F04()
{
  unint64_t result = qword_1E99F17F0;
  if (!qword_1E99F17F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F17F0);
  }
  return result;
}

uint64_t (*MTPodcast.episodeUserFilter.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  *(void *)a1 = MTPodcast.episodeUserFilter.getter();
  *(unsigned char *)(a1 + 8) = v3;
  return sub_1ACAB2FA4;
}

uint64_t sub_1ACAB2FA4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  if ((a2 & 1) == 0) {
    return MTPodcast.episodeUserFilter.setter(*(void *)a1, v3);
  }
  sub_1ACAB3024(*(void *)a1, v3);
  MTPodcast.episodeUserFilter.setter(v2, v3);
  return sub_1ACAB2EDC(v2, v3);
}

uint64_t sub_1ACAB3024(uint64_t a1, char a2)
{
  if (a2 != -1) {
    return sub_1ACA63B70(a1, a2);
  }
  return a1;
}

uint64_t sub_1ACAB3038@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = MTPodcast.episodeUserFilter.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3;
  return result;
}

uint64_t sub_1ACAB3068(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  char v2 = *(unsigned char *)(a1 + 8);
  sub_1ACAB3024(*(void *)a1, v2);
  return MTPodcast.episodeUserFilter.setter(v1, v2);
}

uint64_t MetricsContentKind.rawValue.getter(uint64_t a1)
{
  return a1;
}

unint64_t MetricsContentKind.debugDescription.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t sub_1ACAB3188()
{
  return MetricsContentKind.debugDescription.getter();
}

uint64_t MetricsContentKind.description.getter(uint64_t a1)
{
  return a1;
}

uint64_t MetricsContentKind.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_1ACE77858();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsContentKind.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE778D8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsContentKind.channel.getter()
{
  return 0x6C656E6E616863;
}

uint64_t static MetricsContentKind.episode.getter()
{
  return 0x4574736163646F70;
}

uint64_t static MetricsContentKind.show.getter()
{
  return 0x74736163646F70;
}

unint64_t sub_1ACAB337C()
{
  unint64_t result = qword_1E99F17F8;
  if (!qword_1E99F17F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F17F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsContentKind()
{
  return &type metadata for MetricsContentKind;
}

id MTCoalescableWorkController.init(qos:identifier:)(uint64_t a1)
{
  uint64_t v2 = sub_1ACE75DE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1ACE75E38();
  uint64_t v7 = sub_1ACE75DD8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  unint64_t v8 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(ObjCClassFromMetadata, sel_controllerWithQosClass_identifier_, v7, v8);

  uint64_t v10 = sub_1ACE75E48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
  return v9;
}

uint64_t BinaryFloatingPoint.safeInt.getter(uint64_t a1, uint64_t a2)
{
  return sub_1ACAB35B0(a1, a2, (void (*)(uint64_t))sub_1ACA339A4, MEMORY[0x1E4FBB550], 7630409, 0xE300000000000000);
}

uint64_t BinaryFloatingPoint.safeInt64.getter(uint64_t a1, uint64_t a2)
{
  return sub_1ACAB35B0(a1, a2, (void (*)(uint64_t))sub_1ACAB3848, MEMORY[0x1E4FBC1C8], 0x3436746E49, 0xE500000000000000);
}

uint64_t sub_1ACAB35B0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  v21[0] = a5;
  v21[1] = a6;
  unint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v7 = v6;
  uint64_t v9 = *(void *)(a1 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v21 - v13;
  char v15 = sub_1ACE760C8();
  id v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16(v14, v7, a1);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, a1);
    return 0;
  }
  char v17 = sub_1ACE760D8();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v14, a1);
  if (v17) {
    return 0;
  }
  uint64_t v20 = ((uint64_t (*)(char *, uint64_t, uint64_t))v16)(v12, v7, a1);
  v22(v20);
  sub_1ACE77468();
  if (v25)
  {
    uint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    sub_1ACE77268();
    sub_1ACE77D48();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    sub_1ACE762C8();
    sub_1ACE762C8();
    uint64_t result = sub_1ACE77498();
    __break(1u);
  }
  else
  {
    v18(v12, a1);
    return v24;
  }
  return result;
}

unint64_t sub_1ACAB3848()
{
  unint64_t result = qword_1E99F1800;
  if (!qword_1E99F1800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1800);
  }
  return result;
}

uint64_t sub_1ACAB389C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR___MTContentKeyRequest_requestData);
  swift_beginAccess();
  unint64_t v3 = v2[1];
  uint64_t v4 = MEMORY[0x1E4FBC868];
  if (v3 >> 60 != 15)
  {
    uint64_t v5 = MEMORY[0x1E4FBB1A0];
    uint64_t v6 = *v2;
    sub_1ACA3985C(v6, v3);
    uint64_t v7 = sub_1ACE74F78();
    uint64_t v9 = v8;
    sub_1ACAB2EF0(v6, v3);
    sub_1ACE771F8();
    uint64_t v23 = v5;
    *(void *)&long long v22 = v7;
    *((void *)&v22 + 1) = v9;
    sub_1ACA3AA44(&v22, v21);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1ACD0C840(v21, (uint64_t)v24, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_1ACA6A0F8((uint64_t)v24);
  }
  *(void *)&long long v22 = 25705;
  *((void *)&v22 + 1) = 0xE200000000000000;
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  sub_1ACE771F8();
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR___MTContentKeyRequest_requestID);
  uint64_t v23 = MEMORY[0x1E4FBB550];
  *(void *)&long long v22 = v12;
  sub_1ACA3AA44(&v22, v21);
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_1ACD0C840(v21, (uint64_t)v24, v13);
  swift_bridgeObjectRelease();
  sub_1ACA6A0F8((uint64_t)v24);
  if (*(void *)(v1 + OBJC_IVAR___MTContentKeyRequest_requestType) != 3)
  {
    *(void *)&long long v22 = 6910581;
    *((void *)&v22 + 1) = 0xE300000000000000;
    sub_1ACE771F8();
    uint64_t v14 = *(void *)(v1 + OBJC_IVAR___MTContentKeyRequest_keyIdentifier);
    uint64_t v15 = *(void *)(v1 + OBJC_IVAR___MTContentKeyRequest_keyIdentifier + 8);
    uint64_t v23 = v11;
    *(void *)&long long v22 = v14;
    *((void *)&v22 + 1) = v15;
    sub_1ACA3AA44(&v22, v21);
    swift_bridgeObjectRetain();
    char v16 = swift_isUniquelyReferenced_nonNull_native();
    sub_1ACD0C840(v21, (uint64_t)v24, v16);
    swift_bridgeObjectRelease();
    sub_1ACA6A0F8((uint64_t)v24);
  }
  *(void *)&long long v22 = 0x64692D6D616461;
  *((void *)&v22 + 1) = 0xE700000000000000;
  sub_1ACE771F8();
  uint64_t v17 = *(void *)(v1 + OBJC_IVAR___MTContentKeyRequest_adamId);
  uint64_t v18 = *(void *)(v1 + OBJC_IVAR___MTContentKeyRequest_adamId + 8);
  uint64_t v23 = v11;
  *(void *)&long long v22 = v17;
  *((void *)&v22 + 1) = v18;
  sub_1ACA3AA44(&v22, v21);
  swift_bridgeObjectRetain();
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  sub_1ACD0C840(v21, (uint64_t)v24, v19);
  swift_bridgeObjectRelease();
  sub_1ACA6A0F8((uint64_t)v24);
  return v4;
}

uint64_t sub_1ACAB3B8C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1848);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAB5024();
  sub_1ACE77C78();
  LOBYTE(v14) = 0;
  sub_1ACE77778();
  if (!v4)
  {
    uint64_t v14 = v12;
    char v13 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1818);
    sub_1ACAB5174(&qword_1E99F1850, &qword_1E99F1818, (void (*)(void))sub_1ACAB5120);
    sub_1ACE77728();
    uint64_t v14 = a4;
    char v13 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1830);
    sub_1ACAB5174(&qword_1E99F1860, &qword_1E99F1830, (void (*)(void))sub_1ACAB51E0);
    sub_1ACE77728();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1ACAB3DDC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF4B90(*a1, *a2);
}

uint64_t sub_1ACAB3DE8()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAB3E9C()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACAB3F3C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAB3FEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACAB4CC0();
  *a1 = result;
  return result;
}

void sub_1ACAB401C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0x80000001ACEC4710;
  unint64_t v5 = 0xD000000000000011;
  if (v2 != 1)
  {
    unint64_t v5 = 0x65722D65636E6F6ELL;
    unint64_t v4 = 0xEF7365736E6F7073;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E6F6973726576;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1ACAB408C()
{
  unint64_t v1 = 0xD000000000000011;
  if (*v0 != 1) {
    unint64_t v1 = 0x65722D65636E6F6ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E6F6973726576;
  }
}

uint64_t sub_1ACAB40F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACAB4CC0();
  *a1 = result;
  return result;
}

uint64_t sub_1ACAB4120(uint64_t a1)
{
  unint64_t v2 = sub_1ACAB5024();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACAB415C(uint64_t a1)
{
  unint64_t v2 = sub_1ACAB5024();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACAB4198@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1ACAB4D58(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1ACAB41C8(void *a1)
{
  return sub_1ACAB3B8C(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1ACAB41E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = a5;
  v12[1] = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F18B0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAB5D50();
  sub_1ACE77C78();
  char v15 = 0;
  sub_1ACE77778();
  if (!v5)
  {
    char v14 = 1;
    sub_1ACE77778();
    char v13 = 2;
    sub_1ACE776E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1ACAB4388()
{
  uint64_t v1 = 0x737574617473;
  if (*v0 != 1) {
    uint64_t v1 = 0x65636E6F6ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1ACAB43D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACAB5718(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACAB43F8(uint64_t a1)
{
  unint64_t v2 = sub_1ACAB5D50();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACAB4434(uint64_t a1)
{
  unint64_t v2 = sub_1ACAB5D50();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACAB4470@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1ACAB5848(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1ACAB44A0(void *a1)
{
  return sub_1ACAB41E8(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1ACAB44C0(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F18A8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAB5CFC();
  sub_1ACE77C78();
  v8[15] = 0;
  sub_1ACE77778();
  if (!v1)
  {
    v8[14] = 1;
    sub_1ACE77778();
    v8[13] = 2;
    sub_1ACE77708();
    _OWORD v8[12] = 3;
    sub_1ACE776E8();
    v8[11] = 4;
    sub_1ACE77708();
    void v8[10] = 5;
    sub_1ACE776F8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1ACAB46C8(char *a1, char *a2)
{
  return sub_1ACCF42E8(*a1, *a2);
}

uint64_t sub_1ACAB46D4()
{
  return sub_1ACAE577C();
}

uint64_t sub_1ACAB46DC()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACAB47DC()
{
  return sub_1ACD23340();
}

uint64_t sub_1ACAB47E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACAB4D0C();
  *a1 = result;
  return result;
}

void sub_1ACAB4814(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE200000000000000;
  uint64_t v3 = 25705;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x737574617473;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x66612D77656E6572;
      *(void *)(a1 + 8) = 0xEB00000000726574;
      break;
    case 3:
      *(void *)a1 = 6515555;
      *(void *)(a1 + 8) = 0xE300000000000000;
      break;
    case 4:
      *(void *)a1 = 0x6974617269707865;
      *(void *)(a1 + 8) = 0xEF656D69742D6E6FLL;
      break;
    case 5:
      strcpy((char *)a1, "is-low-value");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1ACAB48F4()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x737574617473;
      break;
    case 2:
      uint64_t result = 0x66612D77656E6572;
      break;
    case 3:
      uint64_t result = 6515555;
      break;
    case 4:
      uint64_t result = 0x6974617269707865;
      break;
    case 5:
      uint64_t result = 0x762D776F6C2D7369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACAB49C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACAB4D0C();
  *a1 = result;
  return result;
}

void sub_1ACAB49E8(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1ACAB49F4(uint64_t a1)
{
  unint64_t v2 = sub_1ACAB5CFC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACAB4A30(uint64_t a1)
{
  unint64_t v2 = sub_1ACAB5CFC();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1ACAB4A6C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1ACAB5A20(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 10);
    *(_OWORD *)((char *)a2 + 42) = *(_OWORD *)((char *)v7 + 10);
  }
  return result;
}

uint64_t sub_1ACAB4AB8(void *a1)
{
  return sub_1ACAB44C0(a1);
}

uint64_t destroy for ContentKeyRequestResponse()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s18PodcastsFoundation25ContentKeyRequestResponseVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ContentKeyRequestResponse(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContentKeyRequestResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentKeyRequestResponse(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentKeyRequestResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)double result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentKeyRequestResponse()
{
  return &type metadata for ContentKeyRequestResponse;
}

uint64_t sub_1ACAB4CC0()
{
  unint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1ACAB4D0C()
{
  unint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_1ACAB4D58(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1808);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1ACAB5024();
  sub_1ACE77C48();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    LOBYTE(v11) = 0;
    uint64_t v7 = sub_1ACE77688();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1818);
    char v10 = 1;
    sub_1ACAB5174(&qword_1E99F1820, &qword_1E99F1818, (void (*)(void))sub_1ACAB5078);
    sub_1ACE77638();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1830);
    char v10 = 2;
    sub_1ACAB5174(&qword_1E99F1838, &qword_1E99F1830, (void (*)(void))sub_1ACAB50CC);
    swift_bridgeObjectRetain();
    sub_1ACE77638();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1ACAB5024()
{
  unint64_t result = qword_1E99F1810;
  if (!qword_1E99F1810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1810);
  }
  return result;
}