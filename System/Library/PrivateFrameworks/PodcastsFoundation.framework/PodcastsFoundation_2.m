id sub_1ACB52D24(uint64_t a1, uint64_t a2, char *a3)
{
  objc_super v4;

  *(void *)&a3[OBJC_IVAR___PFScheduledOperationScheduler_schedule] = a1;
  *(void *)&a3[OBJC_IVAR___PFScheduledOperationScheduler_storage] = a2;
  v4.receiver = a3;
  v4.super_class = (Class)type metadata accessor for ScheduledOperationScheduler();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for ScheduledOperationScheduler()
{
  return self;
}

uint64_t type metadata accessor for ScheduledOperationConstants()
{
  return self;
}

uint64_t method lookup function for ScheduledOperationScheduler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ScheduledOperationScheduler);
}

uint64_t dispatch thunk of ScheduledOperationScheduler.__allocating_init(schedule:scheduleStorage:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ScheduledOperationScheduler.evaluate(operation:_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t sub_1ACB52E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v33 = a4;
  uint64_t v7 = sub_1ACE750A8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  v17 = (char *)&v31 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v35 = a2;
  uint64_t v36 = (uint64_t)&v31 - v18;
  v19 = *(void **)(a3 + OBJC_IVAR___PFScheduledOperationScheduler_storage);
  uint64_t v34 = a1;
  v20 = (void *)sub_1ACE76178();
  id v32 = v19;
  id v21 = objc_msgSend(v19, sel_lastExecutionOf_, v20);

  if (v21)
  {
    sub_1ACE75078();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v17, 1, 1, v7);
  }
  uint64_t v22 = v36;
  sub_1ACA909B4((uint64_t)v17, v36);
  v23 = *(void **)(a3 + OBJC_IVAR___PFScheduledOperationScheduler_schedule);
  sub_1ACE75088();
  v24 = (void *)sub_1ACE75008();
  v25 = *(void (**)(char *, uint64_t))(v8 + 8);
  v25(v10, v7);
  sub_1ACA72A5C(v22, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7) == 1)
  {
    v26 = 0;
  }
  else
  {
    v26 = (void *)sub_1ACE75008();
    v25(v14, v7);
  }
  unsigned int v27 = objc_msgSend(v23, sel_shouldExecuteOn_previousExecution_, v24, v26);

  if (v27)
  {
    (*(void (**)(void))(v33 + 16))();
    v28 = (void *)sub_1ACE76178();
    sub_1ACE75088();
    v29 = (void *)sub_1ACE75008();
    v25(v10, v7);
    objc_msgSend(v32, sel_recordExecutionOf_at_, v28, v29);
  }
  return sub_1ACA3E034(v36);
}

SHCatalog_optional __swiftcall TranscriptData.catalog()()
{
  if (*(unsigned char *)(v0 + 64) == 1)
  {
    v1 = 0;
  }
  else
  {
    v1 = *(objc_class **)v0;
    id v2 = *(id *)v0;
  }
  v4 = v1;
  result.value.super.isa = v4;
  result.is_nil = v3;
  return result;
}

uint64_t TranscriptData.transcriptModel()@<X0>(void *a1@<X8>)
{
  if (*((unsigned char *)v1 + 64))
  {
    uint64_t v3 = v1[1];
    uint64_t v4 = v1[2];
    uint64_t v6 = v1[3];
    unint64_t v5 = v1[4];
    unint64_t v8 = v1[5];
    unint64_t v7 = v1[6];
    if (*((unsigned char *)v1 + 64) == 1)
    {
      uint64_t v9 = *v1;
      sub_1ACA3985C(v6, v5);
      unint64_t v10 = v8;
      unint64_t v8 = v5;
    }
    else
    {
      unint64_t v11 = v1[7];
      sub_1ACA3985C(v5, v8);
      unint64_t v10 = v7;
      unint64_t v7 = v11;
      uint64_t v9 = v3;
      uint64_t v3 = v4;
      LOBYTE(v4) = v6;
      uint64_t v6 = v5;
    }
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    *a1 = v9;
    a1[1] = v3;
    a1[2] = v4 & 1;
    a1[3] = v6;
    a1[4] = v8;
    a1[5] = v10;
    a1[6] = v7;
  }
  else
  {
    a1[6] = 0;
    *((_OWORD *)a1 + 1) = 0u;
    *((_OWORD *)a1 + 2) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

uint64_t _s18PodcastsFoundation14TranscriptDataO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v7 = *(void *)(a1 + 32);
  unint64_t v6 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  int v10 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v12 = *(void **)a2;
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v13 = *(void *)(a2 + 24);
  unint64_t v15 = *(void *)(a2 + 32);
  unint64_t v16 = *(void *)(a2 + 40);
  uint64_t v18 = *(void *)(a2 + 48);
  uint64_t v17 = *(void *)(a2 + 56);
  int v19 = *(unsigned __int8 *)(a2 + 64);
  v86[0] = *(void *)a1;
  v86[1] = v2;
  v86[2] = v5;
  v86[3] = v4;
  v86[4] = v7;
  v86[5] = v6;
  v86[6] = v8;
  v86[7] = v9;
  char v87 = v10;
  v88 = v12;
  uint64_t v89 = v11;
  uint64_t v90 = v14;
  uint64_t v91 = v13;
  unint64_t v92 = v15;
  unint64_t v93 = v16;
  uint64_t v94 = v18;
  uint64_t v95 = v17;
  char v96 = v19;
  uint64_t v71 = v9;
  if (!v10)
  {
    if (!v19)
    {
      unint64_t v66 = v7;
      uint64_t v69 = v8;
      uint64_t v54 = v2;
      unint64_t v57 = v6;
      uint64_t v61 = v5;
      uint64_t v63 = v4;
      uint64_t v31 = v17;
      sub_1ACAA3690();
      sub_1ACB53740(v12, v11, v14, v13, v15, v16, v18, v31, 0);
      sub_1ACB53740(v3, v54, v61, v63, v66, v57, v69, v9, 0);
      char v32 = sub_1ACE76F68();
      sub_1ACB53AE0((uint64_t)v86);
      return v32 & 1;
    }
    goto LABEL_10;
  }
  if (v10 != 1)
  {
    if (v19 == 2)
    {
      unint64_t v67 = v7;
      uint64_t v70 = v8;
      unint64_t v58 = v6;
      uint64_t v60 = v17;
      uint64_t v62 = v5;
      uint64_t v64 = v4;
      uint64_t v34 = v2;
      uint64_t v35 = v17;
      sub_1ACAA3690();
      sub_1ACB53740(v12, v11, v14, v13, v15, v16, v18, v35, 2);
      uint64_t v55 = v34;
      sub_1ACB53740(v3, v34, v62, v64, v67, v58, v70, v71, 2);
      id v36 = v3;
      id v37 = v12;
      sub_1ACA3985C(v67, v58);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1ACA3985C(v15, v16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38 = v36;
      LOBYTE(v36) = sub_1ACE76F68();

      if (v36)
      {
        uint64_t v79 = v55;
        uint64_t v80 = v62;
        char v81 = v64 & 1;
        unint64_t v82 = v67;
        unint64_t v83 = v58;
        uint64_t v84 = v70;
        uint64_t v85 = v71;
        uint64_t v72 = v11;
        uint64_t v73 = v14;
        char v74 = v13 & 1;
        unint64_t v75 = v15;
        unint64_t v76 = v16;
        unint64_t v77 = v18;
        uint64_t v78 = v60;
        char v30 = _s18PodcastsFoundation15TranscriptModelV2eeoiySbAC_ACtFZ_0((uint64_t)&v79, (uint64_t)&v72);
        sub_1ACB53AE0((uint64_t)v86);
        sub_1ACA50850(v15, v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1ACA50850(v67, v58);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v30 & 1;
      }
      sub_1ACA50850(v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1ACA50850(v67, v58);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_11:
      sub_1ACB53AE0((uint64_t)v86);
      char v30 = 0;
      return v30 & 1;
    }
LABEL_10:
    v39 = v12;
    uint64_t v40 = v11;
    uint64_t v41 = v5;
    uint64_t v42 = v14;
    uint64_t v43 = v4;
    uint64_t v44 = v13;
    unint64_t v45 = v7;
    unint64_t v46 = v15;
    unint64_t v47 = v6;
    unint64_t v48 = v16;
    uint64_t v49 = v8;
    uint64_t v50 = v2;
    sub_1ACB53740(v39, v40, v42, v44, v46, v48, v18, v17, v19);
    sub_1ACB53740(v3, v50, v41, v43, v45, v47, v49, v9, v10);
    goto LABEL_11;
  }
  if (v19 != 1) {
    goto LABEL_10;
  }
  uint64_t v79 = (uint64_t)v3;
  uint64_t v80 = v2;
  char v81 = v5 & 1;
  unint64_t v82 = v4;
  unint64_t v83 = v7;
  uint64_t v84 = v6;
  uint64_t v85 = v8;
  uint64_t v72 = (uint64_t)v12;
  uint64_t v73 = v11;
  char v74 = v14 & 1;
  unint64_t v75 = v13;
  unint64_t v76 = v15;
  unint64_t v77 = v16;
  uint64_t v78 = v18;
  unint64_t v20 = v16;
  uint64_t v52 = v18;
  unint64_t v53 = v16;
  uint64_t v21 = v5;
  uint64_t v22 = v4;
  uint64_t v23 = v13;
  unint64_t v24 = v15;
  unint64_t v51 = v15;
  unint64_t v25 = v7;
  unint64_t v65 = v7;
  uint64_t v26 = v18;
  unint64_t v27 = v6;
  uint64_t v28 = v8;
  uint64_t v56 = v13;
  uint64_t v59 = v17;
  uint64_t v29 = v2;
  sub_1ACB53740(v12, v11, v14, v23, v24, v20, v26, v17, 1);
  uint64_t v68 = v28;
  sub_1ACB53740(v3, v29, v21, v22, v25, v27, v28, v71, 1);
  sub_1ACB53740(v12, v11, v14, v56, v51, v53, v52, v59, 1);
  sub_1ACB53740(v3, v29, v21, v22, v65, v27, v28, v71, 1);
  char v30 = _s18PodcastsFoundation15TranscriptModelV2eeoiySbAC_ACtFZ_0((uint64_t)&v79, (uint64_t)&v72);
  sub_1ACB53AE0((uint64_t)v86);
  sub_1ACB53840(v12, v11, v14, v56, v51, v53, v52, v59, 1);
  sub_1ACB53840(v3, v29, v21, v22, v65, v27, v68, v71, 1);
  return v30 & 1;
}

id sub_1ACB53740(id result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  switch(a9)
  {
    case 2:
      id v11 = result;
      sub_1ACA3985C(a5, a6);
      swift_bridgeObjectRetain();
      break;
    case 1:
      sub_1ACA3985C(a4, a5);
      swift_bridgeObjectRetain();
      break;
    case 0:
      return result;
    default:
      return result;
  }
  return (id)swift_bridgeObjectRetain();
}

void destroy for TranscriptData(uint64_t a1)
{
}

void sub_1ACB53840(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9 == 2)
  {

    sub_1ACA50850(a5, a6);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (a9 != 1)
    {
      if (!a9)
      {
      }
      return;
    }
    sub_1ACA50850(a4, a5);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TranscriptData(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unint64_t v7 = *(void *)(a2 + 32);
  unint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1ACB53740(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for TranscriptData(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unint64_t v7 = *(void *)(a2 + 32);
  unint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1ACB53740(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v12 = *(void **)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  unint64_t v16 = *(void *)(a1 + 32);
  unint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  char v20 = *(unsigned char *)(a1 + 64);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  sub_1ACB53840(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for TranscriptData(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  unint64_t v8 = *(void *)(a1 + 32);
  unint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  char v12 = *(unsigned char *)(a1 + 64);
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  long long v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 64) = v3;
  sub_1ACB53840(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t sub_1ACB53AC0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 64);
}

uint64_t sub_1ACB53AC8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptData()
{
  return &type metadata for TranscriptData;
}

uint64_t sub_1ACB53AE0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  unint64_t v6 = *(void *)(a1 + 104);
  unint64_t v7 = *(void *)(a1 + 112);
  uint64_t v8 = *(void *)(a1 + 120);
  uint64_t v9 = *(void *)(a1 + 128);
  char v10 = *(unsigned char *)(a1 + 136);
  sub_1ACB53840(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  sub_1ACB53840(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t UninitializedCurrentValueSubject.init()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1ACE76FD8();
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = (char *)&v8 - v5;
  sub_1ACE75918();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(v6, 1, 1, a1);
  uint64_t result = sub_1ACE75928();
  *a2 = result;
  return result;
}

uint64_t UninitializedCurrentValueSubject.value.getter()
{
  return sub_1ACE758F8();
}

uint64_t UninitializedCurrentValueSubject.send(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = sub_1ACE76FD8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v10 - v6, a1, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v3);
  sub_1ACE758E8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t UninitializedCurrentValueSubject.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a4;
  uint64_t v18 = a1;
  uint64_t v7 = *(void *)(a2 + 16);
  sub_1ACE76FD8();
  uint64_t v8 = *(void *)(a2 + 24);
  sub_1ACE75918();
  swift_getWitnessTable();
  uint64_t v9 = sub_1ACE75598();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v12 = (char *)&v16 - v11;
  uint64_t v19 = *v4;
  long long v13 = (void *)swift_allocObject();
  v13[2] = v7;
  v13[3] = v8;
  uint64_t v14 = v17;
  v13[4] = a3;
  v13[5] = v14;
  swift_retain();
  sub_1ACE75AE8();
  swift_release();
  swift_release();
  sub_1ACE75588();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1ACB53F94()
{
  return swift_deallocObject();
}

uint64_t sub_1ACB53FA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1ACE76FD8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a2, a1, v4);
}

uint64_t sub_1ACB5401C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UninitializedCurrentValueSubject.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t type metadata accessor for UninitializedCurrentValueSubject()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t EpisodeBookmarkState.dictionaryKey.getter(char a1)
{
  if (a1) {
    return 0x6B72616D6B6F6F62;
  }
  else {
    return 0x6D6B6F6F42746F6ELL;
  }
}

uint64_t static EpisodeBookmarkState.initialState.getter()
{
  return 0;
}

uint64_t static EpisodeBookmarkState.defaultState.getter()
{
  return 0;
}

uint64_t EpisodeBookmarkState.isEpisodeBookmarked.getter(char a1)
{
  return a1 & 1;
}

BOOL static EpisodeBookmarkState.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t EpisodeBookmarkState.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t EpisodeBookmarkState.hashValue.getter()
{
  return sub_1ACE77B78();
}

void sub_1ACB54128(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1ACB54130()
{
  if (*v0) {
    return 0x6B72616D6B6F6F62;
  }
  else {
    return 0x6D6B6F6F42746F6ELL;
  }
}

uint64_t sub_1ACB5417C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 10);
  return result;
}

uint64_t static EpisodeBookmarkState.state(for:)(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 10);
}

{
  return *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for ThinClientEpisodeStateModel() + 20));
}

uint64_t sub_1ACB54190@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = type metadata accessor for ThinClientEpisodeStateModel();
  *a2 = *(unsigned char *)(a1 + *(int *)(result + 20));
  return result;
}

void static EpisodeBookmarkState.episodeStateDomain.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

unint64_t sub_1ACB54208()
{
  unint64_t result = qword_1EB7679B0;
  if (!qword_1EB7679B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7679B0);
  }
  return result;
}

unint64_t sub_1ACB5425C(uint64_t a1)
{
  unint64_t result = sub_1ACB54208();
  *(void *)(a1 + 8) = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for EpisodeBookmarkState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB54350);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeBookmarkState()
{
  return &type metadata for EpisodeBookmarkState;
}

uint64_t Subscribers.Completion.failure()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v5, v7);
    uint64_t v9 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v9, 1, v7);
}

uint64_t DownloadedAsset.episodeUuid.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DownloadedAsset.fileURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DownloadedAsset() + 20);
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for DownloadedAsset()
{
  uint64_t result = qword_1E99F25B0;
  if (!qword_1E99F25B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DownloadedAsset.init(episodeUuid:fileURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (char *)a4 + *(int *)(type metadata accessor for DownloadedAsset() + 20);
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  return v7(v5, a3, v6);
}

uint64_t DownloadedAsset.hash(into:)()
{
  return sub_1ACE760F8();
}

uint64_t static DownloadedAsset.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    type metadata accessor for DownloadedAsset();
    JUMPOUT(0x1AD117040);
  }
  return 0;
}

uint64_t DownloadedAsset.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACB54828()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACB548C8()
{
  return sub_1ACE760F8();
}

uint64_t sub_1ACB54954()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACB549F0()
{
  return sub_1ACB54A38(&qword_1E99F25A8, (void (*)(uint64_t))type metadata accessor for DownloadedAsset);
}

uint64_t sub_1ACB54A38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACB54A80(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    JUMPOUT(0x1AD117040);
  }
  return 0;
}

uint64_t *initializeBufferWithCopyOfBuffer for DownloadedAsset(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1ACE74F28();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for DownloadedAsset(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for DownloadedAsset(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1ACE74F28();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for DownloadedAsset(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for DownloadedAsset(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for DownloadedAsset(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadedAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACB54EB4);
}

uint64_t sub_1ACB54EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1ACE74F28();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DownloadedAsset(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACB54F78);
}

uint64_t sub_1ACB54F78(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1ACE74F28();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1ACB55020()
{
  uint64_t result = sub_1ACE74F28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id static CoreDataFetcher.contextProvider.getter()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  return v0;
}

void static CoreDataFetcher.fetchPodcast(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1ACB55124()
{
}

void static CoreDataFetcher.performAndWaitOnPodcast<A>(with:block:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
}

void sub_1ACB55148(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = objc_msgSend(a1, sel_objectInEntity_predicate_, @"MTPodcast", a2);
  if (v4)
  {
    uint64_t v5 = v4;
    self;
    id v4 = (id)swift_dynamicCastObjCClass();
    if (!v4)
    {

      id v4 = 0;
    }
  }
  id v6 = v4;
  a3();
}

void sub_1ACB551F4()
{
  sub_1ACB55148(*(void **)(v0 + 24), *(void *)(v0 + 32), *(void (**)(void))(v0 + 40));
}

uint64_t static CoreDataFetcher.performAndPublishOnPodcast<A>(with:queue:block:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = objc_msgSend(self, sel_sharedInstance);
  id v13 = objc_msgSend(v12, sel_mainOrPrivateContext);

  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a6;
  v14[3] = v13;
  v14[4] = a1;
  v14[5] = a2;
  v14[6] = a4;
  v14[7] = a5;
  id v15 = v13;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v16 = NSManagedObjectContext.performAndPublish<A>(queue:_:)(a3, (uint64_t)sub_1ACB55478, (uint64_t)v14, a6);

  swift_release();
  return v16;
}

void sub_1ACB55308(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  id v6 = self;
  uint64_t v7 = @"MTPodcast";
  uint64_t v8 = (void *)sub_1ACE76178();
  id v9 = objc_msgSend(v6, sel_predicateForPodcastUUID_, v8);

  id v10 = objc_msgSend(a1, sel_objectInEntity_predicate_, v7, v9);
  if (v10)
  {
    self;
    uint64_t v11 = swift_dynamicCastObjCClass();
    if (v11) {
      goto LABEL_5;
    }
  }
  uint64_t v11 = 0;
LABEL_5:
  id v12 = (id)v11;
  a4();
}

uint64_t sub_1ACB55430()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB55478()
{
  return sub_1ACB557B4((uint64_t (*)(void, void, void, void, void, void))sub_1ACB55308);
}

void static CoreDataFetcher.performAndWaitOnChannel<A>(for:block:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
}

void sub_1ACB554A8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  id v12 = objc_msgSend(self, sel_sharedInstance);
  id v13 = objc_msgSend(v12, sel_mainOrPrivateContext);

  v14[2] = a4;
  v14[3] = v13;
  v14[4] = a1;
  v14[5] = a2;
  v14[6] = a3;
  NSManagedObjectContext.performAndWait<A>(_:)(a5, (uint64_t)v14, a4, a6);
}

void sub_1ACB55564()
{
  unint64_t v1 = *(void (**)(void))(v0 + 40);
  id v2 = objc_msgSend(*(id *)(v0 + 24), sel_channelForStoreId_, *(void *)(v0 + 32));
  v1();
}

void static CoreDataFetcher.fetchEpisode(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1ACB55600()
{
}

void sub_1ACB5560C(SEL *a1)
{
  sub_1ACB55C2C(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(id))(v1 + 40), *(void *)(v1 + 48), a1);
}

void static CoreDataFetcher.performAndWaitOnEpisode<A>(with:block:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  id v12 = objc_msgSend(self, sel_sharedInstance);
  id v13 = objc_msgSend(v12, sel_mainOrPrivateContext);

  v14[2] = a5;
  v14[3] = v13;
  v14[4] = a1;
  v14[5] = a2;
  v14[6] = a3;
  v14[7] = a4;
  NSManagedObjectContext.performAndWait<A>(_:)((uint64_t)sub_1ACB5579C, (uint64_t)v14, a5, a6);
}

void sub_1ACB55700(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  id v6 = (void *)sub_1ACE76178();
  id v7 = objc_msgSend(a1, sel_episodeForUuid_, v6);

  a4(v7);
}

uint64_t sub_1ACB5579C()
{
  return sub_1ACB557B4((uint64_t (*)(void, void, void, void, void, void))sub_1ACB55700);
}

uint64_t sub_1ACB557B4(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[3], v1[4], v1[5], v1[6], v1[7], v1[2]);
}

void static CoreDataFetcher.performAndWaitWithSaveOnEpisode(with:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  id v9 = objc_msgSend(self, sel_sharedInstance);
  id v10 = objc_msgSend(v9, sel_mainOrPrivateContext);

  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v8;
  v11[3] = v10;
  v11[4] = a1;
  v11[5] = a2;
  v11[6] = a3;
  v11[7] = a4;
  v14[4] = sub_1ACB55AA0;
  v14[5] = v11;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  v14[2] = sub_1ACA6DA9C;
  v14[3] = &block_descriptor_18_0;
  id v12 = _Block_copy(v14);
  swift_retain();
  id v13 = v10;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performBlockAndWaitWithSave_, v12);
  _Block_release(v12);
  swift_release();
}

uint64_t sub_1ACB5594C()
{
  return swift_deallocObject();
}

void sub_1ACB55984(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void *))
{
  uint64_t v8 = (void *)sub_1ACE76178();
  id v9 = objc_msgSend(a2, sel_episodeForUuid_, v8);

  swift_beginAccess();
  id v10 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v9;

  swift_beginAccess();
  uint64_t v11 = *(void **)(a1 + 16);
  id v12 = v11;
  a5(v11);
}

uint64_t sub_1ACB55A50()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB55AA0()
{
  return sub_1ACB56024((uint64_t (*)(void, void, void, void, void, void))sub_1ACB55984);
}

void static CoreDataFetcher.fetchStation(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1ACB55AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v13 = objc_msgSend(self, sel_sharedInstance);
  id v14 = objc_msgSend(v13, sel_privateQueueContext);

  id v15 = (void *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = a3;
  v15[6] = a4;
  v18[4] = a6;
  v18[5] = v15;
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 1107296256;
  v18[2] = sub_1ACA6DA9C;
  v18[3] = a7;
  uint64_t v16 = _Block_copy(v18);
  id v17 = v14;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_performBlock_, v16);
  _Block_release(v16);
}

void sub_1ACB55C2C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id), uint64_t a5, SEL *a6)
{
  id v9 = (void *)sub_1ACE76178();
  id v10 = objc_msgSend(a1, *a6, v9);

  a4(v10);
}

void sub_1ACB55CC4()
{
}

void static CoreDataFetcher.fetchStationShow(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = objc_msgSend(self, sel_sharedInstance);
  id v10 = objc_msgSend(v9, sel_privateQueueContext);

  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v4;
  v11[3] = a1;
  v11[4] = a2;
  v11[5] = v10;
  v11[6] = a3;
  v11[7] = a4;
  v14[4] = sub_1ACB5600C;
  v14[5] = v11;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  v14[2] = sub_1ACA6DA9C;
  v14[3] = &block_descriptor_30_0;
  id v12 = _Block_copy(v14);
  swift_bridgeObjectRetain();
  id v13 = v10;
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performBlock_, v12);
  _Block_release(v12);
}

void sub_1ACB55E24(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void *))
{
  id v15 = 0;
  id v9 = (void *)swift_allocObject();
  v9[2] = &v15;
  v9[3] = a4;
  v9[4] = a2;
  v9[5] = a3;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1ACB58DC8;
  *(void *)(v10 + 24) = v9;
  aBlock[4] = sub_1ACB58DC4;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC525DC;
  aBlock[3] = &block_descriptor_112;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlockAndWait_, v11);

  _Block_release(v11);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (a3)
  {
    __break(1u);
  }
  else
  {
    id v13 = v15;
    swift_release();
    a5(v13);
  }
}

uint64_t sub_1ACB55FC4()
{
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB5600C()
{
  return sub_1ACB56024((uint64_t (*)(void, void, void, void, void, void))sub_1ACB55E24);
}

uint64_t sub_1ACB56024(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t static CoreDataFetcher.fetchStationShow(stationShowUuid:with:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v17 = 0;
  if (a3)
  {
    id v6 = a3;
  }
  else
  {
    id v7 = objc_msgSend(self, sel_sharedInstance);
    id v6 = objc_msgSend(v7, sel_mainOrPrivateContext);
  }
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = &v17;
  v8[3] = v6;
  v8[4] = a1;
  v8[5] = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1ACB56290;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_1ACADC690;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC525DC;
  aBlock[3] = &block_descriptor_39;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = a3;
  id v12 = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlockAndWait_, v10);

  _Block_release(v10);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = v17;
    swift_release();
    return v15;
  }
  return result;
}

void sub_1ACB56214(void **a1, void *a2)
{
  uint64_t v4 = (void *)sub_1ACE76178();
  id v5 = objc_msgSend(a2, sel_podcastPlaylistSettingsForUuid_, v4);

  id v6 = *a1;
  *a1 = v5;
}

void sub_1ACB56290()
{
  sub_1ACB56214(*(void ***)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1ACB5629C()
{
  return swift_deallocObject();
}

void static CoreDataFetcher.fetchPodcast(adamId:feedUrl:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v11 = objc_msgSend(self, sel_sharedInstance);
  id v12 = objc_msgSend(v11, sel_privateQueueContext);

  id v13 = (void *)swift_allocObject();
  v13[2] = v5;
  v13[3] = a1;
  v13[4] = a2;
  v13[5] = a3;
  v13[6] = v12;
  v13[7] = a4;
  v13[8] = a5;
  v16[4] = sub_1ACB56450;
  v16[5] = v13;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  v16[2] = sub_1ACA6DA9C;
  v16[3] = &block_descriptor_45_0;
  id v14 = _Block_copy(v16);
  swift_bridgeObjectRetain();
  id v15 = v12;
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_performBlock_, v14);
  _Block_release(v14);
}

uint64_t sub_1ACB56408()
{
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_1ACB56450()
{
  uint64_t v1 = *(void (**)(void))(v0 + 56);
  id v2 = (id)_s18PodcastsFoundation15CoreDataFetcherC12fetchPodcast6adamId7feedUrl4withSo9MTPodcastCSgs5Int64V_SSSgSo22NSManagedObjectContextCtFZ_0(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
  v1();
}

uint64_t static CoreDataFetcher.performAndWaitOnPodcast<A>(adamId:feedUrl:block:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v26 = a7;
  uint64_t v27 = a4;
  uint64_t v25 = sub_1ACE76FD8();
  uint64_t v13 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  id v15 = (char *)&v24 - v14;
  id v16 = objc_msgSend(self, sel_sharedInstance);
  id v17 = objc_msgSend(v16, sel_mainOrPrivateContext);

  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 56))(v15, 1, 1, a6);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = a6;
  v18[3] = v7;
  v18[4] = a1;
  v18[5] = a2;
  void v18[6] = a3;
  v18[7] = v17;
  uint64_t v19 = v27;
  v18[8] = v15;
  v18[9] = v19;
  v18[10] = a5;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1ACB57D84;
  *(void *)(v20 + 24) = v18;
  aBlock[4] = sub_1ACB58DC4;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC525DC;
  aBlock[3] = &block_descriptor_55_1;
  uint64_t v21 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v22 = v17;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v22, sel_performBlockAndWait_, v21);

  _Block_release(v21);
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v21)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v26, v15, v25);
    return swift_release();
  }
  return result;
}

unint64_t sub_1ACB56754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(void *), uint64_t a8, uint64_t a9)
{
  uint64_t v26 = a7;
  uint64_t v27 = a6;
  uint64_t v11 = sub_1ACE76FD8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v26 - v13;
  id v15 = objc_allocWithZone(MEMORY[0x1E4F28ED0]);
  swift_bridgeObjectRetain();
  id v16 = objc_msgSend(v15, sel_initWithLongLong_, a2, v26);
  id v17 = objc_allocWithZone((Class)MTStoreIdentifier);
  uint64_t v18 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v17, sel_initWithFeedUrl_storeIdentifier_, v18, v16);

  id v20 = objc_msgSend(self, sel_predicateForIdentifer_, v19);
  unint64_t result = _s18PodcastsFoundation15CoreDataFetcherC05fetchA03for2by4withSaySo9MTPodcastCGSgSo11NSPredicateC_SaySo16NSSortDescriptorCGSo22NSManagedObjectContextCtFZ_0((uint64_t)v20, MEMORY[0x1E4FBC860], a5);
  if (!result)
  {

    uint64_t v25 = 0;
LABEL_12:
    v26(v25);

    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a9 - 8) + 56))(v14, 0, 1, a9);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 40))(v27, v14, v11);
  }
  unint64_t v22 = result;
  uint64_t v23 = result & 0xFFFFFFFFFFFFFF8;
  if (!(result >> 62))
  {
    if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_10:

    uint64_t v25 = 0;
    goto LABEL_11;
  }
  unint64_t result = sub_1ACE77508();
  if (!result) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v22 & 0xC000000000000001) != 0)
  {
    id v24 = (id)MEMORY[0x1AD119490](0, v22);
    goto LABEL_7;
  }
  if (*(void *)(v23 + 16))
  {
    id v24 = *(id *)(v22 + 32);
LABEL_7:
    uint64_t v25 = v24;

LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACB569DC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F80);
  unint64_t v4 = sub_1ACE76EE8();
  unint64_t v5 = v4;
  if (!(v4 >> 62))
  {
    if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (v6 >= 1) {
LABEL_3:
  }
    *a3 = v5;
LABEL_5:
  return swift_bridgeObjectRelease();
}

void static CoreDataFetcher.fetchEpisode(contentId:guid:title:pubDate:podcastUuid:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12 = v11;
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v34 = a3;
  int v33 = a2;
  uint64_t v32 = a1;
  uint64_t v38 = a11;
  uint64_t v39 = a8;
  uint64_t v37 = a10;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = objc_msgSend(self, sel_sharedInstance);
  id v20 = objc_msgSend(v19, sel_privateQueueContext);

  sub_1ACA72A5C(a7, (uint64_t)v18);
  unint64_t v21 = (*(unsigned __int8 *)(v16 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v22 = (v17 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v32;
  *(void *)(v24 + 16) = v12;
  *(void *)(v24 + 24) = v25;
  *(unsigned char *)(v24 + 32) = v33 & 1;
  uint64_t v26 = v35;
  *(void *)(v24 + 40) = v34;
  *(void *)(v24 + 48) = v26;
  *(void *)(v24 + 56) = v36;
  *(void *)(v24 + 64) = a6;
  sub_1ACA909B4((uint64_t)v18, v24 + v21);
  uint64_t v27 = (void *)(v24 + v22);
  uint64_t v28 = v38;
  *uint64_t v27 = v39;
  v27[1] = a9;
  *(void *)(v24 + v23) = v20;
  uint64_t v29 = (void *)(v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8));
  void *v29 = v37;
  v29[1] = v28;
  aBlock[4] = sub_1ACB57F40;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_61_2;
  char v30 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v31 = v20;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v31, sel_performBlock_, v30);
  _Block_release(v30);
}

uint64_t static CoreDataFetcher.fetchEpisode(contentId:guid:title:pubDate:podcastUuid:with:)(uint64_t a1, char a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, unint64_t a8, unint64_t a9, void *a10)
{
  return sub_1ACB583EC(a1, a2 & 1, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t static CoreDataFetcher.fetchEpisodes(for:sortDescriptors:fetchLimit:with:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  return sub_1ACB58028(a1, a2, a3, a4 & 1, a5);
}

uint64_t static CoreDataFetcher.fetchEpisodes(fromSeason:newerThanEpisodeNumber:inPodcastWithUUID:)(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(self, sel_sharedInstance);
  id v5 = objc_msgSend(v4, sel_privateQueueContext);

  uint64_t v6 = self;
  uint64_t v7 = (void *)sub_1ACE76178();
  id v8 = objc_msgSend(v6, sel_predicateForAllEpisodesOnPodcastUuid_, v7);

  id v9 = objc_msgSend(v6, sel_predicateForSeasonNumber_, a1);
  id v10 = objc_msgSend(v6, sel_predicateForEpisodesWithEpisodeNumbersGreaterThan_, a2);
  id v11 = objc_msgSend(v8, sel_AND_, v9);
  id v12 = objc_msgSend(v11, sel_AND_, v10);

  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v14 = sub_1ACB58028((uint64_t)v12, MEMORY[0x1E4FBC860], 0, 1, v5);

  if (v14) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = v13;
  }

  return v15;
}

uint64_t static CoreDataFetcher.fetchEpisodes(newerThan:inPodcastWithUUID:)()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id v1 = objc_msgSend(v0, sel_privateQueueContext);

  id v2 = self;
  uint64_t v3 = (void *)sub_1ACE76178();
  id v4 = objc_msgSend(v2, sel_predicateForAllEpisodesOnPodcastUuid_, v3);

  id v5 = (void *)sub_1ACE75008();
  id v6 = objc_msgSend(v2, sel_predicateForEpisodesPublishedAfterDate_, v5);

  id v7 = objc_msgSend(v4, sel_AND_, v6);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v9 = sub_1ACB58028((uint64_t)v7, MEMORY[0x1E4FBC860], 0, 1, v1);

  if (v9) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = v8;
  }

  return v10;
}

uint64_t sub_1ACB57030(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  unint64_t v4 = sub_1ACE76EE8();
  unint64_t v5 = v4;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v6 >= 1) {
      goto LABEL_3;
    }
  }
  else if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_3:
    *a3 = v5;
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  *a3 = MEMORY[0x1E4FBC860];
LABEL_6:
  return swift_bridgeObjectRelease();
}

void static CoreDataFetcher.episodeUuid(for:completion:)(uint64_t a1, void (*a2)(void, void), uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else if (objc_msgSend(self, sel_isNotEmpty_, a1))
  {
    id v6 = objc_msgSend(self, sel_sharedInstance);
    id v7 = objc_msgSend(v6, sel_privateQueueContext);

    id v8 = objc_msgSend(self, sel_predicateForEpisodeStoreTrackId_, a1);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = v7;
    v9[3] = v8;
    v9[4] = a2;
    v9[5] = a3;
    v13[4] = sub_1ACB58C50;
    v13[5] = v9;
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 1107296256;
    v13[2] = sub_1ACA6DA9C;
    v13[3] = &block_descriptor_67_0;
    uint64_t v10 = _Block_copy(v13);
    id v11 = v7;
    id v12 = v8;
    swift_retain();
    swift_release();
    objc_msgSend(v11, sel_performBlock_, v10);
    _Block_release(v10);
  }
  else
  {
    a2(0, 0);
  }
}

uint64_t sub_1ACB572EC(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  id v4 = objc_msgSend(a1, sel_objectInEntity_predicate_, @"MTEpisode", a2);
  if (!v4) {
    return a3(0, 0);
  }
  unint64_t v5 = v4;
  self;
  id v6 = (void *)swift_dynamicCastObjCClass();
  if (!v6 || (id v7 = objc_msgSend(v6, sel_uuid)) == 0)
  {

    return a3(0, 0);
  }
  id v8 = v7;
  uint64_t v9 = sub_1ACE761B8();
  uint64_t v11 = v10;

  a3(v9, v11);
  return swift_bridgeObjectRelease();
}

void static CoreDataFetcher.fetchEpisode(for:on:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!a4) {
    goto LABEL_6;
  }
  uint64_t v9 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v9 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v9)
  {
    uint64_t v10 = self;
    uint64_t v11 = (void *)sub_1ACE76178();
    id v12 = (void *)sub_1ACE76178();
    id v13 = objc_msgSend(v10, sel_predicateForEpisodeGuid_onFeedURL_, v11, v12);
  }
  else
  {
LABEL_6:
    uint64_t v14 = self;
    id v12 = (void *)sub_1ACE76178();
    id v13 = objc_msgSend(v14, sel_predicateForEpisodeGuid_, v12);
  }

  id v15 = objc_msgSend(self, sel_sharedInstance);
  id v16 = objc_msgSend(v15, sel_privateQueueContext);

  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v6;
  v17[3] = v13;
  v17[4] = v16;
  v17[5] = a5;
  v17[6] = a6;
  v21[4] = sub_1ACB58CA4;
  v21[5] = v17;
  v21[0] = MEMORY[0x1E4F143A8];
  v21[1] = 1107296256;
  v21[2] = sub_1ACA6DA9C;
  v21[3] = &block_descriptor_73_0;
  uint64_t v18 = _Block_copy(v21);
  id v19 = v13;
  id v20 = v16;
  swift_retain();
  swift_release();
  objc_msgSend(v20, sel_performBlock_, v18);

  _Block_release(v18);
}

void sub_1ACB575FC(uint64_t a1, uint64_t a2, void *a3, void (*a4)(id))
{
  unint64_t v5 = sub_1ACB58028(a2, MEMORY[0x1E4FBC860], 1, 0, a3);
  if (!v5) {
    goto LABEL_12;
  }
  unint64_t v6 = v5;
  uint64_t v7 = v5 & 0xFFFFFFFFFFFFFF8;
  if (!(v5 >> 62))
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  if (!sub_1ACE77508())
  {
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    a4(0);
    return;
  }
LABEL_4:
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v8 = (id)MEMORY[0x1AD119490](0, v6);
  }
  else
  {
    if (!*(void *)(v7 + 16))
    {
      __break(1u);
      return;
    }
    id v8 = *(id *)(v6 + 32);
  }
  id v9 = v8;
  swift_bridgeObjectRelease();
  a4(v9);
}

uint64_t CoreDataFetcher.deinit()
{
  return v0;
}

uint64_t CoreDataFetcher.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id MTPropertyChangeQueryObserver.firstResult.getter()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  id v2 = (id *)(v1 + 16);
  v7[4] = sub_1ACB58CB4;
  v7[5] = v1;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  v7[2] = sub_1ACB578F8;
  v7[3] = &block_descriptor_79_0;
  uint64_t v3 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(v0, sel_results_, v3);
  _Block_release(v3);
  swift_beginAccess();
  id v4 = *v2;
  id v5 = *v2;
  swift_release();
  return v4;
}

void sub_1ACB57820(unint64_t a1, uint64_t a2)
{
  if (!a1)
  {
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1ACE77508();
    if (!v5) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v5)
    {
LABEL_8:
      swift_bridgeObjectRelease();
LABEL_10:
      swift_beginAccess();
      uint64_t v7 = *(void **)(a2 + 16);
      *(void *)(a2 + 16) = v5;

      return;
    }
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v6 = (id)MEMORY[0x1AD119490](0, a1);
    goto LABEL_7;
  }
  if (*(void *)(v4 + 16))
  {
    id v6 = *(id *)(a1 + 32);
LABEL_7:
    uint64_t v5 = (uint64_t)v6;
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1ACB578F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
    uint64_t v2 = sub_1ACE76578();
  }
  swift_retain();
  v3(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t _s18PodcastsFoundation15CoreDataFetcherC05fetchA03for2by4withSaySo9MTPodcastCGSgSo11NSPredicateC_SaySo16NSSortDescriptorCGSo22NSManagedObjectContextCtFZ_0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v17 = 0;
  sub_1ACE761B8();
  id v5 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v6 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  objc_msgSend(v7, sel_setPredicate_, a1);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  id v8 = (void *)sub_1ACE76558();
  objc_msgSend(v7, sel_setSortDescriptors_, v8);

  id v9 = (void *)swift_allocObject();
  v9[2] = a3;
  v9[3] = v7;
  v9[4] = &v17;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1ACB58D54;
  *(void *)(v10 + 24) = v9;
  aBlock[4] = sub_1ACB58DC4;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC525DC;
  aBlock[3] = &block_descriptor_101_0;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = a3;
  id v13 = v7;
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlockAndWait_, v11);

  _Block_release(v11);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v12)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = v17;
    swift_release();
    return v15;
  }
  return result;
}

uint64_t _s18PodcastsFoundation15CoreDataFetcherC12fetchPodcast6adamId7feedUrl4withSo9MTPodcastCSgs5Int64V_SSSgSo22NSManagedObjectContextCtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = objc_allocWithZone(MEMORY[0x1E4F28ED0]);
  swift_bridgeObjectRetain();
  id v8 = objc_msgSend(v7, sel_initWithLongLong_, a1);
  if (a3)
  {
    id v9 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v9 = 0;
  }
  id v10 = objc_msgSend(objc_allocWithZone((Class)MTStoreIdentifier), sel_initWithFeedUrl_storeIdentifier_, v9, v8);

  id v11 = objc_msgSend(self, sel_predicateForIdentifer_, v10);
  unint64_t v12 = _s18PodcastsFoundation15CoreDataFetcherC05fetchA03for2by4withSaySo9MTPodcastCGSgSo11NSPredicateC_SaySo16NSSortDescriptorCGSo22NSManagedObjectContextCtFZ_0((uint64_t)v11, MEMORY[0x1E4FBC860], a4);
  if (!v12)
  {

    return 0;
  }
  unint64_t v13 = v12;
  uint64_t v14 = v12 & 0xFFFFFFFFFFFFFF8;
  if (!(v12 >> 62))
  {
    uint64_t result = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (result) {
      goto LABEL_7;
    }
LABEL_13:

    id v17 = 0;
    goto LABEL_14;
  }
  uint64_t result = sub_1ACE77508();
  if (!result) {
    goto LABEL_13;
  }
LABEL_7:
  if ((v13 & 0xC000000000000001) != 0)
  {
    id v16 = (id)MEMORY[0x1AD119490](0, v13);
    goto LABEL_10;
  }
  if (*(void *)(v14 + 16))
  {
    id v16 = *(id *)(v13 + 32);
LABEL_10:
    id v17 = v16;

LABEL_14:
    swift_bridgeObjectRelease();
    return (uint64_t)v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACB57D3C()
{
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1ACB57D84()
{
  return sub_1ACB56754(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void *)(v0 + 64), *(void (**)(void *))(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 16));
}

uint64_t sub_1ACB57DBC()
{
  return swift_deallocObject();
}

uint64_t sub_1ACB57DCC()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  }
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_1ACB57F40()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void (**)(void))(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  id v6 = (id)sub_1ACB583EC(*(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 64), v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(void **)(v0 + v4));
  v5();
}

uint64_t sub_1ACB58028(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v21 = 0;
  sub_1ACE761B8();
  id v9 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v10 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  objc_msgSend(v11, sel_setPredicate_, a1);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  unint64_t v12 = (void *)sub_1ACE76558();
  objc_msgSend(v11, sel_setSortDescriptors_, v12);

  if ((a4 & 1) == 0) {
    objc_msgSend(v11, sel_setFetchLimit_, a3);
  }
  unint64_t v13 = (void *)swift_allocObject();
  v13[2] = a5;
  v13[3] = v11;
  v13[4] = &v21;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1ACB58D38;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = sub_1ACB58DC4;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC525DC;
  aBlock[3] = &block_descriptor_91;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = a5;
  id v17 = v11;
  swift_retain();
  swift_release();
  objc_msgSend(v16, sel_performBlockAndWait_, v15);

  _Block_release(v15);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v16)
  {
    __break(1u);
  }
  else
  {
    uint64_t v19 = v21;
    swift_release();
    return v19;
  }
  return result;
}

id sub_1ACB58288(uint64_t a1, unint64_t a2)
{
  if (!(a2 >> 62))
  {
    uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (!v3) {
    return 0;
  }
LABEL_3:
  id result = (id)sub_1ACE74FB8();
  double v6 = v5;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = MEMORY[0x1AD119490](0, a2);
    id result = (id)swift_bridgeObjectRelease();
    if (v3 >= 1)
    {
LABEL_6:
      swift_bridgeObjectRetain();
      uint64_t v8 = 0;
      double v9 = 1.79769313e308;
      do
      {
        if ((a2 & 0xC000000000000001) != 0) {
          id v10 = (id)MEMORY[0x1AD119490](v8, a2);
        }
        else {
          id v10 = *(id *)(a2 + 8 * v8 + 32);
        }
        id v11 = v10;
        ++v8;
        objc_msgSend(v10, sel_pubDate);
        double v13 = vabdd_f64(v12, v6);
        if (v13 >= v9) {
          uint64_t v14 = v11;
        }
        else {
          uint64_t v14 = (void *)v7;
        }
        if (v13 < v9)
        {
          uint64_t v7 = (uint64_t)v11;
          double v9 = v13;
        }
      }
      while (v3 != v8);
      swift_bridgeObjectRelease();
      return (id)v7;
    }
    goto LABEL_21;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id result = *(id *)(a2 + 32);
    uint64_t v7 = (uint64_t)result;
    if (v3 >= 1) {
      goto LABEL_6;
    }
LABEL_21:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACB583EC(uint64_t a1, char a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, unint64_t a8, unint64_t a9, void *a10)
{
  char v74 = a6;
  uint64_t v75 = a7;
  uint64_t v73 = a5;
  unint64_t v76 = a10;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v72 = (uint64_t)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  id v20 = (char *)&v71 - v19;
  MEMORY[0x1F4188790](v18);
  unint64_t v22 = (char *)&v71 - v21;
  uint64_t v23 = sub_1ACE750A8();
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v71 - v26;
  uint64_t v28 = MEMORY[0x1F4188790](v25);
  unint64_t v32 = (unint64_t)&v71 - v31;
  if (!a9) {
    goto LABEL_70;
  }
  uint64_t v33 = HIBYTE(a9) & 0xF;
  if ((a9 & 0x2000000000000000) == 0) {
    uint64_t v33 = a8 & 0xFFFFFFFFFFFFLL;
  }
  if (!v33)
  {
LABEL_70:
    if ((a2 & 1) != 0 || !objc_msgSend(self, sel_isNotEmpty_, a1)) {
      return 0;
    }
    id v44 = objc_msgSend(self, sel_predicateForEpisodeStoreTrackId_, a1);
    unint64_t v45 = sub_1ACB58028((uint64_t)v44, MEMORY[0x1E4FBC860], 0, 1, v76);
    if (v45)
    {
      int64_t v38 = v45;
      uint64_t v46 = v45 & 0xFFFFFFFFFFFFFF8;
      if (v45 >> 62)
      {
        if (sub_1ACE77508())
        {
LABEL_19:
          if ((v38 & 0xC000000000000001) != 0)
          {
            id v47 = (id)MEMORY[0x1AD119490](0, v38);
          }
          else
          {
            if (!*(void *)(v46 + 16))
            {
              __break(1u);
              goto LABEL_55;
            }
            id v47 = *(id *)(v38 + 32);
          }
          id v43 = v47;
          swift_bridgeObjectRelease();

          return (uint64_t)v43;
        }
      }
      else if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
    }

    return 0;
  }
  uint64_t v71 = v28;
  if (a4)
  {
    uint64_t v34 = v29;
    uint64_t v35 = self;
    uint64_t v36 = (void *)sub_1ACE76178();
    uint64_t v37 = (void *)sub_1ACE76178();
    int64_t v38 = (int64_t)objc_msgSend(v35, sel_predicateForEpisodeGuid_onPodcastUuid_, v36, v37);

    uint64_t v39 = sub_1ACB58028(v38, MEMORY[0x1E4FBC860], 0, 1, v76);
    if (v39)
    {
      a3 = v39;
      sub_1ACA72A5C(v75, (uint64_t)v22);
      uint64_t v40 = v71;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v22, 1, v71) != 1)
      {
        (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v32, v22, v40);
        id v43 = sub_1ACB58288(v32, a3);
        swift_bridgeObjectRelease();

        (*(void (**)(unint64_t, uint64_t))(v34 + 8))(v32, v40);
        return (uint64_t)v43;
      }
      sub_1ACA3E034((uint64_t)v22);
      uint64_t v41 = a3 & 0xFFFFFFFFFFFFFF8;
      if (a3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v68 = sub_1ACE77508();
        swift_bridgeObjectRelease();
        if (!v68) {
          goto LABEL_58;
        }
      }
      else if (!*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_58;
      }
      if ((a3 & 0xC000000000000001) == 0)
      {
        if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v42 = *(id *)(a3 + 32);
LABEL_13:
          id v43 = v42;
LABEL_44:
          swift_bridgeObjectRelease();

          return (uint64_t)v43;
        }
        __break(1u);
        goto LABEL_57;
      }
LABEL_55:
      id v42 = (id)MEMORY[0x1AD119490](0, a3);
      goto LABEL_13;
    }
LABEL_59:

    return 0;
  }
  if ((a2 & 1) != 0
    || (uint64_t v48 = v29,
        unint64_t v49 = v30,
        unsigned int v50 = objc_msgSend(self, sel_isNotEmpty_, a1),
        unint64_t v30 = v49,
        uint64_t v29 = v48,
        !v50))
  {
LABEL_35:
    id v43 = v74;
    if (!v74) {
      return (uint64_t)v43;
    }
    unint64_t v32 = v30;
    uint64_t v60 = v29;
    uint64_t v61 = self;
    uint64_t v62 = (void *)sub_1ACE76178();
    uint64_t v63 = (void *)sub_1ACE76178();
    int64_t v38 = (int64_t)objc_msgSend(v61, sel_predicateForEpisodeTitle_onPodcastUuid_, v62, v63);

    uint64_t v64 = sub_1ACB58028(v38, MEMORY[0x1E4FBC860], 0, 1, v76);
    if (v64)
    {
      a8 = v64;
      uint64_t v65 = v72;
      sub_1ACA72A5C(v75, v72);
      uint64_t v66 = v71;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v65, 1, v71) != 1)
      {
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v60 + 32))(v32, v65, v66);
        id v43 = sub_1ACB58288(v32, a8);
        swift_bridgeObjectRelease();

        (*(void (**)(unint64_t, uint64_t))(v60 + 8))(v32, v66);
        return (uint64_t)v43;
      }
      sub_1ACA3E034(v65);
      uint64_t v41 = a8 & 0xFFFFFFFFFFFFFF8;
      if (!(a8 >> 62))
      {
        if (!*(void *)((a8 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_58:
          swift_bridgeObjectRelease();
          goto LABEL_59;
        }
        goto LABEL_40;
      }
LABEL_57:
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_1ACE77508();
      swift_bridgeObjectRelease();
      if (!v69) {
        goto LABEL_58;
      }
LABEL_40:
      if ((a8 & 0xC000000000000001) != 0)
      {
        id v67 = (id)MEMORY[0x1AD119490](0, a8);
        goto LABEL_43;
      }
      if (*(void *)(v41 + 16))
      {
        id v67 = *(id *)(a8 + 32);
LABEL_43:
        id v43 = v67;
        goto LABEL_44;
      }
      __break(1u);
LABEL_64:
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_1ACE77508();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v70) {
        goto LABEL_65;
      }
      goto LABEL_29;
    }
    goto LABEL_59;
  }
  unint64_t v51 = self;
  id v52 = objc_msgSend(v51, sel_predicateForEpisodeStoreTrackId_, a1);
  unint64_t v53 = (void *)sub_1ACE76178();
  id v54 = objc_msgSend(v51, sel_predicateForAllEpisodesOnPodcastUuid_, v53);

  id v55 = objc_msgSend(v52, sel_AND_, v54);
  id v56 = v55;
  unint64_t v32 = sub_1ACB58028((uint64_t)v56, MEMORY[0x1E4FBC860], 0, 1, v76);

  if (!v32)
  {

    uint64_t v29 = v48;
    unint64_t v30 = v49;
    goto LABEL_35;
  }
  a8 = (unint64_t)v56;
  sub_1ACA72A5C(v75, (uint64_t)v20);
  uint64_t v57 = v71;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v20, 1, v71) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v27, v20, v57);
    id v43 = sub_1ACB58288((uint64_t)v27, v32);
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v48 + 8))(v27, v57);
    return (uint64_t)v43;
  }
  uint64_t result = sub_1ACA3E034((uint64_t)v20);
  uint64_t v41 = v32 & 0xFFFFFFFFFFFFFF8;
  if (v32 >> 62) {
    goto LABEL_64;
  }
  if (!*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_65:
    swift_bridgeObjectRelease();

    return 0;
  }
LABEL_29:
  if ((v32 & 0xC000000000000001) != 0)
  {
    id v59 = (id)MEMORY[0x1AD119490](0, v32);
    goto LABEL_32;
  }
  if (*(void *)(v41 + 16))
  {
    id v59 = *(id *)(v32 + 32);
LABEL_32:
    id v43 = v59;
    swift_bridgeObjectRelease();

    return (uint64_t)v43;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACB58C08()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB58C50()
{
  return sub_1ACB572EC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t, uint64_t))(v0 + 32));
}

uint64_t sub_1ACB58C5C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACB58CA4()
{
  sub_1ACB575FC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void (**)(id))(v0 + 40));
}

void sub_1ACB58CB4(unint64_t a1)
{
  sub_1ACB57820(a1, v1);
}

uint64_t type metadata accessor for CoreDataFetcher()
{
  return self;
}

uint64_t method lookup function for CoreDataFetcher(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CoreDataFetcher);
}

uint64_t sub_1ACB58CF8()
{
  return swift_deallocObject();
}

uint64_t sub_1ACB58D38()
{
  return sub_1ACB57030(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unint64_t **)(v0 + 32));
}

uint64_t sub_1ACB58D44()
{
  return swift_deallocObject();
}

uint64_t sub_1ACB58D54()
{
  return sub_1ACB569DC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unint64_t **)(v0 + 32));
}

uint64_t sub_1ACB58D60()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_32Tm()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACB58DB4()
{
  return swift_deallocObject();
}

uint64_t ReadOnlyCurrentValueSubject.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t ReadOnlyCurrentValueSubject.value.getter()
{
  return sub_1ACE758F8();
}

uint64_t ReadOnlyCurrentValueSubject.receive<A>(subscriber:)()
{
  return sub_1ACE75908();
}

uint64_t sub_1ACB58E7C()
{
  return ReadOnlyCurrentValueSubject.receive<A>(subscriber:)();
}

uint64_t type metadata accessor for ReadOnlyCurrentValueSubject()
{
  return __swift_instantiateGenericMetadata();
}

double ArtworkStyle.iconCornerRadius(for:)(char a1, double a2, double a3)
{
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2 >= a3) {
        a2 = a3;
      }
      return a2 * 0.5;
    }
    else
    {
      return a3 * 0.5;
    }
  }
  else
  {
    double v4 = 3.0;
    if (a2 < 10.0 || a2 > 39.0)
    {
      double v4 = 4.0;
      if (a2 < 40.0 || a2 > 99.0)
      {
        BOOL v7 = a2 > 279.0 || a2 < 99.0;
        double v4 = 6.0;
        if (v7) {
          return 8.0;
        }
      }
    }
    return v4;
  }
}

double static ArtworkStyle.iconHeight(for:width:)(char a1, double result)
{
  if (a1 == 2) {
    return result * 3.0 * 0.25;
  }
  return result;
}

double static ArtworkStyle.iconWidth(for:height:)(char a1, double result)
{
  if (a1 == 2) {
    return result * 4.0 / 3.0;
  }
  return result;
}

uint64_t ArtworkStyle.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x526465646E756F72;
  }
  if (a1 == 1) {
    return 0x646E756F72;
  }
  return 1819044208;
}

uint64_t sub_1ACB58FE0(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = 0x646E756F72;
  if (v2 != 1)
  {
    uint64_t v4 = 1819044208;
    unint64_t v3 = 0xE400000000000000;
  }
  if (*a1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0x526465646E756F72;
  }
  if (v2) {
    unint64_t v6 = v3;
  }
  else {
    unint64_t v6 = 0xEB00000000746365;
  }
  unint64_t v7 = 0xE500000000000000;
  uint64_t v8 = 0x646E756F72;
  if (*a2 != 1)
  {
    uint64_t v8 = 1819044208;
    unint64_t v7 = 0xE400000000000000;
  }
  if (*a2) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0x526465646E756F72;
  }
  if (*a2) {
    unint64_t v10 = v7;
  }
  else {
    unint64_t v10 = 0xEB00000000746365;
  }
  if (v5 == v9 && v6 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1ACB590D4()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACB59174()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACB59200()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACB5929C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s18PodcastsFoundation12ArtworkStyleO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1ACB592CC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEB00000000746365;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x646E756F72;
  if (v2 != 1)
  {
    uint64_t v5 = 1819044208;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x526465646E756F72;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1ACB59328()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACB59388()
{
  return sub_1ACE764C8();
}

uint64_t _s18PodcastsFoundation12ArtworkStyleO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_1ACB59428()
{
  unint64_t result = qword_1E99F25C0;
  if (!qword_1E99F25C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F25C0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ArtworkStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB59548);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkStyle()
{
  return &type metadata for ArtworkStyle;
}

unint64_t sub_1ACB59580()
{
  unint64_t result = qword_1E99F25C8;
  if (!qword_1E99F25C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F25C8);
  }
  return result;
}

id GenericDataSourceSection.__allocating_init(title:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  unsigned int v6 = (uint64_t (**)())&v5[OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock];
  *unsigned int v6 = sub_1ACA58428;
  v6[1] = 0;
  uint64_t v7 = &v5[OBJC_IVAR___MTGenericDataSourceSection_storedTitle];
  *(void *)uint64_t v7 = a1;
  *((void *)v7 + 1) = a2;
  v9.receiver = v5;
  v9.super_class = v2;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t GenericDataSourceSection.storedTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___MTGenericDataSourceSection_storedTitle);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACB5975C()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_retain();
  return v2;
}

uint64_t sub_1ACB597B4(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  return v1 & 1;
}

uint64_t sub_1ACB59888(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_release();
}

uint64_t sub_1ACB598E8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  int v3 = (uint64_t *)(*a1 + OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock);
  swift_beginAccess();
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  *a2 = sub_1ACB59E24;
  a2[1] = v6;
  return swift_retain();
}

uint64_t sub_1ACB59974(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = (uint64_t (**)())(*a2 + OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock);
  swift_beginAccess();
  *uint64_t v6 = sub_1ACB59DEC;
  v6[1] = (uint64_t (*)())v5;
  swift_retain();
  return swift_release();
}

uint64_t (*sub_1ACB59A10())()
{
  return j__swift_endAccess;
}

id GenericDataSourceSection.init(title:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t (**)())&v2[OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock];
  *uint64_t v3 = sub_1ACA58428;
  v3[1] = 0;
  uint64_t v4 = &v2[OBJC_IVAR___MTGenericDataSourceSection_storedTitle];
  *(void *)uint64_t v4 = a1;
  *((void *)v4 + 1) = a2;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for GenericDataSourceSection();
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t type metadata accessor for GenericDataSourceSection()
{
  return self;
}

id GenericDataSourceSection.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void GenericDataSourceSection.init()()
{
}

id GenericDataSourceSection.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GenericDataSourceSection();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for GenericDataSourceSection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GenericDataSourceSection);
}

uint64_t dispatch thunk of GenericDataSourceSection.shouldIncludeSeeAllBlock.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of GenericDataSourceSection.shouldIncludeSeeAllBlock.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of GenericDataSourceSection.shouldIncludeSeeAllBlock.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of GenericDataSourceSection.__allocating_init(title:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1ACB59D58()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1ACB59D90()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1ACB59DB4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB59DEC()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_1ACB59E24@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result & 1;
  return result;
}

uint64_t AssetProcessingStep<>.uniquePipeline(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  MEMORY[0x1F4188790](a1);
  unint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v10, v4, a2);
  swift_retain();
  return UniquePipeline.init(upstream:sharedCache:)((uint64_t)v10, a1, a2, a3, a4);
}

uint64_t UniquePipeline.init(upstream:sharedCache:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v17 - v12;
  uint64_t v14 = type metadata accessor for UniquePipeline();
  *(void *)(a5 + *(int *)(v14 + 48)) = a2;
  uint64_t v15 = *(void *)(a3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(a5 + *(int *)(v14 + 44), a1, a3);
  (*(void (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, a3);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a5, v13, AssociatedTypeWitness);
}

uint64_t type metadata accessor for UniquePipeline()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t UniquePipeline.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t UniquePipeline.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t UniquePipeline.cache.getter()
{
  return swift_retain();
}

uint64_t UniquePipeline.publisher.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v9 = &v12[-v8];
  (*(void (**)(uint64_t, uint64_t))(v4 + 48))(v5, v4);
  uint64_t v10 = *(void *)(v1 + *(int *)(a1 + 48));
  uint64_t v13 = v5;
  uint64_t v14 = v4;
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = v2;
  uint64_t v17 = v9;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  sub_1ACE757F8();
  sub_1ACE76088();
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACB5AF20, (uint64_t)v12, v10);
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  return v18;
}

uint64_t sub_1ACB5A3D4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v89 = a6;
  uint64_t v76 = a3;
  uint64_t v90 = a2;
  v88 = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_1ACE76FD8();
  uint64_t v71 = *(void *)(v11 - 8);
  uint64_t v72 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v85 = (char *)&v70 - v12;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v79 = v13;
  uint64_t v14 = sub_1ACE755E8();
  uint64_t v81 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v80 = (char *)&v70 - v15;
  uint64_t v91 = a4;
  uint64_t v92 = a5;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_1ACE76FD8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v82 = v14;
  uint64_t v77 = WitnessTable;
  uint64_t v17 = sub_1ACE75678();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  uint64_t v18 = type metadata accessor for RepublishingValueSubject();
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v20 = swift_getWitnessTable();
  v100[0] = v17;
  v100[1] = v18;
  v100[2] = v19;
  uint64_t v101 = v20;
  sub_1ACE75748();
  swift_getWitnessTable();
  sub_1ACE755A8();
  swift_getWitnessTable();
  uint64_t v21 = sub_1ACE75598();
  uint64_t v74 = *(void *)(v21 - 8);
  uint64_t v75 = v21;
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  uint64_t v73 = (uint64_t)&v70 - v23;
  uint64_t v24 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  uint64_t v26 = MEMORY[0x1F4188790](v22);
  uint64_t v84 = (char *)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v87 = (uint64_t)&v70 - v27;
  unint64_t v83 = a1;
  uint64_t v28 = *a1;
  uint64_t v29 = v90;
  uint64_t v30 = sub_1ACE757F8();
  uint64_t v31 = v89;
  MEMORY[0x1AD118260](v100, v29, v28, AssociatedTypeWitness, v30);
  uint64_t v86 = v100[0];
  if (v100[0])
  {
    uint64_t v82 = v24;
    uint64_t v32 = type metadata accessor for UniquePipeline();
    uint64_t v33 = swift_getWitnessTable();
    uint64_t v87 = v32;
    unint64_t v83 = (void *)v33;
    AssetProcessingStep.metadataTrace.getter(v32, v33, (uint64_t)&v103);
    if (!v104)
    {
      sub_1ACA50E78((uint64_t)&v103, &qword_1EB772EA0);
      unint64_t v58 = v88;
      uint64_t v39 = v86;
LABEL_14:
      *(void *)&v98[0] = v39;
      AssetProcessingStep.metadataTrace.getter(v87, (uint64_t)v83, (uint64_t)&v103);
      swift_getWitnessTable();
      char v68 = j___s18PodcastsFoundation13EmitLifecycleV16defaultVerbositySbvgZ();
      Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)((uint64_t)&v103, (uint64_t)"FromUniquePipeline", 18, 2, 0, 0, 0, v68 & 1, (uint64_t)v100, v30);
      sub_1ACA50E78((uint64_t)&v103, &qword_1EB772EA0);
      uint64_t v69 = type metadata accessor for EmitLifecycle();
      swift_getWitnessTable();
      uint64_t v56 = sub_1ACE75AD8();
      swift_release();
      uint64_t result = (*(uint64_t (**)(void *, uint64_t))(*(void *)(v69 - 8) + 8))(v100, v69);
      goto LABEL_15;
    }
    sub_1ACA3AABC(&v103, (uint64_t)v100);
    uint64_t v106 = nullsub_1(v28);
    uint64_t v34 = v82;
    uint64_t v35 = v84;
    uint64_t v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 16))(v84, v29, AssociatedTypeWitness);
    MEMORY[0x1F4188790](v36);
    uint64_t v92 = v37;
    sub_1ACE76048();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    int64_t v38 = v85;
    sub_1ACE76408();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, AssociatedTypeWitness);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v38, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v71 + 8))(v38, v72);
      uint64_t v39 = v86;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D370);
      char v59 = swift_dynamicCast();
      uint64_t v39 = v86;
      if (v59)
      {
        sub_1ACA3AABC(v98, (uint64_t)&v103);
        uint64_t v60 = v104;
        uint64_t v61 = v105;
        __swift_project_boxed_opaque_existential_1(&v103, v104);
        (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v61 + 8))(&v93, v60, v61);
        if (v94)
        {
          sub_1ACA3AABC(&v93, (uint64_t)v95);
          uint64_t v62 = v101;
          uint64_t v63 = v102;
          __swift_project_boxed_opaque_existential_1(v100, v101);
          uint64_t v64 = v96;
          uint64_t v65 = v97;
          __swift_project_boxed_opaque_existential_1(v95, v96);
          uint64_t v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8))(v64, v65);
          (*(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 16))("SwitchingToUniquePipelineTrace", 30, 2, v66, v67, v62, v63);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v95);
        }
        else
        {
          sub_1ACA50E78((uint64_t)&v93, &qword_1EB772EA0);
        }
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v103);
        goto LABEL_13;
      }
    }
    uint64_t v99 = 0;
    memset(v98, 0, sizeof(v98));
    sub_1ACA50E78((uint64_t)v98, &qword_1EB7693C8);
LABEL_13:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v100);
    unint64_t v58 = v88;
    uint64_t v30 = v92;
    goto LABEL_14;
  }
  uint64_t v40 = AssociatedTypeWitness;
  uint64_t v70 = AssociatedTypeWitness;
  uint64_t v41 = type metadata accessor for UniquePipeline();
  id v42 = *(char **)(v24 + 16);
  uint64_t v84 = *(char **)(v29 + *(int *)(v41 + 48));
  uint64_t v85 = v42;
  uint64_t v86 = v24 + 16;
  uint64_t v43 = v87;
  ((void (*)(uint64_t, uint64_t, uint64_t))v42)(v87, v29, v40);
  unint64_t v44 = (*(unsigned __int8 *)(v24 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v45 = (char *)swift_allocObject();
  uint64_t v46 = v92;
  *((void *)v45 + 2) = v91;
  *((void *)v45 + 3) = v46;
  id v47 = v84;
  *((void *)v45 + 4) = v31;
  *((void *)v45 + 5) = v47;
  uint64_t v48 = v43;
  uint64_t v49 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(&v45[v44], v48, v70);
  uint64_t v50 = swift_allocObject();
  uint64_t v92 = v30;
  *(void *)(v50 + 16) = sub_1ACB5C04C;
  *(void *)(v50 + 24) = v45;
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = sub_1ACB5C04C;
  *(void *)(v51 + 24) = v45;
  swift_retain_n();
  swift_retain();
  id v52 = v80;
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  uint64_t v53 = v73;
  uint64_t v54 = v82;
  Publisher.replayingBufferedMulticast()(v82, v77, v73);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v52, v54);
  uint64_t v55 = v75;
  swift_getWitnessTable();
  uint64_t v56 = sub_1ACE75AD8();
  (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v53, v55);
  ((void (*)(uint64_t, uint64_t, uint64_t))v85)(v87, v29, v49);
  v100[0] = v56;
  sub_1ACE76088();
  swift_retain();
  sub_1ACE760B8();
  uint64_t result = swift_release();
  unint64_t v58 = v88;
LABEL_15:
  *unint64_t v58 = v56;
  return result;
}

uint64_t sub_1ACB5AF20@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACB5A3D4(a1, v2[5], v2[6], v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1ACB5AF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v13 = &v15[-v12];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(&v15[-v12], a2, AssociatedTypeWitness);
  uint64_t v16 = a3;
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  uint64_t v19 = v13;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  sub_1ACE757F8();
  sub_1ACE76088();
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACB5C1B8, (uint64_t)v15, a1);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
}

uint64_t sub_1ACB5B114()
{
  return swift_release();
}

uint64_t sub_1ACB5B220(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1ACB5B248(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1ACB5B274@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = UniquePipeline.publisher.getter(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1ACB5B29C()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1ACB5B38C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v8 + v10;
  uint64_t v12 = *(void *)(v9 + 64) + 7;
  unint64_t v13 = ((v12 + ((v8 + v10) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 8;
  unsigned int v14 = v10 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v14 > 7 || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0 || v13 > 0x18)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
  }
  else
  {
    uint64_t v18 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v19 = ((unint64_t)a2 + v11) & v18;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v18, v19, v5);
    *(void *)((v12 + (((unint64_t)a1 + v11) & v18)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v12 + v19) & 0xFFFFFFFFFFFFFFF8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_1ACB5B53C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, AssociatedTypeWitness);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))((*(void *)(v5 + 56) + a1 + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80), v3);
  return swift_release();
}

uint64_t sub_1ACB5B620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v7 + 48) + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v12, v13, v5);
  *(void *)((*(void *)(v9 + 48) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v9 + 48) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t sub_1ACB5B720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v7 + 40) + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v12, v13, v5);
  *(void *)((*(void *)(v9 + 40) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v9 + 40) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1ACB5B82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v7 + 32) + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v12, v13, v5);
  *(void *)((*(void *)(v9 + 32) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v9 + 32) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1ACB5B928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v7 + 24) + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v12, v13, v5);
  *(void *)((*(void *)(v9 + 24) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v9 + 24) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1ACB5BA2C(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(v5 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + v11;
  uint64_t v14 = *(void *)(*(void *)(v5 - 8) + 64) + 7;
  if (v12 < a2)
  {
    unint64_t v15 = ((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v16 = v15 & 0xFFFFFFF8;
    if ((v15 & 0xFFFFFFF8) != 0) {
      unsigned int v17 = 2;
    }
    else {
      unsigned int v17 = a2 - v12 + 1;
    }
    if (v17 >= 0x10000) {
      LODWORD(v18) = 4;
    }
    else {
      LODWORD(v18) = 2;
    }
    if (v17 < 0x100) {
      LODWORD(v18) = 1;
    }
    if (v17 >= 2) {
      uint64_t v18 = v18;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v15);
        if (!v19) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v15);
        if (v19) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1ACB5BC84);
      case 4:
        int v19 = *(int *)((char *)a1 + v15);
        if (!v19) {
          break;
        }
LABEL_24:
        int v21 = v19 - 1;
        if (v16)
        {
          int v21 = 0;
          int v22 = *a1;
        }
        else
        {
          int v22 = 0;
        }
        return v12 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  if (v8 == v12)
  {
    uint64_t v23 = *(uint64_t (**)(int *, uint64_t, uint64_t))(v7 + 48);
    return v23(a1, v8, AssociatedTypeWitness);
  }
  else
  {
    unint64_t v24 = ((unint64_t)a1 + v13) & ~v11;
    if (v10 == v12)
    {
      uint64_t v25 = *(uint64_t (**)(unint64_t))(v9 + 48);
      return v25(v24);
    }
    else
    {
      unint64_t v26 = *(void *)((v14 + v24) & 0xFFFFFFFFFFFFFFF8);
      if (v26 >= 0xFFFFFFFF) {
        LODWORD(v26) = -1;
      }
      return (v26 + 1);
    }
  }
}

void sub_1ACB5BC98(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = *(void *)(v7 - 8);
  unsigned int v12 = *(_DWORD *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  if (v12 <= v10) {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  uint64_t v15 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + v13;
  uint64_t v16 = *(void *)(*(void *)(v7 - 8) + 64) + 7;
  unint64_t v17 = ((v16 + (v15 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v16 + (v15 & ~v13)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v18 = a3 - v14 + 1;
  }
  else {
    unsigned int v18 = 2;
  }
  if (v18 >= 0x10000) {
    int v19 = 4;
  }
  else {
    int v19 = 2;
  }
  if (v18 < 0x100) {
    int v19 = 1;
  }
  if (v18 >= 2) {
    unsigned int v20 = v19;
  }
  else {
    unsigned int v20 = 0;
  }
  if (v14 < a3) {
    uint64_t v21 = v20;
  }
  else {
    uint64_t v21 = 0;
  }
  if (a2 > v14)
  {
    if (((v16 + (v15 & ~v13)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v22 = a2 - v14;
    }
    else {
      int v22 = 1;
    }
    if (((v16 + (v15 & ~v13)) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v23 = ~v14 + a2;
      bzero(a1, ((v16 + (v15 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 8);
      *a1 = v23;
    }
    switch(v21)
    {
      case 1:
        *((unsigned char *)a1 + v17) = v22;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v17) = v22;
        return;
      case 3:
        goto LABEL_50;
      case 4:
        *(_DWORD *)((char *)a1 + v17) = v22;
        return;
      default:
        return;
    }
  }
  uint64_t v24 = ~v13;
  switch(v21)
  {
    case 1:
      *((unsigned char *)a1 + v17) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)((char *)a1 + v17) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_50:
      __break(1u);
      JUMPOUT(0x1ACB5BF44);
    case 4:
      *(_DWORD *)((char *)a1 + v17) = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (a2)
      {
LABEL_35:
        if (v10 == v14)
        {
          uint64_t v25 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v9 + 56);
          v25(a1, a2, v10, AssociatedTypeWitness);
        }
        else
        {
          unint64_t v26 = ((unint64_t)a1 + v15) & v24;
          if (v12 == v14)
          {
            uint64_t v27 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
            v27(v26, a2);
          }
          else
          {
            if ((a2 & 0x80000000) != 0) {
              uint64_t v28 = a2 ^ 0x80000000;
            }
            else {
              uint64_t v28 = (a2 - 1);
            }
            *(void *)((v16 + v26) & 0xFFFFFFFFFFFFFFF8) = v28;
          }
        }
      }
      return;
  }
}

uint64_t sub_1ACB5BF6C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1ACB5C04C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = v0[5];
  uint64_t v6 = (uint64_t)v0 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return sub_1ACB5AF44(v5, v6, v1, v2, v3);
}

uint64_t sub_1ACB5C0EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB5C124()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1ACB5C14C()
{
  return sub_1ACE76168() & 1;
}

uint64_t sub_1ACB5C1B8()
{
  return sub_1ACB5B114();
}

uint64_t dispatch thunk of CategoriesProvider.getAllCategories(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t DummyReachability.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DummyReachability.init()()
{
  return v0;
}

uint64_t DummyReachability.deinit()
{
  return v0;
}

uint64_t DummyReachability.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DummyReachability()
{
  return self;
}

uint64_t method lookup function for DummyReachability(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DummyReachability);
}

uint64_t dispatch thunk of DummyReachability.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of DummyReachability.isReachableViaCellular.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of DummyReachability.isGlobalCellularEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of DummyReachability.isReachable.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DummyReachability.isReachableViaWifi.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DummyReachability.isPodcastsCellularDownloadsEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of TimelineAligner.cancelReading()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TimelineAligner.align(asset:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of TimelineAligner.pauseReadingIfNeeded()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TimelineAligner.resumeReadingIfNeeded()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t PodcastsMediaLibrary.Request.init(playbackQueueContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1ACB5C498(*(void **)a1, (uint64_t)&v33);
  unsigned __int8 v4 = v36;
  if (v36 == 255)
  {
    sub_1ACB5CA04(a1);
    sub_1ACA62728((uint64_t)&v13);
  }
  else
  {
    uint64_t v6 = v34;
    uint64_t v5 = v35;
    long long v12 = v33;
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = *(void **)(a1 + 40);
    uint64_t v9 = *(void *)(a1 + 24);
    swift_bridgeObjectRetain();
    id v10 = v8;
    sub_1ACB5CA04(a1);
    long long v13 = v12;
    uint64_t v14 = v6;
    uint64_t v15 = v5;
    unsigned __int8 v16 = v4;
    unint64_t v17 = v8;
    uint64_t v18 = v9;
    uint64_t v19 = v7;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    char v26 = 0;
    __int16 v25 = 2;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    __int16 v29 = 2;
    long long v30 = 0u;
    long long v31 = 0u;
    char v32 = -1;
    nullsub_1(&v13);
  }
  return sub_1ACABEE1C((uint64_t)&v13, a2);
}

void sub_1ACB5C498(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4 = a1[2];
  if (v4 >= 2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (void **)(a1 + 5);
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v8 = (uint64_t)*(v5 - 1);
      uint64_t v7 = *v5;
      swift_bridgeObjectRetain_n();
      v9._countAndFlagsBits = v8;
      v9._object = v7;
      URLTrackIdentifier.init(string:)(v9);
      if (v10)
      {

        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v11 = v65;
        if (v65)
        {
          char v12 = v66;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v6 = sub_1ACA430F0(0, v6[2] + 1, 1, v6);
          }
          unint64_t v14 = v6[2];
          unint64_t v13 = v6[3];
          if (v14 >= v13 >> 1) {
            uint64_t v6 = sub_1ACA430F0((void *)(v13 > 1), v14 + 1, 1, v6);
          }
          v6[2] = v14 + 1;
          uint64_t v15 = &v6[2 * v14];
          v15[4] = v11;
          *((unsigned char *)v15 + 40) = v12;
        }
      }
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    uint64_t v65 = MEMORY[0x1E4FBC870];
    swift_retain();
    uint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v21 = sub_1ACB5CE80(v20);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    if (*(void *)(v21 + 16) == 1)
    {
      int v22 = *(unsigned __int8 *)(v21 + 40);
      swift_bridgeObjectRelease();
      if (v22 == 4)
      {
        uint64_t v23 = v6[2];
        if (v23)
        {
          long long v24 = v6 + 4;
          __int16 v25 = (void *)MEMORY[0x1E4FBC860];
          uint64_t v63 = a2;
          uint64_t v64 = (void *)MEMORY[0x1E4FBC860];
          while (1)
          {
            uint64_t v26 = *v24;
            uint64_t v27 = *(void *)(*v24 + 16);
            swift_bridgeObjectRetain();
            if (v27)
            {
              unint64_t v28 = sub_1ACA66344(3u);
              if ((v29 & 1) != 0 && (v30 = (unint64_t *)(*(void *)(v26 + 56) + 16 * v28), (unint64_t v31 = v30[1]) != 0))
              {
                unint64_t v32 = *v30;
                swift_bridgeObjectRetain();
                uint64_t v38 = sub_1ACD1C588(v32, v31);
                swift_bridgeObjectRelease();
                uint64_t v39 = v64;
                uint64_t v40 = v25;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v39 = sub_1ACA41D90(0, v64[2] + 1, 1, v64);
                }
                unint64_t v42 = v39[2];
                unint64_t v41 = v39[3];
                if (v42 >= v41 >> 1) {
                  uint64_t v39 = sub_1ACA41D90((void *)(v41 > 1), v42 + 1, 1, v39);
                }
                uint64_t v64 = v39;
                v39[2] = v42 + 1;
                v39[v42 + 4] = v38;
                __int16 v25 = v40;
                a2 = v63;
                if (!*(void *)(v26 + 16)) {
                  goto LABEL_46;
                }
              }
              else if (!*(void *)(v26 + 16))
              {
                goto LABEL_46;
              }
              unint64_t v33 = sub_1ACA66344(3u);
              if (v34)
              {
                uint64_t v35 = (unint64_t *)(*(void *)(v26 + 56) + 16 * v33);
                unint64_t v36 = v35[1];
                if (v36)
                {
                  unint64_t v37 = *v35;
                  swift_bridgeObjectRetain();
                  uint64_t v43 = sub_1ACD1C588(v37, v36);
                  swift_bridgeObjectRelease();
                  if (v43 && v43 != 1000000000000)
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v52 = 0;
                    uint64_t v61 = 0;
                    uint64_t v62 = 0;
                    char v53 = 0;
LABEL_49:
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      __int16 v25 = sub_1ACA42FB0(0, v25[2] + 1, 1, v25);
                    }
                    uint64_t v54 = v25;
                    unint64_t v55 = v25[2];
                    uint64_t v56 = v54;
                    unint64_t v57 = v54[3];
                    if (v55 >= v57 >> 1) {
                      uint64_t v56 = sub_1ACA42FB0((void *)(v57 > 1), v55 + 1, 1, v56);
                    }
                    v56[2] = v55 + 1;
                    unint64_t v58 = &v56[5 * v55];
                    __int16 v25 = v56;
                    v58[4] = v43;
                    v58[5] = v52;
                    v58[6] = v62;
                    v58[7] = v61;
                    *((unsigned char *)v58 + 64) = v53;
                    goto LABEL_47;
                  }
                }
              }
              if (*(void *)(v26 + 16))
              {
                unint64_t v45 = sub_1ACA66344(8u);
                if (v46)
                {
                  id v47 = (uint64_t *)(*(void *)(v26 + 56) + 16 * v45);
                  uint64_t v52 = v47[1];
                  if (v52)
                  {
                    if (*(void *)(v26 + 16))
                    {
                      uint64_t v43 = *v47;
                      swift_bridgeObjectRetain();
                      unint64_t v48 = sub_1ACA66344(5u);
                      if (v49)
                      {
                        uint64_t v50 = (uint64_t *)(*(void *)(v26 + 56) + 16 * v48);
                        uint64_t v51 = v50[1];
                        uint64_t v62 = *v50;
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        uint64_t v61 = v51;
                        if (v51)
                        {
                          char v53 = 1;
                          goto LABEL_49;
                        }
                      }
                      else
                      {
                        swift_bridgeObjectRelease();
                      }
                    }
                  }
                }
              }
            }
LABEL_46:
            swift_bridgeObjectRelease();
LABEL_47:
            v24 += 2;
            if (!--v23) {
              goto LABEL_62;
            }
          }
        }
        __int16 v25 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v64 = (void *)MEMORY[0x1E4FBC860];
LABEL_62:
        swift_bridgeObjectRelease();
        uint64_t v60 = (void *)(a2 + 8);
        if (v64[2] >= v25[2])
        {
          swift_bridgeObjectRelease();
          *(void *)a2 = v64;
          *(void *)(a2 + 16) = 0;
          *(void *)(a2 + 24) = 0;
          *uint64_t v60 = 0;
          char v59 = 1;
        }
        else
        {
          swift_bridgeObjectRelease();
          *(void *)a2 = v25;
          *(void *)(a2 + 16) = 0;
          *(void *)(a2 + 24) = 0;
          *uint64_t v60 = 0;
          char v59 = 7;
        }
        goto LABEL_58;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_57:
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    char v59 = -1;
LABEL_58:
    *(unsigned char *)(a2 + 32) = v59;
    return;
  }
  if (!v4) {
    goto LABEL_57;
  }
  uint64_t v17 = a1[4];
  unsigned __int8 v16 = (void *)a1[5];
  swift_bridgeObjectRetain();
  v18._countAndFlagsBits = v17;
  v18._object = v16;
  URLTrackIdentifier.init(string:)(v18);
  if (v19)
  {

    goto LABEL_57;
  }
  if (!v65) {
    goto LABEL_57;
  }
  sub_1ACB5CA60((uint64_t)&v65, a2);
  swift_bridgeObjectRelease();
}

uint64_t sub_1ACB5CA04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1ACB5CA60(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)a1;
  switch(*(unsigned char *)(a1 + 8))
  {
    case 1:
      if (!*(void *)(v2 + 16)) {
        goto LABEL_37;
      }
      unint64_t v5 = sub_1ACA66344(2u);
      if ((v6 & 1) == 0 || (uint64_t v7 = (unint64_t *)(*(void *)(v2 + 56) + 16 * v5), (v8 = v7[1]) == 0))
      {
        if (!*(void *)(v2 + 16)) {
          goto LABEL_37;
        }
        unint64_t v10 = sub_1ACA66344(3u);
        if (v11)
        {
          char v12 = (unint64_t *)(*(void *)(v2 + 56) + 16 * v10);
          unint64_t v13 = v12[1];
          if (v13) {
            goto LABEL_10;
          }
        }
        if (*(void *)(v2 + 16))
        {
          unint64_t v15 = sub_1ACA66344(0);
          if (v16)
          {
            uint64_t v17 = (void *)(*(void *)(v2 + 56) + 16 * v15);
            uint64_t v18 = v17[1];
            if (v18)
            {
              *(void *)a2 = *v17;
              *(void *)(a2 + 8) = v18;
              *(void *)(a2 + 16) = 0;
              *(void *)(a2 + 24) = 0;
              char v19 = 3;
              goto LABEL_19;
            }
          }
        }
        goto LABEL_37;
      }
      unint64_t v9 = *v7;
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_1ACD1C588(v9, v8);
      swift_bridgeObjectRelease();
      *(void *)a2 = v42;
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 24) = 0;
      *(unsigned char *)(a2 + 32) = 0;
      return;
    case 2:
      if (!*(void *)(v2 + 16)
        || (unint64_t v20 = sub_1ACA66344(0), (v21 & 1) == 0)
        || (int v22 = (void *)(*(void *)(v2 + 56) + 16 * v20), (v23 = v22[1]) == 0))
      {
        if (qword_1E99EFF10 != -1) {
          swift_once();
        }
        uint64_t v36 = sub_1ACE754C8();
        __swift_project_value_buffer(v36, (uint64_t)qword_1E99F2C40);
        unint64_t v37 = sub_1ACE75498();
        os_log_type_t v38 = sub_1ACE76C08();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v39 = 0;
          _os_log_impl(&dword_1AC9D5000, v37, v38, "Unable to find station UUID in track identifier", v39, 2u);
          MEMORY[0x1AD11B340](v39, -1, -1);
        }

        goto LABEL_37;
      }
      *(void *)a2 = *v22;
      *(void *)(a2 + 8) = v23;
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 24) = 0;
      char v19 = 4;
LABEL_19:
      *(unsigned char *)(a2 + 32) = v19;
      goto LABEL_27;
    case 3:
      goto LABEL_37;
    case 4:
      if (!*(void *)(v2 + 16)) {
        goto LABEL_30;
      }
      unint64_t v24 = sub_1ACA66344(3u);
      if (v25)
      {
        char v12 = (unint64_t *)(*(void *)(v2 + 56) + 16 * v24);
        unint64_t v13 = v12[1];
        if (v13)
        {
LABEL_10:
          unint64_t v14 = *v12;
          swift_bridgeObjectRetain();
          uint64_t v40 = sub_1ACD1C588(v14, v13);
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7694A0);
          uint64_t v41 = swift_allocObject();
          *(_OWORD *)(v41 + 16) = xmmword_1ACE843F0;
          *(void *)(v41 + 32) = v40;
          *(void *)a2 = v41;
          *(void *)(a2 + 8) = 0;
          *(void *)(a2 + 16) = 0;
          *(void *)(a2 + 24) = 0;
          char v4 = 1;
LABEL_38:
          *(unsigned char *)(a2 + 32) = v4;
          return;
        }
      }
      if (!*(void *)(v2 + 16)
        || (unint64_t v26 = sub_1ACA66344(1u), (v27 & 1) == 0)
        || (unint64_t v28 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v26), (v29 = v28[1]) == 0))
      {
LABEL_30:
        uint64_t v44 = v2;
        char v45 = 4;
        swift_bridgeObjectRetain();
        sub_1ACC454E4(&v44, (uint64_t)&v46);
        unsigned __int8 v32 = v49;
        if (v49 != 255)
        {
          uint64_t v34 = v47;
          uint64_t v33 = v48;
          long long v43 = v46;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0D48);
          uint64_t v35 = swift_allocObject();
          *(_OWORD *)(v35 + 16) = xmmword_1ACE843F0;
          *(_OWORD *)(v35 + 32) = v43;
          *(void *)(v35 + 48) = v34;
          *(void *)(v35 + 56) = v33;
          *(unsigned char *)(v35 + 64) = v32 & 1;
          *(void *)a2 = v35;
          *(void *)(a2 + 8) = 0;
          *(void *)(a2 + 16) = 0;
          *(void *)(a2 + 24) = 0;
          *(unsigned char *)(a2 + 32) = 7;
          return;
        }
LABEL_37:
        *(_OWORD *)a2 = 0u;
        *(_OWORD *)(a2 + 16) = 0u;
        char v4 = -1;
        goto LABEL_38;
      }
      uint64_t v30 = *v28;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1ACE843F0;
      *(void *)(v31 + 32) = v30;
      *(void *)(v31 + 40) = v29;
      *(void *)a2 = v31;
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 24) = 0;
      *(unsigned char *)(a2 + 32) = 2;
LABEL_27:
      swift_bridgeObjectRetain();
      return;
    default:
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      char v4 = 8;
      goto LABEL_38;
  }
}

uint64_t sub_1ACB5CE80(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v2 = 0;
  uint64_t v3 = result + 40;
  uint64_t v4 = -(uint64_t)v1;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v14 = result + 40;
  unint64_t v15 = *(void *)(result + 16);
  do
  {
    if (v2 <= v1) {
      unint64_t v6 = v1;
    }
    else {
      unint64_t v6 = v2;
    }
    uint64_t v7 = -(uint64_t)v6;
    for (i = (unsigned char *)(v3 + 16 * v2++); ; i += 16)
    {
      if (v7 + v2 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v9 = *((void *)i - 1);
      char v10 = *i;
      uint64_t v17 = v9;
      char v18 = v10;
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      if (sub_1ACD315CC(v16, v16[1])) {
        break;
      }
      uint64_t result = swift_bridgeObjectRelease();
      ++v2;
      if (v4 + v2 == 1) {
        return v5;
      }
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = v5;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1ACC83150(0, *(void *)(v5 + 16) + 1, 1);
      uint64_t v5 = v19;
    }
    unint64_t v12 = *(void *)(v5 + 16);
    unint64_t v11 = *(void *)(v5 + 24);
    if (v12 >= v11 >> 1)
    {
      uint64_t result = sub_1ACC83150(v11 > 1, v12 + 1, 1);
      uint64_t v5 = v19;
    }
    *(void *)(v5 + 16) = v12 + 1;
    uint64_t v13 = v5 + 16 * v12;
    *(void *)(v13 + 32) = v9;
    *(unsigned char *)(v13 + 40) = v10;
    uint64_t v3 = v14;
    unint64_t v1 = v15;
  }
  while (v4 + v2);
  return v5;
}

uint64_t MetricsPageVariant.rawValue.getter(uint64_t a1)
{
  return a1;
}

unint64_t MetricsPageVariant.debugDescription.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t sub_1ACB5D0E4()
{
  return MetricsPageVariant.debugDescription.getter();
}

uint64_t MetricsPageVariant.description.getter(uint64_t a1)
{
  return a1;
}

uint64_t MetricsPageVariant.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_1ACE77858();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsPageVariant.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE778D8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsPageVariant.basic.getter()
{
  return 0x6369736162;
}

uint64_t static MetricsPageVariant.episodes.getter()
{
  return 0x7365646F73697045;
}

uint64_t static MetricsPageVariant.shows.getter()
{
  return 0x73776F6853;
}

uint64_t static MetricsPageVariant.video.getter()
{
  return 0x6F65646976;
}

unint64_t sub_1ACB5D2D8()
{
  unint64_t result = qword_1E99F25E0;
  if (!qword_1E99F25E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F25E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsPageVariant()
{
  return &type metadata for MetricsPageVariant;
}

uint64_t sub_1ACB5D33C()
{
  sub_1ACA50D4C(0, &qword_1EB76E320);
  uint64_t result = sub_1ACE76F98();
  qword_1E99F25F0 = result;
  return result;
}

uint64_t sub_1ACB5D3EC()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1ACB5D4A0(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_delegate);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_1ACB5D4F4(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_delegate);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1ACB5D560())()
{
  return j__swift_endAccess;
}

id MAPIResponseDatabaseObjectProvider.__allocating_init(with:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1ACB5EC74(a1);
  swift_unknownObjectRelease();
  return v4;
}

id MAPIResponseDatabaseObjectProvider.init(with:)(uint64_t a1)
{
  id v1 = sub_1ACB5EC74(a1);
  swift_unknownObjectRelease();
  return v1;
}

void *sub_1ACB5D678(uint64_t a1, uint64_t a2)
{
  sub_1ACB5D850();
  uint64_t v5 = qword_1E99EFE98;
  id v6 = *(id *)(v2 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_databaseObjectsCache);
  if (v5 != -1) {
    swift_once();
  }
  id v7 = objc_msgSend(v6, sel_objectForKey_, qword_1E99F25F0);

  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2608);
    sub_1ACE75FE8();
  }
  unint64_t v8 = sub_1ACA3A5A0(MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRelease();
  if (*(void *)(v8 + 16) && (unint64_t v9 = sub_1ACA65E48(a2), (v10 & 1) != 0))
  {
    uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(void *)(v11 + 16) && (uint64_t v12 = sub_1ACA6A1FC(a1), (v13 & 1) != 0))
    {
      uint64_t v14 = *(void **)(*(void *)(v11 + 56) + 8 * v12);
      id v15 = v14;
    }
    else
    {
      uint64_t v14 = 0;
    }
  }
  else
  {
    uint64_t v14 = 0;
  }
  swift_bridgeObjectRelease();
  return v14;
}

void sub_1ACB5D850()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_needsParsing) == 1)
  {
    uint64_t v1 = v0;
    uint64_t v21 = OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_needsParsing;
    uint64_t v2 = (void *)sub_1ACA3A5A0(MEMORY[0x1E4FBC860]);
    uint64_t v3 = 0;
    while (1)
    {
      uint64_t v5 = *(char **)((char *)&unk_1F03806C8 + v3 + 32);
      id v6 = (void *)sub_1ACB5DAAC(v5);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v23 = v2;
      unint64_t v8 = v2;
      unint64_t v10 = sub_1ACA65E48((uint64_t)v5);
      uint64_t v11 = v2[2];
      BOOL v12 = (v9 & 1) == 0;
      uint64_t v13 = v11 + v12;
      if (__OFADD__(v11, v12))
      {
        __break(1u);
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      char v14 = v9;
      if (v2[3] >= v13)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v2 = v23;
          if ((v9 & 1) == 0) {
            goto LABEL_12;
          }
        }
        else
        {
          unint64_t v8 = &v23;
          sub_1ACD07978();
          uint64_t v2 = v23;
          if ((v14 & 1) == 0) {
            goto LABEL_12;
          }
        }
      }
      else
      {
        sub_1ACCFF54C(v13, isUniquelyReferenced_nonNull_native);
        unint64_t v8 = v23;
        unint64_t v15 = sub_1ACA65E48((uint64_t)v5);
        if ((v14 & 1) != (v16 & 1))
        {
          sub_1ACE77A68();
          __break(1u);
          return;
        }
        unint64_t v10 = v15;
        uint64_t v2 = v23;
        if ((v14 & 1) == 0)
        {
LABEL_12:
          v2[(v10 >> 6) + 8] |= 1 << v10;
          uint64_t v17 = 8 * v10;
          *(void *)(v2[6] + v17) = v5;
          *(void *)(v2[7] + v17) = v6;
          uint64_t v18 = v2[2];
          BOOL v19 = __OFADD__(v18, 1);
          uint64_t v20 = v18 + 1;
          if (v19) {
            goto LABEL_20;
          }
          v2[2] = v20;
          goto LABEL_4;
        }
      }
      uint64_t v4 = v2[7];
      swift_bridgeObjectRelease();
      *(void *)(v4 + 8 * v10) = v6;
LABEL_4:
      swift_bridgeObjectRelease();
      v3 += 8;
      if (v3 == 48)
      {
        unint64_t v8 = *(id *)(v1 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_databaseObjectsCache);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2608);
        id v6 = (void *)sub_1ACE75FC8();
        swift_bridgeObjectRelease();
        if (qword_1E99EFE98 == -1)
        {
LABEL_17:
          objc_msgSend(v8, sel_setObject_forKey_, v6, qword_1E99F25F0, v21);

          *(unsigned char *)(v1 + v22) = 0;
          return;
        }
LABEL_21:
        swift_once();
        goto LABEL_17;
      }
    }
  }
}

uint64_t sub_1ACB5DAAC(char *a1)
{
  v139[1] = *(id *)MEMORY[0x1E4F143B8];
  id v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_response), sel_itemsFor_));
  unint64_t v3 = sub_1ACE76578();

  if (v3 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1ACE77508();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v6 = 4;
      while (1)
      {
        uint64_t v7 = v6 - 4;
        if ((v3 & 0xC000000000000001) != 0)
        {
          unint64_t v8 = (void *)MEMORY[0x1AD119490](v6 - 4, v3);
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          unint64_t v8 = *(void **)(v3 + 8 * v6);
          swift_unknownObjectRetain();
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        unint64_t v10 = v5;
        if ((objc_msgSend(v8, sel_respondsToSelector_, "id") & 1) == 0) {
          __break(1u);
        }
        id v11 = [v8 id];
        uint64_t v12 = sub_1ACE761B8();
        unint64_t v14 = v13;

        uint64_t v15 = sub_1ACCCB6A4(v12, v14);
        LOBYTE(v12) = v16;
        swift_unknownObjectRelease();
        if (v12)
        {
          uint64_t v5 = v10;
        }
        else
        {
          uint64_t v5 = v10;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v5 = sub_1ACA42BF4(0, v10[2] + 1, 1, v10);
          }
          unint64_t v18 = v5[2];
          unint64_t v17 = v5[3];
          if (v18 >= v17 >> 1) {
            uint64_t v5 = sub_1ACA42BF4((void *)(v17 > 1), v18 + 1, 1, v5);
          }
          v5[2] = v18 + 1;
          v5[v18 + 4] = v15;
        }
        ++v6;
        if (v9 == v4) {
          goto LABEL_21;
        }
      }
    }
  }
  uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
LABEL_21:
  swift_bridgeObjectRelease_n();
  BOOL v19 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v20 = sub_1ACA3A420(MEMORY[0x1E4FBC860]);
  if ((unint64_t)(a1 - 2) < 4)
  {
    swift_bridgeObjectRelease();
    unint64_t v21 = sub_1ACA3A420(MEMORY[0x1E4FBC860]);
    swift_bridgeObjectRelease();
    return v21;
  }
  uint64_t v23 = v5;
  if (!a1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1ACE84470;
    *(void *)(v24 + 32) = sub_1ACE761B8();
    *(void *)(v24 + 40) = v25;
    *(void *)(v24 + 48) = sub_1ACE761B8();
    *(void *)(v24 + 56) = v26;
    *(void *)(v24 + 64) = sub_1ACE761B8();
    *(void *)(v24 + 72) = v27;
    sub_1ACE761B8();
    id v28 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
    uint64_t v29 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    uint64_t v30 = (char *)objc_msgSend(v28, sel_initWithEntityName_, v29);

    uint64_t v31 = v5[2];
    a1 = v30;
    if (v31)
    {
      v139[0] = v19;
      sub_1ACE773D8();
      uint64_t v32 = 0;
      do
      {
        uint64_t v33 = v32 + 1;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithLongLong_, v5[v32 + 4]);
        sub_1ACE773A8();
        sub_1ACE773E8();
        uint64_t v5 = v23;
        sub_1ACE773F8();
        sub_1ACE773B8();
        uint64_t v32 = v33;
      }
      while (v31 != v33);
      id v34 = v139[0];
      swift_bridgeObjectRelease();
      uint64_t v30 = a1;
    }
    else
    {
      swift_bridgeObjectRelease();
      id v34 = (id)MEMORY[0x1E4FBC860];
    }
    uint64_t v48 = self;
    sub_1ACDF7264((unint64_t)v34);
    swift_bridgeObjectRelease();
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
    sub_1ACB19998();
    unsigned __int8 v49 = (void *)sub_1ACE76978();
    swift_bridgeObjectRelease();
    id v50 = objc_msgSend(v48, sel_predicateForPodcastStoreIDs_, v49);

    id v51 = objc_msgSend(v48, sel_predicateForNotHiddenPodcasts);
    id v52 = objc_msgSend(v50, sel_AND_, v51);

    objc_msgSend(v30, sel_setPredicate_, v52);
    sub_1ACA4E0D0(v24);
    char v53 = (void *)sub_1ACE76558();
    swift_bridgeObjectRelease();
    objc_msgSend(v30, sel_setPropertiesToFetch_, v53);

    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
    uint64_t v54 = (void *)sub_1ACE76558();
    objc_msgSend(v30, sel_setSortDescriptors_, v54);

    uint64_t v55 = OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_showsFRC;
    uint64_t isUniquelyReferenced_nonNull_native = v20;
    if (*(void *)(v135 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_showsFRC))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v80 = self;
      uint64_t v81 = v30;
      id v82 = objc_msgSend(v80, sel_sharedInstance);
      id v83 = objc_msgSend(v82, sel_mainQueueContext);

      id v84 = objc_msgSend(objc_allocWithZone((Class)MTFetchedResultsController), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v81, v83, 0, 0);
      uint64_t v85 = *(void **)(v135 + v55);
      *(void *)(v135 + v55) = v84;

      uint64_t v86 = *(void **)(v135 + v55);
      if (v86)
      {
        id v87 = v86;
        v88 = (void *)sub_1ACE76558();
        swift_bridgeObjectRelease();
        objc_msgSend(v87, sel_setPropertyKeys_, v88);

        uint64_t v89 = *(void **)(v135 + v55);
        if (!v89) {
          goto LABEL_93;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v89 = *(void **)(v135 + v55);
        if (!v89) {
          goto LABEL_93;
        }
      }
      objc_msgSend(v89, sel_setDelegate_, v135);
      v127 = *(void **)(v135 + v55);
      if (!v127) {
        goto LABEL_93;
      }
      v139[0] = 0;
      if (objc_msgSend(v127, sel_performFetch_, v139))
      {
        id v128 = v139[0];
      }
      else
      {
        id v131 = v139[0];
        v132 = (void *)sub_1ACE74D78();

        swift_willThrow();
      }
    }
    unint64_t v57 = *(void **)(v135 + v55);
    if (v57)
    {
      id v58 = objc_msgSend(v57, sel_fetchedObjects);
      if (v58)
      {
        char v59 = v58;
        sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F80);
        unint64_t v60 = sub_1ACE76578();

        if (v60 >> 62) {
          goto LABEL_102;
        }
        uint64_t v61 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        while (v61)
        {
          unint64_t v137 = v60 & 0xC000000000000001;
          uint64_t v62 = 4;
          while (1)
          {
            id v64 = v137 ? (id)MEMORY[0x1AD119490](v62 - 4, v60) : *(id *)(v60 + 8 * v62);
            id v65 = v64;
            uint64_t v66 = v62 - 3;
            if (__OFADD__(v62 - 4, 1)) {
              break;
            }
            unint64_t v67 = v60;
            unint64_t v60 = (unint64_t)objc_msgSend(v64, sel_storeCollectionId);
            char v68 = (void *)isUniquelyReferenced_nonNull_native;
            uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v139[0] = v68;
            unint64_t v70 = sub_1ACA6A1FC(v60);
            uint64_t v71 = v68[2];
            BOOL v72 = (v69 & 1) == 0;
            uint64_t v73 = v71 + v72;
            if (__OFADD__(v71, v72)) {
              goto LABEL_98;
            }
            char v74 = v69;
            if (v68[3] >= v73)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                sub_1ACD077D0();
              }
            }
            else
            {
              sub_1ACCFF290(v73, isUniquelyReferenced_nonNull_native);
              uint64_t v75 = sub_1ACA6A1FC(v60);
              if ((v74 & 1) != (v76 & 1)) {
                goto LABEL_108;
              }
              unint64_t v70 = v75;
            }
            uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v139[0];
            if (v74)
            {
              uint64_t v63 = *((void *)v139[0] + 7);

              *(void *)(v63 + 8 * v70) = v65;
            }
            else
            {
              *((void *)v139[0] + (v70 >> 6) + 8) |= 1 << v70;
              *(void *)(*(void *)(isUniquelyReferenced_nonNull_native + 48) + 8 * v70) = v60;
              *(void *)(*(void *)(isUniquelyReferenced_nonNull_native + 56) + 8 * v70) = v65;
              uint64_t v77 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
              BOOL v78 = __OFADD__(v77, 1);
              uint64_t v79 = v77 + 1;
              if (v78) {
                goto LABEL_100;
              }
              *(void *)(isUniquelyReferenced_nonNull_native + 16) = v79;
            }
            swift_bridgeObjectRelease();
            ++v62;
            unint64_t v60 = v67;
            if (v66 == v61) {
              goto LABEL_105;
            }
          }
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
LABEL_101:
          __break(1u);
LABEL_102:
          swift_bridgeObjectRetain_n();
          uint64_t v61 = sub_1ACE77508();
          swift_bridgeObjectRelease();
        }
        goto LABEL_105;
      }
    }
LABEL_93:

    return isUniquelyReferenced_nonNull_native;
  }
  if (a1 != (char *)1) {
    goto LABEL_109;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1ACE8FAB0;
  *(void *)(v35 + 32) = sub_1ACE761B8();
  *(void *)(v35 + 40) = v36;
  *(void *)(v35 + 48) = sub_1ACE761B8();
  *(void *)(v35 + 56) = v37;
  *(void *)(v35 + 64) = sub_1ACE761B8();
  *(void *)(v35 + 72) = v38;
  *(void *)(v35 + 80) = sub_1ACE761B8();
  *(void *)(v35 + 88) = v39;
  *(void *)(v35 + 96) = sub_1ACE761B8();
  *(void *)(v35 + 104) = v40;
  *(void *)(v35 + 112) = sub_1ACE761B8();
  *(void *)(v35 + 120) = v41;
  sub_1ACE761B8();
  id v42 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  long long v43 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  uint64_t v30 = (char *)objc_msgSend(v42, sel_initWithEntityName_, v43);

  uint64_t v44 = v5[2];
  a1 = v30;
  if (v44)
  {
    v139[0] = v19;
    sub_1ACE773D8();
    uint64_t v45 = 0;
    do
    {
      uint64_t v46 = v45 + 1;
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithLongLong_, v5[v45 + 4]);
      sub_1ACE773A8();
      sub_1ACE773E8();
      uint64_t v5 = v23;
      sub_1ACE773F8();
      sub_1ACE773B8();
      uint64_t v45 = v46;
    }
    while (v44 != v46);
    id v47 = v139[0];
    swift_bridgeObjectRelease();
    uint64_t v30 = a1;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v47 = (id)MEMORY[0x1E4FBC860];
  }
  uint64_t v90 = self;
  sub_1ACDF7264((unint64_t)v47);
  swift_bridgeObjectRelease();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
  sub_1ACB19998();
  uint64_t v91 = (void *)sub_1ACE76978();
  swift_bridgeObjectRelease();
  id v92 = objc_msgSend(v90, sel_predicateForEpisodeStoreTrackIds_, v91);

  objc_msgSend(v30, sel_setPredicate_, v92);
  sub_1ACA4E0D0(v35);
  long long v93 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_setPropertiesToFetch_, v93);

  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  uint64_t v94 = (void *)sub_1ACE76558();
  objc_msgSend(v30, sel_setSortDescriptors_, v94);

  uint64_t v95 = OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_episodesFRC;
  uint64_t isUniquelyReferenced_nonNull_native = v20;
  if (*(void *)(v135 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_episodesFRC))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v117 = self;
    v118 = v30;
    id v119 = objc_msgSend(v117, sel_sharedInstance);
    id v120 = objc_msgSend(v119, sel_mainQueueContext);

    id v121 = objc_msgSend(objc_allocWithZone((Class)MTFetchedResultsController), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v118, v120, 0, 0);
    v122 = *(void **)(v135 + v95);
    *(void *)(v135 + v95) = v121;

    v123 = *(void **)(v135 + v95);
    if (v123)
    {
      id v124 = v123;
      v125 = (void *)sub_1ACE76558();
      swift_bridgeObjectRelease();
      objc_msgSend(v124, sel_setPropertyKeys_, v125);

      v126 = *(void **)(v135 + v95);
      if (!v126) {
        goto LABEL_93;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v126 = *(void **)(v135 + v95);
      if (!v126) {
        goto LABEL_93;
      }
    }
    objc_msgSend(v126, sel_setDelegate_, v135);
    v129 = *(void **)(v135 + v95);
    if (!v129) {
      goto LABEL_93;
    }
    v139[0] = 0;
    if (objc_msgSend(v129, sel_performFetch_, v139))
    {
      id v130 = v139[0];
    }
    else
    {
      id v133 = v139[0];
      v134 = (void *)sub_1ACE74D78();

      swift_willThrow();
    }
  }
  uint64_t v96 = *(void **)(v135 + v95);
  if (!v96) {
    goto LABEL_93;
  }
  id v97 = objc_msgSend(v96, sel_fetchedObjects);
  if (!v97) {
    goto LABEL_93;
  }
  v98 = v97;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  unint64_t v60 = sub_1ACE76578();

  if (v60 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v99 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v99) {
      goto LABEL_66;
    }
LABEL_105:

    swift_bridgeObjectRelease_n();
    return isUniquelyReferenced_nonNull_native;
  }
  uint64_t v99 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v99) {
    goto LABEL_105;
  }
LABEL_66:
  unint64_t v138 = v60 & 0xC000000000000001;
  uint64_t v100 = 4;
  while (1)
  {
    if (v138) {
      id v102 = (id)MEMORY[0x1AD119490](v100 - 4, v60);
    }
    else {
      id v102 = *(id *)(v60 + 8 * v100);
    }
    id v103 = v102;
    uint64_t v104 = v100 - 3;
    if (__OFADD__(v100 - 4, 1)) {
      goto LABEL_97;
    }
    unint64_t v105 = v60;
    unint64_t v60 = (unint64_t)objc_msgSend(v102, sel_storeTrackId);
    uint64_t v106 = (void *)isUniquelyReferenced_nonNull_native;
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v139[0] = v106;
    unint64_t v108 = sub_1ACA6A1FC(v60);
    uint64_t v109 = v106[2];
    BOOL v110 = (v107 & 1) == 0;
    uint64_t v111 = v109 + v110;
    if (__OFADD__(v109, v110)) {
      goto LABEL_99;
    }
    char v112 = v107;
    if (v106[3] >= v111)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1ACD077D0();
      }
      goto LABEL_79;
    }
    sub_1ACCFF290(v111, isUniquelyReferenced_nonNull_native);
    uint64_t v113 = sub_1ACA6A1FC(v60);
    if ((v112 & 1) != (v114 & 1)) {
      break;
    }
    unint64_t v108 = v113;
LABEL_79:
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v139[0];
    if (v112)
    {
      uint64_t v101 = *((void *)v139[0] + 7);

      *(void *)(v101 + 8 * v108) = v103;
    }
    else
    {
      *((void *)v139[0] + (v108 >> 6) + 8) |= 1 << v108;
      *(void *)(*(void *)(isUniquelyReferenced_nonNull_native + 48) + 8 * v108) = v60;
      *(void *)(*(void *)(isUniquelyReferenced_nonNull_native + 56) + 8 * v108) = v103;
      uint64_t v115 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
      BOOL v78 = __OFADD__(v115, 1);
      uint64_t v116 = v115 + 1;
      if (v78) {
        goto LABEL_101;
      }
      *(void *)(isUniquelyReferenced_nonNull_native + 16) = v116;
    }
    swift_bridgeObjectRelease();
    ++v100;
    unint64_t v60 = v105;
    if (v104 == v99) {
      goto LABEL_105;
    }
  }
LABEL_108:
  sub_1ACE77A68();
  __break(1u);
LABEL_109:
  v139[0] = a1;
  uint64_t result = sub_1ACE77A18();
  __break(1u);
  return result;
}

id sub_1ACB5EA60()
{
  *(unsigned char *)(v0 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_needsParsing) = 1;
  uint64_t v1 = (id *)(v0 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_delegate);
  swift_beginAccess();
  id result = *v1;
  if (*v1) {
    return objc_msgSend(result, sel_mapiResponseDatabaseObjectsDidChange);
  }
  return result;
}

id MAPIResponseDatabaseObjectProvider.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MAPIResponseDatabaseObjectProvider.init()()
{
}

id MAPIResponseDatabaseObjectProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MAPIResponseDatabaseObjectProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1ACB5EC74(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_databaseObjectsCache;
  id v4 = objc_allocWithZone(MEMORY[0x1E4F1C998]);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  v5[OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_needsParsing] = 1;
  *(void *)&v5[OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_showsFRC] = 0;
  *(void *)&v5[OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_episodesFRC] = 0;
  *(void *)&v5[OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_delegate] = 0;
  *(void *)&v5[OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_response] = a1;
  swift_unknownObjectRetain();

  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for MAPIResponseDatabaseObjectProvider();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for MAPIResponseDatabaseObjectProvider()
{
  return self;
}

uint64_t sub_1ACB5ED64@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___MTMAPIResponseDatabaseObjectProvider_delegate);
  swift_beginAccess();
  *a2 = *v3;
  return swift_unknownObjectRetain();
}

uint64_t method lookup function for MAPIResponseDatabaseObjectProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MAPIResponseDatabaseObjectProvider);
}

uint64_t dispatch thunk of MAPIResponseDatabaseObjectProvider.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of MAPIResponseDatabaseObjectProvider.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of MAPIResponseDatabaseObjectProvider.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of MAPIResponseDatabaseObjectProvider.__allocating_init(with:)()
{
  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of MAPIResponseDatabaseObjectProvider.databaseObject(with:contentType:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of MAPIResponseDatabaseObjectProvider.controllerDidChangeContent(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t sub_1ACB5EF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1ACB5EF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1ACB5EF38@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = a1[11];
  *(_OWORD *)&v68[16] = a1[10];
  long long v69 = v3;
  long long v70 = a1[12];
  unsigned __int8 v71 = *((unsigned char *)a1 + 208);
  long long v4 = a1[7];
  long long v65 = a1[6];
  long long v66 = v4;
  long long v5 = a1[9];
  long long v67 = a1[8];
  *(_OWORD *)char v68 = v5;
  long long v6 = a1[3];
  *(_OWORD *)uint64_t v62 = a1[2];
  *(_OWORD *)&v62[16] = v6;
  long long v7 = a1[5];
  long long v63 = a1[4];
  long long v64 = v7;
  long long v8 = a1[1];
  long long v60 = *a1;
  long long v61 = v8;
  if (v68[24] || (long long v9 = v60, v10 = v61, ((1 << v62[0]) & 0xF7) != 0) || v62[0] != 3)
  {
    long long v11 = a1[11];
    *(_OWORD *)(a2 + 160) = a1[10];
    *(_OWORD *)(a2 + 176) = v11;
    *(_OWORD *)(a2 + 192) = a1[12];
    *(unsigned char *)(a2 + 208) = *((unsigned char *)a1 + 208);
    long long v12 = a1[7];
    *(_OWORD *)(a2 + 96) = a1[6];
    *(_OWORD *)(a2 + 112) = v12;
    long long v13 = a1[9];
    *(_OWORD *)(a2 + 128) = a1[8];
    *(_OWORD *)(a2 + 144) = v13;
    long long v14 = a1[3];
    *(_OWORD *)(a2 + 32) = a1[2];
    *(_OWORD *)(a2 + 48) = v14;
    long long v15 = a1[5];
    *(_OWORD *)(a2 + 64) = a1[4];
    *(_OWORD *)(a2 + 80) = v15;
    long long v16 = *a1;
    long long v17 = a1[1];
LABEL_4:
    *(_OWORD *)a2 = v16;
    *(_OWORD *)(a2 + 16) = v17;
    return sub_1ACA64A2C((uint64_t)&v60);
  }
  sub_1ACA639E4(v60, *((uint64_t *)&v60 + 1), v61, *((uint64_t *)&v61 + 1), 3u);
  uint64_t v19 = sub_1ACB5F4A0(v60, *((uint64_t *)&v60 + 1));
  if (v20)
  {
    if (qword_1E99EFF10 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1ACE754C8();
    __swift_project_value_buffer(v42, (uint64_t)qword_1E99F2C40);
    swift_bridgeObjectRetain();
    long long v43 = sub_1ACE75498();
    os_log_type_t v44 = sub_1ACE76BE8();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      uint64_t v59 = v58;
      *(_DWORD *)uint64_t v45 = 136446210;
      swift_bridgeObjectRetain();
      sub_1ACA3189C(v9, *((unint64_t *)&v9 + 1), &v59);
      sub_1ACE76FF8();
      sub_1ACA63688(v9, *((uint64_t *)&v9 + 1), v10, *((uint64_t *)&v10 + 1), 3u);
      sub_1ACA63688(v9, *((uint64_t *)&v9 + 1), v10, *((uint64_t *)&v10 + 1), 3u);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v43, v44, "Adam id not found in local library for %{public}s", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v58, -1, -1);
      MEMORY[0x1AD11B340](v45, -1, -1);
    }
    else
    {
      sub_1ACA63688(v60, *((uint64_t *)&v60 + 1), v61, *((uint64_t *)&v61 + 1), 3u);
      sub_1ACA63688(v60, *((uint64_t *)&v60 + 1), v61, *((uint64_t *)&v61 + 1), 3u);
    }

    long long v46 = v69;
    *(_OWORD *)(a2 + 160) = *(_OWORD *)&v68[16];
    *(_OWORD *)(a2 + 176) = v46;
    *(_OWORD *)(a2 + 192) = v70;
    *(unsigned char *)(a2 + 208) = v71;
    long long v47 = v66;
    *(_OWORD *)(a2 + 96) = v65;
    *(_OWORD *)(a2 + 112) = v47;
    long long v48 = *(_OWORD *)v68;
    *(_OWORD *)(a2 + 128) = v67;
    *(_OWORD *)(a2 + 144) = v48;
    long long v49 = *(_OWORD *)&v62[16];
    *(_OWORD *)(a2 + 32) = *(_OWORD *)v62;
    *(_OWORD *)(a2 + 48) = v49;
    long long v50 = v64;
    *(_OWORD *)(a2 + 64) = v63;
    *(_OWORD *)(a2 + 80) = v50;
    long long v16 = v60;
    long long v17 = v61;
    goto LABEL_4;
  }
  uint64_t v21 = v19;
  sub_1ACA63688(v60, *((uint64_t *)&v60 + 1), v61, *((uint64_t *)&v61 + 1), 3u);
  if (qword_1E99EFF10 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1ACE754C8();
  __swift_project_value_buffer(v22, (uint64_t)qword_1E99F2C40);
  uint64_t v23 = sub_1ACE75498();
  os_log_type_t v24 = sub_1ACE76C08();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl(&dword_1AC9D5000, v23, v24, "Sucessfully transformed a local request to a MAPI request", v25, 2u);
    MEMORY[0x1AD11B340](v25, -1, -1);
  }

  uint64_t v26 = *(void *)&v62[24];
  long long v28 = v63;
  uint64_t v27 = v64;
  uint64_t v55 = *((void *)&v63 + 1);
  uint64_t v56 = v63;
  uint64_t v29 = *((void *)&v64 + 1);
  uint64_t v30 = v65;
  char v53 = BYTE8(v64);
  uint64_t v54 = v64;
  uint64_t v31 = *((void *)&v65 + 1);
  uint64_t v51 = *((void *)&v65 + 1);
  uint64_t v52 = v65;
  long long v32 = v66;
  long long v33 = v67;
  char v34 = v68[2];
  __int16 v35 = *(_WORD *)v68;
  char v57 = v68[0];
  long long v36 = v69;
  long long v37 = v70;
  unsigned __int8 v38 = v71;
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 0;
  uint64_t v39 = *(void **)&v62[8];
  *(_OWORD *)(a2 + 40) = *(_OWORD *)&v62[8];
  *(void *)(a2 + 56) = v26;
  *(_OWORD *)(a2 + 64) = v28;
  *(void *)(a2 + 80) = v27;
  *(void *)(a2 + 88) = v29;
  *(void *)(a2 + 96) = v30;
  *(void *)(a2 + 104) = v31;
  *(_OWORD *)(a2 + 112) = v32;
  *(_OWORD *)(a2 + 128) = v33;
  *(unsigned char *)(a2 + 146) = v34;
  *(_WORD *)(a2 + 144) = v35;
  *(_OWORD *)(a2 + 152) = *(_OWORD *)&v68[8];
  *(_WORD *)(a2 + 168) = 0;
  *(_OWORD *)(a2 + 176) = v36;
  *(_OWORD *)(a2 + 192) = v37;
  uint64_t v40 = v39;
  *(unsigned char *)(a2 + 208) = v38;
  swift_bridgeObjectRetain();
  id v41 = v40;
  sub_1ACA63A5C(v56, v55, v54, v53, v52, v51, v32, *((uint64_t *)&v32 + 1), v33, *((uint64_t *)&v33 + 1), v57);
  return sub_1ACA63B84(v36, *((uint64_t *)&v36 + 1), v37, *((uint64_t *)&v37 + 1), v38);
}

void sub_1ACB5F428(void **a1, void *a2)
{
  long long v4 = (void *)sub_1ACE76178();
  id v5 = objc_msgSend(a2, sel_podcastForUuid_, v4);

  long long v6 = *a1;
  *a1 = v5;
}

uint64_t sub_1ACB5F4A0(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(self, sel_sharedInstance);
  id v5 = objc_msgSend(v4, sel_mainQueueContext);

  long long v17 = 0;
  long long v6 = (void *)swift_allocObject();
  v6[2] = &v17;
  v6[3] = v5;
  v6[4] = a1;
  v6[5] = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1ACB5F724;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_1ACADC690;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC525DC;
  aBlock[3] = &block_descriptor_28;
  long long v8 = _Block_copy(aBlock);
  id v9 = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_performBlockAndWait_, v8);
  _Block_release(v8);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a2)
  {
    __break(1u);
  }
  else
  {
    long long v11 = v17;
    if (v17)
    {
      long long v12 = self;
      id v13 = v11;
      if (objc_msgSend(v12, sel_isEmpty_, objc_msgSend(v13, sel_storeCollectionId)))
      {

        long long v11 = 0;
      }
      else
      {
        uint64_t v14 = (uint64_t)objc_msgSend(v13, sel_storeCollectionId);

        long long v11 = (void *)(v14 & ~(v14 >> 63));
      }
    }
    else
    {
    }
    long long v15 = v17;
    swift_release();

    return (uint64_t)v11;
  }
  return result;
}

uint64_t sub_1ACB5F6E4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACB5F724()
{
  sub_1ACB5F428(*(void ***)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1ACB5F730()
{
  return swift_deallocObject();
}

ValueMetadata *_s22MAPIRequestTransformerVMa()
{
  return &_s22MAPIRequestTransformerVN;
}

uint64_t RetriggerableDeferred.init(createPublisher:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v27 = a5;
  uint64_t v28 = a2;
  uint64_t v25 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB766C70);
  uint64_t v5 = sub_1ACE75A48();
  unint64_t v24 = sub_1ACB5FA48();
  uint64_t v6 = sub_1ACE75678();
  uint64_t v26 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v8 = (char *)&v19 - v7;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v21 = WitnessTable;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v29 = v5;
  uint64_t v30 = v6;
  uint64_t v31 = WitnessTable;
  uint64_t v32 = v20;
  uint64_t v10 = sub_1ACE75628();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v19 - v12;
  uint64_t v29 = 0;
  swift_allocObject();
  uint64_t v14 = sub_1ACE75938();
  uint64_t v29 = v14;
  long long v15 = (void *)swift_allocObject();
  uint64_t v16 = v23;
  v15[2] = v22;
  v15[3] = v16;
  v15[4] = v25;
  v15[5] = v28;
  v15[6] = v14;
  swift_retain();
  swift_retain();
  sub_1ACE75B58();
  swift_release();
  MEMORY[0x1AD117EF0](v6, v20, v21);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v6);
  swift_getWitnessTable();
  uint64_t v17 = sub_1ACE75AD8();
  swift_release();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *uint64_t v27 = v17;
  return result;
}

unint64_t sub_1ACB5FA48()
{
  unint64_t result = qword_1EB768DD8;
  if (!qword_1EB768DD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB766C70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB768DD8);
  }
  return result;
}

uint64_t sub_1ACB5FAA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a5;
  v11[3] = a6;
  v11[4] = a2;
  v11[5] = a3;
  v11[6] = a4;
  swift_retain();
  swift_retain();
  return sub_1ACE75A38();
}

uint64_t sub_1ACB5FB5C(uint64_t a1)
{
  return sub_1ACB5FAA4(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t sub_1ACB5FB6C(void (*a1)(uint64_t (*)(), uint64_t))
{
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  a1(sub_1ACB5FD60, v2);
  return swift_release_n();
}

uint64_t sub_1ACB5FC04()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1ACE758E8();
    return swift_release();
  }
  return result;
}

uint64_t RetriggerableDeferred.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = MEMORY[0x1E4FBC248];
  return MEMORY[0x1F40D6910](a1, v8, AssociatedTypeWitness, v10, a3, a4);
}

uint64_t sub_1ACB5FCE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return RetriggerableDeferred.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t type metadata accessor for RetriggerableDeferred()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACB5FD18()
{
  return sub_1ACB5FB6C(*(void (**)(uint64_t (*)(), uint64_t))(v0 + 32));
}

uint64_t sub_1ACB5FD28()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACB5FD60()
{
  return sub_1ACB5FC04();
}

id static OS_dispatch_queue.localAssetSupportWorkQueue.getter()
{
  return sub_1ACB60304(&qword_1EB76E160, (void **)&qword_1EB76E150);
}

id static OS_dispatch_queue.automaticAssetManagement.getter()
{
  return sub_1ACB60304(&qword_1EB76E148, (void **)&qword_1EB76E138);
}

id static OS_dispatch_queue.uiAssetPreparationQueue.getter()
{
  return sub_1ACB60304(&qword_1EB76A830, (void **)&qword_1EB76A828);
}

uint64_t sub_1ACB5FDD4(uint64_t a1)
{
  return sub_1ACB5FE44(a1, MEMORY[0x1E4FBCB78], 0xD000000000000031, 0x80000001ACECA2C0, &qword_1EB76E150);
}

uint64_t sub_1ACB5FE0C(uint64_t a1)
{
  return sub_1ACB5FE44(a1, MEMORY[0x1E4FBCB78], 0xD00000000000002FLL, 0x80000001ACECA240, &qword_1EB76E138);
}

uint64_t sub_1ACB5FE44(uint64_t a1, void (*a2)(unint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t *a5)
{
  v15[1] = a4;
  uint64_t v16 = a5;
  v15[0] = a3;
  uint64_t v6 = sub_1ACE76CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v12 = sub_1ACA51E1C();
  a2(v12, v13);
  uint64_t v17 = MEMORY[0x1E4FBC860];
  sub_1ACB6091C((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCC58], v6);
  uint64_t result = sub_1ACE76D28();
  *uint64_t v16 = result;
  return result;
}

uint64_t sub_1ACB60080(uint64_t a1)
{
  return sub_1ACB5FE44(a1, MEMORY[0x1E4FBCB68], 0xD000000000000036, 0x80000001ACECA200, &qword_1EB76A828);
}

uint64_t sub_1ACB600B8(uint64_t a1)
{
  return sub_1ACB5FE44(a1, MEMORY[0x1E4FBCB68], 0xD000000000000035, 0x80000001ACECA1C0, &qword_1E99F2630);
}

id static OS_dispatch_queue.transcriptsPreparationQueue.getter()
{
  return sub_1ACB60304(&qword_1E99EFEA8, (void **)&qword_1E99F2630);
}

uint64_t sub_1ACB60114(uint64_t a1)
{
  return sub_1ACB5FE44(a1, MEMORY[0x1E4FBCB68], 0xD000000000000023, 0x80000001ACECA190, &qword_1E99F2638);
}

id static OS_dispatch_queue.assetReaderQueue.getter()
{
  return sub_1ACB60304(&qword_1E99EFEB0, (void **)&qword_1E99F2638);
}

uint64_t sub_1ACB60170(uint64_t a1)
{
  return sub_1ACB5FE44(a1, MEMORY[0x1E4FBCB68], 0xD000000000000027, 0x80000001ACECA160, &qword_1E99F2640);
}

id static OS_dispatch_queue.shazamAlignmentQueue.getter()
{
  return sub_1ACB60304(&qword_1E99EFEB8, (void **)&qword_1E99F2640);
}

uint64_t sub_1ACB601CC(uint64_t a1)
{
  return sub_1ACB5FE44(a1, MEMORY[0x1E4FBCB60], 0xD000000000000030, 0x80000001ACECA120, (uint64_t *)&unk_1EB76A810);
}

id static OS_dispatch_queue.metricsProcessingQueue.getter()
{
  return sub_1ACB60304(&qword_1EB76A820, (void **)&unk_1EB76A810);
}

uint64_t sub_1ACB60228(uint64_t a1)
{
  return sub_1ACB5FE44(a1, MEMORY[0x1E4FBCB78], 0xD000000000000030, 0x80000001ACECA0E0, (uint64_t *)&unk_1EB7706A8);
}

id static OS_dispatch_queue.storageComputationQueue.getter()
{
  return sub_1ACB60304(&qword_1EB7706B8, (void **)&unk_1EB7706A8);
}

uint64_t sub_1ACB60284(uint64_t a1)
{
  return sub_1ACB5FE44(a1, MEMORY[0x1E4FBCB78], 0xD000000000000041, 0x80000001ACECA270, &qword_1EB76E120);
}

id static OS_dispatch_queue.backgroundURLSession.getter()
{
  return sub_1ACB60304(&qword_1EB76E130, (void **)&qword_1EB76E120);
}

id static SharedDispatchQueues.localAssetSupportWorkQueue()()
{
  return sub_1ACB60304(&qword_1EB76E160, (void **)&qword_1EB76E150);
}

id sub_1ACB60304(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  long long v3 = *a2;
  return v3;
}

id SharedDispatchQueues.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id SharedDispatchQueues.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedDispatchQueues();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for SharedDispatchQueues()
{
  return self;
}

id SharedDispatchQueues.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedDispatchQueues();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t OS_dispatch_queue.enqueue(_:)()
{
  uint64_t v1 = sub_1ACE75DC8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = sub_1ACE75E48();
  uint64_t v5 = *(void *)(v13[0] - 8);
  MEMORY[0x1F4188790](v13[0]);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE76758();
  uint64_t v9 = sub_1ACB6091C(&qword_1EB7706C8, (void (*)(uint64_t))sub_1ACA51E1C);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v8;
  v10[3] = v0;
  v10[4] = v9;
  aBlock[4] = sub_1ACB607F4;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_29;
  uint64_t v11 = _Block_copy(aBlock);
  sub_1ACE75E08();
  v13[1] = MEMORY[0x1E4FBC860];
  sub_1ACB6091C((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v7, v4, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, void))(v5 + 8))(v7, v13[0]);
  return swift_release();
}

uint64_t OS_dispatch_queue.asUnownedSerialExecutor()()
{
  sub_1ACB6091C(&qword_1EB7706C8, (void (*)(uint64_t))sub_1ACA51E1C);
  return v0;
}

uint64_t sub_1ACB607E4()
{
  return swift_deallocObject();
}

uint64_t sub_1ACB607F4()
{
  return MEMORY[0x1F4188238](v0[2], v0[3], v0[4]);
}

uint64_t sub_1ACB60800()
{
  return sub_1ACB6091C(&qword_1EB7706C0, (void (*)(uint64_t))sub_1ACA51E1C);
}

uint64_t sub_1ACB60848()
{
  swift_getWitnessTable();
  return sub_1ACE76718();
}

uint64_t sub_1ACB608A8()
{
  swift_getWitnessTable();
  return sub_1ACE76728();
}

uint64_t sub_1ACB6091C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PlayButtonTimeFormatHelper.FormatStyle.formatStyleUnits.getter(char a1)
{
  if (!a1) {
    return MEMORY[0x1E4FBC870];
  }
  if (a1 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F88);
    sub_1ACE77CA8();
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1ACE84820;
    sub_1ACE77C88();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F88);
    sub_1ACE77CA8();
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1ACE843F0;
  }
  sub_1ACE77C98();
  uint64_t v2 = sub_1ACA6D024(v1);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v2;
}

uint64_t PlayButtonTimeFormatHelper.FormatStyle.calendarUnits.getter(char a1)
{
  return qword_1ACE8FEC8[a1];
}

uint64_t PlayButtonTimeFormatHelper.WidgetCountDownSizeRestrictingHelper.hash(into:)()
{
  return sub_1ACE77B28();
}

BOOL static PlayButtonTimeFormatHelper.WidgetCountDownSizeRestrictingHelper.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t _s18PodcastsFoundation26PlayButtonTimeFormatHelperV0F5StyleO9hashValueSivg_0()
{
  return sub_1ACE77B78();
}

double PlayButtonTimeFormatHelper.timeLeft.getter()
{
  return *(double *)v0;
}

uint64_t PlayButtonTimeFormatHelper.formatStyle.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t PlayButtonTimeFormatHelper.widgetCountDownHelper.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t PlayButtonTimeFormatHelper.showsProgressBar.getter()
{
  return *(unsigned __int8 *)(v0 + 10);
}

PodcastsFoundation::PlayButtonTimeFormatHelper_optional __swiftcall PlayButtonTimeFormatHelper.init(timeLeft:duration:)(Swift::Double_optional timeLeft, Swift::Double_optional duration)
{
  uint64_t v5 = v4;
  if (!duration.is_nil)
  {
    uint64_t v6 = *(void *)&timeLeft.is_nil;
    double v7 = *(double *)&timeLeft.is_nil;
    if (*(double *)&timeLeft.is_nil >= 0.0 && (v3 & 1) == 0)
    {
      double v9 = v2;
      if (v2 > 0.0)
      {
        if (*(double *)&timeLeft.is_nil <= 59.0 || v2 < 240.0)
        {
          int v11 = 0;
          int v12 = 0;
        }
        else
        {
          if (qword_1EB7730A8 != -1) {
            swift_once();
          }
          if (sub_1ACE74C48() == 49 && v14 == 0xE100000000000000)
          {
            *(void *)&timeLeft.is_nil = swift_bridgeObjectRelease();
          }
          else
          {
            char v15 = sub_1ACE77848();
            *(void *)&timeLeft.is_nil = swift_bridgeObjectRelease();
            if ((v15 & 1) == 0)
            {
              if (v7 >= 4200.0) {
                int v17 = 5;
              }
              else {
                int v17 = 4;
              }
              if (v7 >= 3600.0) {
                int v18 = v17;
              }
              else {
                int v18 = 2;
              }
              if (v7 >= 600.0) {
                int v11 = v18;
              }
              else {
                int v11 = 1;
              }
              int v12 = 1;
              goto LABEL_39;
            }
          }
          if (v7 >= 6000.0) {
            int v16 = 3;
          }
          else {
            int v16 = 2;
          }
          if (v7 >= 600.0) {
            int v11 = v16;
          }
          else {
            int v11 = 1;
          }
          int v12 = 2;
        }
LABEL_39:
        timeLeft.value = 240.0;
        int v13 = v12 | (v11 << 8) | ((v9 >= 240.0) << 16);
        goto LABEL_15;
      }
    }
  }
  uint64_t v6 = 0;
  int v13 = 0x20000;
LABEL_15:
  *(void *)uint64_t v5 = v6;
  *(_WORD *)(v5 + 8) = v13;
  *(unsigned char *)(v5 + 10) = BYTE2(v13);
  result.value.timeLeft = timeLeft.value;
  result.value.formatStyle = timeLeft.is_nil;
  return result;
}

uint64_t _s18PodcastsFoundation26PlayButtonTimeFormatHelperV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2
    && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8)
    && *(unsigned __int8 *)(a1 + 9) == *(unsigned __int8 *)(a2 + 9))
  {
    return (*(unsigned __int8 *)(a2 + 10) ^ *(unsigned __int8 *)(a1 + 10) ^ 1) & 1;
  }
  else
  {
    return 0;
  }
}

unint64_t sub_1ACB60E4C()
{
  unint64_t result = qword_1E99F2648;
  if (!qword_1E99F2648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2648);
  }
  return result;
}

unint64_t sub_1ACB60EA4()
{
  unint64_t result = qword_1E99F2650[0];
  if (!qword_1E99F2650[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E99F2650);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PlayButtonTimeFormatHelper(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 11)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 10);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayButtonTimeFormatHelper(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 10) = 0;
    *(_WORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 11) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 11) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 10) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayButtonTimeFormatHelper()
{
  return &type metadata for PlayButtonTimeFormatHelper;
}

unsigned char *storeEnumTagSinglePayload for PlayButtonTimeFormatHelper.FormatStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB61070);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayButtonTimeFormatHelper.FormatStyle()
{
  return &type metadata for PlayButtonTimeFormatHelper.FormatStyle;
}

unsigned char *storeEnumTagSinglePayload for PlayButtonTimeFormatHelper.WidgetCountDownSizeRestrictingHelper(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB61174);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayButtonTimeFormatHelper.WidgetCountDownSizeRestrictingHelper()
{
  return &type metadata for PlayButtonTimeFormatHelper.WidgetCountDownSizeRestrictingHelper;
}

uint64_t TestingAssetCache.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  TestingAssetCache.init()();
  return v0;
}

uint64_t TestingAssetCache.init()()
{
  swift_getTupleTypeMetadata2();
  sub_1ACE765F8();
  *(void *)(v0 + 16) = sub_1ACE76028();
  return v0;
}

uint64_t TestingAssetCache.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TestingAssetCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t TestingAssetCache.asset(at:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  (*(void (**)(void *__return_ptr, void))(*(void *)(*v0 + 96) + 16))(v9, *(void *)(*v0 + 80));
  uint64_t v4 = v9[0];
  uint64_t v3 = v9[1];
  swift_beginAccess();
  uint64_t v5 = v1[2];
  v8[0] = v4;
  v8[1] = v3;
  uint64_t v6 = *(void *)(v2 + 88);
  swift_bridgeObjectRetain();
  MEMORY[0x1AD118260](v8, v5, MEMORY[0x1E4FBB1A0], v6, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TestingAssetCache.store(asset:at:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 88);
  uint64_t v5 = sub_1ACE76FD8();
  MEMORY[0x1F4188790](v5 - 8);
  double v7 = (char *)v12 - v6;
  (*(void (**)(void *__return_ptr, void))(*(void *)(v3 + 96) + 16))(v13, *(void *)(v3 + 80));
  uint64_t v8 = v13[0];
  uint64_t v9 = v13[1];
  uint64_t v10 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v7, a1, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v4);
  v12[4] = v8;
  v12[5] = v9;
  swift_beginAccess();
  sub_1ACE76088();
  sub_1ACE760B8();
  return swift_endAccess();
}

uint64_t TestingAssetCache.containsAsset(for:)()
{
  void (*v3)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v4;
  char v5;
  void v7[3];

  uint64_t v1 = *v0;
  swift_beginAccess();
  v7[2] = v0[2];
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 16);
  uint64_t v4 = *(void *)(v1 + 80);
  swift_bridgeObjectRetain();
  v3(v7, v4, v2);
  sub_1ACE76048();
  swift_getWitnessTable();
  uint64_t v5 = sub_1ACE76488();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t TestingAssetCache.invalidate(at:)()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1ACE76FD8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v7 - v4;
  (*(void (**)(void *__return_ptr, void))(*(void *)(v1 + 96) + 16))(v8, *(void *)(v1 + 80));
  v7[4] = v8[0];
  v7[5] = v8[1];
  swift_beginAccess();
  sub_1ACE76088();
  sub_1ACE76018();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACB61840()
{
  return TestingAssetCache.asset(at:)();
}

uint64_t sub_1ACB61864(uint64_t a1)
{
  return TestingAssetCache.store(asset:at:)(a1);
}

uint64_t sub_1ACB61888()
{
  return TestingAssetCache.containsAsset(for:)() & 1;
}

uint64_t sub_1ACB618B0()
{
  return TestingAssetCache.invalidate(at:)();
}

uint64_t sub_1ACB618D4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for TestingAssetCache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for TestingAssetCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TestingAssetCache);
}

uint64_t dispatch thunk of TestingAssetCache.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

Swift::Void __swiftcall MTPodcast.calculateNewEpisodeCount(in:serialShowsUseExperimentalRules:)(NSManagedObjectContext *in, Swift::Bool serialShowsUseExperimentalRules)
{
  uint64_t v5 = self;
  id v6 = objc_msgSend(v2, sel_showTypeInFeed);
  id v7 = objc_msgSend(v5, sel_showTypeFromString_, v6);

  if (v7 != (id)1 && serialShowsUseExperimentalRules) {
    uint64_t v8 = &selRef_calculateSerialNewEpisodeCountIn_;
  }
  else {
    uint64_t v8 = &selRef_calculateEpisodicNewEpisodeCountIn_;
  }
  uint64_t v9 = *v8;
  objc_msgSend(v2, v9, in);
}

void sub_1ACB61AEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE750A8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  id v6 = (char *)v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)v69 - v8;
  MEMORY[0x1F4188790](v7);
  int v11 = (char *)v69 - v10;
  id v12 = objc_msgSend(v1, sel_uuid);
  if (v12)
  {

    sub_1ACE74FC8();
    double v14 = v13;
    objc_msgSend(v1, sel_lastDatePlayed);
    if (v15 + 2592000.0 >= v14)
    {
      objc_msgSend(v1, sel_lastDatePlayed);
      sub_1ACE74FA8();
      sub_1ACE75098();
      uint64_t v77 = v9;
      sub_1ACE74FF8();
      int v17 = *(void (**)(char *, uint64_t))(v3 + 8);
      uint64_t v16 = v3 + 8;
      uint64_t v76 = v2;
      unsigned __int8 v71 = v17;
      v17(v6, v2);
      id v18 = objc_msgSend(v1, sel_objectID);
      sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1ACE84820;
      uint64_t v20 = sub_1ACE761B8();
      uint64_t v21 = v11;
      uint64_t v23 = v22;
      *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v19 + 64) = sub_1ACADC3A8();
      *(void *)(v19 + 32) = v20;
      *(void *)(v19 + 40) = v23;
      *(void *)(v19 + 96) = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
      *(void *)(v19 + 104) = sub_1ACB62A88();
      *(void *)(v19 + 72) = v18;
      id v24 = v18;
      uint64_t v25 = (void *)sub_1ACE76B88();

      uint64_t v26 = self;
      uint64_t v75 = v21;
      uint64_t v27 = (void *)sub_1ACE75008();
      id v28 = objc_msgSend(v26, sel_predicateForEpisodesPublishedAfterDate_, v27);

      id v74 = v25;
      id v29 = objc_msgSend(v25, sel_AND_, v28);

      sub_1ACE761B8();
      id v30 = objc_allocWithZone(MEMORY[0x1E4F29008]);
      uint64_t v31 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      id v32 = objc_msgSend(v30, sel_initWithKey_ascending_, v31, 0);

      sub_1ACE761B8();
      id v33 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
      char v34 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      id v35 = objc_msgSend(v33, sel_initWithEntityName_, v34);

      id v73 = v29;
      objc_msgSend(v35, sel_setPredicate_, v29);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1ACE84830;
      *(void *)(v36 + 32) = v32;
      uint64_t v78 = v36;
      sub_1ACE76598();
      sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
      id v72 = v32;
      long long v37 = (void *)sub_1ACE76558();
      swift_bridgeObjectRelease();
      objc_msgSend(v35, sel_setSortDescriptors_, v37);

      objc_msgSend(v35, sel_setFetchLimit_, 10);
      sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
      unint64_t v38 = sub_1ACE76EE8();
      unint64_t v39 = v38;
      id v70 = v35;
      if (v38 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v41 = sub_1ACE77508();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_1ACE77508();
        uint64_t v42 = v77;
        if (v40)
        {
LABEL_8:
          v69[1] = v16;
          if ((v39 & 0xC000000000000001) != 0)
          {
            long long v43 = (char *)MEMORY[0x1AD119490](0, v39);
          }
          else
          {
            if (!*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_41;
            }
            long long v43 = (char *)*(id *)(v39 + 32);
          }
          uint64_t v77 = v43;
          swift_bridgeObjectRelease();
          if (v41 > 9)
          {

            swift_bridgeObjectRelease();
LABEL_37:

            uint64_t v67 = v76;
            char v68 = v71;
            v71(v42, v76);
            v68(v75, v67);
            goto LABEL_38;
          }
          os_log_type_t v44 = v77;
          objc_msgSend(v77, sel_pubDate);
          double v46 = v45;
          sub_1ACE74FB8();
          double v48 = v47;
          objc_msgSend(v1, sel_lastDatePlayed);
          double v50 = v49;
          objc_msgSend(v44, sel_pubDate);
          if (v51 < v50 || v46 < v48)
          {

            swift_bridgeObjectRelease();
            uint64_t v55 = v76;
            uint64_t v56 = v71;
            v71(v42, v76);
            v56(v75, v55);
LABEL_38:
            objc_msgSend(v1, sel_setNewEpisodesCount_, 0);
            objc_msgSend(v1, sel_setNewTrailersCount_, 0);
            return;
          }
          if (v41 < 1)
          {

            swift_bridgeObjectRelease();
            uint64_t v64 = v76;
            long long v65 = v71;
            v71(v42, v76);
            v65(v75, v64);
            uint64_t v57 = 0;
            uint64_t v63 = 0;
            goto LABEL_34;
          }
          v69[0] = v41;
          uint64_t v78 = MEMORY[0x1E4FBC860];
          if (v40 >= 1)
          {
            for (uint64_t i = 0; i != v40; ++i)
            {
              if ((v39 & 0xC000000000000001) != 0) {
                id v53 = (id)MEMORY[0x1AD119490](i, v39);
              }
              else {
                id v53 = *(id *)(v39 + 8 * i + 32);
              }
              uint64_t v54 = v53;
              if (objc_msgSend(v53, sel_isTrailer, v69[0]))
              {
                sub_1ACE773A8();
                sub_1ACE773E8();
                sub_1ACE773F8();
                sub_1ACE773B8();
              }
              else
              {
              }
            }
            swift_bridgeObjectRelease();
            if ((v78 & 0x8000000000000000) == 0 && (v78 & 0x4000000000000000) == 0)
            {
              uint64_t v57 = *(void *)(v78 + 16);

              goto LABEL_29;
            }
LABEL_42:
            swift_bridgeObjectRetain();
            uint64_t v57 = sub_1ACE77508();

            swift_release();
LABEL_29:
            uint64_t v59 = v75;
            uint64_t v58 = v76;
            id v60 = v74;
            swift_release();

            uint64_t v61 = v69[0];
            if (v57 == v69[0])
            {
              uint64_t v62 = v71;
              v71(v42, v58);
              v62(v59, v58);
              uint64_t v63 = 0;
              uint64_t v57 = v61;
            }
            else
            {
              uint64_t v63 = v69[0] - v57;
              if (__OFSUB__(v69[0], v57))
              {
                __break(1u);
                return;
              }
              long long v66 = v71;
              v71(v42, v58);
              v66(v59, v58);
            }
LABEL_34:
            objc_msgSend(v1, sel_setNewEpisodesCount_, v63, v69[0]);
            objc_msgSend(v1, sel_setNewTrailersCount_, v57);
            return;
          }
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
      }
      else
      {
        uint64_t v40 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        uint64_t v41 = v40;
        uint64_t v42 = v77;
        if (v40) {
          goto LABEL_8;
        }
      }

      swift_bridgeObjectRelease_n();
      goto LABEL_37;
    }
  }
  objc_msgSend(v1, sel_setNewEpisodesCount_, 0);
  objc_msgSend(v1, sel_setNewTrailersCount_, 0);
}

void sub_1ACB62690(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(v2, sel_uuid);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v24 = v4;
    objc_msgSend(v2, sel_lastDatePlayed);
    sub_1ACE74FA8();
    uint64_t v10 = self;
    id v11 = objc_msgSend(v10, sel_predicateForAllEpisodesOnPodcastUuid_, v9);

    id v12 = (void *)sub_1ACE75008();
    id v13 = objc_msgSend(v10, sel_predicateForEpisodesPublishedAfterDate_, v12);

    id v14 = objc_msgSend(v11, sel_AND_, v13);
    double v15 = objc_msgSend(a1, sel_countOfObjectsInEntity_predicate_, @"MTEpisode", v14);
    objc_msgSend(v2, sel_lastDatePlayed);
    if (v16 == 0.0)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v24);

      objc_msgSend(v2, sel_setNewEpisodesCount_, 0);
      objc_msgSend(v2, sel_setNewTrailersCount_, 0);
      return;
    }
    id v23 = a1;
    if (!v15)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v24);

      goto LABEL_12;
    }
    id v17 = objc_msgSend(v10, sel_predicateForEpisodeType_, 1);
    id v18 = objc_msgSend(v14, sel_AND_, v17);

    uint64_t v19 = @"MTEpisode";
    id v20 = v18;
    unint64_t v21 = (unint64_t)objc_msgSend(v23, sel_countOfObjectsInEntity_predicate_, v19, v20);

    if ((v21 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      if ((unsigned char *)v21 == v15)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v24);
LABEL_12:
        int64_t v22 = 0;
LABEL_16:
        objc_msgSend(v2, sel_setNewEpisodesCount_, v22, v23);
        objc_msgSend(v2, sel_setNewTrailersCount_, v15);
        return;
      }
      int64_t v22 = (int64_t)&v15[-v21];
      if ((unint64_t)v15 >= v21)
      {
        if ((v22 & 0x8000000000000000) == 0)
        {
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v24);
          double v15 = (unsigned char *)v21;
          goto LABEL_16;
        }
LABEL_20:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_20;
  }
  objc_msgSend(v2, sel_setNewEpisodesCount_, 0);
  objc_msgSend(v2, sel_setNewTrailersCount_, 0);
}

unint64_t sub_1ACB62A88()
{
  unint64_t result = qword_1E99F26D8;
  if (!qword_1E99F26D8)
  {
    sub_1ACA50D4C(255, (unint64_t *)&qword_1EB768ED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F26D8);
  }
  return result;
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.enableSubscription(onPodcastUUID:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeEnableSubscription(onPodcastUUID:from:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.disableSubscription(onPodcastUUID:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.disableSubscription(onPodcastUUID:from:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.disableSubscriptions(onPodcastUUIDs:from:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.removeShowFromRecentlyUnfollowed(forPodcastUUID:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeBookmarkIfNeeded(episode:shouldDownloadEpisode:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeRemoveEpisodeFromBookmarksIfNeeded(episode:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeBookmark(episode:on:shouldDownloadEpisode:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeRemoveEpisodeFromBookmarks(episode:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.startTrackingChangesInDownloads()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.downloadEpisode(withUUID:isFromSaving:from:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 96))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.downloadEpisodes(with:isFromSaving:from:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  double v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 104)
                                                                                     + **(int **)(a6 + 104));
  id v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *id v13 = v6;
  v13[1] = sub_1ACA50B84;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.cancelDownload(forEpisodeWithUUID:userInitiated:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 112))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.cancelAllDownloads(userInitiated:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.removeDownload(forEpisodeWithUUID:from:shouldAllowAutomaticRedownloads:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 128))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeRemoveFromRecoveredEpisodesIfNeeded(episode:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.insertNewImplicitFollowIfNeeded(for:from:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 144))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeEpisodePlayedBeyondThresholdForFirstTime(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 152))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeMark(_:as:in:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 160))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeDidBumpLastDatePlayed(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeInsertNewImplicitFollow(for:from:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 176))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeImplicitlyFollowIfNeeded(_:for:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 184))();
}

uint64_t dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeRemoveImplicitFollowIfNeeded(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 192))();
}

uint64_t KCUTranscriptProvider.bearerToken.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id KCUTranscriptProvider.session.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t KCUTranscriptProvider.init(bearerToken:basePath:kcuTranscriptPath:kcuSignaturePath:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = a1;
  a8[1] = a2;
  id v14 = (int *)type metadata accessor for KCUTranscriptProvider();
  double v15 = (char *)a8 + v14[7];
  uint64_t v16 = sub_1ACE74F28();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a3, v16);
  id v18 = (void *)((char *)a8 + v14[8]);
  *id v18 = a4;
  v18[1] = a5;
  uint64_t v19 = (void *)((char *)a8 + v14[9]);
  void *v19 = a6;
  v19[1] = a7;
  a8[2] = objc_msgSend(self, sel_sharedSession);
  unint64_t v20 = sub_1ACA3713C(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A880);
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + 24) = 0;
  *(void *)(v21 + 16) = v20;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(a3, v16);
  a8[3] = v21;
  return result;
}

uint64_t type metadata accessor for KCUTranscriptProvider()
{
  uint64_t result = qword_1E99F2778;
  if (!qword_1E99F2778) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t KCUTranscriptProvider.prefetch(request:)()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACB635C4(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1ACB63018@<X0>(void *a1@<X0>, uint64_t a2@<X1>, id *a3@<X2>, uint64_t *a4@<X8>)
{
  double v51 = a4;
  double v50 = a1;
  uint64_t v6 = type metadata accessor for KCUTranscriptProvider();
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v42 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2798);
  uint64_t v47 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  double v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1ACE75118();
  uint64_t v46 = *(void *)(v48 - 8);
  uint64_t v16 = *(void *)(v46 + 64);
  uint64_t v17 = MEMORY[0x1F4188790](v48);
  double v45 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v52 = (char *)&v40 - v18;
  sub_1ACE75108();
  uint64_t v41 = a3;
  *(void *)&v53[0] = KCUTranscriptProvider.transcript(for:)(a3);
  if (qword_1EB76E160 != -1) {
    swift_once();
  }
  uint64_t v19 = (void *)qword_1EB76E150;
  id v55 = (id)qword_1EB76E150;
  uint64_t v20 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v13, 1, 1, v20);
  id v21 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F27A0);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1E99F27A8, &qword_1E99F27A0);
  sub_1ACA93A6C();
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v13, &qword_1EB7669C8);

  swift_release();
  sub_1ACB64FFC(a2, (uint64_t)v10);
  sub_1ACA69FEC((uint64_t)v41, (uint64_t)v53);
  uint64_t v22 = (uint64_t)v10;
  uint64_t v23 = v42;
  sub_1ACB65064(v22, v42);
  uint64_t v24 = v46;
  uint64_t v40 = v15;
  uint64_t v41 = *(id **)(v46 + 16);
  uint64_t v25 = (uint64_t)v45;
  uint64_t v26 = v48;
  ((void (*)(char *, char *, uint64_t))v41)(v45, v52, v48);
  unint64_t v27 = (*(unsigned __int8 *)(v43 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v28 = (v44 + *(unsigned __int8 *)(v24 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v29 = swift_allocObject();
  long long v30 = v53[3];
  *(_OWORD *)(v29 + 48) = v53[2];
  *(_OWORD *)(v29 + 64) = v30;
  *(void *)(v29 + 80) = v54;
  long long v31 = v53[1];
  *(_OWORD *)(v29 + 16) = v53[0];
  *(_OWORD *)(v29 + 32) = v31;
  sub_1ACB65064(v23, v29 + v27);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v24 + 32))(v29 + v28, v25, v26);
  sub_1ACA51EA4(&qword_1E99F27B0, &qword_1E99F2798);
  uint64_t v32 = v49;
  id v33 = v40;
  uint64_t v34 = sub_1ACE75B88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v32);
  id v35 = v52;
  ((void (*)(uint64_t, char *, uint64_t))v41)(v25, v52, v26);
  swift_retain();
  uint64_t v36 = v50;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v53[0] = *v36;
  *uint64_t v36 = 0x8000000000000000;
  sub_1ACD0D868(v34, v25, isUniquelyReferenced_nonNull_native);
  *uint64_t v36 = *(void *)&v53[0];
  swift_bridgeObjectRelease();
  unint64_t v38 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v38(v25, v26);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v38)(v35, v26);
  *double v51 = v34;
  return result;
}

uint64_t sub_1ACB635C4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACB63018(a1, *(void *)(v2 + 16), *(id **)(v2 + 24), a2);
}

uint64_t KCUTranscriptProvider.transcript(for:)(id *a1)
{
  uint64_t v2 = v1;
  uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F26E8);
  uint64_t v135 = *(void *)(v136 - 8);
  MEMORY[0x1F4188790](v136);
  id v133 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F26F0);
  uint64_t v144 = *(void *)(v5 - 8);
  uint64_t v145 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  unint64_t v137 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  v140 = (char *)&v102 - v8;
  uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F26F8);
  uint64_t v9 = MEMORY[0x1F4188790](v142);
  v134 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v139 = (uint64_t)&v102 - v11;
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2700);
  uint64_t v141 = *(void *)(v143 - 8);
  MEMORY[0x1F4188790](v143);
  unint64_t v138 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2708);
  uint64_t v130 = *(void *)(v131 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v131);
  v127 = (char *)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v128 = (char *)&v102 - v15;
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2710);
  uint64_t v16 = MEMORY[0x1F4188790](v129);
  v126 = (char *)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v132 = (uint64_t)&v102 - v18;
  uint64_t v19 = type metadata accessor for KCUTranscriptProvider();
  uint64_t v116 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  v147 = (id *)v20;
  uint64_t v153 = (uint64_t)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v21 - 8);
  id v124 = (char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2718);
  MEMORY[0x1F4188790](v148);
  uint64_t v146 = (uint64_t)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2720);
  uint64_t v156 = *(void *)(v151 - 8);
  MEMORY[0x1F4188790](v151);
  v149 = (char *)&v102 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2728);
  uint64_t v120 = *(void *)(v122 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v122);
  v118 = (char *)&v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  id v119 = (char *)&v102 - v27;
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2730);
  uint64_t v28 = MEMORY[0x1F4188790](v125);
  unint64_t v108 = (char *)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v157 = (uint64_t)&v102 - v30;
  uint64_t v31 = sub_1ACE74F28();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  id v35 = (char *)&v102 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  long long v37 = (char *)&v102 - v36;
  id v158 = *a1;
  sub_1ACA55E4C();
  sub_1ACE770B8();
  sub_1ACE74E38();
  uint64_t v38 = v146;
  swift_bridgeObjectRelease();
  uint64_t v123 = v19;
  v154 = v37;
  sub_1ACE74E38();
  char v112 = a1;
  sub_1ACB64B3C((uint64_t)v35, (uint64_t)a1, v38);
  unint64_t v39 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
  v117 = v35;
  uint64_t v155 = v31;
  v152 = v39;
  uint64_t v150 = v32 + 8;
  v39((uint64_t)v35, v31);
  if (qword_1EB76A830 != -1) {
    swift_once();
  }
  uint64_t v40 = (void *)qword_1EB76A828;
  id v158 = (id)qword_1EB76A828;
  uint64_t v114 = sub_1ACE76CA8();
  uint64_t v41 = *(void *)(v114 - 8);
  uint64_t v113 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v115 = v41 + 56;
  uint64_t v42 = (uint64_t)v124;
  v113(v124, 1, 1, v114);
  uint64_t v111 = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  id v121 = &protocol conformance descriptor for EmitLifecycle<A>;
  uint64_t v110 = sub_1ACA51EA4(&qword_1E99F2738, &qword_1E99F2718);
  unint64_t v109 = sub_1ACA93A6C();
  id v43 = v40;
  uint64_t v44 = v149;
  sub_1ACE75CA8();
  sub_1ACA50E78(v42, &qword_1EB7669C8);

  sub_1ACA50E78(v38, &qword_1E99F2718);
  uint64_t v45 = v153;
  sub_1ACB64FFC(v2, v153);
  uint64_t v46 = *(unsigned __int8 *)(v116 + 80);
  uint64_t v107 = (uint64_t)v147 + ((v46 + 16) & ~v46);
  uint64_t v47 = (v46 + 16) & ~v46;
  uint64_t v116 = v47;
  uint64_t v106 = v46 | 7;
  uint64_t v48 = swift_allocObject();
  sub_1ACB65064(v45, v48 + v47);
  uint64_t v49 = swift_allocObject();
  uint64_t v103 = v2;
  *(void *)(v49 + 16) = sub_1ACB650C8;
  *(void *)(v49 + 24) = v48;
  uint64_t v105 = sub_1ACA51EA4(&qword_1E99F2740, &qword_1E99F2720);
  double v50 = v119;
  uint64_t v51 = v151;
  sub_1ACE75C28();
  swift_release();
  uint64_t v52 = *(void (**)(char *, uint64_t))(v156 + 8);
  v156 += 8;
  uint64_t v104 = v52;
  v52(v44, v51);
  uint64_t v53 = (uint64_t)v112;
  v147 = v112 + 4;
  uint64_t v54 = v120;
  id v55 = *(void (**)(char *, char *, uint64_t))(v120 + 16);
  uint64_t v56 = v118;
  uint64_t v57 = v122;
  v55(v118, v50, v122);
  sub_1ACAAAFAC(v53 + 32, (uint64_t)&v158);
  uint64_t v58 = (uint64_t)v108;
  v55(v108, v56, v57);
  uint64_t v59 = (int *)v125;
  sub_1ACAAAFAC((uint64_t)&v158, v58 + *(int *)(v125 + 36));
  uint64_t v60 = v58 + v59[10];
  *(void *)uint64_t v60 = "KCUTTMLFile";
  *(void *)(v60 + 8) = 11;
  *(unsigned char *)(v60 + 16) = 2;
  *(unsigned char *)(v58 + v59[12]) = 1;
  sub_1ACA50E78((uint64_t)&v158, &qword_1EB772EA0);
  uint64_t v61 = *(void (**)(char *, uint64_t))(v54 + 8);
  v61(v56, v57);
  uint64_t v62 = (void *)(v58 + v59[11]);
  *uint64_t v62 = 0;
  v62[1] = 0xE000000000000000;
  *(unsigned char *)(v58 + v59[13]) = 0;
  sub_1ACA50E14(v58, v157, &qword_1E99F2730);
  v61(v50, v57);
  uint64_t v63 = v103;
  uint64_t v64 = (uint64_t)v117;
  sub_1ACE74E38();
  uint64_t v65 = v146;
  sub_1ACB64B3C(v64, v53, v146);
  v152(v64, v155);
  long long v66 = (void *)qword_1EB76A828;
  id v158 = (id)qword_1EB76A828;
  v113((char *)v42, 1, 1, v114);
  id v67 = v66;
  char v68 = v149;
  sub_1ACE75CA8();
  sub_1ACA50E78(v42, &qword_1EB7669C8);

  sub_1ACA50E78(v65, &qword_1E99F2718);
  uint64_t v69 = v153;
  sub_1ACB64FFC(v63, v153);
  uint64_t v70 = swift_allocObject();
  sub_1ACB65064(v69, v70 + v116);
  uint64_t v71 = swift_allocObject();
  *(void *)(v71 + 16) = sub_1ACB6589C;
  *(void *)(v71 + 24) = v70;
  sub_1ACA50D4C(0, &qword_1E99F2748);
  id v72 = v128;
  uint64_t v73 = v151;
  sub_1ACE75C28();
  swift_release();
  v104(v68, v73);
  uint64_t v74 = v130;
  uint64_t v75 = *(void (**)(char *, char *, uint64_t))(v130 + 16);
  uint64_t v76 = v127;
  uint64_t v77 = v131;
  v75(v127, v72, v131);
  sub_1ACAAAFAC((uint64_t)v147, (uint64_t)&v158);
  uint64_t v78 = (uint64_t)v126;
  v75(v126, v76, v77);
  uint64_t v79 = (int *)v129;
  sub_1ACAAAFAC((uint64_t)&v158, v78 + *(int *)(v129 + 36));
  uint64_t v80 = v78 + v79[10];
  *(void *)uint64_t v80 = "KCUShazamSignatureFile";
  *(void *)(v80 + 8) = 22;
  *(unsigned char *)(v80 + 16) = 2;
  *(unsigned char *)(v78 + v79[12]) = 1;
  sub_1ACA50E78((uint64_t)&v158, &qword_1EB772EA0);
  uint64_t v81 = *(void (**)(char *, uint64_t))(v74 + 8);
  v81(v76, v77);
  id v82 = (void *)(v78 + v79[11]);
  *id v82 = 0;
  v82[1] = 0xE000000000000000;
  *(unsigned char *)(v78 + v79[13]) = 0;
  uint64_t v83 = v132;
  sub_1ACA50E14(v78, v132, &qword_1E99F2710);
  v81(v72, v77);
  sub_1ACA51EA4(&qword_1E99F2750, &qword_1E99F2710);
  sub_1ACA51EA4(&qword_1E99F2758, &qword_1E99F2730);
  id v84 = v133;
  sub_1ACE75B18();
  uint64_t v85 = swift_allocObject();
  *(void *)(v85 + 16) = sub_1ACA93170;
  *(void *)(v85 + 24) = 0;
  sub_1ACA51EA4(&qword_1E99F2760, &qword_1E99F26E8);
  uint64_t v86 = v140;
  uint64_t v87 = v136;
  sub_1ACE75B58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v135 + 8))(v84, v87);
  uint64_t v89 = v144;
  uint64_t v88 = v145;
  uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v144 + 16);
  uint64_t v91 = v137;
  v90(v137, v86, v145);
  sub_1ACAAAFAC((uint64_t)v147, (uint64_t)&v158);
  uint64_t v92 = (uint64_t)v134;
  v90(v134, v91, v88);
  long long v93 = (int *)v142;
  sub_1ACAAAFAC((uint64_t)&v158, v92 + *(int *)(v142 + 36));
  uint64_t v94 = v92 + v93[10];
  *(void *)uint64_t v94 = "KCUTranscriptData";
  *(void *)(v94 + 8) = 17;
  *(unsigned char *)(v94 + 16) = 2;
  *(unsigned char *)(v92 + v93[12]) = 1;
  sub_1ACA50E78((uint64_t)&v158, &qword_1EB772EA0);
  uint64_t v95 = *(void (**)(char *, uint64_t))(v89 + 8);
  v95(v91, v88);
  uint64_t v96 = (void *)(v92 + v93[11]);
  *uint64_t v96 = 0;
  v96[1] = 0xE000000000000000;
  *(unsigned char *)(v92 + v93[13]) = 0;
  uint64_t v97 = v139;
  sub_1ACA50E14(v92, v139, &qword_1E99F26F8);
  v95(v86, v88);
  sub_1ACA51EA4(&qword_1E99F2768, &qword_1E99F26F8);
  v98 = v138;
  sub_1ACE75B58();
  sub_1ACA50E78(v97, &qword_1E99F26F8);
  sub_1ACA51EA4(&qword_1E99F2770, &qword_1E99F2700);
  uint64_t v99 = v143;
  uint64_t v100 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v141 + 8))(v98, v99);
  sub_1ACA50E78(v83, &qword_1E99F2710);
  sub_1ACA50E78(v157, &qword_1E99F2730);
  v152((uint64_t)v154, v155);
  return v100;
}

void sub_1ACB647A8(void **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  if (qword_1EB76A5C8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1ACE754C8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB76A5A8);
  sub_1ACA69FEC(a2, (uint64_t)v21);
  id v5 = v3;
  id v6 = v3;
  uint64_t v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76BC8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    v20[0] = v10;
    sub_1ACA55E4C();
    uint64_t v11 = sub_1ACE770B8();
    sub_1ACA3189C(v11, v12, v20);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACA6A048((uint64_t)v21);
    *(_WORD *)(v9 + 12) = 2080;
    id v13 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DD38);
    uint64_t v14 = sub_1ACE76228();
    sub_1ACA3189C(v14, v15, v20);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AC9D5000, v7, v8, "Finished prefetching for %s: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v10, -1, -1);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }
  else
  {
    sub_1ACA6A048((uint64_t)v21);
  }
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (uint64_t *)&v17[4];
  uint64_t v19 = v17 + 6;
  os_unfair_lock_lock(v17 + 6);
  sub_1ACB673B8(v18);
  os_unfair_lock_unlock(v19);
}

uint64_t sub_1ACB64A40(uint64_t *a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1ACA663D0(a2);
  char v6 = v5;
  uint64_t result = swift_bridgeObjectRelease();
  if (v6)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *a1;
    uint64_t v12 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1ACD07B20();
      uint64_t v9 = v12;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1ACE75118();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v4, v11);
    sub_1ACB1C1AC(v4, v9);
    *a1 = v9;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACB64B3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v33 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2718);
  unint64_t v4 = (int *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE76BA8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  uint64_t v36 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2788);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v34 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v32 = (char *)&v32 - v15;
  uint64_t v16 = sub_1ACE74F28();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1ACE74898();
  uint64_t v37 = *(void *)(v20 - 8);
  uint64_t v38 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v33, v16);
  sub_1ACE74848();
  v41[0] = 0x20726572616542;
  v41[1] = 0xE700000000000000;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE74868();
  swift_bridgeObjectRelease();
  sub_1ACE76BB8();
  sub_1ACB66DA4();
  uint64_t v23 = v32;
  uint64_t v24 = v35;
  sub_1ACE75C28();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v24);
  uint64_t v25 = v39 + 32;
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v27 = v34;
  v26(v34, v23, v11);
  sub_1ACAAAFAC(v25, (uint64_t)v41);
  v26(v6, v27, v11);
  sub_1ACAAAFAC((uint64_t)v41, (uint64_t)&v6[v4[11]]);
  uint64_t v28 = &v6[v4[12]];
  *(void *)uint64_t v28 = "KCUFileDownload";
  *((void *)v28 + 1) = 15;
  v28[16] = 2;
  v6[v4[14]] = 1;
  sub_1ACA50E78((uint64_t)v41, &qword_1EB772EA0);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v12 + 8);
  v29(v27, v11);
  uint64_t v30 = &v6[v4[13]];
  *(void *)uint64_t v30 = 0;
  *((void *)v30 + 1) = 0xE000000000000000;
  v6[v4[15]] = 0;
  sub_1ACA50E14((uint64_t)v6, v40, &qword_1E99F2718);
  v29(v23, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v22, v38);
}

uint64_t sub_1ACB64FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for KCUTranscriptProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACB65064(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for KCUTranscriptProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1ACB650C8@<D0>(const char *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1ACB65154(a1, a2, a3);
}

double sub_1ACB65154@<D0>(const char *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v75 = a2;
  uint64_t v74 = a1;
  uint64_t v68 = a3;
  id v72 = (const char *)sub_1ACE75448();
  uint64_t v3 = *((void *)v72 - 1);
  uint64_t v4 = MEMORY[0x1F4188790](v72);
  char v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v62 - v7;
  *(void *)&long long v78 = sub_1ACE753F8();
  uint64_t v9 = *(void *)(v78 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v78);
  uint64_t v77 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v69 = (char *)&v62 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v62 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v62 - v17;
  if (qword_1E99EFF98 != -1) {
    swift_once();
  }
  long long v66 = v8;
  id v67 = v6;
  uint64_t v19 = sub_1ACE75438();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1E99F2D78);
  sub_1ACE753E8();
  uint64_t v73 = v20;
  uint64_t v21 = sub_1ACE75428();
  os_signpost_type_t v22 = sub_1ACE76E18();
  char v23 = sub_1ACE76FA8();
  uint64_t v71 = v3;
  if (v23)
  {
    id v84 = *(void (**)(char *, char *, void))(v9 + 16);
    unint64_t v24 = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v25 = v78;
    v84(v16, v18, v78);
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    os_signpost_id_t v27 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v21, v22, v27, "ParseKCUTTML", "", v26, 2u);
    MEMORY[0x1AD11B340](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v25);
    uint64_t v28 = v84;
  }
  else
  {

    uint64_t v28 = *(void (**)(char *, char *, void))(v9 + 16);
    unint64_t v24 = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v25 = v78;
  }
  id v84 = v28;
  unint64_t v70 = v24;
  v28(v16, v18, v25);
  sub_1ACE75478();
  swift_allocObject();
  sub_1ACE75468();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v29 = v9 + 8;
  uint64_t v30 = v31;
  v31(v18, v25);
  unint64_t v32 = (unint64_t)v76;
  TranscriptParser.parse(ttmlData:)((uint64_t)v74, v75, (uint64_t)v79);
  uint64_t v33 = v77;
  if (v32)
  {
    uint64_t v76 = v30;
    uint64_t v34 = sub_1ACE75428();
    sub_1ACE75458();
    os_signpost_type_t v35 = sub_1ACE76E08();
    if (sub_1ACE76FA8())
    {
      unint64_t v75 = v32;
      swift_retain();
      uint64_t v36 = v67;
      sub_1ACE75488();
      swift_release();
      uint64_t v38 = v71;
      uint64_t v37 = v72;
      if ((*(unsigned int (**)(char *, const char *))(v71 + 88))(v36, v72) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v39 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, const char *))(v38 + 8))(v36, v37);
        uint64_t v39 = "FAILURE";
      }
      uint64_t v74 = v39;
      uint64_t v48 = v77;
      v84(v16, v77, v25);
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v49 = 0;
      os_signpost_id_t v50 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v34, v35, v50, "ParseKCUTTML", v74, v49, 2u);
      uint64_t v51 = v49;
      uint64_t v52 = v78;
      MEMORY[0x1AD11B340](v51, -1, -1);

      uint64_t v53 = v76;
      v76(v48, v52);
      v53(v16, v52);
    }
    else
    {

      v76(v33, v25);
    }
    swift_willThrow();
    swift_release();
  }
  else
  {
    uint64_t v65 = v16;
    uint64_t v40 = v79[1];
    id v67 = (char *)v79[0];
    LODWORD(v77) = v80;
    uint64_t v74 = v82;
    unint64_t v75 = v81;
    long long v78 = v83;
    uint64_t v41 = sub_1ACE75428();
    uint64_t v42 = v69;
    sub_1ACE75458();
    LODWORD(v73) = sub_1ACE76E08();
    if (sub_1ACE76FA8())
    {
      uint64_t v63 = v40;
      uint64_t v76 = v30;
      swift_retain();
      id v43 = v66;
      sub_1ACE75488();
      swift_release();
      uint64_t v45 = v71;
      uint64_t v44 = v72;
      BOOL v46 = (*(unsigned int (**)(char *, const char *))(v71 + 88))(v43, v72) == *MEMORY[0x1E4FBD340];
      uint64_t v64 = v29;
      if (v46)
      {
        id v55 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, const char *))(v45 + 8))(v43, v44);
        id v55 = "SUCCESS";
      }
      id v72 = v55;
      uint64_t v56 = v65;
      v84(v65, v42, v25);
      uint64_t v57 = v25;
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      os_signpost_id_t v59 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v41, (os_signpost_type_t)v73, v59, "ParseKCUTTML", v72, v58, 2u);
      MEMORY[0x1AD11B340](v58, -1, -1);

      uint64_t v60 = v76;
      v76(v42, v57);
      swift_release();
      v60(v56, v57);
      uint64_t v47 = v68;
      uint64_t v40 = v63;
    }
    else
    {

      v30(v42, v25);
      swift_release();
      uint64_t v47 = v68;
    }
    *(void *)uint64_t v47 = v67;
    *(void *)(v47 + 8) = v40;
    *(unsigned char *)(v47 + 16) = (_BYTE)v77;
    uint64_t v61 = v74;
    *(void *)(v47 + 24) = v75;
    *(void *)(v47 + 32) = v61;
    double result = *(double *)&v78;
    *(_OWORD *)(v47 + 40) = v78;
  }
  return result;
}

uint64_t sub_1ACB65868(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

NSObject *sub_1ACB6589C(uint64_t a1, unint64_t a2)
{
  return sub_1ACB65918(a1, a2);
}

NSObject *sub_1ACB65918(uint64_t a1, unint64_t a2)
{
  unint64_t v90 = a2;
  uint64_t v3 = sub_1ACE75448();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v83 = v3;
  uint64_t v84 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  unsigned __int8 v80 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  long long v78 = (char *)&v77 - v7;
  uint64_t v8 = sub_1ACE753F8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = ((char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v79 = (char *)&v77 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v77 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v77 - v18;
  if (qword_1E99EFF98 != -1) {
    swift_once();
  }
  uint64_t v89 = a1;
  os_log_t v91 = v12;
  uint64_t v20 = sub_1ACE75438();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1E99F2D78);
  sub_1ACE753E8();
  uint64_t v87 = v21;
  os_signpost_type_t v22 = sub_1ACE75428();
  os_signpost_type_t v23 = sub_1ACE76E18();
  if (sub_1ACE76FA8())
  {
    unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    unint64_t v25 = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v24(v17, v19, v8);
    uint64_t v26 = v17;
    uint64_t v27 = v8;
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    os_signpost_id_t v29 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v22, v23, v29, "ParseKCUSignature", "", v28, 2u);
    uint64_t v30 = v28;
    uint64_t v8 = v27;
    uint64_t v17 = v26;
    MEMORY[0x1AD11B340](v30, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v26, v8);
  }
  else
  {

    unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    unint64_t v25 = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  unint64_t v81 = v25;
  id v82 = (void (*)(char *, os_log_t, uint64_t))v24;
  v24(v17, v19, v8);
  sub_1ACE75478();
  swift_allocObject();
  uint64_t v31 = sub_1ACE75468();
  uint64_t v85 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v86 = v9 + 8;
  v85(v19, v8);
  id v32 = objc_allocWithZone(MEMORY[0x1E4F3BEA8]);
  uint64_t v33 = v89;
  unint64_t v34 = v90;
  sub_1ACA3985C(v89, v90);
  uint64_t v35 = v88;
  id v36 = sub_1ACC4ED00();
  if (v35)
  {
    uint64_t v88 = v35;
    unint64_t v37 = v34;
    unint64_t v38 = v31;
    uint64_t v39 = v17;
    sub_1ACA50850(v33, v37);
    uint64_t v45 = sub_1ACE75428();
    os_log_t v46 = v91;
    sub_1ACE75458();
    os_signpost_type_t v47 = sub_1ACE76E08();
    char v48 = sub_1ACE76FA8();
    uint64_t v49 = v84;
    if (v48)
    {
      swift_retain();
      os_signpost_id_t v50 = v80;
      sub_1ACE75488();
      unint64_t v90 = v38;
      uint64_t v51 = v50;
      swift_release();
      uint64_t v52 = v50;
      uint64_t v53 = v83;
      if ((*(unsigned int (**)(char *, uint64_t))(v49 + 88))(v52, v83) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v54 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v49 + 8))(v51, v53);
        uint64_t v54 = "FAILURE";
      }
      os_log_t v55 = v91;
      v82(v39, v91, v8);
      uint64_t v56 = v8;
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v57 = 0;
      os_signpost_id_t v58 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v45, v47, v58, "ParseKCUSignature", v54, v57, 2u);
      MEMORY[0x1AD11B340](v57, -1, -1);

      os_signpost_id_t v59 = v85;
      v85((char *)v55, v56);
      v59(v39, v56);
    }
    else
    {

      v85((char *)v46, v8);
    }
    swift_willThrow();
    swift_release();
  }
  else
  {
    uint64_t v40 = v36;
    sub_1ACA50850(v33, v34);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1ACE84830;
    *(void *)(inited + 32) = v40;
    unint64_t v92 = inited;
    sub_1ACE76598();
    unint64_t v42 = v92;
    id v43 = v40;
    uint64_t v44 = sub_1ACA7CC20(v42);
    uint64_t v88 = 0;
    uint64_t v45 = v44;
    swift_bridgeObjectRelease();
    uint64_t v61 = sub_1ACE75428();
    uint64_t v62 = v79;
    sub_1ACE75458();
    int v63 = sub_1ACE76E08();
    if (sub_1ACE76FA8())
    {
      LODWORD(v90) = v63;
      swift_retain();
      uint64_t v64 = v78;
      sub_1ACE75488();
      swift_release();
      uint64_t v65 = v83;
      uint64_t v66 = v84;
      int v67 = (*(uint64_t (**)(char *, uint64_t))(v84 + 88))(v64, v83);
      int v68 = *MEMORY[0x1E4FBD340];
      os_log_t v91 = v61;
      if (v67 == v68)
      {
        uint64_t v69 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v66 + 8))(v64, v65);
        uint64_t v69 = "SUCCESS";
      }
      unint64_t v70 = v79;
      v82(v17, (os_log_t)v79, v8);
      uint64_t v71 = v8;
      id v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v72 = 0;
      os_signpost_id_t v73 = sub_1ACE753D8();
      os_log_t v74 = v91;
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v91, (os_signpost_type_t)v90, v73, "ParseKCUSignature", v69, v72, 2u);
      MEMORY[0x1AD11B340](v72, -1, -1);

      unint64_t v75 = v70;
      uint64_t v76 = v85;
      v85(v75, v71);
      swift_release();
      v76(v17, v71);
    }
    else
    {

      v85(v62, v8);
      swift_release();
    }
  }
  return v45;
}

uint64_t sub_1ACB66078@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1ACB660B4()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1ACB660EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v24 = *(void *)(a1 + 24);
  uint64_t v25 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v22 = *(void *)(a1 + 56);
  unint64_t v23 = *(void *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 64);
  if (qword_1EB76A5C8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1ACE754C8();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EB76A5A8);
  sub_1ACB53740(v2, v25, v3, v24, v4, v23, v5, v22, v6);
  sub_1ACB53740(v2, v25, v3, v24, v4, v23, v5, v22, v6);
  uint64_t v8 = sub_1ACE75498();
  os_log_type_t v9 = sub_1ACE76BC8();
  unint64_t v10 = v4;
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t type = v9;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v26 = v19;
    unint64_t v12 = v23;
    sub_1ACB53740(v2, v25, v3, v24, v10, v23, v5, v22, v6);
    uint64_t v13 = sub_1ACE76228();
    sub_1ACA3189C(v13, v14, &v26);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACB53840(v2, v25, v3, v24, v10, v23, v5, v22, v6);
    sub_1ACB53840(v2, v25, v3, v24, v10, v23, v5, v22, v6);
    _os_log_impl(&dword_1AC9D5000, v8, type, "KCU Result: %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v19, -1, -1);
    MEMORY[0x1AD11B340](v11, -1, -1);

    uint64_t v16 = v24;
    uint64_t v15 = v25;
  }
  else
  {
    unint64_t v17 = v4;
    unint64_t v12 = v23;
    sub_1ACB53840(v2, v25, v3, v24, v17, v23, v5, v22, v6);
    sub_1ACB53840(v2, v25, v3, v24, v10, v23, v5, v22, v6);

    uint64_t v15 = v25;
    uint64_t v16 = v24;
  }
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v15;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v16;
  *(void *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = v12;
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v22;
  *(unsigned char *)(a2 + 64) = v6;
  return sub_1ACB53740(v2, v15, v3, v16, v10, v12, v5, v22, v6);
}

uint64_t KCUTranscriptProvider.invalidate(for:)()
{
  return 1;
}

id sub_1ACB66478@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = sub_1ACB66DFC(*(id *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16));
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    return (id)sub_1ACA3985C((uint64_t)result, v5);
  }
  return result;
}

uint64_t sub_1ACB664BC()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACB673DC(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t *initializeBufferWithCopyOfBuffer for KCUTranscriptProvider(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    uint64_t *v4 = *a2;
    unint64_t v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    os_log_type_t v9 = (void *)a2[2];
    uint64_t v8 = a2[3];
    a1[2] = (uint64_t)v9;
    a1[3] = v8;
    uint64_t v10 = a3[7];
    uint64_t v25 = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    uint64_t v12 = sub_1ACE74F28();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    id v14 = v9;
    swift_retain();
    v13(v25, v11, v12);
    uint64_t v15 = a3[8];
    uint64_t v16 = a3[9];
    unint64_t v17 = (uint64_t *)((char *)v4 + v15);
    uint64_t v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    void *v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = (uint64_t *)((char *)v4 + v16);
    uint64_t v21 = (uint64_t *)((char *)a2 + v16);
    uint64_t v22 = v21[1];
    void *v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for KCUTranscriptProvider(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for KCUTranscriptProvider(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v8 = (void *)a2[2];
  uint64_t v7 = a2[3];
  a1[2] = v8;
  a1[3] = v7;
  uint64_t v9 = a3[7];
  uint64_t v23 = (char *)a1 + v9;
  uint64_t v10 = (char *)a2 + v9;
  uint64_t v11 = sub_1ACE74F28();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  id v13 = v8;
  swift_retain();
  v12(v23, v10, v11);
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)((char *)a1 + v14);
  unint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)((char *)a1 + v15);
  uint64_t v20 = (void *)((char *)a2 + v15);
  uint64_t v21 = v20[1];
  void *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for KCUTranscriptProvider(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[2] = v6;
  id v8 = v6;

  a1[3] = a2[3];
  swift_retain();
  swift_release();
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  void *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[9];
  unint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  void *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for KCUTranscriptProvider(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  return a1;
}

void *assignWithTake for KCUTranscriptProvider(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)a1[2];
  a1[2] = a2[2];

  a1[3] = a2[3];
  swift_release();
  uint64_t v8 = a3[7];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[9];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for KCUTranscriptProvider(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACB66AE4);
}

uint64_t sub_1ACB66AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1ACE74F28();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for KCUTranscriptProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACB66BA8);
}

uint64_t sub_1ACB66BA8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1ACE74F28();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1ACB66C50()
{
  uint64_t result = sub_1ACE74F28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EpisodeListenNowReason(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for EpisodeListenNowReason(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1ACB66D58(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1ACB66D74(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for KCUTranscriptProvider.GenericNetworkError()
{
  return &type metadata for KCUTranscriptProvider.GenericNetworkError;
}

unint64_t sub_1ACB66DA4()
{
  unint64_t result = qword_1EB771DC8;
  if (!qword_1EB771DC8)
  {
    sub_1ACE76BA8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771DC8);
  }
  return result;
}

id sub_1ACB66DFC(id a1, uint64_t a2, void *a3)
{
  self;
  uint64_t v5 = swift_dynamicCastObjCClass();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    id v7 = a3;
    if (objc_msgSend(v6, sel_statusCode) == (id)200)
    {
      if (qword_1EB76A5C8 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_1ACE754C8();
      __swift_project_value_buffer(v8, (uint64_t)qword_1EB76A5A8);
      id v9 = v7;
      uint64_t v10 = sub_1ACE75498();
      os_log_type_t v11 = sub_1ACE76C08();
      if (os_log_type_enabled(v10, v11))
      {
        os_log_type_t type = v11;
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        uint64_t v23 = v21;
        *(_DWORD *)uint64_t v12 = 136315138;
        buf = v12;
        id v9 = v9;
        id v13 = objc_msgSend(v9, sel_description);
        uint64_t v14 = sub_1ACE761B8();
        unint64_t v16 = v15;

        sub_1ACA3189C(v14, v16, &v23);
        sub_1ACE76FF8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v10, type, "Received reply from KCU %s", buf, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v21, -1, -1);
        MEMORY[0x1AD11B340](buf, -1, -1);
      }
      else
      {
      }
    }
    else
    {
      a1 = objc_msgSend(v6, sel_statusCode);
      sub_1ACB670C4();
      swift_allocError();
      *(void *)uint64_t v18 = a1;
      *(unsigned char *)(v18 + 8) = 0;
      swift_willThrow();
    }
  }
  else
  {
    sub_1ACB670C4();
    swift_allocError();
    *(void *)uint64_t v17 = 0;
    *(unsigned char *)(v17 + 8) = 1;
    swift_willThrow();
  }
  return a1;
}

unint64_t sub_1ACB670C4()
{
  unint64_t result = qword_1E99F2790;
  if (!qword_1E99F2790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2790);
  }
  return result;
}

uint64_t sub_1ACB67118()
{
  uint64_t v1 = type metadata accessor for KCUTranscriptProvider();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_1ACE75118();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 72)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  }
  uint64_t v7 = (v2 + 88) & ~v2;
  uint64_t v8 = (v7 + v3 + v6) & ~v6;
  uint64_t v9 = v0 + v7;
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v10 = v9 + *(int *)(v1 + 28);
  uint64_t v11 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v8, v4);
  return swift_deallocObject();
}

void sub_1ACB672E0(void **a1)
{
  type metadata accessor for KCUTranscriptProvider();
  sub_1ACE75118();
  sub_1ACB647A8(a1, v1 + 16);
}

uint64_t sub_1ACB673B8(uint64_t *a1)
{
  return sub_1ACB64A40(a1, *(void *)(v1 + 16));
}

uint64_t sub_1ACB673DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACB635C4(a1, a2);
}

id static DayOfWeekSchedule.firstDayOfWeek.getter()
{
  uint64_t v0 = sub_1ACE75208();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v14 - v5;
  sub_1ACE751D8();
  uint64_t v7 = sub_1ACE75168();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v8(v4, v6, v0);
  uint64_t v9 = (objc_class *)type metadata accessor for DayOfWeekSchedule();
  uint64_t v10 = (char *)objc_allocWithZone(v9);
  *(void *)&v10[OBJC_IVAR___PFDayOfWeekSchedule_dayOfWeek] = v7;
  v8(&v10[OBJC_IVAR___PFDayOfWeekSchedule_calendar], v4, v0);
  v14.receiver = v10;
  v14.super_class = v9;
  id v11 = objc_msgSendSuper2(&v14, sel_init);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v4, v0);
  v12(v6, v0);
  return v11;
}

id DayOfWeekSchedule.__allocating_init(dayOfWeek:calendar:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR___PFDayOfWeekSchedule_dayOfWeek] = a1;
  uint64_t v6 = &v5[OBJC_IVAR___PFDayOfWeekSchedule_calendar];
  uint64_t v7 = sub_1ACE75208();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  v11.receiver = v5;
  v11.super_class = v2;
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  return v9;
}

uint64_t type metadata accessor for DayOfWeekSchedule()
{
  uint64_t result = qword_1EB76B558;
  if (!qword_1EB76B558) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DayOfWeekSchedule.dayOfWeek.getter()
{
  return *(void *)(v0 + OBJC_IVAR___PFDayOfWeekSchedule_dayOfWeek);
}

uint64_t DayOfWeekSchedule.calendar.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___PFDayOfWeekSchedule_calendar;
  uint64_t v4 = sub_1ACE75208();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

id DayOfWeekSchedule.init(dayOfWeek:calendar:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR___PFDayOfWeekSchedule_dayOfWeek] = a1;
  uint64_t v4 = &v2[OBJC_IVAR___PFDayOfWeekSchedule_calendar];
  uint64_t v5 = sub_1ACE75208();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a2, v5);
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for DayOfWeekSchedule();
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
  return v7;
}

BOOL sub_1ACB67B00()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE751E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F27C68], v2);
  uint64_t v6 = sub_1ACE751F8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 == *(void *)(v1 + OBJC_IVAR___PFDayOfWeekSchedule_dayOfWeek);
}

id DayOfWeekSchedule.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DayOfWeekSchedule.init()()
{
}

id DayOfWeekSchedule.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DayOfWeekSchedule();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACB67FC4()
{
  return type metadata accessor for DayOfWeekSchedule();
}

uint64_t sub_1ACB67FCC()
{
  uint64_t result = sub_1ACE75208();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DayOfWeekSchedule(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DayOfWeekSchedule);
}

uint64_t dispatch thunk of DayOfWeekSchedule.__allocating_init(dayOfWeek:calendar:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of DayOfWeekSchedule.shouldExecute(on:previousExecution:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t sub_1ACB680CC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, void))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = *(void *)(Strong + 88);
    *(void *)(Strong + 88) = a1;
    *(void *)(Strong + 96) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1ACB6BEB4(v8);
    swift_release();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a4(a1, a2, 0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1ACB681A0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1ACE75EC8();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v5);
  objc_super v9 = (void *)((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v2 + 80);
  *objc_super v9 = v10;
  (*(void (**)(void *, void, uint64_t, __n128))(v6 + 104))(v9, *MEMORY[0x1E4FBCBF0], v5, v7);
  id v11 = v10;
  LOBYTE(v10) = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v9, v5);
  if (v10)
  {
    id v12 = objc_msgSend(self, sel_sharedInstance);
    id v13 = objc_msgSend(v12, sel_privateQueueContext);

    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    unint64_t v15 = (void *)swift_allocObject();
    void v15[2] = v14;
    v15[3] = v13;
    v15[4] = a1;
    v15[5] = a2;
    aBlock[4] = sub_1ACB6AB48;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = &block_descriptor_30;
    unint64_t v16 = _Block_copy(aBlock);
    id v17 = v13;
    swift_retain();
    swift_release();
    objc_msgSend(v17, sel_performBlock_, v16);
    _Block_release(v16);
  }
  else
  {
    __break(1u);
  }
}

void sub_1ACB683DC(void *a1, char a2, uint64_t a3, void (*a4)(void *, uint64_t, uint64_t), uint64_t a5)
{
  unint64_t v37 = a4;
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE75E48();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v17 = (void *)Strong;
    if (a2)
    {
      id v21 = a1;
      if (qword_1EB76D4A0 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_1ACE754C8();
      __swift_project_value_buffer(v22, (uint64_t)qword_1EB76D488);
      swift_retain_n();
      uint64_t v23 = sub_1ACE75498();
      os_log_type_t v24 = sub_1ACE76BE8();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v36 = a5;
        uint64_t v25 = swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 141558275;
        uint64_t v38 = 1752392040;
        aBlock[0] = v26;
        sub_1ACE76FF8();
        *(_WORD *)(v25 + 12) = 2081;
        uint64_t v27 = (void *)v17[3];
        if (v27)
        {
          id v28 = objc_msgSend(v27, sel_description);
          uint64_t v29 = sub_1ACE761B8();
          unint64_t v31 = v30;
        }
        else
        {
          unint64_t v31 = 0xEF72657375206576;
          uint64_t v29 = 0x6974636120726F66;
        }
        uint64_t v38 = sub_1ACA3189C(v29, v31, aBlock);
        sub_1ACE76FF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v23, v24, "Account %{private,mask.hash}s: Not proceeding with donation because we encountered an error fetching podcasts.", (uint8_t *)v25, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v26, -1, -1);
        MEMORY[0x1AD11B340](v25, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      id v34 = a1;
      v37(a1, 0, 1);
      swift_release();
      sub_1ACAC1E88(a1, 1);
      sub_1ACAC1E88(a1, 1);
    }
    else
    {
      swift_bridgeObjectRetain();
      if (os_feature_enabled_disable_homepod_station_donation())
      {
        swift_retain();
        uint64_t v18 = sub_1ACB6C174((unint64_t)a1, (uint64_t)v17, (uint64_t (*)(void))sub_1ACB6AD08);
        swift_release();
        sub_1ACAC1E88(a1, 0);
        uint64_t v19 = v17[11];
        uint64_t v20 = MEMORY[0x1E4FBC860];
        v17[11] = v18;
        v17[12] = v20;
        swift_bridgeObjectRetain();
        sub_1ACB6BEB4(v19);
        v37((void *)v18, v20, 0);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v36 = v17[10];
        id v32 = (void *)swift_allocObject();
        v32[2] = v17;
        v32[3] = a1;
        v32[4] = v37;
        v32[5] = a5;
        aBlock[4] = (uint64_t)sub_1ACB6C010;
        aBlock[5] = (uint64_t)v32;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_1ACA6DA9C;
        aBlock[3] = (uint64_t)&block_descriptor_44_0;
        uint64_t v33 = _Block_copy(aBlock);
        swift_retain();
        swift_retain();
        sub_1ACE75E08();
        uint64_t v38 = MEMORY[0x1E4FBC860];
        sub_1ACA55D24();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
        sub_1ACA55D7C();
        sub_1ACE770E8();
        MEMORY[0x1AD118ED0](0, v15, v11, v33);
        _Block_release(v33);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        swift_release();
      }
      swift_release();
    }
  }
}

uint64_t sub_1ACB6896C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1ACE75EC8();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)(a1 + 80);
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t, __n128))(v9 + 104))(v12, *MEMORY[0x1E4FBCBF0], v8, v10);
  id v14 = v13;
  LOBYTE(v13) = sub_1ACE75EF8();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v12, v8);
  if (v13)
  {
    unint64_t v16 = (void *)swift_allocObject();
    unsigned char v16[2] = a1;
    v16[3] = a3;
    v16[4] = a4;
    v16[5] = a2;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1ACB69E20((uint64_t)sub_1ACB6C064, (uint64_t)v16, 2, (uint64_t)&unk_1F038C0C8, (uint64_t)sub_1ACB6C078);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACB68B08(uint64_t a1, uint64_t a2)
{
  return sub_1ACB69E20(a1, a2, 1, (uint64_t)&unk_1F038BFD8, (uint64_t)sub_1ACB6BEF8);
}

uint64_t sub_1ACB68B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v78 = a4;
  uint64_t v77 = a3;
  uint64_t v4 = sub_1ACE75DC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  __n128 v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE75E48();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v13 = result;
    uint64_t v71 = v11;
    uint64_t v72 = v9;
    os_signpost_id_t v73 = v7;
    uint64_t v74 = v8;
    uint64_t v75 = v5;
    uint64_t v76 = v4;
    sub_1ACE761B8();
    id v14 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
    unint64_t v15 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v14, sel_initWithEntityName_, v15);

    id v17 = objc_msgSend(self, sel_predicateForNotHiddenPodcasts);
    objc_msgSend(v16, sel_setPredicate_, v17);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769598);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1ACE8A540;
    uint64_t v19 = sub_1ACE761B8();
    uint64_t v20 = MEMORY[0x1E4FBB1A0];
    *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v18 + 32) = v19;
    *(void *)(v18 + 40) = v21;
    uint64_t v22 = sub_1ACE761B8();
    *(void *)(v18 + 88) = v20;
    *(void *)(v18 + 64) = v22;
    *(void *)(v18 + 72) = v23;
    uint64_t v24 = sub_1ACE761B8();
    *(void *)(v18 + 120) = v20;
    *(void *)(v18 + 96) = v24;
    *(void *)(v18 + 104) = v25;
    uint64_t v26 = sub_1ACE761B8();
    *(void *)(v18 + 152) = v20;
    *(void *)(v18 + 128) = v26;
    *(void *)(v18 + 136) = v27;
    uint64_t v28 = sub_1ACE761B8();
    *(void *)(v18 + 184) = v20;
    *(void *)(v18 + 160) = v28;
    *(void *)(v18 + 168) = v29;
    unint64_t v30 = (void *)sub_1ACE76558();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setPropertiesToFetch_, v30);

    sub_1ACE761B8();
    id v31 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
    id v32 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    id v33 = objc_msgSend(v31, sel_initWithEntityName_, v32);

    id v34 = objc_msgSend(self, sel_topLevelPlaylistsPredicate);
    objc_msgSend(v33, sel_setPredicate_, v34);

    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1ACE84820;
    uint64_t v36 = sub_1ACE761B8();
    *(void *)(v35 + 56) = v20;
    *(void *)(v35 + 32) = v36;
    *(void *)(v35 + 40) = v37;
    uint64_t v38 = sub_1ACE761B8();
    *(void *)(v35 + 88) = v20;
    *(void *)(v35 + 64) = v38;
    *(void *)(v35 + 72) = v39;
    uint64_t v40 = (void *)sub_1ACE76558();
    swift_bridgeObjectRelease();
    objc_msgSend(v33, sel_setPropertiesToFetch_, v40);

    uint64_t v41 = MEMORY[0x1E4FBC860];
    uint64_t v82 = MEMORY[0x1E4FBC860];
    uint64_t v83 = MEMORY[0x1E4FBC860];
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F80);
    id v70 = v16;
    uint64_t v42 = sub_1ACE76EE8();
    id v69 = v33;
    uint64_t v83 = v42;
    sub_1ACA50D4C(0, &qword_1EB76E0E8);
    uint64_t v82 = sub_1ACE76EE8();
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_1ACE754C8();
    __swift_project_value_buffer(v43, (uint64_t)qword_1EB76D488);
    unint64_t v45 = v82;
    unint64_t v44 = v83;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    os_log_t v46 = sub_1ACE75498();
    int v47 = sub_1ACE76C08();
    if (os_log_type_enabled(v46, (os_log_type_t)v47))
    {
      int v68 = v47;
      uint64_t v48 = swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      aBlock[0] = v67;
      *(_DWORD *)uint64_t v48 = 141558787;
      uint64_t v81 = 1752392040;
      sub_1ACE76FF8();
      *(_WORD *)(v48 + 12) = 2081;
      uint64_t v49 = *(void **)(v13 + 24);
      if (v49)
      {
        id v50 = objc_msgSend(v49, sel_description);
        uint64_t v51 = sub_1ACE761B8();
        unint64_t v53 = v52;
      }
      else
      {
        uint64_t v51 = 0x6974636120726F66;
        unint64_t v53 = 0xEF72657375206576;
      }
      uint64_t v81 = sub_1ACA3189C(v51, v53, aBlock);
      sub_1ACE76FF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 22) = 2048;
      if (v44 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v54 = sub_1ACE77508();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v54 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      uint64_t v81 = v54;
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 32) = 2048;
      if (v45 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v55 = sub_1ACE77508();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v55 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v41 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
      uint64_t v81 = v55;
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v46, (os_log_type_t)v68, "Account %{private,mask.hash}s: Fetched %ld podcasts and %ld stations from DB.", (uint8_t *)v48, 0x2Au);
      uint64_t v56 = v67;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v56, -1, -1);
      MEMORY[0x1AD11B340](v48, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_retain();
    unint64_t v57 = swift_bridgeObjectRetain();
    uint64_t v58 = sub_1ACB6C174(v57, v13, (uint64_t (*)(void))sub_1ACB6B0F4);
    swift_bridgeObjectRelease();
    swift_release();
    swift_beginAccess();
    swift_retain();
    unint64_t v59 = swift_bridgeObjectRetain();
    uint64_t v60 = sub_1ACB6C174(v59, v13, (uint64_t (*)(void))sub_1ACB6B5A4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    uint64_t v61 = (void *)swift_allocObject();
    uint64_t v62 = v78;
    v61[2] = v77;
    v61[3] = v62;
    v61[4] = v58;
    v61[5] = v60;
    aBlock[4] = (uint64_t)sub_1ACB6BE84;
    aBlock[5] = (uint64_t)v61;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1ACA6DA9C;
    aBlock[3] = (uint64_t)&block_descriptor_28_0;
    int v63 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v64 = v71;
    sub_1ACE75E08();
    uint64_t v79 = v41;
    sub_1ACA55D24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    uint64_t v65 = v73;
    uint64_t v66 = v76;
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v64, v65, v63);
    _Block_release(v63);

    (*(void (**)(char *, uint64_t))(v75 + 8))(v65, v66);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v64, v74);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1ACB697D0(unint64_t a1, char a2, void *a3, void (*a4)(unint64_t, void, uint64_t), uint64_t a5, unint64_t a6)
{
  if (a2)
  {
    id v19 = (id)a1;
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1ACE754C8();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EB76D488);
    swift_retain_n();
    uint64_t v21 = sub_1ACE75498();
    os_log_type_t v22 = sub_1ACE76BE8();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 141558275;
      v36[0] = v24;
      sub_1ACE76FF8();
      *(_WORD *)(v23 + 12) = 2081;
      uint64_t v25 = (void *)a3[3];
      if (v25)
      {
        id v26 = objc_msgSend(v25, sel_description);
        uint64_t v27 = sub_1ACE761B8();
        unint64_t v29 = v28;
      }
      else
      {
        uint64_t v27 = 0x6974636120726F66;
        unint64_t v29 = 0xEF72657375206576;
      }
      sub_1ACA3189C(v27, v29, v36);
      sub_1ACE76FF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v21, v22, "Account %{private,mask.hash}s: Not proceeding with donation because we encountered an error fetching stations.", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v24, -1, -1);
      MEMORY[0x1AD11B340](v23, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    id v33 = (id)a1;
    a4(a1, 0, 1);
    sub_1ACAC1E88((id)a1, 1);
    sub_1ACAC1E88((id)a1, 1);
  }
  else
  {
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1ACE754C8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB76D488);
    sub_1ACB23084((id)a1, 0);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1ACB23084((id)a1, 0);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1ACE75498();
    os_log_type_t v12 = sub_1ACE76C08();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v35 = a4;
      uint64_t v13 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 141558787;
      v36[0] = v34;
      sub_1ACE76FF8();
      *(_WORD *)(v13 + 12) = 2081;
      id v14 = (void *)a3[3];
      if (v14)
      {
        id v15 = objc_msgSend(v14, sel_description);
        uint64_t v16 = sub_1ACE761B8();
        unint64_t v18 = v17;
      }
      else
      {
        uint64_t v16 = 0x6974636120726F66;
        unint64_t v18 = 0xEF72657375206576;
      }
      sub_1ACA3189C(v16, v18, v36);
      sub_1ACE76FF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 22) = 2048;
      if (a6 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_1ACE77508();
        swift_bridgeObjectRelease();
      }
      a4 = v35;
      swift_bridgeObjectRelease();
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 32) = 2048;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_1ACE77508();
        sub_1ACAC1E88((id)a1, 0);
      }
      sub_1ACAC1E88((id)a1, 0);
      sub_1ACE76FF8();
      sub_1ACAC1E88((id)a1, 0);
      _os_log_impl(&dword_1AC9D5000, v11, v12, "Account %{private,mask.hash}s: Fetched %ld podcasts and %ld stations from MAPI.", (uint8_t *)v13, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v34, -1, -1);
      MEMORY[0x1AD11B340](v13, -1, -1);
    }
    else
    {
      sub_1ACAC1E88((id)a1, 0);
      swift_release_n();
      swift_bridgeObjectRelease_n();
      sub_1ACAC1E88((id)a1, 0);
    }

    swift_retain();
    uint64_t v30 = sub_1ACB6C174(a6, (uint64_t)a3, (uint64_t (*)(void))sub_1ACB6AD08);
    swift_release();
    swift_retain();
    uint64_t v31 = sub_1ACB6C174(a1, (uint64_t)a3, (uint64_t (*)(void))sub_1ACB6BA00);
    swift_release();
    uint64_t v32 = a3[11];
    a3[11] = v30;
    a3[12] = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1ACB6BEB4(v32);
    a4(v30, v31, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACB69E20(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v48 = a4;
  uint64_t v49 = a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v47 = (uint64_t)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1ACE75EC8();
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = MEMORY[0x1F4188790](v14);
  unint64_t v18 = (uint64_t *)((char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v19 = (void *)v5[10];
  *unint64_t v18 = v19;
  (*(void (**)(void *, void, uint64_t, __n128))(v15 + 104))(v18, *MEMORY[0x1E4FBCBF0], v14, v16);
  id v20 = v19;
  char v21 = sub_1ACE75EF8();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v15 + 8))(v18, v14);
  if (v21)
  {
    uint64_t v46 = a5;
    uint64_t v54 = 1;
    long long v55 = 0u;
    long long v56 = 0u;
    char v57 = 4;
    char v53 = a3;
    char v52 = 1;
    char v51 = 4;
    __int16 v50 = 1;
    uint64_t v23 = sub_1ACE74F28();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v11, 1, 1, v23);
    uint64_t v24 = MEMORY[0x1E4FBC860];
    unint64_t v44 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
    unint64_t v25 = sub_1ACA35F90(v24);
    unint64_t v26 = sub_1ACA35FB0(v24);
    unint64_t v27 = sub_1ACA360BC(v24);
    unint64_t v28 = sub_1ACA360BC(v24);
    unint64_t v29 = sub_1ACA360DC(v24);
    uint64_t v45 = a2;
    unint64_t v30 = v29;
    *((void *)&v42 + 1) = sub_1ACA360FC(v24);
    *(void *)&long long v42 = v30;
    *((void *)&v41 + 1) = v24;
    *((void *)&v40 + 1) = v24;
    *(void *)&long long v41 = v24;
    *((void *)&v39 + 1) = v27;
    *(void *)&long long v40 = v28;
    *(void *)&long long v39 = v24;
    uint64_t v31 = v47;
    MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)((long long *)&v54, &v53, &v52, &v51, v44, v25, v26, v24, v47, v39, v40, v41, v24, (char *)&v50 + 1, 0, 1, v42, 0, 1,
      (char *)&v50,
      0,
      (uint64_t)v11,
      0,
      0,
      0,
      0,
      0,
      v24,
      0,
      0,
      2);
    uint64_t v32 = v5[7];
    uint64_t v33 = v5[8];
    __swift_project_boxed_opaque_existential_1(v5 + 4, v32);
    uint64_t v34 = v5[3];
    uint64_t v35 = swift_allocObject();
    swift_weakInit();
    uint64_t v36 = (void *)swift_allocObject();
    uint64_t v37 = v49;
    uint64_t v36[2] = v35;
    v36[3] = v37;
    v36[4] = v45;
    uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))(v33 + 32);
    swift_retain();
    swift_retain();
    v38(v31, v34, v46, v36, v32, v33);
    swift_release();
    sub_1ACA39598(v31);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACB6A1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v30 = a7;
  uint64_t v14 = sub_1ACE75DC8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1ACE75E48();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  char v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v23 = result;
    uint64_t v28 = v19;
    uint64_t v29 = v18;
    uint64_t v27 = *(void *)(result + 80);
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = a5;
    v24[3] = v23;
    v24[4] = v30;
    v24[5] = a8;
    v24[6] = a1;
    aBlock[4] = a10;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = a11;
    unint64_t v25 = _Block_copy(aBlock);
    id v26 = a5;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1ACE75E08();
    uint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1ACA55D24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v21, v17, v25);
    _Block_release(v25);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v29);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1ACB6A4B4(void *a1, uint64_t a2, void (*a3)(void, void), uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), const char *a7, const char *a8)
{
  if (a1)
  {
    id v12 = a1;
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1ACE754C8();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EB76D488);
    id v14 = a1;
    swift_retain();
    id v15 = a1;
    swift_retain();
    uint64_t v16 = sub_1ACE75498();
    os_log_type_t v17 = sub_1ACE76BE8();
    if (os_log_type_enabled(v16, v17))
    {
      long long v42 = a3;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 141558531;
      uint64_t v45 = v41;
      sub_1ACE76FF8();
      *(_WORD *)(v18 + 12) = 2081;
      uint64_t v20 = *(void **)(a2 + 24);
      if (v20)
      {
        id v21 = objc_msgSend(v20, sel_description);
        uint64_t v22 = sub_1ACE761B8();
        unint64_t v24 = v23;
      }
      else
      {
        uint64_t v22 = 0x6974636120726F66;
        unint64_t v24 = 0xEF72657375206576;
      }
      sub_1ACA3189C(v22, v24, &v45);
      sub_1ACE76FF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 22) = 2112;
      uint64_t v44 = sub_1ACE74D68();
      sub_1ACE76FF8();
      void *v19 = v44;

      _os_log_impl(&dword_1AC9D5000, v16, v17, a7, (uint8_t *)v18, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v19, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v41, -1, -1);
      MEMORY[0x1AD11B340](v18, -1, -1);

      a3 = v42;
    }
    else
    {
      swift_release_n();
    }
    id v37 = a1;
    a3(a1, 1);

    uint64_t v38 = a1;
LABEL_25:

    return;
  }
  if (!a5 || (uint64_t v26 = a6(a5)) == 0)
  {
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1ACE754C8();
    __swift_project_value_buffer(v27, (uint64_t)qword_1EB76D488);
    swift_retain_n();
    uint64_t v28 = sub_1ACE75498();
    os_log_type_t v29 = sub_1ACE76BE8();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v43 = a3;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 141558275;
      uint64_t v45 = v31;
      sub_1ACE76FF8();
      *(_WORD *)(v30 + 12) = 2081;
      uint64_t v32 = *(void **)(a2 + 24);
      if (v32)
      {
        id v33 = objc_msgSend(v32, sel_description);
        uint64_t v34 = sub_1ACE761B8();
        unint64_t v36 = v35;
      }
      else
      {
        uint64_t v34 = 0x6974636120726F66;
        unint64_t v36 = 0xEF72657375206576;
      }
      sub_1ACA3189C(v34, v36, &v45);
      sub_1ACE76FF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v28, v29, a8, (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v31, -1, -1);
      MEMORY[0x1AD11B340](v30, -1, -1);

      a3 = v43;
    }
    else
    {

      swift_release_n();
    }
    sub_1ACB6BF74();
    uint64_t v39 = swift_allocError();
    *(void *)uint64_t v40 = 3;
    *(unsigned char *)(v40 + 8) = 1;
    a3(v39, 1);
    uint64_t v38 = (void *)v39;
    goto LABEL_25;
  }
  a3(v26, 0);
  swift_bridgeObjectRelease();
}

uint64_t sub_1ACB6AA4C()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  sub_1ACB6BEB4(*(void *)(v0 + 88));
  return swift_deallocClassInstance();
}

uint64_t _s11DataFetcherCMa()
{
  return self;
}

uint64_t sub_1ACB6AAC8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACB6AB00()
{
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB6AB48()
{
  return sub_1ACB68B2C(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1ACB6AB54()
{
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id);
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id + 8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1ACE84470;
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v5 = sub_1ACADC3A8();
  *(void *)(v3 + 32) = 0xD000000000000018;
  *(void *)(v3 + 40) = 0x80000001ACECA520;
  *(void *)(v3 + 96) = v4;
  *(void *)(v3 + 104) = v5;
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 72) = 0x65726F7473;
  *(void *)(v3 + 80) = 0xE500000000000000;
  *(void *)(v3 + 136) = v4;
  *(void *)(v3 + 144) = v5;
  *(void *)(v3 + 112) = v2;
  *(void *)(v3 + 120) = v1;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1ACE761E8();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1ACB6AC44()
{
  sub_1ACA4F4AC();
  uint64_t result = sub_1ACE77028();
  unint64_t v1 = *(void *)(result + 16);
  unint64_t v2 = v1 != 0;
  if (v1 == v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    if (v1 <= v2)
    {
      __break(1u);
      return result;
    }
    uint64_t v3 = *(void *)(result + 16 * v2 + 32);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v3;
}

id sub_1ACB6AD08(void *a1, void *a2)
{
  v25[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = a1;
  uint64_t v4 = sub_1ACB6AB54();
  if (!v5) {
    goto LABEL_16;
  }
  uint64_t v6 = v4;
  unint64_t v7 = v5;
  uint64_t v8 = *(void **)&v3[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes];
  if (v8)
  {
    if (v8[12])
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
    }
    uint64_t v10 = (void *)sub_1ACE76178();
    if (v8[3])
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = 0;
    }
  }
  else
  {
    uint64_t v10 = (void *)sub_1ACE76178();
    uint64_t v9 = 0;
  }
  v25[0] = 0;
  id v11 = objc_msgSend(a2, sel_podcastItemWithTitle_itemId_artistName_error_, v9, v10, v8, v25);

  id v12 = v25[0];
  if (!v11)
  {
    uint64_t v13 = v12;
    id v14 = (void *)sub_1ACE74D78();

    swift_willThrow();
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1ACE754C8();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EB76D488);
    id v16 = v14;
    id v17 = v14;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1ACE75498();
    os_log_type_t v19 = sub_1ACE76BE8();
    if (!os_log_type_enabled(v18, v19))
    {

      swift_bridgeObjectRelease_n();
      return 0;
    }
    uint64_t v20 = swift_slowAlloc();
    id v21 = (void *)swift_slowAlloc();
    unint64_t v23 = (void *)swift_slowAlloc();
    v25[0] = v23;
    *(_DWORD *)uint64_t v20 = 141558531;
    sub_1ACE76FF8();
    *(_WORD *)(v20 + 12) = 2081;
    swift_bridgeObjectRetain();
    sub_1ACA3189C(v6, v7, (uint64_t *)v25);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 22) = 2112;
    uint64_t v24 = sub_1ACE74D68();
    sub_1ACE76FF8();
    *id v21 = v24;

    _os_log_impl(&dword_1AC9D5000, v18, v19, "Unable to create KVItem from podcast: %{private,mask.hash}s with error: %@", (uint8_t *)v20, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v21, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v23, -1, -1);
    MEMORY[0x1AD11B340](v20, -1, -1);

LABEL_16:
    return 0;
  }

  swift_bridgeObjectRelease();
  return v11;
}

id sub_1ACB6B0F4(void *a1, void *a2)
{
  v32[1] = *(id *)MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = objc_msgSend(v3, sel_uuid);
  if (!v4) {
    goto LABEL_12;
  }
  unint64_t v5 = v4;
  uint64_t v6 = sub_1ACE761B8();
  uint64_t v8 = v7;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1ACE84470;
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v11 = sub_1ACADC3A8();
  *(void *)(v9 + 32) = 0xD000000000000018;
  *(void *)(v9 + 40) = 0x80000001ACECA520;
  *(void *)(v9 + 96) = v10;
  *(void *)(v9 + 104) = v11;
  *(void *)(v9 + 64) = v11;
  *(void *)(v9 + 72) = 0x656369766564;
  *(void *)(v9 + 80) = 0xE600000000000000;
  *(void *)(v9 + 136) = v10;
  *(void *)(v9 + 144) = v11;
  *(void *)(v9 + 112) = v6;
  *(void *)(v9 + 120) = v8;
  uint64_t v12 = sub_1ACE761E8();
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v3, sel_title);
  if (v15)
  {
    sub_1ACE761B8();

    id v15 = (id)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  id v16 = (void *)sub_1ACE76178();
  id v17 = objc_msgSend(v3, sel_provider);
  if (v17)
  {
    sub_1ACE761B8();

    id v17 = (id)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  v32[0] = 0;
  id v18 = objc_msgSend(a2, sel_podcastItemWithTitle_itemId_artistName_error_, v15, v16, v17, v32);

  id v19 = v32[0];
  if (!v18)
  {
    uint64_t v20 = v19;
    id v21 = (void *)sub_1ACE74D78();

    swift_willThrow();
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1ACE754C8();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EB76D488);
    id v23 = v21;
    id v24 = v21;
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_1ACE75498();
    os_log_type_t v26 = sub_1ACE76BE8();
    if (!os_log_type_enabled(v25, v26))
    {

      swift_bridgeObjectRelease_n();
      return 0;
    }
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    uint64_t v30 = (void *)swift_slowAlloc();
    v32[0] = v30;
    *(_DWORD *)uint64_t v27 = 141558531;
    sub_1ACE76FF8();
    *(_WORD *)(v27 + 12) = 2081;
    swift_bridgeObjectRetain();
    sub_1ACA3189C(v12, v14, (uint64_t *)v32);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 22) = 2112;
    uint64_t v31 = sub_1ACE74D68();
    sub_1ACE76FF8();
    void *v28 = v31;

    _os_log_impl(&dword_1AC9D5000, v25, v26, "Unable to create KVItem from podcast: %{private,mask.hash}s with error: %@", (uint8_t *)v27, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v28, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v30, -1, -1);
    MEMORY[0x1AD11B340](v27, -1, -1);

LABEL_12:
    return 0;
  }

  swift_bridgeObjectRelease();
  return v18;
}

id sub_1ACB6B5A4(void *a1, void *a2)
{
  v31[1] = *(id *)MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = objc_msgSend(v3, sel_uuid);
  if (!v4) {
    goto LABEL_10;
  }
  unint64_t v5 = v4;
  uint64_t v6 = sub_1ACE761B8();
  uint64_t v8 = v7;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1ACE84470;
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v11 = sub_1ACADC3A8();
  *(void *)(v9 + 32) = 0xD00000000000001FLL;
  *(void *)(v9 + 40) = 0x80000001ACECA500;
  *(void *)(v9 + 96) = v10;
  *(void *)(v9 + 104) = v11;
  *(void *)(v9 + 64) = v11;
  *(void *)(v9 + 72) = 0x656369766564;
  *(void *)(v9 + 80) = 0xE600000000000000;
  *(void *)(v9 + 136) = v10;
  *(void *)(v9 + 144) = v11;
  *(void *)(v9 + 112) = v6;
  *(void *)(v9 + 120) = v8;
  uint64_t v12 = sub_1ACE761E8();
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v3, sel_title);
  if (v15)
  {
    sub_1ACE761B8();

    id v15 = (id)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  id v16 = (void *)sub_1ACE76178();
  v31[0] = 0;
  id v17 = objc_msgSend(a2, sel_playlistItemWithName_itemId_error_, v15, v16, v31);

  id v18 = v31[0];
  if (!v17)
  {
    id v19 = v18;
    uint64_t v20 = (void *)sub_1ACE74D78();

    swift_willThrow();
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1ACE754C8();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB76D488);
    id v22 = v20;
    id v23 = v20;
    swift_bridgeObjectRetain();
    id v24 = sub_1ACE75498();
    os_log_type_t v25 = sub_1ACE76BE8();
    if (!os_log_type_enabled(v24, v25))
    {

      swift_bridgeObjectRelease_n();
      return 0;
    }
    uint64_t v26 = swift_slowAlloc();
    uint64_t v27 = (void *)swift_slowAlloc();
    os_log_type_t v29 = (void *)swift_slowAlloc();
    v31[0] = v29;
    *(_DWORD *)uint64_t v26 = 141558531;
    sub_1ACE76FF8();
    *(_WORD *)(v26 + 12) = 2081;
    swift_bridgeObjectRetain();
    sub_1ACA3189C(v12, v14, (uint64_t *)v31);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 22) = 2112;
    uint64_t v30 = sub_1ACE74D68();
    sub_1ACE76FF8();
    *uint64_t v27 = v30;

    _os_log_impl(&dword_1AC9D5000, v24, v25, "Unable to create KVItem from station: %{private,mask.hash}s with error: %@", (uint8_t *)v26, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v27, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v29, -1, -1);
    MEMORY[0x1AD11B340](v26, -1, -1);

LABEL_10:
    return 0;
  }

  swift_bridgeObjectRelease();
  return v17;
}

id sub_1ACB6BA00(void *a1, void *a2)
{
  v30[1] = *(id *)MEMORY[0x1E4F143B8];
  id v3 = a1;
  uint64_t v4 = sub_1ACB6AC44();
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = v4;
  uint64_t v7 = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1ACE84470;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v10 = sub_1ACADC3A8();
  *(void *)(v8 + 32) = 0xD00000000000001FLL;
  *(void *)(v8 + 40) = 0x80000001ACECA500;
  *(void *)(v8 + 96) = v9;
  *(void *)(v8 + 104) = v10;
  *(void *)(v8 + 64) = v10;
  *(void *)(v8 + 72) = 0x656369766564;
  *(void *)(v8 + 80) = 0xE600000000000000;
  *(void *)(v8 + 136) = v9;
  *(void *)(v8 + 144) = v10;
  *(void *)(v8 + 112) = v6;
  *(void *)(v8 + 120) = v7;
  uint64_t v11 = sub_1ACE761E8();
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (*(void *)(*(void *)&v3[OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_attributes] + 24))
  {
    swift_bridgeObjectRetain();
    unint64_t v14 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v14 = 0;
  }
  id v15 = (void *)sub_1ACE76178();
  v30[0] = 0;
  id v16 = objc_msgSend(a2, sel_playlistItemWithName_itemId_error_, v14, v15, v30);

  id v17 = v30[0];
  if (!v16)
  {
    id v18 = v17;
    id v19 = (void *)sub_1ACE74D78();

    swift_willThrow();
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1ACE754C8();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EB76D488);
    id v21 = v19;
    id v22 = v19;
    swift_bridgeObjectRetain();
    id v23 = sub_1ACE75498();
    os_log_type_t v24 = sub_1ACE76BE8();
    if (!os_log_type_enabled(v23, v24))
    {

      swift_bridgeObjectRelease_n();
      return 0;
    }
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = (void *)swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    v30[0] = v28;
    *(_DWORD *)uint64_t v25 = 141558531;
    sub_1ACE76FF8();
    *(_WORD *)(v25 + 12) = 2081;
    swift_bridgeObjectRetain();
    sub_1ACA3189C(v11, v13, (uint64_t *)v30);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 22) = 2112;
    uint64_t v29 = sub_1ACE74D68();
    sub_1ACE76FF8();
    void *v26 = v29;

    _os_log_impl(&dword_1AC9D5000, v23, v24, "Unable to create KVItem from station: %{private,mask.hash}s with error: %@", (uint8_t *)v25, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v26, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v28, -1, -1);
    MEMORY[0x1AD11B340](v25, -1, -1);

LABEL_11:
    return 0;
  }

  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1ACB6BE3C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACB6BE84()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(*(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1ACB6BEB4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACB6BEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1ACB6A1F0(a1, a2, a3, a4, a5, v5[2], v5[3], v5[4], (uint64_t)&unk_1F038C000, (uint64_t)sub_1ACB6BF4C, (uint64_t)&block_descriptor_38);
}

void sub_1ACB6BF4C()
{
}

unint64_t sub_1ACB6BF74()
{
  unint64_t result = qword_1EB771CF8;
  if (!qword_1EB771CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771CF8);
  }
  return result;
}

uint64_t sub_1ACB6BFC8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB6C010()
{
  return sub_1ACB6896C(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1ACB6C01C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACB6C064(unint64_t a1, char a2)
{
  sub_1ACB697D0(a1, a2 & 1, *(void **)(v2 + 16), *(void (**)(unint64_t, void, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1ACB6C078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1ACB6A1F0(a1, a2, a3, a4, a5, v5[2], v5[3], v5[4], (uint64_t)&unk_1F038C0F0, (uint64_t)sub_1ACB6C11C, (uint64_t)&block_descriptor_57);
}

uint64_t objectdestroy_34Tm_0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACB6C11C()
{
}

void sub_1ACB6C144(uint64_t (*a1)(uint64_t), const char *a2, const char *a3)
{
  sub_1ACB6A4B4(*(void **)(v3 + 16), *(void *)(v3 + 24), *(void (**)(void, void))(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), a1, a2, a3);
}

uint64_t sub_1ACB6C174(unint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1ACE77508();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v6 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v7 = (id)MEMORY[0x1AD119490](i - 4, a1);
          uint64_t v8 = i - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_15;
          }
        }
        else
        {
          id v7 = *(id *)(a1 + 8 * i);
          uint64_t v8 = i - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_15:
            __break(1u);
            goto LABEL_16;
          }
        }
        id v9 = v7;
        uint64_t v10 = a3();

        if (v10)
        {
          MEMORY[0x1AD118700]();
          if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1ACE765C8();
          }
          sub_1ACE76628();
          sub_1ACE76598();
        }
        if (v8 == v4)
        {
          swift_bridgeObjectRelease();
          return v13;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

id MTCategory.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id MTCategory.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for MTCategory();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for MTCategory()
{
  return self;
}

id MTCategory.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MTCategory();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACB6C470(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v24 = MEMORY[0x1E4FBC860];
  sub_1ACC82D44(0, v1, 0);
  uint64_t v2 = v24;
  uint64_t result = sub_1ACC25F20(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v20 = v1;
  int v21 = v5;
  uint64_t v22 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v23 = v7;
    sub_1ACA55E4C();
    sub_1ACE770B8();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    uint64_t result = sub_1ACE77458();
    unint64_t v12 = *(void *)(v24 + 16);
    unint64_t v13 = *(void *)(v24 + 24);
    if (v12 >= v13 >> 1) {
      uint64_t result = sub_1ACC82D44(v13 > 1, v12 + 1, 1);
    }
    *(void *)(v24 + 16) = v12 + 1;
    uint64_t v14 = v24 + 16 * v12;
    *(void *)(v14 + 32) = 0;
    *(void *)(v14 + 40) = 0xE000000000000000;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v15 = *(void *)(v22 + 8 * v11);
    if ((v15 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v21;
    if (*(_DWORD *)(a1 + 36) != v21) {
      goto LABEL_27;
    }
    unint64_t v16 = v15 & (-2 << (v6 & 0x3F));
    if (v16)
    {
      int64_t v9 = __clz(__rbit64(v16)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v20;
    }
    else
    {
      unint64_t v17 = v11 + 1;
      unint64_t v18 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v20;
      if (v11 + 1 < v18)
      {
        unint64_t v19 = *(void *)(v22 + 8 * v17);
        if (v19)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v19)) + (v17 << 6);
        }
        else
        {
          while (v18 - 2 != v11)
          {
            unint64_t v19 = *(void *)(a1 + 80 + 8 * v11++);
            if (v19)
            {
              unint64_t v17 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v23 + 1;
    uint64_t v6 = v9;
    if (v23 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1ACB6C6F4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v30 = MEMORY[0x1E4FBC860];
  sub_1ACC82D44(0, v1, 0);
  uint64_t v2 = v30;
  uint64_t result = sub_1ACC25F20(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v24 = v3 + 80;
  int64_t v25 = v1;
  int v26 = v5;
  uint64_t v27 = v3 + 64;
  uint64_t v28 = v3;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v29 = v7;
    unint64_t v12 = (uint64_t *)(*(void *)(v3 + 56) + 40 * v6);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    unint64_t v15 = v12[2];
    sub_1ACA50D88(*v12, v14, v15);
    sub_1ACA55E4C();
    sub_1ACE770B8();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    sub_1ACE77458();
    uint64_t result = sub_1ACA50D9C(v13, v14, v15);
    unint64_t v17 = *(void *)(v30 + 16);
    unint64_t v16 = *(void *)(v30 + 24);
    if (v17 >= v16 >> 1) {
      uint64_t result = sub_1ACC82D44(v16 > 1, v17 + 1, 1);
    }
    *(void *)(v30 + 16) = v17 + 1;
    uint64_t v18 = v30 + 16 * v17;
    *(void *)(v18 + 32) = 0;
    *(void *)(v18 + 40) = 0xE000000000000000;
    uint64_t v3 = v28;
    int64_t v9 = 1 << *(unsigned char *)(v28 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v27;
    uint64_t v19 = *(void *)(v27 + 8 * v11);
    if ((v19 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v26;
    if (*(_DWORD *)(v28 + 36) != v26) {
      goto LABEL_27;
    }
    unint64_t v20 = v19 & (-2 << (v6 & 0x3F));
    if (v20)
    {
      int64_t v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v25;
    }
    else
    {
      unint64_t v21 = v11 + 1;
      unint64_t v22 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v25;
      if (v11 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v27 + 8 * v21);
        if (v23)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v11)
          {
            unint64_t v23 = *(void *)(v24 + 8 * v11++);
            if (v23)
            {
              unint64_t v21 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v29 + 1;
    uint64_t v6 = v9;
    if (v29 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1ACB6C9C4(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3(*a1) & 1;
}

uint64_t ThinClientStateRepository.stateUpdates.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
  return swift_retain();
}

uint64_t ThinClientStateRepository<>.state<A>(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v33 = a5;
  uint64_t v35 = a6;
  uint64_t v11 = type metadata accessor for ThinClientEpisodeStateModel();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1EC8);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  unint64_t v21 = (char *)&v33 - v20;
  if (a3)
  {
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1ACE754C8();
    __swift_project_value_buffer(v24, (uint64_t)qword_1E99F2BF8);
    sub_1ACA72530(a1, a2, 1);
    swift_bridgeObjectRetain();
    int64_t v25 = sub_1ACE75498();
    os_log_type_t v26 = sub_1ACE76BE8();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v34 = a4;
      uint64_t v28 = (uint8_t *)v27;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315138;
      uint64_t v39 = v29;
      uint64_t v36 = a1;
      uint64_t v37 = a2;
      char v38 = 1;
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1ACE76228();
      uint64_t v36 = sub_1ACA3189C(v30, v31, &v39);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACA91B68(a1, a2, 1);
      sub_1ACA91B68(a1, a2, 1);
      _os_log_impl(&dword_1AC9D5000, v25, v26, "Episode ID not supported on thin clients: %s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v29, -1, -1);
      uint64_t v32 = v28;
      a4 = v34;
      MEMORY[0x1AD11B340](v32, -1, -1);
    }
    else
    {
      sub_1ACA91B68(a1, a2, 1);
      sub_1ACA91B68(a1, a2, 1);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(v35, 1, 1);
  }
  else
  {
    uint64_t v34 = a4;
    uint64_t v22 = *(void *)(v6 + 16);
    MEMORY[0x1F4188790](v19);
    *(&v33 - 2) = a1;
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 40));
    sub_1ACB73A24((uint64_t *)(v22 + 16), (uint64_t)v21);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 40));
    swift_release();
    sub_1ACA3AAD4((uint64_t)v21, (uint64_t)v18, &qword_1E99F1EC8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v18, 1, v11) == 1)
    {
      sub_1ACA50E78((uint64_t)v21, &qword_1E99F1EC8);
      sub_1ACA50E78((uint64_t)v18, &qword_1E99F1EC8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 1, 1);
    }
    else
    {
      sub_1ACB74A58((uint64_t)v18, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
      (*(void (**)(char *))(v33 + 48))(v14);
      sub_1ACB749F8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
      return sub_1ACA50E78((uint64_t)v21, &qword_1E99F1EC8);
    }
  }
}

uint64_t ThinClientStateRepository.__allocating_init(thinClientStateNetworking:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  ThinClientStateRepository.init(thinClientStateNetworking:)(a1);
  return v2;
}

void *ThinClientStateRepository.init(thinClientStateNetworking:)(long long *a1)
{
  uint64_t v2 = v1;
  v9[0] = sub_1ACD5B930();
  v9[1] = v4;
  void v9[2] = v5;
  uint64_t v6 = type metadata accessor for ThinClientStateCache();
  uint64_t v7 = sub_1ACA7989C(v9, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0FF8);
  swift_allocObject();
  v2[3] = sub_1ACE758B8();
  __swift_instantiateConcreteTypeFromMangledName(qword_1E99F27C0);
  swift_allocObject();
  v2[4] = sub_1ACE758B8();
  sub_1ACA3AABC(a1, (uint64_t)(v2 + 5));
  return v2;
}

uint64_t ThinClientStateRepository.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  return v0;
}

uint64_t ThinClientStateRepository.__deallocating_deinit()
{
  ThinClientStateRepository.deinit();
  return swift_deallocClassInstance();
}

uint64_t ThinClientStateRepository.consolidatedStateUpdates.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
  return swift_retain();
}

uint64_t ThinClientStateRepository.state(for:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[2];
  v5[2] = *(void *)(*v1 + 80);
  v5[3] = *(void *)(v2 + 88);
  void v5[4] = a1;
  type metadata accessor for ThinClientStateCache();
  sub_1ACE76FD8();
  swift_retain();
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACB74560, (uint64_t)v5, v3);
  return swift_release();
}

uint64_t ThinClientStateRepository.allAdamIDs<>(forConsolidatedState:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[2];
  v5[2] = *(void *)(*v1 + 80);
  v5[3] = *(void *)(v2 + 88);
  void v5[4] = a1;
  type metadata accessor for ThinClientStateCache();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(qword_1E99F1000);
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACB7459C, (uint64_t)v5, v3);
  swift_release();
  return v5[7];
}

uint64_t sub_1ACB6D1F8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  uint64_t v16 = a1;
  void v12[6] = a2;
  v12[7] = a3;
  v12[8] = sub_1ACA79B50;
  v12[9] = &v13;
  sub_1ACA798F8();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1ACE76068();
  v12[2] = a2;
  v12[3] = a3;
  uint64_t v7 = sub_1ACE76088();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v10 = sub_1ACB4AA30((void (*)(char *, char *))sub_1ACB74E84, (uint64_t)v12, v7, (uint64_t)&type metadata for AdamID, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v9);
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v10;
  return result;
}

uint64_t sub_1ACB6D34C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v7 = MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = *(int *)(v7 + 56);
  uint64_t v11 = &v9[v10];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = *a1;
  *(void *)uint64_t v9 = v13;
  uint64_t v14 = *(void *)(a2 - 8);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(&v9[v10], v12, a2);
  *a3 = v13;
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v11, a2);
}

uint64_t sub_1ACB6D460@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1ACBA9470(a2, *a1, a1[1], a1[2], a3);
}

Swift::Void __swiftcall ThinClientStateRepository.register(remoteStates:)(Swift::OpaquePointer remoteStates)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *v1;
  rawValue = remoteStates._rawValue;
  uint64_t v6 = *(void **)(v4 + 80);
  sub_1ACA798F8();
  uint64_t v7 = sub_1ACE76088();
  uint64_t WitnessTable = swift_getWitnessTable();
  if (Collection.isNotEmpty.getter())
  {
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1ACE754C8();
    __swift_project_value_buffer(v9, (uint64_t)qword_1E99F2BF8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1ACE75498();
    os_log_type_t v11 = sub_1ACE76BD8();
    int v12 = v11;
    if (os_log_type_enabled(v10, v11))
    {
      int v31 = v12;
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = (void *)swift_slowAlloc();
      uint64_t v30 = v14;
      rawValue = v14;
      uint64_t v29 = v13;
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v28 = v13 + 4;
      uint64_t v32 = (uint64_t)remoteStates._rawValue;
      MEMORY[0x1F4188790](v14);
      uint64_t v15 = *(void *)(v5 + 88);
      os_log_type_t v26 = v6;
      uint64_t v27 = v15;
      sub_1ACB4AA30((void (*)(char *, char *))sub_1ACA7996C, (uint64_t)v25, v7, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v16);
      uint64_t v17 = MEMORY[0x1AD118740]();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();
      uint64_t v32 = sub_1ACA3189C(v17, v19, (uint64_t *)&rawValue);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v20 = v29;
      _os_log_impl(&dword_1AC9D5000, v10, (os_log_type_t)v31, "Consolidating remote states: %s", v29, 0xCu);
      unint64_t v21 = v30;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v21, -1, -1);
      MEMORY[0x1AD11B340](v20, -1, -1);
    }
    else
    {

      uint64_t v22 = swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(v5 + 88);
    }
    uint64_t v23 = v2[2];
    MEMORY[0x1F4188790](v22);
    v25[0] = v6;
    v25[1] = v15;
    os_log_type_t v26 = remoteStates._rawValue;
    type metadata accessor for ThinClientStateCache();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(qword_1E99F1000);
    sub_1ACC723D4((void (*)(uint64_t))sub_1ACB745BC, (uint64_t)&v24, v23);
    swift_release();
    sub_1ACE75898();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACB6D834@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v88 = a4;
  uint64_t v106 = a1;
  uint64_t v81 = a5;
  uint64_t v7 = sub_1ACE76FD8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  unint64_t v113 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v10 = (char *)&v77 - v9;
  uint64_t v11 = *(void *)(v7 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v8);
  uint64_t v83 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v77 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  unint64_t v19 = (char *)&v77 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v115 = (char *)&v77 - v21;
  uint64_t v22 = *(void *)(a3 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v87 = (char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v114 = (char *)&v77 - v25;
  uint64_t v26 = swift_getTupleTypeMetadata2();
  uint64_t v104 = sub_1ACE76FD8();
  uint64_t v27 = MEMORY[0x1F4188790](v104);
  unint64_t v108 = (char *)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v107 = (char *)&v77 - v30;
  uint64_t v31 = *(void *)(a2 + 64);
  uint64_t v85 = a2 + 64;
  uint64_t v32 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v33 = -1;
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  uint64_t v116 = v33 & v31;
  unint64_t v34 = (unint64_t)(v32 + 63) >> 6;
  char v112 = (void (**)(char *, char *, uint64_t))(v22 + 16);
  uint64_t v102 = (void (**)(uint64_t *, char *, uint64_t))(v29 + 32);
  uint64_t v103 = v26 - 8;
  uint64_t v110 = (void (**)(char *, char *, uint64_t))(v22 + 32);
  uint64_t v105 = (void (**)(char *, void, uint64_t, uint64_t))(v22 + 56);
  uint64_t v94 = (void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v111 = (uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  uint64_t v91 = v22;
  uint64_t v100 = (void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v35 = v26;
  long long v93 = (void (**)(char *, uint64_t))(v11 + 8);
  unsigned __int8 v80 = (void (**)(char *, uint64_t))(v113 + 8);
  unint64_t v78 = v34 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v37 = 0;
  int64_t v86 = v34;
  unint64_t v79 = v34 - 4;
  uint64_t v92 = a2;
  uint64_t v82 = a2 + 96;
  uint64_t v84 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v90 = v16;
  uint64_t v95 = v26;
  uint64_t v89 = v19;
LABEL_4:
  uint64_t v39 = (uint64_t *)v107;
  char v38 = v108;
  unint64_t v40 = v116;
  while (1)
  {
    if (v40)
    {
      uint64_t v116 = (v40 - 1) & v40;
      unint64_t v113 = v37;
      unint64_t v45 = __clz(__rbit64(v40)) | (v37 << 6);
      goto LABEL_10;
    }
    int64_t v66 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v66 >= v86)
    {
      unint64_t v113 = v37;
      uint64_t v116 = 0;
      uint64_t v47 = 1;
    }
    else
    {
      unint64_t v67 = *(void *)(v85 + 8 * v66);
      if (v67) {
        goto LABEL_19;
      }
      if ((uint64_t)(v37 + 2) >= v86)
      {
        uint64_t v116 = 0;
        uint64_t v47 = 1;
        unint64_t v113 = v37 + 1;
      }
      else
      {
        unint64_t v67 = *(void *)(v85 + 8 * (v37 + 2));
        if (v67)
        {
          int64_t v66 = v37 + 2;
LABEL_19:
          uint64_t v116 = (v67 - 1) & v67;
          unint64_t v45 = __clz(__rbit64(v67)) + (v66 << 6);
          unint64_t v113 = v66;
LABEL_10:
          uint64_t v46 = *(void *)(v92 + 56);
          *(void *)char v38 = *(void *)(*(void *)(v92 + 48) + 8 * v45);
          (*(void (**)(char *, unint64_t, uint64_t))(v91 + 16))(&v38[*(int *)(v35 + 48)], v46 + *(void *)(v91 + 72) * v45, a3);
          uint64_t v47 = 0;
          goto LABEL_11;
        }
        int64_t v66 = v37 + 3;
        if ((uint64_t)(v37 + 3) >= v86)
        {
          uint64_t v116 = 0;
          uint64_t v47 = 1;
          unint64_t v113 = v37 + 2;
        }
        else
        {
          unint64_t v67 = *(void *)(v85 + 8 * v66);
          if (v67) {
            goto LABEL_19;
          }
          while (v79 != v37)
          {
            unint64_t v67 = *(void *)(v82 + 8 * v37++);
            if (v67)
            {
              int64_t v66 = v37 + 3;
              goto LABEL_19;
            }
          }
          uint64_t v116 = 0;
          uint64_t v47 = 1;
          unint64_t v113 = v78;
        }
      }
    }
LABEL_11:
    uint64_t v48 = *(void *)(v35 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v38, v47, 1, v35);
    (*v102)(v39, v38, v104);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v48 + 48))(v39, 1, v35) == 1)
    {
      uint64_t result = swift_release();
      *uint64_t v81 = v84;
      return result;
    }
    uint64_t v49 = *v39;
    __int16 v50 = (char *)v39 + *(int *)(v35 + 48);
    char v51 = v114;
    unint64_t v109 = *v110;
    v109(v114, v50, a3);
    uint64_t v52 = *v106;
    uint64_t v99 = v49;
    uint64_t v117 = v49;
    unint64_t v53 = sub_1ACA798F8();
    uint64_t v54 = v115;
    unint64_t v98 = v53;
    MEMORY[0x1AD118260](&v117, v52, &type metadata for AdamID, a3);
    uint64_t v96 = *v112;
    v96(v19, v51, a3);
    uint64_t v97 = *v105;
    v97(v19, 0, 1, a3);
    long long v55 = &v10[*(int *)(TupleTypeMetadata2 + 48)];
    long long v56 = v10;
    uint64_t v57 = v7;
    uint64_t v58 = *v94;
    (*v94)(v56, v54, v57);
    v58(v55, v19, v57);
    unint64_t v59 = *v111;
    if ((*v111)(v56, 1, a3) == 1)
    {
      uint64_t v41 = *v93;
      (*v93)(v19, v57);
      v41(v115, v57);
      int v42 = v59(v55, 1, a3);
      uint64_t v43 = v57;
      if (v42 != 1) {
        goto LABEL_33;
      }
      uint64_t v10 = v56;
      v41(v56, v43);
      uint64_t v44 = *v100;
      uint64_t v39 = (uint64_t *)v107;
      char v38 = v108;
      uint64_t v7 = v43;
    }
    else
    {
      uint64_t v60 = a3;
      uint64_t v61 = v90;
      v58(v90, v56, v57);
      if (v59(v55, 1, a3) == 1)
      {
        int v68 = *v93;
        id v69 = v89;
        (*v93)(v89, v57);
        v68(v115, v57);
        id v70 = v61;
        unint64_t v19 = v69;
        (*v100)(v70, v60);
        uint64_t v43 = v57;
        a3 = v60;
LABEL_33:
        uint64_t v10 = v56;
        (*v80)(v56, TupleTypeMetadata2);
        uint64_t v7 = v43;
LABEL_34:
        uint64_t v71 = v84;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v71 = sub_1ACA41D90(0, v71[2] + 1, 1, v71);
        }
        unint64_t v73 = v71[2];
        unint64_t v72 = v71[3];
        uint64_t v35 = v95;
        if (v73 >= v72 >> 1) {
          uint64_t v71 = sub_1ACA41D90((void *)(v72 > 1), v73 + 1, 1, v71);
        }
        v71[2] = v73 + 1;
        uint64_t v84 = v71;
        uint64_t v74 = v99;
        v71[v73 + 4] = v99;
        uint64_t v75 = v83;
        uint64_t v76 = v114;
        v96(v83, v114, a3);
        v97(v75, 0, 1, a3);
        uint64_t v117 = v74;
        sub_1ACE76088();
        sub_1ACE760B8();
        uint64_t result = ((uint64_t (*)(char *, uint64_t))*v100)(v76, a3);
        unint64_t v37 = v113;
        goto LABEL_4;
      }
      uint64_t v62 = v87;
      v109(v87, v55, a3);
      LODWORD(v109) = sub_1ACE76168();
      uint64_t v44 = *v100;
      (*v100)(v62, a3);
      int v63 = *v93;
      uint64_t v64 = v89;
      (*v93)(v89, v57);
      v63(v115, v57);
      uint64_t v65 = v61;
      unint64_t v19 = v64;
      v44(v65, a3);
      v63(v56, v57);
      uint64_t v7 = v57;
      uint64_t v10 = v56;
      uint64_t v39 = (uint64_t *)v107;
      char v38 = v108;
      if ((v109 & 1) == 0) {
        goto LABEL_34;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v44)(v114, a3);
    uint64_t v35 = v95;
    unint64_t v40 = v116;
    unint64_t v37 = v113;
  }
  __break(1u);
  return result;
}

uint64_t ThinClientStateRepository<>.overrideAllBookmarkState(with:isInitialFetch:)(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  if (qword_1E99EFEE8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1ACE754C8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1E99F2BF8);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76BD8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = v3;
    uint64_t v10 = swift_slowAlloc();
    v21[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v11 = sub_1ACB6C470(a1);
    uint64_t v12 = MEMORY[0x1AD118740](v11);
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    sub_1ACA3189C(v12, v14, v21);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v7, v8, "Overriding all Bookmark internal state with new snapshot: %s", v9, 0xCu);
    swift_arrayDestroy();
    uint64_t v15 = v10;
    uint64_t v3 = v20;
    MEMORY[0x1AD11B340](v15, -1, -1);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }
  else
  {

    uint64_t v16 = swift_bridgeObjectRelease_n();
  }
  uint64_t v17 = *(void *)(v3 + 16);
  MEMORY[0x1F4188790](v16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v17 + 40));
  sub_1ACB745DC((void *)(v17 + 16), v21);
  os_unfair_lock_unlock((os_unfair_lock_t)(v17 + 40));
  uint64_t v18 = v21[0];
  swift_release();
  v21[0] = v18;
  sub_1ACE75898();
  if ((a2 & 1) == 0)
  {
    LOBYTE(v21[0]) = 2;
    v21[1] = v18;
    sub_1ACE75898();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACB6E610@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v136 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v139 = (uint64_t)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = type metadata accessor for ThinClientEpisodeStateModel();
  uint64_t v7 = *(void *)(v152 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v152);
  uint64_t v141 = (uint64_t)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v138 = (uint64_t)&v133 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v135 = (uint64_t)&v133 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v134 = (uint64_t)&v133 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v144 = (uint64_t)&v133 - v17;
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)&v133 - v18;
  uint64_t v20 = &qword_1E99F1EC8;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1EC8);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  uint64_t v137 = (uint64_t)&v133 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v146 = (uint64_t)&v133 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v147 = (uint64_t)&v133 - v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (char *)&v133 - v28;
  uint64_t v30 = swift_bridgeObjectRetain();
  uint64_t v31 = sub_1ACDF5694(v30);
  uint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v33 = sub_1ACB88548(v32, v31);
  uint64_t v140 = a2;
  swift_bridgeObjectRelease();
  uint64_t v34 = 0;
  uint64_t v35 = *(void *)(v33 + 56);
  int64_t v145 = v33 + 56;
  uint64_t v36 = 1 << *(unsigned char *)(v33 + 32);
  uint64_t v37 = -1;
  if (v36 < 64) {
    uint64_t v37 = ~(-1 << v36);
  }
  unint64_t v38 = v37 & v35;
  uint64_t v148 = v7;
  v149 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((unint64_t)(v36 + 63) >> 6);
  uint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v142 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v143 = v33;
  uint64_t v150 = a1;
  if ((v37 & v35) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  while (2)
  {
    uint64_t v42 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
      __break(1u);
LABEL_98:
      __break(1u);
      goto LABEL_99;
    }
    if (v42 >= (uint64_t)v149) {
      break;
    }
    unint64_t v43 = *(void *)(v145 + 8 * v42);
    uint64_t v44 = v34 + 1;
    if (v43) {
      goto LABEL_21;
    }
    uint64_t v44 = v34 + 2;
    if (v34 + 2 < (uint64_t)v149)
    {
      unint64_t v43 = *(void *)(v145 + 8 * v44);
      if (v43) {
        goto LABEL_21;
      }
      uint64_t v44 = v34 + 3;
      if (v34 + 3 < (uint64_t)v149)
      {
        unint64_t v43 = *(void *)(v145 + 8 * v44);
        if (!v43)
        {
          uint64_t v45 = v34 + 4;
          if (v34 + 4 < (uint64_t)v149)
          {
            unint64_t v43 = *(void *)(v145 + 8 * v45);
            if (v43)
            {
              uint64_t v44 = v34 + 4;
              goto LABEL_21;
            }
            while (1)
            {
              uint64_t v44 = v45 + 1;
              if (__OFADD__(v45, 1)) {
                break;
              }
              if (v44 >= (uint64_t)v149) {
                goto LABEL_45;
              }
              unint64_t v43 = *(void *)(v145 + 8 * v44);
              ++v45;
              if (v43) {
                goto LABEL_21;
              }
            }
LABEL_99:
            __break(1u);
            goto LABEL_100;
          }
          break;
        }
LABEL_21:
        unint64_t v38 = (v43 - 1) & v43;
        uint64_t v151 = v44;
        for (unint64_t i = __clz(__rbit64(v43)) + (v44 << 6); ; unint64_t i = v40 | (v34 << 6))
        {
          uint64_t v46 = *(void *)(*(void *)(v33 + 48) + 8 * i);
          uint64_t v47 = *a1;
          if (*(void *)(*a1 + 16) && (uint64_t v48 = sub_1ACA65CC4(v46), (v49 & 1) != 0))
          {
            sub_1ACB74990(*(void *)(v47 + 56) + *(void *)(v148 + 72) * v48, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
            uint64_t v50 = 0;
          }
          else
          {
            uint64_t v50 = 1;
          }
          (*v39)(v29, v50, 1, v152);
          uint64_t v51 = *a1;
          if (!*(void *)(*a1 + 16)) {
            goto LABEL_6;
          }
          uint64_t v52 = sub_1ACA65CC4(v46);
          if ((v53 & 1) == 0) {
            goto LABEL_6;
          }
          uint64_t v54 = v29;
          long long v55 = v39;
          long long v56 = v20;
          uint64_t v57 = *(void *)(v148 + 72);
          uint64_t v58 = (uint64_t)v19;
          uint64_t v59 = v144;
          sub_1ACB74990(*(void *)(v51 + 56) + v57 * v52, v144, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
          uint64_t v60 = v59;
          unint64_t v19 = (char *)v58;
          sub_1ACB74A58(v60, v58, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
          if ((*(unsigned char *)(v58 + *(int *)(v152 + 20)) & 1) == 0) {
            break;
          }
          uint64_t v61 = v134;
          sub_1ACA3AAD4(v58, v134, (uint64_t *)&unk_1EB772D70);
          *(unsigned char *)(v61 + *(int *)(v152 + 20)) = 2;
          sub_1ACB74990(v61, v135, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
          uint64_t v62 = v150;
          LODWORD(v133) = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v153 = (void *)*v62;
          int v63 = v153;
          *uint64_t v62 = 0x8000000000000000;
          unint64_t v65 = sub_1ACA65CC4(v46);
          uint64_t v66 = v63[2];
          BOOL v67 = (v64 & 1) == 0;
          uint64_t v68 = v66 + v67;
          if (__OFADD__(v66, v67)) {
            goto LABEL_103;
          }
          if (v63[3] >= v68)
          {
            uint64_t v20 = v56;
            if ((v133 & 1) == 0)
            {
              unint64_t v133 = v65;
              char v80 = v64;
              sub_1ACD07DB8();
              char v64 = v80;
              unint64_t v65 = v133;
            }
          }
          else
          {
            char v69 = v64;
            sub_1ACCFFC30(v68, v133);
            uint64_t v70 = sub_1ACA65CC4(v46);
            if ((v69 & 1) != (v71 & 1)) {
              goto LABEL_105;
            }
            unint64_t v65 = v70;
            char v64 = v69;
            uint64_t v20 = v56;
          }
          uint64_t v39 = v55;
          unint64_t v72 = v153;
          uint64_t v29 = v54;
          if (v64)
          {
            sub_1ACB7492C(v135, v153[7] + v65 * v57);
            unint64_t v73 = v150;
            uint64_t v33 = v143;
          }
          else
          {
            v153[(v65 >> 6) + 8] |= 1 << v65;
            *(void *)(v72[6] + 8 * v65) = v46;
            sub_1ACB74A58(v135, v72[7] + v65 * v57, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
            uint64_t v74 = v72[2];
            BOOL v75 = __OFADD__(v74, 1);
            uint64_t v76 = v74 + 1;
            uint64_t v33 = v143;
            if (v75) {
              goto LABEL_104;
            }
            v72[2] = v76;
            unint64_t v73 = v150;
          }
          *unint64_t v73 = v72;
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v142 = sub_1ACA41D90(0, v142[2] + 1, 1, v142);
          }
          unint64_t v78 = v142[2];
          unint64_t v77 = v142[3];
          if (v78 >= v77 >> 1) {
            uint64_t v142 = sub_1ACA41D90((void *)(v77 > 1), v78 + 1, 1, v142);
          }
          unint64_t v79 = v142;
          v142[2] = v78 + 1;
          v79[v78 + 4] = v46;
          sub_1ACB749F8(v134, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
          sub_1ACB749F8((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
          sub_1ACA50E78((uint64_t)v29, v20);
          a1 = v150;
          uint64_t v34 = v151;
          if (!v38) {
            goto LABEL_8;
          }
LABEL_7:
          unint64_t v40 = __clz(__rbit64(v38));
          v38 &= v38 - 1;
          uint64_t v151 = v34;
        }
        sub_1ACB749F8(v58, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
        a1 = v150;
        uint64_t v20 = v56;
        uint64_t v39 = v55;
        uint64_t v29 = v54;
        uint64_t v33 = v143;
LABEL_6:
        sub_1ACA50E78((uint64_t)v29, v20);
        uint64_t v34 = v151;
        if (!v38) {
          continue;
        }
        goto LABEL_7;
      }
    }
    break;
  }
LABEL_45:
  swift_release();
  uint64_t v81 = v140;
  uint64_t v82 = *(void *)(v140 + 64);
  uint64_t v144 = v140 + 64;
  uint64_t v83 = 1 << *(unsigned char *)(v140 + 32);
  uint64_t v84 = -1;
  if (v83 < 64) {
    uint64_t v84 = ~(-1 << v83);
  }
  unint64_t v85 = v84 & v82;
  int64_t v145 = (unint64_t)(v83 + 63) >> 6;
  v149 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48);
  swift_bridgeObjectRetain();
  int64_t v86 = 0;
  uint64_t v87 = v152;
  uint64_t v88 = v147;
  while (v85)
  {
    unint64_t v89 = __clz(__rbit64(v85));
    v85 &= v85 - 1;
    unint64_t v90 = v89 | (v86 << 6);
LABEL_65:
    uint64_t v94 = *(void *)(*(void *)(v81 + 48) + 8 * v90);
    int v95 = *(unsigned __int8 *)(*(void *)(v81 + 56) + v90);
    uint64_t v96 = *v150;
    uint64_t v97 = *(void *)(*v150 + 16);
    uint64_t v151 = v94;
    if (v97 && (uint64_t v98 = sub_1ACA65CC4(v94), (v99 & 1) != 0))
    {
      sub_1ACB74990(*(void *)(v96 + 56) + *(void *)(v148 + 72) * v98, v88, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
      uint64_t v100 = 0;
    }
    else
    {
      uint64_t v100 = 1;
    }
    (*v39)((char *)v88, v100, 1, v87);
    uint64_t v101 = v88;
    uint64_t v102 = v146;
    sub_1ACA3AAD4(v101, v146, &qword_1E99F1EC8);
    uint64_t v103 = *v149;
    if ((*v149)(v102, 1, v87) == 1)
    {
      sub_1ACA50E78(v102, &qword_1E99F1EC8);
    }
    else
    {
      int v104 = *(unsigned __int8 *)(v102 + *(int *)(v87 + 20));
      sub_1ACB749F8(v102, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
      int v105 = v95 ^ ((v104 & 1) == 0);
      BOOL v106 = v104 == 2;
      uint64_t v87 = v152;
      BOOL v106 = v106 || v105 == 0;
      if (!v106)
      {
        uint64_t v88 = v147;
        goto LABEL_48;
      }
    }
    uint64_t v88 = v147;
    uint64_t v107 = v137;
    sub_1ACA3AAD4(v147, v137, &qword_1E99F1EC8);
    if (v103(v107, 1, v87) == 1)
    {
      sub_1ACA50E78(v107, &qword_1E99F1EC8);
      uint64_t v108 = type metadata accessor for EpisodePlayState();
      uint64_t v109 = v139;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v139, 1, 1, v108);
    }
    else
    {
      uint64_t v109 = v139;
      sub_1ACA3AAD4(v107, v139, (uint64_t *)&unk_1EB772D70);
      sub_1ACB749F8(v107, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
    }
    uint64_t v110 = v109;
    uint64_t v111 = v138;
    sub_1ACA50E14(v110, v138, (uint64_t *)&unk_1EB772D70);
    *(unsigned char *)(v111 + *(int *)(v87 + 20)) = v95;
    sub_1ACB74A58(v111, v141, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
    char v112 = v150;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v153 = (void *)*v112;
    uint64_t v114 = v153;
    *char v112 = 0x8000000000000000;
    unint64_t v116 = sub_1ACA65CC4(v151);
    uint64_t v117 = v114[2];
    BOOL v118 = (v115 & 1) == 0;
    uint64_t v119 = v117 + v118;
    if (__OFADD__(v117, v118)) {
      goto LABEL_101;
    }
    char v120 = v115;
    if (v114[3] >= v119)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v123 = v153;
        if ((v115 & 1) == 0) {
          goto LABEL_89;
        }
      }
      else
      {
        sub_1ACD07DB8();
        uint64_t v123 = v153;
        if ((v120 & 1) == 0) {
          goto LABEL_89;
        }
      }
    }
    else
    {
      sub_1ACCFFC30(v119, isUniquelyReferenced_nonNull_native);
      uint64_t v121 = sub_1ACA65CC4(v151);
      if ((v120 & 1) != (v122 & 1)) {
        goto LABEL_105;
      }
      unint64_t v116 = v121;
      uint64_t v123 = v153;
      if ((v120 & 1) == 0)
      {
LABEL_89:
        v123[(v116 >> 6) + 8] |= 1 << v116;
        *(void *)(v123[6] + 8 * v116) = v151;
        sub_1ACB74A58(v141, v123[7] + *(void *)(v148 + 72) * v116, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
        uint64_t v124 = v123[2];
        BOOL v75 = __OFADD__(v124, 1);
        uint64_t v125 = v124 + 1;
        if (v75) {
          goto LABEL_102;
        }
        v123[2] = v125;
        goto LABEL_91;
      }
    }
    sub_1ACB7492C(v141, v123[7] + *(void *)(v148 + 72) * v116);
LABEL_91:
    *uint64_t v150 = v123;
    swift_bridgeObjectRelease();
    char v126 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v81 = v140;
    uint64_t v87 = v152;
    if ((v126 & 1) == 0) {
      uint64_t v142 = sub_1ACA41D90(0, v142[2] + 1, 1, v142);
    }
    unint64_t v128 = v142[2];
    unint64_t v127 = v142[3];
    uint64_t v129 = v151;
    if (v128 >= v127 >> 1)
    {
      uint64_t v131 = sub_1ACA41D90((void *)(v127 > 1), v128 + 1, 1, v142);
      uint64_t v129 = v151;
      uint64_t v142 = v131;
    }
    uint64_t v130 = v142;
    v142[2] = v128 + 1;
    v130[v128 + 4] = v129;
LABEL_48:
    sub_1ACA50E78(v88, &qword_1E99F1EC8);
  }
  int64_t v91 = v86 + 1;
  if (__OFADD__(v86, 1)) {
    goto LABEL_98;
  }
  if (v91 >= v145)
  {
LABEL_96:
    uint64_t result = swift_release();
    *uint64_t v136 = v142;
    return result;
  }
  unint64_t v92 = *(void *)(v144 + 8 * v91);
  ++v86;
  if (v92) {
    goto LABEL_64;
  }
  int64_t v86 = v91 + 1;
  if (v91 + 1 >= v145) {
    goto LABEL_96;
  }
  unint64_t v92 = *(void *)(v144 + 8 * v86);
  if (v92) {
    goto LABEL_64;
  }
  int64_t v86 = v91 + 2;
  if (v91 + 2 >= v145) {
    goto LABEL_96;
  }
  unint64_t v92 = *(void *)(v144 + 8 * v86);
  if (v92)
  {
LABEL_64:
    unint64_t v85 = (v92 - 1) & v92;
    unint64_t v90 = __clz(__rbit64(v92)) + (v86 << 6);
    goto LABEL_65;
  }
  int64_t v93 = v91 + 3;
  if (v93 >= v145) {
    goto LABEL_96;
  }
  unint64_t v92 = *(void *)(v144 + 8 * v93);
  if (v92)
  {
    int64_t v86 = v93;
    goto LABEL_64;
  }
  while (1)
  {
    int64_t v86 = v93 + 1;
    if (__OFADD__(v93, 1)) {
      break;
    }
    if (v86 >= v145) {
      goto LABEL_96;
    }
    unint64_t v92 = *(void *)(v144 + 8 * v86);
    ++v93;
    if (v92) {
      goto LABEL_64;
    }
  }
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t ThinClientStateRepository<>.overrideAllFollowedState(with:isInitialFetch:)(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  if (qword_1E99EFEE8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1ACE754C8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1E99F2BF8);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76BD8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = v3;
    uint64_t v10 = swift_slowAlloc();
    v21[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v11 = sub_1ACB6C6F4(a1);
    uint64_t v12 = MEMORY[0x1AD118740](v11);
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    sub_1ACA3189C(v12, v14, v21);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v7, v8, "Overriding all Followed internal state with new snapshot: %s", v9, 0xCu);
    swift_arrayDestroy();
    uint64_t v15 = v10;
    uint64_t v3 = v20;
    MEMORY[0x1AD11B340](v15, -1, -1);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }
  else
  {

    uint64_t v16 = swift_bridgeObjectRelease_n();
  }
  uint64_t v17 = *(void *)(v3 + 16);
  MEMORY[0x1F4188790](v16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v17 + 40));
  sub_1ACB745F8((void *)(v17 + 16), v21);
  os_unfair_lock_unlock((os_unfair_lock_t)(v17 + 40));
  uint64_t v18 = v21[0];
  swift_release();
  v21[0] = v18;
  sub_1ACE75898();
  if ((a2 & 1) == 0)
  {
    LOBYTE(v21[0]) = 0;
    v21[1] = v18;
    sub_1ACE75898();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACB6F570@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v14 = MEMORY[0x1E4FBC860];
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1ACDF5694(v6);
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1ACB885B4(v8, v7);
  swift_bridgeObjectRelease();
  sub_1ACA6FC9C(v9);
  void v13[2] = (unint64_t)a1;
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1ACB74CC0(v10, (uint64_t (*)(uint64_t, void *))sub_1ACB74AC0, v13);
  swift_bridgeObjectRelease();
  sub_1ACA6FC84((uint64_t)v11);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = a2;
  *a3 = v14;
  return result;
}

BOOL sub_1ACB6F664(uint64_t a1, void *a2, uint64_t *a3)
{
  sub_1ACA8F4F4((uint64_t)a2, (uint64_t)v14);
  uint64_t v6 = v14[0];
  uint64_t v7 = v14[1];
  unint64_t v8 = v14[2];
  uint64_t v9 = *a3;
  if (*(void *)(v9 + 16) && (uint64_t v10 = sub_1ACA65CC4(a1), (v11 & 1) != 0))
  {
    sub_1ACA8F4F4(*(void *)(v9 + 56) + 40 * v10, (uint64_t)v15);
    return !_s18PodcastsFoundation12PodcastStateO2eeoiySbAC_ACtFZ_0((uint64_t)v15, (uint64_t)a2);
  }
  else
  {
    sub_1ACB74E38(a2, (void (*)(void, void, void, void, void))sub_1ACA50D88);
    sub_1ACB74E74(0, 0, 3uLL);
    sub_1ACB74E74(v6, v7, v8);
    return 1;
  }
}

uint64_t ThinClientStateRepository<>.register(remoteBookmarkStates:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 40));
  sub_1ACB74614((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 40));
  uint64_t v2 = v4;
  swift_release();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = v2;
    sub_1ACE75898();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACB6F7F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v111 = a1;
  int64_t v93 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  MEMORY[0x1F4188790](v4 - 8);
  int v95 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ThinClientEpisodeStateModel();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v97 = (uint64_t)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v96 = (uint64_t)&v92 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v106 = (uint64_t)&v92 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1EC8);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v98 = (uint64_t)&v92 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v107 = (uint64_t)&v92 - v19;
  uint64_t v20 = *(void *)(a2 + 64);
  uint64_t v104 = a2 + 64;
  uint64_t v21 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  int64_t v105 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v100 = v7;
  uint64_t v109 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  uint64_t v110 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v108 = a2;
  swift_bridgeObjectRetain();
  int64_t v24 = 0;
  char v99 = (void *)MEMORY[0x1E4FBC860];
  *(void *)&long long v25 = 136315394;
  long long v103 = v25;
  uint64_t v102 = MEMORY[0x1E4FBC840] + 8;
  *(void *)&long long v25 = 136315138;
  long long v101 = v25;
  uint64_t v112 = v6;
  uint64_t v94 = v16;
  if (v23) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v29 = v24 + 1;
  if (!__OFADD__(v24, 1))
  {
    if (v29 < v105)
    {
      unint64_t v30 = *(void *)(v104 + 8 * v29);
      ++v24;
      if (v30) {
        goto LABEL_20;
      }
      int64_t v24 = v29 + 1;
      if (v29 + 1 >= v105) {
        goto LABEL_59;
      }
      unint64_t v30 = *(void *)(v104 + 8 * v24);
      if (v30) {
        goto LABEL_20;
      }
      int64_t v24 = v29 + 2;
      if (v29 + 2 >= v105) {
        goto LABEL_59;
      }
      unint64_t v30 = *(void *)(v104 + 8 * v24);
      if (v30)
      {
LABEL_20:
        uint64_t v27 = (v30 - 1) & v30;
        for (unint64_t i = __clz(__rbit64(v30)) + (v24 << 6); ; unint64_t i = v26 | (v24 << 6))
        {
          uint64_t v32 = *(void *)(*(void *)(v108 + 48) + 8 * i);
          int v115 = *(unsigned __int8 *)(*(void *)(v108 + 56) + i);
          if (qword_1E99EFEE8 != -1) {
            swift_once();
          }
          uint64_t v33 = sub_1ACE754C8();
          uint64_t v113 = __swift_project_value_buffer(v33, (uint64_t)qword_1E99F2BF8);
          uint64_t v34 = sub_1ACE75498();
          os_log_type_t v35 = sub_1ACE76BD8();
          BOOL v36 = os_log_type_enabled(v34, v35);
          unint64_t v114 = v27;
          if (v36)
          {
            uint64_t v37 = swift_slowAlloc();
            uint64_t v38 = swift_slowAlloc();
            uint64_t v117 = (void *)v38;
            *(_DWORD *)uint64_t v37 = v103;
            uint64_t v116 = v32;
            sub_1ACA55E4C();
            uint64_t v39 = sub_1ACE770B8();
            *(void *)(v37 + 4) = sub_1ACA3189C(v39, v40, (uint64_t *)&v117);
            swift_bridgeObjectRelease();
            *(_WORD *)(v37 + 12) = 2080;
            LOBYTE(v116) = v115;
            uint64_t v41 = sub_1ACE76228();
            *(void *)(v37 + 14) = sub_1ACA3189C(v41, v42, (uint64_t *)&v117);
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1AC9D5000, v34, v35, "Consolidating bookmark state: %s -> %s", (uint8_t *)v37, 0x16u);
            swift_arrayDestroy();
            uint64_t v43 = v38;
            uint64_t v6 = v112;
            MEMORY[0x1AD11B340](v43, -1, -1);
            MEMORY[0x1AD11B340](v37, -1, -1);
          }

          uint64_t v44 = *v111;
          if (*(void *)(*v111 + 16) && (uint64_t v45 = sub_1ACA65CC4(v32), (v46 & 1) != 0))
          {
            uint64_t v47 = *(void *)(v44 + 56);
            uint64_t v48 = v100;
            uint64_t v49 = v107;
            sub_1ACB74990(v47 + *(void *)(v100 + 72) * v45, v107, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
            uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
            uint64_t v51 = v49;
            v50(v49, 0, 1, v6);
          }
          else
          {
            uint64_t v50 = *v110;
            uint64_t v51 = v107;
            (*v110)(v107, 1, 1, v6);
          }
          uint64_t v52 = *v109;
          uint64_t v53 = v32;
          if ((*v109)(v51, 1, v6))
          {
            sub_1ACA50E78(v51, &qword_1E99F1EC8);
          }
          else
          {
            uint64_t v54 = v106;
            sub_1ACB74990(v51, v106, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
            sub_1ACA50E78(v51, &qword_1E99F1EC8);
            int v55 = *(unsigned __int8 *)(v54 + *(int *)(v6 + 20));
            sub_1ACB749F8(v54, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
            if (v55 != 2 && ((v115 ^ ((v55 & 1) == 0)) & 1) != 0)
            {
              long long v56 = sub_1ACE75498();
              os_log_type_t v57 = sub_1ACE76BD8();
              if (os_log_type_enabled(v56, v57))
              {
                uint64_t v58 = swift_slowAlloc();
                uint64_t v59 = swift_slowAlloc();
                uint64_t v117 = (void *)v59;
                *(_DWORD *)uint64_t v58 = v101;
                uint64_t v116 = v32;
                sub_1ACA55E4C();
                uint64_t v60 = sub_1ACE770B8();
                *(void *)(v58 + 4) = sub_1ACA3189C(v60, v61, (uint64_t *)&v117);
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1AC9D5000, v56, v57, "Bookmark state for %s already at target, skipping", (uint8_t *)v58, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1AD11B340](v59, -1, -1);
                MEMORY[0x1AD11B340](v58, -1, -1);
              }

              uint64_t v6 = v112;
              unint64_t v23 = v114;
              if (!v114) {
                goto LABEL_7;
              }
              goto LABEL_6;
            }
          }
          uint64_t v62 = *v111;
          if (*(void *)(*v111 + 16))
          {
            uint64_t v63 = sub_1ACA65CC4(v32);
            uint64_t v64 = v112;
            uint64_t v65 = (uint64_t)v94;
            if (v66)
            {
              sub_1ACB74990(*(void *)(v62 + 56) + *(void *)(v100 + 72) * v63, v98, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
              uint64_t v67 = 0;
            }
            else
            {
              uint64_t v67 = 1;
            }
          }
          else
          {
            uint64_t v67 = 1;
            uint64_t v64 = v112;
            uint64_t v65 = (uint64_t)v94;
          }
          uint64_t v68 = (uint64_t)v95;
          uint64_t v69 = v98;
          v50(v98, v67, 1, v64);
          sub_1ACA3AAD4(v69, v65, &qword_1E99F1EC8);
          if (v52(v65, 1, v64) == 1)
          {
            sub_1ACA50E78(v65, &qword_1E99F1EC8);
            uint64_t v70 = type metadata accessor for EpisodePlayState();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v68, 1, 1, v70);
          }
          else
          {
            sub_1ACA3AAD4(v65, v68, (uint64_t *)&unk_1EB772D70);
            sub_1ACB749F8(v65, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
          }
          uint64_t v71 = v96;
          sub_1ACA50E14(v68, v96, (uint64_t *)&unk_1EB772D70);
          *(unsigned char *)(v71 + *(int *)(v64 + 20)) = v115;
          sub_1ACB74A58(v71, v97, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
          unint64_t v72 = v111;
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v117 = (void *)*v72;
          uint64_t v74 = (uint64_t)v117;
          *unint64_t v72 = 0x8000000000000000;
          unint64_t v76 = sub_1ACA65CC4(v53);
          uint64_t v77 = *(void *)(v74 + 16);
          BOOL v78 = (v75 & 1) == 0;
          uint64_t v79 = v77 + v78;
          if (__OFADD__(v77, v78)) {
            goto LABEL_62;
          }
          char v80 = v75;
          if (*(void *)(v74 + 24) >= v79)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1ACD07DB8();
            }
          }
          else
          {
            sub_1ACCFFC30(v79, isUniquelyReferenced_nonNull_native);
            uint64_t v81 = sub_1ACA65CC4(v53);
            if ((v80 & 1) != (v82 & 1)) {
              goto LABEL_64;
            }
            unint64_t v76 = v81;
          }
          uint64_t v6 = v112;
          uint64_t v83 = v117;
          if (v80)
          {
            sub_1ACB7492C(v97, v117[7] + *(void *)(v100 + 72) * v76);
          }
          else
          {
            v117[(v76 >> 6) + 8] |= 1 << v76;
            *(void *)(v83[6] + 8 * v76) = v53;
            sub_1ACB74A58(v97, v83[7] + *(void *)(v100 + 72) * v76, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
            uint64_t v84 = v83[2];
            BOOL v85 = __OFADD__(v84, 1);
            uint64_t v86 = v84 + 1;
            if (v85) {
              goto LABEL_63;
            }
            v83[2] = v86;
          }
          *uint64_t v111 = (uint64_t)v83;
          swift_bridgeObjectRelease();
          char v87 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v23 = v114;
          if ((v87 & 1) == 0) {
            char v99 = sub_1ACA41D90(0, v99[2] + 1, 1, v99);
          }
          unint64_t v89 = v99[2];
          unint64_t v88 = v99[3];
          if (v89 >= v88 >> 1) {
            char v99 = sub_1ACA41D90((void *)(v88 > 1), v89 + 1, 1, v99);
          }
          unint64_t v90 = v99;
          v99[2] = v89 + 1;
          v90[v89 + 4] = v53;
          sub_1ACA50E78(v98, &qword_1E99F1EC8);
          if (!v23) {
            goto LABEL_7;
          }
LABEL_6:
          unint64_t v26 = __clz(__rbit64(v23));
          uint64_t v27 = (v23 - 1) & v23;
        }
      }
      int64_t v31 = v29 + 3;
      if (v31 < v105)
      {
        unint64_t v30 = *(void *)(v104 + 8 * v31);
        if (v30)
        {
          int64_t v24 = v31;
          goto LABEL_20;
        }
        while (1)
        {
          int64_t v24 = v31 + 1;
          if (__OFADD__(v31, 1)) {
            goto LABEL_61;
          }
          if (v24 >= v105) {
            break;
          }
          unint64_t v30 = *(void *)(v104 + 8 * v24);
          ++v31;
          if (v30) {
            goto LABEL_20;
          }
        }
      }
    }
LABEL_59:
    uint64_t result = swift_release();
    *int64_t v93 = v99;
    return result;
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t ThinClientStateRepository<>.registerRemotePlayState(for:to:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 40));
  sub_1ACB74630((void *)(v3 + 16), (char *)&v7);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 40));
  int v4 = v7;
  uint64_t result = swift_release();
  if (v4 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7694A0);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1ACE843F0;
    *(void *)(v6 + 32) = a1;
    uint64_t v7 = v6;
    sub_1ACE75898();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACB703AC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v71 = a4;
  uint64_t v77 = a3;
  uint64_t v76 = type metadata accessor for EpisodePlayState();
  uint64_t v6 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v60 = (uint64_t)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2860);
  MEMORY[0x1F4188790](v70);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ThinClientEpisodeStateModel();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v62 = (uint64_t *)((char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1EC8);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v65 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v67 = (uint64_t)&v60 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v66 = (uint64_t)&v60 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v60 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  uint64_t v23 = MEMORY[0x1F4188790](v22 - 8);
  uint64_t v75 = (uint64_t)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v61 = (uint64_t)&v60 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  int64_t v29 = (char *)&v60 - v28;
  MEMORY[0x1F4188790](v27);
  int64_t v31 = (char *)&v60 - v30;
  uint64_t v69 = a1;
  uint64_t v32 = *a1;
  uint64_t v33 = *(void *)(v32 + 16);
  uint64_t v72 = a2;
  uint64_t v73 = v11;
  if (v33)
  {
    uint64_t v34 = sub_1ACA65CC4(a2);
    if (v35)
    {
      uint64_t v11 = v73;
      sub_1ACB74990(*(void *)(v32 + 56) + *(void *)(v73 + 72) * v34, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
      BOOL v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
      uint64_t v37 = v21;
      uint64_t v38 = 0;
      goto LABEL_6;
    }
    uint64_t v11 = v73;
  }
  BOOL v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v37 = v21;
  uint64_t v38 = 1;
LABEL_6:
  uint64_t v74 = v36;
  v36((uint64_t)v37, v38, 1, v10);
  uint64_t v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v64 = v11 + 48;
  int v39 = v63(v21, 1, v10);
  uint64_t v68 = v10;
  if (v39)
  {
    sub_1ACA50E78((uint64_t)v21, &qword_1E99F1EC8);
    uint64_t v40 = v76;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v31, 1, 1, v76);
  }
  else
  {
    uint64_t v41 = (void (*)(void, void, void, void))v62;
    sub_1ACB74990((uint64_t)v21, (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
    sub_1ACA50E78((uint64_t)v21, &qword_1E99F1EC8);
    sub_1ACA50E14((uint64_t)v41, (uint64_t)v31, (uint64_t *)&unk_1EB772D70);
    uint64_t v40 = v76;
  }
  sub_1ACB74990(v77, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
  uint64_t v62 = *(uint64_t **)(v6 + 56);
  ((void (*)(char *, void, uint64_t, uint64_t))v62)(v29, 0, 1, v40);
  uint64_t v42 = (uint64_t)&v9[*(int *)(v70 + 48)];
  sub_1ACA3AAD4((uint64_t)v31, (uint64_t)v9, (uint64_t *)&unk_1EB772D70);
  sub_1ACA3AAD4((uint64_t)v29, v42, (uint64_t *)&unk_1EB772D70);
  uint64_t v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v43((uint64_t)v9, 1, v40) == 1)
  {
    sub_1ACA50E78((uint64_t)v29, (uint64_t *)&unk_1EB772D70);
    sub_1ACA50E78((uint64_t)v31, (uint64_t *)&unk_1EB772D70);
    if (v43(v42, 1, v40) == 1)
    {
      uint64_t result = sub_1ACA50E78((uint64_t)v9, (uint64_t *)&unk_1EB772D70);
      char v45 = 0;
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v46 = v61;
    sub_1ACA3AAD4((uint64_t)v9, v61, (uint64_t *)&unk_1EB772D70);
    if (v43(v42, 1, v40) != 1)
    {
      uint64_t v47 = v60;
      sub_1ACB74A58(v42, v60, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      char v48 = _s18PodcastsFoundation16EpisodePlayStateO2eeoiySbAC_ACtFZ_0(v46, v47);
      sub_1ACB749F8(v47, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      sub_1ACA50E78((uint64_t)v29, (uint64_t *)&unk_1EB772D70);
      sub_1ACA50E78((uint64_t)v31, (uint64_t *)&unk_1EB772D70);
      sub_1ACB749F8(v46, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      uint64_t result = sub_1ACA50E78((uint64_t)v9, (uint64_t *)&unk_1EB772D70);
      uint64_t v40 = v76;
      if (v48)
      {
        char v45 = 0;
        goto LABEL_26;
      }
      goto LABEL_17;
    }
    sub_1ACA50E78((uint64_t)v29, (uint64_t *)&unk_1EB772D70);
    sub_1ACA50E78((uint64_t)v31, (uint64_t *)&unk_1EB772D70);
    sub_1ACB749F8(v46, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
    uint64_t v40 = v76;
  }
  sub_1ACA50E78((uint64_t)v9, &qword_1E99F2860);
LABEL_17:
  uint64_t v49 = *v69;
  if (*(void *)(*v69 + 16))
  {
    uint64_t v50 = sub_1ACA65CC4(v72);
    uint64_t v51 = (uint64_t)v65;
    uint64_t v52 = v66;
    if (v53)
    {
      sub_1ACB74990(*(void *)(v49 + 56) + *(void *)(v73 + 72) * v50, v66, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
      uint64_t v54 = 0;
    }
    else
    {
      uint64_t v54 = 1;
    }
  }
  else
  {
    uint64_t v54 = 1;
    uint64_t v51 = (uint64_t)v65;
    uint64_t v52 = v66;
  }
  uint64_t v55 = v68;
  v74(v52, v54, 1, v68);
  uint64_t v56 = v75;
  sub_1ACB74990(v77, v75, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v62)(v56, 0, 1, v40);
  sub_1ACA3AAD4(v52, v51, &qword_1E99F1EC8);
  if (v63((char *)v51, 1, v55) == 1)
  {
    sub_1ACA50E78(v51, &qword_1E99F1EC8);
    char v57 = 2;
  }
  else
  {
    char v57 = *(unsigned char *)(v51 + *(int *)(v55 + 20));
    sub_1ACB749F8(v51, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
  }
  uint64_t v58 = v72;
  uint64_t v59 = v67;
  sub_1ACA50E14(v75, v67, (uint64_t *)&unk_1EB772D70);
  *(unsigned char *)(v59 + *(int *)(v55 + 20)) = v57;
  char v45 = 1;
  v74(v59, 0, 1, v55);
  sub_1ACC51108(v59, v58);
  uint64_t result = sub_1ACA50E78(v52, &qword_1E99F1EC8);
LABEL_26:
  *uint64_t v71 = v45;
  return result;
}

uint64_t ThinClientStateRepository.registerInFlightStateChangeRequest(for:to:requestID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3[2];
  uint64_t v6 = *v3;
  void v8[2] = *(void *)(*v3 + 80);
  v8[3] = *(void *)(v6 + 88);
  v8[4] = a1;
  v8[5] = a2;
  v8[6] = a3;
  type metadata accessor for ThinClientStateCache();
  swift_retain();
  sub_1ACC723D4(sub_1ACB7464C, (uint64_t)v8, v5);
  swift_release();
  v8[8] = a1;
  return sub_1ACE75898();
}

void sub_1ACB70C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    uint64_t v8 = type metadata accessor for ThinClientStateCache();
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v4; ++i)
    {
      uint64_t v10 = *(void *)(a2 + 8 * i + 32);
      sub_1ACD5C3A8(v10, a3, a4, v8);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACB70D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0D30);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v3 + 16);
  if (*(void *)(v12 + 16) && (uint64_t v13 = sub_1ACA65CC4(a1), (v14 & 1) != 0))
  {
    unint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v15 = MEMORY[0x1E4FBC860];
  }
  uint64_t v16 = (uint64_t)&v11[*(int *)(v8 + 48)];
  uint64_t v17 = sub_1ACE75118();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v11, a3, v17);
  sub_1ACB74990(a2, v16, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v15 = sub_1ACA43104(0, *(void *)(v15 + 16) + 1, 1, v15);
  }
  unint64_t v19 = *(void *)(v15 + 16);
  unint64_t v18 = *(void *)(v15 + 24);
  if (v19 >= v18 >> 1) {
    unint64_t v15 = sub_1ACA43104(v18 > 1, v19 + 1, 1, v15);
  }
  *(void *)(v15 + 16) = v19 + 1;
  sub_1ACA50E14((uint64_t)v11, v15+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v19, &qword_1E99F0D30);
  unint64_t v43 = v15;
  if (qword_1E99EFEE8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1ACE754C8();
  __swift_project_value_buffer(v20, (uint64_t)qword_1E99F2BF8);
  uint64_t v21 = sub_1ACE75498();
  os_log_type_t v22 = sub_1ACE76BD8();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v40 = a1;
    v42[0] = v39;
    *(_DWORD *)uint64_t v23 = 136315650;
    sub_1ACA55E4C();
    uint64_t v38 = v8;
    uint64_t v24 = a1;
    uint64_t v25 = sub_1ACE770B8();
    uint64_t v40 = sub_1ACA3189C(v25, v26, v42);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    uint64_t v40 = a1;
    uint64_t v27 = sub_1ACE770B8();
    uint64_t v40 = sub_1ACA3189C(v27, v28, v42);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 22) = 2080;
    swift_beginAccess();
    uint64_t v29 = swift_bridgeObjectRetain();
    uint64_t v30 = MEMORY[0x1AD118740](v29, v38);
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    uint64_t v33 = v30;
    a1 = v24;
    uint64_t v41 = sub_1ACA3189C(v33, v32, v42);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v21, v22, "[StateCache] %s appended in-flight update for adamID %s, new queue: %s", (uint8_t *)v23, 0x20u);
    uint64_t v34 = v39;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v34, -1, -1);
    MEMORY[0x1AD11B340](v23, -1, -1);
  }

  swift_beginAccess();
  uint64_t v35 = v43;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v41 = *(void *)(v4 + 16);
  *(void *)(v4 + 16) = 0x8000000000000000;
  sub_1ACD0DBC4(v35, a1, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + 16) = v41;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ThinClientStateRepository.didSucceedInFlightRequest(for:requestID:domain:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5 = *v3;
  char v6 = *a3;
  uint64_t v7 = v3[2];
  void v9[2] = *(void *)(*v3 + 80);
  void v9[3] = *(void *)(v5 + 88);
  v9[4] = a1;
  v9[5] = a2;
  type metadata accessor for ThinClientStateCache();
  swift_retain();
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACB74670, (uint64_t)v9, v7);
  swift_release();
  char v10 = v6;
  uint64_t v11 = a1;
  swift_bridgeObjectRetain();
  sub_1ACE75898();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACB71284(uint64_t a1, uint64_t a2, void (**a3)(char *, void), void (**a4)(char *, void), void (**a5)(char *, void))
{
  uint64_t v54 = a3;
  uint64_t v55 = a5;
  uint64_t v9 = sub_1ACE76FD8();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v49 = (char *)&v41 - v10;
  sub_1ACE75118();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  char v48 = (char *)&v41 - v14;
  uint64_t v15 = (uint64_t)*(a4 - 1);
  uint64_t result = MEMORY[0x1F4188790](v13);
  char v53 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a2 + 16);
  if (v19)
  {
    uint64_t v57 = v5;
    uint64_t v46 = v17;
    uint64_t v47 = a1;
    uint64_t v20 = (void *)(a1 + 16);
    uint64_t v21 = sub_1ACE76688();
    unint64_t v22 = sub_1ACA798F8();
    uint64_t v44 = (void (**)(char *, uint64_t))(v12 + 8);
    char v45 = (void (**)(char *, char *, void (**)(char *, void)))(v15 + 16);
    unint64_t v43 = (void (**)(char *, void, uint64_t, void (**)(char *, void)))(v15 + 56);
    uint64_t v41 = (void (**)(char *, void))(v15 + 8);
    uint64_t v23 = v21;
    uint64_t v24 = v20;
    swift_bridgeObjectRetain();
    uint64_t v25 = 0;
    uint64_t v50 = v24;
    uint64_t v51 = a2;
    uint64_t v42 = v19;
    unint64_t v52 = v22;
    uint64_t v58 = v21;
    while (1)
    {
      uint64_t v26 = *v24;
      uint64_t v56 = *(void *)(a2 + 8 * v25 + 32);
      uint64_t v62 = v56;
      uint64_t v27 = MEMORY[0x1AD118260](&v59, &v62, v26, &type metadata for AdamID, v23, v22);
      if (v59)
      {
        uint64_t v62 = v59;
        uint64_t v61 = v59;
        MEMORY[0x1F4188790](v27);
        unint64_t v28 = v55;
        *(&v41 - 4) = a4;
        *(&v41 - 3) = v28;
        *(&v41 - 2) = v54;
        swift_bridgeObjectRetain_n();
        swift_getWitnessTable();
        uint64_t v29 = v57;
        uint64_t v23 = v58;
        sub_1ACE76AB8();
        uint64_t v57 = v29;
        swift_bridgeObjectRelease();
        if (v60)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v24 = v50;
          a2 = v51;
          unint64_t v22 = v52;
        }
        else
        {
          uint64_t v30 = v59;
          unint64_t v31 = a4;
          unint64_t v32 = v53;
          uint64_t v33 = v48;
          uint64_t v34 = v46;
          sub_1ACE766B8();
          uint64_t v35 = *v45;
          (*v45)(v32, &v33[*(int *)(v34 + 48)], v31);
          BOOL v36 = v33;
          uint64_t v37 = v32;
          a4 = v31;
          (*v44)(v36, v34);
          uint64_t v38 = v49;
          v35(v49, v37, v31);
          (*v43)(v38, 0, 1, v31);
          uint64_t v39 = v56;
          uint64_t v59 = v56;
          unint64_t v22 = v52;
          sub_1ACE76088();
          sub_1ACE760B8();
          uint64_t result = swift_bridgeObjectRelease();
          if (v30 < 0)
          {
            __break(1u);
            return result;
          }
          uint64_t v59 = 0;
          uint64_t v60 = v30;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F10A0);
          uint64_t v40 = v58;
          swift_getWitnessTable();
          sub_1ACA51EA4(&qword_1E99F10A8, &qword_1E99F10A0);
          uint64_t v23 = v40;
          sub_1ACE76B18();
          uint64_t v59 = v62;
          uint64_t v61 = v39;
          sub_1ACE76088();
          uint64_t v24 = v50;
          sub_1ACE760B8();
          (*v41)(v53, a4);
          a2 = v51;
          uint64_t v19 = v42;
        }
      }
      if (v19 == ++v25) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t ThinClientStateRepository.didFailInFlightRequest(for:requestID:domain:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = v2[2];
  v6[2] = *(void *)(*v2 + 80);
  v6[3] = *(void *)(v3 + 88);
  v6[4] = a1;
  v6[5] = a2;
  type metadata accessor for ThinClientStateCache();
  swift_retain();
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACB74690, (uint64_t)v6, v4);
  return swift_release();
}

uint64_t sub_1ACB7184C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v30 = a3;
  uint64_t v31 = a5;
  uint64_t v8 = sub_1ACE75118();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t result = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v25 = (char *)v22 - v12;
  uint64_t v32 = *(void *)(a2 + 16);
  if (v32)
  {
    uint64_t v13 = (void *)(a1 + 16);
    uint64_t v23 = v11;
    uint64_t v14 = sub_1ACE76688();
    unint64_t v15 = sub_1ACA798F8();
    uint64_t v29 = a4;
    uint64_t v24 = v8;
    v22[1] = v8 - 8;
    v22[2] = a4 - 8;
    swift_bridgeObjectRetain();
    uint64_t v16 = 0;
    uint64_t v27 = v13;
    uint64_t v28 = a2;
    unint64_t v26 = v15;
    do
    {
      uint64_t v17 = *(void *)(a2 + 8 * v16 + 32);
      uint64_t v18 = *v13;
      uint64_t v36 = v17;
      MEMORY[0x1AD118260](&v34, &v36, v18, &type metadata for AdamID, v14, v15);
      if (v34)
      {
        uint64_t v36 = v34;
        uint64_t v33 = v34;
        MEMORY[0x1F4188790](v34);
        uint64_t v19 = v29;
        uint64_t v20 = v31;
        v22[-4] = v29;
        v22[-3] = v20;
        v22[-2] = v30;
        swift_bridgeObjectRetain();
        swift_getWitnessTable();
        sub_1ACE76AB8();
        swift_bridgeObjectRelease();
        if (v35)
        {
          swift_bridgeObjectRelease();
          uint64_t v13 = v27;
          a2 = v28;
          unint64_t v15 = v26;
        }
        else
        {
          uint64_t v21 = v25;
          sub_1ACE76658();
          (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(&v21[*(int *)(v23 + 48)], v19);
          (*(void (**)(char *))(*(void *)(v24 - 8) + 8))(v21);
          uint64_t v33 = v17;
          uint64_t v34 = v36;
          unint64_t v15 = v26;
          sub_1ACE76088();
          uint64_t v13 = v27;
          sub_1ACE760B8();
          a2 = v28;
        }
      }
      ++v16;
    }
    while (v32 != v16);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ThinClientStateRepository<>.registerInFlightBookmarkStateChangeRequest(for:to:requestID:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 40));
  sub_1ACB746B0((uint64_t *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 40));
  swift_release();
  return sub_1ACE75898();
}

uint64_t sub_1ACB71BC8(uint64_t *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v36 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1EC8);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  unint64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v35 = (uint64_t)v29 - v16;
  uint64_t v17 = a2;
  uint64_t v18 = type metadata accessor for ThinClientEpisodeStateModel();
  uint64_t result = MEMORY[0x1F4188790](v18);
  unint64_t v22 = (char *)v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = *(void *)(a2 + 16);
  if (v34)
  {
    v29[1] = v5;
    uint64_t v30 = v11;
    int v33 = a3 & 1;
    uint64_t v31 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    uint64_t v23 = 0;
    uint64_t v32 = v17;
    do
    {
      uint64_t v26 = *(void *)(v17 + 8 * v23 + 32);
      uint64_t v27 = v18;
      uint64_t v28 = v35;
      sub_1ACBA9470(v26, *a1, a1[1], a1[2], v35);
      sub_1ACA50E14(v28, (uint64_t)v15, &qword_1E99F1EC8);
      if ((*v31)(v15, 1, v27) == 1)
      {
        sub_1ACA50E78((uint64_t)v15, &qword_1E99F1EC8);
        uint64_t v24 = type metadata accessor for EpisodePlayState();
        uint64_t v25 = (uint64_t)v30;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v30, 1, 1, v24);
      }
      else
      {
        uint64_t v25 = (uint64_t)v30;
        sub_1ACA3AAD4((uint64_t)v15, (uint64_t)v30, (uint64_t *)&unk_1EB772D70);
        sub_1ACB749F8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
      }
      ++v23;
      sub_1ACA50E14(v25, (uint64_t)v22, (uint64_t *)&unk_1EB772D70);
      uint64_t v18 = v27;
      v22[*(int *)(v27 + 20)] = v33;
      sub_1ACB70D1C(v26, (uint64_t)v22, v36);
      sub_1ACB749F8((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
      uint64_t v17 = v32;
    }
    while (v34 != v23);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ThinClientStateRepository<>.registerInFlightPlayStateChangeRequest(for:to:requestID:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 40));
  sub_1ACB746D4((uint64_t *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 40));
  swift_release();
  return sub_1ACE75898();
}

uint64_t sub_1ACB71F78(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a4;
  uint64_t v30 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1EC8);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v29 = (uint64_t)v26 - v14;
  uint64_t v15 = type metadata accessor for ThinClientEpisodeStateModel();
  uint64_t result = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void *)(a2 + 16);
  if (v28)
  {
    v26[1] = v4;
    uint64_t v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    uint64_t v21 = 0;
    uint64_t v27 = a2;
    do
    {
      uint64_t v23 = *(void *)(a2 + 8 * v21 + 32);
      uint64_t v24 = v29;
      sub_1ACBA9470(v23, *a1, a1[1], a1[2], v29);
      sub_1ACB74990(v30, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      uint64_t v25 = type metadata accessor for EpisodePlayState();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 0, 1, v25);
      sub_1ACA50E14(v24, (uint64_t)v13, &qword_1E99F1EC8);
      if ((*v20)(v13, 1, v15) == 1)
      {
        sub_1ACA50E78((uint64_t)v13, &qword_1E99F1EC8);
        char v22 = 2;
      }
      else
      {
        char v22 = v13[*(int *)(v15 + 20)];
        sub_1ACB749F8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
      }
      ++v21;
      sub_1ACA50E14((uint64_t)v9, (uint64_t)v19, (uint64_t *)&unk_1EB772D70);
      v19[*(int *)(v15 + 20)] = v22;
      sub_1ACB70D1C(v23, (uint64_t)v19, v31);
      sub_1ACB749F8((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
      a2 = v27;
    }
    while (v28 != v21);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ThinClientStateRepository<>.requestEpisodeStatesIfNeeded(for:)(uint64_t result)
{
  if (*(void *)(result + 16))
  {
    uint64_t v2 = (void *)v1;
    uint64_t v3 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock(v3 + 10);
    sub_1ACB74EA8((uint64_t)&v3[4], &v18);
    os_unfair_lock_unlock(v3 + 10);
    uint64_t v4 = v18;
    swift_release();
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1ACE754C8();
    __swift_project_value_buffer(v5, (uint64_t)qword_1E99F2BF8);
    swift_bridgeObjectRetain_n();
    char v6 = sub_1ACE75498();
    os_log_type_t v7 = sub_1ACE76BD8();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v18 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      sub_1ACA798F8();
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1ACE76998();
      unint64_t v12 = v11;
      swift_bridgeObjectRelease();
      sub_1ACA3189C(v10, v12, &v18);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v6, v7, "Requesting state for missing adamIDs %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v9, -1, -1);
      MEMORY[0x1AD11B340](v8, -1, -1);

      if (*(void *)(v4 + 16))
      {
LABEL_6:
        uint64_t v13 = v2[8];
        uint64_t v14 = v2[9];
        __swift_project_boxed_opaque_existential_1(v2 + 5, v13);
        uint64_t v15 = swift_allocObject();
        swift_weakInit();
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v15;
        *(void *)(v16 + 24) = v4;
        uint64_t v17 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v14 + 8);
        swift_bridgeObjectRetain();
        swift_retain();
        v17(v4, sub_1ACB74730, v16, v13, v14);
        swift_bridgeObjectRelease();
        swift_release();
        return swift_release();
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      if (*(void *)(v4 + 16)) {
        goto LABEL_6;
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACB7259C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(os_unfair_lock_s **)(result + 16);
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock(v1 + 10);
    sub_1ACB748AC((uint64_t)&v1[4], &v3);
    os_unfair_lock_unlock(v1 + 10);
    uint64_t v2 = v3;
    swift_release();
    uint64_t v3 = v2;
    sub_1ACE75898();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t ThinClientStateRepository<>.requestPodcastStatesIfNeeded(for:)(uint64_t result)
{
  if (*(void *)(result + 16))
  {
    uint64_t v2 = (void *)v1;
    uint64_t v3 = *(os_unfair_lock_s **)(v1 + 16);
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock(v3 + 10);
    sub_1ACB74738((uint64_t)&v3[4], &v18);
    os_unfair_lock_unlock(v3 + 10);
    uint64_t v4 = v18;
    swift_release();
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1ACE754C8();
    __swift_project_value_buffer(v5, (uint64_t)qword_1E99F2BF8);
    swift_bridgeObjectRetain_n();
    char v6 = sub_1ACE75498();
    os_log_type_t v7 = sub_1ACE76BD8();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v18 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      sub_1ACA798F8();
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1ACE76998();
      unint64_t v12 = v11;
      swift_bridgeObjectRelease();
      sub_1ACA3189C(v10, v12, &v18);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v6, v7, "Requesting state for missing adamIDs %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v9, -1, -1);
      MEMORY[0x1AD11B340](v8, -1, -1);

      if (*(void *)(v4 + 16))
      {
LABEL_6:
        uint64_t v13 = v2[8];
        uint64_t v14 = v2[9];
        __swift_project_boxed_opaque_existential_1(v2 + 5, v13);
        uint64_t v15 = swift_allocObject();
        swift_weakInit();
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v15;
        *(void *)(v16 + 24) = v4;
        uint64_t v17 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v14 + 16);
        swift_bridgeObjectRetain();
        swift_retain();
        v17(v4, sub_1ACB74758, v16, v13, v14);
        swift_bridgeObjectRelease();
        swift_release();
        return swift_release();
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      if (*(void *)(v4 + 16)) {
        goto LABEL_6;
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACB729B8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(os_unfair_lock_s **)(result + 16);
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock(v1 + 10);
    sub_1ACB74870((uint64_t)&v1[4], &v3);
    os_unfair_lock_unlock(v1 + 10);
    uint64_t v2 = v3;
    swift_release();
    uint64_t v3 = v2;
    sub_1ACE75898();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACB72AB8(uint64_t *a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v5 = v4;
  sub_1ACB73840(a2);
  if (a4)
  {
    sub_1ACB7489C(a3);
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1ACE754C8();
    __swift_project_value_buffer(v16, (uint64_t)qword_1E99F2BF8);
    sub_1ACB74920(a3, 1);
    swift_bridgeObjectRetain();
    sub_1ACB74920(a3, 1);
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1ACE75498();
    os_log_type_t v18 = sub_1ACE76BE8();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v39 = v37;
      *(_DWORD *)uint64_t v19 = 136315394;
      sub_1ACA798F8();
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1ACE76998();
      unint64_t v23 = v22;
      swift_bridgeObjectRelease();
      sub_1ACA3189C(v21, v23, &v39);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2112;
      sub_1ACB08420();
      swift_allocError();
      void *v24 = a3;
      sub_1ACB7489C(a3);
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
      sub_1ACE76FF8();
      void *v20 = v38;
      sub_1ACB74914(a3, 1);
      sub_1ACB74914(a3, 1);
      _os_log_impl(&dword_1AC9D5000, v17, v18, "Error fetching state for adamIDs %s: %@", (uint8_t *)v19, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v20, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v37, -1, -1);
      MEMORY[0x1AD11B340](v19, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_1ACB74914(a3, 1);
      sub_1ACB74914(a3, 1);
    }

    sub_1ACB74914(a3, 1);
    return MEMORY[0x1E4FBC860];
  }
  if (!a3[2])
  {
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1ACE754C8();
    __swift_project_value_buffer(v26, (uint64_t)qword_1E99F2BF8);
    swift_bridgeObjectRetain_n();
    uint64_t v27 = sub_1ACE75498();
    os_log_type_t v28 = sub_1ACE76BE8();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v39 = v30;
      *(_DWORD *)uint64_t v29 = 136315138;
      sub_1ACA798F8();
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1ACE76998();
      unint64_t v33 = v32;
      swift_bridgeObjectRelease();
      sub_1ACA3189C(v31, v33, &v39);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v27, v28, "No state found for adamIDs %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v30, -1, -1);
      MEMORY[0x1AD11B340](v29, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return MEMORY[0x1E4FBC860];
  }
  if (qword_1E99EFEE8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1ACE754C8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1E99F2BF8);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1ACE75498();
  os_log_type_t v11 = sub_1ACE76BD8();
  if (os_log_type_enabled(v10, v11))
  {
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v39 = v13;
    *(_DWORD *)unint64_t v12 = 136315138;
    type metadata accessor for ThinClientEpisodeStateModel();
    sub_1ACA798F8();
    uint64_t v14 = sub_1ACE76008();
    sub_1ACA3189C(v14, v15, &v39);
    uint64_t v5 = v4;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACB74914(a3, 0);
    _os_log_impl(&dword_1AC9D5000, v10, v11, "Consolidating new state into local cache: %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v13, -1, -1);
    MEMORY[0x1AD11B340](v12, -1, -1);
  }
  else
  {
    sub_1ACB74914(a3, 0);
  }

  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v39 = *a1;
  *a1 = 0x8000000000000000;
  sub_1ACB73AD4((uint64_t)a3, (uint64_t)sub_1ACB73A5C, 0, isUniquelyReferenced_nonNull_native, &v39);
  if (!v5)
  {
    *a1 = v39;
    swift_bridgeObjectRelease();
    uint64_t v35 = swift_bridgeObjectRetain();
    uint64_t v25 = sub_1ACD0AB60(v35);
    sub_1ACB74914(a3, 0);
    return (uint64_t)v25;
  }
  *a1 = v39;
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1ACB73180(uint64_t *a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v5 = v4;
  sub_1ACB73840(a2);
  if (a4)
  {
    sub_1ACB7489C(a3);
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1ACE754C8();
    __swift_project_value_buffer(v16, (uint64_t)qword_1E99F2BF8);
    sub_1ACB74920(a3, 1);
    swift_bridgeObjectRetain();
    sub_1ACB74920(a3, 1);
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1ACE75498();
    os_log_type_t v18 = sub_1ACE76BE8();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v39 = v37;
      *(_DWORD *)uint64_t v19 = 136315394;
      sub_1ACA798F8();
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1ACE76998();
      unint64_t v23 = v22;
      swift_bridgeObjectRelease();
      sub_1ACA3189C(v21, v23, &v39);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2112;
      sub_1ACB08420();
      swift_allocError();
      void *v24 = a3;
      sub_1ACB7489C(a3);
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
      sub_1ACE76FF8();
      void *v20 = v38;
      sub_1ACB74914(a3, 1);
      sub_1ACB74914(a3, 1);
      _os_log_impl(&dword_1AC9D5000, v17, v18, "Error fetching state for adamIDs %s: %@", (uint8_t *)v19, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v20, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v37, -1, -1);
      MEMORY[0x1AD11B340](v19, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_1ACB74914(a3, 1);
      sub_1ACB74914(a3, 1);
    }

    sub_1ACB74914(a3, 1);
    return MEMORY[0x1E4FBC860];
  }
  if (!a3[2])
  {
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1ACE754C8();
    __swift_project_value_buffer(v26, (uint64_t)qword_1E99F2BF8);
    swift_bridgeObjectRetain_n();
    uint64_t v27 = sub_1ACE75498();
    os_log_type_t v28 = sub_1ACE76BE8();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v39 = v30;
      *(_DWORD *)uint64_t v29 = 136315138;
      sub_1ACA798F8();
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1ACE76998();
      unint64_t v33 = v32;
      swift_bridgeObjectRelease();
      sub_1ACA3189C(v31, v33, &v39);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v27, v28, "No state found for adamIDs %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v30, -1, -1);
      MEMORY[0x1AD11B340](v29, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return MEMORY[0x1E4FBC860];
  }
  if (qword_1E99EFEE8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1ACE754C8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1E99F2BF8);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1ACE75498();
  os_log_type_t v11 = sub_1ACE76BD8();
  if (os_log_type_enabled(v10, v11))
  {
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v39 = v13;
    *(_DWORD *)unint64_t v12 = 136315138;
    sub_1ACA798F8();
    uint64_t v14 = sub_1ACE76008();
    sub_1ACA3189C(v14, v15, &v39);
    uint64_t v5 = v4;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACB74914(a3, 0);
    _os_log_impl(&dword_1AC9D5000, v10, v11, "Consolidating new state into local cache: %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v13, -1, -1);
    MEMORY[0x1AD11B340](v12, -1, -1);
  }
  else
  {
    sub_1ACB74914(a3, 0);
  }

  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v39 = *a1;
  *a1 = 0x8000000000000000;
  sub_1ACB73E94((uint64_t)a3, (uint64_t)sub_1ACB74540, 0, isUniquelyReferenced_nonNull_native, &v39);
  if (!v5)
  {
    *a1 = v39;
    swift_bridgeObjectRelease();
    uint64_t v35 = swift_bridgeObjectRetain();
    uint64_t v25 = sub_1ACD0AB60(v35);
    sub_1ACB74914(a3, 0);
    return (uint64_t)v25;
  }
  *a1 = v39;
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

void sub_1ACB73840(uint64_t a1)
{
  sub_1ACC41530(a1);
  if (qword_1E99EFEE8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1ACE754C8();
  __swift_project_value_buffer(v1, (uint64_t)qword_1E99F2BF8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1ACE75498();
  os_log_type_t v3 = sub_1ACE76BD8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v9 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_1ACA798F8();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1ACE76998();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    sub_1ACA3189C(v6, v8, &v9);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v2, v3, "[StateCache] Removed in-flight requests for adamIDs: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v5, -1, -1);
    MEMORY[0x1AD11B340](v4, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1ACB73A24@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACBA9470(*(void *)(v2 + 16), *a1, a1[1], a1[2], a2);
}

uint64_t sub_1ACB73A5C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (uint64_t)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E30) + 48);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E40);
  uint64_t v6 = *a1;
  uint64_t result = sub_1ACB74990(v4, (uint64_t)a2 + *(int *)(v5 + 48), (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
  *a2 = v6;
  return result;
}

uint64_t sub_1ACB73AD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10 = type metadata accessor for ThinClientEpisodeStateModel();
  uint64_t v42 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)v41 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2858);
  MEMORY[0x1F4188790](v16 - 8);
  os_log_type_t v18 = (void *)((char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = ~v19;
  uint64_t v21 = *(void *)(a1 + 64);
  uint64_t v22 = -v19;
  v41[3] = a1;
  v41[4] = a1 + 64;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  else {
    uint64_t v23 = -1;
  }
  void v41[5] = v20;
  v41[6] = 0;
  v41[7] = v23 & v21;
  v41[8] = a2;
  v41[9] = a3;
  v41[1] = a1;
  swift_bridgeObjectRetain();
  v41[0] = a3;
  swift_retain();
  sub_1ACA4FE14((uint64_t)v18);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E40);
  for (int i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v18, 1, v24);
        ;
        int i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v18, 1, v24))
  {
    if (i == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_1ACA50A70();
      return swift_release();
    }
    uint64_t v26 = *v18;
    sub_1ACB74A58((uint64_t)v18 + *(int *)(v24 + 48), (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
    uint64_t v27 = *a5;
    unint64_t v29 = sub_1ACA65CC4(v26);
    uint64_t v30 = *(void *)(v27 + 16);
    BOOL v31 = (v28 & 1) == 0;
    uint64_t v32 = v30 + v31;
    if (__OFADD__(v30, v31)) {
      break;
    }
    char v33 = v28;
    if (*(void *)(v27 + 24) >= v32)
    {
      if (a4)
      {
        if (v28) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_1ACD07DB8();
        if (v33) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_1ACCFFC30(v32, a4 & 1);
      uint64_t v34 = sub_1ACA65CC4(v26);
      if ((v33 & 1) != (v35 & 1)) {
        goto LABEL_22;
      }
      unint64_t v29 = v34;
      if (v33)
      {
LABEL_5:
        sub_1ACB74990((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
        sub_1ACB749F8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
        sub_1ACB7492C((uint64_t)v13, *(void *)(*a5 + 56) + *(void *)(v42 + 72) * v29);
        goto LABEL_6;
      }
    }
    uint64_t v36 = (void *)*a5;
    *(void *)(*a5 + 8 * (v29 >> 6) + 64) |= 1 << v29;
    *(void *)(v36[6] + 8 * v29) = v26;
    sub_1ACB74A58((uint64_t)v15, v36[7] + *(void *)(v42 + 72) * v29, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
    uint64_t v37 = v36[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38) {
      goto LABEL_21;
    }
    uint64_t v36[2] = v39;
LABEL_6:
    sub_1ACA4FE14((uint64_t)v18);
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E40);
    a4 = 1;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACB73E94(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  BOOL v38 = a5;
  uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = ~v6;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = -v6;
  v34[6] = a1;
  v34[7] = a1 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  v34[8] = v7;
  v34[9] = 0;
  v34[10] = v10 & v8;
  v34[11] = a2;
  v34[12] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1ACA50200(v35);
  sub_1ACA50E14((uint64_t)v35, (uint64_t)v34, &qword_1E99F2850);
  sub_1ACA50E14((uint64_t)v35, (uint64_t)v36, &qword_1E99F2850);
  uint64_t v11 = v37;
  while (1)
  {
    if (v11 == 3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_1ACA50A70();
      return swift_release();
    }
    uint64_t v13 = v34[0];
    uint64_t v33 = v34[1];
    uint64_t v15 = v34[2];
    uint64_t v14 = v34[3];
    uint64_t v17 = v34[4];
    uint64_t v16 = v34[5];
    os_log_type_t v18 = (void *)*v38;
    unint64_t v20 = sub_1ACA65CC4(v34[0]);
    uint64_t v21 = v18[2];
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22)) {
      break;
    }
    char v24 = v19;
    if (v18[3] >= v23)
    {
      if ((a4 & 1) == 0) {
        sub_1ACD05D40();
      }
    }
    else
    {
      sub_1ACCFC5A0(v23, a4 & 1);
      uint64_t v25 = sub_1ACA65CC4(v13);
      if ((v24 & 1) != (v26 & 1)) {
        goto LABEL_20;
      }
      unint64_t v20 = v25;
    }
    uint64_t v27 = (void *)*v38;
    if (v24)
    {
      uint64_t v12 = (uint64_t *)(v27[7] + 40 * v20);
      sub_1ACA50D9C(*v12, v12[1], v12[2]);
      *uint64_t v12 = v33;
      v12[1] = v15;
      v12[2] = v14;
      v12[3] = v17;
      v12[4] = v16;
    }
    else
    {
      v27[(v20 >> 6) + 8] |= 1 << v20;
      *(void *)(v27[6] + 8 * v20) = v13;
      char v28 = (uint64_t *)(v27[7] + 40 * v20);
      uint64_t *v28 = v33;
      v28[1] = v15;
      v28[2] = v14;
      v28[3] = v17;
      v28[4] = v16;
      uint64_t v29 = v27[2];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30) {
        goto LABEL_19;
      }
      v27[2] = v31;
    }
    sub_1ACA50200(v35);
    sub_1ACA50E14((uint64_t)v35, (uint64_t)v34, &qword_1E99F2850);
    sub_1ACA50E14((uint64_t)v35, (uint64_t)v36, &qword_1E99F2850);
    uint64_t v11 = v37;
    a4 = 1;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACB74110(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = sub_1ACB74288((uint64_t)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4, a2);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v8 = sub_1ACB74288((uint64_t)v9, v6, v4, a2);
    swift_release();
    MEMORY[0x1AD11B340](v9, -1, -1);
  }
  return v8;
}

uint64_t sub_1ACB74288(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = 0;
  int64_t v7 = 0;
  char v24 = (unint64_t *)result;
  uint64_t v25 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v26 = (unint64_t)(v8 + 63) >> 6;
LABEL_6:
  while (v10)
  {
    unint64_t v12 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v13 = v12 | (v7 << 6);
LABEL_22:
    uint64_t v17 = *(void *)(a4 + 8);
    if (*(void *)(v17 + 16)
      && (uint64_t v18 = *(void *)(*(void *)(a3 + 48) + 8 * v13),
          sub_1ACE77B18(),
          sub_1ACE77B58(),
          uint64_t result = sub_1ACE77B78(),
          uint64_t v19 = -1 << *(unsigned char *)(v17 + 32),
          unint64_t v20 = result & ~v19,
          ((*(void *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) != 0))
    {
      uint64_t v21 = *(void *)(v17 + 48);
      if (*(void *)(v21 + 8 * v20) != v18)
      {
        uint64_t v22 = ~v19;
        while (1)
        {
          unint64_t v20 = (v20 + 1) & v22;
          if (((*(void *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
            goto LABEL_5;
          }
          if (*(void *)(v21 + 8 * v20) == v18) {
            goto LABEL_6;
          }
        }
      }
    }
    else
    {
LABEL_5:
      *(unint64_t *)((char *)v24 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v6++, 1)) {
        goto LABEL_31;
      }
    }
  }
  int64_t v14 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v14 >= v26) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v14);
    ++v7;
    if (!v15)
    {
      int64_t v7 = v14 + 1;
      if (v14 + 1 >= v26) {
        goto LABEL_29;
      }
      unint64_t v15 = *(void *)(v25 + 8 * v7);
      if (!v15)
      {
        int64_t v7 = v14 + 2;
        if (v14 + 2 >= v26) {
          goto LABEL_29;
        }
        unint64_t v15 = *(void *)(v25 + 8 * v7);
        if (!v15)
        {
          int64_t v16 = v14 + 3;
          if (v16 >= v26)
          {
LABEL_29:
            swift_retain();
            return sub_1ACB86970(v24, a2, v6, a3);
          }
          unint64_t v15 = *(void *)(v25 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              int64_t v7 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_32;
              }
              if (v7 >= v26) {
                goto LABEL_29;
              }
              unint64_t v15 = *(void *)(v25 + 8 * v7);
              ++v16;
              if (v15) {
                goto LABEL_21;
              }
            }
          }
          int64_t v7 = v16;
        }
      }
    }
LABEL_21:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v7 << 6);
    goto LABEL_22;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1ACB744E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1ACB74110(a2, a1);
  uint64_t v7 = swift_retain();
  uint64_t result = sub_1ACDEA168(v7);
  *a3 = v6;
  return result;
}

uint64_t sub_1ACB74540@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  unint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  a2[4] = v5;
  a2[5] = v6;
  return sub_1ACA50D88(v2, v3, v4);
}

uint64_t sub_1ACB74560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACD5BA1C(*(void *)(v2 + 32), *(void *)a1, *(char **)(a1 + 8), *(void *)(a1 + 16), *(void *)(v2 + 16), a2);
}

uint64_t sub_1ACB7459C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACB6D1F8(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_1ACB745BC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1ACB6D834(a1, v2[4], v2[2], v2[3], a2);
}

uint64_t sub_1ACB745DC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1ACB6E610(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1ACB745F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1ACB6F570(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1ACB74614@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1ACB6F7F8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1ACB74630@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_1ACB703AC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

void sub_1ACB7464C(uint64_t a1)
{
  sub_1ACB70C7C(a1, v1[4], v1[5], v1[6]);
}

uint64_t sub_1ACB74670(uint64_t a1)
{
  return sub_1ACB71284(a1, *(void *)(v1 + 32), *(void (***)(char *, void))(v1 + 40), *(void (***)(char *, void))(v1 + 16), *(void (***)(char *, void))(v1 + 24));
}

uint64_t sub_1ACB74690(uint64_t a1)
{
  return sub_1ACB7184C(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_1ACB746B0(uint64_t *a1)
{
  return sub_1ACB71BC8(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1ACB746D4(uint64_t *a1)
{
  return sub_1ACB71F78(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1ACB746F4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACB74730()
{
  return sub_1ACB7259C();
}

uint64_t sub_1ACB74738@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACB744E0(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1ACB74758()
{
  return sub_1ACB729B8();
}

uint64_t sub_1ACB74760()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ThinClientStateRepository()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for ThinClientStateRepository(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ThinClientStateRepository);
}

uint64_t dispatch thunk of ThinClientStateRepository.__allocating_init(thinClientStateNetworking:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1ACB747F8()
{
  return sub_1ACA51EA4((unint64_t *)&qword_1E99F1088, &qword_1E99F0FF8);
}

uint64_t sub_1ACB74834()
{
  return sub_1ACA51EA4(&qword_1E99F2848, qword_1E99F27C0);
}

uint64_t sub_1ACB74870@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACB748D8(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1ACB73180, a2);
}

id sub_1ACB7489C(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

uint64_t sub_1ACB748AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACB748D8(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1ACB72AB8, a2);
}

uint64_t sub_1ACB748D8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void, void, void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(a1, *(void *)(v3 + 16), *(void *)(v3 + 24), *(unsigned __int8 *)(v3 + 32));
  if (!v4) {
    *a3 = result;
  }
  return result;
}

void sub_1ACB74914(id a1, char a2)
{
  if (a2) {
    sub_1ACAC8D64(a1);
  }
  else {
    swift_bridgeObjectRelease();
  }
}

id sub_1ACB74920(id result, char a2)
{
  if (a2) {
    return sub_1ACB7489C(result);
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_1ACB7492C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ThinClientEpisodeStateModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACB74990(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACB749F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1ACB74A58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL sub_1ACB74AC0(uint64_t a1, void *a2)
{
  return sub_1ACB6F664(a1, a2, *(uint64_t **)(v2 + 16));
}

unint64_t *sub_1ACB74AC8(unint64_t *result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void *))
{
  unint64_t v20 = result;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v11) {
      return (unint64_t *)sub_1ACB49550(v20, a2, v22, a3);
    }
    unint64_t v16 = *(void *)(v7 + 8 * v15);
    ++v6;
    if (!v16)
    {
      int64_t v6 = v15 + 1;
      if (v15 + 1 >= v11) {
        return (unint64_t *)sub_1ACB49550(v20, a2, v22, a3);
      }
      unint64_t v16 = *(void *)(v7 + 8 * v6);
      if (!v16)
      {
        int64_t v6 = v15 + 2;
        if (v15 + 2 >= v11) {
          return (unint64_t *)sub_1ACB49550(v20, a2, v22, a3);
        }
        unint64_t v16 = *(void *)(v7 + 8 * v6);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v6 << 6);
LABEL_5:
    uint64_t v14 = *(void *)(*(void *)(a3 + 48) + 8 * v13);
    sub_1ACA8F4F4(*(void *)(a3 + 56) + 40 * v13, (uint64_t)v21);
    sub_1ACB74E38(v21, (void (*)(void, void, void, void, void))sub_1ACA50D88);
    LOBYTE(v14) = a4(v14, v21);
    uint64_t result = sub_1ACB74E38(v21, (void (*)(void, void, void, void, void))sub_1ACA50D9C);
    if (v14)
    {
      *(unint64_t *)((char *)v20 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v22++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1ACB49550(v20, a2, v22, a3);
      }
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v11) {
    return (unint64_t *)sub_1ACB49550(v20, a2, v22, a3);
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16)
  {
    int64_t v6 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v6 >= v11) {
      return (unint64_t *)sub_1ACB49550(v20, a2, v22, a3);
    }
    unint64_t v16 = *(void *)(v7 + 8 * v6);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t *sub_1ACB74CC0(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, void *), unint64_t *a3)
{
  uint64_t v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E4F143B8];
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    unint64_t v10 = sub_1ACB74AC8((void *)((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    int64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_1ACB74AC8((unint64_t *)v11, v8, v6, a2);
    MEMORY[0x1AD11B340](v11, -1, -1);
  }
  return a3;
}

void *sub_1ACB74E38(void *a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1ACB74E74(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 != 3) {
    return sub_1ACA50D9C(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1ACB74E84@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1ACB6D34C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1ACB74EA8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACB74738(a1, a2);
}

uint64_t String.key.getter(uint64_t a1)
{
  return a1;
}

id NSString.key.getter()
{
  return v0;
}

id sub_1ACB74EFC@<X0>(void **a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t sub_1ACB74F08(char a1)
{
  uint64_t v2 = *(void **)(v1 + 48);
  uint64_t v3 = v2[6];
  uint64_t v4 = v2[7];
  uint64_t v11 = MEMORY[0x1E4FBB390];
  v10[0] = a1;
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  unint64_t v8 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 16);
  swift_retain();
  v8(v10, v5, v6, v7, v3, v4);
  sub_1ACA65828((uint64_t)v10);
  return swift_release();
}

uint64_t sub_1ACB74FA8(char a1)
{
  uint64_t v2 = *(void **)(v1 + 56);
  uint64_t v3 = v2[6];
  uint64_t v4 = v2[7];
  uint64_t v11 = MEMORY[0x1E4FBB390];
  v10[0] = a1;
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  unint64_t v8 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 16);
  swift_retain();
  v8(v10, v5, v6, v7, v3, v4);
  sub_1ACA65828((uint64_t)v10);
  return swift_release();
}

uint64_t sub_1ACB75048(uint64_t result, uint64_t a2)
{
  if (a2 == 1)
  {
    uint64_t v3 = v2 + 24;
  }
  else
  {
    if (a2) {
      return result;
    }
    uint64_t v3 = v2 + 16;
  }
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(*(void *)v3 + 48);
  uint64_t v6 = *(void *)(*(void *)v3 + 56);
  uint64_t v12 = MEMORY[0x1E4FBB390];
  v11[0] = result & 1;
  uint64_t v7 = v4[5];
  uint64_t v8 = v4[2];
  uint64_t v9 = v4[3];
  unint64_t v10 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  v10(v11, v7, v8, v9, v5, v6);
  sub_1ACA65828((uint64_t)v11);
  return swift_release();
}

uint64_t sub_1ACB75104(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result == 1)
  {
    uint64_t v6 = v3 + 40;
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v6 = v3 + 32;
  }
  uint64_t v7 = *(void **)v6;
  uint64_t v8 = *(void *)(*(void *)v6 + 56);
  uint64_t v9 = *(void *)(*(void *)v6 + 64);
  void v14[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
  v14[0] = a2;
  v14[1] = a3;
  uint64_t v10 = v7[6];
  uint64_t v11 = v7[2];
  uint64_t v12 = v7[3];
  unint64_t v13 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  v13(v14, v10, v11, v12, v8, v9);
  sub_1ACA65828((uint64_t)v14);
  return swift_release();
}

uint64_t sub_1ACB751D8(uint64_t result)
{
  if (result == 1)
  {
    uint64_t v2 = v1 + 40;
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v2 = v1 + 32;
  }
  uint64_t v3 = *(void **)v2;
  uint64_t v4 = *(void *)(*(void *)v2 + 56);
  uint64_t v5 = *(void *)(*(void *)v2 + 64);
  v10[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
  v10[0] = 0;
  v10[1] = 0;
  uint64_t v6 = v3[6];
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  uint64_t v9 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_retain();
  v9(v10, v6, v7, v8, v4, v5);
  sub_1ACA65828((uint64_t)v10);
  return swift_release();
}

uint64_t sub_1ACB75294(uint64_t result, uint64_t a2)
{
  if (a2 == 1)
  {
    uint64_t v3 = v2 + 72;
  }
  else
  {
    if (a2) {
      return result;
    }
    uint64_t v3 = v2 + 64;
  }
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(*(void *)v3 + 48);
  uint64_t v6 = *(void *)(*(void *)v3 + 56);
  uint64_t v12 = MEMORY[0x1E4FBB390];
  v11[0] = result & 1;
  uint64_t v7 = v4[5];
  uint64_t v8 = v4[2];
  uint64_t v9 = v4[3];
  uint64_t v10 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  v10(v11, v7, v8, v9, v5, v6);
  sub_1ACA65828((uint64_t)v11);
  return swift_release();
}

uint64_t sub_1ACB75354(uint64_t a1, char a2)
{
  uint64_t v5 = *(void **)(v2 + 80);
  uint64_t v6 = v5[7];
  uint64_t v7 = v5[8];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E0B0);
  uint64_t v13 = a1;
  char v14 = a2 & 1;
  uint64_t v8 = v5[6];
  uint64_t v9 = v5[2];
  uint64_t v10 = v5[3];
  uint64_t v11 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_retain();
  v11(&v13, v8, v9, v10, v6, v7);
  sub_1ACA65828((uint64_t)&v13);
  return swift_release();
}

uint64_t sub_1ACB75408(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void **)(v2 + 88);
  uint64_t v6 = v5[7];
  uint64_t v7 = v5[8];
  unint64_t v13[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v8 = v5[6];
  uint64_t v9 = v5[2];
  uint64_t v10 = v5[3];
  uint64_t v11 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  v11(v13, v8, v9, v10, v6, v7);
  swift_bridgeObjectRelease();
  sub_1ACA65828((uint64_t)v13);
  return swift_release();
}

uint64_t sub_1ACB754CC(uint64_t a1, char a2)
{
  uint64_t v5 = *(void **)(v2 + 96);
  uint64_t v6 = v5[7];
  uint64_t v7 = v5[8];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E0B0);
  uint64_t v13 = a1;
  char v14 = a2 & 1;
  uint64_t v8 = v5[6];
  uint64_t v9 = v5[2];
  uint64_t v10 = v5[3];
  uint64_t v11 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_retain();
  v11(&v13, v8, v9, v10, v6, v7);
  sub_1ACA65828((uint64_t)&v13);
  return swift_release();
}

uint64_t sub_1ACB75580(char a1)
{
  uint64_t v2 = *(void **)(v1 + 104);
  uint64_t v3 = v2[6];
  uint64_t v4 = v2[7];
  uint64_t v11 = MEMORY[0x1E4FBB390];
  v10[0] = a1;
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 16);
  swift_retain();
  v8(v10, v5, v6, v7, v3, v4);
  sub_1ACA65828((uint64_t)v10);
  return swift_release();
}

uint64_t sub_1ACB75620(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void **)(v2 + 112);
  uint64_t v6 = v5[7];
  uint64_t v7 = v5[8];
  unint64_t v13[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v8 = v5[6];
  uint64_t v9 = v5[2];
  uint64_t v10 = v5[3];
  uint64_t v11 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  v11(v13, v8, v9, v10, v6, v7);
  swift_bridgeObjectRelease();
  sub_1ACA65828((uint64_t)v13);
  return swift_release();
}

uint64_t sub_1ACB756E4(uint64_t a1)
{
  uint64_t v3 = sub_1ACE750A8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 1)
  {
    uint64_t v8 = (void *)(v1 + 128);
  }
  else
  {
    if (a1) {
      return result;
    }
    uint64_t v8 = (void *)(v1 + 120);
  }
  uint64_t v9 = (void *)*v8;
  swift_retain();
  sub_1ACE75098();
  sub_1ACE74FB8();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  uint64_t v13 = v9[7];
  uint64_t v12 = v9[8];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E0B0);
  uint64_t v14 = v11;
  char v15 = 0;
  (*(void (**)(uint64_t *, void, void, void, uint64_t, uint64_t))(v12 + 16))(&v14, v9[6], v9[2], v9[3], v13, v12);
  sub_1ACA65828((uint64_t)&v14);
  return swift_release();
}

uint64_t sub_1ACB75840(uint64_t result)
{
  if (result == 1)
  {
    uint64_t v2 = v1 + 128;
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v2 = v1 + 120;
  }
  uint64_t v3 = *(void **)v2;
  uint64_t v4 = *(void *)(*(void *)v2 + 56);
  uint64_t v5 = *(void *)(*(void *)v2 + 64);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E0B0);
  uint64_t v10 = 0;
  char v11 = 1;
  uint64_t v6 = v3[6];
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  uint64_t v9 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_retain();
  v9(&v10, v6, v7, v8, v4, v5);
  sub_1ACA65828((uint64_t)&v10);
  return swift_release();
}

uint64_t sub_1ACB75904()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1ACB75994()
{
  sub_1ACB75904();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SyncKeysUserDefaultsStore()
{
  return self;
}

void *sub_1ACB759EC()
{
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_standardUserDefaults);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76BCE8);
  uint64_t v3 = swift_allocObject();
  *(unsigned char *)(v3 + 32) = 0;
  *(void *)(v3 + 16) = 0xD000000000000014;
  *(void *)(v3 + 24) = 0x80000001ACECA7D0;
  *(void *)(v3 + 40) = v2;
  *(void *)(v3 + 48) = &type metadata for BoolTransform;
  *(void *)(v3 + 56) = &off_1F0383EC8;
  v0[2] = v3;
  id v4 = objc_msgSend(v1, (SEL)&selRef_stringByAppendingString_ + 5);
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 32) = 0;
  *(void *)(v5 + 16) = 0xD000000000000016;
  *(void *)(v5 + 24) = 0x80000001ACECA7F0;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 48) = &type metadata for BoolTransform;
  *(void *)(v5 + 56) = &off_1F0383EC8;
  v0[3] = v5;
  id v6 = objc_msgSend(v1, (SEL)&selRef_stringByAppendingString_ + 5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76BCE0);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 32) = 0;
  *(void *)(v7 + 40) = 0;
  strcpy((char *)(v7 + 16), "MTSyncVersion");
  *(_WORD *)(v7 + 30) = -4864;
  *(void *)(v7 + 48) = v6;
  *(void *)(v7 + 56) = &type metadata for StringTransform;
  *(void *)(v7 + 64) = &off_1F0383EB0;
  v0[4] = v7;
  id v8 = objc_msgSend(v1, (SEL)&selRef_stringByAppendingString_ + 5);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 32) = 0;
  *(void *)(v9 + 40) = 0;
  strcpy((char *)(v9 + 16), "MTSyncVersion3");
  *(unsigned char *)(v9 + 31) = -18;
  *(void *)(v9 + 48) = v8;
  *(void *)(v9 + 56) = &type metadata for StringTransform;
  *(void *)(v9 + 64) = &off_1F0383EB0;
  v0[5] = v9;
  id v10 = objc_msgSend(v1, (SEL)&selRef_stringByAppendingString_ + 5);
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 32) = 0;
  *(void *)(v11 + 16) = 0xD00000000000001DLL;
  *(void *)(v11 + 24) = 0x80000001ACECA810;
  *(void *)(v11 + 40) = v10;
  *(void *)(v11 + 48) = &type metadata for BoolTransform;
  *(void *)(v11 + 56) = &off_1F0383EC8;
  v0[6] = v11;
  id v12 = objc_msgSend(v1, (SEL)&selRef_stringByAppendingString_ + 5);
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 32) = 0;
  *(void *)(v13 + 16) = 0xD00000000000001CLL;
  *(void *)(v13 + 24) = 0x80000001ACECA830;
  *(void *)(v13 + 40) = v12;
  *(void *)(v13 + 48) = &type metadata for BoolTransform;
  *(void *)(v13 + 56) = &off_1F0383EC8;
  v0[7] = v13;
  id v14 = objc_msgSend(v1, (SEL)&selRef_stringByAppendingString_ + 5);
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 32) = 0;
  *(void *)(v15 + 16) = 0xD00000000000001DLL;
  *(void *)(v15 + 24) = 0x80000001ACECA850;
  *(void *)(v15 + 40) = v14;
  *(void *)(v15 + 48) = &type metadata for BoolTransform;
  *(void *)(v15 + 56) = &off_1F0383EC8;
  v0[8] = v15;
  id v16 = objc_msgSend(v1, (SEL)&selRef_stringByAppendingString_ + 5);
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 32) = 0;
  *(void *)(v17 + 16) = 0xD000000000000020;
  *(void *)(v17 + 24) = 0x80000001ACECA870;
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = &type metadata for BoolTransform;
  *(void *)(v17 + 56) = &off_1F0383EC8;
  v0[9] = v17;
  id v18 = objc_msgSend(v1, (SEL)&selRef_stringByAppendingString_ + 5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76BCF8);
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 40) = 1;
  *(void *)(v19 + 16) = 0xD00000000000002ALL;
  *(void *)(v19 + 24) = 0x80000001ACECA8A0;
  *(void *)(v19 + 32) = 0;
  *(void *)(v19 + 48) = v18;
  *(void *)(v19 + 56) = &type metadata for DoubleTransform;
  *(void *)(v19 + 64) = &off_1F0383E50;
  v0[10] = v19;
  id v20 = objc_msgSend(v1, (SEL)&selRef_stringByAppendingString_ + 5);
  uint64_t v21 = (void *)swift_allocObject();
  v21[4] = 0;
  void v21[5] = 0;
  v21[2] = 0xD000000000000024;
  uint64_t v21[3] = 0x80000001ACECA8D0;
  void v21[6] = v20;
  v21[7] = &type metadata for StringTransform;
  v21[8] = &off_1F0383EB0;
  v0[11] = v21;
  id v22 = objc_msgSend(v1, (SEL)&selRef_stringByAppendingString_ + 5);
  uint64_t v23 = swift_allocObject();
  *(unsigned char *)(v23 + 40) = 1;
  *(void *)(v23 + 16) = 0xD000000000000024;
  *(void *)(v23 + 24) = 0x80000001ACECA900;
  *(void *)(v23 + 32) = 0;
  *(void *)(v23 + 48) = v22;
  *(void *)(v23 + 56) = &type metadata for DoubleTransform;
  *(void *)(v23 + 64) = &off_1F0383E50;
  v0[12] = v23;
  id v24 = objc_msgSend(v1, (SEL)&selRef_stringByAppendingString_ + 5);
  uint64_t v25 = swift_allocObject();
  *(unsigned char *)(v25 + 32) = 0;
  *(void *)(v25 + 16) = 0xD000000000000016;
  *(void *)(v25 + 24) = 0x80000001ACECA930;
  *(void *)(v25 + 40) = v24;
  *(void *)(v25 + 48) = &type metadata for BoolTransform;
  *(void *)(v25 + 56) = &off_1F0383EC8;
  v0[13] = v25;
  id v26 = objc_msgSend(v1, (SEL)&selRef_stringByAppendingString_ + 5);
  uint64_t v27 = (void *)swift_allocObject();
  v27[4] = 0;
  v27[5] = 0;
  v27[2] = 0xD00000000000001DLL;
  v27[3] = 0x80000001ACECA950;
  v27[6] = v26;
  v27[7] = &type metadata for StringTransform;
  v27[8] = &off_1F0383EB0;
  v0[14] = v27;
  id v28 = objc_msgSend(v1, (SEL)&selRef_stringByAppendingString_ + 5);
  uint64_t v29 = swift_allocObject();
  *(unsigned char *)(v29 + 40) = 1;
  *(void *)(v29 + 16) = 0xD00000000000002ELL;
  *(void *)(v29 + 24) = 0x80000001ACECA970;
  *(void *)(v29 + 32) = 0;
  *(void *)(v29 + 48) = v28;
  *(void *)(v29 + 56) = &type metadata for DoubleTransform;
  *(void *)(v29 + 64) = &off_1F0383E50;
  v0[15] = v29;
  id v30 = objc_msgSend(v1, (SEL)&selRef_stringByAppendingString_ + 5);
  uint64_t v31 = swift_allocObject();
  *(unsigned char *)(v31 + 40) = 1;
  *(void *)(v31 + 16) = 0xD00000000000002ELL;
  *(void *)(v31 + 24) = 0x80000001ACECA9A0;
  *(void *)(v31 + 32) = 0;
  *(void *)(v31 + 48) = v30;
  *(void *)(v31 + 56) = &type metadata for DoubleTransform;
  *(void *)(v31 + 64) = &off_1F0383E50;
  v0[16] = v31;
  return v0;
}

uint64_t sub_1ACB75FEC()
{
  swift_retain();
  char v0 = sub_1ACDFDAA0();
  swift_release();
  return v0 & 1;
}

uint64_t sub_1ACB7602C(char a1)
{
  return sub_1ACB74F08(a1);
}

uint64_t sub_1ACB76050()
{
  swift_retain();
  char v0 = sub_1ACDFDAA0();
  swift_release();
  return v0 & 1;
}

uint64_t sub_1ACB76090(char a1)
{
  return sub_1ACB75580(a1);
}

uint64_t sub_1ACB760B4()
{
  swift_retain();
  char v0 = sub_1ACDFDAA0();
  swift_release();
  return v0 & 1;
}

uint64_t sub_1ACB760F4(char a1)
{
  return sub_1ACB74FA8(a1);
}

uint64_t sub_1ACB76118(unint64_t a1)
{
  if (a1 > 1) {
    return 0;
  }
  swift_retain();
  char v1 = sub_1ACDFDAA0();
  swift_release();
  return v1 & 1;
}

uint64_t sub_1ACB76178(uint64_t a1, uint64_t a2)
{
  return sub_1ACB75048(a1, a2);
}

uint64_t sub_1ACB7619C(unint64_t a1)
{
  if (a1 > 1) {
    return 0;
  }
  swift_retain();
  uint64_t v1 = sub_1ACDFDB34();
  swift_release();
  return v1;
}

uint64_t sub_1ACB76214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ACB75104(a1, a2, a3);
}

uint64_t sub_1ACB76238(uint64_t a1)
{
  return sub_1ACB751D8(a1);
}

uint64_t sub_1ACB7625C(unint64_t a1)
{
  if (a1 > 1) {
    return 0;
  }
  swift_retain();
  char v1 = sub_1ACDFDAA0();
  swift_release();
  return v1 & 1;
}

uint64_t sub_1ACB762BC(uint64_t a1, uint64_t a2)
{
  return sub_1ACB75294(a1, a2);
}

id sub_1ACB762E0()
{
  id v0 = objc_msgSend(self, sel__applePodcastsFoundationSettingsUserDefaults);
  if (qword_1EB769488 != -1) {
    swift_once();
  }
  char v1 = (void *)sub_1ACE76178();
  id v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

void sub_1ACB76390(char a1)
{
  id v2 = objc_msgSend(self, sel__applePodcastsFoundationSettingsUserDefaults);
  if (qword_1EB769488 != -1) {
    swift_once();
  }
  id v3 = (id)sub_1ACE76178();
  objc_msgSend(v2, sel_setBool_forKey_, a1 & 1, v3);
}

uint64_t sub_1ACB76450()
{
  swift_retain();
  uint64_t v0 = sub_1ACDFDBEC();
  swift_release();
  return v0;
}

uint64_t sub_1ACB764A0(uint64_t a1, char a2)
{
  return sub_1ACB75354(a1, a2 & 1);
}

uint64_t sub_1ACB764C8()
{
  swift_retain();
  uint64_t v0 = sub_1ACDFDB34();
  swift_release();
  return v0;
}

uint64_t sub_1ACB76518(uint64_t a1, uint64_t a2)
{
  return sub_1ACB75408(a1, a2);
}

uint64_t sub_1ACB76544()
{
  swift_retain();
  uint64_t v0 = sub_1ACDFDB34();
  swift_release();
  return v0;
}

uint64_t sub_1ACB76594(uint64_t a1, uint64_t a2)
{
  return sub_1ACB75620(a1, a2);
}

uint64_t sub_1ACB765B8()
{
  swift_retain();
  uint64_t v0 = sub_1ACDFDBEC();
  swift_release();
  return v0;
}

uint64_t sub_1ACB76608(uint64_t a1, char a2)
{
  return sub_1ACB754CC(a1, a2 & 1);
}

uint64_t sub_1ACB76630(unint64_t a1)
{
  if (a1 > 1) {
    return 0;
  }
  swift_retain();
  uint64_t v1 = sub_1ACDFDBEC();
  swift_release();
  return v1;
}

uint64_t sub_1ACB766A4(uint64_t a1)
{
  return sub_1ACB756E4(a1);
}

uint64_t sub_1ACB766C8(uint64_t a1)
{
  return sub_1ACB75840(a1);
}

uint64_t sub_1ACB766EC()
{
  unsigned int v0 = objc_msgSend(self, sel_isPodcastsApp);
  uint64_t v1 = self;
  if (v0) {
    id v2 = objc_msgSend(v1, sel_standardUserDefaults);
  }
  else {
    id v2 = objc_msgSend(v1, sel__applePodcastsFoundationSharedUserDefaults);
  }
  id v3 = (void *)sub_1ACE76178();
  id v4 = objc_msgSend(v2, sel_stringForKey_, v3);

  if (!v4) {
    return 0;
  }
  uint64_t v5 = sub_1ACE761B8();

  return v5;
}

void sub_1ACB7681C(uint64_t a1, uint64_t a2)
{
  if (objc_msgSend(self, sel_isPodcastsApp))
  {
    id v3 = objc_msgSend(self, sel_standardUserDefaults);
    if (a2)
    {
      uint64_t v4 = sub_1ACE76178();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v4 = 0;
    }
    id v5 = (id)sub_1ACE76178();
    objc_msgSend(v3, sel_setObject_forKey_, v4, v5);

    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

id MTInterest.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id MTInterest.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for MTInterest();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for MTInterest()
{
  return self;
}

id MTInterest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MTInterest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t MediaAPIRequest<>.parse(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v5(a2, a1, AssociatedTypeWitness);
}

void destroy for MediaAPIClientError(void **a1)
{
  uint64_t v1 = *a1;
  int v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF) {
    int v2 = (int)v1;
  }
  if ((v2 + 1) <= 1) {
}
  }

void *_s18PodcastsFoundation19MediaAPIClientErrorOwCP_0(void *a1, void **a2)
{
  id v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  if ((v4 + 1) <= 1) {
    id v5 = v3;
  }
  *a1 = v3;
  return a1;
}

void **assignWithCopy for MediaAPIClientError(void **a1, void **a2)
{
  id v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = (int)v3;
  }
  unsigned int v6 = v5 + 1;
  objc_super v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1) {
      id v11 = v7;
    }
    *a1 = v7;
  }
  else if (v8 > 1)
  {

    *a1 = *a2;
  }
  else
  {
    id v9 = v7;
    id v10 = *a1;
    *a1 = v7;
  }
  return a1;
}

void **assignWithTake for MediaAPIClientError(void **a1, void **a2)
{
  id v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = (int)v3;
  }
  unsigned int v6 = v5 + 1;
  objc_super v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1) {
    goto LABEL_11;
  }
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for MediaAPIClientError(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 2) {
    return (v3 - 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MediaAPIClientError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1ACB76D64(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_1ACB76D84(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *uint64_t result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaAPIClientError()
{
  return &type metadata for MediaAPIClientError;
}

uint64_t dispatch thunk of MediaAPIRequest.params.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MediaAPIRequest.parse(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

id MaximumFrequencySchedule.__allocating_init(frequency:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  ScheduleFrequency.interval.getter(a1);
  return objc_msgSend(v3, sel_initWithInterval_);
}

double MaximumFrequencySchedule.interval.getter()
{
  return *(double *)(v0 + OBJC_IVAR___PFMaximumFrequencySchedule_interval);
}

id MaximumFrequencySchedule.init(frequency:)(uint64_t a1)
{
  ScheduleFrequency.interval.getter(a1);
  return objc_msgSend(v1, sel_initWithInterval_);
}

id MaximumFrequencySchedule.__allocating_init(interval:)(double a1)
{
  id v3 = (char *)objc_allocWithZone(v1);
  *(double *)&v3[OBJC_IVAR___PFMaximumFrequencySchedule_interval] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id MaximumFrequencySchedule.init(interval:)(double a1)
{
  *(double *)&v1[OBJC_IVAR___PFMaximumFrequencySchedule_interval] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for MaximumFrequencySchedule();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for MaximumFrequencySchedule()
{
  return self;
}

BOOL sub_1ACB76FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v5 - 8);
  objc_super v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE750A8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA72A5C(a2, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1ACA3E034((uint64_t)v7);
    return 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_1ACE75058();
    double v14 = v13;
    sub_1ACE75058();
    double v16 = v15;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return *(double *)(v3 + OBJC_IVAR___PFMaximumFrequencySchedule_interval) < v14 - v16;
  }
}

id MaximumFrequencySchedule.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MaximumFrequencySchedule.init()()
{
}

id MaximumFrequencySchedule.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MaximumFrequencySchedule();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for MaximumFrequencySchedule(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MaximumFrequencySchedule);
}

uint64_t dispatch thunk of MaximumFrequencySchedule.__allocating_init(interval:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MaximumFrequencySchedule.shouldExecute(on:previousExecution:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t Cache.dictionary.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Cache.dictionary.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Cache.dictionary.modify())()
{
  return j__swift_endAccess;
}

uint64_t Cache.__allocating_init(invalidateOnAppBackground:)(char a1)
{
  uint64_t v2 = swift_allocObject();
  Cache.init(invalidateOnAppBackground:)(a1);
  return v2;
}

void *Cache.init(invalidateOnAppBackground:)(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)*v1;
  uint64_t v5 = sub_1ACE76E78();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v4[10];
  uint64_t v10 = v4[11];
  uint64_t v11 = v4[12];
  uint64_t v12 = sub_1ACE75F98();
  v2[3] = 0;
  v2[4] = 0;
  v2[2] = v12;
  if (a1)
  {
    id v13 = objc_msgSend(self, sel_defaultCenter);
    double v14 = @"MTApplicationDidEnterBackgroundNotification";
    sub_1ACE76E68();
    uint64_t v15 = swift_allocObject();
    swift_weakInit();
    double v16 = (void *)swift_allocObject();
    unsigned char v16[2] = v9;
    v16[3] = v10;
    v16[4] = v11;
    v16[5] = v15;
    sub_1ACB779B8();
    uint64_t v17 = sub_1ACE75D58();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v2[3] = v17;
    swift_release();
  }
  id v18 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v19 = @"MTApplicationDidReceiveMemoryWarningNotification";
  sub_1ACE76E68();
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v9;
  uint64_t v21[3] = v10;
  v21[4] = v11;
  void v21[5] = v20;
  sub_1ACB779B8();
  uint64_t v22 = sub_1ACE75D58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v2[4] = v22;
  swift_release();
  return v2;
}

uint64_t sub_1ACB7782C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

Swift::Void __swiftcall Cache.invalidate()()
{
}

uint64_t sub_1ACB77908()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    Cache.invalidate()();
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACB77960()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB77998()
{
  return sub_1ACB77908();
}

unint64_t sub_1ACB779B8()
{
  unint64_t result = qword_1EB768EF8;
  if (!qword_1EB768EF8)
  {
    sub_1ACE76E78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB768EF8);
  }
  return result;
}

uint64_t Cache.subscript.getter(uint64_t a1)
{
  uint64_t v3 = (void *)*v1;
  swift_beginAccess();
  MEMORY[0x1AD118260](a1, v1[2], v3[10], v3[11], v3[12]);
  return swift_endAccess();
}

uint64_t Cache.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1ACB7841C(a1, a2);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 8))(a2);
  uint64_t v6 = sub_1ACE76FD8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(a1, v6);
}

void (*Cache.subscript.modify(void *a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t v5 = malloc(0x40uLL);
  *a1 = v5;
  *uint64_t v5 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1ACE76FD8();
  v5[1] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[2] = v8;
  size_t v9 = *(void *)(v8 + 64);
  v5[3] = malloc(v9);
  void v5[4] = malloc(v9);
  uint64_t v10 = *(void *)(v6 + 80);
  v5[5] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v11;
  void v5[6] = v11;
  v5[7] = malloc(*(void *)(v11 + 64));
  (*(void (**)(void))(v12 + 16))();
  Cache.subscript.getter(a2);
  return sub_1ACB77CF4;
}

void sub_1ACB77CF4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 48);
  uint64_t v3 = *(void **)(*(void *)a1 + 56);
  uint64_t v5 = *(void **)(*(void *)a1 + 32);
  uint64_t v6 = *(void *)(*(void *)a1 + 40);
  uint64_t v8 = *(void *)(*(void *)a1 + 16);
  uint64_t v7 = *(void **)(*(void *)a1 + 24);
  uint64_t v9 = *(void *)(*(void *)a1 + 8);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v8 + 16))(*(void *)(*(void *)a1 + 24), v5, v9);
    sub_1ACB7841C((uint64_t)v7, (uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v6);
    uint64_t v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v7, v9);
    v10(v5, v9);
  }
  else
  {
    sub_1ACB7841C(*(void *)(*(void *)a1 + 32), (uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v6);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v9);
  }
  free(v3);
  free(v5);
  free(v7);
  free(v2);
}

uint64_t Cache.get(_:or:)@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v21 = a3;
  uint64_t v22 = a2;
  uint64_t v7 = *(void *)(*(void *)v4 + 88);
  uint64_t v8 = sub_1ACE76FD8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  double v14 = (char *)&v19 - v13;
  Cache.subscript.getter(a1);
  uint64_t v15 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v7) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a4, v14, v7);
  }
  uint64_t v20 = a1;
  double v16 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  uint64_t v17 = v16(v14, v8);
  v22(v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v12, a4, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v7);
  sub_1ACB7841C((uint64_t)v12, v20);
  return v16(v12, v8);
}

uint64_t Cache.get(key:or:)@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v41 = a4;
  uint64_t v6 = *(void *)(*(void *)v4 + 88);
  uint64_t v7 = sub_1ACE76FD8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  uint64_t v43 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  BOOL v38 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v35 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  double v16 = (char *)v35 - v15;
  uint64_t v17 = *(void *)(v6 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v14);
  uint64_t v20 = (char *)v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)v35 - v21;
  Cache.subscript.getter(a1);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v23(v16, 1, v6) == 1)
  {
    v35[1] = v4;
    uint64_t v36 = v20;
    uint64_t v37 = a1;
    uint64_t v24 = *(uint64_t (**)(char *, uint64_t))(v43 + 8);
    v43 += 8;
    uint64_t v25 = v24(v16, v42);
    v40(v25);
    int v26 = v23(v13, 1, v6);
    uint64_t v27 = v41;
    if (v26 == 1)
    {
      v24(v13, v42);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v27, 1, 1, v6);
    }
    else
    {
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
      uint64_t v32 = v36;
      v31(v36, v13, v6);
      uint64_t v33 = (uint64_t)v38;
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v38, v32, v6);
      uint64_t v34 = *(uint64_t (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
      v34((char *)v33, 0, 1, v6);
      sub_1ACB7841C(v33, v37);
      v24((char *)v33, v42);
      v31(v27, v32, v6);
      return v34(v27, 0, 1, v6);
    }
  }
  else
  {
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v29(v22, v16, v6);
    id v30 = v41;
    v29(v41, v22, v6);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v30, 0, 1, v6);
  }
}

uint64_t Cache.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Cache.__deallocating_deinit()
{
  Cache.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACB7841C(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = a1;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1ACE76FD8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - v8;
  uint64_t v10 = *(void *)(v4 + 80);
  MEMORY[0x1F4188790](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v14 - v11, a2, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v14, v5);
  swift_beginAccess();
  sub_1ACE76088();
  sub_1ACE760B8();
  return swift_endAccess();
}

uint64_t sub_1ACB78604(uint64_t a1, uint64_t a2)
{
  return Cache.subscript.getter(a2);
}

uint64_t sub_1ACB7862C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ACB7841C(a1, a3);
}

uint64_t sub_1ACB78654()
{
  return 24;
}

__n128 sub_1ACB78660(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1ACB78674()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Cache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for Cache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Cache);
}

uint64_t dispatch thunk of Cache.__allocating_init(invalidateOnAppBackground:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t static MTCategory.sortDescriptorsForCategoriesInLibrary()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1ACE84830;
  id v1 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v2 = (void *)sub_1ACE76178();
  id v3 = objc_msgSend(v1, sel_initWithKey_ascending_, v2, 1);

  *(void *)(v0 + 32) = v3;
  sub_1ACE76598();
  return v0;
}

void *static MTPodcastSkipDuration.allCases.getter()
{
  return &unk_1F0380768;
}

void sub_1ACB787CC(void *a1@<X8>)
{
  *a1 = &unk_1F03807A0;
}

uint64_t MTPodcastSkipDuration.id.getter(uint64_t result)
{
  return (int)result;
}

uint64_t MTPodcastSkipDuration.intValue.getter(uint64_t result)
{
  return (int)result;
}

unint64_t sub_1ACB787F0()
{
  unint64_t result = qword_1E99F2870;
  if (!qword_1E99F2870)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F2878);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2870);
  }
  return result;
}

uint64_t sub_1ACB7884C()
{
  return MEMORY[0x1E4FBB560];
}

void sub_1ACB78858(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t NSUserDefaults.Name.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t NSUserDefaults.Name.rawValue.getter()
{
  uint64_t v1 = 0x646572616873;
  if (*v0 != 1) {
    uint64_t v1 = 0x647261646E617473;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x73676E6974746573;
  }
}

uint64_t sub_1ACB78918(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF3D54(*a1, *a2);
}

uint64_t sub_1ACB78924@<X0>(char *a1@<X8>)
{
  return NSUserDefaults.Name.init(rawValue:)(a1);
}

void sub_1ACB78930(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE800000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x646572616873;
  if (v2 != 1)
  {
    uint64_t v5 = 0x647261646E617473;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x73676E6974746573;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_1ACB78990()
{
  unint64_t result = qword_1EB7706A0;
  if (!qword_1EB7706A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7706A0);
  }
  return result;
}

uint64_t sub_1ACB789E4()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACB78A84()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACB78B10()
{
  return sub_1ACE77B78();
}

unint64_t sub_1ACB78BB0()
{
  unint64_t result = qword_1EB770698;
  if (!qword_1EB770698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770698);
  }
  return result;
}

unsigned char *_s4NameOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB78CD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NSUserDefaults.Name()
{
  return &type metadata for NSUserDefaults.Name;
}

id PFCoreDataUtils.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id PFCoreDataUtils.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PFCoreDataUtils();
  return objc_msgSendSuper2(&v2, sel_init);
}

id PFCoreDataUtils.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PFCoreDataUtils();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACB78F3C(uint64_t result, char a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v6 = result;
    uint64_t v7 = (void *)swift_bridgeObjectRetain();
    uint64_t v9 = v7[4];
    uint64_t v8 = v7[5];
    uint64_t v10 = v7[6];
    uint64_t v11 = (void *)*a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_1ACA657FC(v9, v8);
    uint64_t v14 = v11[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    char v17 = v12;
    if (v11[3] < v16)
    {
      sub_1ACCFFF40(v16, a2 & 1);
      uint64_t v18 = sub_1ACA657FC(v9, v8);
      if ((v17 & 1) != (v19 & 1))
      {
LABEL_27:
        unint64_t result = sub_1ACE77A68();
        __break(1u);
        return result;
      }
      unint64_t v13 = v18;
      uint64_t v20 = (void *)*a3;
      if ((v17 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_9:
      uint64_t v21 = *(void *)(v20[7] + 8 * v13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = v20[7];
      swift_bridgeObjectRelease();
      *(void *)(v22 + 8 * v13) = v21;
      uint64_t v23 = v3 - 1;
      if (v3 == 1) {
        return swift_bridgeObjectRelease();
      }
LABEL_16:
      for (int i = (uint64_t *)(v6 + 72); ; i += 3)
      {
        uint64_t v33 = *(i - 2);
        uint64_t v32 = *(i - 1);
        uint64_t v34 = *i;
        char v35 = (void *)*a3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v36 = sub_1ACA657FC(v33, v32);
        uint64_t v38 = v35[2];
        BOOL v39 = (v37 & 1) == 0;
        BOOL v26 = __OFADD__(v38, v39);
        uint64_t v40 = v38 + v39;
        if (v26) {
          break;
        }
        char v41 = v37;
        if (v35[3] < v40)
        {
          sub_1ACCFFF40(v40, 1);
          unint64_t v36 = sub_1ACA657FC(v33, v32);
          if ((v41 & 1) != (v42 & 1)) {
            goto LABEL_27;
          }
        }
        uint64_t v43 = (void *)*a3;
        if (v41)
        {
          uint64_t v29 = 8 * v36;
          uint64_t v30 = *(void *)(v43[7] + 8 * v36);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v31 = v43[7];
          swift_bridgeObjectRelease();
          *(void *)(v31 + v29) = v30;
        }
        else
        {
          v43[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v44 = (uint64_t *)(v43[6] + 16 * v36);
          *uint64_t v44 = v33;
          v44[1] = v32;
          *(void *)(v43[7] + 8 * v36) = v34;
          uint64_t v45 = v43[2];
          BOOL v26 = __OFADD__(v45, 1);
          uint64_t v46 = v45 + 1;
          if (v26) {
            goto LABEL_26;
          }
          v43[2] = v46;
        }
        if (!--v23) {
          return swift_bridgeObjectRelease();
        }
      }
      goto LABEL_25;
    }
    if (a2)
    {
      uint64_t v20 = (void *)*a3;
      if (v12) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1ACD07F90();
      uint64_t v20 = (void *)*a3;
      if (v17) {
        goto LABEL_9;
      }
    }
LABEL_12:
    v20[(v13 >> 6) + 8] |= 1 << v13;
    uint64_t v24 = (uint64_t *)(v20[6] + 16 * v13);
    uint64_t *v24 = v9;
    v24[1] = v8;
    *(void *)(v20[7] + 8 * v13) = v10;
    uint64_t v25 = v20[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v20[2] = v27;
    uint64_t v23 = v3 - 1;
    if (v3 == 1) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_16;
  }
  return result;
}

uint64_t _s18PodcastsFoundation15PFCoreDataUtilsC18findDuplicateItems6entity19itemsToLookAtFilter017keysThatMustMatchK22BeConsideredADuplicate0op9ShouldNotS10Duplicated011keyValuesOfxhK6Return15sortDescriptorsSDySSSayyXlGGSS_So11NSPredicateCSaySSGA2OSaySo16NSSortDescriptorCGtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v103 = *MEMORY[0x1E4F143B8];
  id v10 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v10, sel_initWithEntityName_, v11);

  objc_msgSend(v12, sel_setPredicate_, a3);
  objc_msgSend(v12, sel_setResultType_, 2);
  char v99 = a4;
  swift_bridgeObjectRetain();
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_1ACA6FB30(v13);
  uint64_t v14 = a4[2];
  uint64_t v92 = a5;
  unint64_t v90 = v12;
  if (v14)
  {
    uint64_t v15 = a6;
    long long v101 = (void *)MEMORY[0x1E4FBC860];
    sub_1ACE773D8();
    uint64_t v16 = a4 + 5;
    do
    {
      id v17 = objc_allocWithZone(MEMORY[0x1E4F29008]);
      swift_bridgeObjectRetain();
      uint64_t v18 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_initWithKey_ascending_, v18, 1);

      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
      v16 += 2;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    a6 = v15;
    id v12 = v90;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  unint64_t v19 = swift_bridgeObjectRetain();
  sub_1ACA70030(v19);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  uint64_t v20 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setSortDescriptors_, v20);

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1ACA6FB30(a5);
  uint64_t v21 = swift_bridgeObjectRetain();
  sub_1ACA6FB30(v21);
  sub_1ACA4E0D0((uint64_t)v99);
  swift_bridgeObjectRelease();
  uint64_t v22 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setPropertiesToFetch_, v22);

  long long v101 = 0;
  id v23 = objc_msgSend(v12, sel_execute_, &v101);
  id v24 = v101;
  if (v23)
  {
    uint64_t v25 = v23;
    sub_1ACA50D4C(0, &qword_1EB76E0F0);
    unint64_t v26 = sub_1ACE76578();
    id v27 = v24;

    uint64_t v28 = sub_1ACA4E1F8(v26);
    swift_bridgeObjectRelease();
    uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
    if (!*(void *)(v28 + 16))
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = (void *)sub_1ACA37330(MEMORY[0x1E4FBC860]);

      return (uint64_t)v38;
    }
    int64_t v30 = *(void *)(a6 + 16);
    int64_t v87 = v30;
    uint64_t v88 = v28;
    if (v30)
    {
      long long v101 = (void *)MEMORY[0x1E4FBC860];
      sub_1ACC83180(0, v30, 0);
      uint64_t v31 = v101;
      uint64_t v32 = (uint64_t *)(a6 + 40);
      do
      {
        uint64_t v34 = *(v32 - 1);
        uint64_t v33 = *v32;
        long long v101 = v31;
        unint64_t v36 = v31[2];
        unint64_t v35 = v31[3];
        swift_bridgeObjectRetain();
        if (v36 >= v35 >> 1)
        {
          sub_1ACC83180(v35 > 1, v36 + 1, 1);
          uint64_t v31 = v101;
        }
        v32 += 2;
        id v31[2] = v36 + 1;
        char v37 = &v31[3 * v36];
        v37[4] = v34;
        v37[5] = v33;
        v37[6] = MEMORY[0x1E4FBC860];
        --v30;
      }
      while (v30);
      a5 = v92;
      id v12 = v90;
      uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v28 = v88;
    }
    else
    {
      if (!*(void *)(MEMORY[0x1E4FBC860] + 16))
      {
        BOOL v39 = (void *)MEMORY[0x1E4FBC868];
        uint64_t v31 = (void *)MEMORY[0x1E4FBC860];
        goto LABEL_18;
      }
      uint64_t v31 = (void *)MEMORY[0x1E4FBC860];
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C28);
    BOOL v39 = (void *)sub_1ACE77558();
LABEL_18:
    long long v101 = v39;
    sub_1ACB78F3C((uint64_t)v31, 1, &v101);
    swift_bridgeObjectRelease();
    uint64_t v40 = *(void *)(v28 + 16);
    if (!v40) {
      goto LABEL_84;
    }
    uint64_t v38 = v101;
    if (v40 == 1)
    {

      swift_bridgeObjectRelease();
      return (uint64_t)v38;
    }
    int64_t v93 = v101;
    uint64_t v94 = *(void *)(v28 + 16);
    uint64_t v95 = v28 + 32;
    uint64_t v41 = *(void *)(v28 + 32);
    uint64_t v42 = v99[2];
    swift_bridgeObjectRetain();
    uint64_t v96 = v99 + 5;
    int64_t v91 = (uint64_t *)(a5 + 40);
    uint64_t v86 = (uint64_t *)(a6 + 40);
    uint64_t v43 = 1;
    uint64_t v98 = v42;
    while (1)
    {
      uint64_t v44 = *(void *)(v95 + 8 * v43);
      if (v42)
      {
        long long v101 = v29;
        swift_bridgeObjectRetain();
        sub_1ACE773D8();
        uint64_t v45 = v96;
        uint64_t v46 = v42;
        do
        {
          if (*(void *)(v41 + 16))
          {
            uint64_t v47 = *(v45 - 1);
            uint64_t v48 = *v45;
            swift_bridgeObjectRetain_n();
            sub_1ACA657FC(v47, v48);
            if (v49) {
              swift_unknownObjectRetain();
            }
            swift_bridgeObjectRelease_n();
          }
          sub_1ACE773A8();
          sub_1ACE773E8();
          sub_1ACE773F8();
          sub_1ACE773B8();
          v45 += 2;
          --v46;
        }
        while (v46);
        uint64_t v42 = v98;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2888);
      id v100 = (id)sub_1ACE76558();
      swift_bridgeObjectRelease();
      if (v42)
      {
        long long v101 = v29;
        sub_1ACE773D8();
        uint64_t v50 = v96;
        uint64_t v51 = v42;
        do
        {
          if (*(void *)(v44 + 16))
          {
            uint64_t v52 = *(v50 - 1);
            uint64_t v53 = *v50;
            swift_bridgeObjectRetain_n();
            sub_1ACA657FC(v52, v53);
            if (v54) {
              swift_unknownObjectRetain();
            }
            swift_bridgeObjectRelease_n();
          }
          sub_1ACE773A8();
          sub_1ACE773E8();
          sub_1ACE773F8();
          sub_1ACE773B8();
          v50 += 2;
          --v51;
        }
        while (v51);
        uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v42 = v98;
      }
      uint64_t v55 = (void *)sub_1ACE76558();
      swift_bridgeObjectRelease();
      if (objc_msgSend(v100, sel_isEqual_, v55))
      {
        uint64_t v97 = v55;
        uint64_t v56 = *(void *)(a5 + 16);
        if (v56)
        {
          swift_bridgeObjectRetain();
          uint64_t v57 = v91;
          while (1)
          {
            if (!*(void *)(v41 + 16)) {
              goto LABEL_46;
            }
            uint64_t v59 = *(v57 - 1);
            uint64_t v58 = *v57;
            swift_bridgeObjectRetain();
            uint64_t v60 = sub_1ACA657FC(v59, v58);
            if ((v61 & 1) == 0 || !*(void *)(v44 + 16)) {
              goto LABEL_45;
            }
            uint64_t v62 = *(void **)(*(void *)(v41 + 56) + 8 * v60);
            swift_unknownObjectRetain();
            uint64_t v63 = sub_1ACA657FC(v59, v58);
            if ((v64 & 1) == 0) {
              break;
            }
            uint64_t v65 = *(void *)(*(void *)(v44 + 56) + 8 * v63);
            swift_unknownObjectRetain_n();
            swift_bridgeObjectRelease();
            unsigned __int8 v66 = objc_msgSend(v62, sel_isEqual_, v65);
            swift_unknownObjectRelease_n();
            swift_unknownObjectRelease();
            if (v66)
            {
              swift_bridgeObjectRelease();
              int64_t v67 = v87;
              if (v87)
              {
                swift_bridgeObjectRetain();
                uint64_t v68 = v86;
                uint64_t v69 = v100;
                uint64_t v70 = v97;
                uint64_t v89 = v43;
                do
                {
                  if (*(void *)(v44 + 16))
                  {
                    uint64_t v71 = *(v68 - 1);
                    uint64_t v72 = *v68;
                    swift_bridgeObjectRetain_n();
                    sub_1ACA657FC(v71, v72);
                    if (v73)
                    {
                      swift_unknownObjectRetain_n();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRetain();
                      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                      long long v101 = v93;
                      swift_bridgeObjectRetain();
                      uint64_t v75 = v71;
                      uint64_t v77 = sub_1ACA657FC(v71, v72);
                      uint64_t v78 = v93[2];
                      BOOL v79 = (v76 & 1) == 0;
                      uint64_t v80 = v78 + v79;
                      if (__OFADD__(v78, v79))
                      {
                        __break(1u);
LABEL_83:
                        __break(1u);
LABEL_84:
                        __break(1u);
                      }
                      char v81 = v76;
                      if (v93[3] >= v80)
                      {
                        uint64_t v43 = v89;
                        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                          sub_1ACD07F90();
                        }
                        a5 = v92;
                      }
                      else
                      {
                        sub_1ACCFFF40(v80, isUniquelyReferenced_nonNull_native);
                        uint64_t v82 = sub_1ACA657FC(v75, v72);
                        if ((v81 & 1) != (v83 & 1)) {
                          goto LABEL_86;
                        }
                        uint64_t v77 = v82;
                        a5 = v92;
                        uint64_t v43 = v89;
                      }
                      if ((v81 & 1) == 0) {
                        goto LABEL_83;
                      }
                      int64_t v93 = v101;
                      uint64_t v102 = *(void *)(v101[7] + 8 * v77);
                      MEMORY[0x1AD118700]();
                      if (*(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v102 & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
                        sub_1ACE765C8();
                      sub_1ACE76628();
                      sub_1ACE76598();
                      if (v102)
                      {
                        *(void *)(v93[7] + 8 * v77) = v102;
                      }
                      else
                      {
                        swift_arrayDestroy();
                        sub_1ACB1B6A4(v77, v93);
                      }
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_unknownObjectRelease();
                    }
                    else
                    {
                      swift_bridgeObjectRelease_n();
                    }
                    uint64_t v69 = v100;
                    uint64_t v70 = v97;
                  }
                  v68 += 2;
                  --v67;
                }
                while (v67);
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
              }
              else
              {
                swift_bridgeObjectRelease();

                uint64_t v69 = v100;
              }

              goto LABEL_56;
            }
LABEL_46:
            v57 += 2;
            if (!--v56) {
              goto LABEL_55;
            }
          }
          swift_unknownObjectRelease();
LABEL_45:
          swift_bridgeObjectRelease();
          goto LABEL_46;
        }
        swift_bridgeObjectRetain();
LABEL_55:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v41 = v44;
LABEL_56:
        uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v42 = v98;
      }
      else
      {
        swift_bridgeObjectRelease();

        uint64_t v41 = v44;
      }
      if (++v43 == v94)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return (uint64_t)v93;
      }
    }
  }
  BOOL v85 = v101;
  sub_1ACE74D78();

  swift_willThrow();
  swift_unexpectedError();
  __break(1u);
  swift_bridgeObjectRelease();
  swift_release();
  __break(1u);
LABEL_86:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PFCoreDataUtils()
{
  return self;
}

uint64_t MetricsPageType.rawValue.getter(uint64_t a1)
{
  return a1;
}

unint64_t MetricsPageType.debugDescription.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1ACB79DF4()
{
  return MetricsPageType.debugDescription.getter();
}

uint64_t MetricsPageType.description.getter(uint64_t a1)
{
  return a1;
}

uint64_t MetricsPageType.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_1ACE77858();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsPageType.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE778D8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsPageType.artist.getter()
{
  return 0x747369747241;
}

uint64_t static MetricsPageType.category.getter()
{
  return 0x79726F6765746143;
}

uint64_t static MetricsPageType.channel.getter()
{
  return 0x6C656E6E616843;
}

uint64_t static MetricsPageType.episode.getter()
{
  return 0x4574736163646F50;
}

uint64_t static MetricsPageType.genre.getter()
{
  return 0x65726E6547;
}

uint64_t static MetricsPageType.info.getter()
{
  return 1868983881;
}

uint64_t static MetricsPageType.landing.getter()
{
  return 0x676E69646E614CLL;
}

uint64_t static MetricsPageType.multiRoom.getter()
{
  return 0x6F6F5269746C754DLL;
}

uint64_t static MetricsPageType.nowPlaying.getter()
{
  return 0x6979616C50776F4ELL;
}

uint64_t static MetricsPageType.overflow.getter()
{
  return 0x776F6C667265764FLL;
}

uint64_t static MetricsPageType.picker.getter()
{
  return 0x72656B636950;
}

uint64_t static MetricsPageType.prompt.getter()
{
  return 0x74706D6F7250;
}

uint64_t static MetricsPageType.queue.getter()
{
  return 0x6575657551;
}

uint64_t static MetricsPageType.room.getter()
{
  return 1836019538;
}

uint64_t static MetricsPageType.search.getter()
{
  return 0x686372616553;
}

uint64_t static MetricsPageType.searchResults.getter()
{
  return 0x6552686372616553;
}

uint64_t static MetricsPageType.searchSeeAll.getter()
{
  return 0x6553686372616553;
}

uint64_t static MetricsPageType.settings.getter()
{
  return 0x73676E6974746553;
}

uint64_t static MetricsPageType.show.getter()
{
  return 0x74736163646F50;
}

uint64_t static MetricsPageType.topCharts.getter()
{
  return 0x7472616843706F54;
}

uint64_t static MetricsPageType.transcript.getter()
{
  return 0x697263736E617254;
}

uint64_t static MetricsPageType.upsell.getter()
{
  return 0x6C6C65737055;
}

uint64_t static MetricsPageType.welcome.getter()
{
  return 0x656D6F636C6557;
}

uint64_t static MetricsPageType.podcast.getter()
{
  return 0x74736163646F50;
}

unint64_t sub_1ACB7A1D8()
{
  unint64_t result = qword_1E99F2890;
  if (!qword_1E99F2890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2890);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsPageType()
{
  return &type metadata for MetricsPageType;
}

ValueMetadata *type metadata accessor for TimelineAlignmentError()
{
  return &type metadata for TimelineAlignmentError;
}

uint64_t dispatch thunk of TimelineAlignment.isInProgress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TimelineAlignment.referenceTimestamp(for:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TimelineAlignment.playerTimestamp(for:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TimelineAlignment.nonMatchingRangesInReference(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of TimelineAlignment.nonMatchingRangesInPlayer(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_1ACB7A2F0()
{
  return swift_bridgeObjectRelease();
}

uint64_t DownloadTaskIdentifier.init(session:identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1ACE74CF8();
  swift_allocObject();
  uint64_t v8 = sub_1ACE74CE8();
  sub_1ACE74CB8();
  swift_allocObject();
  swift_retain();
  uint64_t v9 = sub_1ACE74CA8();
  sub_1ACE74CC8();
  uint64_t result = swift_release();
  *a4 = a3;
  a4[1] = a1;
  a4[2] = a2;
  a4[3] = v8;
  a4[4] = v9;
  return result;
}

uint64_t DownloadTaskIdentifier.identifier.getter()
{
  return *(void *)v0;
}

uint64_t DownloadTaskIdentifier.session.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t DownloadTaskIdentifier.key.getter()
{
  return 0xD000000000000014;
}

unint64_t sub_1ACB7A528@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = DownloadTaskIdentifier.key.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t DownloadTaskIdentifier.fileName.getter()
{
  return DownloadTaskIdentifier.key.getter();
}

void DownloadTaskIdentifier.fileFormat.getter(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t DownloadTaskIdentifier.encode(_:)()
{
  return sub_1ACE74CD8();
}

uint64_t DownloadTaskIdentifier.decode(_:)()
{
  return sub_1ACE74C98();
}

void sub_1ACB7A60C(unsigned char *a1@<X8>)
{
}

uint64_t sub_1ACB7A624()
{
  return DownloadTaskIdentifier.encode(_:)();
}

uint64_t sub_1ACB7A63C()
{
  return DownloadTaskIdentifier.decode(_:)();
}

uint64_t static DownloadTaskIdentifier.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v4 = a1[2];
  uint64_t v5 = a2[2];
  uint64_t result = (v4 | v5) == 0;
  if (v4) {
    BOOL v7 = v5 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
    if (a1[1] == a2[1] && v4 == v5) {
      return 1;
    }
    else {
      return sub_1ACE77848();
    }
  }
  return result;
}

uint64_t DownloadTaskIdentifier.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1ACE77B28();
  if (!v1) {
    return sub_1ACE77B38();
  }
  sub_1ACE77B38();
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t DownloadTaskIdentifier.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACB7A7A4()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACB7A7E0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACB7A800()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1ACB7A844(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1ACB7A89C(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1ACB7A924(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t sub_1ACB7A97C(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1ACB7A9C4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for DownloadTaskIdentifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t DeletionDownloadConsistencyIssueResolutionStrategy.resolution(for:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DownloadConsistency.Issue(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1ACB7ACAC(a1, (uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_1ACB7AD14((uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DF40);
  swift_allocObject();
  v9[1] = sub_1ACE75A18();
  sub_1ACB7AD7C();
  uint64_t v7 = sub_1ACE75AD8();
  swift_release();
  return v7;
}

uint64_t sub_1ACB7AB6C(void (*a1)(unsigned char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E508);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = &v15[-v10];
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = &v15[-v12];
  sub_1ACB7ADD8(a3, (uint64_t)v8);
  swift_storeEnumTagMultiPayload();
  sub_1ACB7B34C((uint64_t)v8, (uint64_t)v11);
  sub_1ACB7B34C((uint64_t)v11, (uint64_t)v13);
  a1(v13);
  return sub_1ACB7B3B4((uint64_t)v13);
}

uint64_t sub_1ACB7ACAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DownloadConsistency.Issue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACB7AD14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DownloadConsistency.Issue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ACB7AD7C()
{
  unint64_t result = qword_1EB76DF38;
  if (!qword_1EB76DF38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB76DF40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76DF38);
  }
  return result;
}

uint64_t sub_1ACB7ADD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DownloadConsistency.Issue(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACB7ACAC(a1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, &v10[*(int *)(v19 + 48)], v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E478);
    uint64_t v20 = *(unsigned __int8 *)(*(void *)(type metadata accessor for DownloadedAssetEffect() - 8) + 80);
    uint64_t v25 = a1;
    uint64_t v21 = (v20 + 32) & ~v20;
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1ACE843F0;
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(v17 + v21, v7, v4);
    a1 = v25;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v22 = sub_1ACE75118();
    (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v10, v22);
  }
  else
  {
    uint64_t v11 = &v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898) + 48)];
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *((void *)v11 + 1);
    uint64_t v14 = sub_1ACE75118();
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v10, v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E478);
    uint64_t v15 = *(void *)(type metadata accessor for DownloadedAssetEffect() - 8);
    unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1ACE843F0;
    uint64_t v18 = (void *)(v17 + v16);
    *uint64_t v18 = v12;
    v18[1] = v13;
    swift_storeEnumTagMultiPayload();
  }
  sub_1ACB7ACAC(a1, a2);
  uint64_t result = type metadata accessor for DownloadConsistency.IssueResolution(0);
  *(void *)(a2 + *(int *)(result + 20)) = v17;
  return result;
}

uint64_t sub_1ACB7B174(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DownloadConsistency.Issue(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1ACB7ACAC(a1, (uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_1ACB7AD14((uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DF40);
  swift_allocObject();
  v9[1] = sub_1ACE75A18();
  sub_1ACB7AD7C();
  uint64_t v7 = sub_1ACE75AD8();
  swift_release();
  return v7;
}

ValueMetadata *type metadata accessor for DeletionDownloadConsistencyIssueResolutionStrategy()
{
  return &type metadata for DeletionDownloadConsistencyIssueResolutionStrategy;
}

uint64_t sub_1ACB7B2CC(void (*a1)(unsigned char *), uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for DownloadConsistency.Issue(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1ACB7AB6C(a1, a2, v6);
}

uint64_t sub_1ACB7B34C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACB7B3B4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E508);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of CategoriesSyncThresholdProviding.getCategoriesSyncThreshold()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1ACB7B504;
  return v7(a1, a2);
}

uint64_t sub_1ACB7B504(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

void static EpisodeDownloadState.defaultState.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = -64;
}

uint64_t EpisodeDownloadState.dictionaryKey.getter()
{
  uint64_t result = 0x64616F6C6E776F64;
  switch(*(unsigned __int8 *)(v0 + 16) >> 6)
  {
    case 3:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

BOOL EpisodeDownloadState.isDownloadedEpisode.getter()
{
  return (*(unsigned char *)(v0 + 16) & 0xC0) == 128;
}

BOOL EpisodeDownloadState.isDownloadingOrDownloaded.getter()
{
  return (*(unsigned __int8 *)(v0 + 16) >> 6) - 1 < 2u;
}

BOOL EpisodeDownloadState.isEpisodeFromiTunesSync.getter()
{
  return (*(unsigned char *)(v0 + 16) & 0xC1) == 129;
}

void sub_1ACB7B6DC(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = -64;
}

uint64_t sub_1ACB7B6EC()
{
  uint64_t result = 0x64616F6C6E776F64;
  switch(*(unsigned __int8 *)(v0 + 16) >> 6)
  {
    case 3:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t static EpisodeDownloadState.state(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 9);
  char v5 = *(unsigned char *)(a1 + 11);
  uint64_t result = Set<>.firstEpisodeUUID.getter(*(void *)a1);
  if (!v7)
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    char v8 = -2;
    goto LABEL_7;
  }
  if (v5)
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    char v8 = -64;
LABEL_7:
    *(unsigned char *)(a2 + 16) = v8;
    return result;
  }
  if (v3)
  {
    char v8 = v4 | 0x80;
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v7;
    goto LABEL_7;
  }
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v7;
  *(unsigned char *)(a2 + 16) = 0;
  return result;
}

void sub_1ACB7B7FC(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = -2;
}

void static EpisodeDownloadState.state(for:)(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = -2;
}

void static EpisodeDownloadState.episodeStateDomain.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t _s18PodcastsFoundation20EpisodeDownloadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v6 = *(uint64_t *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v7 >> 6)
  {
    case 1u:
      if ((v4 & 0xC0) != 0x40) {
        goto LABEL_26;
      }
      sub_1ACB7BB6C(*(void *)a2, *(void *)(a2 + 8), v7);
      sub_1ACB7BB6C(v3, v2, v4);
      if (*(double *)&v6 != *(double *)&v3) {
        goto LABEL_27;
      }
      char v9 = v2 ^ ((v5 & 1) == 0);
      return v9 & 1;
    case 2u:
      if ((v4 & 0xC0) != 0x80) {
        goto LABEL_25;
      }
      if (v6 == v3 && v5 == v2)
      {
        sub_1ACB7BB40(*(void *)a1, v2, v4);
        sub_1ACB7BB40(v3, v2, v7);
        sub_1ACB7BB6C(v3, v2, v7);
        sub_1ACB7BB6C(v3, v2, v4);
LABEL_32:
        char v9 = v4 ^ ((v7 & 1) == 0);
        return v9 & 1;
      }
      char v11 = sub_1ACE77848();
      sub_1ACB7BB40(v3, v2, v4);
      sub_1ACB7BB40(v6, v5, v7);
      sub_1ACB7BB6C(v6, v5, v7);
      sub_1ACB7BB6C(v3, v2, v4);
      char v9 = 0;
      if (v11) {
        goto LABEL_32;
      }
      return v9 & 1;
    case 3u:
      BOOL v12 = v4 >= 0xC0 && (v2 | v3) == 0;
      if (!v12 || v4 != 192) {
        goto LABEL_26;
      }
      sub_1ACB7BB6C(*(void *)a2, *(void *)(a2 + 8), v7);
      sub_1ACB7BB6C(0, 0, 0xC0u);
      char v9 = 1;
      return v9 & 1;
    default:
      if (v4 >= 0x40)
      {
LABEL_25:
        swift_bridgeObjectRetain();
LABEL_26:
        sub_1ACB7BB40(v3, v2, v4);
        sub_1ACB7BB6C(v6, v5, v7);
        sub_1ACB7BB6C(v3, v2, v4);
LABEL_27:
        char v9 = 0;
      }
      else
      {
        if (v6 == v3 && v5 == v2) {
          char v9 = 1;
        }
        else {
          char v9 = sub_1ACE77848();
        }
        sub_1ACB7BB40(v3, v2, v4);
        sub_1ACB7BB40(v6, v5, v7);
        sub_1ACB7BB6C(v6, v5, v7);
        sub_1ACB7BB6C(v3, v2, v4);
      }
      return v9 & 1;
  }
}

unint64_t sub_1ACB7BAC0(uint64_t a1)
{
  unint64_t result = sub_1ACB7BAE8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1ACB7BAE8()
{
  unint64_t result = qword_1EB7679C0;
  if (!qword_1EB7679C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7679C0);
  }
  return result;
}

uint64_t sub_1ACB7BB40(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (((a3 >> 6) & 1 | 2) == 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for EpisodeDownloadState(uint64_t a1)
{
  return sub_1ACB7BB6C(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
}

uint64_t sub_1ACB7BB6C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (((a3 >> 6) & 1 | 2) == 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s18PodcastsFoundation20EpisodeDownloadStateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned int v5 = *(unsigned __int8 *)(a2 + 16);
  sub_1ACB7BB40(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for EpisodeDownloadState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned int v5 = *(unsigned __int8 *)(a2 + 16);
  sub_1ACB7BB40(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned int v8 = *(unsigned __int8 *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1ACB7BB6C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for EpisodeDownloadState(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned int v6 = *(unsigned __int8 *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1ACB7BB6C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeDownloadState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 16) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for EpisodeDownloadState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 125;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_1ACB7BD1C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16) >> 6;
  if (v1 == 3) {
    return (*(_DWORD *)a1 + 3);
  }
  else {
    return v1;
  }
}

uint64_t sub_1ACB7BD38(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_1ACB7BD48(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)uint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = -64;
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeDownloadState()
{
  return &type metadata for EpisodeDownloadState;
}

uint64_t sub_1ACB7BD8C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1ACB7BDA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1ACB7BDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1ACB7BDC8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1ACB7BDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1ACB7BDF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1ACB7BE04(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_1ACB7BE18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_1ACB7BE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_1ACB7BE40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t sub_1ACB7BE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t sub_1ACB7BE68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t sub_1ACB7BE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 104))();
}

uint64_t sub_1ACB7BE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t sub_1ACB7BEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t sub_1ACB7BEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 128))();
}

uint64_t sub_1ACB7BECC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t sub_1ACB7BEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t sub_1ACB7BEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t sub_1ACB7BF08(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t sub_1ACB7BF3C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void))(a4 + 168))(a1, a2 & 1);
}

uint64_t sub_1ACB7BF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t sub_1ACB7BF68(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t sub_1ACB7BF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 192))();
}

uint64_t sub_1ACB7BF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 200))();
}

uint64_t sub_1ACB7BFA4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t sub_1ACB7BFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 216))();
}

uint64_t sub_1ACB7BFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 224))();
}

uint64_t sub_1ACB7BFE0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t sub_1ACB7BFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 240))();
}

uint64_t sub_1ACB7C008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 248))();
}

uint64_t sub_1ACB7C01C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t sub_1ACB7C050(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void))(a4 + 264))(a1, a2 & 1);
}

uint64_t sub_1ACB7C068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 272))();
}

uint64_t sub_1ACB7C07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 280))();
}

uint64_t sub_1ACB7C090(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 288))();
}

uint64_t sub_1ACB7C0C4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void))(a4 + 296))(a1, a2 & 1);
}

uint64_t sub_1ACB7C0DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 304))();
}

uint64_t sub_1ACB7C0F0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 312))();
}

uint64_t sub_1ACB7C124(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void))(a4 + 320))(a1, a2 & 1);
}

uint64_t sub_1ACB7C13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 328))();
}

uint64_t sub_1ACB7C150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 336))();
}

uint64_t sub_1ACB7C184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 344))();
}

uint64_t sub_1ACB7C198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 352))();
}

uint64_t MediaAPIResponse.init(objects:response:contentHash:parameters:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  uint64_t v7 = (uint64_t)a6 + *(int *)(type metadata accessor for MediaAPIResponse() + 36);
  return sub_1ACA56190(a5, v7);
}

uint64_t type metadata accessor for MediaAPIResponse()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t MediaAPIResponse.objects.getter()
{
  return swift_bridgeObjectRetain();
}

id MediaAPIResponse.response.getter()
{
  return *(id *)(v0 + 8);
}

uint64_t MediaAPIResponse.contentHash.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaAPIResponse.parameters.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACA394B0(v2 + *(int *)(a1 + 36), a2);
}

uint64_t sub_1ACB7C268()
{
  uint64_t result = type metadata accessor for MediaRequest.Params();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1ACB7C31C(void *a1, void *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v25 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v7 = (void *)a2[1];
    uint64_t v6 = a2[2];
    a1[1] = v7;
    a1[2] = v6;
    a1[3] = a2[3];
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v46 = a1;
    char v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)((char *)a2 + v8);
    uint64_t v12 = *(void *)((char *)a2 + v8 + 8);
    uint64_t v13 = *(void *)((char *)a2 + v8 + 16);
    uint64_t v14 = *(void *)((char *)a2 + v8 + 24);
    uint64_t v15 = *(void *)((char *)a2 + v8 + 32);
    unsigned __int8 v16 = *((unsigned char *)a2 + v8 + 40);
    swift_bridgeObjectRetain();
    id v17 = v7;
    swift_bridgeObjectRetain();
    sub_1ACB0F59C(v11, v12, v13, v14, v15, v16);
    *(void *)char v9 = v11;
    *((void *)v9 + 1) = v12;
    *((void *)v9 + 2) = v13;
    *((void *)v9 + 3) = v14;
    *((void *)v9 + 4) = v15;
    v9[40] = v16;
    v9[41] = v10[41];
    *((_WORD *)v9 + 21) = *((_WORD *)v10 + 21);
    uint64_t v18 = *((void *)v10 + 7);
    *((void *)v9 + 6) = *((void *)v10 + 6);
    *((void *)v9 + 7) = v18;
    uint64_t v19 = *((void *)v10 + 9);
    *((void *)v9 + 8) = *((void *)v10 + 8);
    *((void *)v9 + 9) = v19;
    uint64_t v41 = *((void *)v10 + 11);
    *((void *)v9 + 10) = *((void *)v10 + 10);
    *((void *)v9 + 11) = v41;
    uint64_t v42 = *((void *)v10 + 13);
    *((void *)v9 + 12) = *((void *)v10 + 12);
    *((void *)v9 + 13) = v42;
    uint64_t v44 = *((void *)v10 + 15);
    *((void *)v9 + 14) = *((void *)v10 + 14);
    *((void *)v9 + 15) = v44;
    *((void *)v9 + 16) = *((void *)v10 + 16);
    v9[136] = v10[136];
    *((void *)v9 + 18) = *((void *)v10 + 18);
    v9[152] = v10[152];
    uint64_t v43 = *((void *)v10 + 21);
    *((void *)v9 + 20) = *((void *)v10 + 20);
    *((void *)v9 + 21) = v43;
    v9[184] = v10[184];
    *((void *)v9 + 22) = *((void *)v10 + 22);
    *(_WORD *)(v9 + 185) = *(_WORD *)(v10 + 185);
    uint64_t v20 = (int *)type metadata accessor for MediaRequest.Params();
    uint64_t v21 = v20[26];
    __dst = &v9[v21];
    uint64_t v22 = &v10[v21];
    uint64_t v23 = sub_1ACE74F28();
    uint64_t v39 = *(void *)(v23 - 8);
    uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v40(v22, 1, v23))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(__dst, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(__dst, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v23);
    }
    uint64_t v26 = v20[27];
    id v27 = &v9[v26];
    uint64_t v28 = &v10[v26];
    uint64_t v29 = *((void *)v28 + 1);
    *(void *)id v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    v9[v20[28]] = v10[v20[28]];
    uint64_t v30 = v20[29];
    uint64_t v31 = &v9[v30];
    uint64_t v32 = &v10[v30];
    uint64_t v33 = *((void *)v32 + 1);
    *(void *)uint64_t v31 = *(void *)v32;
    *((void *)v31 + 1) = v33;
    *(void *)&v9[v20[30]] = *(void *)&v10[v20[30]];
    uint64_t v34 = v20[31];
    unint64_t v35 = &v9[v34];
    unint64_t v36 = &v10[v34];
    uint64_t v37 = *((void *)v36 + 1);
    *(void *)unint64_t v35 = *(void *)v36;
    *((void *)v35 + 1) = v37;
    v9[v20[32]] = v10[v20[32]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v46;
  }
  return (void *)v25;
}

uint64_t sub_1ACB7C694(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  sub_1ACA39518(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(unsigned char *)(v4 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for MediaRequest.Params() + 104);
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1ACB7C834(void *a1, void *a2, uint64_t a3)
{
  unsigned int v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = *(void *)((char *)a2 + v5);
  uint64_t v9 = *(void *)((char *)a2 + v5 + 8);
  uint64_t v10 = *(void *)((char *)a2 + v5 + 16);
  uint64_t v11 = *(void *)((char *)a2 + v5 + 24);
  uint64_t v12 = *(void *)((char *)a2 + v5 + 32);
  unsigned __int8 v13 = *((unsigned char *)a2 + v5 + 40);
  swift_bridgeObjectRetain();
  id v14 = v3;
  swift_bridgeObjectRetain();
  sub_1ACB0F59C(v8, v9, v10, v11, v12, v13);
  *(void *)uint64_t v6 = v8;
  *((void *)v6 + 1) = v9;
  *((void *)v6 + 2) = v10;
  *((void *)v6 + 3) = v11;
  *((void *)v6 + 4) = v12;
  v6[40] = v13;
  v6[41] = v7[41];
  *((_WORD *)v6 + 21) = *((_WORD *)v7 + 21);
  uint64_t v15 = *((void *)v7 + 7);
  *((void *)v6 + 6) = *((void *)v7 + 6);
  *((void *)v6 + 7) = v15;
  uint64_t v16 = *((void *)v7 + 9);
  *((void *)v6 + 8) = *((void *)v7 + 8);
  *((void *)v6 + 9) = v16;
  uint64_t v37 = *((void *)v7 + 11);
  *((void *)v6 + 10) = *((void *)v7 + 10);
  *((void *)v6 + 11) = v37;
  uint64_t v38 = *((void *)v7 + 13);
  *((void *)v6 + 12) = *((void *)v7 + 12);
  *((void *)v6 + 13) = v38;
  uint64_t v40 = *((void *)v7 + 15);
  *((void *)v6 + 14) = *((void *)v7 + 14);
  *((void *)v6 + 15) = v40;
  *((void *)v6 + 16) = *((void *)v7 + 16);
  v6[136] = v7[136];
  *((void *)v6 + 18) = *((void *)v7 + 18);
  v6[152] = v7[152];
  uint64_t v39 = *((void *)v7 + 21);
  *((void *)v6 + 20) = *((void *)v7 + 20);
  *((void *)v6 + 21) = v39;
  v6[184] = v7[184];
  *((void *)v6 + 22) = *((void *)v7 + 22);
  *(_WORD *)(v6 + 185) = *(_WORD *)(v7 + 185);
  id v17 = (int *)type metadata accessor for MediaRequest.Params();
  uint64_t v18 = v17[26];
  __dst = &v6[v18];
  uint64_t v19 = &v7[v18];
  uint64_t v20 = sub_1ACE74F28();
  uint64_t v35 = *(void *)(v20 - 8);
  unint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v36(v19, 1, v20))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(__dst, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(__dst, v19, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v20);
  }
  uint64_t v22 = v17[27];
  uint64_t v23 = &v6[v22];
  uint64_t v24 = &v7[v22];
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = v25;
  v6[v17[28]] = v7[v17[28]];
  uint64_t v26 = v17[29];
  id v27 = &v6[v26];
  uint64_t v28 = &v7[v26];
  uint64_t v29 = *((void *)v28 + 1);
  *(void *)id v27 = *(void *)v28;
  *((void *)v27 + 1) = v29;
  *(void *)&v6[v17[30]] = *(void *)&v7[v17[30]];
  uint64_t v30 = v17[31];
  uint64_t v31 = &v6[v30];
  uint64_t v32 = &v7[v30];
  uint64_t v33 = *((void *)v32 + 1);
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = v33;
  v6[v17[32]] = v7[v17[32]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1ACB7CB58(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a2[1];
  uint64_t v7 = (void *)a1[1];
  a1[1] = v6;
  id v8 = v6;

  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v45 = a1;
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = *(void *)((char *)a2 + v9);
  uint64_t v13 = *(void *)((char *)a2 + v9 + 8);
  uint64_t v14 = *((void *)v11 + 2);
  uint64_t v15 = *((void *)v11 + 3);
  uint64_t v16 = *((void *)v11 + 4);
  unsigned __int8 v17 = v11[40];
  sub_1ACB0F59C(v12, v13, v14, v15, v16, v17);
  uint64_t v18 = *(void *)v10;
  uint64_t v19 = *((void *)v10 + 1);
  uint64_t v20 = *((void *)v10 + 2);
  uint64_t v21 = *((void *)v10 + 3);
  uint64_t v22 = *((void *)v10 + 4);
  *(void *)uint64_t v10 = v12;
  *((void *)v10 + 1) = v13;
  *((void *)v10 + 2) = v14;
  *((void *)v10 + 3) = v15;
  *((void *)v10 + 4) = v16;
  unsigned __int8 v23 = v10[40];
  v10[40] = v17;
  sub_1ACA39518(v18, v19, v20, v21, v22, v23);
  v10[41] = v11[41];
  v10[42] = v11[42];
  v10[43] = v11[43];
  *((void *)v10 + 6) = *((void *)v11 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v10 + 7) = *((void *)v11 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v10 + 8) = *((void *)v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v10 + 9) = *((void *)v11 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v10 + 10) = *((void *)v11 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v10 + 11) = *((void *)v11 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v10 + 12) = *((void *)v11 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v10 + 13) = *((void *)v11 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v10 + 14) = *((void *)v11 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v10 + 15) = *((void *)v11 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v10 + 16) = *((void *)v11 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[136] = v11[136];
  uint64_t v24 = *((void *)v11 + 18);
  v10[152] = v11[152];
  *((void *)v10 + 18) = v24;
  *((void *)v10 + 20) = *((void *)v11 + 20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v10 + 21) = *((void *)v11 + 21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = *((void *)v11 + 22);
  v10[184] = v11[184];
  *((void *)v10 + 22) = v25;
  v10[185] = v11[185];
  v10[186] = v11[186];
  uint64_t v26 = (int *)type metadata accessor for MediaRequest.Params();
  uint64_t v27 = v26[26];
  uint64_t v28 = &v10[v27];
  uint64_t v29 = &v11[v27];
  uint64_t v30 = sub_1ACE74F28();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  LODWORD(v16) = v32(v28, 1, v30);
  int v33 = v32(v29, 1, v30);
  if (!v16)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 24))(v28, v29, v30);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
    goto LABEL_6;
  }
  if (v33)
  {
LABEL_6:
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v28, v29, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
LABEL_7:
  uint64_t v35 = v26[27];
  unint64_t v36 = &v10[v35];
  uint64_t v37 = &v11[v35];
  *(void *)unint64_t v36 = *(void *)v37;
  *((void *)v36 + 1) = *((void *)v37 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[v26[28]] = v11[v26[28]];
  uint64_t v38 = v26[29];
  uint64_t v39 = &v10[v38];
  uint64_t v40 = &v11[v38];
  *(void *)uint64_t v39 = *(void *)v40;
  *((void *)v39 + 1) = *((void *)v40 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v10[v26[30]] = *(void *)&v11[v26[30]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = v26[31];
  uint64_t v42 = &v10[v41];
  uint64_t v43 = &v11[v41];
  *(void *)uint64_t v42 = *(void *)v43;
  *((void *)v42 + 1) = *((void *)v43 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[v26[32]] = v11[v26[32]];
  return v45;
}

uint64_t sub_1ACB7CFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  long long v8 = *(_OWORD *)(a2 + v5 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)(a2 + v5);
  *(_OWORD *)(v6 + 16) = v8;
  *(_OWORD *)(v6 + 25) = *(_OWORD *)(a2 + v5 + 25);
  *(_WORD *)(v6 + 41) = *(_WORD *)(a2 + v5 + 41);
  *(unsigned char *)(v6 + 43) = *(unsigned char *)(a2 + v5 + 43);
  long long v9 = *(_OWORD *)(a2 + v5 + 64);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a2 + v5 + 48);
  *(_OWORD *)(v6 + 64) = v9;
  long long v10 = *(_OWORD *)(a2 + v5 + 96);
  *(_OWORD *)(v6 + 80) = *(_OWORD *)(a2 + v5 + 80);
  *(_OWORD *)(v6 + 96) = v10;
  *(_OWORD *)(v6 + 112) = *(_OWORD *)(a2 + v5 + 112);
  *(void *)(v6 + 128) = *(void *)(a2 + v5 + 128);
  *(unsigned char *)(v6 + 136) = *(unsigned char *)(a2 + v5 + 136);
  uint64_t v11 = *(void *)(a2 + v5 + 144);
  *(unsigned char *)(v6 + 152) = *(unsigned char *)(v7 + 152);
  *(void *)(v6 + 144) = v11;
  *(_OWORD *)(v6 + 160) = *(_OWORD *)(v7 + 160);
  uint64_t v12 = *(void *)(v7 + 176);
  *(unsigned char *)(v6 + 184) = *(unsigned char *)(v7 + 184);
  *(void *)(v6 + 176) = v12;
  *(unsigned char *)(v6 + 185) = *(unsigned char *)(v7 + 185);
  *(unsigned char *)(v6 + 186) = *(unsigned char *)(v7 + 186);
  uint64_t v13 = (int *)type metadata accessor for MediaRequest.Params();
  uint64_t v14 = v13[26];
  uint64_t v15 = (void *)(v6 + v14);
  uint64_t v16 = (const void *)(v7 + v14);
  uint64_t v17 = sub_1ACE74F28();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  *(_OWORD *)(v6 + v13[27]) = *(_OWORD *)(v7 + v13[27]);
  *(unsigned char *)(v6 + v13[28]) = *(unsigned char *)(v7 + v13[28]);
  *(_OWORD *)(v6 + v13[29]) = *(_OWORD *)(v7 + v13[29]);
  *(void *)(v6 + v13[30]) = *(void *)(v7 + v13[30]);
  *(_OWORD *)(v6 + v13[31]) = *(_OWORD *)(v7 + v13[31]);
  *(unsigned char *)(v6 + v13[32]) = *(unsigned char *)(v7 + v13[32]);
  return a1;
}

void *sub_1ACB7D1DC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a1[1];
  a1[1] = a2[1];

  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v46 = a1;
  long long v9 = (char *)a1 + v8;
  long long v10 = (char *)a2 + v8;
  uint64_t v11 = *(void *)((char *)a2 + v8 + 32);
  char v12 = v10[40];
  uint64_t v13 = *(void *)v9;
  uint64_t v14 = *((void *)v9 + 1);
  uint64_t v15 = *((void *)v9 + 2);
  uint64_t v16 = *((void *)v9 + 3);
  uint64_t v17 = *((void *)v9 + 4);
  long long v18 = *((_OWORD *)v10 + 1);
  *(_OWORD *)long long v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v18;
  *((void *)v9 + 4) = v11;
  unsigned __int8 v19 = v9[40];
  v9[40] = v12;
  sub_1ACA39518(v13, v14, v15, v16, v17, v19);
  v9[41] = v10[41];
  *((_WORD *)v9 + 21) = *((_WORD *)v10 + 21);
  *((void *)v9 + 6) = *((void *)v10 + 6);
  swift_bridgeObjectRelease();
  *((void *)v9 + 7) = *((void *)v10 + 7);
  swift_bridgeObjectRelease();
  *((void *)v9 + 8) = *((void *)v10 + 8);
  swift_bridgeObjectRelease();
  *((void *)v9 + 9) = *((void *)v10 + 9);
  swift_bridgeObjectRelease();
  *((void *)v9 + 10) = *((void *)v10 + 10);
  swift_bridgeObjectRelease();
  *((void *)v9 + 11) = *((void *)v10 + 11);
  swift_bridgeObjectRelease();
  *((void *)v9 + 12) = *((void *)v10 + 12);
  swift_bridgeObjectRelease();
  *((void *)v9 + 13) = *((void *)v10 + 13);
  swift_bridgeObjectRelease();
  *((void *)v9 + 14) = *((void *)v10 + 14);
  swift_bridgeObjectRelease();
  *((void *)v9 + 15) = *((void *)v10 + 15);
  swift_bridgeObjectRelease();
  *((void *)v9 + 16) = *((void *)v10 + 16);
  swift_bridgeObjectRelease();
  v9[136] = v10[136];
  *((void *)v9 + 18) = *((void *)v10 + 18);
  v9[152] = v10[152];
  *((void *)v9 + 20) = *((void *)v10 + 20);
  swift_bridgeObjectRelease();
  *((void *)v9 + 21) = *((void *)v10 + 21);
  swift_bridgeObjectRelease();
  *((void *)v9 + 22) = *((void *)v10 + 22);
  *((_WORD *)v9 + 92) = *((_WORD *)v10 + 92);
  v9[186] = v10[186];
  uint64_t v20 = (int *)type metadata accessor for MediaRequest.Params();
  uint64_t v21 = v20[26];
  uint64_t v22 = &v9[v21];
  unsigned __int8 v23 = &v10[v21];
  uint64_t v24 = sub_1ACE74F28();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_7:
  uint64_t v30 = v20[27];
  uint64_t v31 = &v9[v30];
  uint64_t v32 = &v10[v30];
  uint64_t v34 = *(void *)v32;
  uint64_t v33 = *((void *)v32 + 1);
  *(void *)uint64_t v31 = v34;
  *((void *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  v9[v20[28]] = v10[v20[28]];
  uint64_t v35 = v20[29];
  unint64_t v36 = &v9[v35];
  uint64_t v37 = &v10[v35];
  uint64_t v39 = *(void *)v37;
  uint64_t v38 = *((void *)v37 + 1);
  *(void *)unint64_t v36 = v39;
  *((void *)v36 + 1) = v38;
  swift_bridgeObjectRelease();
  *(void *)&v9[v20[30]] = *(void *)&v10[v20[30]];
  swift_bridgeObjectRelease();
  uint64_t v40 = v20[31];
  uint64_t v41 = &v9[v40];
  uint64_t v42 = &v10[v40];
  uint64_t v44 = *(void *)v42;
  uint64_t v43 = *((void *)v42 + 1);
  *(void *)uint64_t v41 = v44;
  *((void *)v41 + 1) = v43;
  swift_bridgeObjectRelease();
  v9[v20[32]] = v10[v20[32]];
  return v46;
}

uint64_t sub_1ACB7D570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACB7D584);
}

uint64_t sub_1ACB7D584(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MediaRequest.Params();
    long long v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1ACB7D634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACB7D648);
}

void *sub_1ACB7D648(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MediaRequest.Params();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1ACB7D6F0(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  if (!v5) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v10 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v8 << 6))
  {
    uint64_t v12 = *(void *)(a1 + 48) + 16 * i;
    if (*(unsigned char *)(v12 + 8))
    {
      if (v5) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v16 = *(void *)v12;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1ACA43384(0, v9[2] + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      unint64_t v18 = v9[2];
      unint64_t v17 = v9[3];
      if (v18 >= v17 >> 1)
      {
        uint64_t result = (uint64_t)sub_1ACA43384((void *)(v17 > 1), v18 + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      void v9[2] = v18 + 1;
      v9[v18 + 4] = v16;
      if (v5) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v13 >= v6) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v2 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v6) {
        goto LABEL_29;
      }
      unint64_t v14 = *(void *)(v2 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v6) {
          goto LABEL_29;
        }
        unint64_t v14 = *(void *)(v2 + 8 * v8);
        if (!v14)
        {
          int64_t v8 = v13 + 3;
          if (v13 + 3 >= v6) {
            goto LABEL_29;
          }
          unint64_t v14 = *(void *)(v2 + 8 * v8);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v6)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v9;
  }
  unint64_t v14 = *(void *)(v2 + 8 * v15);
  if (v14)
  {
    int64_t v8 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v2 + 8 * v8);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

unint64_t sub_1ACB7D8DC(char a1)
{
  unint64_t result = 0x616C507472617473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 2:
      unint64_t result = 0x51746E6576657270;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x616C507472616D73;
      break;
    case 5:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACB7D9DC()
{
  return sub_1ACB7D8DC(*v0);
}

uint64_t sub_1ACB7D9E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACB99790(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACB7DA0C(uint64_t a1)
{
  unint64_t v2 = sub_1ACB7E370();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB7DA48(uint64_t a1)
{
  unint64_t v2 = sub_1ACB7E370();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACB7DA84(uint64_t a1)
{
  unint64_t v2 = sub_1ACB7E46C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB7DAC0(uint64_t a1)
{
  unint64_t v2 = sub_1ACB7E46C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACB7DAFC(uint64_t a1)
{
  unint64_t v2 = sub_1ACB7E3C4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB7DB38(uint64_t a1)
{
  unint64_t v2 = sub_1ACB7E3C4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACB7DB74(uint64_t a1)
{
  unint64_t v2 = sub_1ACB7E514();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB7DBB0(uint64_t a1)
{
  unint64_t v2 = sub_1ACB7E514();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACB7DBEC(uint64_t a1)
{
  unint64_t v2 = sub_1ACB7E4C0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB7DC28(uint64_t a1)
{
  unint64_t v2 = sub_1ACB7E4C0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACB7DC64(uint64_t a1)
{
  unint64_t v2 = sub_1ACB7E418();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB7DCA0(uint64_t a1)
{
  unint64_t v2 = sub_1ACB7E418();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACB7DCDC(uint64_t a1)
{
  unint64_t v2 = sub_1ACB7E568();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB7DD18(uint64_t a1)
{
  unint64_t v2 = sub_1ACB7E568();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PlaybackIntent.Option.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2930);
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v40 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2938);
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v37 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2940);
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v36 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v34 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2948);
  uint64_t v32 = *(void *)(v10 - 8);
  uint64_t v33 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v31 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2950);
  uint64_t v44 = *(void *)(v12 - 8);
  uint64_t v45 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v43 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2958);
  uint64_t v29 = *(void *)(v14 - 8);
  uint64_t v30 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2960);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *v2;
  int v22 = *((unsigned __int8 *)v2 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACB7E370();
  sub_1ACE77C78();
  if (v22 == 1)
  {
    switch(v21)
    {
      case 1:
        char v48 = 2;
        sub_1ACB7E4C0();
        uint64_t v16 = v31;
        sub_1ACE776D8();
        uint64_t v24 = v32;
        uint64_t v23 = v33;
        break;
      case 2:
        char v49 = 3;
        sub_1ACB7E46C();
        uint64_t v16 = v34;
        sub_1ACE776D8();
        uint64_t v24 = v35;
        uint64_t v23 = v36;
        break;
      case 3:
        char v50 = 4;
        sub_1ACB7E418();
        uint64_t v16 = v37;
        sub_1ACE776D8();
        uint64_t v24 = v38;
        uint64_t v23 = v39;
        break;
      case 4:
        char v51 = 5;
        sub_1ACB7E3C4();
        uint64_t v16 = v40;
        sub_1ACE776D8();
        uint64_t v24 = v41;
        uint64_t v23 = v42;
        break;
      default:
        char v46 = 0;
        sub_1ACB7E568();
        sub_1ACE776D8();
        uint64_t v24 = v29;
        uint64_t v23 = v30;
        break;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v16, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  else
  {
    char v47 = 1;
    sub_1ACB7E514();
    uint64_t v25 = v43;
    sub_1ACE776D8();
    uint64_t v26 = v45;
    sub_1ACE77768();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v25, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
}

unint64_t sub_1ACB7E370()
{
  unint64_t result = qword_1E99F2968;
  if (!qword_1E99F2968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2968);
  }
  return result;
}

unint64_t sub_1ACB7E3C4()
{
  unint64_t result = qword_1E99F2970;
  if (!qword_1E99F2970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2970);
  }
  return result;
}

unint64_t sub_1ACB7E418()
{
  unint64_t result = qword_1E99F2978;
  if (!qword_1E99F2978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2978);
  }
  return result;
}

unint64_t sub_1ACB7E46C()
{
  unint64_t result = qword_1E99F2980;
  if (!qword_1E99F2980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2980);
  }
  return result;
}

unint64_t sub_1ACB7E4C0()
{
  unint64_t result = qword_1E99F2988;
  if (!qword_1E99F2988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2988);
  }
  return result;
}

unint64_t sub_1ACB7E514()
{
  unint64_t result = qword_1E99F2990;
  if (!qword_1E99F2990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2990);
  }
  return result;
}

unint64_t sub_1ACB7E568()
{
  unint64_t result = qword_1E99F2998;
  if (!qword_1E99F2998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2998);
  }
  return result;
}

uint64_t PlaybackIntent.Option.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F29A0);
  uint64_t v52 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  char v64 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F29A8);
  uint64_t v55 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v63 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F29B0);
  uint64_t v50 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  char v61 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F29B8);
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v54 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v60 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F29C0);
  uint64_t v51 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F29C8);
  uint64_t v49 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F29D0);
  uint64_t v14 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_1ACB7E370();
  uint64_t v18 = v66;
  sub_1ACE77C48();
  if (v18) {
    goto LABEL_15;
  }
  uint64_t v19 = v13;
  uint64_t v45 = v11;
  char v47 = v10;
  uint64_t v20 = v60;
  uint64_t v46 = v8;
  uint64_t v21 = v61;
  uint64_t v22 = v62;
  uint64_t v24 = v63;
  uint64_t v23 = v64;
  uint64_t v48 = 0;
  uint64_t v66 = v14;
  uint64_t v25 = sub_1ACE776B8();
  if (*(void *)(v25 + 16) != 1)
  {
    uint64_t v30 = sub_1ACE77328();
    swift_allocError();
    uint64_t v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0EC8);
    *uint64_t v32 = &type metadata for PlaybackIntent.Option;
    sub_1ACE775E8();
    sub_1ACE77308();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x1E4FBBA70], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v16, v22);
LABEL_15:
    uint64_t v37 = (uint64_t)v65;
    return __swift_destroy_boxed_opaque_existential_0(v37);
  }
  uint64_t v26 = v66;
  switch(*(unsigned char *)(v25 + 32))
  {
    case 1:
      char v68 = 1;
      sub_1ACB7E514();
      uint64_t v34 = v47;
      uint64_t v33 = v48;
      sub_1ACE775D8();
      if (v33) {
        goto LABEL_14;
      }
      uint64_t v35 = v46;
      sub_1ACE77678();
      uint64_t v29 = v36;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v35);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v22);
      uint64_t v37 = (uint64_t)v65;
      char v28 = 0;
      goto LABEL_24;
    case 2:
      char v69 = 2;
      sub_1ACB7E4C0();
      uint64_t v38 = v48;
      sub_1ACE775D8();
      if (v38) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v53 + 8))(v20, v54);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v22);
      char v28 = 1;
      uint64_t v39 = 1;
      goto LABEL_22;
    case 3:
      char v70 = 3;
      sub_1ACB7E46C();
      uint64_t v40 = v48;
      sub_1ACE775D8();
      if (v40) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v50 + 8))(v21, v56);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v22);
      char v28 = 1;
      uint64_t v39 = 2;
      goto LABEL_22;
    case 4:
      char v64 = (char *)v25;
      char v71 = 4;
      sub_1ACB7E418();
      uint64_t v41 = v48;
      sub_1ACE775D8();
      if (v41) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v55 + 8))(v24, v57);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v22);
      char v28 = 1;
      uint64_t v39 = 3;
      goto LABEL_22;
    case 5:
      char v72 = 5;
      sub_1ACB7E3C4();
      uint64_t v43 = v48;
      sub_1ACE775D8();
      if (v43) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v52 + 8))(v23, v58);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v22);
      char v28 = 1;
      uint64_t v39 = 4;
LABEL_22:
      uint64_t v29 = v39;
      goto LABEL_23;
    default:
      char v64 = (char *)v25;
      char v67 = 0;
      sub_1ACB7E568();
      uint64_t v27 = v48;
      sub_1ACE775D8();
      if (v27)
      {
LABEL_14:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v22);
        goto LABEL_15;
      }
      (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v45);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v22);
      char v28 = 1;
      uint64_t v29 = 0;
LABEL_23:
      uint64_t v37 = (uint64_t)v65;
LABEL_24:
      uint64_t v44 = v59;
      *uint64_t v59 = v29;
      *((unsigned char *)v44 + 8) = v28;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_0(v37);
}

uint64_t sub_1ACB7EEF0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PlaybackIntent.Option.init(from:)(a1, a2);
}

uint64_t sub_1ACB7EF08(void *a1)
{
  return PlaybackIntent.Option.encode(to:)(a1);
}

uint64_t PlaybackIntent.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  unsigned __int8 v6 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(a1 + 32) = v6;
  return sub_1ACA639E4(v2, v3, v4, v5, v6);
}

void PlaybackIntent.listSettings.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v6 = *(void *)(v1 + 72);
  uint64_t v7 = *(void *)(v1 + 80);
  uint64_t v8 = *(void *)(v1 + 88);
  uint64_t v9 = *(void *)(v1 + 96);
  uint64_t v10 = *(void *)(v1 + 104);
  uint64_t v11 = *(void *)(v1 + 112);
  char v12 = *(unsigned char *)(v1 + 122);
  __int16 v13 = *(_WORD *)(v1 + 120);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 82) = v12;
  *(_WORD *)(a1 + 80) = v13;
  sub_1ACA63A5C(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v13);
}

uint64_t PlaybackIntent.initialItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PlaybackIntent(0);
  return sub_1ACA3AAD4(v1 + *(int *)(v3 + 24), a1, &qword_1EB76EFA0);
}

uint64_t type metadata accessor for PlaybackIntent(uint64_t a1)
{
  return sub_1ACA31990(a1, qword_1EB773408);
}

uint64_t PlaybackIntent.options.getter()
{
  type metadata accessor for PlaybackIntent(0);
  return swift_bridgeObjectRetain();
}

uint64_t PlaybackIntent.mrDesiredSessionID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PlaybackIntent(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static Set<>.default.getter()
{
  if (qword_1E99EFEC8 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t PlaybackIntent.init(id:listSettings:initialItem:options:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_1ACE75118();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  __int16 v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 16) = v14;
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a5 + 40) = *(_OWORD *)a2;
  *(_OWORD *)(a5 + 56) = v15;
  long long v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a5 + 72) = *(_OWORD *)(a2 + 32);
  __int16 v17 = *(_WORD *)(a2 + 80);
  char v18 = *(unsigned char *)(a2 + 82);
  *(unsigned char *)(a5 + 32) = *(unsigned char *)(a1 + 32);
  *(_OWORD *)(a5 + 88) = v16;
  *(_OWORD *)(a5 + 104) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a5 + 122) = v18;
  *(_WORD *)(a5 + 120) = v17;
  uint64_t v19 = (int *)type metadata accessor for PlaybackIntent(0);
  sub_1ACA3AAD4(a3, a5 + v19[6], &qword_1EB76EFA0);
  sub_1ACE75108();
  uint64_t v20 = sub_1ACE750C8();
  uint64_t v22 = v21;
  sub_1ACA50E78(a3, &qword_1EB76EFA0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v24 = (uint64_t *)(a5 + v19[8]);
  uint64_t *v24 = v20;
  v24[1] = v22;
  *(void *)(a5 + v19[7]) = a4;
  return result;
}

uint64_t PlaybackIntent.validatedIntent()(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  v2[14] = swift_task_alloc();
  uint64_t v3 = sub_1ACE74F28();
  v2[15] = v3;
  v2[16] = *(void *)(v3 - 8);
  v2[17] = swift_task_alloc();
  uint64_t v4 = sub_1ACE75118();
  v2[18] = v4;
  v2[19] = *(void *)(v4 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = type metadata accessor for PlaybackIntent(0);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  unsigned char v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v2[27] = v5;
  v2[28] = *(void *)(v5 - 8);
  v2[29] = swift_task_alloc();
  v2[30] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACB7F4BC, 0, 0);
}

uint64_t sub_1ACB7F4BC()
{
  uint64_t v1 = v0[13];
  switch(*(unsigned char *)(v1 + 32))
  {
    case 2:
    case 4:
      goto LABEL_3;
    case 5:
    case 6:
    case 7:
      goto LABEL_7;
    case 8:
      if (*(void *)(v1 + 8) | *(void *)v1 | *(void *)(v1 + 16) | *(void *)(v1 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_2;
    default:
LABEL_2:
      uint64_t v2 = v0[34];
      uint64_t v3 = v0[27];
      uint64_t v4 = v0[28];
      sub_1ACA3AAD4(v1 + *(int *)(v0[21] + 24), v2, &qword_1EB76EFA0);
      LODWORD(v3) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
      sub_1ACA50E78(v2, &qword_1EB76EFA0);
      uint64_t v1 = v0[13];
      if (v3 == 1)
      {
LABEL_7:
        sub_1ACB85B80(v1, v0[12], type metadata accessor for PlaybackIntent);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v9 = (uint64_t (*)(void))v0[1];
        return v9();
      }
      else
      {
LABEL_3:
        uint64_t v5 = swift_task_alloc();
        v0[35] = v5;
        *(void *)(v5 + 16) = v1;
        uint64_t v6 = (void *)swift_task_alloc();
        v0[36] = v6;
        *uint64_t v6 = v0;
        v6[1] = sub_1ACB7F780;
        uint64_t v7 = v0[33];
        uint64_t v8 = v0[30];
        return MEMORY[0x1F41880D8](v7, 0, 0, 0xD000000000000012, 0x80000001ACECAB70, sub_1ACB85B58, v5, v8);
      }
  }
}

uint64_t sub_1ACB7F780()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1ACB7F898, 0, 0);
}

uint64_t sub_1ACB7F898()
{
  void (*v91)(long long *__return_ptr, uint64_t, _UNKNOWN **);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t@<X0>, uint64_t@<X1>, long long *@<X2>, uint64_t@<X3>, uint64_t@<X8>);
  void (*v111)(long long *__return_ptr, uint64_t, _UNKNOWN **);
  uint64_t v112;
  uint64_t v113;
  uint64_t *boxed_opaque_existential_1;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t EpisodeListBuilder;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  unsigned __int8 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  long long v153;
  long long v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unsigned __int16 v161;
  unsigned __int8 v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unsigned __int8 v167;
  void *v168;
  uint64_t v169;

  v168 = v0;
  uint64_t v1 = v0;
  uint64_t v3 = v0[32];
  uint64_t v2 = v0[33];
  uint64_t v4 = v0[28];
  uint64_t v5 = v1[27];
  sub_1ACA3AAD4(v2, v3, &qword_1EB76EFA0);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v3, 1, v5);
  uint64_t v7 = v1[32];
  if (v6 != 1)
  {
    uint64_t v8 = v1[29];
    uint64_t v9 = v1[27];
    sub_1ACB85BE8(v7, v8, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    switch(*(unsigned char *)(v8 + *(int *)(v9 + 112)))
    {
      case 4:
        swift_bridgeObjectRelease();
        goto LABEL_16;
      case 5:
        goto LABEL_5;
      default:
        char v10 = sub_1ACE77848();
        swift_bridgeObjectRelease();
        if (v10)
        {
LABEL_16:
          uint64_t v13 = v1[29];
          if (*(void *)(v13 + 24))
          {
            uint64_t v17 = v1[15];
            uint64_t v18 = v1[16];
            uint64_t v19 = v1[14];
            swift_bridgeObjectRetain();
            sub_1ACE74EF8();
            swift_bridgeObjectRelease();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v19, 1, v17) != 1)
            {
              uint64_t v13 = v1[29];
              uint64_t v22 = v1[16];
              uint64_t v23 = v1[17];
              uint64_t v24 = v1[15];
              (*(void (**)(uint64_t, void, uint64_t))(v22 + 32))(v23, v1[14], v24);
              type metadata accessor for PlaybackIntent.ValidationError(0);
              sub_1ACB85CB0(&qword_1E99F29E0, (void (*)(uint64_t))type metadata accessor for PlaybackIntent.ValidationError);
              swift_allocError();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v25, v23, v24);
              swift_storeEnumTagMultiPayload();
              swift_willThrow();
              (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v24);
              goto LABEL_22;
            }
            sub_1ACA50E78(v1[14], &qword_1EB7731B0);
            uint64_t v13 = v1[29];
          }
          goto LABEL_19;
        }
LABEL_5:
        unsigned int v11 = *(unsigned __int8 *)(v1[29] + *(int *)(v1[27] + 108));
        sub_1ACB85B80(v1[13], v1[26], type metadata accessor for PlaybackIntent);
        if (v11 > 4 || ((1 << v11) & 0x19) == 0)
        {
          uint64_t v26 = v1[26];
          char v27 = sub_1ACB80C14();
          sub_1ACB85C50(v26, type metadata accessor for PlaybackIntent);
          if ((v27 & 1) == 0)
          {
            uint64_t v13 = v1[29];
            type metadata accessor for PlaybackIntent.ValidationError(0);
            sub_1ACB85CB0(&qword_1E99F29E0, (void (*)(uint64_t))type metadata accessor for PlaybackIntent.ValidationError);
            swift_allocError();
            goto LABEL_20;
          }
        }
        else
        {
          sub_1ACB85C50(v1[26], type metadata accessor for PlaybackIntent);
        }
        uint64_t v13 = v1[29];
        uint64_t v14 = v1[27];
        if (*(unsigned char *)(v13 + *(int *)(v14 + 100)))
        {
          if ((*(unsigned char *)(v13 + 56) & 1) == 0)
          {
            uint64_t v15 = *(void *)(v13 + 48);
            type metadata accessor for PlaybackIntent.ValidationError(0);
            sub_1ACB85CB0(&qword_1E99F29E0, (void (*)(uint64_t))type metadata accessor for PlaybackIntent.ValidationError);
            swift_allocError();
            *long long v16 = v15;
            swift_storeEnumTagMultiPayload();
LABEL_21:
            swift_willThrow();
LABEL_22:
            sub_1ACB85C50(v13, type metadata accessor for PodcastsMediaLibrary.MediaItem);
            goto LABEL_23;
          }
          goto LABEL_19;
        }
        if (*(unsigned char *)(v13 + *(int *)(v14 + 96)))
        {
LABEL_19:
          type metadata accessor for PlaybackIntent.ValidationError(0);
          sub_1ACB85CB0(&qword_1E99F29E0, (void (*)(uint64_t))type metadata accessor for PlaybackIntent.ValidationError);
          swift_allocError();
LABEL_20:
          swift_storeEnumTagMultiPayload();
          goto LABEL_21;
        }
        uint64_t v28 = v1[25];
        uint64_t v29 = v1[13];
        int v30 = MTPlaybackContinuousPlaybackEnabled();
        sub_1ACB85B80(v29, v28, type metadata accessor for PlaybackIntent);
        if (!v30) {
          goto LABEL_37;
        }
        uint64_t v31 = *(void *)(v1[25] + *(int *)(v1[21] + 28));
        if (*(void *)(v31 + 16)
          && (sub_1ACE77B18(),
              sub_1ACE77B28(),
              uint64_t v32 = sub_1ACE77B78(),
              uint64_t v33 = -1 << *(unsigned char *)(v31 + 32),
              unint64_t v34 = v32 & ~v33,
              ((*(void *)(v31 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) != 0))
        {
          uint64_t v35 = ~v33;
          while (1)
          {
            uint64_t v36 = *(void *)(v31 + 48) + 16 * v34;
            if (*(unsigned char *)(v36 + 8) == 1 && *(void *)v36 == 1) {
              break;
            }
            unint64_t v34 = (v34 + 1) & v35;
            if (((*(void *)(v31 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) == 0) {
              goto LABEL_45;
            }
          }
LABEL_37:
          uint64_t v37 = v1[24];
          uint64_t v38 = v1[21];
          uint64_t v39 = v1[13];
          sub_1ACB85C50(v1[25], type metadata accessor for PlaybackIntent);
          sub_1ACB85B80(v39, v37, type metadata accessor for PlaybackIntent);
          uint64_t v40 = *(void *)(v37 + *(int *)(v38 + 28));
          if (!*(void *)(v40 + 16)
            || (sub_1ACE77B18(),
                sub_1ACE77B28(),
                uint64_t v41 = sub_1ACE77B78(),
                uint64_t v42 = -1 << *(unsigned char *)(v40 + 32),
                unint64_t v43 = v41 & ~v42,
                ((*(void *)(v40 + 56 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0))
          {
LABEL_44:
            uint64_t v46 = v1[13];
            sub_1ACB85C50(v1[24], type metadata accessor for PlaybackIntent);
            char v47 = *(unsigned char *)(v46 + 32);
            long long v48 = *(_OWORD *)(v46 + 16);
            uint64_t v153 = *(_OWORD *)v46;
            v154 = v48;
            LOBYTE(v155) = v47;
            sub_1ACB80D1C((uint64_t)&v163);
            uint64_t v50 = v163;
            uint64_t v49 = v164;
            uint64_t v52 = v165;
            uint64_t v51 = v166;
            unsigned __int8 v53 = v167;
            goto LABEL_47;
          }
          uint64_t v44 = ~v42;
          while (1)
          {
            uint64_t v45 = *(void *)(v40 + 48) + 16 * v43;
            if (*(unsigned char *)(v45 + 8) == 1 && *(void *)v45 > 3uLL) {
              break;
            }
            unint64_t v43 = (v43 + 1) & v44;
            if (((*(void *)(v40 + 56 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0) {
              goto LABEL_44;
            }
          }
        }
        else
        {
LABEL_45:
          uint64_t v54 = v1[24];
          uint64_t v55 = v1[13];
          sub_1ACB85C50(v1[25], type metadata accessor for PlaybackIntent);
          sub_1ACB85B80(v55, v54, type metadata accessor for PlaybackIntent);
        }
        uint64_t v56 = v1[13];
        sub_1ACB85C50(v1[24], type metadata accessor for PlaybackIntent);
        uint64_t v50 = *(void *)v56;
        uint64_t v49 = *(void *)(v56 + 8);
        uint64_t v52 = *(void *)(v56 + 16);
        uint64_t v51 = *(void *)(v56 + 24);
        unsigned __int8 v53 = *(unsigned char *)(v56 + 32);
        sub_1ACA639E4(v50, v49, v52, v51, v53);
LABEL_47:
        uint64_t v57 = v1[13];
        uint64_t v131 = v49;
        uint64_t v132 = v51;
        uint64_t v130 = v53;
        uint64_t v125 = v52;
        if (*(_WORD *)(v57 + 120) == 2)
        {
          uint64_t v58 = *(void *)(v57 + *(int *)(v1[21] + 28));
          if (*(void *)(v58 + 16)
            && (uint64_t v59 = v52,
                sub_1ACE77B18(),
                sub_1ACE77B28(),
                uint64_t v60 = sub_1ACE77B78(),
                uint64_t v61 = -1 << *(unsigned char *)(v58 + 32),
                unint64_t v62 = v60 & ~v61,
                ((*(void *)(v58 + 56 + ((v62 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v62) & 1) != 0))
          {
            uint64_t v63 = ~v61;
            while (1)
            {
              uint64_t v64 = *(void *)(v58 + 48) + 16 * v62;
              if (*(unsigned char *)(v64 + 8) == 1 && *(void *)v64 == 3) {
                break;
              }
              unint64_t v62 = (v62 + 1) & v63;
              if (((*(void *)(v58 + 56 + ((v62 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v62) & 1) == 0) {
                goto LABEL_59;
              }
            }
            uint64_t v65 = v1[23];
            sub_1ACB85B80(v1[13], v65, type metadata accessor for PlaybackIntent);
            int v66 = *(unsigned __int8 *)(v65 + 120);
            sub_1ACB85C50(v65, type metadata accessor for PlaybackIntent);
            if (v66 == 2)
            {
              uint64_t v129 = v1 + 2;
              uint64_t v67 = *(void *)(v57 + 40);
              uint64_t v68 = *(void *)(v57 + 48);
              uint64_t v69 = *(void *)(v57 + 56);
              uint64_t v70 = *(void *)(v57 + 64);
              uint64_t v147 = *(void *)(v57 + 80);
              uint64_t v150 = *(void *)(v57 + 72);
              uint64_t v71 = *(void *)(v57 + 104);
              uint64_t v141 = *(void *)(v57 + 96);
              uint64_t v144 = *(void *)(v57 + 88);
              uint64_t v117 = *(void *)(v57 + 112);
              int v115 = *(unsigned __int16 *)(v57 + 120) | (*(unsigned __int8 *)(v57 + 122) << 16);
              uint64_t v135 = v68;
              uint64_t v138 = v67;
              char v126 = v70;
              char v122 = v71;
              if (*(_WORD *)(v57 + 120) == 2)
              {
                EpisodeListBuilder = type metadata accessor for DefaultListBuilder();
                char v72 = &off_1F03A0418;
                uint64_t v73 = v50;
              }
              else
              {
                uint64_t v73 = v50;
                if (v71 == 5)
                {
                  EpisodeListBuilder = type metadata accessor for UpNextEpisodeListBuilder();
                  sub_1ACA63A78(v67, v68, v69, v70, v150, v147, v144, v141, 5);
                  char v72 = &off_1F0397F60;
                }
                else
                {
                  EpisodeListBuilder = type metadata accessor for DefaultListBuilder();
                  char v72 = &off_1F03A0418;
                }
              }
              uint64_t v102 = v1[31];
              uint64_t v104 = v1[28];
              uint64_t v103 = v1[29];
              int64_t v105 = v1[27];
              v163 = v73;
              v164 = v131;
              v165 = v59;
              v166 = v132;
              v167 = v130;
              sub_1ACB85B80(v103, v102, type metadata accessor for PodcastsMediaLibrary.MediaItem);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v104 + 56))(v102, 0, 1, v105);
              *(void *)&uint64_t v153 = v138;
              *((void *)&v153 + 1) = v135;
              *(void *)&v154 = v69;
              *((void *)&v154 + 1) = v126;
              uint64_t v155 = v150;
              uint64_t v156 = v147;
              uint64_t v157 = v144;
              id v158 = v141;
              v159 = v122;
              v160 = v117;
              v162 = BYTE2(v115);
              v161 = v115;
              char v83 = v1;
              uint64_t v110 = (void (*)(uint64_t@<X0>, uint64_t@<X1>, long long *@<X2>, uint64_t@<X3>, uint64_t@<X8>))v72[1];
              v1[5] = EpisodeListBuilder;
              v1[6] = v72;
              boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v129);
              v110((uint64_t)&v163, v102, &v153, EpisodeListBuilder, (uint64_t)boxed_opaque_existential_1);
              uint64_t v111 = (void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v72[2];
              sub_1ACA639E4(v73, v131, v125, v132, v130);
              sub_1ACA63A5C(v138, v135, v69, v126, v150, v147, v144, v141, v122, v117, v115);
              v111(&v153, EpisodeListBuilder, v72);
              uint64_t v84 = v73;
LABEL_63:
              uint64_t v82 = v154;
              v149 = *((void *)&v153 + 1);
              uint64_t v152 = v153;
              uint64_t v143 = v155;
              uint64_t v146 = *((void *)&v154 + 1);
              unint64_t v128 = v158;
              uint64_t v134 = v161 | (v162 << 16);
              uint64_t v106 = v159;
              uint64_t v107 = v156;
              uint64_t v137 = v160;
              uint64_t v140 = v157;
              __swift_destroy_boxed_opaque_existential_0((uint64_t)v129);
              goto LABEL_64;
            }
          }
          else
          {
LABEL_59:
            uint64_t v81 = v1[23];
            sub_1ACB85B80(v1[13], v81, type metadata accessor for PlaybackIntent);
            sub_1ACB85C50(v81, type metadata accessor for PlaybackIntent);
          }
          v149 = 0;
          uint64_t v152 = 0;
          uint64_t v82 = 0;
          uint64_t v143 = 0;
          uint64_t v146 = 0;
          uint64_t v106 = 0;
          uint64_t v107 = 0;
          uint64_t v137 = 0;
          uint64_t v140 = 0;
          unint64_t v128 = 0;
          char v83 = v1;
          uint64_t v134 = 2;
          uint64_t v84 = v50;
LABEL_64:
          uint64_t v92 = v83[31];
          int64_t v93 = v83[28];
          uint64_t v121 = v83[29];
          uint64_t v124 = v83[33];
          uint64_t v94 = v83[27];
          uint64_t v96 = (int *)v83[21];
          uint64_t v95 = v83[22];
          uint64_t v109 = v83[20];
          uint64_t v113 = v83[19];
          uint64_t v97 = v83[13];
          uint64_t v116 = v83[18];
          BOOL v118 = v83[12];
          sub_1ACB85B80(v121, v92, type metadata accessor for PodcastsMediaLibrary.MediaItem);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v93 + 56))(v92, 0, 1, v94);
          uint64_t v108 = *(void *)(v97 + v96[7]);
          *(void *)uint64_t v95 = v84;
          *(void *)(v95 + 8) = v131;
          *(void *)(v95 + 16) = v125;
          *(void *)(v95 + 24) = v132;
          *(unsigned char *)(v95 + 32) = v130;
          *(void *)(v95 + 40) = v152;
          *(void *)(v95 + 48) = v149;
          *(void *)(v95 + 56) = v82;
          *(void *)(v95 + 64) = v146;
          *(void *)(v95 + 72) = v143;
          *(void *)(v95 + 80) = v107;
          *(void *)(v95 + 88) = v140;
          *(void *)(v95 + 96) = v128;
          *(void *)(v95 + 104) = v106;
          *(void *)(v95 + 112) = v137;
          *(unsigned char *)(v95 + 122) = BYTE2(v134);
          *(_WORD *)(v95 + 120) = v134;
          sub_1ACA3AAD4(v92, v95 + v96[6], &qword_1EB76EFA0);
          sub_1ACA63A5C(v152, v149, v82, v146, v143, v107, v140, v128, v106, v137, v134);
          swift_bridgeObjectRetain();
          sub_1ACE75108();
          uint64_t v98 = sub_1ACE750C8();
          id v100 = v99;
          sub_1ACA50E78(v92, &qword_1EB76EFA0);
          (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v109, v116);
          long long v101 = (uint64_t *)(v95 + v96[8]);
          *long long v101 = v98;
          v101[1] = v100;
          *(void *)(v95 + v96[7]) = v108;
          sub_1ACB85BE8(v95, v118, type metadata accessor for PlaybackIntent);
          sub_1ACA6371C(v152, v149, v82, v146, v143, v107, v140, v128, v106, v137, v134);
          sub_1ACB85C50(v121, type metadata accessor for PodcastsMediaLibrary.MediaItem);
          sub_1ACA50E78(v124, &qword_1EB76EFA0);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v20 = (uint64_t (*)(void))v83[1];
          goto LABEL_24;
        }
        uint64_t v123 = v50;
        uint64_t v136 = *(unsigned __int16 *)(v57 + 120) | (*(unsigned __int8 *)(v57 + 122) << 16);
        uint64_t v74 = *(void *)(v57 + 40);
        uint64_t v75 = *(void *)(v57 + 48);
        uint64_t v148 = *(void *)(v57 + 64);
        uint64_t v151 = *(void *)(v57 + 56);
        uint64_t v76 = *(void *)(v57 + 88);
        uint64_t v142 = *(void *)(v57 + 80);
        int64_t v145 = *(void *)(v57 + 72);
        uint64_t v77 = *(void *)(v57 + 96);
        char v120 = *(void *)(v57 + 112);
        unint64_t v127 = *(void *)(v57 + 104);
        uint64_t v129 = v1 + 7;
        uint64_t v139 = v75;
        uint64_t v78 = v52;
        if (v127 == 5)
        {
          unint64_t v133 = type metadata accessor for UpNextEpisodeListBuilder();
          sub_1ACA63A78(v74, v75, v151, v148, v145, v142, v76, v77, 5);
          uint64_t v79 = v74;
          uint64_t v80 = &off_1F0397F60;
        }
        else
        {
          unint64_t v133 = type metadata accessor for DefaultListBuilder();
          uint64_t v79 = v74;
          uint64_t v80 = &off_1F03A0418;
        }
        uint64_t v112 = v79;
        uint64_t v85 = v1[31];
        uint64_t v87 = v1[28];
        uint64_t v86 = v1[29];
        uint64_t v88 = v1[27];
        v163 = v123;
        v164 = v131;
        v165 = v78;
        v166 = v132;
        v167 = v130;
        sub_1ACB85B80(v86, v85, type metadata accessor for PodcastsMediaLibrary.MediaItem);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v85, 0, 1, v88);
        *(void *)&uint64_t v153 = v79;
        *((void *)&v153 + 1) = v139;
        *(void *)&v154 = v151;
        *((void *)&v154 + 1) = v148;
        uint64_t v155 = v145;
        uint64_t v156 = v142;
        uint64_t v157 = v76;
        id v158 = v77;
        v159 = v127;
        v160 = v120;
        v162 = BYTE2(v136);
        v161 = v136;
        char v83 = v1;
        uint64_t v89 = (void (*)(uint64_t@<X0>, uint64_t@<X1>, long long *@<X2>, uint64_t@<X3>, uint64_t@<X8>))v80[1];
        v83[10] = v133;
        v83[11] = v80;
        unint64_t v90 = __swift_allocate_boxed_opaque_existential_1(v129);
        v89((uint64_t)&v163, v85, &v153, v133, (uint64_t)v90);
        int64_t v91 = (void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v80[2];
        sub_1ACA63A5C(v112, v139, v151, v148, v145, v142, v76, v77, v127, v120, v136);
        sub_1ACA639E4(v123, v131, v125, v132, v130);
        v91(&v153, v133, v80);
        uint64_t v84 = v123;
        goto LABEL_63;
    }
  }
  sub_1ACA50E78(v7, &qword_1EB76EFA0);
  type metadata accessor for PlaybackIntent.ValidationError(0);
  sub_1ACB85CB0(&qword_1E99F29E0, (void (*)(uint64_t))type metadata accessor for PlaybackIntent.ValidationError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
LABEL_23:
  sub_1ACA50E78(v1[33], &qword_1EB76EFA0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v1[1];
LABEL_24:
  return v20();
}

BOOL PlaybackIntent.canValidate.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v4 = 1;
  switch(*(unsigned char *)(v0 + 32))
  {
    case 2:
    case 4:
      return v4;
    case 5:
    case 6:
    case 7:
      goto LABEL_4;
    case 8:
      if (!(*(void *)(v0 + 16) | *(void *)(v0 + 24) | *(void *)v0 | *(void *)(v0 + 8))) {
        goto LABEL_2;
      }
LABEL_4:
      BOOL v4 = 0;
      break;
    default:
LABEL_2:
      uint64_t v5 = type metadata accessor for PlaybackIntent(0);
      sub_1ACA3AAD4(v0 + *(int *)(v5 + 24), (uint64_t)v3, &qword_1EB76EFA0);
      uint64_t v6 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
      BOOL v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v3, 1, v6) != 1;
      sub_1ACA50E78((uint64_t)v3, &qword_1EB76EFA0);
      break;
  }
  return v4;
}

BOOL PodcastsMediaLibrary.MediaItem.requiresAuthentication.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 108));
  if (v1 == 4) {
    return 0;
  }
  if (v1) {
    BOOL v3 = v1 == 3;
  }
  else {
    BOOL v3 = 1;
  }
  return !v3;
}

uint64_t sub_1ACB80C14()
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  id v0 = objc_msgSend(self, sel_sharedAccountStore);
  v7[0] = 0;
  id v1 = objc_msgSend(v0, sel_activeStoreAccountWithError_, v7);

  if (v1)
  {
    id v2 = v7[0];
    id v3 = objc_msgSend(v1, sel_ams_DSID);

    if (v3)
    {

      return 1;
    }
  }
  else
  {
    id v5 = v7[0];
    uint64_t v6 = (void *)sub_1ACE74D78();

    swift_willThrow();
  }
  return 0;
}

void sub_1ACB80D1C(uint64_t a1@<X8>)
{
  id v3 = *(void **)v1;
  int v4 = *(unsigned __int8 *)(v1 + 32);
  if (v4 == 1)
  {
    if (v3[2])
    {
      uint64_t v16 = v3[4];
      uint64_t v17 = sub_1ACA41D90(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v19 = v17[2];
      unint64_t v18 = v17[3];
      if (v19 >= v18 >> 1) {
        uint64_t v17 = sub_1ACA41D90((void *)(v18 > 1), v19 + 1, 1, v17);
      }
      v17[2] = v19 + 1;
      v17[v19 + 4] = v16;
    }
    else
    {
      uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
    }
    *(void *)a1 = v17;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    char v21 = 1;
    goto LABEL_21;
  }
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  if (v4 == 4)
  {
    if (v7)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1ACE843F0;
      *(void *)(v20 + 32) = v6;
      *(void *)(v20 + 40) = v7;
      *(void *)a1 = v20;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      *(unsigned char *)(a1 + 32) = 2;
    }
    else
    {
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v6;
      *(void *)(a1 + 24) = 0;
      *(unsigned char *)(a1 + 32) = 4;
    }
    swift_bridgeObjectRetain();
  }
  else
  {
    if (v4 == 2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E498);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
      if (v3[2])
      {
        uint64_t v10 = v3[4];
        uint64_t v9 = v3[5];
        *(void *)(inited + 32) = v10;
        *(void *)(inited + 40) = v9;
        swift_bridgeObjectRetain_n();
        unsigned int v11 = sub_1ACA41EA0(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v12 = v11[2];
        unint64_t v13 = v11[3];
        unint64_t v14 = v12 + 1;
        if (v12 >= v13 >> 1)
        {
          unint64_t v25 = v12 + 1;
          uint64_t v22 = v11;
          unint64_t v23 = v11[2];
          uint64_t v24 = sub_1ACA41EA0((void *)(v13 > 1), v12 + 1, 1, v22);
          unint64_t v12 = v23;
          unint64_t v14 = v25;
          unsigned int v11 = v24;
        }
        void v11[2] = v14;
        uint64_t v15 = &v11[2 * v12];
        v15[4] = v10;
        v15[5] = v9;
      }
      else
      {
        *(void *)(inited + 32) = 0;
        *(void *)(inited + 40) = 0;
        unsigned int v11 = (void *)MEMORY[0x1E4FBC860];
      }
      swift_release();
      *(void *)a1 = v11;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      char v21 = 2;
LABEL_21:
      *(unsigned char *)(a1 + 32) = v21;
      return;
    }
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 32) = v4;
    sub_1ACA639E4((uint64_t)v3, v5, v6, v7, v4);
  }
}

uint64_t PlaybackIntent.initialItemRequiresLocalPlayback.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = type metadata accessor for PlaybackIntent(0);
  sub_1ACA3AAD4(v0 + *(int *)(v11 + 24), (uint64_t)v3, &qword_1EB76EFA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1ACA50E78((uint64_t)v3, &qword_1EB76EFA0);
  }
  else
  {
    sub_1ACB85BE8((uint64_t)v3, (uint64_t)v10, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    if ((v10[56] & 1) != 0 || ((uint64_t v12 = *((void *)v10 + 6)) != 0 ? (v13 = v12 == 1000000000000) : (v13 = 1), v13))
    {
      uint64_t v14 = *((void *)v10 + 5);
      sub_1ACB85BE8((uint64_t)v10, (uint64_t)v8, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      if (v14)
      {
        uint64_t v15 = *((void *)v8 + 13);
        sub_1ACB85C50((uint64_t)v8, type metadata accessor for PodcastsMediaLibrary.MediaItem);
        if (v15) {
          return 0;
        }
      }
      else
      {
        sub_1ACB85C50((uint64_t)v8, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      }
      return 1;
    }
    sub_1ACB85C50((uint64_t)v10, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  }
  return 0;
}

uint64_t PlaybackIntent.encodeData()()
{
  sub_1ACE74CF8();
  swift_allocObject();
  sub_1ACE74CE8();
  type metadata accessor for PlaybackIntent(0);
  sub_1ACB85CB0(&qword_1EB770B20, (void (*)(uint64_t))type metadata accessor for PlaybackIntent);
  uint64_t v0 = sub_1ACE74CD8();
  swift_release();
  return v0;
}

void sub_1ACB81294(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a1;
  uint64_t v3 = type metadata accessor for PlaybackIntent(0);
  uint64_t v41 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v42 = v4;
  uint64_t v43 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F38);
  uint64_t v39 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v39 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v40 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(self, sel_sharedInstance);
  id v11 = objc_msgSend(v10, sel_privateQueueContext);

  int v12 = *(unsigned __int8 *)(a2 + 32);
  if (v12 == 4)
  {
    unint64_t v15 = *(void *)(a2 + 24);
    if (v15)
    {
      uint64_t v14 = *(void *)(a2 + 16);
      goto LABEL_7;
    }
LABEL_11:
    sub_1ACA3AAD4(a2 + *(int *)(v3 + 24), (uint64_t)v9, &qword_1EB76EFA0);
    sub_1ACE766F8();
    goto LABEL_14;
  }
  if (v12 != 2) {
    goto LABEL_11;
  }
  uint64_t v13 = *(void *)a2;
  if (!*(void *)(*(void *)a2 + 16)) {
    goto LABEL_11;
  }
  uint64_t v14 = *(void *)(v13 + 32);
  unint64_t v15 = *(void *)(v13 + 40);
LABEL_7:
  swift_bridgeObjectRetain();
  if (qword_1EB76D4C0 != -1) {
    swift_once();
  }
  id v38 = v11;
  uint64_t v16 = sub_1ACE754C8();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EB76D4A8);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_1ACE75498();
  os_log_type_t v18 = sub_1ACE76C08();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v37 = v14;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v36 = v5;
    char v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    aBlock[0] = v22;
    *(_DWORD *)char v21 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1ACA3189C(v14, v15, aBlock);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v17, v18, "Fetching initial item %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v22, -1, -1);
    unint64_t v23 = v21;
    uint64_t v5 = v36;
    MEMORY[0x1AD11B340](v23, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v25 = v39;
  uint64_t v24 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v40, v44, v5);
  uint64_t v26 = a2;
  uint64_t v27 = v43;
  sub_1ACB85B80(v26, v43, type metadata accessor for PlaybackIntent);
  unint64_t v28 = (*(unsigned __int8 *)(v25 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v29 = (v6 + *(unsigned __int8 *)(v41 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  int v30 = (char *)swift_allocObject();
  uint64_t v31 = v37;
  uint64_t v32 = v38;
  *((void *)v30 + 2) = v38;
  *((void *)v30 + 3) = v31;
  *((void *)v30 + 4) = v15;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v30[v28], v24, v5);
  sub_1ACB85BE8(v27, (uint64_t)&v30[v29], type metadata accessor for PlaybackIntent);
  aBlock[4] = (uint64_t)sub_1ACB9A208;
  aBlock[5] = (uint64_t)v30;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1ACA6DA9C;
  aBlock[3] = (uint64_t)&block_descriptor_31;
  uint64_t v33 = _Block_copy(aBlock);
  id v34 = v32;
  swift_release();
  uint64_t v35 = v34;
  id v11 = v32;
  objc_msgSend(v35, sel_performBlock_, v33);
  _Block_release(v33);
LABEL_14:
}

uint64_t sub_1ACB817AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v24[0] = a5;
  v24[1] = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F17D8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v11 = (char *)v24 - v10;
  uint64_t v12 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  MEMORY[0x1F4188790](v16 - 8);
  os_log_type_t v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v19 = (void *)sub_1ACE76178();
  id v20 = objc_msgSend(a1, sel_episodeForUuid_, v19);

  if (v20)
  {
    id v21 = v20;
    sub_1ACC54794(v21, (uint64_t)v15);
    sub_1ACB85B80((uint64_t)v15, (uint64_t)v11, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    swift_storeEnumTagMultiPayload();
    sub_1ACA3AAD4((uint64_t)v11, (uint64_t)v9, &qword_1E99F17D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F38);
      sub_1ACE766E8();
    }
    else
    {
      sub_1ACB8B47C((uint64_t)v9, (uint64_t)v18);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F38);
      sub_1ACE766F8();
    }

    sub_1ACA50E78((uint64_t)v11, &qword_1E99F17D8);
    return sub_1ACB85C50((uint64_t)v15, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  }
  else
  {
    uint64_t v22 = type metadata accessor for PlaybackIntent(0);
    sub_1ACA3AAD4(v24[0] + *(int *)(v22 + 24), (uint64_t)v18, &qword_1EB76EFA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F38);
    return sub_1ACE766F8();
  }
}

uint64_t PlaybackIntent.withOptions(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v4 = sub_1ACE75118();
  uint64_t v59 = *(void *)(v4 - 8);
  uint64_t v60 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v57 = &v38[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *(void *)(v2 + 8);
  uint64_t v41 = *(void *)v2;
  uint64_t v10 = v41;
  uint64_t v45 = v9;
  uint64_t v40 = *(void *)(v2 + 16);
  uint64_t v11 = v40;
  uint64_t v44 = *(void *)(v2 + 24);
  uint64_t v13 = *(void *)(v2 + 40);
  uint64_t v12 = *(void *)(v2 + 48);
  uint64_t v14 = *(void *)(v2 + 64);
  uint64_t v52 = *(void *)(v2 + 56);
  uint64_t v15 = v52;
  uint64_t v53 = v13;
  uint64_t v49 = v14;
  uint64_t v50 = v12;
  uint64_t v16 = *(void *)(v2 + 80);
  uint64_t v17 = *(void *)(v2 + 88);
  uint64_t v18 = *(void *)(v2 + 96);
  uint64_t v61 = *(void *)(v2 + 72);
  uint64_t v62 = v17;
  uint64_t v51 = v18;
  uint64_t v47 = *(void *)(v2 + 104);
  uint64_t v48 = v16;
  uint64_t v46 = *(void *)(v2 + 112);
  LODWORD(v17) = *(unsigned __int16 *)(v2 + 120);
  int v42 = *(unsigned __int8 *)(v2 + 122);
  int v43 = v17;
  int v55 = v17 | (v42 << 16);
  unsigned __int8 v19 = *(unsigned char *)(v2 + 32);
  int v39 = v19;
  uint64_t v20 = type metadata accessor for PlaybackIntent(0);
  uint64_t v21 = *(int *)(v20 + 24);
  uint64_t v56 = v20;
  sub_1ACA3AAD4(v2 + v21, (uint64_t)v8, &qword_1EB76EFA0);
  *(void *)a2 = v10;
  uint64_t v22 = v45;
  *(void *)(a2 + 8) = v45;
  *(void *)(a2 + 16) = v11;
  uint64_t v23 = v44;
  *(void *)(a2 + 24) = v44;
  *(unsigned char *)(a2 + 32) = v19;
  *(void *)(a2 + 40) = v13;
  uint64_t v24 = v50;
  *(void *)(a2 + 48) = v50;
  *(void *)(a2 + 56) = v15;
  uint64_t v25 = v48;
  LOBYTE(v15) = v49;
  uint64_t v26 = v61;
  *(void *)(a2 + 64) = v49;
  *(void *)(a2 + 72) = v26;
  uint64_t v27 = v62;
  *(void *)(a2 + 80) = v25;
  *(void *)(a2 + 88) = v27;
  *(void *)(a2 + 96) = v18;
  uint64_t v28 = v46;
  LOBYTE(v18) = v47;
  *(void *)(a2 + 104) = v47;
  *(void *)(a2 + 112) = v28;
  *(unsigned char *)(a2 + 122) = v42;
  *(_WORD *)(a2 + 120) = v43;
  uint64_t v29 = a2 + *(int *)(v20 + 24);
  uint64_t v54 = v8;
  sub_1ACA3AAD4((uint64_t)v8, v29, &qword_1EB76EFA0);
  sub_1ACA639E4(v41, v22, v40, v23, v39);
  sub_1ACA63A5C(v53, v24, v52, v15, v61, v25, v62, v51, v18, v28, v55);
  uint64_t v30 = v58;
  swift_bridgeObjectRetain();
  uint64_t v31 = v57;
  sub_1ACE75108();
  uint64_t v32 = sub_1ACE750C8();
  uint64_t v34 = v33;
  sub_1ACA50E78((uint64_t)v54, &qword_1EB76EFA0);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v59 + 8))(v31, v60);
  uint64_t v36 = v56;
  uint64_t v37 = (uint64_t *)(a2 + *(int *)(v56 + 32));
  *uint64_t v37 = v32;
  v37[1] = v34;
  *(void *)(a2 + *(int *)(v36 + 28)) = v30;
  return result;
}

uint64_t PlaybackIntent.addingOptions(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1ACE75118();
  uint64_t v53 = *(void *)(v3 - 8);
  uint64_t v54 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v52 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v55 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for PlaybackIntent(0);
  uint64_t v7 = *(void *)(v1 + *(int *)(v59 + 28));
  swift_bridgeObjectRetain();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v51 = sub_1ACB821D0(v8, v7);
  uint64_t v9 = *(void *)(v1 + 8);
  uint64_t v41 = *(void *)v1;
  uint64_t v10 = v41;
  uint64_t v42 = v9;
  uint64_t v40 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = *(void *)(v1 + 40);
  uint64_t v57 = *(void *)(v1 + 48);
  uint64_t v58 = v11;
  uint64_t v13 = *(void *)(v1 + 56);
  uint64_t v56 = *(void *)(v1 + 64);
  uint64_t v14 = *(void *)(v1 + 80);
  uint64_t v48 = *(void *)(v1 + 72);
  uint64_t v15 = v48;
  uint64_t v49 = v13;
  uint64_t v16 = *(void *)(v1 + 88);
  uint64_t v46 = v14;
  uint64_t v47 = v16;
  uint64_t v17 = *(void *)(v1 + 96);
  uint64_t v44 = *(void *)(v1 + 104);
  uint64_t v45 = v17;
  uint64_t v43 = *(void *)(v1 + 112);
  int v18 = *(unsigned __int8 *)(v1 + 122);
  int v38 = *(unsigned __int16 *)(v1 + 120);
  int v50 = v38 | (v18 << 16);
  uint64_t v19 = v1 + *(int *)(v59 + 24);
  unsigned __int8 v20 = *(unsigned char *)(v1 + 32);
  int v39 = v20;
  uint64_t v21 = v55;
  sub_1ACA3AAD4(v19, v55, &qword_1EB76EFA0);
  *(void *)a1 = v10;
  uint64_t v22 = v42;
  uint64_t v23 = v40;
  *(void *)(a1 + 8) = v42;
  *(void *)(a1 + 16) = v23;
  *(void *)(a1 + 24) = v58;
  *(unsigned char *)(a1 + 32) = v20;
  uint64_t v24 = v12;
  uint64_t v25 = v57;
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v25;
  uint64_t v26 = v56;
  *(void *)(a1 + 56) = v13;
  *(void *)(a1 + 64) = v26;
  *(void *)(a1 + 72) = v15;
  uint64_t v27 = v46;
  *(void *)(a1 + 80) = v46;
  *(void *)(a1 + 88) = v16;
  uint64_t v28 = v44;
  uint64_t v29 = v45;
  *(void *)(a1 + 96) = v45;
  *(void *)(a1 + 104) = v28;
  uint64_t v30 = v43;
  *(void *)(a1 + 112) = v43;
  *(unsigned char *)(a1 + 122) = v18;
  *(_WORD *)(a1 + 120) = v38;
  uint64_t v31 = v59;
  sub_1ACA3AAD4(v21, a1 + *(int *)(v59 + 24), &qword_1EB76EFA0);
  sub_1ACA639E4(v41, v22, v23, v58, v39);
  sub_1ACA63A5C(v24, v57, v49, v56, v48, v27, v47, v29, v28, v30, v50);
  uint64_t v32 = v52;
  sub_1ACE75108();
  uint64_t v33 = sub_1ACE750C8();
  uint64_t v35 = v34;
  sub_1ACA50E78(v55, &qword_1EB76EFA0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v32, v54);
  uint64_t v37 = (uint64_t *)(a1 + *(int *)(v31 + 32));
  *uint64_t v37 = v33;
  v37[1] = v35;
  *(void *)(a1 + *(int *)(v31 + 28)) = v51;
  return result;
}

uint64_t sub_1ACB82050(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1ACD3007C(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1ACB821D0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v15 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    uint64_t result = sub_1ACD31990((uint64_t)v14, *(void *)(*(void *)(v2 + 48) + 16 * v10), *(unsigned char *)(*(void *)(v2 + 48) + 16 * v10 + 8));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t PlaybackIntent.withoutOption(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F29E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(void *)(inited + 32) = v3;
  *(unsigned char *)(inited + 40) = v4;
  PlaybackIntent.withoutOptions(_:)(inited, a2);
  return swift_setDeallocating();
}

uint64_t PlaybackIntent.withoutOptions(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1ACE75118();
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v52 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v55 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for PlaybackIntent(0);
  uint64_t v9 = *(void *)(v2 + *(int *)(v59 + 28));
  swift_bridgeObjectRetain();
  uint64_t v51 = sub_1ACB889E0(a1, v9);
  uint64_t v10 = *(void *)(v2 + 8);
  uint64_t v41 = *(void *)v2;
  uint64_t v11 = v41;
  uint64_t v42 = v10;
  uint64_t v40 = *(void *)(v2 + 16);
  uint64_t v12 = *(void *)(v2 + 24);
  uint64_t v13 = *(void *)(v2 + 40);
  uint64_t v57 = *(void *)(v2 + 48);
  uint64_t v58 = v12;
  uint64_t v14 = *(void *)(v2 + 56);
  uint64_t v56 = *(void *)(v2 + 64);
  uint64_t v15 = *(void *)(v2 + 80);
  uint64_t v48 = *(void *)(v2 + 72);
  uint64_t v16 = v48;
  uint64_t v49 = v14;
  uint64_t v17 = *(void *)(v2 + 88);
  uint64_t v46 = v15;
  uint64_t v47 = v17;
  uint64_t v18 = *(void *)(v2 + 96);
  uint64_t v44 = *(void *)(v2 + 104);
  uint64_t v45 = v18;
  uint64_t v43 = *(void *)(v2 + 112);
  int v19 = *(unsigned __int8 *)(v2 + 122);
  int v38 = *(unsigned __int16 *)(v2 + 120);
  int v50 = v38 | (v19 << 16);
  uint64_t v20 = v2 + *(int *)(v59 + 24);
  LOBYTE(a1) = *(unsigned char *)(v2 + 32);
  int v39 = a1;
  uint64_t v21 = v55;
  sub_1ACA3AAD4(v20, v55, &qword_1EB76EFA0);
  *(void *)a2 = v11;
  uint64_t v22 = v42;
  uint64_t v23 = v40;
  *(void *)(a2 + 8) = v42;
  *(void *)(a2 + 16) = v23;
  *(void *)(a2 + 24) = v58;
  *(unsigned char *)(a2 + 32) = a1;
  uint64_t v24 = v13;
  uint64_t v25 = v57;
  *(void *)(a2 + 40) = v13;
  *(void *)(a2 + 48) = v25;
  uint64_t v26 = v56;
  *(void *)(a2 + 56) = v14;
  *(void *)(a2 + 64) = v26;
  *(void *)(a2 + 72) = v16;
  uint64_t v27 = v46;
  *(void *)(a2 + 80) = v46;
  *(void *)(a2 + 88) = v17;
  uint64_t v28 = v44;
  uint64_t v29 = v45;
  *(void *)(a2 + 96) = v45;
  *(void *)(a2 + 104) = v28;
  uint64_t v30 = v43;
  *(void *)(a2 + 112) = v43;
  *(unsigned char *)(a2 + 122) = v19;
  *(_WORD *)(a2 + 120) = v38;
  uint64_t v31 = v59;
  sub_1ACA3AAD4(v21, a2 + *(int *)(v59 + 24), &qword_1EB76EFA0);
  sub_1ACA639E4(v41, v22, v23, v58, v39);
  sub_1ACA63A5C(v24, v57, v49, v56, v48, v27, v47, v29, v28, v30, v50);
  uint64_t v32 = v52;
  sub_1ACE75108();
  uint64_t v33 = sub_1ACE750C8();
  uint64_t v35 = v34;
  sub_1ACA50E78(v55, &qword_1EB76EFA0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v32, v54);
  uint64_t v37 = (uint64_t *)(a2 + *(int *)(v31 + 32));
  *uint64_t v37 = v33;
  v37[1] = v35;
  *(void *)(a2 + *(int *)(v31 + 28)) = v51;
  return result;
}

uint64_t PlaybackIntent.initialItemPlayheadOverride.getter()
{
  type metadata accessor for PlaybackIntent(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1ACB7D6F0(v0);
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + 16)) {
    uint64_t v2 = *(void *)(v1 + 32);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_1ACB82710()
{
  unint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x747465537473696CLL;
      break;
    case 2:
      unint64_t result = 0x496C616974696E69;
      break;
    case 3:
      unint64_t result = 0x736E6F6974706FLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACB827C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACB99A34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACB827EC(uint64_t a1)
{
  unint64_t v2 = sub_1ACB8B284();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB82828(uint64_t a1)
{
  unint64_t v2 = sub_1ACB8B284();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PlaybackIntent.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7719D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACB8B284();
  sub_1ACE77C78();
  char v9 = *((unsigned char *)v3 + 32);
  long long v10 = v3[1];
  long long v17 = *v3;
  long long v18 = v10;
  LOBYTE(v19) = v9;
  char v24 = 0;
  sub_1ACB8B2D8();
  sub_1ACE77788();
  if (!v2)
  {
    __int16 v11 = *((_WORD *)v3 + 60);
    char v12 = *((unsigned char *)v3 + 122);
    long long v13 = *(long long *)((char *)v3 + 56);
    long long v17 = *(long long *)((char *)v3 + 40);
    long long v18 = v13;
    long long v14 = *(long long *)((char *)v3 + 88);
    long long v19 = *(long long *)((char *)v3 + 72);
    long long v20 = v14;
    long long v21 = *(long long *)((char *)v3 + 104);
    char v23 = v12;
    __int16 v22 = v11;
    char v24 = 1;
    sub_1ACB8B32C();
    sub_1ACE77728();
    uint64_t v15 = type metadata accessor for PlaybackIntent(0);
    LOBYTE(v17) = 2;
    type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    sub_1ACB85CB0(&qword_1EB770EA8, (void (*)(uint64_t))type metadata accessor for PodcastsMediaLibrary.MediaItem);
    sub_1ACE77728();
    *(void *)&long long v17 = *(void *)((char *)v3 + *(int *)(v15 + 28));
    char v24 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7718D0);
    sub_1ACB8B4E4(&qword_1EB7718D8, (void (*)(void))sub_1ACB8B380);
    sub_1ACE77788();
    LOBYTE(v17) = 4;
    sub_1ACE77748();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void PlaybackIntent.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F29F0);
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v30 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = type metadata accessor for PlaybackIntent(0);
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACB8B284();
  uint64_t v10 = (uint64_t)v31;
  sub_1ACE77C48();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    uint64_t v31 = a1;
    uint64_t v27 = v5;
    uint64_t v11 = (uint64_t)v9;
    uint64_t v12 = v29;
    char v39 = 0;
    sub_1ACB8B3D4();
    sub_1ACE77698();
    char v13 = v34;
    long long v14 = v33;
    *(_OWORD *)char v9 = v32;
    *((_OWORD *)v9 + 1) = v14;
    v9[32] = v13;
    char v39 = 1;
    sub_1ACB8B428();
    sub_1ACE77638();
    uint64_t v15 = v12;
    __int16 v16 = v37;
    char v17 = v38;
    long long v18 = v33;
    *(_OWORD *)(v11 + 40) = v32;
    *(_OWORD *)(v11 + 56) = v18;
    long long v19 = v35;
    *(_OWORD *)(v11 + 72) = v34;
    *(_OWORD *)(v11 + 88) = v19;
    *(_OWORD *)(v11 + 104) = v36;
    *(unsigned char *)(v11 + 122) = v17;
    *(_WORD *)(v11 + 120) = v16;
    type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    LOBYTE(v32) = 2;
    sub_1ACB85CB0(&qword_1E99F2A08, (void (*)(uint64_t))type metadata accessor for PodcastsMediaLibrary.MediaItem);
    uint64_t v20 = (uint64_t)v27;
    uint64_t v26 = 0;
    sub_1ACE77638();
    uint64_t v21 = v7;
    sub_1ACB8B47C(v20, v11 + *(int *)(v7 + 24));
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7718D0);
    char v39 = 3;
    sub_1ACB8B4E4(&qword_1E99F2A10, (void (*)(void))sub_1ACB8B554);
    sub_1ACE77698();
    *(void *)(v11 + *(int *)(v7 + 28)) = v32;
    LOBYTE(v32) = 4;
    uint64_t v22 = sub_1ACE77658();
    uint64_t v24 = v23;
    (*(void (**)(void, uint64_t))(v15 + 8))(0, v30);
    uint64_t v25 = (uint64_t *)(v11 + *(int *)(v21 + 32));
    *uint64_t v25 = v22;
    v25[1] = v24;
    sub_1ACB85B80(v11, v28, type metadata accessor for PlaybackIntent);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
    sub_1ACB85C50(v11, type metadata accessor for PlaybackIntent);
  }
}

void sub_1ACB830B0(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1ACB830C8(void *a1)
{
  return PlaybackIntent.encode(to:)(a1);
}

uint64_t sub_1ACB830E4()
{
  uint64_t result = sub_1ACA6D33C((uint64_t)&unk_1F03807D8);
  qword_1E99F2928 = result;
  return result;
}

BOOL static PlaybackIntent.Option.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    unint64_t v3 = *(void *)a2;
    switch(*(void *)a1)
    {
      case 1:
        if (v3 != 1) {
          char v2 = 0;
        }
        return (v2 & 1) != 0;
      case 2:
        if (v3 != 2) {
          char v2 = 0;
        }
        return (v2 & 1) != 0;
      case 3:
        if (v3 != 3) {
          char v2 = 0;
        }
        return (v2 & 1) != 0;
      case 4:
        if (v3 <= 3) {
          char v2 = 0;
        }
        return (v2 & 1) != 0;
      default:
        if (v3) {
          char v2 = 0;
        }
        return (v2 & 1) != 0;
    }
  }
  return (*(unsigned char *)(a2 + 8) & 1) == 0;
}

uint64_t PlaybackIntent.Option.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t PlaybackIntent.Option.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACB8326C()
{
  return sub_1ACE77B28();
}

uint64_t sub_1ACB832B8()
{
  return sub_1ACE77B78();
}

BOOL sub_1ACB83318(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    unint64_t v3 = *(void *)a2;
    switch(*(void *)a1)
    {
      case 1:
        BOOL v4 = v3 == 1;
        break;
      case 2:
        BOOL v4 = v3 == 2;
        break;
      case 3:
        BOOL v4 = v3 == 3;
        break;
      case 4:
        if (v3 <= 3) {
          int v2 = 0;
        }
        return v2 == 1;
      default:
        BOOL v4 = v3 == 0;
        break;
    }
    if (!v4) {
      LOBYTE(v2) = 0;
    }
    return (v2 & 1) != 0;
  }
  return (v2 & 1) == 0;
}

uint64_t PlaybackIntent.genericTrackIdentifierQueue(with:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PlaybackIntent(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v212 = (uint64_t)&v187 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2A20);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (uint64_t)&v187 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v187 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  long long v14 = (char *)&v187 - v13;
  MEMORY[0x1F4188790](v12);
  __int16 v16 = (char *)&v187 - v15;
  uint64_t v213 = sub_1ACE74A28();
  uint64_t v206 = *(void *)(v213 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v213);
  v208 = (char *)&v187 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  v203 = (char *)&v187 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  v209 = (uint64_t *)((char *)&v187 - v22);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  v197 = (char *)&v187 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v210 = (uint64_t)&v187 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v201 = (uint64_t)&v187 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  v200 = (char *)&v187 - v30;
  MEMORY[0x1F4188790](v29);
  long long v32 = (char *)&v187 - v31;
  uint64_t v196 = sub_1ACE74B18();
  v207 = *(char **)(v196 - 8);
  uint64_t v33 = MEMORY[0x1F4188790](v196);
  v204 = (char *)&v187 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  v205 = (char *)&v187 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  v202 = (uint64_t *)((char *)&v187 - v38);
  MEMORY[0x1F4188790](v37);
  uint64_t v199 = (uint64_t)&v187 - v39;
  unint64_t v40 = sub_1ACA3733C(MEMORY[0x1E4FBC860]);
  uint64_t v193 = v40;
  uint64_t v211 = a1;
  uint64_t v41 = *(void **)(a1 + 40);
  if (v41)
  {
    uint64_t v42 = v1;
    id v43 = v41;
    id v44 = objc_msgSend(v43, sel_ams_DSID);
    if (v44)
    {
      uint64_t v45 = v44;
      uint64_t v46 = v32;
      id v47 = objc_msgSend(v44, sel_stringValue);

      uint64_t v198 = sub_1ACE761B8();
      uint64_t v49 = v48;

      uint64_t v50 = v193;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v222 = v50;
      long long v32 = v46;
      sub_1ACD0DD00(v198, v49, 0x10u, isUniquelyReferenced_nonNull_native);
      uint64_t v193 = v222;

      unint64_t v40 = swift_bridgeObjectRelease();
    }
    else
    {
    }
    uint64_t v1 = v42;
  }
  uint64_t v53 = *(void *)v1;
  uint64_t v52 = *(void *)(v1 + 8);
  uint64_t v54 = *(void *)(v1 + 16);
  uint64_t v55 = *(void *)(v1 + 24);
  switch(*(unsigned char *)(v1 + 32))
  {
    case 0:
      uint64_t v222 = *(void *)v1;
      sub_1ACA55E4C();
      uint64_t v56 = sub_1ACE770B8();
      uint64_t v58 = v57;
      uint64_t v59 = v193;
      char v60 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v222 = v59;
      sub_1ACD0DD00(v56, v58, 2u, v60);
      uint64_t v61 = v222;
      swift_bridgeObjectRelease();
      long long v217 = xmmword_1ACE843F0;
      v203 = (char *)&v218;
      uint64_t v62 = swift_bridgeObjectRetain();
      uint64_t v63 = sub_1ACACB2F0(v62);
      v204 = (char *)v61;
      swift_bridgeObjectRelease();
      uint64_t v218 = v63;
      char v219 = 1;
      swift_bridgeObjectRetain_n();
      sub_1ACE74B08();
      sub_1ACE74AC8();
      MEMORY[0x1AD116C40](0x63646F5079616C70, 0xEB00000000747361);
      uint64_t v64 = *(void *)(v63 + 64);
      uint64_t v211 = v63 + 64;
      uint64_t v65 = 1 << *(unsigned char *)(v63 + 32);
      uint64_t v66 = -1;
      if (v65 < 64) {
        uint64_t v66 = ~(-1 << v65);
      }
      uint64_t i = v66 & v64;
      uint64_t v212 = (unint64_t)(v65 + 63) >> 6;
      uint64_t v8 = v206 + 56;
      uint64_t v68 = (unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48);
      v208 = (char *)(v206 + 32);
      swift_bridgeObjectRetain_n();
      uint64_t v69 = 0;
      v209 = (void *)MEMORY[0x1E4FBC860];
      v205 = "okmarkState";
      if (i) {
        goto LABEL_10;
      }
LABEL_13:
      uint64_t v70 = v69 + 1;
      if (__OFADD__(v69, 1)) {
        goto LABEL_189;
      }
      if (v70 >= v212) {
        goto LABEL_102;
      }
      uint64_t v71 = *(void *)(v211 + 8 * v70);
      ++v69;
      if (v71) {
        goto LABEL_36;
      }
      uint64_t v69 = v70 + 1;
      if (v70 + 1 >= v212) {
        goto LABEL_102;
      }
      uint64_t v71 = *(void *)(v211 + 8 * v69);
      if (v71) {
        goto LABEL_36;
      }
      uint64_t v69 = v70 + 2;
      if (v70 + 2 >= v212) {
        goto LABEL_102;
      }
      uint64_t v71 = *(void *)(v211 + 8 * v69);
      if (v71) {
        goto LABEL_36;
      }
      uint64_t v69 = v70 + 3;
      if (v70 + 3 >= v212) {
        goto LABEL_102;
      }
      uint64_t v71 = *(void *)(v211 + 8 * v69);
      if (v71) {
        goto LABEL_36;
      }
      uint64_t v69 = v70 + 4;
      if (v70 + 4 >= v212) {
        goto LABEL_102;
      }
      uint64_t v71 = *(void *)(v211 + 8 * v69);
      if (v71) {
        goto LABEL_36;
      }
      uint64_t v72 = v70 + 5;
      if (v72 >= v212) {
        goto LABEL_102;
      }
      uint64_t v71 = *(void *)(v211 + 8 * v72);
      if (v71)
      {
        uint64_t v69 = v72;
LABEL_36:
        for (uint64_t i = (v71 - 1) & v71; ; i &= i - 1)
        {
          swift_bridgeObjectRetain();
          sub_1ACE749F8();
          swift_bridgeObjectRelease();
          uint64_t v54 = v213;
          (*(void (**)(char *, void, uint64_t, uint64_t))v8)(v14, 0, 1, v213);
          swift_bridgeObjectRelease();
          if ((*v68)(v14, 1, v54) == 1)
          {
            sub_1ACA50E78((uint64_t)v14, &qword_1E99F2A20);
            if (!i) {
              goto LABEL_13;
            }
          }
          else
          {
            uint64_t v73 = *(void (**)(unint64_t, uint64_t, uint64_t))v208;
            uint64_t v74 = v201;
            uint64_t v75 = v213;
            (*(void (**)(uint64_t, char *, uint64_t))v208)(v201, v14, v213);
            v73(v210, v74, v75);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              v209 = (void *)sub_1ACA42334(0, v209[2] + 1, 1, (unint64_t)v209);
            }
            unint64_t v77 = v209[2];
            unint64_t v76 = v209[3];
            uint64_t v54 = v77 + 1;
            if (v77 >= v76 >> 1) {
              v209 = (void *)sub_1ACA42334(v76 > 1, v77 + 1, 1, (unint64_t)v209);
            }
            uint64_t v78 = v209;
            v209[2] = v54;
            v73((unint64_t)v78+ ((*(unsigned __int8 *)(v206 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v206 + 80))+ *(void *)(v206 + 72) * v77, v210, v213);
            if (!i) {
              goto LABEL_13;
            }
          }
LABEL_10:
          ;
        }
      }
      while (1)
      {
        uint64_t v69 = v72 + 1;
        if (__OFADD__(v72, 1)) {
          break;
        }
        if (v69 >= v212)
        {
LABEL_102:
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v132 = (uint64_t)v202;
          sub_1ACE74A58();
          uint64_t v54 = sub_1ACE74AE8();
          uint64_t v69 = v133;
          (*((void (**)(uint64_t, uint64_t))v207 + 1))(v132, v196);
          swift_bridgeObjectRelease_n();
          uint64_t v8 = MEMORY[0x1E4FBC860];
          if (!v69) {
            goto LABEL_144;
          }
          if (swift_isUniquelyReferenced_nonNull_native()) {
            goto LABEL_104;
          }
          goto LABEL_196;
        }
        uint64_t v71 = *(void *)(v211 + 8 * v69);
        ++v72;
        if (v71) {
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_196:
      uint64_t v8 = (uint64_t)sub_1ACA41EA0(0, *(void *)(v8 + 16) + 1, 1, (void *)v8);
LABEL_104:
      unint64_t v135 = *(void *)(v8 + 16);
      unint64_t v134 = *(void *)(v8 + 24);
      if (v135 >= v134 >> 1) {
        uint64_t v8 = (uint64_t)sub_1ACA41EA0((void *)(v134 > 1), v135 + 1, 1, (void *)v8);
      }
      *(void *)(v8 + 16) = v135 + 1;
      uint64_t v136 = v8 + 16 * v135;
      *(void *)(v136 + 32) = v54;
      *(void *)(v136 + 40) = v69;
      goto LABEL_144;
    case 1:
      MEMORY[0x1F4188790](v40);
      *(&v187 - 2) = v211;
      uint64_t v80 = v79;
      swift_bridgeObjectRetain();
      uint64_t v8 = (uint64_t)sub_1ACA99BEC((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1ACB8B5A8, (uint64_t)(&v187 - 4), v53);
      swift_bridgeObjectRelease();
      uint64_t v81 = v53;
      uint64_t v82 = v80;
      uint64_t v83 = v54;
      uint64_t v84 = v55;
      unsigned __int8 v85 = 1;
      goto LABEL_148;
    case 7:
      v195 = *(char **)(v53 + 16);
      if (!v195)
      {
        uint64_t v160 = v52;
        swift_bridgeObjectRetain();
        uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_147:
        swift_bridgeObjectRelease();
        uint64_t v81 = v53;
        uint64_t v82 = v160;
        uint64_t v83 = v54;
        uint64_t v84 = v55;
        unsigned __int8 v85 = 7;
LABEL_148:
        sub_1ACA63688(v81, v82, v83, v84, v85);
        return v8;
      }
      uint64_t v188 = v52;
      uint64_t v190 = v54;
      uint64_t v189 = v55;
      sub_1ACA639E4(v53, v52, v54, v55, 7u);
      uint64_t v194 = v53 + 32;
      uint64_t v86 = (void (**)(char *, void, uint64_t, uint64_t))(v206 + 56);
      uint64_t v87 = (unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48);
      v208 = (char *)(v206 + 32);
      v192 = (void (**)(char *, uint64_t))(v207 + 8);
      uint64_t v191 = v53;
      swift_bridgeObjectRetain();
      uint64_t v88 = 0;
      uint64_t v8 = MEMORY[0x1E4FBC860];
      v207 = "okmarkState";
LABEL_42:
      v204 = (char *)v8;
      uint64_t v89 = v194 + 40 * (void)v88;
      uint64_t v90 = *(void *)v89;
      uint64_t v91 = *(void *)(v89 + 8);
      uint64_t v92 = *(void *)(v89 + 16);
      uint64_t v93 = *(void *)(v89 + 24);
      int v94 = *(unsigned __int8 *)(v89 + 32);
      v203 = v88 + 1;
      uint64_t v222 = v90;
      uint64_t v223 = v91;
      uint64_t v224 = v92;
      uint64_t v225 = v93;
      unsigned __int8 v226 = v94;
      v202 = (void *)v90;
      uint64_t v201 = v91;
      v200 = (char *)v92;
      uint64_t v199 = v93;
      LODWORD(v198) = v94;
      sub_1ACA626E4(v90, v91, v92, v93, v94);
      UniversalEpisodeIdentifier.urlTrackIdentifier()();
      uint64_t v95 = v220;
      uint64_t i = v221;
      sub_1ACE74B08();
      sub_1ACE74AC8();
      MEMORY[0x1AD116C40](*(void *)&aPlaypodcplaypo[8 * i], *(void *)&aPlaypodcplaypo[8 * i + 40]);
      uint64_t v96 = *(void *)(v95 + 64);
      uint64_t v211 = v95 + 64;
      uint64_t v97 = 1 << *(unsigned char *)(v95 + 32);
      if (v97 < 64) {
        uint64_t v98 = ~(-1 << v97);
      }
      else {
        uint64_t v98 = -1;
      }
      unint64_t v99 = v98 & v96;
      uint64_t v212 = (unint64_t)(v97 + 63) >> 6;
      swift_bridgeObjectRetain_n();
      uint64_t v100 = 0;
      uint64_t v210 = MEMORY[0x1E4FBC860];
      if (v99)
      {
LABEL_46:
        unint64_t v101 = __clz(__rbit64(v99));
        v99 &= v99 - 1;
        unint64_t v102 = v101 | (v100 << 6);
        goto LABEL_74;
      }
      while (1)
      {
        uint64_t v103 = v100 + 1;
        if (__OFADD__(v100, 1))
        {
          __break(1u);
          goto LABEL_144;
        }
        if (v103 >= v212) {
          goto LABEL_92;
        }
        unint64_t v104 = *(void *)(v211 + 8 * v103);
        ++v100;
        if (!v104)
        {
          uint64_t v100 = v103 + 1;
          if (v103 + 1 >= v212) {
            goto LABEL_92;
          }
          unint64_t v104 = *(void *)(v211 + 8 * v100);
          if (!v104)
          {
            uint64_t v100 = v103 + 2;
            if (v103 + 2 >= v212) {
              goto LABEL_92;
            }
            unint64_t v104 = *(void *)(v211 + 8 * v100);
            if (!v104)
            {
              uint64_t v100 = v103 + 3;
              if (v103 + 3 >= v212) {
                goto LABEL_92;
              }
              unint64_t v104 = *(void *)(v211 + 8 * v100);
              if (!v104)
              {
                uint64_t v100 = v103 + 4;
                if (v103 + 4 >= v212) {
                  goto LABEL_92;
                }
                unint64_t v104 = *(void *)(v211 + 8 * v100);
                if (!v104)
                {
                  uint64_t v105 = v103 + 5;
                  if (v105 >= v212) {
                    goto LABEL_92;
                  }
                  unint64_t v104 = *(void *)(v211 + 8 * v105);
                  if (!v104)
                  {
                    while (1)
                    {
                      uint64_t v100 = v105 + 1;
                      if (__OFADD__(v105, 1)) {
                        goto LABEL_190;
                      }
                      if (v100 >= v212) {
                        break;
                      }
                      unint64_t v104 = *(void *)(v211 + 8 * v100);
                      ++v105;
                      if (v104) {
                        goto LABEL_73;
                      }
                    }
LABEL_92:
                    swift_release();
                    swift_bridgeObjectRelease();
                    uint64_t v112 = v205;
                    sub_1ACE74A58();
                    uint64_t v113 = sub_1ACE74AE8();
                    uint64_t v115 = v114;
                    (*v192)(v112, v196);
                    swift_bridgeObjectRelease();
                    sub_1ACA633B0((uint64_t)v202, v201, (uint64_t)v200, v199, v198);
                    if (v115)
                    {
                      uint64_t v8 = (uint64_t)v204;
                      char v116 = swift_isUniquelyReferenced_nonNull_native();
                      uint64_t v88 = v203;
                      if ((v116 & 1) == 0) {
                        uint64_t v8 = (uint64_t)sub_1ACA41EA0(0, *(void *)(v8 + 16) + 1, 1, (void *)v8);
                      }
                      unint64_t v118 = *(void *)(v8 + 16);
                      unint64_t v117 = *(void *)(v8 + 24);
                      if (v118 >= v117 >> 1) {
                        uint64_t v8 = (uint64_t)sub_1ACA41EA0((void *)(v117 > 1), v118 + 1, 1, (void *)v8);
                      }
                      *(void *)(v8 + 16) = v118 + 1;
                      uint64_t v119 = v8 + 16 * v118;
                      *(void *)(v119 + 32) = v113;
                      *(void *)(v119 + 40) = v115;
                    }
                    else
                    {
                      uint64_t v8 = (uint64_t)v204;
                      uint64_t v88 = v203;
                    }
                    if (v88 == v195)
                    {
                      uint64_t v53 = v191;
                      uint64_t v160 = v188;
                      uint64_t v54 = v190;
                      uint64_t v55 = v189;
                      sub_1ACA63688(v191, v188, v190, v189, 7u);
                      goto LABEL_147;
                    }
                    goto LABEL_42;
                  }
                  uint64_t v100 = v105;
                }
              }
            }
          }
        }
LABEL_73:
        unint64_t v99 = (v104 - 1) & v104;
        unint64_t v102 = __clz(__rbit64(v104)) + (v100 << 6);
LABEL_74:
        uint64_t v8 = 0x6461656879616C70;
        switch(*(unsigned char *)(*(void *)(v95 + 48) + v102))
        {
          case 1:
            uint64_t v8 = 0x5565646F73697065;
            break;
          case 2:
            uint64_t v8 = 0xD000000000000011;
            break;
          case 3:
            uint64_t v8 = 0x61725465726F7473;
            break;
          case 4:
            uint64_t v8 = 0x6B63616279616C70;
            break;
          case 5:
            uint64_t v8 = 0x4674736163646F70;
            break;
          case 6:
            uint64_t v8 = 1684632420;
            break;
          case 7:
            uint64_t v8 = 0x49746E65746E6F63;
            break;
          case 8:
            uint64_t v8 = 0x4765646F73697065;
            break;
          case 9:
            uint64_t v8 = 0x5465646F73697065;
            break;
          case 0xA:
            uint64_t v8 = 0x5474736163646F70;
            break;
          case 0xB:
            uint64_t v8 = 0x72556D6165727473;
            break;
          case 0xC:
            break;
          case 0xD:
            uint64_t v8 = 0x7361655279616C70;
            break;
          case 0xE:
            uint64_t v8 = 0x747865746E6F63;
            break;
          case 0xF:
            uint64_t v8 = 0x53747865746E6F63;
            break;
          case 0x10:
            uint64_t v8 = 0x7265756575716E65;
            break;
          default:
            uint64_t v8 = 1684632949;
            break;
        }
        swift_bridgeObjectRetain();
        sub_1ACE749F8();
        swift_bridgeObjectRelease();
        uint64_t i = v213;
        (*v86)(v11, 0, 1, v213);
        swift_bridgeObjectRelease();
        if ((*v87)(v11, 1, i) == 1)
        {
          sub_1ACA50E78((uint64_t)v11, &qword_1E99F2A20);
          if (v99) {
            goto LABEL_46;
          }
        }
        else
        {
          uint64_t v8 = (uint64_t)v208;
          uint64_t v106 = *(void (**)(unint64_t, uint64_t, uint64_t))v208;
          uint64_t v107 = v197;
          uint64_t v108 = v213;
          (*(void (**)(char *, char *, uint64_t))v208)(v197, v11, v213);
          v106((unint64_t)v209, (uint64_t)v107, v108);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v210 = sub_1ACA42334(0, *(void *)(v210 + 16) + 1, 1, v210);
          }
          unint64_t v110 = *(void *)(v210 + 16);
          unint64_t v109 = *(void *)(v210 + 24);
          uint64_t i = v110 + 1;
          if (v110 >= v109 >> 1) {
            uint64_t v210 = sub_1ACA42334(v109 > 1, v110 + 1, 1, v210);
          }
          unint64_t v111 = v210;
          *(void *)(v210 + 16) = i;
          v106(v111+ ((*(unsigned __int8 *)(v206 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v206 + 80))+ *(void *)(v206 + 72) * v110, (uint64_t)v209, v213);
          if (v99) {
            goto LABEL_46;
          }
        }
      }
    case 8:
      if (v52 | v53 | v54 | v55) {
        goto LABEL_99;
      }
      v205 = v32;
      long long v214 = xmmword_1ACE843F0;
      v204 = (char *)&v215;
      uint64_t v162 = swift_bridgeObjectRetain();
      uint64_t v163 = sub_1ACACB2F0(v162);
      swift_bridgeObjectRelease();
      uint64_t v215 = v163;
      char v216 = 0;
      swift_bridgeObjectRetain_n();
      sub_1ACE74B08();
      sub_1ACE74AC8();
      MEMORY[0x1AD116C40](0x63646F5079616C70, 0xEC00000073747361);
      uint64_t v164 = *(void *)(v163 + 64);
      uint64_t v211 = v163 + 64;
      uint64_t v165 = 1 << *(unsigned char *)(v163 + 32);
      uint64_t v166 = -1;
      if (v165 < 64) {
        uint64_t v166 = ~(-1 << v165);
      }
      uint64_t i = v166 & v164;
      uint64_t v212 = (unint64_t)(v165 + 63) >> 6;
      v167 = (void (**)(char *, void, uint64_t, uint64_t))(v206 + 56);
      v168 = (unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48);
      v209 = (void *)(v206 + 32);
      swift_bridgeObjectRetain_n();
      uint64_t v169 = 0;
      uint64_t v210 = MEMORY[0x1E4FBC860];
      v208 = "okmarkState";
      if (i) {
        goto LABEL_153;
      }
LABEL_156:
      uint64_t v173 = v169 + 1;
      if (!__OFADD__(v169, 1))
      {
        if (v173 >= v212) {
          goto LABEL_181;
        }
        unint64_t v174 = *(void *)(v211 + 8 * v173);
        ++v169;
        if (!v174)
        {
          uint64_t v169 = v173 + 1;
          if (v173 + 1 >= v212) {
            goto LABEL_181;
          }
          unint64_t v174 = *(void *)(v211 + 8 * v169);
          if (!v174)
          {
            uint64_t v169 = v173 + 2;
            if (v173 + 2 >= v212) {
              goto LABEL_181;
            }
            unint64_t v174 = *(void *)(v211 + 8 * v169);
            if (!v174)
            {
              uint64_t v169 = v173 + 3;
              if (v173 + 3 >= v212) {
                goto LABEL_181;
              }
              unint64_t v174 = *(void *)(v211 + 8 * v169);
              if (!v174)
              {
                uint64_t v169 = v173 + 4;
                if (v173 + 4 >= v212) {
                  goto LABEL_181;
                }
                unint64_t v174 = *(void *)(v211 + 8 * v169);
                if (!v174)
                {
                  uint64_t v175 = v173 + 5;
                  if (v175 < v212)
                  {
                    unint64_t v174 = *(void *)(v211 + 8 * v175);
                    if (v174)
                    {
                      uint64_t v169 = v175;
                      goto LABEL_179;
                    }
                    while (1)
                    {
                      uint64_t v169 = v175 + 1;
                      if (__OFADD__(v175, 1)) {
                        break;
                      }
                      if (v169 >= v212) {
                        goto LABEL_181;
                      }
                      unint64_t v174 = *(void *)(v211 + 8 * v169);
                      ++v175;
                      if (v174) {
                        goto LABEL_179;
                      }
                    }
                    __break(1u);
LABEL_198:
                    uint64_t v8 = (uint64_t)sub_1ACA41EA0(0, *(void *)(v8 + 16) + 1, 1, (void *)v8);
LABEL_183:
                    unint64_t v185 = *(void *)(v8 + 16);
                    unint64_t v184 = *(void *)(v8 + 24);
                    if (v185 >= v184 >> 1) {
                      uint64_t v8 = (uint64_t)sub_1ACA41EA0((void *)(v184 > 1), v185 + 1, 1, (void *)v8);
                    }
                    *(void *)(v8 + 16) = v185 + 1;
                    uint64_t v186 = v8 + 16 * v185;
                    *(void *)(v186 + 32) = v167;
                    *(void *)(v186 + 40) = v169;
                    goto LABEL_144;
                  }
LABEL_181:
                  swift_release();
                  swift_bridgeObjectRelease();
                  uint64_t v182 = v199;
                  sub_1ACE74A58();
                  v167 = (void (**)(char *, void, uint64_t, uint64_t))sub_1ACE74AE8();
                  uint64_t v169 = v183;
                  (*((void (**)(uint64_t, uint64_t))v207 + 1))(v182, v196);
                  swift_bridgeObjectRelease_n();
                  uint64_t v8 = MEMORY[0x1E4FBC860];
                  if (!v169) {
                    goto LABEL_144;
                  }
                  if (swift_isUniquelyReferenced_nonNull_native()) {
                    goto LABEL_183;
                  }
                  goto LABEL_198;
                }
              }
            }
          }
        }
LABEL_179:
        uint64_t i = (v174 - 1) & v174;
        for (unint64_t j = __clz(__rbit64(v174)) + (v169 << 6); ; unint64_t j = v170 | (v169 << 6))
        {
          uint64_t v8 = *(void *)(*(void *)(v163 + 56) + 16 * j + 8);
          swift_bridgeObjectRetain();
          sub_1ACE749F8();
          swift_bridgeObjectRelease();
          uint64_t v172 = v213;
          (*v167)(v16, 0, 1, v213);
          swift_bridgeObjectRelease();
          if ((*v168)(v16, 1, v172) == 1)
          {
            sub_1ACA50E78((uint64_t)v16, &qword_1E99F2A20);
            if (!i) {
              goto LABEL_156;
            }
          }
          else
          {
            v176 = (void (*)(uint64_t, char *, uint64_t))*v209;
            v177 = v205;
            uint64_t v178 = v213;
            ((void (*)(char *, char *, uint64_t))*v209)(v205, v16, v213);
            v176((uint64_t)v200, v177, v178);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v210 = sub_1ACA42334(0, *(void *)(v210 + 16) + 1, 1, v210);
            }
            unint64_t v180 = *(void *)(v210 + 16);
            unint64_t v179 = *(void *)(v210 + 24);
            uint64_t v8 = v180 + 1;
            if (v180 >= v179 >> 1) {
              uint64_t v210 = sub_1ACA42334(v179 > 1, v180 + 1, 1, v210);
            }
            unint64_t v181 = v210;
            *(void *)(v210 + 16) = v8;
            v176(v181+ ((*(unsigned __int8 *)(v206 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v206 + 80))+ *(void *)(v206 + 72) * v180, v200, v213);
            if (!i) {
              goto LABEL_156;
            }
          }
LABEL_153:
          unint64_t v170 = __clz(__rbit64(i));
          i &= i - 1;
        }
      }
LABEL_191:
      __break(1u);
LABEL_192:
      swift_once();
LABEL_100:
      uint64_t v120 = sub_1ACE754C8();
      __swift_project_value_buffer(v120, (uint64_t)qword_1EB76D4A8);
      uint64_t v121 = v212;
      sub_1ACB85B80(i, v212, type metadata accessor for PlaybackIntent);
      char v122 = sub_1ACE75498();
      os_log_type_t v123 = sub_1ACE76BE8();
      if (os_log_type_enabled(v122, v123))
      {
        uint64_t v124 = (uint8_t *)swift_slowAlloc();
        uint64_t v125 = swift_slowAlloc();
        *(_DWORD *)uint64_t v124 = 136315138;
        uint64_t v220 = v125;
        uint64_t v126 = *(void *)(v121 + 8);
        uint64_t v127 = *(void *)(v121 + 16);
        uint64_t v128 = *(void *)(v121 + 24);
        unsigned __int8 v129 = *(unsigned char *)(v121 + 32);
        uint64_t v222 = *(void *)v121;
        uint64_t v223 = v126;
        uint64_t v224 = v127;
        uint64_t v225 = v128;
        unsigned __int8 v226 = v129;
        sub_1ACA639E4(v222, v126, v127, v128, v129);
        uint64_t v130 = sub_1ACE76228();
        uint64_t v222 = sub_1ACA3189C(v130, v131, &v220);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        sub_1ACB85C50(v121, type metadata accessor for PlaybackIntent);
        _os_log_impl(&dword_1AC9D5000, v122, v123, "Unable to create remote identifier from: %s", v124, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v125, -1, -1);
        MEMORY[0x1AD11B340](v124, -1, -1);
      }
      else
      {
        sub_1ACB85C50(v121, type metadata accessor for PlaybackIntent);
      }

      long long v227 = xmmword_1ACE843F0;
      v202 = &v228;
      uint64_t v137 = swift_bridgeObjectRetain();
      uint64_t v138 = sub_1ACACB2F0(v137);
      swift_bridgeObjectRelease();
      uint64_t v228 = v138;
      char v229 = 0;
      swift_bridgeObjectRetain_n();
      sub_1ACE74B08();
      sub_1ACE74AC8();
      MEMORY[0x1AD116C40](0x63646F5079616C70, 0xEC00000073747361);
      uint64_t v139 = *(void *)(v138 + 64);
      uint64_t v211 = v138 + 64;
      uint64_t v140 = 1 << *(unsigned char *)(v138 + 32);
      uint64_t v141 = -1;
      if (v140 < 64) {
        uint64_t v141 = ~(-1 << v140);
      }
      uint64_t i = v141 & v139;
      uint64_t v212 = (unint64_t)(v140 + 63) >> 6;
      uint64_t v142 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v206 + 56);
      uint64_t v143 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v206 + 48);
      v209 = (void *)(v206 + 32);
      swift_bridgeObjectRetain_n();
      uint64_t v144 = 0;
      uint64_t v210 = MEMORY[0x1E4FBC860];
      v205 = "okmarkState";
      if (i)
      {
LABEL_112:
        i &= i - 1;
        goto LABEL_113;
      }
      break;
    default:
LABEL_99:
      uint64_t i = v1;
      if (qword_1EB76D4C0 == -1) {
        goto LABEL_100;
      }
      goto LABEL_192;
  }
  while (1)
  {
    uint64_t v146 = v144 + 1;
    if (__OFADD__(v144, 1))
    {
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      __break(1u);
      goto LABEL_191;
    }
    if (v146 >= v212) {
      goto LABEL_139;
    }
    uint64_t v147 = *(void *)(v211 + 8 * v146);
    ++v144;
    if (!v147)
    {
      uint64_t v144 = v146 + 1;
      if (v146 + 1 >= v212) {
        goto LABEL_139;
      }
      uint64_t v147 = *(void *)(v211 + 8 * v144);
      if (!v147)
      {
        uint64_t v144 = v146 + 2;
        if (v146 + 2 >= v212) {
          goto LABEL_139;
        }
        uint64_t v147 = *(void *)(v211 + 8 * v144);
        if (!v147)
        {
          uint64_t v144 = v146 + 3;
          if (v146 + 3 >= v212) {
            goto LABEL_139;
          }
          uint64_t v147 = *(void *)(v211 + 8 * v144);
          if (!v147)
          {
            uint64_t v144 = v146 + 4;
            if (v146 + 4 >= v212) {
              goto LABEL_139;
            }
            uint64_t v147 = *(void *)(v211 + 8 * v144);
            if (!v147) {
              break;
            }
          }
        }
      }
    }
LABEL_138:
    uint64_t i = (v147 - 1) & v147;
LABEL_113:
    swift_bridgeObjectRetain();
    sub_1ACE749F8();
    swift_bridgeObjectRelease();
    uint64_t v145 = v213;
    (*v142)(v8, 0, 1, v213);
    swift_bridgeObjectRelease();
    if ((*v143)(v8, 1, v145) == 1)
    {
      sub_1ACA50E78(v8, &qword_1E99F2A20);
      if (i) {
        goto LABEL_112;
      }
    }
    else
    {
      v149 = (void (*)(char *, char *, uint64_t))*v209;
      uint64_t v150 = v203;
      uint64_t v151 = v213;
      ((void (*)(char *, uint64_t, uint64_t))*v209)(v203, v8, v213);
      v149(v208, v150, v151);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v210 = sub_1ACA42334(0, *(void *)(v210 + 16) + 1, 1, v210);
      }
      unint64_t v153 = *(void *)(v210 + 16);
      unint64_t v152 = *(void *)(v210 + 24);
      if (v153 >= v152 >> 1) {
        uint64_t v210 = sub_1ACA42334(v152 > 1, v153 + 1, 1, v210);
      }
      unint64_t v154 = v210;
      *(void *)(v210 + 16) = v153 + 1;
      v149((char *)(v154+ ((*(unsigned __int8 *)(v206 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v206 + 80))+ *(void *)(v206 + 72) * v153), v208, v213);
      if (i) {
        goto LABEL_112;
      }
    }
  }
  uint64_t v148 = v146 + 5;
  if (v148 < v212)
  {
    uint64_t v147 = *(void *)(v211 + 8 * v148);
    if (!v147)
    {
      while (1)
      {
        uint64_t v144 = v148 + 1;
        if (__OFADD__(v148, 1)) {
          break;
        }
        if (v144 >= v212) {
          goto LABEL_139;
        }
        uint64_t v147 = *(void *)(v211 + 8 * v144);
        ++v148;
        if (v147) {
          goto LABEL_138;
        }
      }
      __break(1u);
LABEL_194:
      uint64_t v8 = (uint64_t)sub_1ACA41EA0(0, *(void *)(v8 + 16) + 1, 1, (void *)v8);
      goto LABEL_141;
    }
    uint64_t v144 = v148;
    goto LABEL_138;
  }
LABEL_139:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v155 = v204;
  sub_1ACE74A58();
  uint64_t v142 = (void (**)(uint64_t, void, uint64_t, uint64_t))sub_1ACE74AE8();
  uint64_t v144 = v156;
  (*((void (**)(char *, uint64_t))v207 + 1))(v155, v196);
  swift_bridgeObjectRelease_n();
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (!v144) {
    goto LABEL_144;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_194;
  }
LABEL_141:
  unint64_t v158 = *(void *)(v8 + 16);
  unint64_t v157 = *(void *)(v8 + 24);
  if (v158 >= v157 >> 1) {
    uint64_t v8 = (uint64_t)sub_1ACA41EA0((void *)(v157 > 1), v158 + 1, 1, (void *)v8);
  }
  *(void *)(v8 + 16) = v158 + 1;
  uint64_t v159 = v8 + 16 * v158;
  *(void *)(v159 + 32) = v142;
  *(void *)(v159 + 40) = v144;
LABEL_144:
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1ACB85A44@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  sub_1ACA55E4C();
  uint64_t v9 = sub_1ACE770B8();
  uint64_t v11 = v10;
  sub_1ACB85B80(a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  URLTrackIdentifier.init(id:playbackContext:)(v9, v11, (uint64_t)v8, (uint64_t)&v18);
  uint64_t v16 = v18;
  char v17 = v19;
  uint64_t v12 = URLTrackIdentifier.stringValue.getter();
  uint64_t v14 = v13;
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v12;
  a3[1] = v14;
  return result;
}

void sub_1ACB85B58(uint64_t a1)
{
  sub_1ACB81294(a1, *(void *)(v1 + 16));
}

uint64_t type metadata accessor for PlaybackIntent.ValidationError(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1E99F2A30);
}

uint64_t sub_1ACB85B80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACB85BE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACB85C50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1ACB85CB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACB85CF8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACB86234(a1, a2, a3, a4, &qword_1EB770730);
}

void sub_1ACB85D04(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v5 = a3;
    if (*(void *)(a4 + 16) != a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771920);
      uint64_t v8 = sub_1ACE77238();
      if (a2 < 1) {
        unint64_t v9 = 0;
      }
      else {
        unint64_t v9 = *a1;
      }
      uint64_t v10 = 0;
      while (1)
      {
        if (v9)
        {
          unint64_t v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          unint64_t v12 = v11 | (v10 << 6);
        }
        else
        {
          uint64_t v13 = v10 + 1;
          if (__OFADD__(v10, 1)) {
            goto LABEL_29;
          }
          if (v13 >= a2)
          {
LABEL_27:
            swift_release();
            return;
          }
          unint64_t v14 = a1[v13];
          ++v10;
          if (!v14)
          {
            uint64_t v10 = v13 + 1;
            if (v13 + 1 >= a2) {
              goto LABEL_27;
            }
            unint64_t v14 = a1[v10];
            if (!v14)
            {
              uint64_t v10 = v13 + 2;
              if (v13 + 2 >= a2) {
                goto LABEL_27;
              }
              unint64_t v14 = a1[v10];
              if (!v14)
              {
                uint64_t v15 = v13 + 3;
                if (v15 >= a2) {
                  goto LABEL_27;
                }
                unint64_t v14 = a1[v15];
                if (!v14)
                {
                  while (1)
                  {
                    uint64_t v10 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      goto LABEL_30;
                    }
                    if (v10 >= a2) {
                      goto LABEL_27;
                    }
                    unint64_t v14 = a1[v10];
                    ++v15;
                    if (v14) {
                      goto LABEL_24;
                    }
                  }
                }
                uint64_t v10 = v15;
              }
            }
          }
LABEL_24:
          unint64_t v9 = (v14 - 1) & v14;
          unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
        }
        uint64_t v16 = *(void *)(a4 + 48) + 72 * v12;
        v21[0] = *(_OWORD *)v16;
        long long v18 = *(_OWORD *)(v16 + 32);
        long long v17 = *(_OWORD *)(v16 + 48);
        long long v19 = *(_OWORD *)(v16 + 16);
        uint64_t v22 = *(void *)(v16 + 64);
        v21[2] = v18;
        uint64_t v21[3] = v17;
        v21[1] = v19;
        sub_1ACB99C68(v21);
        sub_1ACD32850((uint64_t)v21, v8);
        if (__OFSUB__(v5--, 1)) {
          break;
        }
        if (!v5) {
          goto LABEL_27;
        }
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
    }
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_1ACB85EC0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACB86234(a1, a2, a3, a4, &qword_1E99F2AE0);
}

uint64_t sub_1ACB85ECC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x1E4FBC870];
    goto LABEL_38;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) != a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2AF0);
    uint64_t v7 = sub_1ACE77238();
    uint64_t v8 = v7;
    uint64_t v33 = a2;
    if (a2 < 1) {
      unint64_t v9 = 0;
    }
    else {
      unint64_t v9 = *a1;
    }
    uint64_t v10 = 0;
    uint64_t v11 = v7 + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v12 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        uint64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_41;
        }
        if (v14 >= v33) {
          goto LABEL_38;
        }
        unint64_t v15 = a1[v14];
        ++v10;
        if (!v15)
        {
          uint64_t v10 = v14 + 1;
          if (v14 + 1 >= v33) {
            goto LABEL_38;
          }
          unint64_t v15 = a1[v10];
          if (!v15)
          {
            uint64_t v10 = v14 + 2;
            if (v14 + 2 >= v33) {
              goto LABEL_38;
            }
            unint64_t v15 = a1[v10];
            if (!v15)
            {
              uint64_t v16 = v14 + 3;
              if (v16 >= v33) {
                goto LABEL_38;
              }
              unint64_t v15 = a1[v16];
              if (!v15)
              {
                while (1)
                {
                  uint64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_42;
                  }
                  if (v10 >= v33) {
                    goto LABEL_38;
                  }
                  unint64_t v15 = a1[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              uint64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(v4 + 48) + 16 * v13;
      uint64_t v18 = *(void *)v17;
      int v19 = *(unsigned __int8 *)(v17 + 8);
      char v20 = *(unsigned char *)(v17 + 9);
      sub_1ACE77B18();
      sub_1ACE77B38();
      if (v19 != 1) {
        sub_1ACE77B58();
      }
      sub_1ACE76108();
      swift_bridgeObjectRelease();
      uint64_t v21 = sub_1ACE77B78();
      uint64_t v22 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v23 = v21 & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_36;
      }
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          JUMPOUT(0x1ACB86224);
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
LABEL_36:
      *(void *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      uint64_t v30 = *(void *)(v8 + 48) + 16 * v25;
      *(void *)uint64_t v30 = v18;
      *(unsigned char *)(v30 + 8) = v19;
      *(unsigned char *)(v30 + 9) = v20;
      ++*(void *)(v8 + 16);
      if (__OFSUB__(v5--, 1)) {
        goto LABEL_40;
      }
      if (!v5)
      {
LABEL_38:
        swift_release();
        return v8;
      }
    }
  }
  return v4;
}

uint64_t sub_1ACB86234(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a4;
  if (!a3)
  {
    uint64_t v10 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v10;
  }
  uint64_t v6 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v5;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t result = sub_1ACE77238();
  uint64_t v10 = result;
  uint64_t v29 = a1;
  if (a2 < 1) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = *a1;
  }
  uint64_t v12 = 0;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    uint64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_39;
    }
    if (v16 >= a2) {
      goto LABEL_36;
    }
    unint64_t v17 = v29[v16];
    ++v12;
    if (!v17)
    {
      uint64_t v12 = v16 + 1;
      if (v16 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v17 = v29[v12];
      if (!v17)
      {
        uint64_t v12 = v16 + 2;
        if (v16 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v17 = v29[v12];
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    id v19 = *(id *)(*(void *)(v5 + 48) + 8 * v15);
    uint64_t result = sub_1ACE76F58();
    uint64_t v20 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v13 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v13 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v13 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v13 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(*(void *)(v10 + 48) + 8 * v23) = v19;
    ++*(void *)(v10 + 16);
    if (__OFSUB__(v6--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v6) {
      goto LABEL_36;
    }
  }
  uint64_t v18 = v16 + 3;
  if (v18 >= a2) {
    goto LABEL_36;
  }
  unint64_t v17 = v29[v18];
  if (v17)
  {
    uint64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= a2) {
      goto LABEL_36;
    }
    unint64_t v17 = v29[v12];
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1ACB86490(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769008);
  uint64_t result = sub_1ACE77238();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1ACE77B18();
    swift_bridgeObjectRetain();
    sub_1ACE76108();
    uint64_t result = sub_1ACE77B78();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    BOOL v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    void *v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1ACB86728(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2AE8);
  uint64_t result = sub_1ACE77238();
  uint64_t v9 = result;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = a1[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = a1[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = a1[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_1ACE77B08();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = a1[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = a1[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1ACB86970(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A848);
  uint64_t result = sub_1ACE77238();
  uint64_t v9 = result;
  BOOL v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    sub_1ACE77B18();
    sub_1ACE77B58();
    uint64_t result = sub_1ACE77B78();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1ACB86BDC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0FA8);
  uint64_t result = sub_1ACE77238();
  uint64_t v9 = result;
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= v32) {
      goto LABEL_36;
    }
    unint64_t v16 = v31[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= v32) {
        goto LABEL_36;
      }
      unint64_t v16 = v31[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= v32) {
          goto LABEL_36;
        }
        unint64_t v16 = v31[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v4 + 48) + 16 * v14;
    uint64_t v19 = *(void *)v18;
    char v20 = *(unsigned char *)(v18 + 8);
    sub_1ACE77B18();
    sub_1ACE77B28();
    uint64_t result = sub_1ACE77B78();
    uint64_t v21 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v29 = *(void *)(v9 + 48) + 16 * v24;
    *(void *)uint64_t v29 = v19;
    *(unsigned char *)(v29 + 8) = v20;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= v32) {
    goto LABEL_36;
  }
  unint64_t v16 = v31[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v32) {
      goto LABEL_36;
    }
    unint64_t v16 = v31[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1ACB86E74(uint64_t a1, uint64_t a2)
{
  v74[5] = *MEMORY[0x1E4F143B8];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v59 = a1 + 56;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v57 = ~v3;
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & v2;
  int64_t v58 = (unint64_t)(63 - v3) >> 6;
  uint64_t v73 = (char *)(a2 + 56);
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = a2;
  int64_t v61 = 0;
  uint64_t v60 = v7;
  uint64_t v66 = a2;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = v9 | (v61 << 6);
    }
    else
    {
      int64_t v12 = v61 + 1;
      if (__OFADD__(v61, 1))
      {
        __break(1u);
        goto LABEL_70;
      }
      uint64_t v13 = v8;
      if (v12 >= v58) {
        goto LABEL_67;
      }
      unint64_t v14 = *(void *)(v59 + 8 * v12);
      int64_t v15 = v61 + 1;
      if (!v14)
      {
        int64_t v15 = v61 + 2;
        if (v61 + 2 >= v58) {
          goto LABEL_67;
        }
        unint64_t v14 = *(void *)(v59 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v61 + 3;
          if (v61 + 3 >= v58) {
            goto LABEL_67;
          }
          unint64_t v14 = *(void *)(v59 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v61 + 4;
            if (v61 + 4 >= v58) {
              goto LABEL_67;
            }
            unint64_t v14 = *(void *)(v59 + 8 * v15);
            if (!v14)
            {
              int64_t v16 = v61 + 5;
              if (v61 + 5 >= v58)
              {
LABEL_67:
                sub_1ACA50A70();
                return v13;
              }
              unint64_t v14 = *(void *)(v59 + 8 * v16);
              if (!v14)
              {
                while (1)
                {
                  int64_t v15 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    break;
                  }
                  if (v15 >= v58) {
                    goto LABEL_67;
                  }
                  unint64_t v14 = *(void *)(v59 + 8 * v15);
                  ++v16;
                  if (v14) {
                    goto LABEL_24;
                  }
                }
LABEL_70:
                __break(1u);
              }
              int64_t v15 = v61 + 5;
            }
          }
        }
      }
LABEL_24:
      uint64_t v10 = (v14 - 1) & v14;
      unint64_t v11 = __clz(__rbit64(v14)) + (v15 << 6);
      int64_t v61 = v15;
    }
    uint64_t v17 = *(void *)(v7 + 48) + 72 * v11;
    uint64_t v19 = *(void *)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    int v21 = *(unsigned __int8 *)(v17 + 24);
    uint64_t v23 = *(void *)(v17 + 32);
    uint64_t v22 = *(void *)(v17 + 40);
    unint64_t v25 = *(void *)(v17 + 48);
    uint64_t v24 = *(void *)(v17 + 56);
    uint64_t v26 = *(void *)(v17 + 64);
    sub_1ACE77B18();
    swift_bridgeObjectRetain();
    uint64_t v67 = v23;
    uint64_t v65 = v24;
    sub_1ACA50D88(v23, v22, v25);
    uint64_t v70 = v19;
    uint64_t v71 = v18;
    sub_1ACE76108();
    int v72 = v21;
    sub_1ACE77B38();
    if (v21 != 1) {
      sub_1ACE77B58();
    }
    uint64_t v64 = v22;
    unint64_t v69 = v25;
    unint64_t v62 = v10;
    uint64_t v63 = v26;
    uint64_t v68 = v20;
    sub_1ACE77B28();
    if (v25 > 2)
    {
      sub_1ACE77B38();
      sub_1ACE76108();
      sub_1ACE77B38();
      sub_1ACE77B58();
    }
    uint64_t v27 = sub_1ACE77B78();
    uint64_t v28 = -1 << *(unsigned char *)(v66 + 32);
    unint64_t v29 = v27 & ~v28;
    uint64_t v31 = v70;
    uint64_t v30 = v71;
    if ((*(void *)&v73[(v29 >> 3) & 0xFFFFFFFFFFFFFF8] >> v29)) {
      break;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    sub_1ACA50D9C(v67, v64, v69);
    uint64_t v8 = v66;
    uint64_t v7 = v60;
    unint64_t v5 = v62;
  }
  uint64_t v32 = ~v28;
  uint64_t v33 = *(void *)(v66 + 48);
  while (1)
  {
    uint64_t v34 = v33 + 72 * v29;
    uint64_t v35 = *(void *)(v34 + 16);
    char v36 = *(unsigned char *)(v34 + 24);
    uint64_t v37 = *(void *)(v34 + 32);
    uint64_t v38 = *(void *)(v34 + 40);
    uint64_t v40 = *(void *)(v34 + 48);
    uint64_t v39 = *(void *)(v34 + 56);
    uint64_t v41 = *(void *)(v34 + 64);
    if (*(void *)v34 != v31 || *(void *)(v34 + 8) != v30)
    {
      char v43 = sub_1ACE77848();
      uint64_t v31 = v70;
      uint64_t v30 = v71;
      if ((v43 & 1) == 0) {
        goto LABEL_32;
      }
    }
    if (v36)
    {
      if (!v72) {
        goto LABEL_32;
      }
    }
    else
    {
      char v44 = v72;
      if (v35 != v68) {
        char v44 = 1;
      }
      if (v44) {
        goto LABEL_32;
      }
    }
    if (!v40)
    {
      if (!v69)
      {
        unint64_t v48 = 0;
        v74[0] = v60;
        goto LABEL_63;
      }
      goto LABEL_32;
    }
    if (v40 == 1) {
      break;
    }
    if (v40 == 2)
    {
      if (v69 == 2)
      {
        v74[0] = v60;
        unint64_t v48 = 2;
        goto LABEL_63;
      }
    }
    else if (v69 >= 3 && ((v67 ^ ((v37 & 1) == 0)) & 1) != 0)
    {
      BOOL v45 = v38 == v64 && v40 == v69;
      if (v45 || (v46 = sub_1ACE77848(), uint64_t v31 = v70, v30 = v71, (v46 & 1) != 0))
      {
        if (((v65 ^ v39) & 1) == 0 && v41 == v63)
        {
          v74[0] = v60;
          unint64_t v48 = v69;
          goto LABEL_63;
        }
      }
    }
LABEL_32:
    unint64_t v29 = (v29 + 1) & v32;
    if (((*(void *)&v73[(v29 >> 3) & 0xFFFFFFFFFFFFFF8] >> v29) & 1) == 0) {
      goto LABEL_6;
    }
  }
  if (v69 != 1) {
    goto LABEL_32;
  }
  v74[0] = v60;
  unint64_t v48 = 1;
LABEL_63:
  v74[1] = v59;
  v74[2] = v57;
  v74[3] = v61;
  v74[4] = v62;
  swift_bridgeObjectRelease();
  uint64_t isStackAllocationSafe = sub_1ACA50D9C(v67, v64, v48);
  uint64_t v50 = v66;
  char v51 = *(unsigned char *)(v66 + 32);
  unint64_t v52 = (unint64_t)((1 << v51) + 63) >> 6;
  size_t v53 = 8 * v52;
  if ((v51 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    memcpy((char *)&v57 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v73, v53);
    sub_1ACB89180((unint64_t *)((char *)&v57 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0)), v52, v50, v29, v74);
    uint64_t v13 = v54;
    swift_release();
    sub_1ACA50A70();
  }
  else
  {
    uint64_t v55 = (void *)swift_slowAlloc();
    memcpy(v55, v73, v53);
    sub_1ACB89180((unint64_t *)v55, v52, v66, v29, v74);
    uint64_t v13 = v56;
    swift_release();
    sub_1ACA50A70();
    MEMORY[0x1AD11B340](v55, -1, -1);
  }
  return v13;
}

uint64_t sub_1ACB875EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  v45[5] = *MEMORY[0x1E4F143B8];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v3 = a1;
  uint64_t v5 = a1 + 56;
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v39 = ~v6;
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v44 = v7 & v4;
  int64_t v42 = (unint64_t)(63 - v6) >> 6;
  uint64_t v8 = a2 + 56;
  int64_t v43 = 0;
  uint64_t v40 = a1 + 56;
  uint64_t v41 = swift_bridgeObjectRetain();
  do
  {
LABEL_6:
    if (v44)
    {
      unint64_t v9 = __clz(__rbit64(v44));
      v44 &= v44 - 1;
      unint64_t v10 = v9 | (v43 << 6);
    }
    else
    {
      int64_t v11 = v43 + 1;
      if (__OFADD__(v43, 1))
      {
        __break(1u);
        goto LABEL_60;
      }
      if (v11 >= v42) {
        goto LABEL_58;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v11);
      int64_t v13 = v43 + 1;
      if (!v12)
      {
        int64_t v13 = v43 + 2;
        if (v43 + 2 >= v42) {
          goto LABEL_58;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v43 + 3;
          if (v43 + 3 >= v42) {
            goto LABEL_58;
          }
          unint64_t v12 = *(void *)(v5 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v43 + 4;
            if (v43 + 4 >= v42) {
              goto LABEL_58;
            }
            unint64_t v12 = *(void *)(v5 + 8 * v13);
            if (!v12)
            {
              int64_t v14 = v43 + 5;
              if (v43 + 5 >= v42)
              {
LABEL_58:
                sub_1ACA50A70();
                return v2;
              }
              unint64_t v12 = *(void *)(v5 + 8 * v14);
              if (!v12)
              {
                while (1)
                {
                  int64_t v13 = v14 + 1;
                  if (__OFADD__(v14, 1)) {
                    break;
                  }
                  if (v13 >= v42) {
                    goto LABEL_58;
                  }
                  unint64_t v12 = *(void *)(v5 + 8 * v13);
                  ++v14;
                  if (v12) {
                    goto LABEL_23;
                  }
                }
LABEL_60:
                __break(1u);
              }
              int64_t v13 = v43 + 5;
            }
          }
        }
      }
LABEL_23:
      int64_t v43 = v13;
      unint64_t v44 = (v12 - 1) & v12;
      unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    }
    uint64_t v15 = *(void *)(v3 + 48) + 16 * v10;
    uint64_t v16 = *(void *)v15;
    int v17 = *(unsigned __int8 *)(v15 + 8);
    uint64_t v18 = *(unsigned __int8 *)(v15 + 9);
    sub_1ACE77B18();
    sub_1ACE77B38();
    if ((v17 & 1) == 0) {
      sub_1ACE77B58();
    }
    sub_1ACE76108();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_1ACE77B78();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = v19 & ~v20;
  }
  while (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0);
  uint64_t v22 = ~v20;
  while (2)
  {
    uint64_t v25 = *(void *)(v2 + 48) + 16 * v21;
    uint64_t v26 = *(unsigned __int8 *)(v25 + 9);
    if (*(unsigned char *)(v25 + 8))
    {
      if (!v17) {
        goto LABEL_29;
      }
    }
    else
    {
      if (*(void *)v25 == v16) {
        char v27 = v17;
      }
      else {
        char v27 = 1;
      }
      if (v27) {
        goto LABEL_29;
      }
    }
    unint64_t v28 = 0xEB00000000737365;
    uint64_t v29 = 0x4C74736567677573;
    switch(v26)
    {
      case 1:
        unint64_t v28 = 0xE700000000000000;
        uint64_t v29 = 0x6C61727475656ELL;
        break;
      case 2:
        uint64_t v29 = 0x657469726F766166;
        unint64_t v28 = 0xE900000000000064;
        break;
      case 3:
        unint64_t v28 = 0xE700000000000000;
        uint64_t v29 = 0x6E776F6E6B6E75;
        break;
      default:
        break;
    }
    uint64_t v30 = 0x4C74736567677573;
    unint64_t v31 = 0xEB00000000737365;
    switch(v18)
    {
      case 1:
        unint64_t v31 = 0xE700000000000000;
        if (v29 != 0x6C61727475656ELL) {
          goto LABEL_28;
        }
        goto LABEL_46;
      case 2:
        uint64_t v30 = 0x657469726F766166;
        unint64_t v31 = 0xE900000000000064;
        goto LABEL_45;
      case 3:
        unint64_t v31 = 0xE700000000000000;
        if (v29 != 0x6E776F6E6B6E75) {
          goto LABEL_28;
        }
        goto LABEL_46;
      default:
LABEL_45:
        if (v29 != v30) {
          goto LABEL_28;
        }
LABEL_46:
        if (v28 != v31)
        {
LABEL_28:
          char v23 = sub_1ACE77848();
          swift_bridgeObjectRelease();
          uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
          if (v23) {
            goto LABEL_52;
          }
LABEL_29:
          unint64_t v21 = (v21 + 1) & v22;
          if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          {
            uint64_t v5 = v40;
            uint64_t v3 = v41;
            goto LABEL_6;
          }
          continue;
        }
        uint64_t isStackAllocationSafe = swift_bridgeObjectRelease_n();
LABEL_52:
        v45[0] = v41;
        v45[1] = v40;
        v45[2] = v39;
        v45[3] = v43;
        v45[4] = v44;
        char v32 = *(unsigned char *)(v2 + 32);
        unint64_t v33 = (unint64_t)((1 << v32) + 63) >> 6;
        size_t v34 = 8 * v33;
        if ((v32 & 0x3Fu) <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          memcpy((char *)&v38 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v34);
          uint64_t v35 = sub_1ACB8968C((unint64_t *)((char *)&v38 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0)), v33, v2, v21, v45);
          swift_release();
          sub_1ACA50A70();
        }
        else
        {
          char v36 = (void *)swift_slowAlloc();
          memcpy(v36, (const void *)(v2 + 56), v34);
          uint64_t v35 = sub_1ACB8968C((unint64_t *)v36, v33, v2, v21, v45);
          swift_release();
          sub_1ACA50A70();
          MEMORY[0x1AD11B340](v36, -1, -1);
        }
        return v35;
    }
  }
}

uint64_t sub_1ACB87C64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1ACE77138();
    sub_1ACA8C10C();
    sub_1ACB85CB0((unint64_t *)&unk_1EB768EE0, (void (*)(uint64_t))sub_1ACA8C10C);
    sub_1ACE76A28();
    uint64_t v3 = v46;
    uint64_t v4 = v47;
    uint64_t v6 = v48;
    int64_t v5 = v49;
    unint64_t v7 = v50;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v4 = a1 + 56;
    uint64_t v6 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  uint64_t v41 = v3;
  uint64_t v42 = v4;
  uint64_t v43 = v6;
  int64_t v44 = v5;
  unint64_t v45 = v7;
  uint64_t v11 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        uint64_t v12 = (v7 - 1) & v7;
        unint64_t v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_14:
        int64_t v14 = *(void **)(*(void *)(v3 + 48) + 8 * v13);
        id v15 = v14;
        goto LABEL_15;
      }
      int64_t v25 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        __break(1u);
      }
      int64_t v26 = (unint64_t)(v6 + 64) >> 6;
      if (v25 >= v26)
      {
        int64_t v14 = 0;
        uint64_t v12 = 0;
        goto LABEL_15;
      }
      unint64_t v27 = *(void *)(v42 + 8 * v25);
      if (v27)
      {
LABEL_28:
        uint64_t v12 = (v27 - 1) & v27;
        unint64_t v13 = __clz(__rbit64(v27)) + (v25 << 6);
        int64_t v5 = v25;
        goto LABEL_14;
      }
      int64_t v28 = v5 + 2;
      if (v5 + 2 >= v26) {
        goto LABEL_44;
      }
      unint64_t v27 = *(void *)(v42 + 8 * v28);
      if (v27)
      {
LABEL_32:
        int64_t v25 = v28;
        goto LABEL_28;
      }
      if (v5 + 3 < v26)
      {
        unint64_t v27 = *(void *)(v42 + 8 * (v5 + 3));
        if (v27)
        {
          int64_t v25 = v5 + 3;
          goto LABEL_28;
        }
        int64_t v28 = v5 + 4;
        if (v5 + 4 >= v26)
        {
          int64_t v14 = 0;
          uint64_t v12 = 0;
          v5 += 3;
LABEL_15:
          int64_t v44 = v5;
          unint64_t v45 = v12;
          if (!v14) {
            goto LABEL_53;
          }
          goto LABEL_19;
        }
        unint64_t v27 = *(void *)(v42 + 8 * v28);
        if (v27) {
          goto LABEL_32;
        }
        int64_t v25 = v5 + 5;
        if (v5 + 5 < v26)
        {
          unint64_t v27 = *(void *)(v42 + 8 * v25);
          if (v27) {
            goto LABEL_28;
          }
          int64_t v25 = v26 - 1;
          int64_t v29 = v5 + 6;
          while (v26 != v29)
          {
            unint64_t v27 = *(void *)(v42 + 8 * v29++);
            if (v27)
            {
              int64_t v25 = v29 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          int64_t v14 = 0;
          uint64_t v12 = 0;
          int64_t v5 = v25;
          goto LABEL_15;
        }
      }
      int64_t v14 = 0;
      uint64_t v12 = 0;
      int64_t v5 = v28;
      goto LABEL_15;
    }
    uint64_t v16 = sub_1ACE771A8();
    if (!v16
      || (uint64_t v39 = v16,
          sub_1ACA8C10C(),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          int64_t v14 = v40,
          swift_unknownObjectRelease(),
          !v40))
    {
LABEL_53:
      sub_1ACA50A70();
      return v2;
    }
LABEL_19:
    uint64_t v17 = sub_1ACE76F58();
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      goto LABEL_10;
    }
    sub_1ACA8C10C();
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
    char v21 = sub_1ACE76F68();

    if (v21) {
      break;
    }
    uint64_t v22 = ~v18;
    while (1)
    {
      unint64_t v19 = (v19 + 1) & v22;
      if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        break;
      }
      id v23 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
      char v24 = sub_1ACE76F68();

      if (v24) {
        goto LABEL_47;
      }
    }
LABEL_10:

    uint64_t v3 = v41;
    uint64_t v6 = v43;
    int64_t v5 = v44;
    unint64_t v7 = v45;
  }
LABEL_47:

  char v31 = *(unsigned char *)(v2 + 32);
  unint64_t v32 = (unint64_t)((1 << v31) + 63) >> 6;
  size_t v33 = 8 * v32;
  if ((v31 & 0x3Fu) < 0xE
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    memcpy((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v33);
    sub_1ACB89B78((unint64_t *)((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0)), v32, v2, v19, &v41);
    uint64_t v35 = v34;
    swift_release();
    sub_1ACA50A70();
  }
  else
  {
    char v36 = (void *)swift_slowAlloc();
    memcpy(v36, (const void *)(v2 + 56), v33);
    sub_1ACB89B78((unint64_t *)v36, v32, v2, v19, &v41);
    uint64_t v35 = v37;
    swift_release();
    sub_1ACA50A70();
    MEMORY[0x1AD11B340](v36, -1, -1);
  }
  return v35;
}

uint64_t sub_1ACB881A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  v33[5] = *MEMORY[0x1E4F143B8];
  if (*(void *)(a2 + 16))
  {
    int64_t v4 = 0;
    uint64_t v6 = a1 + 56;
    uint64_t v5 = *(void *)(a1 + 56);
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    v32[0] = ~v7;
    if (-v7 < 64) {
      uint64_t v8 = ~(-1 << -(char)v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & v5;
    int64_t v10 = (unint64_t)(63 - v7) >> 6;
    uint64_t v11 = a2 + 56;
    while (1)
    {
      do
      {
        if (v9)
        {
          unint64_t v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          unint64_t v13 = v12 | (v4 << 6);
        }
        else
        {
          int64_t v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_36;
          }
          if (v14 >= v10) {
            goto LABEL_33;
          }
          unint64_t v15 = *(void *)(v6 + 8 * v14);
          int64_t v16 = v4 + 1;
          if (!v15)
          {
            int64_t v16 = v4 + 2;
            if (v4 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v15 = *(void *)(v6 + 8 * v16);
            if (!v15)
            {
              int64_t v16 = v4 + 3;
              if (v4 + 3 >= v10) {
                goto LABEL_33;
              }
              unint64_t v15 = *(void *)(v6 + 8 * v16);
              if (!v15)
              {
                int64_t v16 = v4 + 4;
                if (v4 + 4 >= v10) {
                  goto LABEL_33;
                }
                unint64_t v15 = *(void *)(v6 + 8 * v16);
                if (!v15)
                {
                  int64_t v17 = v4 + 5;
                  if (v4 + 5 >= v10)
                  {
LABEL_33:
                    swift_bridgeObjectRetain();
                    sub_1ACA50A70();
                    return v2;
                  }
                  unint64_t v15 = *(void *)(v6 + 8 * v17);
                  if (!v15)
                  {
                    while (1)
                    {
                      int64_t v16 = v17 + 1;
                      if (__OFADD__(v17, 1)) {
                        break;
                      }
                      if (v16 >= v10) {
                        goto LABEL_33;
                      }
                      unint64_t v15 = *(void *)(v6 + 8 * v16);
                      ++v17;
                      if (v15) {
                        goto LABEL_23;
                      }
                    }
LABEL_36:
                    __break(1u);
                  }
                  int64_t v16 = v4 + 5;
                }
              }
            }
          }
LABEL_23:
          unint64_t v9 = (v15 - 1) & v15;
          unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
          int64_t v4 = v16;
        }
        uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 8 * v13);
        uint64_t v19 = sub_1ACE77B08();
        uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v21 = v19 & ~v20;
      }
      while (((*(void *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0);
      uint64_t v22 = *(void *)(v2 + 48);
      if (*(void *)(v22 + 8 * v21) == v18) {
        break;
      }
      while (1)
      {
        unint64_t v21 = (v21 + 1) & ~v20;
        if (((*(void *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          break;
        }
        if (*(void *)(v22 + 8 * v21) == v18) {
          goto LABEL_28;
        }
      }
    }
LABEL_28:
    v33[0] = a1;
    v33[1] = v6;
    v33[2] = v32[0];
    v33[3] = v4;
    v33[4] = v9;
    unint64_t v23 = (unint64_t)(63 - v20) >> 6;
    size_t v24 = 8 * v23;
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v23 < 0x81 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x1F4188790](isStackAllocationSafe);
      unint64_t v27 = (char *)v32 - v26;
      memcpy((char *)v32 - v26, (const void *)(v2 + 56), v24);
      uint64_t v28 = sub_1ACB89EDC((uint64_t)v27, v23, v2, v21, v33);
      swift_release();
      sub_1ACA50A70();
      return v28;
    }
    else
    {
      int64_t v29 = (void *)swift_slowAlloc();
      memcpy(v29, (const void *)(v2 + 56), v24);
      uint64_t v30 = sub_1ACB89EDC((uint64_t)v29, v23, v2, v21, v33);
      swift_release();
      sub_1ACA50A70();
      MEMORY[0x1AD11B340](v29, -1, -1);
      return v30;
    }
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t sub_1ACB88548(uint64_t a1, uint64_t a2)
{
  return sub_1ACB88620(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, unint64_t, void *))sub_1ACB8A138);
}

uint64_t sub_1ACB885B4(uint64_t a1, uint64_t a2)
{
  return sub_1ACB88620(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, unint64_t, void *))sub_1ACB8A398);
}

uint64_t sub_1ACB88620(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, unint64_t, void *))
{
  uint64_t v3 = a2;
  v34[5] = *MEMORY[0x1E4F143B8];
  if (*(void *)(a2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v7 = a1 + 64;
    uint64_t v6 = *(void *)(a1 + 64);
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    unint64_t v32 = a3;
    uint64_t v33 = ~v8;
    if (-v8 < 64) {
      uint64_t v9 = ~(-1 << -(char)v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v6;
    int64_t v11 = (unint64_t)(63 - v8) >> 6;
    uint64_t v12 = a2 + 56;
    while (1)
    {
      do
      {
        if (v10)
        {
          unint64_t v13 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
          unint64_t v14 = v13 | (v5 << 6);
        }
        else
        {
          int64_t v15 = v5 + 1;
          if (__OFADD__(v5, 1))
          {
            __break(1u);
            goto LABEL_37;
          }
          if (v15 >= v11) {
            goto LABEL_35;
          }
          unint64_t v16 = *(void *)(v7 + 8 * v15);
          int64_t v17 = v5 + 1;
          if (!v16)
          {
            int64_t v17 = v5 + 2;
            if (v5 + 2 >= v11) {
              goto LABEL_35;
            }
            unint64_t v16 = *(void *)(v7 + 8 * v17);
            if (!v16)
            {
              int64_t v17 = v5 + 3;
              if (v5 + 3 >= v11) {
                goto LABEL_35;
              }
              unint64_t v16 = *(void *)(v7 + 8 * v17);
              if (!v16)
              {
                int64_t v17 = v5 + 4;
                if (v5 + 4 >= v11) {
                  goto LABEL_35;
                }
                unint64_t v16 = *(void *)(v7 + 8 * v17);
                if (!v16)
                {
                  int64_t v18 = v5 + 5;
                  if (v5 + 5 >= v11)
                  {
LABEL_35:
                    swift_bridgeObjectRetain();
                    sub_1ACA50A70();
                    return v3;
                  }
                  unint64_t v16 = *(void *)(v7 + 8 * v18);
                  if (!v16)
                  {
                    while (1)
                    {
                      int64_t v17 = v18 + 1;
                      if (__OFADD__(v18, 1)) {
                        break;
                      }
                      if (v17 >= v11) {
                        goto LABEL_35;
                      }
                      unint64_t v16 = *(void *)(v7 + 8 * v17);
                      ++v18;
                      if (v16) {
                        goto LABEL_23;
                      }
                    }
LABEL_37:
                    __break(1u);
                  }
                  int64_t v17 = v5 + 5;
                }
              }
            }
          }
LABEL_23:
          unint64_t v10 = (v16 - 1) & v16;
          unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
          int64_t v5 = v17;
        }
        uint64_t v19 = *(void *)(*(void *)(a1 + 48) + 8 * v14);
        sub_1ACE77B18();
        sub_1ACE77B58();
        uint64_t v20 = sub_1ACE77B78();
        uint64_t v21 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v22 = v20 & ~v21;
      }
      while (((*(void *)(v12 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0);
      uint64_t v23 = *(void *)(v3 + 48);
      if (*(void *)(v23 + 8 * v22) == v19) {
        break;
      }
      while (1)
      {
        unint64_t v22 = (v22 + 1) & ~v21;
        if (((*(void *)(v12 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
          break;
        }
        if (*(void *)(v23 + 8 * v22) == v19) {
          goto LABEL_28;
        }
      }
    }
LABEL_28:
    v34[0] = a1;
    v34[1] = v7;
    v34[2] = v33;
    v34[3] = v5;
    v34[4] = v10;
    unint64_t v24 = (unint64_t)(63 - v21) >> 6;
    size_t v25 = 8 * v24;
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v24 < 0x81 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x1F4188790](isStackAllocationSafe);
      uint64_t v28 = (char *)&v32 - v27;
      memcpy((char *)&v32 - v27, (const void *)(v3 + 56), v25);
      uint64_t v29 = v32(v28, v24, v3, v22, v34);
      swift_release();
      sub_1ACA50A70();
    }
    else
    {
      uint64_t v30 = (void *)swift_slowAlloc();
      memcpy(v30, (const void *)(v3 + 56), v25);
      uint64_t v29 = v32((char *)v30, v24, v3, v22, v34);
      swift_release();
      sub_1ACA50A70();
      MEMORY[0x1AD11B340](v30, -1, -1);
    }
    return v29;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t sub_1ACB889E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  void v29[2] = *MEMORY[0x1E4F143B8];
  if (*(void *)(a2 + 16))
  {
    v29[0] = a1;
    uint64_t v4 = *(void *)(a1 + 16);
    if (v4)
    {
      uint64_t v5 = 0;
      uint64_t v6 = a2 + 56;
      while (1)
      {
        uint64_t v7 = a1 + 32 + 16 * v5;
        unint64_t v8 = *(void *)v7;
        int v9 = *(unsigned __int8 *)(v7 + 8);
        sub_1ACE77B18();
        ++v5;
        sub_1ACE77B28();
        uint64_t v10 = sub_1ACE77B78();
        uint64_t v11 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v12 = v10 & ~v11;
        if ((*(void *)(v6 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12)) {
          break;
        }
LABEL_4:
        if (v5 == v4) {
          return v2;
        }
      }
      if (v8 > 3) {
        int v13 = v9;
      }
      else {
        int v13 = 0;
      }
      if (v8 == 3) {
        char v14 = v9;
      }
      else {
        char v14 = 0;
      }
      if (v8 == 2) {
        char v15 = v9;
      }
      else {
        char v15 = 0;
      }
      if (v8 == 1) {
        char v16 = v9;
      }
      else {
        char v16 = 0;
      }
      if (v8) {
        char v17 = 0;
      }
      else {
        char v17 = v9;
      }
      while (1)
      {
        uint64_t v18 = *(void *)(v2 + 48) + 16 * v12;
        if (*(unsigned char *)(v18 + 8) == 1)
        {
          switch(*(void *)v18)
          {
            case 1:
              if (v16) {
                goto LABEL_34;
              }
              goto LABEL_22;
            case 2:
              if (v15) {
                goto LABEL_34;
              }
              goto LABEL_22;
            case 3:
              if (v14) {
                goto LABEL_34;
              }
              goto LABEL_22;
            case 4:
              if (v13) {
                goto LABEL_34;
              }
              goto LABEL_22;
            default:
              if (v17) {
                goto LABEL_34;
              }
              goto LABEL_22;
          }
        }
        if ((v9 & 1) == 0) {
          break;
        }
LABEL_22:
        unint64_t v12 = (v12 + 1) & ~v11;
        if (((*(void *)(v6 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
          goto LABEL_4;
        }
      }
LABEL_34:
      v29[1] = v5;
      unint64_t v19 = (unint64_t)(63 - v11) >> 6;
      size_t v20 = 8 * v19;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
      if (v19 <= 0x80 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
      {
        MEMORY[0x1F4188790](isStackAllocationSafe);
        uint64_t v23 = (unint64_t *)&v28[-v22];
        memcpy(&v28[-v22], (const void *)(v2 + 56), v20);
        uint64_t v24 = sub_1ACB8A610(v23, v19, v2, v12, v29);
        swift_release();
        swift_bridgeObjectRelease();
        return v24;
      }
      else
      {
        uint64_t v26 = (void *)swift_slowAlloc();
        memcpy(v26, (const void *)(v2 + 56), v20);
        uint64_t v27 = sub_1ACB8A610((unint64_t *)v26, v19, v2, v12, v29);
        swift_release();
        swift_bridgeObjectRelease();
        MEMORY[0x1AD11B340](v26, -1, -1);
        return v27;
      }
    }
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1ACB88D10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_1ACA50A70();
                  return v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      char v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_1ACE77B18();
      swift_bridgeObjectRetain();
      sub_1ACE76108();
      uint64_t v19 = sub_1ACE77B78();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1ACE77848() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        uint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1ACE77848() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x1F4188790](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_1ACB8A854((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_1ACA50A70();
    }
    else
    {
      uint64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_1ACB8A854((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_1ACA50A70();
      MEMORY[0x1AD11B340](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
}

void sub_1ACB89180(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5 = a3;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v57 = a5;
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v7 = v6 - 1;
  uint64_t v68 = a3 + 56;
  do
  {
    uint64_t v55 = v7;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v8 = a5[4];
        if (v8)
        {
          uint64_t v10 = (v8 - 1) & v8;
          unint64_t v11 = __clz(__rbit64(v8)) | (v9 << 6);
        }
        else
        {
          int64_t v12 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
LABEL_69:
            __break(1u);
            return;
          }
          int64_t v13 = (unint64_t)(a5[2] + 64) >> 6;
          if (v12 >= v13)
          {
            int64_t v12 = a5[3];
LABEL_65:
            a5[3] = v12;
            a5[4] = 0;
            swift_retain();
            sub_1ACB85D04(a1, a2, v55, v5);
            return;
          }
          uint64_t v14 = a5[1];
          unint64_t v15 = *(void *)(v14 + 8 * v12);
          if (!v15)
          {
            if (v9 + 2 >= v13) {
              goto LABEL_65;
            }
            unint64_t v15 = *(void *)(v14 + 8 * (v9 + 2));
            if (v15)
            {
              int64_t v12 = v9 + 2;
            }
            else
            {
              if (v9 + 3 >= v13)
              {
                int64_t v12 = v9 + 2;
                goto LABEL_65;
              }
              unint64_t v15 = *(void *)(v14 + 8 * (v9 + 3));
              if (v15)
              {
                int64_t v12 = v9 + 3;
              }
              else
              {
                int64_t v12 = v9 + 4;
                if (v9 + 4 >= v13)
                {
                  int64_t v12 = v9 + 3;
                  goto LABEL_65;
                }
                unint64_t v15 = *(void *)(v14 + 8 * v12);
                if (!v15)
                {
                  int64_t v12 = v13 - 1;
                  int64_t v16 = v9 + 5;
                  do
                  {
                    if (v13 == v16) {
                      goto LABEL_65;
                    }
                    unint64_t v15 = *(void *)(v14 + 8 * v16++);
                  }
                  while (!v15);
                  int64_t v12 = v16 - 1;
                }
              }
            }
          }
          uint64_t v10 = (v15 - 1) & v15;
          unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
          int64_t v9 = v12;
        }
        uint64_t v17 = *(void *)(*a5 + 48) + 72 * v11;
        uint64_t v19 = *(void *)v17;
        uint64_t v18 = *(void *)(v17 + 8);
        uint64_t v20 = *(void *)(v17 + 16);
        int v21 = *(unsigned __int8 *)(v17 + 24);
        uint64_t v23 = *(void *)(v17 + 32);
        uint64_t v22 = *(void *)(v17 + 40);
        unint64_t v25 = *(void *)(v17 + 48);
        uint64_t v24 = *(void *)(v17 + 56);
        uint64_t v26 = *(void *)(v17 + 64);
        a5[3] = v9;
        a5[4] = v10;
        sub_1ACE77B18();
        swift_bridgeObjectRetain();
        int v61 = v24;
        uint64_t v62 = v23;
        sub_1ACA50D88(v23, v22, v25);
        uint64_t v65 = v19;
        uint64_t v69 = v18;
        sub_1ACE76108();
        int v66 = v21;
        sub_1ACE77B38();
        if (v21 != 1) {
          sub_1ACE77B58();
        }
        uint64_t v59 = v26;
        sub_1ACE77B28();
        if (v25 > 2)
        {
          sub_1ACE77B38();
          sub_1ACE76108();
          sub_1ACE77B38();
          sub_1ACE77B58();
        }
        unint64_t v64 = v25;
        uint64_t v60 = v22;
        uint64_t v27 = sub_1ACE77B78();
        uint64_t v28 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v29 = v27 & ~v28;
        if ((*(void *)(v68 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29)) {
          break;
        }
LABEL_3:
        swift_bridgeObjectRelease();
        sub_1ACA50D9C(v62, v60, v64);
        a5 = v57;
        uint64_t v5 = a3;
      }
      uint64_t v63 = v20;
      uint64_t v30 = ~v28;
      uint64_t v31 = *(void *)(a3 + 48);
      uint64_t v32 = v18;
      uint64_t v33 = v65;
      while (1)
      {
        uint64_t v34 = v31 + 72 * v29;
        uint64_t v35 = *(void *)(v34 + 16);
        char v36 = *(unsigned char *)(v34 + 24);
        uint64_t v37 = *(void *)(v34 + 32);
        uint64_t v38 = *(void *)(v34 + 40);
        uint64_t v39 = *(void *)(v34 + 48);
        uint64_t v40 = *(void *)(v34 + 56);
        uint64_t v41 = *(void *)(v34 + 64);
        if (*(void *)v34 != v33 || *(void *)(v34 + 8) != v32)
        {
          uint64_t v67 = *(void *)(v34 + 56);
          uint64_t v40 = *(void *)(v34 + 64);
          uint64_t v43 = v31;
          uint64_t v44 = v30;
          char v45 = sub_1ACE77848();
          uint64_t v30 = v44;
          uint64_t v31 = v43;
          uint64_t v41 = v40;
          LODWORD(v40) = v67;
          uint64_t v33 = v65;
          uint64_t v32 = v69;
          if ((v45 & 1) == 0) {
            goto LABEL_29;
          }
        }
        if (v36)
        {
          if (!v66) {
            goto LABEL_29;
          }
        }
        else
        {
          char v46 = v66;
          if (v35 != v63) {
            char v46 = 1;
          }
          if (v46) {
            goto LABEL_29;
          }
        }
        if (!v39)
        {
          if (!v64)
          {
            unint64_t v53 = 0;
            goto LABEL_59;
          }
          goto LABEL_29;
        }
        if (v39 != 1) {
          break;
        }
        if (v64 == 1)
        {
          unint64_t v53 = 1;
          goto LABEL_59;
        }
LABEL_29:
        unint64_t v29 = (v29 + 1) & v30;
        if (((*(void *)(v68 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
          goto LABEL_3;
        }
      }
      if (v39 != 2)
      {
        if (v64 >= 3 && ((v62 ^ ((v37 & 1) == 0)) & 1) != 0)
        {
          BOOL v47 = v38 == v60 && v39 == v64;
          if (v47 || (v48 = v30, v49 = sub_1ACE77848(), v30 = v48, v33 = v65, uint64_t v32 = v69, (v49 & 1) != 0))
          {
            if (((v61 ^ v40) & 1) == 0 && v41 == v59)
            {
              unint64_t v52 = v57;
              unint64_t v53 = v64;
              goto LABEL_60;
            }
          }
        }
        goto LABEL_29;
      }
      if (v64 != 2) {
        goto LABEL_29;
      }
      unint64_t v53 = 2;
LABEL_59:
      unint64_t v52 = v57;
LABEL_60:
      swift_bridgeObjectRelease();
      sub_1ACA50D9C(v62, v60, v53);
      uint64_t v50 = (v29 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v51 = *(unint64_t *)((char *)a1 + v50);
      *(unint64_t *)((char *)a1 + v50) = v51 & ~(1 << v29);
      uint64_t v5 = a3;
      a5 = v52;
    }
    while ((v51 & (1 << v29)) == 0);
    uint64_t v7 = v55 - 1;
    if (__OFSUB__(v55, 1)) {
      goto LABEL_69;
    }
  }
  while (v55 != 1);
}

uint64_t sub_1ACB8968C(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5 = a3;
  uint64_t v6 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v7 = v6 - 1;
  uint64_t v41 = a3 + 56;
LABEL_2:
  uint64_t v38 = v7;
LABEL_4:
  while (1)
  {
    int64_t v11 = a5[3];
    unint64_t v10 = a5[4];
    if (!v10) {
      break;
    }
    uint64_t v12 = (v10 - 1) & v10;
    unint64_t v13 = __clz(__rbit64(v10)) | (v11 << 6);
LABEL_22:
    uint64_t v19 = *(void *)(*a5 + 48) + 16 * v13;
    uint64_t v20 = *(void *)v19;
    int v21 = *(unsigned __int8 *)(v19 + 8);
    uint64_t v22 = *(unsigned __int8 *)(v19 + 9);
    a5[3] = v11;
    a5[4] = v12;
    uint64_t v23 = v5;
    sub_1ACE77B18();
    sub_1ACE77B38();
    if ((v21 & 1) == 0) {
      sub_1ACE77B58();
    }
    sub_1ACE76108();
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_1ACE77B78();
    uint64_t v25 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v26 = v24 & ~v25;
    if ((*(void *)(v41 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26))
    {
      uint64_t v27 = ~v25;
      while (1)
      {
        uint64_t v29 = *(void *)(v5 + 48) + 16 * v26;
        uint64_t v30 = *(unsigned __int8 *)(v29 + 9);
        if (*(unsigned char *)(v29 + 8))
        {
          if (v21) {
            goto LABEL_35;
          }
        }
        else
        {
          if (*(void *)v29 == v20) {
            char v31 = v21;
          }
          else {
            char v31 = 1;
          }
          if ((v31 & 1) == 0)
          {
LABEL_35:
            unint64_t v32 = 0xEB00000000737365;
            uint64_t v33 = 0x4C74736567677573;
            switch(v30)
            {
              case 1:
                unint64_t v32 = 0xE700000000000000;
                uint64_t v33 = 0x6C61727475656ELL;
                break;
              case 2:
                uint64_t v33 = 0x657469726F766166;
                unint64_t v32 = 0xE900000000000064;
                break;
              case 3:
                unint64_t v32 = 0xE700000000000000;
                uint64_t v33 = 0x6E776F6E6B6E75;
                break;
              default:
                break;
            }
            uint64_t v34 = 0x4C74736567677573;
            unint64_t v35 = 0xEB00000000737365;
            switch(v22)
            {
              case 1:
                unint64_t v35 = 0xE700000000000000;
                if (v33 != 0x6C61727475656ELL) {
                  goto LABEL_26;
                }
                goto LABEL_46;
              case 2:
                uint64_t v34 = 0x657469726F766166;
                unint64_t v35 = 0xE900000000000064;
                goto LABEL_43;
              case 3:
                unint64_t v35 = 0xE700000000000000;
                if (v33 == 0x6E776F6E6B6E75) {
                  goto LABEL_46;
                }
                goto LABEL_26;
              default:
LABEL_43:
                if (v33 != v34) {
                  goto LABEL_26;
                }
LABEL_46:
                if (v32 != v35)
                {
LABEL_26:
                  char v28 = sub_1ACE77848();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v5 = v23;
                  if (v28) {
                    goto LABEL_3;
                  }
                  goto LABEL_27;
                }
                swift_bridgeObjectRelease_n();
                uint64_t v5 = v23;
LABEL_3:
                uint64_t v8 = (v26 >> 3) & 0x1FFFFFFFFFFFFFF8;
                uint64_t v9 = *(unint64_t *)((char *)a1 + v8);
                *(unint64_t *)((char *)a1 + v8) = v9 & ~(1 << v26);
                if ((v9 & (1 << v26)) == 0) {
                  goto LABEL_4;
                }
                uint64_t v7 = v38 - 1;
                if (__OFSUB__(v38, 1)) {
                  goto LABEL_56;
                }
                if (v38 == 1) {
                  return MEMORY[0x1E4FBC870];
                }
                break;
            }
            goto LABEL_2;
          }
        }
LABEL_27:
        unint64_t v26 = (v26 + 1) & v27;
        if (((*(void *)(v41 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
          goto LABEL_4;
        }
      }
    }
  }
  int64_t v14 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
LABEL_56:
    __break(1u);
    JUMPOUT(0x1ACB89B48);
  }
  int64_t v15 = (unint64_t)(a5[2] + 64) >> 6;
  if (v14 < v15)
  {
    uint64_t v16 = a5[1];
    unint64_t v17 = *(void *)(v16 + 8 * v14);
    if (!v17)
    {
      if (v11 + 2 >= v15) {
        goto LABEL_52;
      }
      unint64_t v17 = *(void *)(v16 + 8 * (v11 + 2));
      if (v17)
      {
        int64_t v14 = v11 + 2;
      }
      else
      {
        if (v11 + 3 >= v15)
        {
          int64_t v14 = v11 + 2;
          goto LABEL_52;
        }
        unint64_t v17 = *(void *)(v16 + 8 * (v11 + 3));
        if (v17)
        {
          int64_t v14 = v11 + 3;
        }
        else
        {
          int64_t v14 = v11 + 4;
          if (v11 + 4 >= v15)
          {
            int64_t v14 = v11 + 3;
            goto LABEL_52;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v14);
          if (!v17)
          {
            int64_t v14 = v15 - 1;
            int64_t v18 = v11 + 5;
            do
            {
              if (v15 == v18) {
                goto LABEL_52;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v18++);
            }
            while (!v17);
            int64_t v14 = v18 - 1;
          }
        }
      }
    }
    uint64_t v12 = (v17 - 1) & v17;
    unint64_t v13 = __clz(__rbit64(v17)) + (v14 << 6);
    int64_t v11 = v14;
    goto LABEL_22;
  }
  int64_t v14 = a5[3];
LABEL_52:
  a5[3] = v14;
  a5[4] = 0;
  swift_retain();
  return sub_1ACB85ECC(a1, a2, v38, v5);
}

void sub_1ACB89B78(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5 = a5;
  uint64_t v7 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v38 = a3 + 56;
  while (2)
  {
    uint64_t v35 = v8;
    do
    {
      while (1)
      {
        if ((*v5 & 0x8000000000000000) == 0)
        {
          int64_t v10 = v5[3];
          unint64_t v9 = v5[4];
          if (v9)
          {
            uint64_t v11 = (v9 - 1) & v9;
            unint64_t v12 = __clz(__rbit64(v9)) | (v10 << 6);
LABEL_7:
            unint64_t v13 = *(void **)(*(void *)(*v5 + 48) + 8 * v12);
            id v14 = v13;
            goto LABEL_8;
          }
          int64_t v27 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
            __break(1u);
            goto LABEL_47;
          }
          int64_t v28 = (unint64_t)(v5[2] + 64) >> 6;
          if (v27 >= v28)
          {
            unint64_t v13 = 0;
            uint64_t v11 = 0;
            goto LABEL_8;
          }
          uint64_t v29 = v5[1];
          unint64_t v30 = *(void *)(v29 + 8 * v27);
          if (v30)
          {
LABEL_22:
            uint64_t v11 = (v30 - 1) & v30;
            unint64_t v12 = __clz(__rbit64(v30)) + (v27 << 6);
            int64_t v10 = v27;
            goto LABEL_7;
          }
          if (v10 + 2 < v28)
          {
            unint64_t v30 = *(void *)(v29 + 8 * (v10 + 2));
            if (v30)
            {
              int64_t v27 = v10 + 2;
              goto LABEL_22;
            }
            if (v10 + 3 >= v28)
            {
              unint64_t v13 = 0;
              uint64_t v11 = 0;
              v10 += 2;
              goto LABEL_8;
            }
            unint64_t v30 = *(void *)(v29 + 8 * (v10 + 3));
            if (v30)
            {
              int64_t v27 = v10 + 3;
              goto LABEL_22;
            }
            int64_t v27 = v10 + 4;
            if (v10 + 4 >= v28)
            {
              unint64_t v13 = 0;
              uint64_t v11 = 0;
              v10 += 3;
LABEL_8:
              v5[3] = v10;
              void v5[4] = v11;
              if (!v13) {
                goto LABEL_45;
              }
              goto LABEL_12;
            }
            unint64_t v30 = *(void *)(v29 + 8 * v27);
            if (v30) {
              goto LABEL_22;
            }
            int64_t v27 = v28 - 1;
            int64_t v33 = v10 + 5;
            while (v28 != v33)
            {
              unint64_t v30 = *(void *)(v29 + 8 * v33++);
              if (v30)
              {
                int64_t v27 = v33 - 1;
                goto LABEL_22;
              }
            }
          }
          unint64_t v13 = 0;
          uint64_t v11 = 0;
          int64_t v10 = v27;
          goto LABEL_8;
        }
        if (!sub_1ACE771A8()
          || (sub_1ACA8C10C(),
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              unint64_t v13 = v39,
              swift_unknownObjectRelease(),
              !v39))
        {
LABEL_45:
          swift_retain();
          sub_1ACB86234(a1, a2, v35, a3, &qword_1EB769020);
          return;
        }
LABEL_12:
        uint64_t v15 = sub_1ACE76F58();
        uint64_t v16 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v17 = v15 & ~v16;
        unint64_t v18 = v17 >> 6;
        uint64_t v19 = 1 << v17;
        if (((1 << v17) & *(void *)(v38 + 8 * (v17 >> 6))) == 0) {
          goto LABEL_3;
        }
        sub_1ACA8C10C();
        id v20 = *(id *)(*(void *)(a3 + 48) + 8 * v17);
        char v21 = sub_1ACE76F68();

        if (v21) {
          break;
        }
        uint64_t v22 = ~v16;
        for (unint64_t i = v17 + 1; ; unint64_t i = v24 + 1)
        {
          unint64_t v24 = i & v22;
          if (((*(void *)(v38 + (((i & v22) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v22)) & 1) == 0) {
            break;
          }
          id v25 = *(id *)(*(void *)(a3 + 48) + 8 * v24);
          char v26 = sub_1ACE76F68();

          if (v26)
          {

            unint64_t v18 = v24 >> 6;
            uint64_t v19 = 1 << v24;
            goto LABEL_25;
          }
        }
LABEL_3:

        uint64_t v5 = a5;
      }

LABEL_25:
      unint64_t v31 = a1[v18];
      a1[v18] = v31 & ~v19;
      BOOL v32 = (v19 & v31) == 0;
      uint64_t v5 = a5;
    }
    while (v32);
    uint64_t v8 = v35 - 1;
    if (__OFSUB__(v35, 1))
    {
LABEL_47:
      __break(1u);
      return;
    }
    if (v35 != 1) {
      continue;
    }
    break;
  }
}

uint64_t sub_1ACB89EDC(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v8 = (unint64_t *)result;
  uint64_t v9 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v10 = v9 - 1;
  uint64_t v11 = a3 + 56;
  while (1)
  {
    int64_t v16 = a5[3];
    unint64_t v17 = a5[4];
    if (!v17) {
      break;
    }
    uint64_t v18 = (v17 - 1) & v17;
    unint64_t v19 = __clz(__rbit64(v17)) | (v16 << 6);
LABEL_16:
    uint64_t v26 = *(void *)(*(void *)(*a5 + 48) + 8 * v19);
    a5[3] = v16;
    a5[4] = v18;
    uint64_t result = sub_1ACE77B08();
    uint64_t v27 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v28 = result & ~v27;
    uint64_t v12 = v28 >> 6;
    uint64_t v13 = 1 << v28;
    if (((1 << v28) & *(void *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      uint64_t v29 = *(void *)(a3 + 48);
      if (*(void *)(v29 + 8 * v28) == v26)
      {
LABEL_3:
        uint64_t v14 = v12;
        unint64_t v15 = v8[v12];
        v8[v14] = v15 & ~v13;
        if ((v13 & v15) != 0)
        {
          if (__OFSUB__(v10--, 1)) {
            goto LABEL_35;
          }
          if (!v10) {
            return MEMORY[0x1E4FBC870];
          }
        }
      }
      else
      {
        for (unint64_t i = v28 + 1; ; unint64_t i = v31 + 1)
        {
          unint64_t v31 = i & ~v27;
          if (((*(void *)(v11 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
            break;
          }
          if (*(void *)(v29 + 8 * v31) == v26)
          {
            uint64_t v12 = v31 >> 6;
            uint64_t v13 = 1 << v31;
            goto LABEL_3;
          }
        }
      }
    }
  }
  int64_t v20 = v16 + 1;
  if (!__OFADD__(v16, 1))
  {
    int64_t v21 = (unint64_t)(a5[2] + 64) >> 6;
    int64_t v22 = a5[3];
    if (v20 >= v21) {
      goto LABEL_33;
    }
    uint64_t v23 = a5[1];
    unint64_t v24 = *(void *)(v23 + 8 * v20);
    if (v24) {
      goto LABEL_15;
    }
    int64_t v25 = v16 + 2;
    int64_t v22 = v16 + 1;
    if (v16 + 2 >= v21) {
      goto LABEL_33;
    }
    unint64_t v24 = *(void *)(v23 + 8 * v25);
    if (!v24)
    {
      int64_t v22 = v16 + 2;
      if (v16 + 3 >= v21) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v23 + 8 * (v16 + 3));
      if (v24)
      {
        int64_t v20 = v16 + 3;
        goto LABEL_15;
      }
      int64_t v25 = v16 + 4;
      int64_t v22 = v16 + 3;
      if (v16 + 4 >= v21) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v23 + 8 * v25);
      if (!v24)
      {
        int64_t v20 = v16 + 5;
        int64_t v22 = v16 + 4;
        if (v16 + 5 >= v21) {
          goto LABEL_33;
        }
        unint64_t v24 = *(void *)(v23 + 8 * v20);
        if (!v24)
        {
          int64_t v22 = v21 - 1;
          int64_t v32 = v16 + 6;
          while (v21 != v32)
          {
            unint64_t v24 = *(void *)(v23 + 8 * v32++);
            if (v24)
            {
              int64_t v20 = v32 - 1;
              goto LABEL_15;
            }
          }
LABEL_33:
          a5[3] = v22;
          a5[4] = 0;
          swift_retain();
          return sub_1ACB86728(v8, a2, v10, a3);
        }
        goto LABEL_15;
      }
    }
    int64_t v20 = v25;
LABEL_15:
    uint64_t v18 = (v24 - 1) & v24;
    unint64_t v19 = __clz(__rbit64(v24)) + (v20 << 6);
    int64_t v16 = v20;
    goto LABEL_16;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1ACB8A138(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = (unint64_t *)result;
  uint64_t v8 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v9 = v8 - 1;
  uint64_t v10 = a3 + 56;
  while (1)
  {
    int64_t v15 = a5[3];
    unint64_t v16 = a5[4];
    if (!v16) {
      break;
    }
    uint64_t v17 = (v16 - 1) & v16;
    unint64_t v18 = __clz(__rbit64(v16)) | (v15 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(*(void *)(*a5 + 48) + 8 * v18);
    a5[3] = v15;
    a5[4] = v17;
    sub_1ACE77B18();
    sub_1ACE77B58();
    uint64_t result = sub_1ACE77B78();
    uint64_t v26 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v27 = result & ~v26;
    uint64_t v11 = v27 >> 6;
    uint64_t v12 = 1 << v27;
    if (((1 << v27) & *(void *)(v10 + 8 * (v27 >> 6))) != 0)
    {
      uint64_t v28 = *(void *)(a3 + 48);
      if (*(void *)(v28 + 8 * v27) == v25)
      {
LABEL_3:
        uint64_t v13 = v11;
        unint64_t v14 = v7[v11];
        v7[v13] = v14 & ~v12;
        if ((v12 & v14) != 0)
        {
          if (__OFSUB__(v9--, 1)) {
            goto LABEL_34;
          }
          if (!v9) {
            return MEMORY[0x1E4FBC870];
          }
        }
      }
      else
      {
        for (unint64_t i = v27 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & ~v26;
          if (((*(void *)(v10 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
            break;
          }
          if (*(void *)(v28 + 8 * v30) == v25)
          {
            uint64_t v11 = v30 >> 6;
            uint64_t v12 = 1 << v30;
            goto LABEL_3;
          }
        }
      }
    }
  }
  int64_t v19 = v15 + 1;
  if (!__OFADD__(v15, 1))
  {
    int64_t v20 = (unint64_t)(a5[2] + 64) >> 6;
    int64_t v21 = a5[3];
    if (v19 >= v20) {
      goto LABEL_31;
    }
    uint64_t v22 = a5[1];
    unint64_t v23 = *(void *)(v22 + 8 * v19);
    if (!v23)
    {
      int64_t v21 = v15 + 1;
      if (v15 + 2 >= v20) {
        goto LABEL_31;
      }
      unint64_t v23 = *(void *)(v22 + 8 * (v15 + 2));
      if (v23)
      {
        int64_t v19 = v15 + 2;
      }
      else
      {
        int64_t v21 = v15 + 2;
        if (v15 + 3 >= v20) {
          goto LABEL_31;
        }
        unint64_t v23 = *(void *)(v22 + 8 * (v15 + 3));
        if (v23)
        {
          int64_t v19 = v15 + 3;
        }
        else
        {
          int64_t v19 = v15 + 4;
          int64_t v21 = v15 + 3;
          if (v15 + 4 >= v20) {
            goto LABEL_31;
          }
          unint64_t v23 = *(void *)(v22 + 8 * v19);
          if (!v23)
          {
            int64_t v21 = v20 - 1;
            int64_t v24 = v15 + 5;
            while (v20 != v24)
            {
              unint64_t v23 = *(void *)(v22 + 8 * v24++);
              if (v23)
              {
                int64_t v19 = v24 - 1;
                goto LABEL_21;
              }
            }
LABEL_31:
            a5[3] = v21;
            a5[4] = 0;
            swift_retain();
            return sub_1ACB86970(v7, a2, v9, a3);
          }
        }
      }
    }
LABEL_21:
    uint64_t v17 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v19 << 6);
    int64_t v15 = v19;
    goto LABEL_22;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1ACB8A398(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = (unint64_t *)result;
  uint64_t v8 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v9 = v8 - 1;
  uint64_t v10 = a3 + 56;
  while (1)
  {
    int64_t v15 = a5[3];
    unint64_t v16 = a5[4];
    if (!v16) {
      break;
    }
    uint64_t v17 = (v16 - 1) & v16;
    unint64_t v18 = __clz(__rbit64(v16)) | (v15 << 6);
LABEL_16:
    uint64_t v25 = *(void *)(*(void *)(*a5 + 48) + 8 * v18);
    a5[3] = v15;
    a5[4] = v17;
    sub_1ACE77B18();
    sub_1ACE77B58();
    uint64_t result = sub_1ACE77B78();
    uint64_t v26 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v27 = result & ~v26;
    uint64_t v11 = v27 >> 6;
    uint64_t v12 = 1 << v27;
    if (((1 << v27) & *(void *)(v10 + 8 * (v27 >> 6))) != 0)
    {
      uint64_t v28 = *(void *)(a3 + 48);
      if (*(void *)(v28 + 8 * v27) == v25)
      {
LABEL_3:
        uint64_t v13 = v11;
        unint64_t v14 = v7[v11];
        v7[v13] = v14 & ~v12;
        if ((v12 & v14) != 0)
        {
          if (__OFSUB__(v9--, 1)) {
            goto LABEL_36;
          }
          if (!v9) {
            return MEMORY[0x1E4FBC870];
          }
        }
      }
      else
      {
        for (unint64_t i = v27 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & ~v26;
          if (((*(void *)(v10 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
            break;
          }
          if (*(void *)(v28 + 8 * v30) == v25)
          {
            uint64_t v11 = v30 >> 6;
            uint64_t v12 = 1 << v30;
            goto LABEL_3;
          }
        }
      }
    }
  }
  int64_t v19 = v15 + 1;
  if (!__OFADD__(v15, 1))
  {
    int64_t v20 = (unint64_t)(a5[2] + 64) >> 6;
    int64_t v21 = a5[3];
    if (v19 >= v20) {
      goto LABEL_33;
    }
    uint64_t v22 = a5[1];
    unint64_t v23 = *(void *)(v22 + 8 * v19);
    if (v23) {
      goto LABEL_15;
    }
    int64_t v24 = v15 + 2;
    int64_t v21 = v15 + 1;
    if (v15 + 2 >= v20) {
      goto LABEL_33;
    }
    unint64_t v23 = *(void *)(v22 + 8 * v24);
    if (!v23)
    {
      int64_t v21 = v15 + 2;
      if (v15 + 3 >= v20) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v22 + 8 * (v15 + 3));
      if (v23)
      {
        int64_t v19 = v15 + 3;
        goto LABEL_15;
      }
      int64_t v24 = v15 + 4;
      int64_t v21 = v15 + 3;
      if (v15 + 4 >= v20) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v22 + 8 * v24);
      if (!v23)
      {
        int64_t v19 = v15 + 5;
        int64_t v21 = v15 + 4;
        if (v15 + 5 >= v20) {
          goto LABEL_33;
        }
        unint64_t v23 = *(void *)(v22 + 8 * v19);
        if (!v23)
        {
          int64_t v21 = v20 - 1;
          int64_t v31 = v15 + 6;
          while (v20 != v31)
          {
            unint64_t v23 = *(void *)(v22 + 8 * v31++);
            if (v23)
            {
              int64_t v19 = v31 - 1;
              goto LABEL_15;
            }
          }
LABEL_33:
          a5[3] = v21;
          a5[4] = 0;
          swift_retain();
          return sub_1ACB86970(v7, a2, v9, a3);
        }
        goto LABEL_15;
      }
    }
    int64_t v19 = v24;
LABEL_15:
    uint64_t v17 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v19 << 6);
    int64_t v15 = v19;
    goto LABEL_16;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1ACB8A610(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v10 = *a5;
  unint64_t v9 = a5[1];
  unint64_t v11 = *(void *)(*a5 + 16);
  if (v9 == v11)
  {
LABEL_2:
    swift_retain();
    return sub_1ACB86BDC(a1, a2, v8, a3);
  }
  else
  {
    uint64_t v14 = a3 + 56;
    while (1)
    {
      if ((v9 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        JUMPOUT(0x1ACB8A840);
      }
      if (v9 >= v11) {
        goto LABEL_41;
      }
      uint64_t v15 = v10 + 16 * v9;
      unint64_t v16 = *(void *)(v15 + 32);
      int v17 = *(unsigned __int8 *)(v15 + 40);
      a5[1] = v9 + 1;
      sub_1ACE77B18();
      sub_1ACE77B28();
      uint64_t v18 = sub_1ACE77B78();
      uint64_t v19 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v20 = v18 & ~v19;
      if ((*(void *)(v14 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
      {
        uint64_t v21 = ~v19;
        int v22 = v16 > 3 ? v17 : 0;
        char v23 = v16 == 3 ? v17 : 0;
        char v24 = v16 == 2 ? v17 : 0;
        char v25 = v16 == 1 ? v17 : 0;
        char v26 = v16 ? 0 : v17;
        do
        {
          uint64_t v27 = *(void *)(a3 + 48) + 16 * v20;
          if (*(unsigned char *)(v27 + 8) == 1)
          {
            switch(*(void *)v27)
            {
              case 1:
                if (v25) {
                  goto LABEL_36;
                }
                goto LABEL_24;
              case 2:
                if (v24) {
                  goto LABEL_36;
                }
                goto LABEL_24;
              case 3:
                if (v23) {
                  goto LABEL_36;
                }
                goto LABEL_24;
              case 4:
                if (v22) {
                  goto LABEL_36;
                }
                goto LABEL_24;
              default:
                if (v26) {
                  goto LABEL_36;
                }
                goto LABEL_24;
            }
          }
          if ((v17 & 1) == 0) {
            break;
          }
LABEL_24:
          unint64_t v20 = (v20 + 1) & v21;
        }
        while (((*(void *)(v14 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) != 0);
LABEL_36:
        uint64_t v28 = (v20 >> 3) & 0x1FFFFFFFFFFFFFF8;
        uint64_t v29 = 1 << v20;
        uint64_t v30 = *(unint64_t *)((char *)a1 + v28);
        *(unint64_t *)((char *)a1 + v28) = v30 & ~v29;
        if ((v30 & v29) != 0)
        {
          if (__OFSUB__(v8--, 1)) {
            goto LABEL_42;
          }
          if (!v8) {
            return MEMORY[0x1E4FBC870];
          }
        }
      }
      uint64_t v10 = *a5;
      unint64_t v9 = a5[1];
      unint64_t v11 = *(void *)(*a5 + 16);
      if (v9 == v11) {
        goto LABEL_2;
      }
    }
  }
}

uint64_t sub_1ACB8A854(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v39 = (unint64_t *)result;
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_45;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_45;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_15;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_45;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v15 = v14 - 1;
                int64_t v36 = v9 + 6;
                while (v14 != v36)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_1ACB86490(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v13 = v18;
        }
LABEL_15:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_16:
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1ACE77B18();
        swift_bridgeObjectRetain();
        sub_1ACE76108();
        uint64_t v22 = sub_1ACE77B78();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_3;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        uint64_t v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_1ACE77848() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          uint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1ACE77848() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        uint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t _s18PodcastsFoundation14PlaybackIntentV2eeoiySbAC_ACtFZ_0(long long *a1, long long *a2)
{
  uint64_t v4 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v94 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2AD8);
  MEMORY[0x1F4188790](v7);
  int64_t v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  int64_t v13 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v77 - v15;
  MEMORY[0x1F4188790](v14);
  int64_t v18 = (char *)&v77 - v17;
  char v19 = *((unsigned char *)a1 + 32);
  long long v20 = a1[1];
  long long v105 = *a1;
  long long v106 = v20;
  LOBYTE(v107) = v19;
  char v21 = *((unsigned char *)a2 + 32);
  long long v22 = a2[1];
  long long v95 = *a2;
  long long v96 = v22;
  LOBYTE(v97) = v21;
  if ((_s18PodcastsFoundation15MediaIdentifierO2eeoiySbAC_ACtFZ_0((uint64_t)&v105, (uint64_t *)&v95) & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v87 = v13;
  uint64_t v88 = v7;
  uint64_t v91 = v16;
  uint64_t v92 = v18;
  uint64_t v86 = v6;
  uint64_t v89 = v4;
  uint64_t v90 = v9;
  uint64_t v23 = *((void *)a1 + 5);
  uint64_t v24 = *((void *)a1 + 6);
  uint64_t v25 = *((void *)a1 + 7);
  uint64_t v26 = *((void *)a1 + 8);
  uint64_t v27 = *((void *)a1 + 9);
  uint64_t v28 = *((void *)a1 + 10);
  uint64_t v30 = *((void *)a1 + 11);
  uint64_t v29 = *((void *)a1 + 12);
  uint64_t v31 = *((void *)a1 + 13);
  uint64_t v32 = *((void *)a1 + 14);
  int v33 = *((unsigned __int16 *)a1 + 60) | (*((unsigned __int8 *)a1 + 122) << 16);
  uint64_t v34 = *((void *)a2 + 5);
  uint64_t v35 = *((void *)a2 + 6);
  uint64_t v36 = *((void *)a2 + 7);
  uint64_t v37 = *((void *)a2 + 8);
  uint64_t v38 = *((void *)a2 + 9);
  uint64_t v39 = *((void *)a2 + 10);
  uint64_t v40 = *((void *)a2 + 11);
  uint64_t v41 = *((void *)a2 + 12);
  int v42 = *((unsigned __int16 *)a2 + 60) | (*((unsigned __int8 *)a2 + 122) << 16);
  uint64_t v44 = *((void *)a2 + 13);
  uint64_t v43 = *((void *)a2 + 14);
  if (*((_WORD *)a1 + 60) == 2)
  {
    if (*((_WORD *)a2 + 60) == 2) {
      goto LABEL_9;
    }
LABEL_7:
    *(void *)&long long v105 = v23;
    *((void *)&v105 + 1) = v24;
    *(void *)&long long v106 = v25;
    *((void *)&v106 + 1) = v26;
    uint64_t v107 = v27;
    uint64_t v108 = v28;
    uint64_t v109 = v30;
    uint64_t v110 = v29;
    uint64_t v111 = v31;
    uint64_t v112 = v32;
    __int16 v113 = v33;
    char v114 = BYTE2(v33);
    uint64_t v115 = v34;
    uint64_t v116 = v35;
    uint64_t v117 = v36;
    uint64_t v118 = v37;
    uint64_t v119 = v38;
    uint64_t v120 = v39;
    uint64_t v121 = v40;
    uint64_t v122 = v41;
    uint64_t v123 = v44;
    uint64_t v124 = v43;
    __int16 v125 = v42;
    char v126 = BYTE2(v42);
    sub_1ACA63A5C(v34, v35, v36, v37, v38, v39, v40, v41, v44, v43, v42);
    sub_1ACB99CC8((uint64_t)&v105);
    char v47 = 0;
    return v47 & 1;
  }
  *(void *)&long long v105 = *((void *)a1 + 5);
  *((void *)&v105 + 1) = v24;
  *(void *)&long long v106 = v25;
  *((void *)&v106 + 1) = v26;
  uint64_t v107 = v27;
  uint64_t v108 = v28;
  uint64_t v109 = v30;
  uint64_t v110 = v29;
  uint64_t v111 = v31;
  uint64_t v112 = v32;
  char v114 = BYTE2(v33);
  __int16 v113 = v33;
  uint64_t v85 = v32;
  uint64_t v93 = v23;
  if (v42 == 2)
  {
    uint64_t v83 = v43;
    uint64_t v84 = v34;
    uint64_t v86 = (char *)v35;
    uint64_t v87 = (char *)v36;
    uint64_t v88 = v37;
    uint64_t v89 = v38;
    uint64_t v90 = (char *)v39;
    uint64_t v91 = (char *)v40;
    uint64_t v45 = v30;
    uint64_t v46 = v29;
    uint64_t v92 = (char *)v41;
    uint64_t v94 = v31;
    uint64_t v82 = v44;
    sub_1ACA63A78(v93, v24, v25, v26, v27, v28, v30, v29, v31);
    sub_1ACA63A78(v93, v24, v25, v26, v27, v28, v45, v46, v94);
    sub_1ACA63738(v93, v24, v25, v26, v27, v28, v45, v46, v94);
    uint64_t v44 = v82;
    uint64_t v43 = v83;
    uint64_t v34 = v84;
    uint64_t v32 = v85;
    uint64_t v35 = (uint64_t)v86;
    uint64_t v36 = (uint64_t)v87;
    uint64_t v37 = v88;
    uint64_t v38 = v89;
    uint64_t v39 = (uint64_t)v90;
    uint64_t v40 = (uint64_t)v91;
    uint64_t v41 = (uint64_t)v92;
    uint64_t v23 = v93;
    uint64_t v31 = v94;
    uint64_t v30 = v45;
    uint64_t v29 = v46;
    goto LABEL_7;
  }
  *(void *)&long long v95 = v34;
  *((void *)&v95 + 1) = v35;
  *(void *)&long long v96 = v36;
  *((void *)&v96 + 1) = v37;
  uint64_t v97 = v38;
  uint64_t v98 = v39;
  uint64_t v99 = v40;
  uint64_t v100 = v41;
  __int16 v101 = v44;
  uint64_t v102 = v43;
  __int16 v103 = v42 & 0x101;
  char v104 = BYTE2(v42) & 1;
  uint64_t v48 = v25;
  uint64_t v49 = v25;
  uint64_t v80 = v25;
  uint64_t v81 = v26;
  char v50 = v26;
  char v51 = v26;
  uint64_t v78 = v28;
  uint64_t v79 = v27;
  uint64_t v52 = v27;
  uint64_t v53 = v28;
  uint64_t v54 = v30;
  uint64_t v55 = v29;
  char v56 = v31;
  sub_1ACA63A5C(v23, v24, v49, v51, v52, v53, v30, v29, v31, v32, v33);
  uint64_t v57 = v48;
  char v58 = v50;
  uint64_t v60 = v78;
  uint64_t v59 = v79;
  sub_1ACA63A78(v93, v24, v57, v58, v79, v78, v54, v55, v56);
  LODWORD(v84) = _s18PodcastsFoundation19EpisodeListSettingsV2eeoiySbAC_ACtFZ_0((uint64_t)&v105, (uint64_t)&v95);
  sub_1ACA63738(v105, *((uint64_t *)&v105 + 1), v106, SBYTE8(v106), v107, v108, v109, v110, v111);
  sub_1ACA6371C(v93, v24, v80, v81, v59, v60, v54, v55, v56, v85, v33);
  if ((v84 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_9:
  uint64_t v61 = type metadata accessor for PlaybackIntent(0);
  uint64_t v62 = (uint64_t)v92;
  sub_1ACA3AAD4((uint64_t)a1 + *(int *)(v61 + 24), (uint64_t)v92, &qword_1EB76EFA0);
  uint64_t v93 = v61;
  uint64_t v63 = (uint64_t)v91;
  sub_1ACA3AAD4((uint64_t)a2 + *(int *)(v61 + 24), (uint64_t)v91, &qword_1EB76EFA0);
  uint64_t v64 = (uint64_t)v90;
  uint64_t v65 = (uint64_t)&v90[*(int *)(v88 + 48)];
  sub_1ACA3AAD4(v62, (uint64_t)v90, &qword_1EB76EFA0);
  sub_1ACA3AAD4(v63, v65, &qword_1EB76EFA0);
  int v66 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
  uint64_t v67 = v89;
  if (v66(v64, 1, v89) == 1)
  {
    sub_1ACA50E78(v63, &qword_1EB76EFA0);
    sub_1ACA50E78(v62, &qword_1EB76EFA0);
    if (v66(v65, 1, v67) == 1)
    {
      sub_1ACA50E78(v64, &qword_1EB76EFA0);
      goto LABEL_16;
    }
LABEL_14:
    sub_1ACA50E78(v64, &qword_1E99F2AD8);
    char v47 = 0;
    return v47 & 1;
  }
  uint64_t v68 = (uint64_t)v87;
  sub_1ACA3AAD4(v64, (uint64_t)v87, &qword_1EB76EFA0);
  if (v66(v65, 1, v67) == 1)
  {
    sub_1ACA50E78((uint64_t)v91, &qword_1EB76EFA0);
    sub_1ACA50E78((uint64_t)v92, &qword_1EB76EFA0);
    sub_1ACB85C50(v68, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    goto LABEL_14;
  }
  uint64_t v69 = (uint64_t)v86;
  sub_1ACB85BE8(v65, (uint64_t)v86, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  char v70 = static PodcastsMediaLibrary.MediaItem.== infix(_:_:)(v68, v69);
  sub_1ACB85C50(v69, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  sub_1ACA50E78((uint64_t)v91, &qword_1EB76EFA0);
  sub_1ACA50E78((uint64_t)v92, &qword_1EB76EFA0);
  sub_1ACB85C50(v68, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  sub_1ACA50E78(v64, &qword_1EB76EFA0);
  if ((v70 & 1) == 0)
  {
LABEL_20:
    char v47 = 0;
    return v47 & 1;
  }
LABEL_16:
  uint64_t v71 = v93;
  if ((sub_1ACD67AE4(*(void *)((char *)a1 + *(int *)(v93 + 28)), *(void *)((char *)a2 + *(int *)(v93 + 28))) & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v72 = *(int *)(v71 + 32);
  uint64_t v73 = *(void *)((char *)a1 + v72);
  uint64_t v74 = *(void *)((char *)a1 + v72 + 8);
  uint64_t v75 = (void *)((char *)a2 + v72);
  if (v73 == *v75 && v74 == v75[1]) {
    char v47 = 1;
  }
  else {
    char v47 = sub_1ACE77848();
  }
  return v47 & 1;
}

unint64_t sub_1ACB8B284()
{
  unint64_t result = qword_1EB770FA8;
  if (!qword_1EB770FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770FA8);
  }
  return result;
}

unint64_t sub_1ACB8B2D8()
{
  unint64_t result = qword_1EB7711C8;
  if (!qword_1EB7711C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7711C8);
  }
  return result;
}

unint64_t sub_1ACB8B32C()
{
  unint64_t result = qword_1EB771288;
  if (!qword_1EB771288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771288);
  }
  return result;
}

unint64_t sub_1ACB8B380()
{
  unint64_t result = qword_1EB770FC0;
  if (!qword_1EB770FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770FC0);
  }
  return result;
}

unint64_t sub_1ACB8B3D4()
{
  unint64_t result = qword_1E99F29F8;
  if (!qword_1E99F29F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F29F8);
  }
  return result;
}

unint64_t sub_1ACB8B428()
{
  unint64_t result = qword_1E99F2A00;
  if (!qword_1E99F2A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2A00);
  }
  return result;
}

uint64_t sub_1ACB8B47C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACB8B4E4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7718D0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACB8B554()
{
  unint64_t result = qword_1E99F2A18;
  if (!qword_1E99F2A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2A18);
  }
  return result;
}

uint64_t sub_1ACB8B5A8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACB85A44(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_1ACB8B5C8()
{
  unint64_t result = qword_1EB770FC8;
  if (!qword_1EB770FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770FC8);
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for PlaybackIntent(unint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    unsigned __int8 v11 = *(unsigned char *)(a2 + 32);
    sub_1ACA639E4(*(void *)a2, v8, v9, v10, v11);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(unsigned char *)(a1 + 32) = v11;
    if (*(unsigned char *)(v3 + 120) == 2)
    {
      long long v12 = *(_OWORD *)(v3 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(v3 + 72);
      *(_OWORD *)(a1 + 88) = v12;
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(v3 + 104);
      *(_DWORD *)(a1 + 119) = *(_DWORD *)(v3 + 119);
      long long v13 = *(_OWORD *)(v3 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(v3 + 40);
      *(_OWORD *)(a1 + 56) = v13;
    }
    else
    {
      uint64_t v15 = *(void *)(v3 + 40);
      uint64_t v16 = *(void *)(v3 + 48);
      uint64_t v17 = *(void *)(v3 + 56);
      uint64_t v18 = *(void *)(v3 + 64);
      uint64_t v19 = *(void *)(v3 + 72);
      uint64_t v20 = *(void *)(v3 + 80);
      long long v106 = v6;
      uint64_t v108 = v3;
      uint64_t v22 = *(void *)(v3 + 88);
      uint64_t v21 = *(void *)(v3 + 96);
      char v23 = *(unsigned char *)(v3 + 104);
      sub_1ACA63A78(v15, v16, v17, v18, v19, v20, v22, v21, v23);
      *(void *)(a1 + 40) = v15;
      *(void *)(a1 + 48) = v16;
      *(void *)(a1 + 56) = v17;
      *(void *)(a1 + 64) = v18;
      *(void *)(a1 + 72) = v19;
      *(void *)(a1 + 80) = v20;
      *(void *)(a1 + 88) = v22;
      *(void *)(a1 + 96) = v21;
      *(unsigned char *)(a1 + 104) = v23;
      uint64_t v6 = v106;
      uint64_t v3 = v108;
      *(unsigned char *)(a1 + 105) = *(unsigned char *)(v108 + 105);
      *(void *)(a1 + 112) = *(void *)(v108 + 112);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(v108 + 120);
      *(_WORD *)(a1 + 121) = *(_WORD *)(v108 + 121);
    }
    uint64_t v24 = v6[6];
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = (void *)(v3 + v24);
    uint64_t v27 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    uint64_t v28 = *((void *)v27 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      uint64_t v99 = v28;
      uint64_t v30 = v26[1];
      uint64_t v107 = v6;
      *uint64_t v25 = *v26;
      v25[1] = v30;
      uint64_t v31 = v26[3];
      void v25[2] = v26[2];
      v25[3] = v31;
      uint64_t v32 = v26[5];
      v25[4] = v26[4];
      v25[5] = v32;
      v25[6] = v26[6];
      *((unsigned char *)v25 + 56) = *((unsigned char *)v26 + 56);
      uint64_t v33 = v26[8];
      *((unsigned char *)v25 + 72) = *((unsigned char *)v26 + 72);
      v25[8] = v33;
      uint64_t v34 = v26[11];
      v25[10] = v26[10];
      v25[11] = v34;
      uint64_t v35 = v26[13];
      v25[12] = v26[12];
      v25[13] = v35;
      uint64_t v36 = v26[15];
      v25[14] = v26[14];
      v25[15] = v36;
      uint64_t v37 = v27[12];
      __dst = (char *)v25 + v37;
      uint64_t v100 = (char *)v26 + v37;
      uint64_t v38 = sub_1ACE74F28();
      uint64_t v105 = *(void *)(v38 - 8);
      uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v39(v100, 1, v38))
      {
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(__dst, v100, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 16))(__dst, v100, v38);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(__dst, 0, 1, v38);
      }
      uint64_t v41 = v27[13];
      int v42 = (void *)((char *)v25 + v41);
      uint64_t v43 = (void *)((char *)v26 + v41);
      uint64_t v44 = v43[1];
      *int v42 = *v43;
      v42[1] = v44;
      *(void *)((char *)v25 + v27[14]) = *(void *)((char *)v26 + v27[14]);
      uint64_t v45 = v27[15];
      uint64_t v46 = (char *)v25 + v45;
      char v47 = (char *)v26 + v45;
      *(void *)uint64_t v46 = *(void *)v47;
      v46[8] = v47[8];
      uint64_t v48 = v27[16];
      uint64_t v49 = (char *)v25 + v48;
      char v50 = (char *)v26 + v48;
      swift_bridgeObjectRetain();
      uint64_t v109 = v3;
      uint64_t v104 = v38;
      if (v39(v50, 1, v38))
      {
        uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v49, v50, v38);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v49, 0, 1, v38);
      }
      uint64_t v52 = v27[17];
      uint64_t v53 = (void *)((char *)v25 + v52);
      uint64_t v54 = (void *)((char *)v26 + v52);
      uint64_t v55 = v54[1];
      *uint64_t v53 = *v54;
      v53[1] = v55;
      *(void *)((char *)v25 + v27[18]) = *(void *)((char *)v26 + v27[18]);
      *((unsigned char *)v25 + v27[19]) = *((unsigned char *)v26 + v27[19]);
      uint64_t v56 = v27[20];
      __int16 v101 = (char *)v25 + v56;
      uint64_t v102 = (char *)v26 + v56;
      uint64_t v57 = sub_1ACE750A8();
      uint64_t v58 = *(void *)(v57 - 8);
      uint64_t v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
      swift_bridgeObjectRetain();
      swift_retain();
      if (v59(v102, 1, v57))
      {
        uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
        memcpy(v101, v102, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v101, v102, v57);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v101, 0, 1, v57);
      }
      uint64_t v61 = v27[21];
      uint64_t v62 = (void *)((char *)v25 + v61);
      uint64_t v63 = (void *)((char *)v26 + v61);
      uint64_t v64 = v63[1];
      *uint64_t v62 = *v63;
      v62[1] = v64;
      *((unsigned char *)v25 + v27[22]) = *((unsigned char *)v26 + v27[22]);
      *((unsigned char *)v25 + v27[23]) = *((unsigned char *)v26 + v27[23]);
      *((unsigned char *)v25 + v27[24]) = *((unsigned char *)v26 + v27[24]);
      *((unsigned char *)v25 + v27[25]) = *((unsigned char *)v26 + v27[25]);
      *((unsigned char *)v25 + v27[26]) = *((unsigned char *)v26 + v27[26]);
      *((unsigned char *)v25 + v27[27]) = *((unsigned char *)v26 + v27[27]);
      *((unsigned char *)v25 + v27[28]) = *((unsigned char *)v26 + v27[28]);
      *(void *)((char *)v25 + v27[29]) = *(void *)((char *)v26 + v27[29]);
      *(void *)((char *)v25 + v27[30]) = *(void *)((char *)v26 + v27[30]);
      *((unsigned char *)v25 + v27[31]) = *((unsigned char *)v26 + v27[31]);
      uint64_t v65 = v27[32];
      int v66 = (void *)((char *)v25 + v65);
      uint64_t v67 = (void *)((char *)v26 + v65);
      uint64_t v68 = v67[1];
      *int v66 = *v67;
      v66[1] = v68;
      *(void *)((char *)v25 + v27[33]) = *(void *)((char *)v26 + v27[33]);
      uint64_t v69 = v27[34];
      char v70 = (void *)((char *)v25 + v69);
      uint64_t v71 = (void *)((char *)v26 + v69);
      uint64_t v72 = v71[1];
      *char v70 = *v71;
      v70[1] = v72;
      uint64_t v73 = v27[35];
      uint64_t v74 = (void *)((char *)v25 + v73);
      uint64_t v75 = (void *)((char *)v26 + v73);
      uint64_t v76 = v75[1];
      *uint64_t v74 = *v75;
      v74[1] = v76;
      uint64_t v77 = v27[36];
      __int16 v103 = (char *)v25 + v77;
      uint64_t v78 = (char *)v26 + v77;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v39(v78, 1, v104))
      {
        uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v103, v78, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v103, v78, v104);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v103, 0, 1, v104);
      }
      uint64_t v80 = v27[37];
      uint64_t v81 = (void *)((char *)v25 + v80);
      uint64_t v82 = (void *)((char *)v26 + v80);
      uint64_t v83 = v82[1];
      *uint64_t v81 = *v82;
      v81[1] = v83;
      uint64_t v84 = v27[38];
      uint64_t v85 = (void *)((char *)v25 + v84);
      uint64_t v86 = (void *)((char *)v26 + v84);
      uint64_t v87 = v86[1];
      *uint64_t v85 = *v86;
      v85[1] = v87;
      *((unsigned char *)v25 + v27[39]) = *((unsigned char *)v26 + v27[39]);
      *((unsigned char *)v25 + v27[40]) = *((unsigned char *)v26 + v27[40]);
      *((unsigned char *)v25 + v27[41]) = *((unsigned char *)v26 + v27[41]);
      *((unsigned char *)v25 + v27[42]) = *((unsigned char *)v26 + v27[42]);
      *((unsigned char *)v25 + v27[43]) = *((unsigned char *)v26 + v27[43]);
      *((unsigned char *)v25 + v27[44]) = *((unsigned char *)v26 + v27[44]);
      *((unsigned char *)v25 + v27[45]) = *((unsigned char *)v26 + v27[45]);
      uint64_t v88 = v27[46];
      uint64_t v89 = (void *)((char *)v25 + v88);
      uint64_t v90 = (void *)((char *)v26 + v88);
      uint64_t v91 = v90[1];
      *uint64_t v89 = *v90;
      v89[1] = v91;
      uint64_t v92 = *(void (**)(void *, void, uint64_t, int *))(v99 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v92(v25, 0, 1, v27);
      uint64_t v6 = v107;
      uint64_t v3 = v109;
    }
    uint64_t v93 = v6[8];
    *(void *)(a1 + v6[7]) = *(void *)(v3 + v6[7]);
    uint64_t v94 = (void *)(a1 + v93);
    long long v95 = (void *)(v3 + v93);
    uint64_t v96 = v95[1];
    *uint64_t v94 = *v95;
    v94[1] = v96;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PlaybackIntent(uint64_t a1, uint64_t a2)
{
  sub_1ACA63688(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  if (*(unsigned char *)(a1 + 120) != 2) {
    sub_1ACA63738(*(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104));
  }
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  int v5 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + v5[12];
    uint64_t v7 = sub_1ACE74F28();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (!v9(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = v4 + v5[16];
    if (!v9(v10, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
    }
    uint64_t v16 = v8;
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v11 = v4 + v5[20];
    uint64_t v12 = sub_1ACE750A8();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v4 + v5[36];
    if (!v9(v14, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v7);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PlaybackIntent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 32);
  sub_1ACA639E4(*(void *)a2, v7, v8, v9, v10);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  if (*(unsigned char *)(v4 + 120) == 2)
  {
    long long v11 = *(_OWORD *)(v4 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(v4 + 72);
    *(_OWORD *)(a1 + 88) = v11;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(v4 + 104);
    *(_DWORD *)(a1 + 119) = *(_DWORD *)(v4 + 119);
    long long v12 = *(_OWORD *)(v4 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(v4 + 40);
    *(_OWORD *)(a1 + 56) = v12;
  }
  else
  {
    uint64_t v13 = *(void *)(v4 + 40);
    uint64_t v14 = *(void *)(v4 + 48);
    uint64_t v15 = *(void *)(v4 + 56);
    uint64_t v16 = *(void *)(v4 + 64);
    uint64_t v17 = *(void *)(v4 + 72);
    uint64_t v18 = *(void *)(v4 + 80);
    uint64_t v105 = v4;
    long long v106 = a3;
    uint64_t v20 = *(void *)(v4 + 88);
    uint64_t v19 = *(void *)(v4 + 96);
    char v21 = *(unsigned char *)(v4 + 104);
    sub_1ACA63A78(v13, v14, v15, v16, v17, v18, v20, v19, v21);
    *(void *)(a1 + 40) = v13;
    *(void *)(a1 + 48) = v14;
    *(void *)(a1 + 56) = v15;
    *(void *)(a1 + 64) = v16;
    *(void *)(a1 + 72) = v17;
    *(void *)(a1 + 80) = v18;
    *(void *)(a1 + 88) = v20;
    *(void *)(a1 + 96) = v19;
    *(unsigned char *)(a1 + 104) = v21;
    uint64_t v4 = v105;
    a3 = v106;
    *(unsigned char *)(a1 + 105) = *(unsigned char *)(v105 + 105);
    *(void *)(a1 + 112) = *(void *)(v105 + 112);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(v105 + 120);
    *(_WORD *)(a1 + 121) = *(_WORD *)(v105 + 121);
  }
  uint64_t v22 = a3[6];
  char v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(v4 + v22);
  uint64_t v25 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v26 = *((void *)v25 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v102 = v26;
    uint64_t v28 = v24[1];
    uint64_t v107 = a3;
    void *v23 = *v24;
    v23[1] = v28;
    uint64_t v29 = v24[3];
    v23[2] = v24[2];
    v23[3] = v29;
    uint64_t v30 = v24[5];
    v23[4] = v24[4];
    v23[5] = v30;
    v23[6] = v24[6];
    *((unsigned char *)v23 + 56) = *((unsigned char *)v24 + 56);
    uint64_t v31 = v24[8];
    *((unsigned char *)v23 + 72) = *((unsigned char *)v24 + 72);
    v23[8] = v31;
    uint64_t v32 = v24[11];
    v23[10] = v24[10];
    v23[11] = v32;
    uint64_t v33 = v24[13];
    v23[12] = v24[12];
    v23[13] = v33;
    uint64_t v34 = v24[15];
    v23[14] = v24[14];
    v23[15] = v34;
    uint64_t v35 = v25[12];
    __dst = (char *)v23 + v35;
    uint64_t v96 = (char *)v24 + v35;
    uint64_t v36 = sub_1ACE74F28();
    uint64_t v104 = *(void *)(v36 - 8);
    uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37(v96, 1, v36))
    {
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(__dst, v96, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(__dst, v96, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(__dst, 0, 1, v36);
    }
    uint64_t v39 = v25[13];
    uint64_t v40 = (void *)((char *)v23 + v39);
    uint64_t v41 = (void *)((char *)v24 + v39);
    uint64_t v42 = v41[1];
    *uint64_t v40 = *v41;
    v40[1] = v42;
    *(void *)((char *)v23 + v25[14]) = *(void *)((char *)v24 + v25[14]);
    uint64_t v43 = v25[15];
    uint64_t v44 = (char *)v23 + v43;
    uint64_t v45 = (char *)v24 + v43;
    *(void *)uint64_t v44 = *(void *)v45;
    v44[8] = v45[8];
    uint64_t v46 = v25[16];
    char v47 = (char *)v23 + v46;
    uint64_t v48 = (char *)v24 + v46;
    swift_bridgeObjectRetain();
    uint64_t v103 = a1;
    uint64_t v101 = v36;
    if (v37(v48, 1, v36))
    {
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v47, v48, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v47, 0, 1, v36);
    }
    uint64_t v50 = v25[17];
    uint64_t v51 = (void *)((char *)v23 + v50);
    uint64_t v52 = (void *)((char *)v24 + v50);
    uint64_t v53 = v52[1];
    *uint64_t v51 = *v52;
    v51[1] = v53;
    *(void *)((char *)v23 + v25[18]) = *(void *)((char *)v24 + v25[18]);
    *((unsigned char *)v23 + v25[19]) = *((unsigned char *)v24 + v25[19]);
    uint64_t v54 = v25[20];
    uint64_t v97 = (char *)v24 + v54;
    __dsta = (char *)v23 + v54;
    uint64_t v55 = sub_1ACE750A8();
    uint64_t v56 = *(void *)(v55 - 8);
    uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v57(v97, 1, v55))
    {
      uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(__dsta, v97, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(__dsta, v97, v55);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(__dsta, 0, 1, v55);
    }
    uint64_t v59 = v25[21];
    uint64_t v60 = (void *)((char *)v23 + v59);
    uint64_t v61 = (void *)((char *)v24 + v59);
    uint64_t v62 = v61[1];
    *uint64_t v60 = *v61;
    v60[1] = v62;
    *((unsigned char *)v23 + v25[22]) = *((unsigned char *)v24 + v25[22]);
    *((unsigned char *)v23 + v25[23]) = *((unsigned char *)v24 + v25[23]);
    *((unsigned char *)v23 + v25[24]) = *((unsigned char *)v24 + v25[24]);
    *((unsigned char *)v23 + v25[25]) = *((unsigned char *)v24 + v25[25]);
    *((unsigned char *)v23 + v25[26]) = *((unsigned char *)v24 + v25[26]);
    *((unsigned char *)v23 + v25[27]) = *((unsigned char *)v24 + v25[27]);
    *((unsigned char *)v23 + v25[28]) = *((unsigned char *)v24 + v25[28]);
    *(void *)((char *)v23 + v25[29]) = *(void *)((char *)v24 + v25[29]);
    *(void *)((char *)v23 + v25[30]) = *(void *)((char *)v24 + v25[30]);
    *((unsigned char *)v23 + v25[31]) = *((unsigned char *)v24 + v25[31]);
    uint64_t v63 = v25[32];
    uint64_t v64 = (void *)((char *)v23 + v63);
    uint64_t v65 = (void *)((char *)v24 + v63);
    uint64_t v66 = v65[1];
    *uint64_t v64 = *v65;
    v64[1] = v66;
    *(void *)((char *)v23 + v25[33]) = *(void *)((char *)v24 + v25[33]);
    uint64_t v67 = v25[34];
    uint64_t v68 = (void *)((char *)v23 + v67);
    uint64_t v69 = (void *)((char *)v24 + v67);
    uint64_t v70 = v69[1];
    *uint64_t v68 = *v69;
    v68[1] = v70;
    uint64_t v71 = v25[35];
    uint64_t v72 = (void *)((char *)v23 + v71);
    uint64_t v73 = (void *)((char *)v24 + v71);
    uint64_t v74 = v73[1];
    *uint64_t v72 = *v73;
    v72[1] = v74;
    uint64_t v75 = v25[36];
    __dstb = (char *)v23 + v75;
    uint64_t v76 = (char *)v24 + v75;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37(v76, 1, v101))
    {
      uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(__dstb, v76, *(void *)(*(void *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(__dstb, v76, v101);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(__dstb, 0, 1, v101);
    }
    uint64_t v78 = v25[37];
    uint64_t v79 = (void *)((char *)v23 + v78);
    uint64_t v80 = (void *)((char *)v24 + v78);
    uint64_t v81 = v80[1];
    *uint64_t v79 = *v80;
    v79[1] = v81;
    uint64_t v82 = v25[38];
    uint64_t v83 = (void *)((char *)v23 + v82);
    uint64_t v84 = (void *)((char *)v24 + v82);
    uint64_t v85 = v84[1];
    *uint64_t v83 = *v84;
    v83[1] = v85;
    *((unsigned char *)v23 + v25[39]) = *((unsigned char *)v24 + v25[39]);
    *((unsigned char *)v23 + v25[40]) = *((unsigned char *)v24 + v25[40]);
    *((unsigned char *)v23 + v25[41]) = *((unsigned char *)v24 + v25[41]);
    *((unsigned char *)v23 + v25[42]) = *((unsigned char *)v24 + v25[42]);
    *((unsigned char *)v23 + v25[43]) = *((unsigned char *)v24 + v25[43]);
    *((unsigned char *)v23 + v25[44]) = *((unsigned char *)v24 + v25[44]);
    *((unsigned char *)v23 + v25[45]) = *((unsigned char *)v24 + v25[45]);
    uint64_t v86 = v25[46];
    uint64_t v87 = (void *)((char *)v23 + v86);
    uint64_t v88 = (void *)((char *)v24 + v86);
    uint64_t v89 = v88[1];
    *uint64_t v87 = *v88;
    v87[1] = v89;
    uint64_t v90 = *(void (**)(void *, void, uint64_t, int *))(v102 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v90(v23, 0, 1, v25);
    a1 = v103;
    a3 = v107;
  }
  uint64_t v91 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(v4 + a3[7]);
  uint64_t v92 = (void *)(a1 + v91);
  uint64_t v93 = (void *)(v4 + v91);
  uint64_t v94 = v93[1];
  *uint64_t v92 = *v93;
  v92[1] = v94;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlaybackIntent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 32);
  sub_1ACA639E4(*(void *)a2, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  unsigned __int8 v15 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v10;
  sub_1ACA63688(v11, v12, v13, v14, v15);
  uint64_t v16 = (_OWORD *)(a1 + 40);
  uint64_t v17 = (_OWORD *)(v4 + 40);
  int v18 = *(unsigned __int8 *)(v4 + 120);
  if (*(unsigned char *)(a1 + 120) == 2)
  {
    if (v18 == 2)
    {
      long long v19 = *(_OWORD *)(v4 + 56);
      *uint64_t v16 = *v17;
      *(_OWORD *)(a1 + 56) = v19;
      long long v20 = *(_OWORD *)(v4 + 72);
      long long v21 = *(_OWORD *)(v4 + 88);
      long long v22 = *(_OWORD *)(v4 + 104);
      *(_DWORD *)(a1 + 119) = *(_DWORD *)(v4 + 119);
      *(_OWORD *)(a1 + 88) = v21;
      *(_OWORD *)(a1 + 104) = v22;
      *(_OWORD *)(a1 + 72) = v20;
      goto LABEL_9;
    }
    uint64_t v27 = *(void *)(v4 + 40);
    uint64_t v28 = *(void *)(v4 + 48);
    uint64_t v29 = *(void *)(v4 + 56);
    uint64_t v30 = *(void *)(v4 + 64);
    uint64_t v31 = *(void *)(v4 + 72);
    uint64_t v32 = *(void *)(v4 + 80);
    uint64_t v194 = a3;
    uint64_t v33 = *(void *)(v4 + 88);
    uint64_t v34 = *(void *)(v4 + 96);
    char v191 = *(unsigned char *)(v4 + 104);
    sub_1ACA63A78(v27, v28, v29, v30, v31, v32, v33, v34, v191);
    *(void *)(a1 + 40) = v27;
    *(void *)(a1 + 48) = v28;
    *(void *)(a1 + 56) = v29;
    *(void *)(a1 + 64) = v30;
    *(void *)(a1 + 72) = v31;
    *(void *)(a1 + 80) = v32;
    *(void *)(a1 + 88) = v33;
    *(void *)(a1 + 96) = v34;
    a3 = v194;
    *(unsigned char *)(a1 + 104) = v191;
  }
  else
  {
    if (v18 == 2)
    {
      sub_1ACABF6C4(a1 + 40);
      long long v23 = *(_OWORD *)(v4 + 56);
      *uint64_t v16 = *v17;
      *(_OWORD *)(a1 + 56) = v23;
      long long v25 = *(_OWORD *)(v4 + 88);
      long long v24 = *(_OWORD *)(v4 + 104);
      long long v26 = *(_OWORD *)(v4 + 72);
      *(_DWORD *)(a1 + 119) = *(_DWORD *)(v4 + 119);
      *(_OWORD *)(a1 + 88) = v25;
      *(_OWORD *)(a1 + 104) = v24;
      *(_OWORD *)(a1 + 72) = v26;
      goto LABEL_9;
    }
    uint64_t v35 = *(void *)(v4 + 40);
    uint64_t v36 = *(void *)(v4 + 48);
    uint64_t v37 = *(void *)(v4 + 56);
    uint64_t v38 = *(void *)(v4 + 64);
    uint64_t v40 = *(void *)(v4 + 72);
    uint64_t v39 = *(void *)(v4 + 80);
    v195 = a3;
    uint64_t v42 = *(void *)(v4 + 88);
    uint64_t v41 = *(void *)(v4 + 96);
    char v192 = *(unsigned char *)(v4 + 104);
    sub_1ACA63A78(v35, v36, v37, v38, v40, v39, v42, v41, v192);
    uint64_t v43 = *(void *)(a1 + 40);
    uint64_t v44 = *(void *)(a1 + 48);
    uint64_t v45 = *(void *)(a1 + 56);
    uint64_t v46 = *(void *)(a1 + 64);
    uint64_t v47 = *(void *)(a1 + 72);
    uint64_t v48 = *(void *)(a1 + 80);
    uint64_t v49 = *(void *)(a1 + 88);
    uint64_t v50 = *(void *)(a1 + 96);
    char v51 = *(unsigned char *)(a1 + 104);
    *(void *)(a1 + 40) = v35;
    *(void *)(a1 + 48) = v36;
    *(void *)(a1 + 56) = v37;
    *(void *)(a1 + 64) = v38;
    *(void *)(a1 + 72) = v40;
    *(void *)(a1 + 80) = v39;
    *(void *)(a1 + 88) = v42;
    *(void *)(a1 + 96) = v41;
    a3 = v195;
    *(unsigned char *)(a1 + 104) = v192;
    sub_1ACA63738(v43, v44, v45, v46, v47, v48, v49, v50, v51);
  }
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(v4 + 105);
  *(void *)(a1 + 112) = *(void *)(v4 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(v4 + 120);
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(v4 + 121);
  *(unsigned char *)(a1 + 122) = *(unsigned char *)(v4 + 122);
LABEL_9:
  uint64_t v52 = a3[6];
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (void *)(v4 + v52);
  uint64_t v55 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v56 = *((void *)v55 - 1);
  uint64_t v57 = *(uint64_t (**)(void *, uint64_t, int *))(v56 + 48);
  int v58 = v57(v53, 1, v55);
  int v59 = v57(v54, 1, v55);
  if (!v58)
  {
    if (v59)
    {
      sub_1ACB85C50((uint64_t)v53, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      goto LABEL_15;
    }
    uint64_t v193 = v4;
    *uint64_t v53 = *v54;
    v53[1] = v54[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v53[2] = v54[2];
    v53[3] = v54[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    _OWORD v53[4] = v54[4];
    v53[5] = v54[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v67 = v54[6];
    *((unsigned char *)v53 + 56) = *((unsigned char *)v54 + 56);
    v53[6] = v67;
    uint64_t v68 = v54[8];
    *((unsigned char *)v53 + 72) = *((unsigned char *)v54 + 72);
    v53[8] = v68;
    v53[10] = v54[10];
    v53[11] = v54[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v53[12] = v54[12];
    v53[13] = v54[13];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v53[14] = v54[14];
    v53[15] = v54[15];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v69 = v55[12];
    uint64_t v70 = (char *)v53 + v69;
    uint64_t v71 = (char *)v54 + v69;
    uint64_t v72 = sub_1ACE74F28();
    uint64_t v190 = *(void *)(v72 - 8);
    uint64_t v73 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v190 + 48);
    __dsta = v70;
    LODWORD(v70) = v73(v70, 1, v72);
    uint64_t v188 = v73;
    int v74 = v73(v71, 1, v72);
    if (v70)
    {
      if (v74)
      {
        size_t v75 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
        uint64_t v76 = __dsta;
LABEL_32:
        memcpy(v76, v71, v75);
        goto LABEL_35;
      }
      (*(void (**)(void *, char *, uint64_t))(v190 + 16))(__dsta, v71, v72);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v190 + 56))(__dsta, 0, 1, v72);
    }
    else
    {
      if (v74)
      {
        (*(void (**)(void *, uint64_t))(v190 + 8))(__dsta, v72);
        size_t v75 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
        uint64_t v76 = __dsta;
        goto LABEL_32;
      }
      (*(void (**)(void *, char *, uint64_t))(v190 + 24))(__dsta, v71, v72);
    }
LABEL_35:
    uint64_t v122 = v55[13];
    uint64_t v123 = (void *)((char *)v53 + v122);
    uint64_t v124 = (void *)((char *)v54 + v122);
    void *v123 = *v124;
    v123[1] = v124[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)((char *)v53 + v55[14]) = *(void *)((char *)v54 + v55[14]);
    uint64_t v125 = v55[15];
    char v126 = (char *)v53 + v125;
    uint64_t v127 = (char *)v54 + v125;
    char v128 = v127[8];
    *(void *)char v126 = *(void *)v127;
    v126[8] = v128;
    uint64_t v129 = v55[16];
    uint64_t v130 = (char *)v54 + v129;
    __dstc = (char *)v53 + v129;
    int v131 = ((uint64_t (*)(void))v73)();
    int v132 = v73(v130, 1, v72);
    v197 = a3;
    if (v131)
    {
      if (v132)
      {
        size_t v133 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
        unint64_t v134 = __dstc;
LABEL_40:
        memcpy(v134, v130, v133);
        goto LABEL_43;
      }
      (*(void (**)(char *, char *, uint64_t))(v190 + 16))(__dstc, v130, v72);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v190 + 56))(__dstc, 0, 1, v72);
    }
    else
    {
      if (v132)
      {
        (*(void (**)(char *, uint64_t))(v190 + 8))(__dstc, v72);
        size_t v133 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
        unint64_t v134 = __dstc;
        goto LABEL_40;
      }
      (*(void (**)(char *, char *, uint64_t))(v190 + 24))(__dstc, v130, v72);
    }
LABEL_43:
    uint64_t v135 = v55[17];
    uint64_t v136 = (void *)((char *)v53 + v135);
    uint64_t v137 = (void *)((char *)v54 + v135);
    *uint64_t v136 = *v137;
    v136[1] = v137[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)((char *)v53 + v55[18]) = *(void *)((char *)v54 + v55[18]);
    swift_retain();
    swift_release();
    *((unsigned char *)v53 + v55[19]) = *((unsigned char *)v54 + v55[19]);
    uint64_t v138 = v55[20];
    uint64_t v139 = (char *)v53 + v138;
    uint64_t v140 = (char *)v54 + v138;
    uint64_t v141 = sub_1ACE750A8();
    uint64_t v142 = *(void *)(v141 - 8);
    uint64_t v143 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v142 + 48);
    __dstd = v139;
    LODWORD(v139) = v143(v139, 1, v141);
    int v144 = v143(v140, 1, v141);
    if (v139)
    {
      if (v144)
      {
        size_t v145 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140) - 8)
                         + 64);
        uint64_t v146 = __dstd;
LABEL_48:
        memcpy(v146, v140, v145);
        goto LABEL_51;
      }
      (*(void (**)(void *, char *, uint64_t))(v142 + 16))(__dstd, v140, v141);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v142 + 56))(__dstd, 0, 1, v141);
    }
    else
    {
      if (v144)
      {
        (*(void (**)(void *, uint64_t))(v142 + 8))(__dstd, v141);
        size_t v145 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140) - 8)
                         + 64);
        uint64_t v146 = __dstd;
        goto LABEL_48;
      }
      (*(void (**)(void *, char *, uint64_t))(v142 + 24))(__dstd, v140, v141);
    }
LABEL_51:
    uint64_t v147 = v55[21];
    uint64_t v148 = (void *)((char *)v53 + v147);
    v149 = (void *)((char *)v54 + v147);
    *uint64_t v148 = *v149;
    v148[1] = v149[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((unsigned char *)v53 + v55[22]) = *((unsigned char *)v54 + v55[22]);
    *((unsigned char *)v53 + v55[23]) = *((unsigned char *)v54 + v55[23]);
    *((unsigned char *)v53 + v55[24]) = *((unsigned char *)v54 + v55[24]);
    *((unsigned char *)v53 + v55[25]) = *((unsigned char *)v54 + v55[25]);
    *((unsigned char *)v53 + v55[26]) = *((unsigned char *)v54 + v55[26]);
    *((unsigned char *)v53 + v55[27]) = *((unsigned char *)v54 + v55[27]);
    *((unsigned char *)v53 + v55[28]) = *((unsigned char *)v54 + v55[28]);
    *(void *)((char *)v53 + v55[29]) = *(void *)((char *)v54 + v55[29]);
    *(void *)((char *)v53 + v55[30]) = *(void *)((char *)v54 + v55[30]);
    *((unsigned char *)v53 + v55[31]) = *((unsigned char *)v54 + v55[31]);
    uint64_t v150 = v55[32];
    uint64_t v151 = (void *)((char *)v53 + v150);
    unint64_t v152 = (void *)((char *)v54 + v150);
    *uint64_t v151 = *v152;
    v151[1] = v152[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)((char *)v53 + v55[33]) = *(void *)((char *)v54 + v55[33]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v153 = v55[34];
    unint64_t v154 = (void *)((char *)v53 + v153);
    uint64_t v155 = (void *)((char *)v54 + v153);
    void *v154 = *v155;
    v154[1] = v155[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v156 = v55[35];
    unint64_t v157 = (void *)((char *)v53 + v156);
    unint64_t v158 = (void *)((char *)v54 + v156);
    *unint64_t v157 = *v158;
    v157[1] = v158[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v159 = v55[36];
    uint64_t v160 = (char *)v53 + v159;
    v161 = (char *)v54 + v159;
    int v162 = v188((char *)v53 + v159, 1, v72);
    int v163 = v188(v161, 1, v72);
    a3 = v197;
    if (v162)
    {
      if (!v163)
      {
        (*(void (**)(char *, char *, uint64_t))(v190 + 16))(v160, v161, v72);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v190 + 56))(v160, 0, 1, v72);
LABEL_57:
        uint64_t v165 = v55[37];
        uint64_t v166 = (void *)((char *)v53 + v165);
        v167 = (void *)((char *)v54 + v165);
        *uint64_t v166 = *v167;
        v166[1] = v167[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v168 = v55[38];
        uint64_t v169 = (void *)((char *)v53 + v168);
        unint64_t v170 = (void *)((char *)v54 + v168);
        *uint64_t v169 = *v170;
        v169[1] = v170[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((unsigned char *)v53 + v55[39]) = *((unsigned char *)v54 + v55[39]);
        *((unsigned char *)v53 + v55[40]) = *((unsigned char *)v54 + v55[40]);
        *((unsigned char *)v53 + v55[41]) = *((unsigned char *)v54 + v55[41]);
        *((unsigned char *)v53 + v55[42]) = *((unsigned char *)v54 + v55[42]);
        *((unsigned char *)v53 + v55[43]) = *((unsigned char *)v54 + v55[43]);
        *((unsigned char *)v53 + v55[44]) = *((unsigned char *)v54 + v55[44]);
        *((unsigned char *)v53 + v55[45]) = *((unsigned char *)v54 + v55[45]);
        uint64_t v171 = v55[46];
        uint64_t v172 = (void *)((char *)v53 + v171);
        uint64_t v173 = (void *)((char *)v54 + v171);
        *uint64_t v172 = *v173;
        v172[1] = v173[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_58:
        uint64_t v4 = v193;
        goto LABEL_59;
      }
    }
    else
    {
      if (!v163)
      {
        (*(void (**)(char *, char *, uint64_t))(v190 + 24))(v160, v161, v72);
        goto LABEL_57;
      }
      (*(void (**)(char *, uint64_t))(v190 + 8))(v160, v72);
    }
    uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v160, v161, *(void *)(*(void *)(v164 - 8) + 64));
    goto LABEL_57;
  }
  if (!v59)
  {
    uint64_t v186 = v56;
    uint64_t v193 = v4;
    uint64_t v196 = a3;
    *uint64_t v53 = *v54;
    v53[1] = v54[1];
    v53[2] = v54[2];
    v53[3] = v54[3];
    _OWORD v53[4] = v54[4];
    v53[5] = v54[5];
    uint64_t v60 = v54[6];
    *((unsigned char *)v53 + 56) = *((unsigned char *)v54 + 56);
    v53[6] = v60;
    uint64_t v61 = v54[8];
    *((unsigned char *)v53 + 72) = *((unsigned char *)v54 + 72);
    v53[8] = v61;
    v53[10] = v54[10];
    v53[11] = v54[11];
    v53[12] = v54[12];
    v53[13] = v54[13];
    v53[14] = v54[14];
    v53[15] = v54[15];
    uint64_t v62 = v55[12];
    __dst = (char *)v53 + v62;
    uint64_t v178 = (char *)v54 + v62;
    uint64_t v63 = sub_1ACE74F28();
    uint64_t v187 = *(void *)(v63 - 8);
    uint64_t v64 = *(unsigned int (**)(char *, uint64_t, void *))(v187 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v189 = v64;
    if (v64(v178, 1, (void *)v63))
    {
      uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(__dst, v178, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v187 + 16))(__dst, v178, v63);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v187 + 56))(__dst, 0, 1, v63);
    }
    uint64_t v77 = v55[13];
    uint64_t v78 = (void *)((char *)v53 + v77);
    uint64_t v79 = (void *)((char *)v54 + v77);
    *uint64_t v78 = *v79;
    v78[1] = v79[1];
    *(void *)((char *)v53 + v55[14]) = *(void *)((char *)v54 + v55[14]);
    uint64_t v80 = v55[15];
    uint64_t v81 = (char *)v53 + v80;
    uint64_t v82 = (char *)v54 + v80;
    uint64_t v83 = *(void *)v82;
    v81[8] = v82[8];
    *(void *)uint64_t v81 = v83;
    uint64_t v84 = v55[16];
    uint64_t v85 = (char *)v53 + v84;
    uint64_t v86 = (char *)v54 + v84;
    swift_bridgeObjectRetain();
    __src = (void *)v63;
    if (v64(v86, 1, (void *)v63))
    {
      uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v85, v86, *(void *)(*(void *)(v87 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v187 + 16))(v85, v86, v63);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v187 + 56))(v85, 0, 1, v63);
    }
    uint64_t v88 = v55[17];
    uint64_t v89 = (void *)((char *)v53 + v88);
    uint64_t v90 = (void *)((char *)v54 + v88);
    *uint64_t v89 = *v90;
    v89[1] = v90[1];
    *(void *)((char *)v53 + v55[18]) = *(void *)((char *)v54 + v55[18]);
    *((unsigned char *)v53 + v55[19]) = *((unsigned char *)v54 + v55[19]);
    uint64_t v91 = v55[20];
    unint64_t v179 = (char *)v54 + v91;
    __dstb = (char *)v53 + v91;
    uint64_t v92 = sub_1ACE750A8();
    uint64_t v93 = *(void *)(v92 - 8);
    uint64_t v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v94(v179, 1, v92))
    {
      uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(__dstb, v179, *(void *)(*(void *)(v95 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v93 + 16))(__dstb, v179, v92);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v93 + 56))(__dstb, 0, 1, v92);
    }
    uint64_t v96 = v55[21];
    uint64_t v97 = (void *)((char *)v53 + v96);
    uint64_t v98 = (void *)((char *)v54 + v96);
    *uint64_t v97 = *v98;
    v97[1] = v98[1];
    *((unsigned char *)v53 + v55[22]) = *((unsigned char *)v54 + v55[22]);
    *((unsigned char *)v53 + v55[23]) = *((unsigned char *)v54 + v55[23]);
    *((unsigned char *)v53 + v55[24]) = *((unsigned char *)v54 + v55[24]);
    *((unsigned char *)v53 + v55[25]) = *((unsigned char *)v54 + v55[25]);
    *((unsigned char *)v53 + v55[26]) = *((unsigned char *)v54 + v55[26]);
    *((unsigned char *)v53 + v55[27]) = *((unsigned char *)v54 + v55[27]);
    *((unsigned char *)v53 + v55[28]) = *((unsigned char *)v54 + v55[28]);
    *(void *)((char *)v53 + v55[29]) = *(void *)((char *)v54 + v55[29]);
    *(void *)((char *)v53 + v55[30]) = *(void *)((char *)v54 + v55[30]);
    *((unsigned char *)v53 + v55[31]) = *((unsigned char *)v54 + v55[31]);
    uint64_t v99 = v55[32];
    uint64_t v100 = (void *)((char *)v53 + v99);
    uint64_t v101 = (void *)((char *)v54 + v99);
    *uint64_t v100 = *v101;
    v100[1] = v101[1];
    *(void *)((char *)v53 + v55[33]) = *(void *)((char *)v54 + v55[33]);
    uint64_t v102 = v55[34];
    uint64_t v103 = (void *)((char *)v53 + v102);
    uint64_t v104 = (void *)((char *)v54 + v102);
    *uint64_t v103 = *v104;
    v103[1] = v104[1];
    uint64_t v105 = v55[35];
    long long v106 = (void *)((char *)v53 + v105);
    uint64_t v107 = (void *)((char *)v54 + v105);
    *long long v106 = *v107;
    v106[1] = v107[1];
    uint64_t v108 = v55[36];
    uint64_t v109 = (char *)v53 + v108;
    uint64_t v110 = (char *)v54 + v108;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v189(v110, 1, __src))
    {
      uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v109, v110, *(void *)(*(void *)(v111 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, void *))(v187 + 16))(v109, v110, __src);
      (*(void (**)(char *, void, uint64_t, void *))(v187 + 56))(v109, 0, 1, __src);
    }
    a3 = v196;
    uint64_t v112 = v55[37];
    __int16 v113 = (void *)((char *)v53 + v112);
    char v114 = (void *)((char *)v54 + v112);
    *__int16 v113 = *v114;
    v113[1] = v114[1];
    uint64_t v115 = v55[38];
    uint64_t v116 = (void *)((char *)v53 + v115);
    uint64_t v117 = (void *)((char *)v54 + v115);
    *uint64_t v116 = *v117;
    v116[1] = v117[1];
    *((unsigned char *)v53 + v55[39]) = *((unsigned char *)v54 + v55[39]);
    *((unsigned char *)v53 + v55[40]) = *((unsigned char *)v54 + v55[40]);
    *((unsigned char *)v53 + v55[41]) = *((unsigned char *)v54 + v55[41]);
    *((unsigned char *)v53 + v55[42]) = *((unsigned char *)v54 + v55[42]);
    *((unsigned char *)v53 + v55[43]) = *((unsigned char *)v54 + v55[43]);
    *((unsigned char *)v53 + v55[44]) = *((unsigned char *)v54 + v55[44]);
    *((unsigned char *)v53 + v55[45]) = *((unsigned char *)v54 + v55[45]);
    uint64_t v118 = v55[46];
    uint64_t v119 = (void *)((char *)v53 + v118);
    uint64_t v120 = (void *)((char *)v54 + v118);
    *uint64_t v119 = *v120;
    v119[1] = v120[1];
    uint64_t v121 = *(void (**)(void *, void, uint64_t, int *))(v186 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v121(v53, 0, 1, v55);
    goto LABEL_58;
  }
LABEL_15:
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  memcpy(v53, v54, *(void *)(*(void *)(v66 - 8) + 64));
LABEL_59:
  *(void *)(a1 + a3[7]) = *(void *)(v4 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v174 = a3[8];
  uint64_t v175 = (void *)(a1 + v174);
  v176 = (void *)(v4 + v174);
  *uint64_t v175 = *v176;
  v175[1] = v176[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PlaybackIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 119) = *(_DWORD *)(a2 + 119);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  unsigned __int8 v10 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v41 = v11;
    long long v13 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v13;
    void v8[2] = v9[2];
    *((void *)v8 + 6) = *((void *)v9 + 6);
    *((unsigned char *)v8 + 56) = *((unsigned char *)v9 + 56);
    *((void *)v8 + 8) = *((void *)v9 + 8);
    *((unsigned char *)v8 + 72) = *((unsigned char *)v9 + 72);
    long long v14 = v9[6];
    v8[5] = v9[5];
    v8[6] = v14;
    v8[7] = v9[7];
    uint64_t v15 = v10[12];
    uint64_t v16 = (char *)v8 + v15;
    uint64_t v17 = (char *)v9 + v15;
    uint64_t v18 = sub_1ACE74F28();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    if (v43(v17, 1, v18))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    *(_OWORD *)((char *)v8 + v10[13]) = *(_OWORD *)((char *)v9 + v10[13]);
    *(void *)((char *)v8 + v10[14]) = *(void *)((char *)v9 + v10[14]);
    uint64_t v21 = v10[15];
    long long v22 = (char *)v8 + v21;
    long long v23 = (char *)v9 + v21;
    v22[8] = v23[8];
    *(void *)long long v22 = *(void *)v23;
    uint64_t v24 = v10[16];
    long long v25 = (char *)v8 + v24;
    long long v26 = (char *)v9 + v24;
    uint64_t v42 = v3;
    uint64_t v40 = v19;
    if (v43((char *)v9 + v24, 1, v18))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v25, v26, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
    }
    *(_OWORD *)((char *)v8 + v10[17]) = *(_OWORD *)((char *)v9 + v10[17]);
    *(void *)((char *)v8 + v10[18]) = *(void *)((char *)v9 + v10[18]);
    *((unsigned char *)v8 + v10[19]) = *((unsigned char *)v9 + v10[19]);
    uint64_t v28 = v10[20];
    uint64_t v29 = (char *)v8 + v28;
    uint64_t v30 = (char *)v9 + v28;
    uint64_t v31 = sub_1ACE750A8();
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    uint64_t v3 = v42;
    *(_OWORD *)((char *)v8 + v10[21]) = *(_OWORD *)((char *)v9 + v10[21]);
    *((unsigned char *)v8 + v10[22]) = *((unsigned char *)v9 + v10[22]);
    *((unsigned char *)v8 + v10[23]) = *((unsigned char *)v9 + v10[23]);
    *((unsigned char *)v8 + v10[24]) = *((unsigned char *)v9 + v10[24]);
    *((unsigned char *)v8 + v10[25]) = *((unsigned char *)v9 + v10[25]);
    *((unsigned char *)v8 + v10[26]) = *((unsigned char *)v9 + v10[26]);
    *((unsigned char *)v8 + v10[27]) = *((unsigned char *)v9 + v10[27]);
    *((unsigned char *)v8 + v10[28]) = *((unsigned char *)v9 + v10[28]);
    *(void *)((char *)v8 + v10[29]) = *(void *)((char *)v9 + v10[29]);
    *(void *)((char *)v8 + v10[30]) = *(void *)((char *)v9 + v10[30]);
    *((unsigned char *)v8 + v10[31]) = *((unsigned char *)v9 + v10[31]);
    *(_OWORD *)((char *)v8 + v10[32]) = *(_OWORD *)((char *)v9 + v10[32]);
    *(void *)((char *)v8 + v10[33]) = *(void *)((char *)v9 + v10[33]);
    *(_OWORD *)((char *)v8 + v10[34]) = *(_OWORD *)((char *)v9 + v10[34]);
    *(_OWORD *)((char *)v8 + v10[35]) = *(_OWORD *)((char *)v9 + v10[35]);
    uint64_t v34 = v10[36];
    uint64_t v35 = (char *)v8 + v34;
    uint64_t v36 = (char *)v9 + v34;
    if (v43((char *)v9 + v34, 1, v18))
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v35, v36, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v35, 0, 1, v18);
    }
    *(_OWORD *)((char *)v8 + v10[37]) = *(_OWORD *)((char *)v9 + v10[37]);
    *(_OWORD *)((char *)v8 + v10[38]) = *(_OWORD *)((char *)v9 + v10[38]);
    *((unsigned char *)v8 + v10[39]) = *((unsigned char *)v9 + v10[39]);
    *((unsigned char *)v8 + v10[40]) = *((unsigned char *)v9 + v10[40]);
    *((unsigned char *)v8 + v10[41]) = *((unsigned char *)v9 + v10[41]);
    *((unsigned char *)v8 + v10[42]) = *((unsigned char *)v9 + v10[42]);
    *((unsigned char *)v8 + v10[43]) = *((unsigned char *)v9 + v10[43]);
    *((unsigned char *)v8 + v10[44]) = *((unsigned char *)v9 + v10[44]);
    *((unsigned char *)v8 + v10[45]) = *((unsigned char *)v9 + v10[45]);
    *(_OWORD *)((char *)v8 + v10[46]) = *(_OWORD *)((char *)v9 + v10[46]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v41 + 56))(v8, 0, 1, v10);
  }
  uint64_t v38 = *(int *)(v3 + 32);
  *(void *)(a1 + *(int *)(v3 + 28)) = *(void *)(a2 + *(int *)(v3 + 28));
  *(_OWORD *)(a1 + v38) = *(_OWORD *)(a2 + v38);
  return a1;
}

uint64_t assignWithTake for PlaybackIntent(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v6;
  sub_1ACA63688(v7, v8, v9, v10, v12);
  if (*(unsigned char *)(a1 + 120) == 2) {
    goto LABEL_4;
  }
  if (*(unsigned char *)(a2 + 120) == 2)
  {
    sub_1ACABF6C4(a1 + 40);
LABEL_4:
    long long v13 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v13;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_DWORD *)(a1 + 119) = *(_DWORD *)(a2 + 119);
    long long v14 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v14;
    goto LABEL_6;
  }
  char v15 = *(unsigned char *)(a2 + 104);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v20 = *(void *)(a1 + 72);
  uint64_t v21 = *(void *)(a1 + 80);
  uint64_t v22 = *(void *)(a1 + 88);
  uint64_t v23 = *(void *)(a1 + 96);
  char v24 = *(unsigned char *)(a1 + 104);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = v15;
  sub_1ACA63738(v16, v17, v18, v19, v20, v21, v22, v23, v24);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  *(unsigned char *)(a1 + 122) = *(unsigned char *)(a2 + 122);
LABEL_6:
  uint64_t v25 = a3[6];
  long long v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v29 = *((void *)v28 - 1);
  uint64_t v30 = *(uint64_t (**)(void *, uint64_t, int *))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30(v27, 1, v28);
  if (!v31)
  {
    if (v32)
    {
      sub_1ACB85C50((uint64_t)v26, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      goto LABEL_12;
    }
    unint64_t v157 = a3;
    uint64_t v42 = v27[1];
    void *v26 = *v27;
    v26[1] = v42;
    swift_bridgeObjectRelease();
    uint64_t v43 = v27[3];
    void v26[2] = v27[2];
    v26[3] = v43;
    swift_bridgeObjectRelease();
    uint64_t v44 = v27[5];
    v26[4] = v27[4];
    v26[5] = v44;
    swift_bridgeObjectRelease();
    v26[6] = v27[6];
    *((unsigned char *)v26 + 56) = *((unsigned char *)v27 + 56);
    v26[8] = v27[8];
    *((unsigned char *)v26 + 72) = *((unsigned char *)v27 + 72);
    uint64_t v45 = v27[11];
    v26[10] = v27[10];
    v26[11] = v45;
    swift_bridgeObjectRelease();
    uint64_t v46 = v27[13];
    v26[12] = v27[12];
    v26[13] = v46;
    swift_bridgeObjectRelease();
    uint64_t v47 = v27[15];
    v26[14] = v27[14];
    v26[15] = v47;
    swift_bridgeObjectRelease();
    uint64_t v48 = v28[12];
    uint64_t v49 = (char *)v26 + v48;
    uint64_t v50 = (char *)v27 + v48;
    uint64_t v51 = sub_1ACE74F28();
    uint64_t v153 = *(void *)(v51 - 8);
    uint64_t v52 = *(uint64_t (**)(void))(v153 + 48);
    uint64_t v148 = v49;
    LODWORD(v49) = ((uint64_t (*)(char *, uint64_t, uint64_t))v52)(v49, 1, v51);
    uint64_t v156 = v52;
    int v53 = ((uint64_t (*)(char *, uint64_t, uint64_t))v52)(v50, 1, v51);
    if (v49)
    {
      if (v53)
      {
        size_t v54 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
        uint64_t v55 = v148;
LABEL_29:
        memcpy(v55, v50, v54);
        goto LABEL_32;
      }
      (*(void (**)(void *, char *, uint64_t))(v153 + 32))(v148, v50, v51);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v153 + 56))(v148, 0, 1, v51);
    }
    else
    {
      if (v53)
      {
        (*(void (**)(void *, uint64_t))(v153 + 8))(v148, v51);
        size_t v54 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
        uint64_t v55 = v148;
        goto LABEL_29;
      }
      (*(void (**)(void *, char *, uint64_t))(v153 + 40))(v148, v50, v51);
    }
LABEL_32:
    uint64_t v73 = v28[13];
    int v74 = (void *)((char *)v26 + v73);
    size_t v75 = (void *)((char *)v27 + v73);
    uint64_t v77 = *v75;
    uint64_t v76 = v75[1];
    *int v74 = v77;
    v74[1] = v76;
    swift_bridgeObjectRelease();
    *(void *)((char *)v26 + v28[14]) = *(void *)((char *)v27 + v28[14]);
    uint64_t v78 = v28[15];
    uint64_t v79 = (char *)v26 + v78;
    uint64_t v80 = (char *)v27 + v78;
    *(void *)uint64_t v79 = *(void *)v80;
    v79[8] = v80[8];
    uint64_t v81 = v28[16];
    uint64_t v82 = (char *)v27 + v81;
    v149 = (char *)v26 + v81;
    int v83 = v52();
    int v84 = ((uint64_t (*)(char *, uint64_t, uint64_t))v52)(v82, 1, v51);
    if (v83)
    {
      if (v84)
      {
        size_t v85 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
        uint64_t v86 = v149;
LABEL_37:
        memcpy(v86, v82, v85);
        goto LABEL_40;
      }
      (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v149, v82, v51);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v153 + 56))(v149, 0, 1, v51);
    }
    else
    {
      if (v84)
      {
        (*(void (**)(char *, uint64_t))(v153 + 8))(v149, v51);
        size_t v85 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
        uint64_t v86 = v149;
        goto LABEL_37;
      }
      (*(void (**)(char *, char *, uint64_t))(v153 + 40))(v149, v82, v51);
    }
LABEL_40:
    uint64_t v87 = v28[17];
    uint64_t v88 = (void *)((char *)v26 + v87);
    uint64_t v89 = (void *)((char *)v27 + v87);
    uint64_t v91 = *v89;
    uint64_t v90 = v89[1];
    void *v88 = v91;
    v88[1] = v90;
    swift_bridgeObjectRelease();
    *(void *)((char *)v26 + v28[18]) = *(void *)((char *)v27 + v28[18]);
    swift_release();
    *((unsigned char *)v26 + v28[19]) = *((unsigned char *)v27 + v28[19]);
    uint64_t v92 = v28[20];
    uint64_t v93 = (char *)v26 + v92;
    uint64_t v94 = (char *)v27 + v92;
    uint64_t v95 = sub_1ACE750A8();
    uint64_t v147 = *(void *)(v95 - 8);
    uint64_t v96 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v147 + 48);
    __src = v93;
    LODWORD(v93) = v96(v93, 1, v95);
    int v97 = v96(v94, 1, v95);
    if (v93)
    {
      if (v97)
      {
        size_t v98 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140) - 8)
                        + 64);
        uint64_t v99 = __src;
LABEL_45:
        memcpy(v99, v94, v98);
        goto LABEL_48;
      }
      (*(void (**)(void *, char *, uint64_t))(v147 + 32))(__src, v94, v95);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v147 + 56))(__src, 0, 1, v95);
    }
    else
    {
      if (v97)
      {
        (*(void (**)(void *, uint64_t))(v147 + 8))(__src, v95);
        size_t v98 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140) - 8)
                        + 64);
        uint64_t v99 = __src;
        goto LABEL_45;
      }
      (*(void (**)(void *, char *, uint64_t))(v147 + 40))(__src, v94, v95);
    }
LABEL_48:
    uint64_t v100 = v28[21];
    uint64_t v101 = (void *)((char *)v26 + v100);
    uint64_t v102 = (void *)((char *)v27 + v100);
    uint64_t v104 = *v102;
    uint64_t v103 = v102[1];
    *uint64_t v101 = v104;
    v101[1] = v103;
    swift_bridgeObjectRelease();
    *((unsigned char *)v26 + v28[22]) = *((unsigned char *)v27 + v28[22]);
    *((unsigned char *)v26 + v28[23]) = *((unsigned char *)v27 + v28[23]);
    *((unsigned char *)v26 + v28[24]) = *((unsigned char *)v27 + v28[24]);
    *((unsigned char *)v26 + v28[25]) = *((unsigned char *)v27 + v28[25]);
    *((unsigned char *)v26 + v28[26]) = *((unsigned char *)v27 + v28[26]);
    *((unsigned char *)v26 + v28[27]) = *((unsigned char *)v27 + v28[27]);
    *((unsigned char *)v26 + v28[28]) = *((unsigned char *)v27 + v28[28]);
    *(void *)((char *)v26 + v28[29]) = *(void *)((char *)v27 + v28[29]);
    *(void *)((char *)v26 + v28[30]) = *(void *)((char *)v27 + v28[30]);
    *((unsigned char *)v26 + v28[31]) = *((unsigned char *)v27 + v28[31]);
    uint64_t v105 = v28[32];
    long long v106 = (void *)((char *)v26 + v105);
    uint64_t v107 = (void *)((char *)v27 + v105);
    uint64_t v109 = *v107;
    uint64_t v108 = v107[1];
    *long long v106 = v109;
    v106[1] = v108;
    swift_bridgeObjectRelease();
    *(void *)((char *)v26 + v28[33]) = *(void *)((char *)v27 + v28[33]);
    swift_bridgeObjectRelease();
    uint64_t v110 = v28[34];
    uint64_t v111 = (void *)((char *)v26 + v110);
    uint64_t v112 = (void *)((char *)v27 + v110);
    uint64_t v114 = *v112;
    uint64_t v113 = v112[1];
    *uint64_t v111 = v114;
    v111[1] = v113;
    swift_bridgeObjectRelease();
    uint64_t v115 = v28[35];
    uint64_t v116 = (void *)((char *)v26 + v115);
    uint64_t v117 = (void *)((char *)v27 + v115);
    uint64_t v119 = *v117;
    uint64_t v118 = v117[1];
    *uint64_t v116 = v119;
    v116[1] = v118;
    swift_bridgeObjectRelease();
    uint64_t v120 = v28[36];
    uint64_t v121 = (char *)v27 + v120;
    uint64_t v150 = (char *)v26 + v120;
    int v122 = v156();
    int v123 = ((uint64_t (*)(char *, uint64_t, uint64_t))v156)(v121, 1, v51);
    if (v122)
    {
      if (!v123)
      {
        (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v150, v121, v51);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v153 + 56))(v150, 0, 1, v51);
        goto LABEL_56;
      }
      size_t v124 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
      uint64_t v125 = v150;
    }
    else
    {
      if (!v123)
      {
        (*(void (**)(char *, char *, uint64_t))(v153 + 40))(v150, v121, v51);
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v153 + 8))(v150, v51);
      size_t v124 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
      uint64_t v125 = v150;
    }
    memcpy(v125, v121, v124);
LABEL_56:
    uint64_t v126 = v28[37];
    uint64_t v127 = (void *)((char *)v26 + v126);
    char v128 = (void *)((char *)v27 + v126);
    uint64_t v130 = *v128;
    uint64_t v129 = v128[1];
    void *v127 = v130;
    v127[1] = v129;
    swift_bridgeObjectRelease();
    uint64_t v131 = v28[38];
    int v132 = (void *)((char *)v26 + v131);
    size_t v133 = (void *)((char *)v27 + v131);
    uint64_t v135 = *v133;
    uint64_t v134 = v133[1];
    void *v132 = v135;
    v132[1] = v134;
    swift_bridgeObjectRelease();
    *((unsigned char *)v26 + v28[39]) = *((unsigned char *)v27 + v28[39]);
    *((unsigned char *)v26 + v28[40]) = *((unsigned char *)v27 + v28[40]);
    *((unsigned char *)v26 + v28[41]) = *((unsigned char *)v27 + v28[41]);
    *((unsigned char *)v26 + v28[42]) = *((unsigned char *)v27 + v28[42]);
    *((unsigned char *)v26 + v28[43]) = *((unsigned char *)v27 + v28[43]);
    *((unsigned char *)v26 + v28[44]) = *((unsigned char *)v27 + v28[44]);
    *((unsigned char *)v26 + v28[45]) = *((unsigned char *)v27 + v28[45]);
    uint64_t v136 = v28[46];
    uint64_t v137 = (void *)((char *)v26 + v136);
    uint64_t v138 = (void *)((char *)v27 + v136);
    uint64_t v140 = *v138;
    uint64_t v139 = v138[1];
    *uint64_t v137 = v140;
    v137[1] = v139;
    swift_bridgeObjectRelease();
LABEL_57:
    a3 = v157;
    goto LABEL_58;
  }
  if (!v32)
  {
    unint64_t v157 = a3;
    long long v33 = *((_OWORD *)v27 + 1);
    *(_OWORD *)long long v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v33;
    *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
    v26[6] = v27[6];
    *((unsigned char *)v26 + 56) = *((unsigned char *)v27 + 56);
    v26[8] = v27[8];
    *((unsigned char *)v26 + 72) = *((unsigned char *)v27 + 72);
    long long v34 = *((_OWORD *)v27 + 6);
    *((_OWORD *)v26 + 5) = *((_OWORD *)v27 + 5);
    *((_OWORD *)v26 + 6) = v34;
    *((_OWORD *)v26 + 7) = *((_OWORD *)v27 + 7);
    uint64_t v35 = v28[12];
    uint64_t v36 = (char *)v26 + v35;
    uint64_t v37 = (char *)v27 + v35;
    uint64_t v38 = sub_1ACE74F28();
    uint64_t v39 = *(void *)(v38 - 8);
    uint64_t v155 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    if (v155(v37, 1, v38))
    {
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    *(_OWORD *)((char *)v26 + v28[13]) = *(_OWORD *)((char *)v27 + v28[13]);
    *(void *)((char *)v26 + v28[14]) = *(void *)((char *)v27 + v28[14]);
    uint64_t v56 = v28[15];
    uint64_t v57 = (char *)v26 + v56;
    int v58 = (char *)v27 + v56;
    v57[8] = v58[8];
    *(void *)uint64_t v57 = *(void *)v58;
    uint64_t v59 = v28[16];
    uint64_t v60 = (char *)v26 + v59;
    uint64_t v61 = (char *)v27 + v59;
    uint64_t v152 = v39;
    uint64_t v154 = v29;
    if (v155((char *)v27 + v59, 1, v38))
    {
      uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v60, v61, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v60, 0, 1, v38);
    }
    *(_OWORD *)((char *)v26 + v28[17]) = *(_OWORD *)((char *)v27 + v28[17]);
    *(void *)((char *)v26 + v28[18]) = *(void *)((char *)v27 + v28[18]);
    *((unsigned char *)v26 + v28[19]) = *((unsigned char *)v27 + v28[19]);
    uint64_t v63 = v28[20];
    uint64_t v64 = (char *)v26 + v63;
    uint64_t v65 = (char *)v27 + v63;
    uint64_t v66 = sub_1ACE750A8();
    uint64_t v67 = *(void *)(v66 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
    {
      uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v64, v65, v66);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
    }
    *(_OWORD *)((char *)v26 + v28[21]) = *(_OWORD *)((char *)v27 + v28[21]);
    *((unsigned char *)v26 + v28[22]) = *((unsigned char *)v27 + v28[22]);
    *((unsigned char *)v26 + v28[23]) = *((unsigned char *)v27 + v28[23]);
    *((unsigned char *)v26 + v28[24]) = *((unsigned char *)v27 + v28[24]);
    *((unsigned char *)v26 + v28[25]) = *((unsigned char *)v27 + v28[25]);
    *((unsigned char *)v26 + v28[26]) = *((unsigned char *)v27 + v28[26]);
    *((unsigned char *)v26 + v28[27]) = *((unsigned char *)v27 + v28[27]);
    *((unsigned char *)v26 + v28[28]) = *((unsigned char *)v27 + v28[28]);
    *(void *)((char *)v26 + v28[29]) = *(void *)((char *)v27 + v28[29]);
    *(void *)((char *)v26 + v28[30]) = *(void *)((char *)v27 + v28[30]);
    *((unsigned char *)v26 + v28[31]) = *((unsigned char *)v27 + v28[31]);
    *(_OWORD *)((char *)v26 + v28[32]) = *(_OWORD *)((char *)v27 + v28[32]);
    *(void *)((char *)v26 + v28[33]) = *(void *)((char *)v27 + v28[33]);
    *(_OWORD *)((char *)v26 + v28[34]) = *(_OWORD *)((char *)v27 + v28[34]);
    *(_OWORD *)((char *)v26 + v28[35]) = *(_OWORD *)((char *)v27 + v28[35]);
    uint64_t v69 = v28[36];
    uint64_t v70 = (char *)v26 + v69;
    uint64_t v71 = (char *)v27 + v69;
    if (v155((char *)v27 + v69, 1, v38))
    {
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v70, v71, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v152 + 56))(v70, 0, 1, v38);
    }
    *(_OWORD *)((char *)v26 + v28[37]) = *(_OWORD *)((char *)v27 + v28[37]);
    *(_OWORD *)((char *)v26 + v28[38]) = *(_OWORD *)((char *)v27 + v28[38]);
    *((unsigned char *)v26 + v28[39]) = *((unsigned char *)v27 + v28[39]);
    *((unsigned char *)v26 + v28[40]) = *((unsigned char *)v27 + v28[40]);
    *((unsigned char *)v26 + v28[41]) = *((unsigned char *)v27 + v28[41]);
    *((unsigned char *)v26 + v28[42]) = *((unsigned char *)v27 + v28[42]);
    *((unsigned char *)v26 + v28[43]) = *((unsigned char *)v27 + v28[43]);
    *((unsigned char *)v26 + v28[44]) = *((unsigned char *)v27 + v28[44]);
    *((unsigned char *)v26 + v28[45]) = *((unsigned char *)v27 + v28[45]);
    *(_OWORD *)((char *)v26 + v28[46]) = *(_OWORD *)((char *)v27 + v28[46]);
    (*(void (**)(void *, void, uint64_t, int *))(v154 + 56))(v26, 0, 1, v28);
    goto LABEL_57;
  }
LABEL_12:
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  memcpy(v26, v27, *(void *)(*(void *)(v41 - 8) + 64));
LABEL_58:
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v141 = a3[8];
  uint64_t v142 = (void *)(a1 + v141);
  uint64_t v143 = (uint64_t *)(a2 + v141);
  uint64_t v145 = *v143;
  uint64_t v144 = v143[1];
  *uint64_t v142 = v145;
  v142[1] = v144;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACB8F1E8);
}

uint64_t sub_1ACB8F1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PlaybackIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACB8F2C4);
}

uint64_t sub_1ACB8F2C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

void sub_1ACB8F388()
{
  sub_1ACB8F440();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1ACB8F440()
{
  if (!qword_1EB773348[0])
  {
    type metadata accessor for PodcastsMediaLibrary.MediaItem(255);
    unint64_t v0 = sub_1ACE76FD8();
    if (!v1) {
      atomic_store(v0, qword_1EB773348);
    }
  }
}

char *initializeBufferWithCopyOfBuffer for PlaybackIntent.ValidationError(char *a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = *(void *)a2;
      uint64_t v11 = *(void *)(a2 + 8);
      uint64_t v12 = *(void *)(a2 + 16);
      uint64_t v13 = *(void *)(a2 + 24);
      unsigned __int8 v14 = *(unsigned char *)(a2 + 32);
      sub_1ACA639E4(*(void *)a2, v11, v12, v13, v14);
      *(void *)a1 = v10;
      *((void *)a1 + 1) = v11;
      *((void *)a1 + 2) = v12;
      *((void *)a1 + 3) = v13;
      a1[32] = v14;
      if (*(unsigned char *)(a2 + 120) == 2)
      {
        long long v15 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v15;
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_DWORD *)(a1 + 119) = *(_DWORD *)(a2 + 119);
        long long v16 = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *(_OWORD *)(a1 + 56) = v16;
      }
      else
      {
        uint64_t v17 = *(void *)(a2 + 40);
        uint64_t v18 = *(void *)(a2 + 48);
        uint64_t v19 = *(void *)(a2 + 56);
        uint64_t v20 = *(void *)(a2 + 64);
        uint64_t v21 = *(void *)(a2 + 72);
        uint64_t v22 = *(void *)(a2 + 80);
        uint64_t v24 = *(void *)(a2 + 88);
        uint64_t v23 = *(void *)(a2 + 96);
        char v191 = *(unsigned char *)(a2 + 104);
        sub_1ACA63A78(v17, v18, v19, v20, v21, v22, v24, v23, v191);
        *((void *)a1 + 5) = v17;
        *((void *)a1 + 6) = v18;
        *((void *)a1 + 7) = v19;
        *((void *)a1 + 8) = v20;
        *((void *)a1 + 9) = v21;
        *((void *)a1 + 10) = v22;
        *((void *)a1 + 11) = v24;
        *((void *)a1 + 12) = v23;
        a1[104] = v191;
        a1[105] = *(unsigned char *)(a2 + 105);
        *((void *)a1 + 14) = *(void *)(a2 + 112);
        a1[120] = *(unsigned char *)(a2 + 120);
        *(_WORD *)(a1 + 121) = *(_WORD *)(a2 + 121);
      }
      uint64_t v25 = (int *)type metadata accessor for PlaybackIntent(0);
      uint64_t v26 = v25[6];
      uint64_t v27 = &a1[v26];
      uint64_t v28 = (void *)(a2 + v26);
      uint64_t v29 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
      uint64_t v30 = *((void *)v29 - 1);
      int v31 = *(unsigned int (**)(void, void, void))(v30 + 48);
      if (v31(v28, 1, v29))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
        memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        uint64_t v178 = v25;
        unint64_t v180 = v31;
        uint64_t v187 = v30;
        uint64_t v192 = v28[1];
        *(void *)uint64_t v27 = *v28;
        *((void *)v27 + 1) = v192;
        uint64_t v33 = v28[3];
        *((void *)v27 + 2) = v28[2];
        *((void *)v27 + 3) = v33;
        uint64_t v34 = v28[5];
        *((void *)v27 + 4) = v28[4];
        *((void *)v27 + 5) = v34;
        *((void *)v27 + 6) = v28[6];
        v27[56] = *((unsigned char *)v28 + 56);
        uint64_t v35 = v28[8];
        v27[72] = *((unsigned char *)v28 + 72);
        *((void *)v27 + 8) = v35;
        uint64_t v36 = v28[11];
        *((void *)v27 + 10) = v28[10];
        *((void *)v27 + 11) = v36;
        uint64_t v37 = v28[13];
        *((void *)v27 + 12) = v28[12];
        *((void *)v27 + 13) = v37;
        uint64_t v38 = v28[15];
        *((void *)v27 + 14) = v28[14];
        *((void *)v27 + 15) = v38;
        uint64_t v39 = v29[12];
        __dst = &v27[v39];
        uint64_t v169 = (char *)v28 + v39;
        uint64_t v40 = sub_1ACE74F28();
        uint64_t v185 = *(void *)(v40 - 8);
        uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v185 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v41(v169, 1, v40))
        {
          uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(__dst, v169, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v185 + 16))(__dst, v169, v40);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v185 + 56))(__dst, 0, 1, v40);
        }
        uint64_t v43 = v29[13];
        uint64_t v44 = &v27[v43];
        uint64_t v45 = (void *)((char *)v28 + v43);
        uint64_t v46 = v45[1];
        *(void *)uint64_t v44 = *v45;
        *((void *)v44 + 1) = v46;
        *(void *)&v27[v29[14]] = *(void *)((char *)v28 + v29[14]);
        uint64_t v47 = v29[15];
        uint64_t v48 = &v27[v47];
        uint64_t v49 = (char *)v28 + v47;
        *(void *)uint64_t v48 = *(void *)v49;
        v48[8] = v49[8];
        uint64_t v50 = v29[16];
        uint64_t v51 = &v27[v50];
        uint64_t v52 = (char *)v28 + v50;
        swift_bridgeObjectRetain();
        uint64_t v176 = v40;
        if (v41(v52, 1, v40))
        {
          uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v51, v52, v40);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v185 + 56))(v51, 0, 1, v40);
        }
        uint64_t v54 = v29[17];
        uint64_t v55 = &v27[v54];
        uint64_t v56 = (void *)((char *)v28 + v54);
        uint64_t v57 = v56[1];
        *(void *)uint64_t v55 = *v56;
        *((void *)v55 + 1) = v57;
        *(void *)&v27[v29[18]] = *(void *)((char *)v28 + v29[18]);
        v27[v29[19]] = *((unsigned char *)v28 + v29[19]);
        uint64_t v58 = v29[20];
        unint64_t v170 = (char *)v28 + v58;
        __dsta = &v27[v58];
        uint64_t v59 = sub_1ACE750A8();
        uint64_t v60 = *(void *)(v59 - 8);
        uint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v61(v170, 1, v59))
        {
          uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
          memcpy(__dsta, v170, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v60 + 16))(__dsta, v170, v59);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(__dsta, 0, 1, v59);
        }
        uint64_t v63 = v29[21];
        uint64_t v64 = &v27[v63];
        uint64_t v65 = (void *)((char *)v28 + v63);
        uint64_t v66 = v65[1];
        *(void *)uint64_t v64 = *v65;
        *((void *)v64 + 1) = v66;
        v27[v29[22]] = *((unsigned char *)v28 + v29[22]);
        v27[v29[23]] = *((unsigned char *)v28 + v29[23]);
        v27[v29[24]] = *((unsigned char *)v28 + v29[24]);
        v27[v29[25]] = *((unsigned char *)v28 + v29[25]);
        v27[v29[26]] = *((unsigned char *)v28 + v29[26]);
        v27[v29[27]] = *((unsigned char *)v28 + v29[27]);
        v27[v29[28]] = *((unsigned char *)v28 + v29[28]);
        *(void *)&v27[v29[29]] = *(void *)((char *)v28 + v29[29]);
        *(void *)&v27[v29[30]] = *(void *)((char *)v28 + v29[30]);
        v27[v29[31]] = *((unsigned char *)v28 + v29[31]);
        uint64_t v67 = v29[32];
        uint64_t v68 = &v27[v67];
        uint64_t v69 = (void *)((char *)v28 + v67);
        uint64_t v70 = v69[1];
        *(void *)uint64_t v68 = *v69;
        *((void *)v68 + 1) = v70;
        *(void *)&v27[v29[33]] = *(void *)((char *)v28 + v29[33]);
        uint64_t v71 = v29[34];
        uint64_t v72 = &v27[v71];
        uint64_t v73 = (void *)((char *)v28 + v71);
        uint64_t v74 = v73[1];
        *(void *)uint64_t v72 = *v73;
        *((void *)v72 + 1) = v74;
        uint64_t v75 = v29[35];
        uint64_t v76 = &v27[v75];
        uint64_t v77 = (void *)((char *)v28 + v75);
        uint64_t v78 = v77[1];
        *(void *)uint64_t v76 = *v77;
        *((void *)v76 + 1) = v78;
        uint64_t v79 = v29[36];
        __dstb = &v27[v79];
        uint64_t v80 = (char *)v28 + v79;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v41(v80, 1, v176))
        {
          uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(__dstb, v80, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v185 + 16))(__dstb, v80, v176);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v185 + 56))(__dstb, 0, 1, v176);
        }
        uint64_t v30 = v187;
        uint64_t v82 = v29[37];
        int v83 = &v27[v82];
        int v84 = (void *)((char *)v28 + v82);
        uint64_t v85 = v84[1];
        *(void *)int v83 = *v84;
        *((void *)v83 + 1) = v85;
        uint64_t v86 = v29[38];
        uint64_t v87 = &v27[v86];
        uint64_t v88 = (void *)((char *)v28 + v86);
        uint64_t v89 = v88[1];
        *(void *)uint64_t v87 = *v88;
        *((void *)v87 + 1) = v89;
        v27[v29[39]] = *((unsigned char *)v28 + v29[39]);
        v27[v29[40]] = *((unsigned char *)v28 + v29[40]);
        v27[v29[41]] = *((unsigned char *)v28 + v29[41]);
        v27[v29[42]] = *((unsigned char *)v28 + v29[42]);
        v27[v29[43]] = *((unsigned char *)v28 + v29[43]);
        v27[v29[44]] = *((unsigned char *)v28 + v29[44]);
        v27[v29[45]] = *((unsigned char *)v28 + v29[45]);
        uint64_t v90 = v29[46];
        uint64_t v91 = &v27[v90];
        uint64_t v92 = (void *)((char *)v28 + v90);
        uint64_t v93 = v92[1];
        *(void *)uint64_t v91 = *v92;
        *((void *)v91 + 1) = v93;
        uint64_t v94 = *(void (**)(char *, void, uint64_t, int *))(v187 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v94(v27, 0, 1, v29);
        uint64_t v25 = v178;
        int v31 = v180;
      }
      *(void *)&a1[v25[7]] = *(void *)(a2 + v25[7]);
      uint64_t v95 = v25[8];
      uint64_t v96 = &a1[v95];
      int v97 = (void *)(a2 + v95);
      uint64_t v98 = v97[1];
      *(void *)uint64_t v96 = *v97;
      *((void *)v96 + 1) = v98;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v99 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2A28) + 48);
      uint64_t v100 = &a1[v99];
      uint64_t v101 = (void *)(a2 + v99);
      uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
      uint64_t v103 = *(void *)(v102 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v103 + 48))(v101, 3, v102))
      {
        uint64_t v104 = type metadata accessor for PlaybackIntent.PlayerConstraint(0);
        memcpy(v100, v101, *(void *)(*(void *)(v104 - 8) + 64));
      }
      else
      {
        if (v31(v101, 1, v29))
        {
          memcpy(v100, v101, *(void *)(v103 + 64));
        }
        else
        {
          uint64_t v177 = v102;
          uint64_t v181 = v103;
          uint64_t v188 = v30;
          uint64_t v193 = v101[1];
          *(void *)uint64_t v100 = *v101;
          *((void *)v100 + 1) = v193;
          uint64_t v105 = v101[3];
          *((void *)v100 + 2) = v101[2];
          *((void *)v100 + 3) = v105;
          uint64_t v106 = v101[5];
          *((void *)v100 + 4) = v101[4];
          *((void *)v100 + 5) = v106;
          *((void *)v100 + 6) = v101[6];
          v100[56] = *((unsigned char *)v101 + 56);
          uint64_t v107 = v101[8];
          v100[72] = *((unsigned char *)v101 + 72);
          *((void *)v100 + 8) = v107;
          uint64_t v108 = v101[11];
          *((void *)v100 + 10) = v101[10];
          *((void *)v100 + 11) = v108;
          uint64_t v109 = v101[13];
          *((void *)v100 + 12) = v101[12];
          *((void *)v100 + 13) = v109;
          uint64_t v110 = v101[15];
          *((void *)v100 + 14) = v101[14];
          *((void *)v100 + 15) = v110;
          uint64_t v111 = v29[12];
          uint64_t v182 = &v100[v111];
          uint64_t v171 = (char *)v101 + v111;
          uint64_t v112 = sub_1ACE74F28();
          uint64_t v186 = *(void *)(v112 - 8);
          uint64_t v113 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v186 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v190 = v113;
          if (v113(v171, 1, v112))
          {
            uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
            memcpy(v182, v171, *(void *)(*(void *)(v114 - 8) + 64));
            uint64_t v115 = v186;
          }
          else
          {
            uint64_t v115 = v186;
            (*(void (**)(char *, char *, uint64_t))(v186 + 16))(v182, v171, v112);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v186 + 56))(v182, 0, 1, v112);
          }
          uint64_t v116 = v29[13];
          uint64_t v117 = &v100[v116];
          uint64_t v118 = (void *)((char *)v101 + v116);
          uint64_t v119 = v118[1];
          *(void *)uint64_t v117 = *v118;
          *((void *)v117 + 1) = v119;
          *(void *)&v100[v29[14]] = *(void *)((char *)v101 + v29[14]);
          uint64_t v120 = v29[15];
          uint64_t v121 = &v100[v120];
          int v122 = (char *)v101 + v120;
          *(void *)uint64_t v121 = *(void *)v122;
          v121[8] = v122[8];
          uint64_t v123 = v29[16];
          size_t v124 = &v100[v123];
          uint64_t v125 = (char *)v101 + v123;
          swift_bridgeObjectRetain();
          uint64_t v102 = v177;
          uint64_t v189 = a1;
          uint64_t v179 = v112;
          if (v190(v125, 1, v112))
          {
            uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
            memcpy(v124, v125, *(void *)(*(void *)(v126 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v124, v125, v112);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v124, 0, 1, v112);
          }
          uint64_t v127 = v29[17];
          char v128 = &v100[v127];
          uint64_t v129 = (void *)((char *)v101 + v127);
          uint64_t v130 = v129[1];
          *(void *)char v128 = *v129;
          *((void *)v128 + 1) = v130;
          *(void *)&v100[v29[18]] = *(void *)((char *)v101 + v29[18]);
          v100[v29[19]] = *((unsigned char *)v101 + v29[19]);
          uint64_t v131 = v29[20];
          uint64_t v183 = &v100[v131];
          __dstc = (char *)v101 + v131;
          uint64_t v132 = sub_1ACE750A8();
          uint64_t v133 = *(void *)(v132 - 8);
          uint64_t v134 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48);
          swift_bridgeObjectRetain();
          swift_retain();
          if (v134(__dstc, 1, v132))
          {
            uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
            memcpy(v183, __dstc, *(void *)(*(void *)(v135 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v183, __dstc, v132);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v183, 0, 1, v132);
          }
          uint64_t v136 = v29[21];
          uint64_t v137 = &v100[v136];
          uint64_t v138 = (void *)((char *)v101 + v136);
          uint64_t v139 = v138[1];
          *(void *)uint64_t v137 = *v138;
          *((void *)v137 + 1) = v139;
          v100[v29[22]] = *((unsigned char *)v101 + v29[22]);
          v100[v29[23]] = *((unsigned char *)v101 + v29[23]);
          v100[v29[24]] = *((unsigned char *)v101 + v29[24]);
          v100[v29[25]] = *((unsigned char *)v101 + v29[25]);
          v100[v29[26]] = *((unsigned char *)v101 + v29[26]);
          v100[v29[27]] = *((unsigned char *)v101 + v29[27]);
          v100[v29[28]] = *((unsigned char *)v101 + v29[28]);
          *(void *)&v100[v29[29]] = *(void *)((char *)v101 + v29[29]);
          *(void *)&v100[v29[30]] = *(void *)((char *)v101 + v29[30]);
          v100[v29[31]] = *((unsigned char *)v101 + v29[31]);
          uint64_t v140 = v29[32];
          uint64_t v141 = &v100[v140];
          uint64_t v142 = (void *)((char *)v101 + v140);
          uint64_t v143 = v142[1];
          *(void *)uint64_t v141 = *v142;
          *((void *)v141 + 1) = v143;
          *(void *)&v100[v29[33]] = *(void *)((char *)v101 + v29[33]);
          uint64_t v144 = v29[34];
          uint64_t v145 = &v100[v144];
          uint64_t v146 = (void *)((char *)v101 + v144);
          uint64_t v147 = v146[1];
          *(void *)uint64_t v145 = *v146;
          *((void *)v145 + 1) = v147;
          uint64_t v148 = v29[35];
          v149 = &v100[v148];
          uint64_t v150 = (void *)((char *)v101 + v148);
          uint64_t v151 = v150[1];
          *(void *)v149 = *v150;
          *((void *)v149 + 1) = v151;
          uint64_t v152 = v29[36];
          unint64_t v184 = &v100[v152];
          uint64_t v153 = (char *)v101 + v152;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v190(v153, 1, v179))
          {
            uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
            memcpy(v184, v153, *(void *)(*(void *)(v154 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v186 + 16))(v184, v153, v179);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v186 + 56))(v184, 0, 1, v179);
          }
          uint64_t v155 = v29[37];
          uint64_t v156 = &v100[v155];
          unint64_t v157 = (void *)((char *)v101 + v155);
          uint64_t v158 = v157[1];
          *(void *)uint64_t v156 = *v157;
          *((void *)v156 + 1) = v158;
          uint64_t v159 = v29[38];
          uint64_t v160 = &v100[v159];
          v161 = (void *)((char *)v101 + v159);
          uint64_t v162 = v161[1];
          *(void *)uint64_t v160 = *v161;
          *((void *)v160 + 1) = v162;
          v100[v29[39]] = *((unsigned char *)v101 + v29[39]);
          v100[v29[40]] = *((unsigned char *)v101 + v29[40]);
          v100[v29[41]] = *((unsigned char *)v101 + v29[41]);
          v100[v29[42]] = *((unsigned char *)v101 + v29[42]);
          v100[v29[43]] = *((unsigned char *)v101 + v29[43]);
          v100[v29[44]] = *((unsigned char *)v101 + v29[44]);
          v100[v29[45]] = *((unsigned char *)v101 + v29[45]);
          uint64_t v163 = v29[46];
          uint64_t v164 = &v100[v163];
          uint64_t v165 = (void *)((char *)v101 + v163);
          uint64_t v166 = v165[1];
          *(void *)uint64_t v164 = *v165;
          *((void *)v164 + 1) = v166;
          v167 = *(void (**)(char *, void, uint64_t, int *))(v188 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v167(v100, 0, 1, v29);
          a1 = v189;
          uint64_t v103 = v181;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v100, 0, 3, v102);
      }
      goto LABEL_43;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = sub_1ACE74F28();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_43:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, (const void *)a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t type metadata accessor for PlaybackIntent.PlayerConstraint(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1E99F2A40);
}

uint64_t destroy for PlaybackIntent.ValidationError(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    sub_1ACA63688(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
    if (*(unsigned char *)(a1 + 120) != 2) {
      sub_1ACA63738(*(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104));
    }
    uint64_t v5 = a1 + *(int *)(type metadata accessor for PlaybackIntent(0) + 24);
    uint64_t v6 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    uint64_t v7 = *(unsigned int (**)(void, void, void))(*((void *)v6 - 1) + 48);
    if (!v7(v5, 1, v6))
    {
      uint64_t v29 = v7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v5 + v6[12];
      uint64_t v9 = sub_1ACE74F28();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      if (!v11(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
      swift_bridgeObjectRelease();
      uint64_t v12 = v5 + v6[16];
      if (!v11(v12, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
      }
      uint64_t v28 = v10;
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v13 = v5 + v6[20];
      uint64_t v14 = sub_1ACE750A8();
      uint64_t v15 = *(void *)(v14 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v5 + v6[36];
      if (!v11(v16, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v16, v9);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = v29;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2A28) + 48);
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 3, v18);
    if (!result)
    {
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, int *))v7)(v17, 1, v6);
      if (!result)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v19 = v17 + v6[12];
        uint64_t v20 = sub_1ACE74F28();
        uint64_t v21 = *(void *)(v20 - 8);
        uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
        if (!v22(v19, 1, v20)) {
          (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
        }
        swift_bridgeObjectRelease();
        uint64_t v23 = v17 + v6[16];
        if (!v22(v23, 1, v20)) {
          (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v20);
        }
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v24 = v17 + v6[20];
        uint64_t v25 = sub_1ACE750A8();
        uint64_t v26 = *(void *)(v25 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25)) {
          (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v27 = v17 + v6[36];
        if (!v22(v27, 1, v20)) {
          (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v27, v20);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  else if (!result)
  {
    uint64_t v3 = sub_1ACE74F28();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

char *initializeWithCopy for PlaybackIntent.ValidationError(char *a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = *(void *)a2;
    uint64_t v9 = *(void *)(a2 + 8);
    uint64_t v10 = *(void *)(a2 + 16);
    uint64_t v11 = *(void *)(a2 + 24);
    unsigned __int8 v12 = *(unsigned char *)(a2 + 32);
    sub_1ACA639E4(*(void *)a2, v9, v10, v11, v12);
    *(void *)a1 = v8;
    *((void *)a1 + 1) = v9;
    *((void *)a1 + 2) = v10;
    *((void *)a1 + 3) = v11;
    a1[32] = v12;
    if (*(unsigned char *)(a2 + 120) == 2)
    {
      long long v13 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v13;
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_DWORD *)(a1 + 119) = *(_DWORD *)(a2 + 119);
      long long v14 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v14;
    }
    else
    {
      uint64_t v15 = *(void *)(a2 + 40);
      uint64_t v16 = *(void *)(a2 + 48);
      uint64_t v17 = *(void *)(a2 + 56);
      uint64_t v18 = *(void *)(a2 + 64);
      uint64_t v19 = *(void *)(a2 + 72);
      uint64_t v20 = *(void *)(a2 + 80);
      uint64_t v22 = *(void *)(a2 + 88);
      uint64_t v21 = *(void *)(a2 + 96);
      char v189 = *(unsigned char *)(a2 + 104);
      sub_1ACA63A78(v15, v16, v17, v18, v19, v20, v22, v21, v189);
      *((void *)a1 + 5) = v15;
      *((void *)a1 + 6) = v16;
      *((void *)a1 + 7) = v17;
      *((void *)a1 + 8) = v18;
      *((void *)a1 + 9) = v19;
      *((void *)a1 + 10) = v20;
      *((void *)a1 + 11) = v22;
      *((void *)a1 + 12) = v21;
      a1[104] = v189;
      a1[105] = *(unsigned char *)(a2 + 105);
      *((void *)a1 + 14) = *(void *)(a2 + 112);
      a1[120] = *(unsigned char *)(a2 + 120);
      *(_WORD *)(a1 + 121) = *(_WORD *)(a2 + 121);
    }
    uint64_t v23 = (int *)type metadata accessor for PlaybackIntent(0);
    uint64_t v24 = v23[6];
    uint64_t v25 = &a1[v24];
    uint64_t v26 = (void *)(a2 + v24);
    uint64_t v27 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    uint64_t v28 = *((void *)v27 - 1);
    uint64_t v29 = *(unsigned int (**)(void, void, void))(v28 + 48);
    if (v29(v26, 1, v27))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
      memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v176 = v23;
      uint64_t v178 = v29;
      uint64_t v185 = v28;
      uint64_t v190 = v26[1];
      *(void *)uint64_t v25 = *v26;
      *((void *)v25 + 1) = v190;
      uint64_t v31 = v26[3];
      *((void *)v25 + 2) = v26[2];
      *((void *)v25 + 3) = v31;
      uint64_t v32 = v26[5];
      *((void *)v25 + 4) = v26[4];
      *((void *)v25 + 5) = v32;
      *((void *)v25 + 6) = v26[6];
      v25[56] = *((unsigned char *)v26 + 56);
      uint64_t v33 = v26[8];
      v25[72] = *((unsigned char *)v26 + 72);
      *((void *)v25 + 8) = v33;
      uint64_t v34 = v26[11];
      *((void *)v25 + 10) = v26[10];
      *((void *)v25 + 11) = v34;
      uint64_t v35 = v26[13];
      *((void *)v25 + 12) = v26[12];
      *((void *)v25 + 13) = v35;
      uint64_t v36 = v26[15];
      *((void *)v25 + 14) = v26[14];
      *((void *)v25 + 15) = v36;
      uint64_t v37 = v27[12];
      __dst = &v25[v37];
      v167 = (char *)v26 + v37;
      uint64_t v38 = sub_1ACE74F28();
      uint64_t v183 = *(void *)(v38 - 8);
      uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v183 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v39(v167, 1, v38))
      {
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(__dst, v167, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v183 + 16))(__dst, v167, v38);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v183 + 56))(__dst, 0, 1, v38);
      }
      uint64_t v41 = v27[13];
      uint64_t v42 = &v25[v41];
      uint64_t v43 = (void *)((char *)v26 + v41);
      uint64_t v44 = v43[1];
      *(void *)uint64_t v42 = *v43;
      *((void *)v42 + 1) = v44;
      *(void *)&v25[v27[14]] = *(void *)((char *)v26 + v27[14]);
      uint64_t v45 = v27[15];
      uint64_t v46 = &v25[v45];
      uint64_t v47 = (char *)v26 + v45;
      *(void *)uint64_t v46 = *(void *)v47;
      v46[8] = v47[8];
      uint64_t v48 = v27[16];
      uint64_t v49 = &v25[v48];
      uint64_t v50 = (char *)v26 + v48;
      swift_bridgeObjectRetain();
      uint64_t v174 = v38;
      if (v39(v50, 1, v38))
      {
        uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v183 + 16))(v49, v50, v38);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v183 + 56))(v49, 0, 1, v38);
      }
      uint64_t v52 = v27[17];
      uint64_t v53 = &v25[v52];
      uint64_t v54 = (void *)((char *)v26 + v52);
      uint64_t v55 = v54[1];
      *(void *)uint64_t v53 = *v54;
      *((void *)v53 + 1) = v55;
      *(void *)&v25[v27[18]] = *(void *)((char *)v26 + v27[18]);
      v25[v27[19]] = *((unsigned char *)v26 + v27[19]);
      uint64_t v56 = v27[20];
      uint64_t v168 = (char *)v26 + v56;
      __dsta = &v25[v56];
      uint64_t v57 = sub_1ACE750A8();
      uint64_t v58 = *(void *)(v57 - 8);
      uint64_t v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
      swift_bridgeObjectRetain();
      swift_retain();
      if (v59(v168, 1, v57))
      {
        uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
        memcpy(__dsta, v168, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(__dsta, v168, v57);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(__dsta, 0, 1, v57);
      }
      uint64_t v61 = v27[21];
      uint64_t v62 = &v25[v61];
      uint64_t v63 = (void *)((char *)v26 + v61);
      uint64_t v64 = v63[1];
      *(void *)uint64_t v62 = *v63;
      *((void *)v62 + 1) = v64;
      v25[v27[22]] = *((unsigned char *)v26 + v27[22]);
      v25[v27[23]] = *((unsigned char *)v26 + v27[23]);
      v25[v27[24]] = *((unsigned char *)v26 + v27[24]);
      v25[v27[25]] = *((unsigned char *)v26 + v27[25]);
      v25[v27[26]] = *((unsigned char *)v26 + v27[26]);
      v25[v27[27]] = *((unsigned char *)v26 + v27[27]);
      v25[v27[28]] = *((unsigned char *)v26 + v27[28]);
      *(void *)&v25[v27[29]] = *(void *)((char *)v26 + v27[29]);
      *(void *)&v25[v27[30]] = *(void *)((char *)v26 + v27[30]);
      v25[v27[31]] = *((unsigned char *)v26 + v27[31]);
      uint64_t v65 = v27[32];
      uint64_t v66 = &v25[v65];
      uint64_t v67 = (void *)((char *)v26 + v65);
      uint64_t v68 = v67[1];
      *(void *)uint64_t v66 = *v67;
      *((void *)v66 + 1) = v68;
      *(void *)&v25[v27[33]] = *(void *)((char *)v26 + v27[33]);
      uint64_t v69 = v27[34];
      uint64_t v70 = &v25[v69];
      uint64_t v71 = (void *)((char *)v26 + v69);
      uint64_t v72 = v71[1];
      *(void *)uint64_t v70 = *v71;
      *((void *)v70 + 1) = v72;
      uint64_t v73 = v27[35];
      uint64_t v74 = &v25[v73];
      uint64_t v75 = (void *)((char *)v26 + v73);
      uint64_t v76 = v75[1];
      *(void *)uint64_t v74 = *v75;
      *((void *)v74 + 1) = v76;
      uint64_t v77 = v27[36];
      __dstb = &v25[v77];
      uint64_t v78 = (char *)v26 + v77;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v39(v78, 1, v174))
      {
        uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(__dstb, v78, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v183 + 16))(__dstb, v78, v174);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v183 + 56))(__dstb, 0, 1, v174);
      }
      uint64_t v28 = v185;
      uint64_t v80 = v27[37];
      uint64_t v81 = &v25[v80];
      uint64_t v82 = (void *)((char *)v26 + v80);
      uint64_t v83 = v82[1];
      *(void *)uint64_t v81 = *v82;
      *((void *)v81 + 1) = v83;
      uint64_t v84 = v27[38];
      uint64_t v85 = &v25[v84];
      uint64_t v86 = (void *)((char *)v26 + v84);
      uint64_t v87 = v86[1];
      *(void *)uint64_t v85 = *v86;
      *((void *)v85 + 1) = v87;
      v25[v27[39]] = *((unsigned char *)v26 + v27[39]);
      v25[v27[40]] = *((unsigned char *)v26 + v27[40]);
      v25[v27[41]] = *((unsigned char *)v26 + v27[41]);
      v25[v27[42]] = *((unsigned char *)v26 + v27[42]);
      v25[v27[43]] = *((unsigned char *)v26 + v27[43]);
      v25[v27[44]] = *((unsigned char *)v26 + v27[44]);
      v25[v27[45]] = *((unsigned char *)v26 + v27[45]);
      uint64_t v88 = v27[46];
      uint64_t v89 = &v25[v88];
      uint64_t v90 = (void *)((char *)v26 + v88);
      uint64_t v91 = v90[1];
      *(void *)uint64_t v89 = *v90;
      *((void *)v89 + 1) = v91;
      uint64_t v92 = *(void (**)(char *, void, uint64_t, int *))(v185 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v92(v25, 0, 1, v27);
      uint64_t v23 = v176;
      uint64_t v29 = v178;
    }
    *(void *)&a1[v23[7]] = *(void *)(a2 + v23[7]);
    uint64_t v93 = v23[8];
    uint64_t v94 = &a1[v93];
    uint64_t v95 = (void *)(a2 + v93);
    uint64_t v96 = v95[1];
    *(void *)uint64_t v94 = *v95;
    *((void *)v94 + 1) = v96;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v97 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2A28) + 48);
    uint64_t v98 = &a1[v97];
    uint64_t v99 = (void *)(a2 + v97);
    uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
    uint64_t v101 = *(void *)(v100 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v101 + 48))(v99, 3, v100))
    {
      uint64_t v102 = type metadata accessor for PlaybackIntent.PlayerConstraint(0);
      memcpy(v98, v99, *(void *)(*(void *)(v102 - 8) + 64));
    }
    else
    {
      if (v29(v99, 1, v27))
      {
        memcpy(v98, v99, *(void *)(v101 + 64));
      }
      else
      {
        uint64_t v175 = v100;
        uint64_t v179 = v101;
        uint64_t v186 = v28;
        uint64_t v191 = v99[1];
        *(void *)uint64_t v98 = *v99;
        *((void *)v98 + 1) = v191;
        uint64_t v103 = v99[3];
        *((void *)v98 + 2) = v99[2];
        *((void *)v98 + 3) = v103;
        uint64_t v104 = v99[5];
        *((void *)v98 + 4) = v99[4];
        *((void *)v98 + 5) = v104;
        *((void *)v98 + 6) = v99[6];
        v98[56] = *((unsigned char *)v99 + 56);
        uint64_t v105 = v99[8];
        v98[72] = *((unsigned char *)v99 + 72);
        *((void *)v98 + 8) = v105;
        uint64_t v106 = v99[11];
        *((void *)v98 + 10) = v99[10];
        *((void *)v98 + 11) = v106;
        uint64_t v107 = v99[13];
        *((void *)v98 + 12) = v99[12];
        *((void *)v98 + 13) = v107;
        uint64_t v108 = v99[15];
        *((void *)v98 + 14) = v99[14];
        *((void *)v98 + 15) = v108;
        uint64_t v109 = v27[12];
        unint64_t v180 = &v98[v109];
        uint64_t v169 = (char *)v99 + v109;
        uint64_t v110 = sub_1ACE74F28();
        uint64_t v184 = *(void *)(v110 - 8);
        uint64_t v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v184 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v188 = v111;
        if (v111(v169, 1, v110))
        {
          uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v180, v169, *(void *)(*(void *)(v112 - 8) + 64));
          uint64_t v113 = v184;
        }
        else
        {
          uint64_t v113 = v184;
          (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v180, v169, v110);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v184 + 56))(v180, 0, 1, v110);
        }
        uint64_t v114 = v27[13];
        uint64_t v115 = &v98[v114];
        uint64_t v116 = (void *)((char *)v99 + v114);
        uint64_t v117 = v116[1];
        *(void *)uint64_t v115 = *v116;
        *((void *)v115 + 1) = v117;
        *(void *)&v98[v27[14]] = *(void *)((char *)v99 + v27[14]);
        uint64_t v118 = v27[15];
        uint64_t v119 = &v98[v118];
        uint64_t v120 = (char *)v99 + v118;
        *(void *)uint64_t v119 = *(void *)v120;
        v119[8] = v120[8];
        uint64_t v121 = v27[16];
        int v122 = &v98[v121];
        uint64_t v123 = (char *)v99 + v121;
        swift_bridgeObjectRetain();
        uint64_t v100 = v175;
        uint64_t v187 = a1;
        uint64_t v177 = v110;
        if (v188(v123, 1, v110))
        {
          uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v122, v123, *(void *)(*(void *)(v124 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v122, v123, v110);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v122, 0, 1, v110);
        }
        uint64_t v125 = v27[17];
        uint64_t v126 = &v98[v125];
        uint64_t v127 = (void *)((char *)v99 + v125);
        uint64_t v128 = v127[1];
        *(void *)uint64_t v126 = *v127;
        *((void *)v126 + 1) = v128;
        *(void *)&v98[v27[18]] = *(void *)((char *)v99 + v27[18]);
        v98[v27[19]] = *((unsigned char *)v99 + v27[19]);
        uint64_t v129 = v27[20];
        uint64_t v181 = &v98[v129];
        __dstc = (char *)v99 + v129;
        uint64_t v130 = sub_1ACE750A8();
        uint64_t v131 = *(void *)(v130 - 8);
        uint64_t v132 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v132(__dstc, 1, v130))
        {
          uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
          memcpy(v181, __dstc, *(void *)(*(void *)(v133 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v181, __dstc, v130);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v181, 0, 1, v130);
        }
        uint64_t v134 = v27[21];
        uint64_t v135 = &v98[v134];
        uint64_t v136 = (void *)((char *)v99 + v134);
        uint64_t v137 = v136[1];
        *(void *)uint64_t v135 = *v136;
        *((void *)v135 + 1) = v137;
        v98[v27[22]] = *((unsigned char *)v99 + v27[22]);
        v98[v27[23]] = *((unsigned char *)v99 + v27[23]);
        v98[v27[24]] = *((unsigned char *)v99 + v27[24]);
        v98[v27[25]] = *((unsigned char *)v99 + v27[25]);
        v98[v27[26]] = *((unsigned char *)v99 + v27[26]);
        v98[v27[27]] = *((unsigned char *)v99 + v27[27]);
        v98[v27[28]] = *((unsigned char *)v99 + v27[28]);
        *(void *)&v98[v27[29]] = *(void *)((char *)v99 + v27[29]);
        *(void *)&v98[v27[30]] = *(void *)((char *)v99 + v27[30]);
        v98[v27[31]] = *((unsigned char *)v99 + v27[31]);
        uint64_t v138 = v27[32];
        uint64_t v139 = &v98[v138];
        uint64_t v140 = (void *)((char *)v99 + v138);
        uint64_t v141 = v140[1];
        *(void *)uint64_t v139 = *v140;
        *((void *)v139 + 1) = v141;
        *(void *)&v98[v27[33]] = *(void *)((char *)v99 + v27[33]);
        uint64_t v142 = v27[34];
        uint64_t v143 = &v98[v142];
        uint64_t v144 = (void *)((char *)v99 + v142);
        uint64_t v145 = v144[1];
        *(void *)uint64_t v143 = *v144;
        *((void *)v143 + 1) = v145;
        uint64_t v146 = v27[35];
        uint64_t v147 = &v98[v146];
        uint64_t v148 = (void *)((char *)v99 + v146);
        uint64_t v149 = v148[1];
        *(void *)uint64_t v147 = *v148;
        *((void *)v147 + 1) = v149;
        uint64_t v150 = v27[36];
        uint64_t v182 = &v98[v150];
        uint64_t v151 = (char *)v99 + v150;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v188(v151, 1, v177))
        {
          uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v182, v151, *(void *)(*(void *)(v152 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v182, v151, v177);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v184 + 56))(v182, 0, 1, v177);
        }
        uint64_t v153 = v27[37];
        uint64_t v154 = &v98[v153];
        uint64_t v155 = (void *)((char *)v99 + v153);
        uint64_t v156 = v155[1];
        *(void *)uint64_t v154 = *v155;
        *((void *)v154 + 1) = v156;
        uint64_t v157 = v27[38];
        uint64_t v158 = &v98[v157];
        uint64_t v159 = (void *)((char *)v99 + v157);
        uint64_t v160 = v159[1];
        *(void *)uint64_t v158 = *v159;
        *((void *)v158 + 1) = v160;
        v98[v27[39]] = *((unsigned char *)v99 + v27[39]);
        v98[v27[40]] = *((unsigned char *)v99 + v27[40]);
        v98[v27[41]] = *((unsigned char *)v99 + v27[41]);
        v98[v27[42]] = *((unsigned char *)v99 + v27[42]);
        v98[v27[43]] = *((unsigned char *)v99 + v27[43]);
        v98[v27[44]] = *((unsigned char *)v99 + v27[44]);
        v98[v27[45]] = *((unsigned char *)v99 + v27[45]);
        uint64_t v161 = v27[46];
        uint64_t v162 = &v98[v161];
        uint64_t v163 = (void *)((char *)v99 + v161);
        uint64_t v164 = v163[1];
        *(void *)uint64_t v162 = *v163;
        *((void *)v162 + 1) = v164;
        uint64_t v165 = *(void (**)(char *, void, uint64_t, int *))(v186 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v165(v98, 0, 1, v27);
        a1 = v187;
        uint64_t v101 = v179;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v98, 0, 3, v100);
    }
    goto LABEL_41;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = sub_1ACE74F28();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_41:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithCopy for PlaybackIntent.ValidationError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (char *)a1;
  if (a1 != a2)
  {
    sub_1ACB85C50(a1, type metadata accessor for PlaybackIntent.ValidationError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = *(void *)a2;
      uint64_t v9 = *(void *)(a2 + 8);
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v11 = *(void *)(a2 + 24);
      unsigned __int8 v12 = *(unsigned char *)(a2 + 32);
      sub_1ACA639E4(*(void *)a2, v9, v10, v11, v12);
      *(void *)uint64_t v3 = v8;
      *((void *)v3 + 1) = v9;
      *((void *)v3 + 2) = v10;
      *((void *)v3 + 3) = v11;
      v3[32] = v12;
      if (*(unsigned char *)(a2 + 120) == 2)
      {
        long long v13 = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(v3 + 40) = *(_OWORD *)(a2 + 40);
        *(_OWORD *)(v3 + 56) = v13;
        long long v14 = *(_OWORD *)(a2 + 72);
        long long v15 = *(_OWORD *)(a2 + 88);
        long long v16 = *(_OWORD *)(a2 + 104);
        *(_DWORD *)(v3 + 119) = *(_DWORD *)(a2 + 119);
        *(_OWORD *)(v3 + 88) = v15;
        *(_OWORD *)(v3 + 104) = v16;
        *(_OWORD *)(v3 + 72) = v14;
      }
      else
      {
        uint64_t v17 = *(void *)(a2 + 40);
        uint64_t v18 = *(void *)(a2 + 48);
        uint64_t v19 = *(void *)(a2 + 56);
        uint64_t v20 = *(void *)(a2 + 64);
        uint64_t v21 = *(void *)(a2 + 72);
        uint64_t v22 = *(void *)(a2 + 80);
        uint64_t v24 = *(void *)(a2 + 88);
        uint64_t v23 = *(void *)(a2 + 96);
        char v163 = *(unsigned char *)(a2 + 104);
        sub_1ACA63A78(v17, v18, v19, v20, v21, v22, v24, v23, v163);
        *((void *)v3 + 5) = v17;
        *((void *)v3 + 6) = v18;
        *((void *)v3 + 7) = v19;
        *((void *)v3 + 8) = v20;
        *((void *)v3 + 9) = v21;
        *((void *)v3 + 10) = v22;
        *((void *)v3 + 11) = v24;
        *((void *)v3 + 12) = v23;
        v3[104] = v163;
        v3[105] = *(unsigned char *)(a2 + 105);
        *((void *)v3 + 14) = *(void *)(a2 + 112);
        v3[120] = *(unsigned char *)(a2 + 120);
        v3[121] = *(unsigned char *)(a2 + 121);
        v3[122] = *(unsigned char *)(a2 + 122);
      }
      uint64_t v25 = (int *)type metadata accessor for PlaybackIntent(0);
      uint64_t v26 = v25[6];
      uint64_t v27 = &v3[v26];
      uint64_t v28 = (void *)(a2 + v26);
      uint64_t v29 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
      uint64_t v30 = *((void *)v29 - 1);
      uint64_t v31 = *(unsigned int (**)(void, void, void))(v30 + 48);
      if (v31(v28, 1, v29))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
        memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        uint64_t v153 = v25;
        uint64_t v156 = v31;
        uint64_t v159 = v30;
        *(void *)uint64_t v27 = *v28;
        *((void *)v27 + 1) = v28[1];
        *((void *)v27 + 2) = v28[2];
        *((void *)v27 + 3) = v28[3];
        *((void *)v27 + 4) = v28[4];
        *((void *)v27 + 5) = v28[5];
        uint64_t v33 = v28[6];
        v27[56] = *((unsigned char *)v28 + 56);
        *((void *)v27 + 6) = v33;
        uint64_t v34 = v28[8];
        v27[72] = *((unsigned char *)v28 + 72);
        *((void *)v27 + 8) = v34;
        *((void *)v27 + 10) = v28[10];
        *((void *)v27 + 11) = v28[11];
        *((void *)v27 + 12) = v28[12];
        *((void *)v27 + 13) = v28[13];
        *((void *)v27 + 14) = v28[14];
        *((void *)v27 + 15) = v28[15];
        uint64_t v35 = v29[12];
        __dst = &v27[v35];
        uint64_t v144 = (char *)v28 + v35;
        uint64_t v36 = sub_1ACE74F28();
        uint64_t v157 = *(void *)(v36 - 8);
        uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v37(v144, 1, v36))
        {
          uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(__dst, v144, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v157 + 16))(__dst, v144, v36);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(__dst, 0, 1, v36);
        }
        uint64_t v39 = v29[13];
        uint64_t v40 = &v27[v39];
        uint64_t v41 = (void *)((char *)v28 + v39);
        *(void *)uint64_t v40 = *v41;
        *((void *)v40 + 1) = v41[1];
        *(void *)&v27[v29[14]] = *(void *)((char *)v28 + v29[14]);
        uint64_t v42 = v29[15];
        uint64_t v43 = &v27[v42];
        uint64_t v44 = (char *)v28 + v42;
        uint64_t v45 = *(void *)v44;
        v43[8] = v44[8];
        *(void *)uint64_t v43 = v45;
        uint64_t v46 = v29[16];
        uint64_t v47 = &v27[v46];
        uint64_t v48 = (char *)v28 + v46;
        swift_bridgeObjectRetain();
        if (v37(v48, 1, v36))
        {
          uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v47, v48, v36);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v47, 0, 1, v36);
        }
        uint64_t v50 = v29[17];
        uint64_t v51 = &v27[v50];
        uint64_t v52 = (void *)((char *)v28 + v50);
        *(void *)uint64_t v51 = *v52;
        *((void *)v51 + 1) = v52[1];
        *(void *)&v27[v29[18]] = *(void *)((char *)v28 + v29[18]);
        v27[v29[19]] = *((unsigned char *)v28 + v29[19]);
        uint64_t v53 = v29[20];
        uint64_t v146 = (char *)v28 + v53;
        __dsta = &v27[v53];
        uint64_t v54 = sub_1ACE750A8();
        uint64_t v55 = *(void *)(v54 - 8);
        uint64_t v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v56(v146, 1, v54))
        {
          uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
          memcpy(__dsta, v146, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v55 + 16))(__dsta, v146, v54);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(__dsta, 0, 1, v54);
        }
        uint64_t v58 = v29[21];
        uint64_t v59 = &v27[v58];
        uint64_t v60 = (void *)((char *)v28 + v58);
        *(void *)uint64_t v59 = *v60;
        *((void *)v59 + 1) = v60[1];
        v27[v29[22]] = *((unsigned char *)v28 + v29[22]);
        v27[v29[23]] = *((unsigned char *)v28 + v29[23]);
        v27[v29[24]] = *((unsigned char *)v28 + v29[24]);
        v27[v29[25]] = *((unsigned char *)v28 + v29[25]);
        v27[v29[26]] = *((unsigned char *)v28 + v29[26]);
        v27[v29[27]] = *((unsigned char *)v28 + v29[27]);
        v27[v29[28]] = *((unsigned char *)v28 + v29[28]);
        *(void *)&v27[v29[29]] = *(void *)((char *)v28 + v29[29]);
        *(void *)&v27[v29[30]] = *(void *)((char *)v28 + v29[30]);
        v27[v29[31]] = *((unsigned char *)v28 + v29[31]);
        uint64_t v61 = v29[32];
        uint64_t v62 = &v27[v61];
        uint64_t v63 = (void *)((char *)v28 + v61);
        *(void *)uint64_t v62 = *v63;
        *((void *)v62 + 1) = v63[1];
        *(void *)&v27[v29[33]] = *(void *)((char *)v28 + v29[33]);
        uint64_t v64 = v29[34];
        uint64_t v65 = &v27[v64];
        uint64_t v66 = (void *)((char *)v28 + v64);
        *(void *)uint64_t v65 = *v66;
        *((void *)v65 + 1) = v66[1];
        uint64_t v67 = v29[35];
        uint64_t v68 = &v27[v67];
        uint64_t v69 = (void *)((char *)v28 + v67);
        *(void *)uint64_t v68 = *v69;
        *((void *)v68 + 1) = v69[1];
        uint64_t v70 = v29[36];
        __dstb = &v27[v70];
        uint64_t v71 = (char *)v28 + v70;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v37(v71, 1, v36))
        {
          uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(__dstb, v71, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v157 + 16))(__dstb, v71, v36);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(__dstb, 0, 1, v36);
        }
        uint64_t v30 = v159;
        uint64_t v73 = v29[37];
        uint64_t v74 = &v27[v73];
        uint64_t v75 = (void *)((char *)v28 + v73);
        *(void *)uint64_t v74 = *v75;
        *((void *)v74 + 1) = v75[1];
        uint64_t v76 = v29[38];
        uint64_t v77 = &v27[v76];
        uint64_t v78 = (void *)((char *)v28 + v76);
        *(void *)uint64_t v77 = *v78;
        *((void *)v77 + 1) = v78[1];
        v27[v29[39]] = *((unsigned char *)v28 + v29[39]);
        v27[v29[40]] = *((unsigned char *)v28 + v29[40]);
        v27[v29[41]] = *((unsigned char *)v28 + v29[41]);
        v27[v29[42]] = *((unsigned char *)v28 + v29[42]);
        v27[v29[43]] = *((unsigned char *)v28 + v29[43]);
        v27[v29[44]] = *((unsigned char *)v28 + v29[44]);
        v27[v29[45]] = *((unsigned char *)v28 + v29[45]);
        uint64_t v79 = v29[46];
        uint64_t v80 = &v27[v79];
        uint64_t v81 = (void *)((char *)v28 + v79);
        *(void *)uint64_t v80 = *v81;
        *((void *)v80 + 1) = v81[1];
        uint64_t v82 = *(void (**)(char *, void, uint64_t, int *))(v159 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v82(v27, 0, 1, v29);
        uint64_t v25 = v153;
        uint64_t v31 = v156;
      }
      *(void *)&v3[v25[7]] = *(void *)(a2 + v25[7]);
      uint64_t v83 = v25[8];
      uint64_t v84 = &v3[v83];
      uint64_t v85 = (void *)(a2 + v83);
      *(void *)uint64_t v84 = *v85;
      *((void *)v84 + 1) = v85[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v86 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2A28) + 48);
      uint64_t v87 = &v3[v86];
      uint64_t v88 = (void *)(a2 + v86);
      uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
      uint64_t v90 = *(void *)(v89 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v90 + 48))(v88, 3, v89))
      {
        uint64_t v91 = type metadata accessor for PlaybackIntent.PlayerConstraint(0);
        memcpy(v87, v88, *(void *)(*(void *)(v91 - 8) + 64));
      }
      else
      {
        if (v31(v88, 1, v29))
        {
          memcpy(v87, v88, *(void *)(v90 + 64));
        }
        else
        {
          uint64_t v147 = v89;
          uint64_t v158 = v90;
          uint64_t v160 = v30;
          *(void *)uint64_t v87 = *v88;
          *((void *)v87 + 1) = v88[1];
          *((void *)v87 + 2) = v88[2];
          *((void *)v87 + 3) = v88[3];
          *((void *)v87 + 4) = v88[4];
          *((void *)v87 + 5) = v88[5];
          uint64_t v92 = v88[6];
          v87[56] = *((unsigned char *)v88 + 56);
          *((void *)v87 + 6) = v92;
          uint64_t v93 = v88[8];
          v87[72] = *((unsigned char *)v88 + 72);
          *((void *)v87 + 8) = v93;
          *((void *)v87 + 10) = v88[10];
          *((void *)v87 + 11) = v88[11];
          *((void *)v87 + 12) = v88[12];
          *((void *)v87 + 13) = v88[13];
          *((void *)v87 + 14) = v88[14];
          *((void *)v87 + 15) = v88[15];
          uint64_t v94 = v29[12];
          uint64_t v145 = &v87[v94];
          __dstc = (char *)v88 + v94;
          uint64_t v95 = sub_1ACE74F28();
          uint64_t v162 = *(void *)(v95 - 8);
          uint64_t v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v164 = v96;
          if (v96(__dstc, 1, v95))
          {
            uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
            memcpy(v145, __dstc, *(void *)(*(void *)(v97 - 8) + 64));
            uint64_t v98 = v162;
          }
          else
          {
            uint64_t v98 = v162;
            (*(void (**)(char *, char *, uint64_t))(v162 + 16))(v145, __dstc, v95);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v162 + 56))(v145, 0, 1, v95);
          }
          uint64_t v89 = v147;
          uint64_t v99 = v29[13];
          uint64_t v100 = &v87[v99];
          uint64_t v101 = (void *)((char *)v88 + v99);
          *(void *)uint64_t v100 = *v101;
          *((void *)v100 + 1) = v101[1];
          *(void *)&v87[v29[14]] = *(void *)((char *)v88 + v29[14]);
          uint64_t v102 = v29[15];
          uint64_t v103 = &v87[v102];
          uint64_t v104 = (char *)v88 + v102;
          uint64_t v105 = *(void *)v104;
          v103[8] = v104[8];
          *(void *)uint64_t v103 = v105;
          uint64_t v106 = v29[16];
          uint64_t v107 = &v87[v106];
          uint64_t v108 = (char *)v88 + v106;
          swift_bridgeObjectRetain();
          uint64_t v161 = v3;
          if (v164(v108, 1, v95))
          {
            uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
            memcpy(v107, v108, *(void *)(*(void *)(v109 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v107, v108, v95);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v107, 0, 1, v95);
          }
          uint64_t v110 = v29[17];
          uint64_t v111 = &v87[v110];
          uint64_t v112 = (void *)((char *)v88 + v110);
          *(void *)uint64_t v111 = *v112;
          *((void *)v111 + 1) = v112[1];
          *(void *)&v87[v29[18]] = *(void *)((char *)v88 + v29[18]);
          v87[v29[19]] = *((unsigned char *)v88 + v29[19]);
          uint64_t v113 = v29[20];
          uint64_t v152 = &v87[v113];
          uint64_t v154 = (char *)v88 + v113;
          uint64_t v114 = sub_1ACE750A8();
          uint64_t v115 = *(void *)(v114 - 8);
          uint64_t v116 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48);
          swift_bridgeObjectRetain();
          swift_retain();
          if (v116(v154, 1, v114))
          {
            uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
            memcpy(v152, v154, *(void *)(*(void *)(v117 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v152, v154, v114);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v152, 0, 1, v114);
          }
          uint64_t v118 = v29[21];
          uint64_t v119 = &v87[v118];
          uint64_t v120 = (void *)((char *)v88 + v118);
          *(void *)uint64_t v119 = *v120;
          *((void *)v119 + 1) = v120[1];
          v87[v29[22]] = *((unsigned char *)v88 + v29[22]);
          v87[v29[23]] = *((unsigned char *)v88 + v29[23]);
          v87[v29[24]] = *((unsigned char *)v88 + v29[24]);
          v87[v29[25]] = *((unsigned char *)v88 + v29[25]);
          v87[v29[26]] = *((unsigned char *)v88 + v29[26]);
          v87[v29[27]] = *((unsigned char *)v88 + v29[27]);
          v87[v29[28]] = *((unsigned char *)v88 + v29[28]);
          *(void *)&v87[v29[29]] = *(void *)((char *)v88 + v29[29]);
          *(void *)&v87[v29[30]] = *(void *)((char *)v88 + v29[30]);
          v87[v29[31]] = *((unsigned char *)v88 + v29[31]);
          uint64_t v121 = v29[32];
          int v122 = &v87[v121];
          uint64_t v123 = (void *)((char *)v88 + v121);
          *(void *)int v122 = *v123;
          *((void *)v122 + 1) = v123[1];
          *(void *)&v87[v29[33]] = *(void *)((char *)v88 + v29[33]);
          uint64_t v124 = v29[34];
          uint64_t v125 = &v87[v124];
          uint64_t v126 = (void *)((char *)v88 + v124);
          *(void *)uint64_t v125 = *v126;
          *((void *)v125 + 1) = v126[1];
          uint64_t v127 = v29[35];
          uint64_t v128 = &v87[v127];
          uint64_t v129 = (void *)((char *)v88 + v127);
          *(void *)uint64_t v128 = *v129;
          *((void *)v128 + 1) = v129[1];
          uint64_t v130 = v29[36];
          uint64_t v155 = &v87[v130];
          uint64_t v131 = (char *)v88 + v130;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v164(v131, 1, v95))
          {
            uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
            memcpy(v155, v131, *(void *)(*(void *)(v132 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v162 + 16))(v155, v131, v95);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v162 + 56))(v155, 0, 1, v95);
          }
          uint64_t v133 = v29[37];
          uint64_t v134 = &v87[v133];
          uint64_t v135 = (void *)((char *)v88 + v133);
          *(void *)uint64_t v134 = *v135;
          *((void *)v134 + 1) = v135[1];
          uint64_t v136 = v29[38];
          uint64_t v137 = &v87[v136];
          uint64_t v138 = (void *)((char *)v88 + v136);
          *(void *)uint64_t v137 = *v138;
          *((void *)v137 + 1) = v138[1];
          v87[v29[39]] = *((unsigned char *)v88 + v29[39]);
          v87[v29[40]] = *((unsigned char *)v88 + v29[40]);
          v87[v29[41]] = *((unsigned char *)v88 + v29[41]);
          v87[v29[42]] = *((unsigned char *)v88 + v29[42]);
          v87[v29[43]] = *((unsigned char *)v88 + v29[43]);
          v87[v29[44]] = *((unsigned char *)v88 + v29[44]);
          v87[v29[45]] = *((unsigned char *)v88 + v29[45]);
          uint64_t v139 = v29[46];
          uint64_t v140 = &v87[v139];
          uint64_t v141 = (void *)((char *)v88 + v139);
          *(void *)uint64_t v140 = *v141;
          *((void *)v140 + 1) = v141[1];
          uint64_t v142 = *(void (**)(char *, void, uint64_t, int *))(v160 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v142(v87, 0, 1, v29);
          uint64_t v3 = v161;
          uint64_t v90 = v158;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v87, 0, 3, v89);
      }
      goto LABEL_42;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = sub_1ACE74F28();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v3, a2, v7);
LABEL_42:
      swift_storeEnumTagMultiPayload();
      return v3;
    }
    memcpy(v3, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return v3;
}

char *initializeWithTake for PlaybackIntent.ValidationError(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    long long v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v8;
    a1[32] = a2[32];
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_DWORD *)(a1 + 119) = *(_DWORD *)(a2 + 119);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    uint64_t v9 = (int *)type metadata accessor for PlaybackIntent(0);
    uint64_t v10 = v9[6];
    uint64_t v11 = &a1[v10];
    unsigned __int8 v12 = &a2[v10];
    long long v13 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    uint64_t v14 = *((void *)v13 - 1);
    long long v15 = *(unsigned int (**)(void, void, void))(v14 + 48);
    if (v15(v12, 1, v13))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v75 = v9;
      uint64_t v77 = v15;
      long long v17 = *((_OWORD *)v12 + 1);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v17;
      *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
      *((void *)v11 + 6) = *((void *)v12 + 6);
      v11[56] = v12[56];
      *((void *)v11 + 8) = *((void *)v12 + 8);
      v11[72] = v12[72];
      long long v18 = *((_OWORD *)v12 + 6);
      *((_OWORD *)v11 + 5) = *((_OWORD *)v12 + 5);
      *((_OWORD *)v11 + 6) = v18;
      *((_OWORD *)v11 + 7) = *((_OWORD *)v12 + 7);
      uint64_t v19 = v13[12];
      __dst = &v11[v19];
      uint64_t v20 = &v12[v19];
      uint64_t v21 = sub_1ACE74F28();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      uint64_t v73 = v22;
      uint64_t v81 = v14;
      if (v83(v20, 1, v21))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(__dst, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
      }
      uint64_t v24 = v21;
      *(_OWORD *)&v11[v13[13]] = *(_OWORD *)&v12[v13[13]];
      *(void *)&v11[v13[14]] = *(void *)&v12[v13[14]];
      uint64_t v25 = v13[15];
      uint64_t v26 = &v11[v25];
      uint64_t v27 = &v12[v25];
      v26[8] = v27[8];
      *(void *)uint64_t v26 = *(void *)v27;
      uint64_t v28 = v13[16];
      uint64_t v29 = &v11[v28];
      uint64_t v30 = &v12[v28];
      if (v83(&v12[v28], 1, v24))
      {
        uint64_t v31 = v24;
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v29, v30, v24);
        uint64_t v31 = v24;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v29, 0, 1, v24);
      }
      *(_OWORD *)&v11[v13[17]] = *(_OWORD *)&v12[v13[17]];
      *(void *)&v11[v13[18]] = *(void *)&v12[v13[18]];
      v11[v13[19]] = v12[v13[19]];
      uint64_t v33 = v13[20];
      uint64_t v34 = &v11[v33];
      uint64_t v35 = &v12[v33];
      uint64_t v36 = sub_1ACE750A8();
      uint64_t v37 = *(void *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
        memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      uint64_t v9 = v75;
      *(_OWORD *)&v11[v13[21]] = *(_OWORD *)&v12[v13[21]];
      v11[v13[22]] = v12[v13[22]];
      v11[v13[23]] = v12[v13[23]];
      v11[v13[24]] = v12[v13[24]];
      v11[v13[25]] = v12[v13[25]];
      v11[v13[26]] = v12[v13[26]];
      v11[v13[27]] = v12[v13[27]];
      v11[v13[28]] = v12[v13[28]];
      *(void *)&v11[v13[29]] = *(void *)&v12[v13[29]];
      *(void *)&v11[v13[30]] = *(void *)&v12[v13[30]];
      v11[v13[31]] = v12[v13[31]];
      *(_OWORD *)&v11[v13[32]] = *(_OWORD *)&v12[v13[32]];
      *(void *)&v11[v13[33]] = *(void *)&v12[v13[33]];
      *(_OWORD *)&v11[v13[34]] = *(_OWORD *)&v12[v13[34]];
      *(_OWORD *)&v11[v13[35]] = *(_OWORD *)&v12[v13[35]];
      uint64_t v39 = v13[36];
      uint64_t v40 = &v11[v39];
      uint64_t v41 = &v12[v39];
      long long v15 = v77;
      if (v83(&v12[v39], 1, v31))
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v40, v41, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v40, 0, 1, v31);
      }
      *(_OWORD *)&v11[v13[37]] = *(_OWORD *)&v12[v13[37]];
      *(_OWORD *)&v11[v13[38]] = *(_OWORD *)&v12[v13[38]];
      v11[v13[39]] = v12[v13[39]];
      v11[v13[40]] = v12[v13[40]];
      v11[v13[41]] = v12[v13[41]];
      v11[v13[42]] = v12[v13[42]];
      v11[v13[43]] = v12[v13[43]];
      v11[v13[44]] = v12[v13[44]];
      v11[v13[45]] = v12[v13[45]];
      *(_OWORD *)&v11[v13[46]] = *(_OWORD *)&v12[v13[46]];
      uint64_t v14 = v81;
      (*(void (**)(char *, void, uint64_t, int *))(v81 + 56))(v11, 0, 1, v13);
    }
    *(void *)&a1[v9[7]] = *(void *)&a2[v9[7]];
    *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
    uint64_t v43 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2A28) + 48);
    uint64_t v44 = &a1[v43];
    uint64_t v45 = &a2[v43];
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
    uint64_t v47 = *(void *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 3, v46))
    {
      uint64_t v48 = type metadata accessor for PlaybackIntent.PlayerConstraint(0);
      memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      if (v15(v45, 1, v13))
      {
        memcpy(v44, v45, *(void *)(v47 + 64));
      }
      else
      {
        uint64_t v82 = v14;
        long long v49 = *((_OWORD *)v45 + 1);
        *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
        *((_OWORD *)v44 + 1) = v49;
        *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
        *((void *)v44 + 6) = *((void *)v45 + 6);
        v44[56] = v45[56];
        *((void *)v44 + 8) = *((void *)v45 + 8);
        v44[72] = v45[72];
        long long v50 = *((_OWORD *)v45 + 6);
        *((_OWORD *)v44 + 5) = *((_OWORD *)v45 + 5);
        *((_OWORD *)v44 + 6) = v50;
        *((_OWORD *)v44 + 7) = *((_OWORD *)v45 + 7);
        uint64_t v51 = v13[12];
        uint64_t v79 = &v44[v51];
        uint64_t v52 = &v45[v51];
        uint64_t v53 = sub_1ACE74F28();
        uint64_t v54 = *(void *)(v53 - 8);
        uint64_t v84 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
        uint64_t v78 = v54;
        if (v84(v52, 1, v53))
        {
          uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v79, v52, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v79, v52, v53);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v79, 0, 1, v53);
        }
        *(_OWORD *)&v44[v13[13]] = *(_OWORD *)&v45[v13[13]];
        *(void *)&v44[v13[14]] = *(void *)&v45[v13[14]];
        uint64_t v56 = v13[15];
        uint64_t v57 = &v44[v56];
        uint64_t v58 = &v45[v56];
        v57[8] = v58[8];
        *(void *)uint64_t v57 = *(void *)v58;
        uint64_t v59 = v13[16];
        uint64_t v60 = &v44[v59];
        uint64_t v61 = &v45[v59];
        uint64_t v76 = v53;
        if (v84(&v45[v59], 1, v53))
        {
          uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v60, v61, v53);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v60, 0, 1, v53);
        }
        *(_OWORD *)&v44[v13[17]] = *(_OWORD *)&v45[v13[17]];
        *(void *)&v44[v13[18]] = *(void *)&v45[v13[18]];
        v44[v13[19]] = v45[v13[19]];
        uint64_t v63 = v13[20];
        uint64_t v80 = &v44[v63];
        uint64_t v64 = &v45[v63];
        uint64_t v65 = sub_1ACE750A8();
        uint64_t v66 = *(void *)(v65 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
        {
          uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
          memcpy(v80, v64, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v80, v64, v65);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v80, 0, 1, v65);
        }
        *(_OWORD *)&v44[v13[21]] = *(_OWORD *)&v45[v13[21]];
        v44[v13[22]] = v45[v13[22]];
        v44[v13[23]] = v45[v13[23]];
        v44[v13[24]] = v45[v13[24]];
        v44[v13[25]] = v45[v13[25]];
        v44[v13[26]] = v45[v13[26]];
        v44[v13[27]] = v45[v13[27]];
        v44[v13[28]] = v45[v13[28]];
        *(void *)&v44[v13[29]] = *(void *)&v45[v13[29]];
        *(void *)&v44[v13[30]] = *(void *)&v45[v13[30]];
        v44[v13[31]] = v45[v13[31]];
        *(_OWORD *)&v44[v13[32]] = *(_OWORD *)&v45[v13[32]];
        *(void *)&v44[v13[33]] = *(void *)&v45[v13[33]];
        *(_OWORD *)&v44[v13[34]] = *(_OWORD *)&v45[v13[34]];
        *(_OWORD *)&v44[v13[35]] = *(_OWORD *)&v45[v13[35]];
        uint64_t v68 = v13[36];
        uint64_t v69 = &v44[v68];
        uint64_t v70 = &v45[v68];
        if (v84(&v45[v68], 1, v76))
        {
          uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v69, v70, v76);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v69, 0, 1, v76);
        }
        *(_OWORD *)&v44[v13[37]] = *(_OWORD *)&v45[v13[37]];
        *(_OWORD *)&v44[v13[38]] = *(_OWORD *)&v45[v13[38]];
        v44[v13[39]] = v45[v13[39]];
        v44[v13[40]] = v45[v13[40]];
        v44[v13[41]] = v45[v13[41]];
        v44[v13[42]] = v45[v13[42]];
        v44[v13[43]] = v45[v13[43]];
        v44[v13[44]] = v45[v13[44]];
        v44[v13[45]] = v45[v13[45]];
        *(_OWORD *)&v44[v13[46]] = *(_OWORD *)&v45[v13[46]];
        (*(void (**)(char *, void, uint64_t, int *))(v82 + 56))(v44, 0, 1, v13);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 3, v46);
    }
    goto LABEL_38;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = sub_1ACE74F28();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_38:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for PlaybackIntent.ValidationError(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1ACB85C50((uint64_t)a1, type metadata accessor for PlaybackIntent.ValidationError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      long long v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v8;
      a1[32] = a2[32];
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_DWORD *)(a1 + 119) = *(_DWORD *)(a2 + 119);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      uint64_t v9 = (int *)type metadata accessor for PlaybackIntent(0);
      uint64_t v10 = v9[6];
      uint64_t v11 = &a1[v10];
      unsigned __int8 v12 = &a2[v10];
      long long v13 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
      uint64_t v14 = *((void *)v13 - 1);
      long long v15 = *(unsigned int (**)(void, void, void))(v14 + 48);
      if (v15(v12, 1, v13))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
        memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        uint64_t v82 = v14;
        __src = v15;
        long long v17 = *((_OWORD *)v12 + 1);
        *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
        *((_OWORD *)v11 + 1) = v17;
        *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
        *((void *)v11 + 6) = *((void *)v12 + 6);
        v11[56] = v12[56];
        *((void *)v11 + 8) = *((void *)v12 + 8);
        v11[72] = v12[72];
        long long v18 = *((_OWORD *)v12 + 6);
        *((_OWORD *)v11 + 5) = *((_OWORD *)v12 + 5);
        *((_OWORD *)v11 + 6) = v18;
        *((_OWORD *)v11 + 7) = *((_OWORD *)v12 + 7);
        uint64_t v19 = v13[12];
        __dst = &v11[v19];
        uint64_t v20 = &v12[v19];
        uint64_t v21 = sub_1ACE74F28();
        uint64_t v22 = *(void *)(v21 - 8);
        uint64_t v84 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
        if (v84(v20, 1, v21))
        {
          uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 32))(__dst, v20, v21);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
        }
        uint64_t v24 = v21;
        *(_OWORD *)&v11[v13[13]] = *(_OWORD *)&v12[v13[13]];
        *(void *)&v11[v13[14]] = *(void *)&v12[v13[14]];
        uint64_t v25 = v13[15];
        uint64_t v26 = &v11[v25];
        uint64_t v27 = &v12[v25];
        v26[8] = v27[8];
        *(void *)uint64_t v26 = *(void *)v27;
        uint64_t v28 = v13[16];
        uint64_t v29 = &v11[v28];
        uint64_t v30 = &v12[v28];
        uint64_t v72 = v24;
        uint64_t v74 = v9;
        if (v84(&v12[v28], 1, v24))
        {
          uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v29, v30, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v29, 0, 1, v24);
        }
        *(_OWORD *)&v11[v13[17]] = *(_OWORD *)&v12[v13[17]];
        *(void *)&v11[v13[18]] = *(void *)&v12[v13[18]];
        v11[v13[19]] = v12[v13[19]];
        uint64_t v32 = v13[20];
        uint64_t v33 = &v11[v32];
        uint64_t v34 = &v12[v32];
        uint64_t v35 = sub_1ACE750A8();
        uint64_t v36 = *(void *)(v35 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
        {
          uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
          memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
        }
        uint64_t v9 = v74;
        *(_OWORD *)&v11[v13[21]] = *(_OWORD *)&v12[v13[21]];
        v11[v13[22]] = v12[v13[22]];
        v11[v13[23]] = v12[v13[23]];
        v11[v13[24]] = v12[v13[24]];
        v11[v13[25]] = v12[v13[25]];
        v11[v13[26]] = v12[v13[26]];
        v11[v13[27]] = v12[v13[27]];
        v11[v13[28]] = v12[v13[28]];
        *(void *)&v11[v13[29]] = *(void *)&v12[v13[29]];
        *(void *)&v11[v13[30]] = *(void *)&v12[v13[30]];
        v11[v13[31]] = v12[v13[31]];
        *(_OWORD *)&v11[v13[32]] = *(_OWORD *)&v12[v13[32]];
        *(void *)&v11[v13[33]] = *(void *)&v12[v13[33]];
        *(_OWORD *)&v11[v13[34]] = *(_OWORD *)&v12[v13[34]];
        *(_OWORD *)&v11[v13[35]] = *(_OWORD *)&v12[v13[35]];
        uint64_t v38 = v13[36];
        uint64_t v39 = &v11[v38];
        uint64_t v40 = &v12[v38];
        if (v84(&v12[v38], 1, v72))
        {
          uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v39, v40, v72);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v39, 0, 1, v72);
        }
        *(_OWORD *)&v11[v13[37]] = *(_OWORD *)&v12[v13[37]];
        *(_OWORD *)&v11[v13[38]] = *(_OWORD *)&v12[v13[38]];
        v11[v13[39]] = v12[v13[39]];
        v11[v13[40]] = v12[v13[40]];
        v11[v13[41]] = v12[v13[41]];
        v11[v13[42]] = v12[v13[42]];
        v11[v13[43]] = v12[v13[43]];
        v11[v13[44]] = v12[v13[44]];
        v11[v13[45]] = v12[v13[45]];
        *(_OWORD *)&v11[v13[46]] = *(_OWORD *)&v12[v13[46]];
        uint64_t v14 = v82;
        (*(void (**)(char *, void, uint64_t, int *))(v82 + 56))(v11, 0, 1, v13);
        long long v15 = (unsigned int (*)(void, void, void))__src;
      }
      *(void *)&a1[v9[7]] = *(void *)&a2[v9[7]];
      *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
      uint64_t v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2A28) + 48);
      uint64_t v43 = &a1[v42];
      uint64_t v44 = &a2[v42];
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
      uint64_t v46 = *(void *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 3, v45))
      {
        uint64_t v47 = type metadata accessor for PlaybackIntent.PlayerConstraint(0);
        memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        if (v15(v44, 1, v13))
        {
          memcpy(v43, v44, *(void *)(v46 + 64));
        }
        else
        {
          uint64_t v75 = v46;
          long long v48 = *((_OWORD *)v44 + 1);
          *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
          *((_OWORD *)v43 + 1) = v48;
          *((_OWORD *)v43 + 2) = *((_OWORD *)v44 + 2);
          *((void *)v43 + 6) = *((void *)v44 + 6);
          v43[56] = v44[56];
          *((void *)v43 + 8) = *((void *)v44 + 8);
          v43[72] = v44[72];
          long long v49 = *((_OWORD *)v44 + 6);
          *((_OWORD *)v43 + 5) = *((_OWORD *)v44 + 5);
          *((_OWORD *)v43 + 6) = v49;
          *((_OWORD *)v43 + 7) = *((_OWORD *)v44 + 7);
          uint64_t v50 = v13[12];
          uint64_t v78 = &v43[v50];
          uint64_t v51 = &v44[v50];
          uint64_t v52 = sub_1ACE74F28();
          uint64_t v53 = *(void *)(v52 - 8);
          uint64_t v85 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
          uint64_t v73 = v53;
          if (v85(v51, 1, v52))
          {
            uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
            memcpy(v78, v51, *(void *)(*(void *)(v54 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v78, v51, v52);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v78, 0, 1, v52);
          }
          uint64_t v46 = v75;
          *(_OWORD *)&v43[v13[13]] = *(_OWORD *)&v44[v13[13]];
          *(void *)&v43[v13[14]] = *(void *)&v44[v13[14]];
          uint64_t v55 = v13[15];
          uint64_t v56 = &v43[v55];
          uint64_t v57 = &v44[v55];
          v56[8] = v57[8];
          *(void *)uint64_t v56 = *(void *)v57;
          uint64_t v58 = v13[16];
          uint64_t v79 = &v43[v58];
          uint64_t v59 = &v44[v58];
          uint64_t v83 = v14;
          uint64_t v77 = v52;
          if (v85(&v44[v58], 1, v52))
          {
            uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
            memcpy(v79, v59, *(void *)(*(void *)(v60 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v79, v59, v52);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v79, 0, 1, v52);
          }
          *(_OWORD *)&v43[v13[17]] = *(_OWORD *)&v44[v13[17]];
          *(void *)&v43[v13[18]] = *(void *)&v44[v13[18]];
          v43[v13[19]] = v44[v13[19]];
          uint64_t v61 = v13[20];
          uint64_t v80 = &v43[v61];
          uint64_t v62 = &v44[v61];
          uint64_t v63 = sub_1ACE750A8();
          uint64_t v64 = *(void *)(v63 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
          {
            uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
            memcpy(v80, v62, *(void *)(*(void *)(v65 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v80, v62, v63);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v80, 0, 1, v63);
          }
          uint64_t v66 = v83;
          *(_OWORD *)&v43[v13[21]] = *(_OWORD *)&v44[v13[21]];
          v43[v13[22]] = v44[v13[22]];
          v43[v13[23]] = v44[v13[23]];
          v43[v13[24]] = v44[v13[24]];
          v43[v13[25]] = v44[v13[25]];
          v43[v13[26]] = v44[v13[26]];
          v43[v13[27]] = v44[v13[27]];
          v43[v13[28]] = v44[v13[28]];
          *(void *)&v43[v13[29]] = *(void *)&v44[v13[29]];
          *(void *)&v43[v13[30]] = *(void *)&v44[v13[30]];
          v43[v13[31]] = v44[v13[31]];
          *(_OWORD *)&v43[v13[32]] = *(_OWORD *)&v44[v13[32]];
          *(void *)&v43[v13[33]] = *(void *)&v44[v13[33]];
          *(_OWORD *)&v43[v13[34]] = *(_OWORD *)&v44[v13[34]];
          *(_OWORD *)&v43[v13[35]] = *(_OWORD *)&v44[v13[35]];
          uint64_t v67 = v13[36];
          uint64_t v81 = &v43[v67];
          uint64_t v68 = &v44[v67];
          if (v85(&v44[v67], 1, v77))
          {
            uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
            memcpy(v81, v68, *(void *)(*(void *)(v69 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v81, v68, v77);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v81, 0, 1, v77);
            uint64_t v66 = v83;
          }
          *(_OWORD *)&v43[v13[37]] = *(_OWORD *)&v44[v13[37]];
          *(_OWORD *)&v43[v13[38]] = *(_OWORD *)&v44[v13[38]];
          v43[v13[39]] = v44[v13[39]];
          v43[v13[40]] = v44[v13[40]];
          v43[v13[41]] = v44[v13[41]];
          v43[v13[42]] = v44[v13[42]];
          v43[v13[43]] = v44[v13[43]];
          v43[v13[44]] = v44[v13[44]];
          v43[v13[45]] = v44[v13[45]];
          *(_OWORD *)&v43[v13[46]] = *(_OWORD *)&v44[v13[46]];
          (*(void (**)(char *, void, uint64_t, int *))(v66 + 56))(v43, 0, 1, v13);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 3, v45);
      }
      goto LABEL_39;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = sub_1ACE74F28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_39:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1ACB94668()
{
  uint64_t result = sub_1ACE74F28();
  if (v1 <= 0x3F)
  {
    uint64_t v5 = *(void *)(result - 8) + 64;
    uint64_t v6 = MEMORY[0x1E4FBADA0] + 64;
    uint64_t result = type metadata accessor for PlaybackIntent(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for PlaybackIntent.PlayerConstraint(319);
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        uint64_t v7 = &v4;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackIntent.Option()
{
  return &type metadata for PlaybackIntent.Option;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaybackIntent.PlayerConstraint(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
      uint64_t v11 = *((void *)v10 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v11 + 48))(a2, 1, v10))
      {
        memcpy(a1, a2, *(void *)(v8 + 64));
      }
      else
      {
        uint64_t v81 = v11;
        uint64_t v82 = v8;
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        uint64_t v13 = a2[3];
        a1[2] = a2[2];
        a1[3] = v13;
        uint64_t v14 = a2[5];
        a1[4] = a2[4];
        a1[5] = v14;
        a1[6] = a2[6];
        *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
        uint64_t v15 = a2[8];
        *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
        a1[8] = v15;
        uint64_t v16 = a2[11];
        a1[10] = a2[10];
        a1[11] = v16;
        uint64_t v17 = a2[13];
        a1[12] = a2[12];
        a1[13] = v17;
        uint64_t v18 = a2[15];
        a1[14] = a2[14];
        a1[15] = v18;
        uint64_t v19 = v10[12];
        __dst = (char *)a1 + v19;
        uint64_t v83 = (char *)a2 + v19;
        uint64_t v20 = sub_1ACE74F28();
        uint64_t v87 = *(void *)(v20 - 8);
        uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v21(v83, 1, v20))
        {
          uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(__dst, v83, *(void *)(*(void *)(v22 - 8) + 64));
          uint64_t v23 = v87;
        }
        else
        {
          uint64_t v23 = v87;
          (*(void (**)(char *, char *, uint64_t))(v87 + 16))(__dst, v83, v20);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(__dst, 0, 1, v20);
        }
        uint64_t v24 = v10[13];
        uint64_t v25 = (uint64_t *)((char *)a1 + v24);
        uint64_t v26 = (uint64_t *)((char *)a2 + v24);
        uint64_t v27 = v26[1];
        *uint64_t v25 = *v26;
        v25[1] = v27;
        *(uint64_t *)((char *)a1 + v10[14]) = *(uint64_t *)((char *)a2 + v10[14]);
        uint64_t v28 = v10[15];
        uint64_t v29 = (char *)a1 + v28;
        uint64_t v30 = (char *)a2 + v28;
        *(void *)uint64_t v29 = *(void *)v30;
        v29[8] = v30[8];
        uint64_t v31 = v10[16];
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        swift_bridgeObjectRetain();
        uint64_t v86 = v20;
        uint64_t v85 = v21;
        uint64_t v79 = v7;
        if (v21(v33, 1, v20))
        {
          uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v32, v33, v20);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v32, 0, 1, v20);
        }
        uint64_t v35 = v10[17];
        uint64_t v36 = (uint64_t *)((char *)a1 + v35);
        uint64_t v37 = (uint64_t *)((char *)a2 + v35);
        uint64_t v38 = v37[1];
        *uint64_t v36 = *v37;
        v36[1] = v38;
        *(uint64_t *)((char *)a1 + v10[18]) = *(uint64_t *)((char *)a2 + v10[18]);
        *((unsigned char *)a1 + v10[19]) = *((unsigned char *)a2 + v10[19]);
        uint64_t v39 = v10[20];
        uint64_t v84 = (char *)a1 + v39;
        uint64_t v40 = (char *)a2 + v39;
        uint64_t v41 = sub_1ACE750A8();
        uint64_t v42 = *(void *)(v41 - 8);
        uint64_t v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v43(v40, 1, v41))
        {
          uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
          memcpy(v84, v40, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v84, v40, v41);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v84, 0, 1, v41);
        }
        uint64_t v7 = v79;
        uint64_t v45 = v10[21];
        uint64_t v46 = (uint64_t *)((char *)a1 + v45);
        uint64_t v47 = (uint64_t *)((char *)a2 + v45);
        uint64_t v48 = v47[1];
        *uint64_t v46 = *v47;
        v46[1] = v48;
        *((unsigned char *)a1 + v10[22]) = *((unsigned char *)a2 + v10[22]);
        *((unsigned char *)a1 + v10[23]) = *((unsigned char *)a2 + v10[23]);
        *((unsigned char *)a1 + v10[24]) = *((unsigned char *)a2 + v10[24]);
        *((unsigned char *)a1 + v10[25]) = *((unsigned char *)a2 + v10[25]);
        *((unsigned char *)a1 + v10[26]) = *((unsigned char *)a2 + v10[26]);
        *((unsigned char *)a1 + v10[27]) = *((unsigned char *)a2 + v10[27]);
        *((unsigned char *)a1 + v10[28]) = *((unsigned char *)a2 + v10[28]);
        *(uint64_t *)((char *)a1 + v10[29]) = *(uint64_t *)((char *)a2 + v10[29]);
        *(uint64_t *)((char *)a1 + v10[30]) = *(uint64_t *)((char *)a2 + v10[30]);
        *((unsigned char *)a1 + v10[31]) = *((unsigned char *)a2 + v10[31]);
        uint64_t v49 = v10[32];
        uint64_t v50 = (uint64_t *)((char *)a1 + v49);
        uint64_t v51 = (uint64_t *)((char *)a2 + v49);
        uint64_t v52 = v51[1];
        *uint64_t v50 = *v51;
        v50[1] = v52;
        *(uint64_t *)((char *)a1 + v10[33]) = *(uint64_t *)((char *)a2 + v10[33]);
        uint64_t v53 = v10[34];
        uint64_t v54 = (uint64_t *)((char *)a1 + v53);
        uint64_t v55 = (uint64_t *)((char *)a2 + v53);
        uint64_t v56 = v55[1];
        *uint64_t v54 = *v55;
        v54[1] = v56;
        uint64_t v57 = v10[35];
        uint64_t v58 = (uint64_t *)((char *)a1 + v57);
        uint64_t v59 = (uint64_t *)((char *)a2 + v57);
        uint64_t v60 = v59[1];
        *uint64_t v58 = *v59;
        v58[1] = v60;
        uint64_t v61 = v10[36];
        uint64_t v62 = (char *)a1 + v61;
        uint64_t v63 = (char *)a2 + v61;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v85(v63, 1, v86))
        {
          uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v62, v63, v86);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v62, 0, 1, v86);
        }
        uint64_t v8 = v82;
        uint64_t v65 = v10[37];
        uint64_t v66 = (uint64_t *)((char *)a1 + v65);
        uint64_t v67 = (uint64_t *)((char *)a2 + v65);
        uint64_t v68 = v67[1];
        *uint64_t v66 = *v67;
        v66[1] = v68;
        uint64_t v69 = v10[38];
        uint64_t v70 = (uint64_t *)((char *)a1 + v69);
        uint64_t v71 = (uint64_t *)((char *)a2 + v69);
        uint64_t v72 = v71[1];
        *uint64_t v70 = *v71;
        v70[1] = v72;
        *((unsigned char *)a1 + v10[39]) = *((unsigned char *)a2 + v10[39]);
        *((unsigned char *)a1 + v10[40]) = *((unsigned char *)a2 + v10[40]);
        *((unsigned char *)a1 + v10[41]) = *((unsigned char *)a2 + v10[41]);
        *((unsigned char *)a1 + v10[42]) = *((unsigned char *)a2 + v10[42]);
        *((unsigned char *)a1 + v10[43]) = *((unsigned char *)a2 + v10[43]);
        *((unsigned char *)a1 + v10[44]) = *((unsigned char *)a2 + v10[44]);
        *((unsigned char *)a1 + v10[45]) = *((unsigned char *)a2 + v10[45]);
        uint64_t v73 = v10[46];
        uint64_t v74 = (uint64_t *)((char *)a1 + v73);
        uint64_t v75 = (uint64_t *)((char *)a2 + v73);
        uint64_t v76 = v75[1];
        *uint64_t v74 = *v75;
        v74[1] = v76;
        uint64_t v77 = *(void (**)(uint64_t *, void, uint64_t, int *))(v81 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v77(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t destroy for PlaybackIntent.PlayerConstraint(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 3, v2);
  if (!result)
  {
    char v4 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v4 - 1) + 48))(a1, 1, v4);
    if (!result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = a1 + v4[12];
      uint64_t v6 = sub_1ACE74F28();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
      if (!v8(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      }
      swift_bridgeObjectRelease();
      uint64_t v9 = a1 + v4[16];
      if (!v8(v9, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
      }
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v10 = a1 + v4[20];
      uint64_t v11 = sub_1ACE750A8();
      uint64_t v12 = *(void *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = a1 + v4[36];
      if (!v8(v13, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13, v6);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void *initializeWithCopy for PlaybackIntent.PlayerConstraint(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    uint64_t v9 = *((void *)v8 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    else
    {
      uint64_t v82 = v9;
      uint64_t v83 = v7;
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      uint64_t v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      a1[6] = a2[6];
      *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
      uint64_t v13 = a2[8];
      *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
      a1[8] = v13;
      uint64_t v14 = a2[11];
      a1[10] = a2[10];
      a1[11] = v14;
      uint64_t v15 = a2[13];
      a1[12] = a2[12];
      a1[13] = v15;
      uint64_t v16 = a2[15];
      a1[14] = a2[14];
      a1[15] = v16;
      uint64_t v17 = v8[12];
      __dst = (char *)a1 + v17;
      uint64_t v77 = (char *)a2 + v17;
      uint64_t v18 = sub_1ACE74F28();
      uint64_t v84 = *(void *)(v18 - 8);
      uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v85 = v19;
      if (v19(v77, 1, v18))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(__dst, v77, *(void *)(*(void *)(v20 - 8) + 64));
        uint64_t v21 = v84;
      }
      else
      {
        uint64_t v21 = v84;
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(__dst, v77, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(__dst, 0, 1, v18);
      }
      uint64_t v22 = v8[13];
      uint64_t v23 = (void *)((char *)a1 + v22);
      uint64_t v24 = (void *)((char *)a2 + v22);
      uint64_t v25 = v24[1];
      void *v23 = *v24;
      v23[1] = v25;
      *(void *)((char *)a1 + v8[14]) = *(void *)((char *)a2 + v8[14]);
      uint64_t v26 = v8[15];
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = (char *)a2 + v26;
      *(void *)uint64_t v27 = *(void *)v28;
      v27[8] = v28[8];
      uint64_t v29 = v8[16];
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      swift_bridgeObjectRetain();
      uint64_t v81 = v18;
      uint64_t v78 = v6;
      if (v19(v31, 1, v18))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v30, v31, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v30, 0, 1, v18);
      }
      uint64_t v33 = v8[17];
      uint64_t v34 = (void *)((char *)a1 + v33);
      uint64_t v35 = (void *)((char *)a2 + v33);
      uint64_t v36 = v35[1];
      *uint64_t v34 = *v35;
      v34[1] = v36;
      *(void *)((char *)a1 + v8[18]) = *(void *)((char *)a2 + v8[18]);
      *((unsigned char *)a1 + v8[19]) = *((unsigned char *)a2 + v8[19]);
      uint64_t v37 = v8[20];
      __dsta = (char *)a1 + v37;
      uint64_t v38 = (char *)a2 + v37;
      uint64_t v39 = sub_1ACE750A8();
      uint64_t v40 = *(void *)(v39 - 8);
      uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
      swift_bridgeObjectRetain();
      swift_retain();
      if (v41(v38, 1, v39))
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
        memcpy(__dsta, v38, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(__dsta, v38, v39);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(__dsta, 0, 1, v39);
      }
      uint64_t v6 = v78;
      uint64_t v43 = v8[21];
      uint64_t v44 = (void *)((char *)a1 + v43);
      uint64_t v45 = (void *)((char *)a2 + v43);
      uint64_t v46 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v46;
      *((unsigned char *)a1 + v8[22]) = *((unsigned char *)a2 + v8[22]);
      *((unsigned char *)a1 + v8[23]) = *((unsigned char *)a2 + v8[23]);
      *((unsigned char *)a1 + v8[24]) = *((unsigned char *)a2 + v8[24]);
      *((unsigned char *)a1 + v8[25]) = *((unsigned char *)a2 + v8[25]);
      *((unsigned char *)a1 + v8[26]) = *((unsigned char *)a2 + v8[26]);
      *((unsigned char *)a1 + v8[27]) = *((unsigned char *)a2 + v8[27]);
      *((unsigned char *)a1 + v8[28]) = *((unsigned char *)a2 + v8[28]);
      *(void *)((char *)a1 + v8[29]) = *(void *)((char *)a2 + v8[29]);
      *(void *)((char *)a1 + v8[30]) = *(void *)((char *)a2 + v8[30]);
      *((unsigned char *)a1 + v8[31]) = *((unsigned char *)a2 + v8[31]);
      uint64_t v47 = v8[32];
      uint64_t v48 = (void *)((char *)a1 + v47);
      uint64_t v49 = (void *)((char *)a2 + v47);
      uint64_t v50 = v49[1];
      *uint64_t v48 = *v49;
      v48[1] = v50;
      *(void *)((char *)a1 + v8[33]) = *(void *)((char *)a2 + v8[33]);
      uint64_t v51 = v8[34];
      uint64_t v52 = (void *)((char *)a1 + v51);
      uint64_t v53 = (void *)((char *)a2 + v51);
      uint64_t v54 = v53[1];
      *uint64_t v52 = *v53;
      v52[1] = v54;
      uint64_t v55 = v8[35];
      uint64_t v56 = (void *)((char *)a1 + v55);
      uint64_t v57 = (void *)((char *)a2 + v55);
      uint64_t v58 = v57[1];
      *uint64_t v56 = *v57;
      v56[1] = v58;
      uint64_t v59 = v8[36];
      uint64_t v60 = (char *)a1 + v59;
      uint64_t v61 = (char *)a2 + v59;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v85(v61, 1, v81))
      {
        uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v60, v61, v81);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v60, 0, 1, v81);
      }
      uint64_t v63 = v8[37];
      uint64_t v64 = (void *)((char *)a1 + v63);
      uint64_t v65 = (void *)((char *)a2 + v63);
      uint64_t v66 = v65[1];
      *uint64_t v64 = *v65;
      v64[1] = v66;
      uint64_t v67 = v8[38];
      uint64_t v68 = (void *)((char *)a1 + v67);
      uint64_t v69 = (void *)((char *)a2 + v67);
      uint64_t v70 = v69[1];
      *uint64_t v68 = *v69;
      v68[1] = v70;
      *((unsigned char *)a1 + v8[39]) = *((unsigned char *)a2 + v8[39]);
      *((unsigned char *)a1 + v8[40]) = *((unsigned char *)a2 + v8[40]);
      *((unsigned char *)a1 + v8[41]) = *((unsigned char *)a2 + v8[41]);
      *((unsigned char *)a1 + v8[42]) = *((unsigned char *)a2 + v8[42]);
      *((unsigned char *)a1 + v8[43]) = *((unsigned char *)a2 + v8[43]);
      *((unsigned char *)a1 + v8[44]) = *((unsigned char *)a2 + v8[44]);
      *((unsigned char *)a1 + v8[45]) = *((unsigned char *)a2 + v8[45]);
      uint64_t v71 = v8[46];
      uint64_t v72 = (void *)((char *)a1 + v71);
      uint64_t v73 = (void *)((char *)a2 + v71);
      uint64_t v74 = v73[1];
      *uint64_t v72 = *v73;
      v72[1] = v74;
      uint64_t v75 = *(void (**)(void *, void, uint64_t, int *))(v82 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v75(a1, 0, 1, v8);
      uint64_t v7 = v83;
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

uint64_t assignWithCopy for PlaybackIntent.PlayerConstraint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1ACA50E78(a1, &qword_1EB76EFA0);
      goto LABEL_7;
    }
    uint64_t v14 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    uint64_t v15 = *((void *)v14 - 1);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v15 + 48);
    int v17 = v16(a1, 1, v14);
    int v18 = v16(a2, 1, v14);
    if (v17)
    {
      if (!v18)
      {
        uint64_t v196 = v15;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        uint64_t v19 = *(void *)(a2 + 48);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        *(void *)(a1 + 48) = v19;
        uint64_t v20 = *(void *)(a2 + 64);
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        *(void *)(a1 + 64) = v20;
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        uint64_t v21 = v14[12];
        uint64_t v190 = (const void *)(a2 + v21);
        __dst = (void *)(a1 + v21);
        uint64_t v22 = sub_1ACE74F28();
        uint64_t v199 = *(void *)(v22 - 8);
        uint64_t v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v199 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v23(v190, 1, v22))
        {
          uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(__dst, v190, *(void *)(*(void *)(v24 - 8) + 64));
          uint64_t v25 = v199;
        }
        else
        {
          uint64_t v25 = v199;
          (*(void (**)(void *, const void *, uint64_t))(v199 + 16))(__dst, v190, v22);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v199 + 56))(__dst, 0, 1, v22);
        }
        uint64_t v89 = v14[13];
        uint64_t v90 = (void *)(a1 + v89);
        uint64_t v91 = (void *)(a2 + v89);
        *uint64_t v90 = *v91;
        v90[1] = v91[1];
        *(void *)(a1 + v14[14]) = *(void *)(a2 + v14[14]);
        uint64_t v92 = v14[15];
        uint64_t v93 = a1 + v92;
        uint64_t v94 = (uint64_t *)(a2 + v92);
        uint64_t v95 = *v94;
        *(unsigned char *)(v93 + 8) = *((unsigned char *)v94 + 8);
        *(void *)uint64_t v93 = v95;
        uint64_t v96 = v14[16];
        uint64_t v97 = (void *)(a1 + v96);
        uint64_t v98 = (const void *)(a2 + v96);
        swift_bridgeObjectRetain();
        if (v23(v98, 1, v22))
        {
          uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v97, v98, v22);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v97, 0, 1, v22);
        }
        uint64_t v100 = v14[17];
        uint64_t v101 = (void *)(a1 + v100);
        uint64_t v102 = (void *)(a2 + v100);
        *uint64_t v101 = *v102;
        v101[1] = v102[1];
        *(void *)(a1 + v14[18]) = *(void *)(a2 + v14[18]);
        *(unsigned char *)(a1 + v14[19]) = *(unsigned char *)(a2 + v14[19]);
        uint64_t v103 = v14[20];
        __dstb = (void *)(a1 + v103);
        uint64_t v104 = (const void *)(a2 + v103);
        uint64_t v105 = sub_1ACE750A8();
        uint64_t v106 = *(void *)(v105 - 8);
        uint64_t v107 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v106 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v107(v104, 1, v105))
        {
          uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
          memcpy(__dstb, v104, *(void *)(*(void *)(v108 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v106 + 16))(__dstb, v104, v105);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v106 + 56))(__dstb, 0, 1, v105);
        }
        uint64_t v109 = v14[21];
        uint64_t v110 = (void *)(a1 + v109);
        uint64_t v111 = (void *)(a2 + v109);
        *uint64_t v110 = *v111;
        v110[1] = v111[1];
        *(unsigned char *)(a1 + v14[22]) = *(unsigned char *)(a2 + v14[22]);
        *(unsigned char *)(a1 + v14[23]) = *(unsigned char *)(a2 + v14[23]);
        *(unsigned char *)(a1 + v14[24]) = *(unsigned char *)(a2 + v14[24]);
        *(unsigned char *)(a1 + v14[25]) = *(unsigned char *)(a2 + v14[25]);
        *(unsigned char *)(a1 + v14[26]) = *(unsigned char *)(a2 + v14[26]);
        *(unsigned char *)(a1 + v14[27]) = *(unsigned char *)(a2 + v14[27]);
        *(unsigned char *)(a1 + v14[28]) = *(unsigned char *)(a2 + v14[28]);
        *(void *)(a1 + v14[29]) = *(void *)(a2 + v14[29]);
        *(void *)(a1 + v14[30]) = *(void *)(a2 + v14[30]);
        *(unsigned char *)(a1 + v14[31]) = *(unsigned char *)(a2 + v14[31]);
        uint64_t v112 = v14[32];
        uint64_t v113 = (void *)(a1 + v112);
        uint64_t v114 = (void *)(a2 + v112);
        *uint64_t v113 = *v114;
        v113[1] = v114[1];
        *(void *)(a1 + v14[33]) = *(void *)(a2 + v14[33]);
        uint64_t v115 = v14[34];
        uint64_t v116 = (void *)(a1 + v115);
        uint64_t v117 = (void *)(a2 + v115);
        *uint64_t v116 = *v117;
        v116[1] = v117[1];
        uint64_t v118 = v14[35];
        uint64_t v119 = (void *)(a1 + v118);
        uint64_t v120 = (void *)(a2 + v118);
        *uint64_t v119 = *v120;
        v119[1] = v120[1];
        uint64_t v121 = v14[36];
        int v122 = (void *)(a1 + v121);
        uint64_t v123 = (const void *)(a2 + v121);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v23(v123, 1, v22))
        {
          uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v122, v123, *(void *)(*(void *)(v124 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v199 + 16))(v122, v123, v22);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v199 + 56))(v122, 0, 1, v22);
        }
        uint64_t v125 = v14[37];
        uint64_t v126 = (void *)(a1 + v125);
        uint64_t v127 = (void *)(a2 + v125);
        void *v126 = *v127;
        v126[1] = v127[1];
        uint64_t v128 = v14[38];
        uint64_t v129 = (void *)(a1 + v128);
        uint64_t v130 = (void *)(a2 + v128);
        void *v129 = *v130;
        v129[1] = v130[1];
        *(unsigned char *)(a1 + v14[39]) = *(unsigned char *)(a2 + v14[39]);
        *(unsigned char *)(a1 + v14[40]) = *(unsigned char *)(a2 + v14[40]);
        *(unsigned char *)(a1 + v14[41]) = *(unsigned char *)(a2 + v14[41]);
        *(unsigned char *)(a1 + v14[42]) = *(unsigned char *)(a2 + v14[42]);
        *(unsigned char *)(a1 + v14[43]) = *(unsigned char *)(a2 + v14[43]);
        *(unsigned char *)(a1 + v14[44]) = *(unsigned char *)(a2 + v14[44]);
        *(unsigned char *)(a1 + v14[45]) = *(unsigned char *)(a2 + v14[45]);
        uint64_t v131 = v14[46];
        uint64_t v132 = (void *)(a1 + v131);
        uint64_t v133 = (void *)(a2 + v131);
        void *v132 = *v133;
        v132[1] = v133[1];
        uint64_t v134 = *(void (**)(uint64_t, void, uint64_t, int *))(v196 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v134(a1, 0, 1, v14);
        return a1;
      }
      goto LABEL_17;
    }
    if (v18)
    {
      sub_1ACB85C50(a1, type metadata accessor for PodcastsMediaLibrary.MediaItem);
LABEL_17:
      size_t v13 = *(void *)(v7 + 64);
      goto LABEL_8;
    }
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v79 = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)(a1 + 48) = v79;
    uint64_t v80 = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(void *)(a1 + 64) = v80;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v81 = v14[12];
    uint64_t v82 = (void *)(a1 + v81);
    uint64_t v83 = (void *)(a2 + v81);
    uint64_t v84 = sub_1ACE74F28();
    uint64_t v85 = *(void *)(v84 - 8);
    uint64_t v86 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v85 + 48);
    int v87 = v86(v82, 1, v84);
    int v88 = v86(v83, 1, v84);
    if (v87)
    {
      if (!v88)
      {
        (*(void (**)(void *, void *, uint64_t))(v85 + 16))(v82, v83, v84);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
        goto LABEL_48;
      }
    }
    else
    {
      if (!v88)
      {
        (*(void (**)(void *, void *, uint64_t))(v85 + 24))(v82, v83, v84);
LABEL_48:
        uint64_t v136 = v14[13];
        uint64_t v137 = (void *)(a1 + v136);
        uint64_t v138 = (void *)(a2 + v136);
        *uint64_t v137 = *v138;
        v137[1] = v138[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(a1 + v14[14]) = *(void *)(a2 + v14[14]);
        uint64_t v139 = v14[15];
        uint64_t v140 = a1 + v139;
        uint64_t v141 = a2 + v139;
        char v142 = *(unsigned char *)(v141 + 8);
        *(void *)uint64_t v140 = *(void *)v141;
        *(unsigned char *)(v140 + 8) = v142;
        uint64_t v143 = v14[16];
        uint64_t v144 = (void *)(a1 + v143);
        uint64_t v145 = (void *)(a2 + v143);
        int v146 = v86((void *)(a1 + v143), 1, v84);
        int v147 = v86(v145, 1, v84);
        uint64_t v201 = v85;
        uint64_t v202 = v84;
        uint64_t v198 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v86;
        if (v146)
        {
          if (!v147)
          {
            (*(void (**)(void *, void *, uint64_t))(v85 + 16))(v144, v145, v84);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v85 + 56))(v144, 0, 1, v84);
            goto LABEL_54;
          }
        }
        else
        {
          if (!v147)
          {
            (*(void (**)(void *, void *, uint64_t))(v85 + 24))(v144, v145, v84);
LABEL_54:
            uint64_t v149 = v14[17];
            uint64_t v150 = (void *)(a1 + v149);
            uint64_t v151 = (void *)(a2 + v149);
            *uint64_t v150 = *v151;
            v150[1] = v151[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(a1 + v14[18]) = *(void *)(a2 + v14[18]);
            swift_retain();
            swift_release();
            *(unsigned char *)(a1 + v14[19]) = *(unsigned char *)(a2 + v14[19]);
            uint64_t v152 = v14[20];
            uint64_t v153 = (void *)(a1 + v152);
            uint64_t v154 = (void *)(a2 + v152);
            uint64_t v155 = sub_1ACE750A8();
            uint64_t v156 = *(void *)(v155 - 8);
            uint64_t v157 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v156 + 48);
            int v158 = v157(v153, 1, v155);
            int v159 = v157(v154, 1, v155);
            if (v158)
            {
              if (!v159)
              {
                (*(void (**)(void *, void *, uint64_t))(v156 + 16))(v153, v154, v155);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v156 + 56))(v153, 0, 1, v155);
                goto LABEL_60;
              }
            }
            else
            {
              if (!v159)
              {
                (*(void (**)(void *, void *, uint64_t))(v156 + 24))(v153, v154, v155);
LABEL_60:
                uint64_t v161 = v14[21];
                uint64_t v162 = (void *)(a1 + v161);
                char v163 = (void *)(a2 + v161);
                *uint64_t v162 = *v163;
                v162[1] = v163[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(unsigned char *)(a1 + v14[22]) = *(unsigned char *)(a2 + v14[22]);
                *(unsigned char *)(a1 + v14[23]) = *(unsigned char *)(a2 + v14[23]);
                *(unsigned char *)(a1 + v14[24]) = *(unsigned char *)(a2 + v14[24]);
                *(unsigned char *)(a1 + v14[25]) = *(unsigned char *)(a2 + v14[25]);
                *(unsigned char *)(a1 + v14[26]) = *(unsigned char *)(a2 + v14[26]);
                *(unsigned char *)(a1 + v14[27]) = *(unsigned char *)(a2 + v14[27]);
                *(unsigned char *)(a1 + v14[28]) = *(unsigned char *)(a2 + v14[28]);
                *(void *)(a1 + v14[29]) = *(void *)(a2 + v14[29]);
                *(void *)(a1 + v14[30]) = *(void *)(a2 + v14[30]);
                *(unsigned char *)(a1 + v14[31]) = *(unsigned char *)(a2 + v14[31]);
                uint64_t v164 = v14[32];
                uint64_t v165 = (void *)(a1 + v164);
                uint64_t v166 = (void *)(a2 + v164);
                *uint64_t v165 = *v166;
                v165[1] = v166[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)(a1 + v14[33]) = *(void *)(a2 + v14[33]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v167 = v14[34];
                uint64_t v168 = (void *)(a1 + v167);
                uint64_t v169 = (void *)(a2 + v167);
                *uint64_t v168 = *v169;
                v168[1] = v169[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v170 = v14[35];
                uint64_t v171 = (void *)(a1 + v170);
                uint64_t v172 = (void *)(a2 + v170);
                *uint64_t v171 = *v172;
                v171[1] = v172[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v173 = v14[36];
                uint64_t v174 = (void *)(a1 + v173);
                uint64_t v175 = (const void *)(a2 + v173);
                int v176 = v198(a1 + v173, 1, v202);
                int v177 = v198((uint64_t)v175, 1, v202);
                if (v176)
                {
                  if (!v177)
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v201 + 16))(v174, v175, v202);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v201 + 56))(v174, 0, 1, v202);
LABEL_66:
                    uint64_t v179 = v14[37];
                    unint64_t v180 = (void *)(a1 + v179);
                    uint64_t v181 = (void *)(a2 + v179);
                    *unint64_t v180 = *v181;
                    v180[1] = v181[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    uint64_t v182 = v14[38];
                    uint64_t v183 = (void *)(a1 + v182);
                    uint64_t v184 = (void *)(a2 + v182);
                    *uint64_t v183 = *v184;
                    v183[1] = v184[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(unsigned char *)(a1 + v14[39]) = *(unsigned char *)(a2 + v14[39]);
                    *(unsigned char *)(a1 + v14[40]) = *(unsigned char *)(a2 + v14[40]);
                    *(unsigned char *)(a1 + v14[41]) = *(unsigned char *)(a2 + v14[41]);
                    *(unsigned char *)(a1 + v14[42]) = *(unsigned char *)(a2 + v14[42]);
                    *(unsigned char *)(a1 + v14[43]) = *(unsigned char *)(a2 + v14[43]);
                    *(unsigned char *)(a1 + v14[44]) = *(unsigned char *)(a2 + v14[44]);
                    *(unsigned char *)(a1 + v14[45]) = *(unsigned char *)(a2 + v14[45]);
                    uint64_t v185 = v14[46];
                    uint64_t v186 = (void *)(a1 + v185);
                    uint64_t v187 = (void *)(a2 + v185);
                    *uint64_t v186 = *v187;
                    v186[1] = v187[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    return a1;
                  }
                }
                else
                {
                  if (!v177)
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v201 + 24))(v174, v175, v202);
                    goto LABEL_66;
                  }
                  (*(void (**)(void *, uint64_t))(v201 + 8))(v174, v202);
                }
                uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
                memcpy(v174, v175, *(void *)(*(void *)(v178 - 8) + 64));
                goto LABEL_66;
              }
              (*(void (**)(void *, uint64_t))(v156 + 8))(v153, v155);
            }
            uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
            memcpy(v153, v154, *(void *)(*(void *)(v160 - 8) + 64));
            goto LABEL_60;
          }
          (*(void (**)(void *, uint64_t))(v85 + 8))(v144, v84);
        }
        uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v144, v145, *(void *)(*(void *)(v148 - 8) + 64));
        goto LABEL_54;
      }
      (*(void (**)(void *, uint64_t))(v85 + 8))(v82, v84);
    }
    uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v82, v83, *(void *)(*(void *)(v135 - 8) + 64));
    goto LABEL_48;
  }
  if (v10)
  {
LABEL_7:
    size_t v13 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy((void *)a1, (const void *)a2, v13);
    return a1;
  }
  uint64_t v11 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v12 = (unsigned int (**)(void, uint64_t, int *))*((void *)v11 - 1);
  if (v12[6](a2, 1, v11))
  {
    memcpy((void *)a1, (const void *)a2, *(void *)(v7 + 64));
  }
  else
  {
    __dsta = v12;
    uint64_t v197 = v7;
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    uint64_t v26 = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)(a1 + 48) = v26;
    uint64_t v27 = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(void *)(a1 + 64) = v27;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    uint64_t v28 = v11[12];
    uint64_t v194 = (void *)(a1 + v28);
    uint64_t v188 = (const void *)(a2 + v28);
    uint64_t v29 = sub_1ACE74F28();
    uint64_t v200 = *(void *)(v29 - 8);
    uint64_t v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v200 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30(v188, 1, v29))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v194, v188, *(void *)(*(void *)(v31 - 8) + 64));
      uint64_t v32 = v200;
    }
    else
    {
      uint64_t v32 = v200;
      (*(void (**)(void *, const void *, uint64_t))(v200 + 16))(v194, v188, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v200 + 56))(v194, 0, 1, v29);
    }
    uint64_t v33 = v11[13];
    uint64_t v34 = (void *)(a1 + v33);
    uint64_t v35 = (void *)(a2 + v33);
    *uint64_t v34 = *v35;
    v34[1] = v35[1];
    *(void *)(a1 + v11[14]) = *(void *)(a2 + v11[14]);
    uint64_t v36 = v11[15];
    uint64_t v37 = a1 + v36;
    uint64_t v38 = (uint64_t *)(a2 + v36);
    uint64_t v39 = *v38;
    *(unsigned char *)(v37 + 8) = *((unsigned char *)v38 + 8);
    *(void *)uint64_t v37 = v39;
    uint64_t v40 = v11[16];
    uint64_t v41 = (void *)(a1 + v40);
    uint64_t v42 = (const void *)(a2 + v40);
    swift_bridgeObjectRetain();
    if (v30(v42, 1, v29))
    {
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v32 + 16))(v41, v42, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v41, 0, 1, v29);
    }
    uint64_t v44 = v11[17];
    uint64_t v45 = (void *)(a1 + v44);
    uint64_t v46 = (void *)(a2 + v44);
    *uint64_t v45 = *v46;
    v45[1] = v46[1];
    *(void *)(a1 + v11[18]) = *(void *)(a2 + v11[18]);
    *(unsigned char *)(a1 + v11[19]) = *(unsigned char *)(a2 + v11[19]);
    uint64_t v47 = v11[20];
    v195 = (void *)(a1 + v47);
    char v189 = (const void *)(a2 + v47);
    uint64_t v48 = sub_1ACE750A8();
    uint64_t v49 = *(void *)(v48 - 8);
    uint64_t v50 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v49 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v50(v189, 1, v48))
    {
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(v195, v189, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v49 + 16))(v195, v189, v48);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v195, 0, 1, v48);
    }
    uint64_t v52 = v11[21];
    uint64_t v53 = (void *)(a1 + v52);
    uint64_t v54 = (void *)(a2 + v52);
    *uint64_t v53 = *v54;
    v53[1] = v54[1];
    *(unsigned char *)(a1 + v11[22]) = *(unsigned char *)(a2 + v11[22]);
    *(unsigned char *)(a1 + v11[23]) = *(unsigned char *)(a2 + v11[23]);
    *(unsigned char *)(a1 + v11[24]) = *(unsigned char *)(a2 + v11[24]);
    *(unsigned char *)(a1 + v11[25]) = *(unsigned char *)(a2 + v11[25]);
    *(unsigned char *)(a1 + v11[26]) = *(unsigned char *)(a2 + v11[26]);
    *(unsigned char *)(a1 + v11[27]) = *(unsigned char *)(a2 + v11[27]);
    *(unsigned char *)(a1 + v11[28]) = *(unsigned char *)(a2 + v11[28]);
    *(void *)(a1 + v11[29]) = *(void *)(a2 + v11[29]);
    *(void *)(a1 + v11[30]) = *(void *)(a2 + v11[30]);
    *(unsigned char *)(a1 + v11[31]) = *(unsigned char *)(a2 + v11[31]);
    uint64_t v55 = v11[32];
    uint64_t v56 = (void *)(a1 + v55);
    uint64_t v57 = (void *)(a2 + v55);
    *uint64_t v56 = *v57;
    v56[1] = v57[1];
    *(void *)(a1 + v11[33]) = *(void *)(a2 + v11[33]);
    uint64_t v58 = v11[34];
    uint64_t v59 = (void *)(a1 + v58);
    uint64_t v60 = (void *)(a2 + v58);
    *uint64_t v59 = *v60;
    v59[1] = v60[1];
    uint64_t v61 = v11[35];
    uint64_t v62 = (void *)(a1 + v61);
    uint64_t v63 = (void *)(a2 + v61);
    *uint64_t v62 = *v63;
    v62[1] = v63[1];
    uint64_t v64 = v11[36];
    uint64_t v65 = (void *)(a1 + v64);
    uint64_t v66 = (const void *)(a2 + v64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30(v66, 1, v29))
    {
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v200 + 16))(v65, v66, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v200 + 56))(v65, 0, 1, v29);
    }
    uint64_t v7 = v197;
    uint64_t v68 = v11[37];
    uint64_t v69 = (void *)(a1 + v68);
    uint64_t v70 = (void *)(a2 + v68);
    *uint64_t v69 = *v70;
    v69[1] = v70[1];
    uint64_t v71 = v11[38];
    uint64_t v72 = (void *)(a1 + v71);
    uint64_t v73 = (void *)(a2 + v71);
    *uint64_t v72 = *v73;
    v72[1] = v73[1];
    *(unsigned char *)(a1 + v11[39]) = *(unsigned char *)(a2 + v11[39]);
    *(unsigned char *)(a1 + v11[40]) = *(unsigned char *)(a2 + v11[40]);
    *(unsigned char *)(a1 + v11[41]) = *(unsigned char *)(a2 + v11[41]);
    *(unsigned char *)(a1 + v11[42]) = *(unsigned char *)(a2 + v11[42]);
    *(unsigned char *)(a1 + v11[43]) = *(unsigned char *)(a2 + v11[43]);
    *(unsigned char *)(a1 + v11[44]) = *(unsigned char *)(a2 + v11[44]);
    *(unsigned char *)(a1 + v11[45]) = *(unsigned char *)(a2 + v11[45]);
    uint64_t v74 = v11[46];
    uint64_t v75 = (void *)(a1 + v74);
    uint64_t v76 = (void *)(a2 + v74);
    *uint64_t v75 = *v76;
    v75[1] = v76[1];
    uint64_t v77 = (void (*)(uint64_t, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v77(a1, 0, 1, v11);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

_OWORD *initializeWithTake for PlaybackIntent.PlayerConstraint(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    uint64_t v9 = *((void *)v8 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    else
    {
      uint64_t v37 = v9;
      long long v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      a1[2] = a2[2];
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
      *((void *)a1 + 8) = *((void *)a2 + 8);
      *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
      long long v11 = a2[6];
      a1[5] = a2[5];
      a1[6] = v11;
      a1[7] = a2[7];
      uint64_t v12 = v8[12];
      size_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_1ACE74F28();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      if (v38(v14, 1, v15))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      *(_OWORD *)((char *)a1 + v8[13]) = *(_OWORD *)((char *)a2 + v8[13]);
      *(void *)((char *)a1 + v8[14]) = *(void *)((char *)a2 + v8[14]);
      uint64_t v18 = v8[15];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      v19[8] = v20[8];
      *(void *)uint64_t v19 = *(void *)v20;
      uint64_t v21 = v8[16];
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v36 = v16;
      if (v38((char *)a2 + v21, 1, v15))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v23, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
      }
      *(_OWORD *)((char *)a1 + v8[17]) = *(_OWORD *)((char *)a2 + v8[17]);
      *(void *)((char *)a1 + v8[18]) = *(void *)((char *)a2 + v8[18]);
      *((unsigned char *)a1 + v8[19]) = *((unsigned char *)a2 + v8[19]);
      uint64_t v25 = v8[20];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v28 = sub_1ACE750A8();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
        memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      *(_OWORD *)((char *)a1 + v8[21]) = *(_OWORD *)((char *)a2 + v8[21]);
      *((unsigned char *)a1 + v8[22]) = *((unsigned char *)a2 + v8[22]);
      *((unsigned char *)a1 + v8[23]) = *((unsigned char *)a2 + v8[23]);
      *((unsigned char *)a1 + v8[24]) = *((unsigned char *)a2 + v8[24]);
      *((unsigned char *)a1 + v8[25]) = *((unsigned char *)a2 + v8[25]);
      *((unsigned char *)a1 + v8[26]) = *((unsigned char *)a2 + v8[26]);
      *((unsigned char *)a1 + v8[27]) = *((unsigned char *)a2 + v8[27]);
      *((unsigned char *)a1 + v8[28]) = *((unsigned char *)a2 + v8[28]);
      *(void *)((char *)a1 + v8[29]) = *(void *)((char *)a2 + v8[29]);
      *(void *)((char *)a1 + v8[30]) = *(void *)((char *)a2 + v8[30]);
      *((unsigned char *)a1 + v8[31]) = *((unsigned char *)a2 + v8[31]);
      *(_OWORD *)((char *)a1 + v8[32]) = *(_OWORD *)((char *)a2 + v8[32]);
      *(void *)((char *)a1 + v8[33]) = *(void *)((char *)a2 + v8[33]);
      *(_OWORD *)((char *)a1 + v8[34]) = *(_OWORD *)((char *)a2 + v8[34]);
      *(_OWORD *)((char *)a1 + v8[35]) = *(_OWORD *)((char *)a2 + v8[35]);
      uint64_t v31 = v8[36];
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      if (v38((char *)a2 + v31, 1, v15))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v32, v33, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v32, 0, 1, v15);
      }
      *(_OWORD *)((char *)a1 + v8[37]) = *(_OWORD *)((char *)a2 + v8[37]);
      *(_OWORD *)((char *)a1 + v8[38]) = *(_OWORD *)((char *)a2 + v8[38]);
      *((unsigned char *)a1 + v8[39]) = *((unsigned char *)a2 + v8[39]);
      *((unsigned char *)a1 + v8[40]) = *((unsigned char *)a2 + v8[40]);
      *((unsigned char *)a1 + v8[41]) = *((unsigned char *)a2 + v8[41]);
      *((unsigned char *)a1 + v8[42]) = *((unsigned char *)a2 + v8[42]);
      *((unsigned char *)a1 + v8[43]) = *((unsigned char *)a2 + v8[43]);
      *((unsigned char *)a1 + v8[44]) = *((unsigned char *)a2 + v8[44]);
      *((unsigned char *)a1 + v8[45]) = *((unsigned char *)a2 + v8[45]);
      *(_OWORD *)((char *)a1 + v8[46]) = *(_OWORD *)((char *)a2 + v8[46]);
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v37 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

uint64_t assignWithTake for PlaybackIntent.PlayerConstraint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1ACA50E78(a1, &qword_1EB76EFA0);
      goto LABEL_7;
    }
    uint64_t v14 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    uint64_t v15 = *((void *)v14 - 1);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v15 + 48);
    int v17 = v16(a1, 1, v14);
    int v18 = v16(a2, 1, v14);
    if (v17)
    {
      if (!v18)
      {
        long long v19 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v19;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        long long v20 = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 96) = v20;
        *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
        uint64_t v21 = v14[12];
        uint64_t v22 = (void *)(a1 + v21);
        uint64_t v23 = (const void *)(a2 + v21);
        uint64_t v24 = sub_1ACE74F28();
        uint64_t v25 = *(void *)(v24 - 8);
        uint64_t v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
        if (v26(v23, 1, v24))
        {
          uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v22, v23, v24);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        }
        *(_OWORD *)(a1 + v14[13]) = *(_OWORD *)(a2 + v14[13]);
        *(void *)(a1 + v14[14]) = *(void *)(a2 + v14[14]);
        uint64_t v68 = v14[15];
        uint64_t v69 = a1 + v68;
        uint64_t v70 = a2 + v68;
        *(unsigned char *)(v69 + 8) = *(unsigned char *)(v70 + 8);
        *(void *)uint64_t v69 = *(void *)v70;
        uint64_t v71 = v14[16];
        uint64_t v72 = (void *)(a1 + v71);
        uint64_t v73 = (const void *)(a2 + v71);
        int v158 = v26;
        uint64_t v161 = v25;
        if (v26((const void *)(a2 + v71), 1, v24))
        {
          uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v72, v73, v24);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v72, 0, 1, v24);
        }
        *(_OWORD *)(a1 + v14[17]) = *(_OWORD *)(a2 + v14[17]);
        *(void *)(a1 + v14[18]) = *(void *)(a2 + v14[18]);
        *(unsigned char *)(a1 + v14[19]) = *(unsigned char *)(a2 + v14[19]);
        uint64_t v75 = v14[20];
        uint64_t v76 = (void *)(a1 + v75);
        uint64_t v77 = (const void *)(a2 + v75);
        uint64_t v78 = sub_1ACE750A8();
        uint64_t v79 = *(void *)(v78 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
        {
          uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
          memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v79 + 32))(v76, v77, v78);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
        }
        *(_OWORD *)(a1 + v14[21]) = *(_OWORD *)(a2 + v14[21]);
        *(unsigned char *)(a1 + v14[22]) = *(unsigned char *)(a2 + v14[22]);
        *(unsigned char *)(a1 + v14[23]) = *(unsigned char *)(a2 + v14[23]);
        *(unsigned char *)(a1 + v14[24]) = *(unsigned char *)(a2 + v14[24]);
        *(unsigned char *)(a1 + v14[25]) = *(unsigned char *)(a2 + v14[25]);
        *(unsigned char *)(a1 + v14[26]) = *(unsigned char *)(a2 + v14[26]);
        *(unsigned char *)(a1 + v14[27]) = *(unsigned char *)(a2 + v14[27]);
        *(unsigned char *)(a1 + v14[28]) = *(unsigned char *)(a2 + v14[28]);
        *(void *)(a1 + v14[29]) = *(void *)(a2 + v14[29]);
        *(void *)(a1 + v14[30]) = *(void *)(a2 + v14[30]);
        *(unsigned char *)(a1 + v14[31]) = *(unsigned char *)(a2 + v14[31]);
        *(_OWORD *)(a1 + v14[32]) = *(_OWORD *)(a2 + v14[32]);
        *(void *)(a1 + v14[33]) = *(void *)(a2 + v14[33]);
        *(_OWORD *)(a1 + v14[34]) = *(_OWORD *)(a2 + v14[34]);
        *(_OWORD *)(a1 + v14[35]) = *(_OWORD *)(a2 + v14[35]);
        uint64_t v81 = v14[36];
        uint64_t v82 = (void *)(a1 + v81);
        uint64_t v83 = (const void *)(a2 + v81);
        if (v158((const void *)(a2 + v81), 1, v24))
        {
          uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v161 + 32))(v82, v83, v24);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v161 + 56))(v82, 0, 1, v24);
        }
        *(_OWORD *)(a1 + v14[37]) = *(_OWORD *)(a2 + v14[37]);
        *(_OWORD *)(a1 + v14[38]) = *(_OWORD *)(a2 + v14[38]);
        *(unsigned char *)(a1 + v14[39]) = *(unsigned char *)(a2 + v14[39]);
        *(unsigned char *)(a1 + v14[40]) = *(unsigned char *)(a2 + v14[40]);
        *(unsigned char *)(a1 + v14[41]) = *(unsigned char *)(a2 + v14[41]);
        *(unsigned char *)(a1 + v14[42]) = *(unsigned char *)(a2 + v14[42]);
        *(unsigned char *)(a1 + v14[43]) = *(unsigned char *)(a2 + v14[43]);
        *(unsigned char *)(a1 + v14[44]) = *(unsigned char *)(a2 + v14[44]);
        *(unsigned char *)(a1 + v14[45]) = *(unsigned char *)(a2 + v14[45]);
        *(_OWORD *)(a1 + v14[46]) = *(_OWORD *)(a2 + v14[46]);
        (*(void (**)(uint64_t, void, uint64_t, int *))(v15 + 56))(a1, 0, 1, v14);
        return a1;
      }
      goto LABEL_17;
    }
    if (v18)
    {
      sub_1ACB85C50(a1, type metadata accessor for PodcastsMediaLibrary.MediaItem);
LABEL_17:
      size_t v13 = *(void *)(v7 + 64);
      goto LABEL_8;
    }
    uint64_t v54 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v54;
    swift_bridgeObjectRelease();
    uint64_t v55 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v55;
    swift_bridgeObjectRelease();
    uint64_t v56 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v56;
    swift_bridgeObjectRelease();
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    uint64_t v57 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v57;
    swift_bridgeObjectRelease();
    uint64_t v58 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v58;
    swift_bridgeObjectRelease();
    uint64_t v59 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v59;
    swift_bridgeObjectRelease();
    uint64_t v60 = v14[12];
    uint64_t v61 = (void *)(a1 + v60);
    uint64_t v62 = (void *)(a2 + v60);
    uint64_t v63 = sub_1ACE74F28();
    uint64_t v64 = *(void *)(v63 - 8);
    uint64_t v65 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v64 + 48);
    int v66 = v65(v61, 1, v63);
    int v67 = v65(v62, 1, v63);
    if (v66)
    {
      if (!v67)
      {
        (*(void (**)(void *, void *, uint64_t))(v64 + 32))(v61, v62, v63);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        goto LABEL_48;
      }
    }
    else
    {
      if (!v67)
      {
        (*(void (**)(void *, void *, uint64_t))(v64 + 40))(v61, v62, v63);
LABEL_48:
        uint64_t v86 = v14[13];
        int v87 = (void *)(a1 + v86);
        int v88 = (uint64_t *)(a2 + v86);
        uint64_t v90 = *v88;
        uint64_t v89 = v88[1];
        *int v87 = v90;
        v87[1] = v89;
        swift_bridgeObjectRelease();
        *(void *)(a1 + v14[14]) = *(void *)(a2 + v14[14]);
        uint64_t v91 = v14[15];
        uint64_t v92 = a1 + v91;
        uint64_t v93 = a2 + v91;
        *(void *)uint64_t v92 = *(void *)v93;
        *(unsigned char *)(v92 + 8) = *(unsigned char *)(v93 + 8);
        uint64_t v94 = v14[16];
        uint64_t v95 = (void *)(a1 + v94);
        uint64_t v96 = (void *)(a2 + v94);
        int v97 = v65((void *)(a1 + v94), 1, v63);
        int v98 = v65(v96, 1, v63);
        uint64_t v159 = v64;
        uint64_t v162 = v63;
        uint64_t v155 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v65;
        if (v97)
        {
          if (!v98)
          {
            (*(void (**)(void *, void *, uint64_t))(v64 + 32))(v95, v96, v63);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v95, 0, 1, v63);
            goto LABEL_54;
          }
        }
        else
        {
          if (!v98)
          {
            (*(void (**)(void *, void *, uint64_t))(v64 + 40))(v95, v96, v63);
LABEL_54:
            uint64_t v100 = v14[17];
            uint64_t v101 = (void *)(a1 + v100);
            uint64_t v102 = (uint64_t *)(a2 + v100);
            uint64_t v104 = *v102;
            uint64_t v103 = v102[1];
            *uint64_t v101 = v104;
            v101[1] = v103;
            swift_bridgeObjectRelease();
            *(void *)(a1 + v14[18]) = *(void *)(a2 + v14[18]);
            swift_release();
            *(unsigned char *)(a1 + v14[19]) = *(unsigned char *)(a2 + v14[19]);
            uint64_t v105 = v14[20];
            uint64_t v106 = (void *)(a1 + v105);
            uint64_t v107 = (void *)(a2 + v105);
            uint64_t v108 = sub_1ACE750A8();
            uint64_t v109 = *(void *)(v108 - 8);
            uint64_t v110 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v109 + 48);
            int v111 = v110(v106, 1, v108);
            int v112 = v110(v107, 1, v108);
            if (v111)
            {
              if (!v112)
              {
                (*(void (**)(void *, void *, uint64_t))(v109 + 32))(v106, v107, v108);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
                goto LABEL_60;
              }
            }
            else
            {
              if (!v112)
              {
                (*(void (**)(void *, void *, uint64_t))(v109 + 40))(v106, v107, v108);
LABEL_60:
                uint64_t v114 = v14[21];
                uint64_t v115 = (void *)(a1 + v114);
                uint64_t v116 = (uint64_t *)(a2 + v114);
                uint64_t v118 = *v116;
                uint64_t v117 = v116[1];
                *uint64_t v115 = v118;
                v115[1] = v117;
                swift_bridgeObjectRelease();
                *(unsigned char *)(a1 + v14[22]) = *(unsigned char *)(a2 + v14[22]);
                *(unsigned char *)(a1 + v14[23]) = *(unsigned char *)(a2 + v14[23]);
                *(unsigned char *)(a1 + v14[24]) = *(unsigned char *)(a2 + v14[24]);
                *(unsigned char *)(a1 + v14[25]) = *(unsigned char *)(a2 + v14[25]);
                *(unsigned char *)(a1 + v14[26]) = *(unsigned char *)(a2 + v14[26]);
                *(unsigned char *)(a1 + v14[27]) = *(unsigned char *)(a2 + v14[27]);
                *(unsigned char *)(a1 + v14[28]) = *(unsigned char *)(a2 + v14[28]);
                *(void *)(a1 + v14[29]) = *(void *)(a2 + v14[29]);
                *(void *)(a1 + v14[30]) = *(void *)(a2 + v14[30]);
                *(unsigned char *)(a1 + v14[31]) = *(unsigned char *)(a2 + v14[31]);
                uint64_t v119 = v14[32];
                uint64_t v120 = (void *)(a1 + v119);
                uint64_t v121 = (uint64_t *)(a2 + v119);
                uint64_t v123 = *v121;
                uint64_t v122 = v121[1];
                *uint64_t v120 = v123;
                v120[1] = v122;
                swift_bridgeObjectRelease();
                *(void *)(a1 + v14[33]) = *(void *)(a2 + v14[33]);
                swift_bridgeObjectRelease();
                uint64_t v124 = v14[34];
                uint64_t v125 = (void *)(a1 + v124);
                uint64_t v126 = (uint64_t *)(a2 + v124);
                uint64_t v128 = *v126;
                uint64_t v127 = v126[1];
                void *v125 = v128;
                v125[1] = v127;
                swift_bridgeObjectRelease();
                uint64_t v129 = v14[35];
                uint64_t v130 = (void *)(a1 + v129);
                uint64_t v131 = (uint64_t *)(a2 + v129);
                uint64_t v133 = *v131;
                uint64_t v132 = v131[1];
                *uint64_t v130 = v133;
                v130[1] = v132;
                swift_bridgeObjectRelease();
                uint64_t v134 = v14[36];
                uint64_t v135 = (void *)(a1 + v134);
                uint64_t v136 = (const void *)(a2 + v134);
                int v137 = v155(a1 + v134, 1, v162);
                int v138 = v155((uint64_t)v136, 1, v162);
                if (v137)
                {
                  if (!v138)
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v159 + 32))(v135, v136, v162);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v159 + 56))(v135, 0, 1, v162);
LABEL_66:
                    uint64_t v140 = v14[37];
                    uint64_t v141 = (void *)(a1 + v140);
                    char v142 = (uint64_t *)(a2 + v140);
                    uint64_t v144 = *v142;
                    uint64_t v143 = v142[1];
                    *uint64_t v141 = v144;
                    v141[1] = v143;
                    swift_bridgeObjectRelease();
                    uint64_t v145 = v14[38];
                    int v146 = (void *)(a1 + v145);
                    int v147 = (uint64_t *)(a2 + v145);
                    uint64_t v149 = *v147;
                    uint64_t v148 = v147[1];
                    *int v146 = v149;
                    v146[1] = v148;
                    swift_bridgeObjectRelease();
                    *(unsigned char *)(a1 + v14[39]) = *(unsigned char *)(a2 + v14[39]);
                    *(unsigned char *)(a1 + v14[40]) = *(unsigned char *)(a2 + v14[40]);
                    *(unsigned char *)(a1 + v14[41]) = *(unsigned char *)(a2 + v14[41]);
                    *(unsigned char *)(a1 + v14[42]) = *(unsigned char *)(a2 + v14[42]);
                    *(unsigned char *)(a1 + v14[43]) = *(unsigned char *)(a2 + v14[43]);
                    *(unsigned char *)(a1 + v14[44]) = *(unsigned char *)(a2 + v14[44]);
                    *(unsigned char *)(a1 + v14[45]) = *(unsigned char *)(a2 + v14[45]);
                    uint64_t v150 = v14[46];
                    uint64_t v151 = (void *)(a1 + v150);
                    uint64_t v152 = (uint64_t *)(a2 + v150);
                    uint64_t v154 = *v152;
                    uint64_t v153 = v152[1];
                    *uint64_t v151 = v154;
                    v151[1] = v153;
                    swift_bridgeObjectRelease();
                    return a1;
                  }
                }
                else
                {
                  if (!v138)
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v159 + 40))(v135, v136, v162);
                    goto LABEL_66;
                  }
                  (*(void (**)(void *, uint64_t))(v159 + 8))(v135, v162);
                }
                uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
                memcpy(v135, v136, *(void *)(*(void *)(v139 - 8) + 64));
                goto LABEL_66;
              }
              (*(void (**)(void *, uint64_t))(v109 + 8))(v106, v108);
            }
            uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
            memcpy(v106, v107, *(void *)(*(void *)(v113 - 8) + 64));
            goto LABEL_60;
          }
          (*(void (**)(void *, uint64_t))(v64 + 8))(v95, v63);
        }
        uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v95, v96, *(void *)(*(void *)(v99 - 8) + 64));
        goto LABEL_54;
      }
      (*(void (**)(void *, uint64_t))(v64 + 8))(v61, v63);
    }
    uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v61, v62, *(void *)(*(void *)(v85 - 8) + 64));
    goto LABEL_48;
  }
  if (v10)
  {
LABEL_7:
    size_t v13 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy((void *)a1, (const void *)a2, v13);
    return a1;
  }
  long long v11 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v12 + 48))(a2, 1, v11))
  {
    memcpy((void *)a1, (const void *)a2, *(void *)(v7 + 64));
  }
  else
  {
    uint64_t v157 = v12;
    long long v28 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v28;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    long long v29 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v29;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    uint64_t v30 = v11[12];
    uint64_t v31 = (void *)(a1 + v30);
    uint64_t v32 = (const void *)(a2 + v30);
    uint64_t v33 = sub_1ACE74F28();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v160 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48);
    if (v160(v32, 1, v33))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v34 + 32))(v31, v32, v33);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    *(_OWORD *)(a1 + v11[13]) = *(_OWORD *)(a2 + v11[13]);
    *(void *)(a1 + v11[14]) = *(void *)(a2 + v11[14]);
    uint64_t v36 = v11[15];
    uint64_t v37 = a1 + v36;
    uint64_t v38 = a2 + v36;
    *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
    *(void *)uint64_t v37 = *(void *)v38;
    uint64_t v39 = v11[16];
    uint64_t v40 = (void *)(a1 + v39);
    uint64_t v41 = (const void *)(a2 + v39);
    uint64_t v156 = v34;
    if (v160((const void *)(a2 + v39), 1, v33))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v34 + 32))(v40, v41, v33);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v40, 0, 1, v33);
    }
    *(_OWORD *)(a1 + v11[17]) = *(_OWORD *)(a2 + v11[17]);
    *(void *)(a1 + v11[18]) = *(void *)(a2 + v11[18]);
    *(unsigned char *)(a1 + v11[19]) = *(unsigned char *)(a2 + v11[19]);
    uint64_t v43 = v11[20];
    uint64_t v44 = (void *)(a1 + v43);
    uint64_t v45 = (const void *)(a2 + v43);
    uint64_t v46 = sub_1ACE750A8();
    uint64_t v47 = *(void *)(v46 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v47 + 32))(v44, v45, v46);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    *(_OWORD *)(a1 + v11[21]) = *(_OWORD *)(a2 + v11[21]);
    *(unsigned char *)(a1 + v11[22]) = *(unsigned char *)(a2 + v11[22]);
    *(unsigned char *)(a1 + v11[23]) = *(unsigned char *)(a2 + v11[23]);
    *(unsigned char *)(a1 + v11[24]) = *(unsigned char *)(a2 + v11[24]);
    *(unsigned char *)(a1 + v11[25]) = *(unsigned char *)(a2 + v11[25]);
    *(unsigned char *)(a1 + v11[26]) = *(unsigned char *)(a2 + v11[26]);
    *(unsigned char *)(a1 + v11[27]) = *(unsigned char *)(a2 + v11[27]);
    *(unsigned char *)(a1 + v11[28]) = *(unsigned char *)(a2 + v11[28]);
    *(void *)(a1 + v11[29]) = *(void *)(a2 + v11[29]);
    *(void *)(a1 + v11[30]) = *(void *)(a2 + v11[30]);
    *(unsigned char *)(a1 + v11[31]) = *(unsigned char *)(a2 + v11[31]);
    *(_OWORD *)(a1 + v11[32]) = *(_OWORD *)(a2 + v11[32]);
    *(void *)(a1 + v11[33]) = *(void *)(a2 + v11[33]);
    *(_OWORD *)(a1 + v11[34]) = *(_OWORD *)(a2 + v11[34]);
    *(_OWORD *)(a1 + v11[35]) = *(_OWORD *)(a2 + v11[35]);
    uint64_t v49 = v11[36];
    uint64_t v50 = (void *)(a1 + v49);
    uint64_t v51 = (const void *)(a2 + v49);
    if (v160((const void *)(a2 + v49), 1, v33))
    {
      uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v156 + 32))(v50, v51, v33);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v156 + 56))(v50, 0, 1, v33);
    }
    *(_OWORD *)(a1 + v11[37]) = *(_OWORD *)(a2 + v11[37]);
    *(_OWORD *)(a1 + v11[38]) = *(_OWORD *)(a2 + v11[38]);
    *(unsigned char *)(a1 + v11[39]) = *(unsigned char *)(a2 + v11[39]);
    *(unsigned char *)(a1 + v11[40]) = *(unsigned char *)(a2 + v11[40]);
    *(unsigned char *)(a1 + v11[41]) = *(unsigned char *)(a2 + v11[41]);
    *(unsigned char *)(a1 + v11[42]) = *(unsigned char *)(a2 + v11[42]);
    *(unsigned char *)(a1 + v11[43]) = *(unsigned char *)(a2 + v11[43]);
    *(unsigned char *)(a1 + v11[44]) = *(unsigned char *)(a2 + v11[44]);
    *(unsigned char *)(a1 + v11[45]) = *(unsigned char *)(a2 + v11[45]);
    *(_OWORD *)(a1 + v11[46]) = *(_OWORD *)(a2 + v11[46]);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v157 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackIntent.PlayerConstraint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACB98B78);
}

uint64_t sub_1ACB98B78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4) {
    return v5 - 3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PlaybackIntent.PlayerConstraint(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACB98BFC);
}

uint64_t sub_1ACB98BFC(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 3);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1ACB98C84(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 3, v2);
}

uint64_t sub_1ACB98CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 3, v4);
}

void sub_1ACB98D64()
{
  sub_1ACB8F440();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

unsigned char *storeEnumTagSinglePayload for PlaybackIntent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB98EA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackIntent.CodingKeys()
{
  return &type metadata for PlaybackIntent.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PlaybackIntent.Option.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB98FACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackIntent.Option.CodingKeys()
{
  return &type metadata for PlaybackIntent.Option.CodingKeys;
}

ValueMetadata *type metadata accessor for PlaybackIntent.Option.StartPlaybackCodingKeys()
{
  return &type metadata for PlaybackIntent.Option.StartPlaybackCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PlaybackIntent.Option.InitialItemPlayheadOverrideCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACB99090);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackIntent.Option.InitialItemPlayheadOverrideCodingKeys()
{
  return &type metadata for PlaybackIntent.Option.InitialItemPlayheadOverrideCodingKeys;
}

ValueMetadata *type metadata accessor for PlaybackIntent.Option.PreventQueueingCodingKeys()
{
  return &type metadata for PlaybackIntent.Option.PreventQueueingCodingKeys;
}

ValueMetadata *type metadata accessor for PlaybackIntent.Option.ForceLocalPlaybackCodingKeys()
{
  return &type metadata for PlaybackIntent.Option.ForceLocalPlaybackCodingKeys;
}

ValueMetadata *type metadata accessor for PlaybackIntent.Option.SmartPlayCodingKeys()
{
  return &type metadata for PlaybackIntent.Option.SmartPlayCodingKeys;
}

ValueMetadata *type metadata accessor for PlaybackIntent.Option.IgnoreContinuousPlaybackSettingCodingKeys()
{
  return &type metadata for PlaybackIntent.Option.IgnoreContinuousPlaybackSettingCodingKeys;
}

unint64_t sub_1ACB9910C()
{
  unint64_t result = qword_1E99F2A50;
  if (!qword_1E99F2A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2A50);
  }
  return result;
}

unint64_t sub_1ACB99164()
{
  unint64_t result = qword_1E99F2A58;
  if (!qword_1E99F2A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2A58);
  }
  return result;
}

unint64_t sub_1ACB991BC()
{
  unint64_t result = qword_1E99F2A60;
  if (!qword_1E99F2A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2A60);
  }
  return result;
}

unint64_t sub_1ACB99214()
{
  unint64_t result = qword_1EB770FB8;
  if (!qword_1EB770FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770FB8);
  }
  return result;
}

unint64_t sub_1ACB9926C()
{
  unint64_t result = qword_1EB770FB0;
  if (!qword_1EB770FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770FB0);
  }
  return result;
}

unint64_t sub_1ACB992C4()
{
  unint64_t result = qword_1E99F2A68;
  if (!qword_1E99F2A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2A68);
  }
  return result;
}

unint64_t sub_1ACB9931C()
{
  unint64_t result = qword_1E99F2A70;
  if (!qword_1E99F2A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2A70);
  }
  return result;
}

unint64_t sub_1ACB99374()
{
  unint64_t result = qword_1E99F2A78;
  if (!qword_1E99F2A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2A78);
  }
  return result;
}

unint64_t sub_1ACB993CC()
{
  unint64_t result = qword_1E99F2A80;
  if (!qword_1E99F2A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2A80);
  }
  return result;
}

unint64_t sub_1ACB99424()
{
  unint64_t result = qword_1E99F2A88;
  if (!qword_1E99F2A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2A88);
  }
  return result;
}

unint64_t sub_1ACB9947C()
{
  unint64_t result = qword_1E99F2A90;
  if (!qword_1E99F2A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2A90);
  }
  return result;
}

unint64_t sub_1ACB994D4()
{
  unint64_t result = qword_1E99F2A98;
  if (!qword_1E99F2A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2A98);
  }
  return result;
}

unint64_t sub_1ACB9952C()
{
  unint64_t result = qword_1E99F2AA0;
  if (!qword_1E99F2AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2AA0);
  }
  return result;
}

unint64_t sub_1ACB99584()
{
  unint64_t result = qword_1E99F2AA8;
  if (!qword_1E99F2AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2AA8);
  }
  return result;
}

unint64_t sub_1ACB995DC()
{
  unint64_t result = qword_1E99F2AB0;
  if (!qword_1E99F2AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2AB0);
  }
  return result;
}

unint64_t sub_1ACB99634()
{
  unint64_t result = qword_1E99F2AB8;
  if (!qword_1E99F2AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2AB8);
  }
  return result;
}

unint64_t sub_1ACB9968C()
{
  unint64_t result = qword_1E99F2AC0;
  if (!qword_1E99F2AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2AC0);
  }
  return result;
}

unint64_t sub_1ACB996E4()
{
  unint64_t result = qword_1E99F2AC8;
  if (!qword_1E99F2AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2AC8);
  }
  return result;
}

unint64_t sub_1ACB9973C()
{
  unint64_t result = qword_1E99F2AD0;
  if (!qword_1E99F2AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2AD0);
  }
  return result;
}

uint64_t sub_1ACB99790(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x616C507472617473 && a2 == 0xED00006B63616279;
  if (v3 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001ACECAB90 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x51746E6576657270 && a2 == 0xEF676E6965756575 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ACECABB0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x616C507472616D73 && a2 == 0xE900000000000079 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001ACECABD0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1ACB99A34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x747465537473696CLL && a2 == 0xEC00000073676E69 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496C616974696E69 && a2 == 0xEB000000006D6574 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ACECABF0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

void *sub_1ACB99C68(void *a1)
{
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[5];
  unint64_t v4 = a1[6];
  swift_bridgeObjectRetain();
  sub_1ACA50D88(v2, v3, v4);
  return a1;
}

uint64_t sub_1ACB99CC8(uint64_t a1)
{
  uint64_t v13 = *(void *)(a1 + 88);
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v12 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v4 = *(void *)(a1 + 120);
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v6 = *(void *)(a1 + 136);
  uint64_t v8 = *(void *)(a1 + 144);
  uint64_t v7 = *(void *)(a1 + 152);
  __int16 v9 = *(_WORD *)(a1 + 168);
  uint64_t v10 = *(void *)(a1 + 160);
  sub_1ACA6371C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(_WORD *)(a1 + 80));
  sub_1ACA6371C(v13, v12, v2, v3, v4, v5, v6, v8, v7, v10, v9);
  return a1;
}

uint64_t sub_1ACB99D98()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F38);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for PlaybackIntent(0);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  uint64_t v7 = v0 + ((v3 + v4 + v6) & ~v6);
  sub_1ACA63688(*(void *)v7, *(void *)(v7 + 8), *(void *)(v7 + 16), *(void *)(v7 + 24), *(unsigned char *)(v7 + 32));
  if (*(unsigned char *)(v7 + 120) != 2) {
    sub_1ACA63738(*(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(void *)(v7 + 72), *(void *)(v7 + 80), *(void *)(v7 + 88), *(void *)(v7 + 96), *(unsigned char *)(v7 + 104));
  }
  uint64_t v8 = v7 + *(int *)(v5 + 24);
  __int16 v9 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v9 - 1) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + v9[12];
    uint64_t v11 = sub_1ACE74F28();
    uint64_t v19 = *(void *)(v11 - 8);
    uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    if (!v12(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v10, v11);
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = v8 + v9[16];
    if (!v12(v13, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v13, v11);
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v14 = v8 + v9[20];
    uint64_t v15 = sub_1ACE750A8();
    uint64_t v16 = *(void *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = v8 + v9[36];
    if (!v12(v17, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v11);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACB9A208()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F38) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for PlaybackIntent(0) - 8);
  uint64_t v5 = (void *)v0[2];
  uint64_t v6 = v0[3];
  uint64_t v7 = v0[4];
  uint64_t v8 = (uint64_t)v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return sub_1ACB817AC(v5, v6, v7, (uint64_t)v0 + v2, v8);
}

uint64_t PodcastStateController.stateTransitionRules.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PodcastStateController.__allocating_init(dataSources:transitionRules:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  PodcastStateController.init(dataSources:transitionRules:)(a1, a2);
  return v4;
}

void *PodcastStateController.init(dataSources:transitionRules:)(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  uint64_t v3 = sub_1ACE76CE8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = MEMORY[0x1E4FBC868];
  v2[3] = MEMORY[0x1E4FBC868];
  v2[4] = v9;
  sub_1ACA51E1C();
  sub_1ACE75E08();
  uint64_t v15 = MEMORY[0x1E4FBC860];
  sub_1ACABEAC4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACABEB1C();
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCC58], v3);
  uint64_t v10 = sub_1ACE76D28();
  v2[2] = v13;
  v2[5] = v14;
  v2[6] = v10;
  sub_1ACB9A560();
  return v2;
}

void sub_1ACB9A560()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (uint64_t *)(v1 + 40);
    do
    {
      uint64_t v4 = *v3;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v6 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v4 + 16);
      swift_unknownObjectRetain();
      uint64_t v7 = swift_retain();
      v6(v7, &protocol witness table for PodcastStateController, ObjectType, v4);
      (*(void (**)(uint64_t, uint64_t))(v4 + 32))(ObjectType, v4);
      swift_unknownObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACB9A660()
{
  type metadata accessor for PodcastStateMachine();
  sub_1ACE76D08();
  return v1;
}

uint64_t sub_1ACB9A6D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 24);
  if (*(void *)(v8 + 16) && (uint64_t v9 = sub_1ACA65CC4(a2), (v10 & 1) != 0))
  {
    *a4 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
    return swift_retain();
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 40);
    type metadata accessor for PodcastStateMachine();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 88) = MEMORY[0x1E4FBC860];
    id v14 = objc_allocWithZone(MEMORY[0x1E4F28FD0]);
    sub_1ACB74E38(a3, (void (*)(void, void, void, void, void))sub_1ACA50D88);
    swift_bridgeObjectRetain();
    *(void *)(v13 + 104) = objc_msgSend(v14, sel_init);
    *(void *)(v13 + 16) = a2;
    *(unsigned char *)(v13 + 24) = 0;
    *(void *)(v13 + 32) = 0;
    *(void *)(v13 + 40) = 0;
    sub_1ACA8F4F4((uint64_t)a3, v13 + 48);
    *(void *)(v13 + 96) = v12;
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = 0x8000000000000000;
    sub_1ACD0DE48(v13, a2, isUniquelyReferenced_nonNull_native);
    *(void *)(a1 + 24) = v16;
    swift_bridgeObjectRelease();
    uint64_t result = swift_endAccess();
    *a4 = v13;
  }
  return result;
}

uint64_t sub_1ACB9A860@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACB9A6D0(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), a1);
}

uint64_t sub_1ACB9A880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1ACA8F4F4(a3, (uint64_t)v5);
  type metadata accessor for PodcastStateMachine();
  sub_1ACE76D08();
  return v4;
}

uint64_t sub_1ACB9A910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 32);
  if (!*(void *)(v10 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1ACA657FC(a2, a3);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v15 = *(void *)(a1 + 40);
    type metadata accessor for PodcastStateMachine();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 88) = MEMORY[0x1E4FBC860];
    id v16 = objc_allocWithZone(MEMORY[0x1E4F28FD0]);
    swift_bridgeObjectRetain();
    sub_1ACB74E38(a4, (void (*)(void, void, void, void, void))sub_1ACA50D88);
    swift_bridgeObjectRetain();
    *(void *)(v13 + 104) = objc_msgSend(v16, sel_init);
    *(void *)(v13 + 16) = 0;
    *(unsigned char *)(v13 + 24) = 1;
    *(void *)(v13 + 32) = a2;
    *(void *)(v13 + 40) = a3;
    sub_1ACA8F4F4((uint64_t)a4, v13 + 48);
    *(void *)(v13 + 96) = v15;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *(void *)(a1 + 32);
    *(void *)(a1 + 32) = 0x8000000000000000;
    sub_1ACD0DE54(v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *(void *)(a1 + 32) = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_endAccess();
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_6:
  *a5 = v13;
  return result;
}

uint64_t sub_1ACB9AB0C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACB9A910(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), a1);
}

uint64_t sub_1ACB9AB2C(uint64_t result)
{
  void (*v12)(void *__return_ptr, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  void *v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void v35[5];
  unsigned char v36[16];
  uint64_t v37;
  void v38[10];

  uint64_t v31 = *(void *)(result + 16);
  if (v31)
  {
    v38[5] = 0;
    v38[6] = 0;
    v38[8] = 0;
    v38[9] = 0;
    v38[7] = 2;
    uint64_t v2 = *(void *)(v1 + 16);
    uint64_t v3 = *(void *)(v2 + 16);
    uint64_t v30 = result + 32;
    uint64_t v27 = result;
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    long long v28 = (uint64_t *)(v2 + 40);
    long long v29 = v3;
    do
    {
      uint64_t v33 = *(void *)(v30 + 8 * v5);
      if (v3)
      {
        uint64_t v32 = v5;
        swift_bridgeObjectRetain();
        uint64_t v6 = v28;
        uint64_t v7 = v3;
        uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          uint64_t v10 = *v6;
          uint64_t ObjectType = swift_getObjectType();
          char v12 = *(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t))(v10 + 40);
          swift_unknownObjectRetain();
          v12(v35, v33, ObjectType, v10);
          uint64_t v13 = v35[0];
          id v14 = v35[1];
          id v16 = v35[2];
          uint64_t v15 = v35[3];
          uint64_t v17 = v35[4];
          swift_unknownObjectRelease();
          sub_1ACB9B34C((uint64_t)v35, (uint64_t)v36);
          if (v37 != 3)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v8 = sub_1ACA420D4(0, v8[2] + 1, 1, v8);
            }
            uint64_t v18 = v8;
            uint64_t v19 = v8[2];
            long long v20 = v18;
            uint64_t v21 = v18[3];
            if (v19 >= v21 >> 1) {
              long long v20 = sub_1ACA420D4((void *)(v21 > 1), v19 + 1, 1, v20);
            }
            uint64_t v20[2] = v19 + 1;
            uint64_t v9 = &v20[5 * v19];
            uint64_t v8 = v20;
            v9[4] = v13;
            v9[5] = v14;
            v9[6] = v16;
            void v9[7] = v15;
            v9[8] = v17;
          }
          v6 += 2;
          --v7;
        }
        while (v7);
        uint64_t v4 = swift_bridgeObjectRelease();
        uint64_t v22 = v8;
        uint64_t v3 = v29;
        uint64_t v5 = v32;
      }
      else
      {
        uint64_t v22 = (void *)MEMORY[0x1E4FBC860];
      }
      MEMORY[0x1F4188790](v4);
      type metadata accessor for PodcastStateMachine();
      sub_1ACE76D08();
      uint64_t v23 = v34;
      uint64_t v24 = v22[2];
      if (v24)
      {
        uint64_t v25 = (uint64_t)(v22 + 4);
        swift_beginAccess();
        do
        {
          sub_1ACA8F4F4(v25, (uint64_t)v38);
          uint64_t v26 = *(void **)(v23 + 104);
          sub_1ACB74E38(v38, (void (*)(void, void, void, void, void))sub_1ACA50D88);
          objc_msgSend(v26, sel_lock, v27);
          sub_1ACD641BC(v23, v38, &v34);
          objc_msgSend(*(id *)(v23 + 104), sel_unlock);
          sub_1ACB74E38(v38, (void (*)(void, void, void, void, void))sub_1ACA50D9C);
          if (v34 == 1) {
            break;
          }
          v25 += 40;
          --v24;
        }
        while (v24);
      }
      swift_release();
      uint64_t v4 = swift_bridgeObjectRelease();
      ++v5;
    }
    while (v5 != v31);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACB9AED4(uint64_t result)
{
  void (*v14)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  void *v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void v37[5];
  unsigned char v38[16];
  uint64_t v39;
  void v40[10];

  uint64_t v32 = *(void *)(result + 16);
  if (v32)
  {
    v40[5] = 0;
    v40[6] = 0;
    v40[8] = 0;
    v40[9] = 0;
    v40[7] = 2;
    uint64_t v2 = *(void *)(v1 + 16);
    uint64_t v3 = *(void *)(v2 + 16);
    uint64_t v31 = result + 32;
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    long long v29 = (uint64_t *)(v2 + 40);
    uint64_t v5 = &selRef_generateAndRestorePersonaContextWithPersonaUniqueString_;
    uint64_t v30 = v3;
    do
    {
      uint64_t v6 = (uint64_t *)(v31 + 16 * v4);
      uint64_t v34 = *v6;
      uint64_t v35 = v6[1];
      uint64_t v7 = swift_bridgeObjectRetain();
      if (v3)
      {
        uint64_t v33 = v4;
        swift_bridgeObjectRetain();
        uint64_t v8 = v29;
        uint64_t v9 = v3;
        uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          uint64_t v12 = *v8;
          uint64_t ObjectType = swift_getObjectType();
          id v14 = *(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 48);
          swift_unknownObjectRetain();
          v14(v37, v34, v35, ObjectType, v12);
          uint64_t v15 = v37[0];
          id v16 = v37[1];
          uint64_t v17 = v37[2];
          uint64_t v18 = v37[3];
          uint64_t v19 = v37[4];
          swift_unknownObjectRelease();
          sub_1ACB9B34C((uint64_t)v37, (uint64_t)v38);
          if (v39 != 3)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v10 = sub_1ACA420D4(0, v10[2] + 1, 1, v10);
            }
            long long v20 = v10;
            uint64_t v21 = v10[2];
            uint64_t v22 = v20;
            uint64_t v23 = v20[3];
            if (v21 >= v23 >> 1) {
              uint64_t v22 = sub_1ACA420D4((void *)(v23 > 1), v21 + 1, 1, v22);
            }
            v22[2] = v21 + 1;
            uint64_t v11 = &v22[5 * v21];
            uint64_t v10 = v22;
            v11[4] = v15;
            v11[5] = v16;
            v11[6] = v17;
            v11[7] = v18;
            v11[8] = v19;
          }
          v8 += 2;
          --v9;
        }
        while (v9);
        uint64_t v7 = swift_bridgeObjectRelease();
        uint64_t v3 = v30;
        uint64_t v24 = v10;
        uint64_t v4 = v33;
        uint64_t v5 = &selRef_generateAndRestorePersonaContextWithPersonaUniqueString_;
      }
      else
      {
        uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
      }
      MEMORY[0x1F4188790](v7);
      type metadata accessor for PodcastStateMachine();
      sub_1ACE76D08();
      uint64_t v25 = v36;
      uint64_t v26 = v24[2];
      if (v26)
      {
        uint64_t v27 = (uint64_t)(v24 + 4);
        swift_beginAccess();
        do
        {
          sub_1ACA8F4F4(v27, (uint64_t)v40);
          long long v28 = *(void **)(v25 + 104);
          sub_1ACB74E38(v40, (void (*)(void, void, void, void, void))sub_1ACA50D88);
          [v28 v5[142]];
          sub_1ACD641BC(v25, v40, &v36);
          objc_msgSend(*(id *)(v25 + 104), sel_unlock);
          sub_1ACB74E38(v40, (void (*)(void, void, void, void, void))sub_1ACA50D9C);
          if (v36 == 1) {
            break;
          }
          v27 += 40;
          --v26;
        }
        while (v26);
      }
      swift_release();
      swift_bridgeObjectRelease();
      ++v4;
      swift_bridgeObjectRelease();
    }
    while (v4 != v32);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t PodcastStateController.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t PodcastStateController.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1ACB9B34C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB766C98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PodcastStateController()
{
  return self;
}

uint64_t method lookup function for PodcastStateController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastStateController);
}

uint64_t dispatch thunk of PodcastStateController.__allocating_init(dataSources:transitionRules:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of PodcastStateController.stateMachine(for:initialState:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v4 = *(uint64_t (**)(uint64_t, _OWORD *))(*(void *)v2 + 184);
  long long v5 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v5;
  uint64_t v8 = v3;
  return v4(a1, v7);
}

uint64_t dispatch thunk of PodcastStateController.stateMachine(for:initialState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 32);
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, _OWORD *))(*(void *)v3 + 192);
  long long v6 = *(_OWORD *)(a3 + 16);
  v8[0] = *(_OWORD *)a3;
  v8[1] = v6;
  uint64_t v9 = v4;
  return v5(a1, a2, v8);
}

uint64_t dispatch thunk of PodcastStateController.refreshStates(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t sub_1ACB9B4F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACB9AB0C(a1);
}

uint64_t sub_1ACB9B50C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACB9A860(a1);
}

id TranscriptModelBuilder.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

uint64_t (*sub_1ACB9B558())()
{
  return j_j__swift_endAccess;
}

uint64_t (*sub_1ACB9B5B4())()
{
  return j_j__swift_endAccess;
}

uint64_t (*sub_1ACB9B610())()
{
  return j__swift_endAccess;
}

void sub_1ACB9B66C(void *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_lockedPhase);
  uint64_t v4 = (uint64_t)&v3[4];
  long long v5 = v3 + 14;
  os_unfair_lock_lock(v3 + 14);
  sub_1ACB50E7C(v4, a1);
  os_unfair_lock_unlock(v5);
}

id sub_1ACB9B6E0(id result, uint64_t a2)
{
  id v3 = result;
  switch(a2)
  {
    case 0:
      objc_msgSend(result, sel_timeForElementAttribute_, 0);
      uint64_t result = (id)sub_1ACE77D18();
      uint64_t v4 = v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_duration;
      *(void *)uint64_t v4 = result;
      *(void *)(v4 + 8) = v5;
      *(unsigned char *)(v4 + 16) = 0;
      return result;
    case 1:
      objc_msgSend(result, sel_timeForElementAttribute_, 1);
      uint64_t v7 = v6;
      objc_msgSend(v3, sel_timeForElementAttribute_, 2);
      uint64_t v9 = v8;
      id v10 = objc_msgSend(v3, sel_stringForElementAttribute_, 0);
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = sub_1ACE761B8();
        uint64_t v14 = v13;
      }
      else
      {
        uint64_t v12 = 0;
        uint64_t v14 = 0;
      }
      uint64_t v51 = (uint64_t *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentParagraph);
      swift_beginAccess();
      uint64_t v52 = *v51;
      uint64_t v53 = v51[1];
      uint64_t v54 = v51[2];
      uint64_t v55 = v51[3];
      uint64_t v56 = v51[4];
      *uint64_t v51 = v7;
      v51[1] = v9;
      v51[2] = v12;
      v51[3] = v14;
      v51[4] = MEMORY[0x1E4FBC860];
      return (id)sub_1ACB9C7E4(v52, v53, v54, v55, v56);
    case 2:
      uint64_t result = objc_msgSend(result, sel_unitForCurrentSpan);
      if (result == (id)1)
      {
        objc_msgSend(v3, sel_timeForElementAttribute_, 1);
        uint64_t v58 = v57;
        objc_msgSend(v3, sel_timeForElementAttribute_, 2);
        uint64_t v60 = v59;
        unsigned __int8 v61 = objc_msgSend(v3, sel_isDescriptor);
        uint64_t v62 = v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentWord;
        swift_beginAccess();
        *(void *)uint64_t v62 = v58;
        *(void *)(v62 + 8) = v60;
        *(_OWORD *)(v62 + 16) = xmmword_1ACE91750;
        *(unsigned char *)(v62 + 32) = v61;
        uint64_t result = (id)swift_bridgeObjectRelease();
        *(void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfWord) = 1;
        uint64_t v23 = OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfSentence;
        uint64_t v63 = *(void *)(v2
                        + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfSentence);
        BOOL v21 = __OFADD__(v63, 1);
        uint64_t v24 = v63 + 1;
        if (!v21) {
          goto LABEL_24;
        }
        __break(1u);
LABEL_22:
        uint64_t v64 = *(void *)(v2
                        + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfWord);
        BOOL v21 = __OFADD__(v64, 1);
        uint64_t v65 = v64 + 1;
        if (!v21)
        {
          *(void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfWord) = v65;
          uint64_t v23 = OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfSentence;
          uint64_t v66 = *(void *)(v2
                          + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfSentence);
          BOOL v21 = __OFADD__(v66, 1);
          uint64_t v24 = v66 + 1;
          if (!v21) {
            goto LABEL_24;
          }
LABEL_28:
          __break(1u);
          JUMPOUT(0x1ACB9BBB0);
        }
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      if (result) {
        goto LABEL_22;
      }
      objc_msgSend(v3, sel_timeForElementAttribute_, 1);
      uint64_t v16 = v15;
      objc_msgSend(v3, sel_timeForElementAttribute_, 2);
      uint64_t v18 = v17;
      uint64_t v19 = v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentSentence;
      swift_beginAccess();
      *(void *)uint64_t v19 = v16;
      *(void *)(v19 + 8) = v18;
      *(void *)(v19 + 16) = MEMORY[0x1E4FBC860];
      *(unsigned char *)(v19 + 24) = 0;
      uint64_t result = (id)swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(v2
                      + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfWord);
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21)
      {
        __break(1u);
        goto LABEL_27;
      }
      *(void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfWord) = v22;
      uint64_t v23 = OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfSentence;
      uint64_t v24 = 1;
LABEL_24:
      *(void *)(v2 + v23) = v24;
      return result;
    case 3:
      uint64_t result = objc_msgSend(result, sel_stringForElementAttribute_, 1);
      if (result)
      {
        id v25 = result;
        uint64_t v26 = sub_1ACE761B8();
        uint64_t v28 = v27;

        long long v29 = (uint64_t *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentSpeakerID);
        uint64_t *v29 = v26;
        v29[1] = v28;
        return (id)swift_bridgeObjectRelease();
      }
      return result;
    case 4:
      if (*(void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentSpeakerID + 8)) {
        *(unsigned char *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_isParsingSpeakerName) = 1;
      }
      return result;
    case 5:
      uint64_t result = objc_msgSend(result, sel_isDescriptor);
      if (result)
      {
        objc_msgSend(v3, sel_timeForElementAttribute_, 1);
        uint64_t v31 = v30;
        objc_msgSend(v3, sel_timeForElementAttribute_, 2);
        uint64_t v33 = v32;
        uint64_t v34 = v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentWord;
        swift_beginAccess();
        *(void *)uint64_t v34 = v31;
        *(void *)(v34 + 8) = v33;
        *(_OWORD *)(v34 + 16) = xmmword_1ACE91750;
        *(unsigned char *)(v34 + 32) = 1;
        swift_bridgeObjectRelease();
        objc_msgSend(v3, sel_timeForElementAttribute_, 1);
        uint64_t v36 = v35;
        objc_msgSend(v3, sel_timeForElementAttribute_, 2);
        uint64_t v38 = v37;
        uint64_t v39 = v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentSentence;
        swift_beginAccess();
        *(void *)uint64_t v39 = v36;
        *(void *)(v39 + 8) = v38;
        uint64_t v40 = MEMORY[0x1E4FBC860];
        *(void *)(v39 + 16) = MEMORY[0x1E4FBC860];
        *(unsigned char *)(v39 + 24) = 0;
        swift_bridgeObjectRelease();
        objc_msgSend(v3, sel_timeForElementAttribute_, 1);
        uint64_t v42 = v41;
        objc_msgSend(v3, sel_timeForElementAttribute_, 2);
        uint64_t v44 = v43;
        uint64_t v45 = (uint64_t *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentParagraph);
        swift_beginAccess();
        uint64_t v46 = *v45;
        uint64_t v47 = v45[1];
        uint64_t v48 = v45[2];
        uint64_t v49 = v45[3];
        uint64_t v50 = v45[4];
        *uint64_t v45 = v42;
        v45[1] = v44;
        v45[2] = 0;
        v45[3] = 0;
        v45[4] = v40;
        uint64_t result = (id)sub_1ACB9C7E4(v46, v47, v48, v49, v50);
        *(unsigned char *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_isParsingDescriptor) = 1;
      }
      return result;
    default:
      return result;
  }
}

uint64_t sub_1ACB9BC38(uint64_t a1, uint64_t a2)
{
  return sub_1ACB9C828(a2);
}

uint64_t sub_1ACB9BCAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ACB9CA74(a2, a3);
}

double sub_1ACB9BD30(uint64_t a1)
{
  sub_1ACB50EC0(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16));
  *(void *)&double result = 1;
  *(_OWORD *)a1 = xmmword_1ACE8BD70;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0x8000000000000000;
  return result;
}

uint64_t sub_1ACB9BDE4(uint64_t a1, uint64_t a2)
{
  sub_1ACB50EC0(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16));
  uint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_duration);
  uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_duration + 8);
  uint64_t v6 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_duration + 16);
  uint64_t v7 = (uint64_t *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_parsedParagraphs);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t v9 = (uint64_t *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_speakers);
  swift_beginAccess();
  uint64_t v10 = *v9;
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6 | 0x4000000000000000;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v10;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_1ACB9BF1C(uint64_t a1, void *a2)
{
}

void sub_1ACB9BF94(uint64_t a1, void *a2)
{
}

uint64_t sub_1ACB9C00C()
{
  uint64_t v1 = sub_1ACE74988();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v23[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentWord;
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(v5 + 24);
  if (v7)
  {
    double v9 = *(double *)v5;
    double v8 = *(double *)(v5 + 8);
    if (*(double *)v5 <= v8)
    {
      char v10 = *(unsigned char *)(v5 + 32);
      v23[0] = *(void *)(v5 + 16);
      v23[1] = v7;
      swift_bridgeObjectRetain_n();
      sub_1ACE74938();
      sub_1ACA4F4AC();
      uint64_t v11 = sub_1ACE77048();
      uint64_t v13 = v12;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v15 = sub_1ACB9B5B4();
      uint64_t v16 = *(void **)(v14 + 16);
      if (v16)
      {
        uint64_t v17 = v14;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v17 + 16) = v16;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v16 = sub_1ACA435B8(0, v16[2] + 1, 1, v16);
          *(void *)(v17 + 16) = v16;
        }
        unint64_t v20 = v16[2];
        unint64_t v19 = v16[3];
        if (v20 >= v19 >> 1)
        {
          uint64_t v16 = sub_1ACA435B8((void *)(v19 > 1), v20 + 1, 1, v16);
          *(void *)(v17 + 16) = v16;
        }
        unsigned char v16[2] = v20 + 1;
        BOOL v21 = (double *)&v16[5 * v20];
        _OWORD v21[4] = v9;
        void v21[5] = v8;
        *((void *)v21 + 6) = v11;
        *((void *)v21 + 7) = v13;
        *((unsigned char *)v21 + 64) = v10 & 1;
        ((void (*)(void *, void))v15)(v23, 0);
      }
      else
      {
        swift_bridgeObjectRelease();
        ((void (*)(void *, void))v15)(v23, 0);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    *(unsigned char *)(v5 + 32) = 0;
    *(_OWORD *)uint64_t v5 = 0u;
    *(_OWORD *)(v5 + 16) = 0u;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACB9C288()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentSentence;
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    double v5 = *(double *)v1;
    double v4 = *(double *)(v1 + 8);
    if (*(double *)v1 <= v4)
    {
      char v6 = *(unsigned char *)(v1 + 24);
      swift_bridgeObjectRetain();
      double v8 = sub_1ACB9B558();
      double v9 = *(void **)(v7 + 32);
      if (v9)
      {
        uint64_t v10 = v7;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v10 + 32) = v9;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          double v9 = sub_1ACA435CC(0, v9[2] + 1, 1, v9);
          *(void *)(v10 + 32) = v9;
        }
        unint64_t v12 = v9[2];
        unint64_t v13 = v9[3];
        unint64_t v14 = v12 + 1;
        if (v12 >= v13 >> 1)
        {
          unint64_t v19 = v12 + 1;
          uint64_t v16 = v9;
          unint64_t v17 = v9[2];
          uint64_t v18 = sub_1ACA435CC((void *)(v13 > 1), v12 + 1, 1, v16);
          unint64_t v12 = v17;
          unint64_t v14 = v19;
          double v9 = v18;
          *(void *)(v10 + 32) = v18;
        }
        void v9[2] = v14;
        uint64_t v15 = (double *)&v9[4 * v12];
        v15[4] = v5;
        v15[5] = v4;
        *((void *)v15 + 6) = v3;
        *((unsigned char *)v15 + 56) = v6;
        ((void (*)(unsigned char *, void))v8)(v20, 0);
      }
      else
      {
        swift_bridgeObjectRelease();
        ((void (*)(unsigned char *, void))v8)(v20, 0);
      }
    }
    *(void *)uint64_t v1 = 0;
    *(void *)(v1 + 8) = 0;
    *(unsigned char *)(v1 + 24) = 0;
    *(void *)(v1 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACB9C400()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentParagraph;
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  if (v4)
  {
    double v6 = *(double *)v1;
    double v5 = *(double *)(v1 + 8);
    if (*(double *)v1 <= v5)
    {
      if (*(void *)(v4 + 16))
      {
        uint64_t v7 = (void **)(v0 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_parsedParagraphs);
        swift_beginAccess();
        double v8 = *v7;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v7 = v8;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          double v8 = sub_1ACA43494(0, v8[2] + 1, 1, v8);
          *uint64_t v7 = v8;
        }
        unint64_t v10 = v8[2];
        unint64_t v11 = v8[3];
        unint64_t v12 = v10 + 1;
        if (v10 >= v11 >> 1)
        {
          unint64_t v17 = v8;
          unint64_t v18 = v8[2];
          unint64_t v19 = sub_1ACA43494((void *)(v11 > 1), v10 + 1, 1, v17);
          unint64_t v10 = v18;
          double v8 = v19;
          *uint64_t v7 = v19;
        }
        _OWORD v8[2] = v12;
        unint64_t v13 = (double *)&v8[5 * v10];
        void v13[4] = v6;
        v13[5] = v5;
        *((void *)v13 + 6) = v3;
        *((void *)v13 + 7) = v2;
        *((void *)v13 + 8) = v4;
        swift_endAccess();
        uint64_t v3 = *(void *)(v1 + 16);
        uint64_t v2 = *(void *)(v1 + 24);
        uint64_t v4 = *(void *)(v1 + 32);
      }
    }
  }
  uint64_t v14 = *(void *)v1;
  uint64_t v15 = *(void *)(v1 + 8);
  *(void *)(v1 + 32) = 0;
  *(_OWORD *)uint64_t v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  return sub_1ACB9C7E4(v14, v15, v3, v2, v4);
}

id TranscriptModelBuilder.init()()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentParagraph];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_parsedParagraphs] = MEMORY[0x1E4FBC860];
  uint64_t v3 = &v0[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentSentence];
  *((void *)v3 + 1) = 0;
  *((void *)v3 + 2) = 0;
  *(void *)uint64_t v3 = 0;
  v3[24] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfSentence] = 0;
  uint64_t v4 = &v0[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentWord];
  *(_OWORD *)uint64_t v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v4[32] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfWord] = 0;
  uint64_t v5 = OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_speakers;
  double v6 = v0;
  *(void *)&v0[v5] = sub_1ACA3744C(v2);
  uint64_t v7 = &v6[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentSpeakerID];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  v6[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_isParsingSpeakerName] = 0;
  v6[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_isParsingDescriptor] = 0;
  double v8 = &v6[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_duration];
  *(void *)double v8 = 0;
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  uint64_t v9 = OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_lockedPhase;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2B58);
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 56) = 0;
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  *(void *)(v10 + 40) = 0;
  *(void *)(v10 + 48) = 0;
  *(void *)(v10 + 32) = 0x8000000000000000;
  *(void *)&v6[v9] = v10;
  *(void *)&v6[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_interval] = 0;

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for TranscriptModelBuilder();
  return objc_msgSendSuper2(&v12, sel_init);
}

id TranscriptModelBuilder.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TranscriptModelBuilder();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACB9C7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACB9C828(uint64_t result)
{
  switch(result)
  {
    case 5:
      uint64_t v16 = OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_isParsingDescriptor;
      if (*((unsigned char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_isParsingDescriptor) == 1)
      {
        sub_1ACB9C00C();
        sub_1ACB9C288();
        uint64_t result = sub_1ACB9C400();
        *((unsigned char *)v2 + v16) = 0;
      }
      break;
    case 2:
      uint64_t v17 = *(uint64_t *)((char *)v2
                       + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfWord);
      BOOL v18 = __OFSUB__(v17, 1);
      unint64_t v19 = (void *)(v17 - 1);
      if (v18)
      {
        __break(1u);
      }
      else
      {
        *(void **)((char *)v2
                   + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfWord) = v19;
        uint64_t v20 = *(uint64_t *)((char *)v2
                         + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfSentence);
        BOOL v18 = __OFSUB__(v20, 1);
        BOOL v21 = (void *)(v20 - 1);
        if (!v18)
        {
          *(void **)((char *)v2
                     + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_numberOfOpenSpansSinceStartOfSentence) = v21;
          if (v19)
          {
            if (!v21)
            {
              return sub_1ACB9C288();
            }
          }
          else
          {
            return sub_1ACB9C00C();
          }
          return result;
        }
      }
      __break(1u);
      goto LABEL_27;
    case 1:
      uint64_t v1 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentParagraph);
      swift_beginAccess();
      uint64_t v5 = v1[2];
      uint64_t v3 = v1[3];
      uint64_t v4 = v1[4];
      if (!v4 || (v8 = *v1, double v7 = *((double *)v1 + 1), *(double *)v1 > v7) || !*(void *)(v4 + 16))
      {
LABEL_11:
        uint64_t v14 = *v1;
        uint64_t v15 = v1[1];
        v1[4] = 0;
        *(_OWORD *)uint64_t v1 = 0u;
        *((_OWORD *)v1 + 1) = 0u;
        return sub_1ACB9C7E4(v14, v15, v5, v3, v4);
      }
      objc_super v2 = (void **)((char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_parsedParagraphs);
      swift_beginAccess();
      double v6 = *v2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *objc_super v2 = v6;
      if (isUniquelyReferenced_nonNull_native)
      {
LABEL_8:
        unint64_t v10 = v6[2];
        unint64_t v11 = v6[3];
        unint64_t v12 = v10 + 1;
        if (v10 >= v11 >> 1)
        {
          unint64_t v25 = v10 + 1;
          uint64_t v22 = v6;
          unint64_t v23 = v6[2];
          uint64_t v24 = sub_1ACA43494((void *)(v11 > 1), v10 + 1, 1, v22);
          unint64_t v10 = v23;
          unint64_t v12 = v25;
          double v6 = v24;
          *objc_super v2 = v24;
        }
        v6[2] = v12;
        unint64_t v13 = (double *)&v6[5 * v10];
        *((void *)v13 + 4) = v8;
        v13[5] = v7;
        *((void *)v13 + 6) = v5;
        *((void *)v13 + 7) = v3;
        *((void *)v13 + 8) = v4;
        swift_endAccess();
        uint64_t v5 = v1[2];
        uint64_t v3 = v1[3];
        uint64_t v4 = v1[4];
        goto LABEL_11;
      }
LABEL_27:
      double v6 = sub_1ACA43494(0, v6[2] + 1, 1, v6);
      *objc_super v2 = v6;
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1ACB9CA74(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1ACE74988();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentSpeakerID);
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_currentSpeakerID + 8);
  if (v10
    && (uint64_t v11 = OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_isParsingSpeakerName,
        *(unsigned char *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_isParsingSpeakerName) == 1))
  {
    uint64_t v21 = *v9;
    v24[0] = a1;
    v24[1] = a2;
    swift_bridgeObjectRetain();
    sub_1ACE74958();
    sub_1ACA4F4AC();
    uint64_t v12 = sub_1ACE77048();
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v15 = (uint64_t *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_speakers);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v15;
    *uint64_t v15 = 0x8000000000000000;
    sub_1ACD0DE60(v12, v14, v21, v10, v21, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v15 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    *uint64_t v9 = 0;
    v9[1] = 0;
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(v2 + v11) = 0;
  }
  else
  {
    BOOL v18 = sub_1ACB9B610();
    if (*(void *)(v19 + 24))
    {
      uint64_t v22 = a1;
      uint64_t v23 = a2;
      sub_1ACE74978();
      sub_1ACA4F4AC();
      sub_1ACE77048();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
    }
    return ((uint64_t (*)(void *, void))v18)(v24, 0);
  }
  return result;
}

void sub_1ACB9CCEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE753F8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v25 - v7;
  uint64_t v9 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_lockedPhase);
  uint64_t v10 = (uint64_t)&v9[4];
  uint64_t v11 = v9 + 14;
  os_unfair_lock_lock(v9 + 14);
  sub_1ACB9BD30(v10);
  os_unfair_lock_unlock(v11);
  if (qword_1E99EFF98 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1ACE75438();
  __swift_project_value_buffer(v12, (uint64_t)qword_1E99F2D78);
  sub_1ACE753E8();
  uint64_t v13 = sub_1ACE75428();
  os_signpost_type_t v14 = sub_1ACE76E18();
  if (sub_1ACE76FA8())
  {
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v15(v6, v8, v2);
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    v25[0] = v1;
    uint64_t v17 = v16;
    *(_WORD *)uint64_t v16 = 0;
    os_signpost_id_t v18 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v13, v14, v18, "XMLTTMLParse", "", v17, 2u);
    uint64_t v19 = v17;
    uint64_t v1 = v25[0];
    MEMORY[0x1AD11B340](v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {

    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  }
  v15(v6, v8, v2);
  sub_1ACE75478();
  swift_allocObject();
  uint64_t v20 = sub_1ACE75468();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  *(void *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_interval) = v20;
  swift_release();
  if (qword_1EB76A5C8 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1ACE754C8();
  __swift_project_value_buffer(v21, (uint64_t)qword_1EB76A5A8);
  uint64_t v22 = sub_1ACE75498();
  os_log_type_t v23 = sub_1ACE76C08();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_1AC9D5000, v22, v23, "Began parsing TTML file", v24, 2u);
    MEMORY[0x1AD11B340](v24, -1, -1);
  }
}

void sub_1ACB9D044()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE75448();
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE753F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v12 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_lockedPhase);
  uint64_t v30 = v0;
  uint64_t v13 = (uint64_t)&v12[4];
  os_signpost_type_t v14 = v12 + 14;
  os_unfair_lock_lock(v12 + 14);
  sub_1ACB9E374(v13);
  os_unfair_lock_unlock(v14);
  if (qword_1EB76A5C8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1ACE754C8();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EB76A5A8);
  uint64_t v16 = sub_1ACE75498();
  os_log_type_t v17 = sub_1ACE76C08();
  if (os_log_type_enabled(v16, v17))
  {
    os_signpost_id_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_signpost_id_t v18 = 0;
    _os_log_impl(&dword_1AC9D5000, v16, v17, "Successfully finished parsing TTML", v18, 2u);
    MEMORY[0x1AD11B340](v18, -1, -1);
  }

  if (*(void *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_interval))
  {
    uint64_t v19 = qword_1E99EFF98;
    swift_retain();
    if (v19 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1ACE75438();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E99F2D78);
    uint64_t v21 = sub_1ACE75428();
    sub_1ACE75458();
    os_signpost_type_t v22 = sub_1ACE76E08();
    if (sub_1ACE76FA8())
    {
      swift_retain();
      sub_1ACE75488();
      swift_release();
      uint64_t v23 = v29;
      if ((*(unsigned int (**)(char *, uint64_t))(v29 + 88))(v4, v2) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v24 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v2);
        uint64_t v24 = "SUCCESS";
      }
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
      unint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v25 = 0;
      os_signpost_id_t v26 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v21, v22, v26, "XMLTTMLParse", v24, v25, 2u);
      MEMORY[0x1AD11B340](v25, -1, -1);

      uint64_t v27 = *(void (**)(char *, uint64_t))(v6 + 8);
      v27(v11, v5);
      swift_release();
      v27(v9, v5);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      swift_release();
    }
  }
}

void sub_1ACB9D460(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v43 = sub_1ACE75448();
  uint64_t v46 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v45 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE753F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_lockedPhase);
  uint64_t v47 = a1;
  uint64_t v13 = (uint64_t)&v12[4];
  os_signpost_type_t v14 = v12 + 14;
  os_unfair_lock_lock(v12 + 14);
  sub_1ACB9E300(v13);
  os_unfair_lock_unlock(v14);
  if (qword_1EB76A5C8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1ACE754C8();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EB76A5A8);
  id v16 = a1;
  id v17 = a1;
  os_signpost_id_t v18 = sub_1ACE75498();
  os_log_type_t v19 = sub_1ACE76BE8();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v44 = v11;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v41 = v5;
    uint64_t v42 = v6;
    os_signpost_type_t v22 = (uint8_t *)v21;
    uint64_t v23 = (void *)swift_slowAlloc();
    *(_DWORD *)os_signpost_type_t v22 = 138412290;
    id v24 = a1;
    unint64_t v25 = v9;
    uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v48 = v26;
    sub_1ACE76FF8();
    void *v23 = v26;
    uint64_t v9 = v25;

    _os_log_impl(&dword_1AC9D5000, v18, v19, "Error parsing TTML: %@", v22, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v23, -1, -1);
    uint64_t v27 = v22;
    uint64_t v5 = v41;
    uint64_t v6 = v42;
    MEMORY[0x1AD11B340](v27, -1, -1);
  }
  else
  {
  }
  uint64_t v28 = v46;

  uint64_t v29 = v45;
  if (*(void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_interval))
  {
    uint64_t v30 = qword_1E99EFF98;
    swift_retain();
    if (v30 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_1ACE75438();
    __swift_project_value_buffer(v31, (uint64_t)qword_1E99F2D78);
    uint64_t v32 = sub_1ACE75428();
    uint64_t v33 = v44;
    sub_1ACE75458();
    os_signpost_type_t v34 = sub_1ACE76E08();
    if (sub_1ACE76FA8())
    {
      swift_retain();
      sub_1ACE75488();
      swift_release();
      uint64_t v35 = v43;
      if ((*(unsigned int (**)(char *, uint64_t))(v28 + 88))(v29, v43) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v36 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v35);
        uint64_t v36 = "FAILURE";
      }
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v33, v5);
      uint64_t v37 = v33;
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      os_signpost_id_t v39 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v32, v34, v39, "XMLTTMLParse", v36, v38, 2u);
      MEMORY[0x1AD11B340](v38, -1, -1);

      uint64_t v40 = *(void (**)(char *, uint64_t))(v6 + 8);
      v40(v37, v5);
      swift_release();
      v40(v9, v5);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v33, v5);
      swift_release();
    }
  }
}

void sub_1ACB9D960(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v43 = sub_1ACE75448();
  uint64_t v46 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v45 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE753F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_lockedPhase);
  uint64_t v47 = a1;
  uint64_t v13 = (uint64_t)&v12[4];
  os_signpost_type_t v14 = v12 + 14;
  os_unfair_lock_lock(v12 + 14);
  sub_1ACB9E300(v13);
  os_unfair_lock_unlock(v14);
  if (qword_1EB76A5C8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1ACE754C8();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EB76A5A8);
  id v16 = a1;
  id v17 = a1;
  os_signpost_id_t v18 = sub_1ACE75498();
  os_log_type_t v19 = sub_1ACE76BE8();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v44 = v11;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v41 = v5;
    uint64_t v42 = v6;
    os_signpost_type_t v22 = (uint8_t *)v21;
    uint64_t v23 = (void *)swift_slowAlloc();
    *(_DWORD *)os_signpost_type_t v22 = 138412290;
    id v24 = a1;
    unint64_t v25 = v9;
    uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v48 = v26;
    sub_1ACE76FF8();
    void *v23 = v26;
    uint64_t v9 = v25;

    _os_log_impl(&dword_1AC9D5000, v18, v19, "Error validating TTML: %@", v22, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v23, -1, -1);
    uint64_t v27 = v22;
    uint64_t v5 = v41;
    uint64_t v6 = v42;
    MEMORY[0x1AD11B340](v27, -1, -1);
  }
  else
  {
  }
  uint64_t v28 = v46;

  uint64_t v29 = v45;
  if (*(void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_interval))
  {
    uint64_t v30 = qword_1E99EFF98;
    swift_retain();
    if (v30 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_1ACE75438();
    __swift_project_value_buffer(v31, (uint64_t)qword_1E99F2D78);
    uint64_t v32 = sub_1ACE75428();
    uint64_t v33 = v44;
    sub_1ACE75458();
    os_signpost_type_t v34 = sub_1ACE76E08();
    if (sub_1ACE76FA8())
    {
      swift_retain();
      sub_1ACE75488();
      swift_release();
      uint64_t v35 = v43;
      if ((*(unsigned int (**)(char *, uint64_t))(v28 + 88))(v29, v43) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v36 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v35);
        uint64_t v36 = "FAILURE";
      }
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v33, v5);
      uint64_t v37 = v33;
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      os_signpost_id_t v39 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v32, v34, v39, "XMLTTMLParse", v36, v38, 2u);
      MEMORY[0x1AD11B340](v38, -1, -1);

      uint64_t v40 = *(void (**)(char *, uint64_t))(v6 + 8);
      v40(v37, v5);
      swift_release();
      v40(v9, v5);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v33, v5);
      swift_release();
    }
  }
}

uint64_t type metadata accessor for TranscriptModelBuilder()
{
  return self;
}

uint64_t method lookup function for TranscriptModelBuilder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TranscriptModelBuilder);
}

uint64_t dispatch thunk of TranscriptModelBuilder.phase.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of TranscriptModelBuilder.didStartElement(parser:type:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of TranscriptModelBuilder.didEndElement(parser:type:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of TranscriptModelBuilder.foundCharacters(parser:string:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of TranscriptModelBuilder.startDocument(parser:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of TranscriptModelBuilder.endDocument(parser:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of TranscriptModelBuilder.parserError(parser:error:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of TranscriptModelBuilder.validationError(parser:error:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x210))();
}

void destroy for TranscriptModelBuilder.Phase(uint64_t a1)
{
}

void *initializeWithCopy for TranscriptModelBuilder.Phase(void *a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  sub_1ACB51110(*(id *)a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return a1;
}

uint64_t assignWithCopy for TranscriptModelBuilder.Phase(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  sub_1ACB51110(*(id *)a2, v4, v5);
  uint64_t v8 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  unint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  sub_1ACB50EC0(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for TranscriptModelBuilder.Phase(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  *(void *)(a1 + 32) = v3;
  sub_1ACB50EC0(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptModelBuilder.Phase(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 16) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptModelBuilder.Phase(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 16) = 2 * -a2;
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1ACB9E254(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16) >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1ACB9E270(uint64_t result)
{
  *(void *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1ACB9E280(uint64_t result, uint64_t a2)
{
  if (a2 < 2)
  {
    *(void *)(result + 16) = *(void *)(result + 16) & 1 | (a2 << 62);
  }
  else
  {
    *(void *)uint64_t result = (a2 - 2);
    *(_OWORD *)(result + 8) = xmmword_1ACE91760;
    *(void *)(result + 24) = 0;
    *(void *)(result + 32) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptModelBuilder.Phase()
{
  return &type metadata for TranscriptModelBuilder.Phase;
}

uint64_t sub_1ACB9E2C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1ACB9E2D8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1ACB9E2EC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

id sub_1ACB9E300(uint64_t a1)
{
  return sub_1ACB9E318(a1);
}

id sub_1ACB9E318(uint64_t a1)
{
  int v3 = *(void **)(v1 + 16);
  sub_1ACB50EC0(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16));
  *(void *)a1 = v3;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return v3;
}

uint64_t sub_1ACB9E374(uint64_t a1)
{
  return sub_1ACB9BDE4(a1, *(void *)(v1 + 16));
}

uint64_t static OS_os_log.home.getter()
{
  return sub_1ACE754A8();
}

PodcastsFoundation::PodcastsSystem_optional __swiftcall PodcastsSystem.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1ACE779E8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 33;
  switch(v3)
  {
    case 0:
      goto LABEL_35;
    case 1:
      char v5 = 1;
      goto LABEL_35;
    case 2:
      char v5 = 2;
      goto LABEL_35;
    case 3:
      char v5 = 3;
      goto LABEL_35;
    case 4:
      char v5 = 4;
      goto LABEL_35;
    case 5:
      char v5 = 5;
      goto LABEL_35;
    case 6:
      char v5 = 6;
      goto LABEL_35;
    case 7:
      char v5 = 7;
      goto LABEL_35;
    case 8:
      char v5 = 8;
      goto LABEL_35;
    case 9:
      char v5 = 9;
      goto LABEL_35;
    case 10:
      char v5 = 10;
      goto LABEL_35;
    case 11:
      char v5 = 11;
      goto LABEL_35;
    case 12:
      char v5 = 12;
      goto LABEL_35;
    case 13:
      char v5 = 13;
      goto LABEL_35;
    case 14:
      char v5 = 14;
      goto LABEL_35;
    case 15:
      char v5 = 15;
      goto LABEL_35;
    case 16:
      char v5 = 16;
      goto LABEL_35;
    case 17:
      char v5 = 17;
      goto LABEL_35;
    case 18:
      char v5 = 18;
      goto LABEL_35;
    case 19:
      char v5 = 19;
      goto LABEL_35;
    case 20:
      char v5 = 20;
      goto LABEL_35;
    case 21:
      char v5 = 21;
      goto LABEL_35;
    case 22:
      char v5 = 22;
      goto LABEL_35;
    case 23:
      char v5 = 23;
      goto LABEL_35;
    case 24:
      char v5 = 24;
      goto LABEL_35;
    case 25:
      char v5 = 25;
      goto LABEL_35;
    case 26:
      char v5 = 26;
      goto LABEL_35;
    case 27:
      char v5 = 27;
      goto LABEL_35;
    case 28:
      char v5 = 28;
      goto LABEL_35;
    case 29:
      char v5 = 29;
      goto LABEL_35;
    case 30:
      char v5 = 30;
      goto LABEL_35;
    case 31:
      char v5 = 31;
      goto LABEL_35;
    case 32:
      char v5 = 32;
LABEL_35:
      char v6 = v5;
      break;
    case 33:
      break;
    case 34:
      char v6 = 34;
      break;
    case 35:
      char v6 = 35;
      break;
    case 36:
      char v6 = 36;
      break;
    case 37:
      char v6 = 37;
      break;
    case 38:
      char v6 = 38;
      break;
    case 39:
      char v6 = 39;
      break;
    case 40:
      char v6 = 40;
      break;
    case 41:
      char v6 = 41;
      break;
    case 42:
      char v6 = 42;
      break;
    case 43:
      char v6 = 43;
      break;
    case 44:
      char v6 = 44;
      break;
    case 45:
      char v6 = 45;
      break;
    case 46:
      char v6 = 46;
      break;
    case 47:
      char v6 = 47;
      break;
    case 48:
      char v6 = 48;
      break;
    case 49:
      char v6 = 49;
      break;
    case 50:
      char v6 = 50;
      break;
    default:
      char v6 = 51;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

unint64_t PodcastsSystem.rawValue.getter()
{
  unint64_t result = 0x6B72616D6B6F6F42;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6573616261746144;
      break;
    case 2:
      unint64_t result = 0x64616F6C6E776F44;
      break;
    case 3:
      unint64_t result = 21322;
      break;
    case 4:
      unint64_t result = 0x697461676976614ELL;
      break;
    case 5:
      unint64_t result = 0x746567646957;
      break;
    case 6:
      unint64_t result = 0x537972617262694CLL;
      break;
    case 7:
      unint64_t result = 0x677542656C6946;
      break;
    case 8:
      unint64_t result = 0x73676E6974746553;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0xA:
      unint64_t result = 0x65696C436E696854;
      break;
    case 0xB:
      unint64_t result = 0x6E795364756F6C43;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000010;
      break;
    case 0xD:
      unint64_t result = 0x616E6F4469726953;
      break;
    case 0xE:
      unint64_t result = 0x5564656546535352;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x10:
      unint64_t result = 0x6E69776F6C6C6F46;
      break;
    case 0x11:
      unint64_t result = 0x6164705564656546;
      break;
    case 0x12:
      unint64_t result = 0x6B63616279616C50;
      break;
    case 0x13:
      unint64_t result = 0x6D617A616853;
      break;
    case 0x14:
      unint64_t result = 0x697263736E617254;
      break;
    case 0x15:
      unint64_t result = 0x6573616863727550;
      break;
    case 0x16:
      unint64_t result = 0x50746E6572727543;
      break;
    case 0x17:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x18:
      unint64_t result = 0x79616C5072696146;
      break;
    case 0x19:
      unint64_t result = 0xD000000000000014;
      break;
    case 0x1A:
      unint64_t result = 0x7363697274654DLL;
      break;
    case 0x1B:
      unint64_t result = 0x737465737341;
      break;
    case 0x1C:
      unint64_t result = 0x6B726F77747241;
      break;
    case 0x1D:
    case 0x1E:
    case 0x22:
    case 0x26:
      unint64_t result = 0xD000000000000011;
      break;
    case 0x1F:
      unint64_t result = 0x6F52746E65746E49;
      break;
    case 0x20:
      unint64_t result = 0x614279636E756F42;
      break;
    case 0x21:
      unint64_t result = 0x6979616C50776F4ELL;
      break;
    case 0x23:
      unint64_t result = 0xD000000000000019;
      break;
    case 0x24:
      unint64_t result = 0x6C506E7265646F4DLL;
      break;
    case 0x25:
      unint64_t result = 0x73776F7262657945;
      break;
    case 0x27:
      unint64_t result = 0x79636176697250;
      break;
    case 0x28:
      unint64_t result = 0x6C6379636566694CLL;
      break;
    case 0x29:
      unint64_t result = 0x6F4E6E657473694CLL;
      break;
    case 0x2A:
      unint64_t result = 18773;
      break;
    case 0x2B:
      unint64_t result = 0x7473657265746E49;
      break;
    case 0x2C:
      unint64_t result = 0xD000000000000017;
      break;
    case 0x2D:
      unint64_t result = 0x6974634172657355;
      break;
    case 0x2E:
      unint64_t result = 0x6B726F7774654ELL;
      break;
    case 0x2F:
      unint64_t result = 0x686372616553;
      break;
    case 0x30:
      unint64_t result = 0x6163696669746F4ELL;
      break;
    case 0x31:
      unint64_t result = 0x7463697274736552;
      break;
    case 0x32:
      unint64_t result = 1936746836;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACB9EC94(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF7598(*a1, *a2);
}

uint64_t sub_1ACB9ECA0()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACB9ED08()
{
  PodcastsSystem.rawValue.getter();
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACB9ED6C()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::PodcastsSystem_optional sub_1ACB9EDD0(Swift::String *a1)
{
  return PodcastsSystem.init(rawValue:)(*a1);
}

unint64_t sub_1ACB9EDDC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PodcastsSystem.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t static Logger.podcastsSubsystem.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_1ACB9EE20(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB768C00);
}

uint64_t Logger.init(domain:)()
{
  PodcastsSystem.rawValue.getter();
  return sub_1ACE754A8();
}

uint64_t static Logger.database.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB768C20, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB768C00, a1);
}

uint64_t sub_1ACB9EEE4(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB768C28);
}

uint64_t static Logger.downloads.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB768C48, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB768C28, a1);
}

uint64_t sub_1ACB9EF40(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76ED10);
}

uint64_t static Logger.js.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76ED30, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76ED10, a1);
}

uint64_t sub_1ACB9EF8C(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76D448);
}

uint64_t static Logger.navigation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76D468, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76D448, a1);
}

uint64_t sub_1ACB9EFE8(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB7726F0);
}

uint64_t static Logger.widget.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(qword_1EB772710, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB7726F0, a1);
}

uint64_t sub_1ACB9F03C(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB768BD8);
}

uint64_t static Logger.libraryShow.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB768BF8, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB768BD8, a1);
}

uint64_t sub_1ACB9F09C(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2BC8);
}

uint64_t static Logger.fileBug.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1E99EFED0, MEMORY[0x1E4FBD360], (uint64_t)qword_1E99F2BC8, a1);
}

uint64_t sub_1ACB9F0F4(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2BE0);
}

uint64_t static Logger.settings.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(qword_1E99EFED8, MEMORY[0x1E4FBD360], (uint64_t)qword_1E99F2BE0, a1);
}

uint64_t sub_1ACB9F14C(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76D570);
}

uint64_t static Logger.podcastsStatesCoordination.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76D590, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76D570, a1);
}

uint64_t sub_1ACB9F1A8(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2BF8);
}

uint64_t static Logger.thinClientState.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1E99EFEE8, MEMORY[0x1E4FBD360], (uint64_t)qword_1E99F2BF8, a1);
}

uint64_t sub_1ACB9F20C(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76D5C0);
}

uint64_t static Logger.cloudSync.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76D5E0, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76D5C0, a1);
}

uint64_t sub_1ACB9F268(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76D4E0);
}

uint64_t static Logger.storeFeedUpdater.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76D4F8, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76D4E0, a1);
}

uint64_t sub_1ACB9F2C4(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76D488);
}

uint64_t static Logger.siriDonation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76D4A0, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76D488, a1);
}

uint64_t sub_1ACB9F324(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76D4C8);
}

uint64_t static Logger.rssFeedUpdater.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB769568, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76D4C8, a1);
}

uint64_t sub_1ACB9F388(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76D528);
}

uint64_t static Logger.backgroundTaskManager.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76D540, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76D528, a1);
}

uint64_t sub_1ACB9F3E4(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76D5E8);
}

uint64_t static Logger.following.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76D608, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76D5E8, a1);
}

uint64_t sub_1ACB9F440(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76D420);
}

uint64_t static Logger.feedUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76D440, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76D420, a1);
}

uint64_t sub_1ACB9F49C(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB770280);
}

uint64_t static Logger.playback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76EE78, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB770280, a1);
}

uint64_t sub_1ACB9F4F4(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2C10);
}

uint64_t static Logger.shazam.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1E99EFEF0, MEMORY[0x1E4FBD360], (uint64_t)qword_1E99F2C10, a1);
}

uint64_t sub_1ACB9F548(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76D470);
}

uint64_t static Logger.currentPage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(qword_1EB769558, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76D470, a1);
}

uint64_t sub_1ACB9F5A8(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2C28);
}

uint64_t static Logger.searchSuggestionsUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(qword_1E99EFF00, MEMORY[0x1E4FBD360], (uint64_t)qword_1E99F2C28, a1);
}

uint64_t sub_1ACB9F604(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76D598);
}

uint64_t static Logger.fairPlay.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76D5B8, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76D598, a1);
}

uint64_t sub_1ACB9F65C(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2C40);
}

uint64_t static Logger.podcastsMediaLibrary.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1E99EFF10, MEMORY[0x1E4FBD360], (uint64_t)qword_1E99F2C40, a1);
}

uint64_t sub_1ACB9F6B8(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76A5A8);
}

uint64_t static Logger.transcripts.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76A5C8, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76A5A8, a1);
}

uint64_t sub_1ACB9F718(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76D610);
}

uint64_t static Logger.purchases.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76D630, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76D610, a1);
}

uint64_t sub_1ACB9F774(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2C58);
}

uint64_t static Logger.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1E99EFF18, MEMORY[0x1E4FBD360], (uint64_t)qword_1E99F2C58, a1);
}

uint64_t sub_1ACB9F7CC(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB772ED0);
}

uint64_t static Logger.assets.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB772EF0, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB772ED0, a1);
}

uint64_t sub_1ACB9F820(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB772EF8);
}

uint64_t static Logger.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB772F18, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB772EF8, a1);
}

uint64_t sub_1ACB9F878(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2C70);
}

uint64_t static Logger.appIntents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1E99EFF20, MEMORY[0x1E4FBD360], (uint64_t)qword_1E99F2C70, a1);
}

uint64_t sub_1ACB9F8D4(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2C88);
}

uint64_t static Logger.appNotices.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1E99EFF28, MEMORY[0x1E4FBD360], (uint64_t)qword_1E99F2C88, a1);
}

uint64_t sub_1ACB9F930(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2CA0);
}

uint64_t static Logger.intentRouting.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1E99EFF30, MEMORY[0x1E4FBD360], (uint64_t)qword_1E99F2CA0, a1);
}

uint64_t sub_1ACB9F994(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2CB8);
}

uint64_t static Logger.bouncyBarAsset.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(qword_1E99EFF38, MEMORY[0x1E4FBD360], (uint64_t)qword_1E99F2CB8, a1);
}

uint64_t sub_1ACB9F9F8(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB771D58);
}

uint64_t static Logger.nowPlaying.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(qword_1EB771D70, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB771D58, a1);
}

uint64_t sub_1ACB9FA54(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB770210);
}

uint64_t static Logger.notifications.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB770228, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB770210, a1);
}

uint64_t sub_1ACB9FAB8(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB770230);
}

uint64_t static Logger.nowPlayingArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB770250, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB770230, a1);
}

uint64_t sub_1ACB9FB14(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76D548);
}

uint64_t static Logger.musicSubscriptionInfoSync.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76D568, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76D548, a1);
}

uint64_t sub_1ACB9FB70(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76D4A8);
}

uint64_t static Logger.modernPlayback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76D4C0, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76D4A8, a1);
}

uint64_t sub_1ACB9FBD4(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB772F20);
}

uint64_t static Logger.eyebrows.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(qword_1EB772F38, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB772F20, a1);
}

uint64_t sub_1ACB9FC2C(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76D500);
}

uint64_t static Logger.synchronizedTimer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76D520, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76D500, a1);
}

uint64_t sub_1ACB9FC88(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2CD0);
}

uint64_t static Logger.privacy.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1E99EFF48, MEMORY[0x1E4FBD360], (uint64_t)qword_1E99F2CD0, a1);
}

uint64_t sub_1ACB9FCE0(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB7693D0);
}

uint64_t static Logger.listenNow.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76A610, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB7693D0, a1);
}

uint64_t sub_1ACB9FD3C(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76A5F0);
}

uint64_t static Logger.lifecycle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76A608, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76A5F0, a1);
}

uint64_t sub_1ACB9FD98(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2CE8);
}

uint64_t static Logger.ui.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1E99EFF50, MEMORY[0x1E4FBD360], (uint64_t)qword_1E99F2CE8, a1);
}

uint64_t sub_1ACB9FDE4(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76A5D0);
}

uint64_t static Logger.interests.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76A5E8, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB76A5D0, a1);
}

uint64_t sub_1ACB9FE40(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2D00);
}

uint64_t static Logger.playbackPositionTracker.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(qword_1E99EFF60, MEMORY[0x1E4FBD360], (uint64_t)qword_1E99F2D00, a1);
}

uint64_t sub_1ACB9FE9C(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB7701F8);
}

uint64_t static Logger.userActivity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(qword_1EB76EE68, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB7701F8, a1);
}

uint64_t sub_1ACB9FEFC(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2D18);
}

uint64_t static Logger.network.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1E99EFF70, MEMORY[0x1E4FBD360], (uint64_t)qword_1E99F2D18, a1);
}

uint64_t sub_1ACB9FF54(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB770258);
}

uint64_t static Logger.search.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB770278, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB770258, a1);
}

uint64_t sub_1ACB9FFA8(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB771540);
}

uint64_t static Logger.restrictions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB771560, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB771540, a1);
}

uint64_t sub_1ACBA0008(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB771568);
}

uint64_t sub_1ACBA0020(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1ACE754C8();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1ACE754A8();
}

uint64_t static Logger.tips.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB770B68, MEMORY[0x1E4FBD360], (uint64_t)qword_1EB771568, a1);
}

uint64_t sub_1ACBA00D0(uint64_t a1)
{
  return sub_1ACBA2FC8(a1, qword_1EB76A568, &qword_1EB768C20, (uint64_t)qword_1EB768C00);
}

uint64_t static OSSignposter.database.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76A580, MEMORY[0x1E4FBD330], (uint64_t)qword_1EB76A568, a1);
}

uint64_t sub_1ACBA0134(uint64_t a1)
{
  return sub_1ACBA2FC8(a1, qword_1EB76D400, &qword_1EB76D608, (uint64_t)qword_1EB76D5E8);
}

uint64_t static OSSignposter.following.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76D418, MEMORY[0x1E4FBD330], (uint64_t)qword_1EB76D400, a1);
}

uint64_t sub_1ACBA0198(uint64_t a1)
{
  return sub_1ACBA2FC8(a1, qword_1EB76D378, &qword_1EB76D440, (uint64_t)qword_1EB76D420);
}

uint64_t static OSSignposter.feedUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76D390, MEMORY[0x1E4FBD330], (uint64_t)qword_1EB76D378, a1);
}

uint64_t sub_1ACBA01FC(uint64_t a1)
{
  return sub_1ACBA2FC8(a1, qword_1E99F2D30, &qword_1E99EFF70, (uint64_t)qword_1E99F2D18);
}

uint64_t static OSSignposter.network.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(qword_1E99EFF78, MEMORY[0x1E4FBD330], (uint64_t)qword_1E99F2D30, a1);
}

uint64_t sub_1ACBA0260(uint64_t a1)
{
  return sub_1ACBA2FC8(a1, qword_1EB76D3B8, &qword_1EB772F18, (uint64_t)qword_1EB772EF8);
}

uint64_t static OSSignposter.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76D3D0, MEMORY[0x1E4FBD330], (uint64_t)qword_1EB76D3B8, a1);
}

uint64_t sub_1ACBA02C4(uint64_t a1)
{
  return sub_1ACBA2FC8(a1, qword_1E99F2D48, &qword_1E99EFF20, (uint64_t)qword_1E99F2C70);
}

uint64_t static OSSignposter.appIntents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1E99EFF88, MEMORY[0x1E4FBD330], (uint64_t)qword_1E99F2D48, a1);
}

uint64_t sub_1ACBA0328(uint64_t a1)
{
  return sub_1ACBA2FC8(a1, qword_1E99F2D60, &qword_1E99EFF30, (uint64_t)qword_1E99F2CA0);
}

uint64_t static OSSignposter.intentRouting.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1E99EFF90, MEMORY[0x1E4FBD330], (uint64_t)qword_1E99F2D60, a1);
}

uint64_t sub_1ACBA038C(uint64_t a1)
{
  return sub_1ACBA2FC8(a1, qword_1EB771BD0, &qword_1EB772EF0, (uint64_t)qword_1EB772ED0);
}

uint64_t static OSSignposter.assets.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB771BE8, MEMORY[0x1E4FBD330], (uint64_t)qword_1EB771BD0, a1);
}

uint64_t sub_1ACBA03F0(uint64_t a1)
{
  return sub_1ACBA2FC8(a1, qword_1EB7701D8, &qword_1EB768C48, (uint64_t)qword_1EB768C28);
}

uint64_t static OSSignposter.downloads.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB7701F0, MEMORY[0x1E4FBD330], (uint64_t)qword_1EB7701D8, a1);
}

uint64_t sub_1ACBA0454(uint64_t a1)
{
  return sub_1ACBA2FC8(a1, qword_1EB772EA8, qword_1EB772F38, (uint64_t)qword_1EB772F20);
}

uint64_t static OSSignposter.eyebrows.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB772EC8, MEMORY[0x1E4FBD330], (uint64_t)qword_1EB772EA8, a1);
}

uint64_t sub_1ACBA04B8(uint64_t a1)
{
  return sub_1ACBA2FC8(a1, qword_1EB76D398, &qword_1EB76D520, (uint64_t)qword_1EB76D500);
}

uint64_t static OSSignposter.synchronizedTimer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76D3B0, MEMORY[0x1E4FBD330], (uint64_t)qword_1EB76D398, a1);
}

uint64_t sub_1ACBA051C(uint64_t a1)
{
  return sub_1ACBA2FC8(a1, qword_1EB76D3D8, &qword_1EB76D5E0, (uint64_t)qword_1EB76D5C0);
}

uint64_t static OSSignposter.cloudSync.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76D3F8, MEMORY[0x1E4FBD330], (uint64_t)qword_1EB76D3D8, a1);
}

uint64_t sub_1ACBA0580(uint64_t a1)
{
  return sub_1ACBA2FC8(a1, qword_1EB76A588, &qword_1EB76A610, (uint64_t)qword_1EB7693D0);
}

uint64_t static OSSignposter.listenNow.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB76A5A0, MEMORY[0x1E4FBD330], (uint64_t)qword_1EB76A588, a1);
}

uint64_t sub_1ACBA05E4(uint64_t a1)
{
  return sub_1ACBA2FC8(a1, qword_1E99F2D78, &qword_1EB76A5C8, (uint64_t)qword_1EB76A5A8);
}

uint64_t static OSSignposter.transcripts.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1E99EFF98, MEMORY[0x1E4FBD330], (uint64_t)qword_1E99F2D78, a1);
}

uint64_t sub_1ACBA0648(uint64_t a1)
{
  return sub_1ACBA2FC8(a1, qword_1E99F2D90, &qword_1E99EFEF0, (uint64_t)qword_1E99F2C10);
}

uint64_t static OSSignposter.shazam.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1E99EFFA0, MEMORY[0x1E4FBD330], (uint64_t)qword_1E99F2D90, a1);
}

uint64_t sub_1ACBA06AC(uint64_t a1)
{
  return sub_1ACBA2FC8(a1, qword_1E99F2DA8, &qword_1EB76A5E8, (uint64_t)qword_1EB76A5D0);
}

uint64_t static OSSignposter.interests.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(qword_1E99EFFA8, MEMORY[0x1E4FBD330], (uint64_t)qword_1E99F2DA8, a1);
}

uint64_t sub_1ACBA0710(uint64_t a1)
{
  return sub_1ACBA2FC8(a1, qword_1EB7701B0, &qword_1EB770278, (uint64_t)qword_1EB770258);
}

uint64_t static OSSignposter.search.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA0774(&qword_1EB7701D0, MEMORY[0x1E4FBD330], (uint64_t)qword_1EB7701B0, a1);
}

uint64_t sub_1ACBA0774@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  return v9(a4, v8, v7);
}

unint64_t static OS_os_log.podcastsSubsystem.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_1ACBA0830()
{
  sub_1ACBA1E3C();
  uint64_t result = sub_1ACE76FB8();
  qword_1E99F2DC0 = result;
  return result;
}

id static OS_os_log.bookmarks.getter()
{
  return sub_1ACBA2E20(&qword_1E99EFFB8, (void **)&qword_1E99F2DC0);
}

void static OS_os_log.bookmarks.setter(void *a1)
{
}

uint64_t (*static OS_os_log.bookmarks.modify())()
{
  if (qword_1E99EFFB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA0964(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2DC8);
}

uint64_t static OS_os_log.carPlay.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA2A24(&qword_1E99EFFC0, (uint64_t)qword_1E99F2DC8, a1);
}

uint64_t static OS_os_log.carPlay.setter(uint64_t a1)
{
  return sub_1ACBA2AF0(a1, &qword_1E99EFFC0, (uint64_t)qword_1E99F2DC8);
}

uint64_t (*static OS_os_log.carPlay.modify())()
{
  if (qword_1E99EFFC0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE754C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1E99F2DC8);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA0A60(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76EBE8);
}

uint64_t static OS_os_log.classKit.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA2A24(&qword_1EB76EC08, (uint64_t)qword_1EB76EBE8, a1);
}

uint64_t static OS_os_log.classKit.setter(uint64_t a1)
{
  return sub_1ACBA2AF0(a1, &qword_1EB76EC08, (uint64_t)qword_1EB76EBE8);
}

uint64_t (*static OS_os_log.classKit.modify())()
{
  if (qword_1EB76EC08 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE754C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB76EBE8);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA0B5C(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB76E390);
}

uint64_t static OS_os_log.cloudSync.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA2A24(&qword_1EB769590, (uint64_t)qword_1EB76E390, a1);
}

uint64_t static OS_os_log.cloudSync.setter(uint64_t a1)
{
  return sub_1ACBA2AF0(a1, &qword_1EB769590, (uint64_t)qword_1EB76E390);
}

uint64_t (*static OS_os_log.cloudSync.modify())()
{
  if (qword_1EB769590 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE754C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB76E390);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA0C5C()
{
  sub_1ACBA1E3C();
  uint64_t result = sub_1ACE76FB8();
  qword_1EB76E380 = result;
  return result;
}

id static OS_os_log.cloudSyncSignpost.getter()
{
  return sub_1ACBA2E20(&qword_1EB76E388, (void **)&qword_1EB76E380);
}

void static OS_os_log.cloudSyncSignpost.setter(void *a1)
{
}

uint64_t (*static OS_os_log.cloudSyncSignpost.modify())()
{
  if (qword_1EB76E388 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA0D90()
{
  sub_1ACBA1E3C();
  uint64_t result = sub_1ACE76FB8();
  qword_1E99F2DE0 = result;
  return result;
}

id static OS_os_log.contentServiceDefault.getter()
{
  return sub_1ACBA2E20(&qword_1E99EFFD0, (void **)&qword_1E99F2DE0);
}

void static OS_os_log.contentServiceDefault.setter(void *a1)
{
}

uint64_t (*static OS_os_log.contentServiceDefault.modify())()
{
  if (qword_1E99EFFD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA0EC8()
{
  sub_1ACBA1E3C();
  uint64_t result = sub_1ACE76FB8();
  qword_1EB768FF0 = result;
  return result;
}

id static OS_os_log.database.getter()
{
  return sub_1ACBA2E20(&qword_1EB768FF8, (void **)&qword_1EB768FF0);
}

void static OS_os_log.database.setter(void *a1)
{
}

uint64_t (*static OS_os_log.database.modify())()
{
  if (qword_1EB768FF8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA0FF8()
{
  sub_1ACBA1E3C();
  uint64_t result = sub_1ACE76FB8();
  qword_1EB7720C8 = result;
  return result;
}

id static OS_os_log.downloads.getter()
{
  return sub_1ACBA2E20(&qword_1EB772280, (void **)&qword_1EB7720C8);
}

void static OS_os_log.downloads.setter(void *a1)
{
}

uint64_t (*static OS_os_log.downloads.modify())()
{
  if (qword_1EB772280 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA112C(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB768FB8);
}

uint64_t static OS_os_log.drm.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA2A24(&qword_1EB768FD8, (uint64_t)qword_1EB768FB8, a1);
}

uint64_t static OS_os_log.drm.setter(uint64_t a1)
{
  return sub_1ACBA2AF0(a1, &qword_1EB768FD8, (uint64_t)qword_1EB768FB8);
}

uint64_t (*static OS_os_log.drm.modify())()
{
  if (qword_1EB768FD8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE754C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB768FB8);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA1220()
{
  sub_1ACBA1E3C();
  uint64_t result = sub_1ACE76FB8();
  qword_1EB768FA8 = result;
  return result;
}

id static OS_os_log.episodeStatesSignpost.getter()
{
  return sub_1ACBA2E20(&qword_1EB768FB0, (void **)&qword_1EB768FA8);
}

void static OS_os_log.episodeStatesSignpost.setter(void *a1)
{
}

uint64_t (*static OS_os_log.episodeStatesSignpost.modify())()
{
  if (qword_1EB768FB0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA135C(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2DE8);
}

uint64_t static OS_os_log.stateLogger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA2A24(&qword_1E99EFFD8, (uint64_t)qword_1E99F2DE8, a1);
}

uint64_t static OS_os_log.stateLogger.setter(uint64_t a1)
{
  return sub_1ACBA2AF0(a1, &qword_1E99EFFD8, (uint64_t)qword_1E99F2DE8);
}

uint64_t (*static OS_os_log.stateLogger.modify())()
{
  if (qword_1E99EFFD8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE754C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1E99F2DE8);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA1454(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB768F88);
}

uint64_t static OS_os_log.feedUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA2A24(&qword_1EB768FA0, (uint64_t)qword_1EB768F88, a1);
}

uint64_t static OS_os_log.feedUpdate.setter(uint64_t a1)
{
  return sub_1ACBA2AF0(a1, &qword_1EB768FA0, (uint64_t)qword_1EB768F88);
}

uint64_t (*static OS_os_log.feedUpdate.modify())()
{
  if (qword_1EB768FA0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE754C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB768F88);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA1554(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2E00);
}

uint64_t static OS_os_log.feedFetch.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA2A24(&qword_1E99EFFE8, (uint64_t)qword_1E99F2E00, a1);
}

uint64_t static OS_os_log.feedFetch.setter(uint64_t a1)
{
  return sub_1ACBA2AF0(a1, &qword_1E99EFFE8, (uint64_t)qword_1E99F2E00);
}

uint64_t (*static OS_os_log.feedFetch.modify())()
{
  if (qword_1E99EFFE8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE754C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1E99F2E00);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA1654()
{
  sub_1ACBA1E3C();
  uint64_t result = sub_1ACE76FB8();
  qword_1E99F2E18 = result;
  return result;
}

id static OS_os_log.iTunesContentConsolidation.getter()
{
  return sub_1ACBA2E20(&qword_1E99EFFF0, (void **)&qword_1E99F2E18);
}

void static OS_os_log.iTunesContentConsolidation.setter(void *a1)
{
}

uint64_t (*static OS_os_log.iTunesContentConsolidation.modify())()
{
  if (qword_1E99EFFF0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA1790()
{
  sub_1ACBA1E3C();
  uint64_t result = sub_1ACE76FB8();
  qword_1E99F2E20 = result;
  return result;
}

id static OS_os_log.iTunesMigration.getter()
{
  return sub_1ACBA2E20(&qword_1E99EFFF8, (void **)&qword_1E99F2E20);
}

void static OS_os_log.iTunesMigration.setter(void *a1)
{
}

uint64_t (*static OS_os_log.iTunesMigration.modify())()
{
  if (qword_1E99EFFF8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA18C8()
{
  sub_1ACBA1E3C();
  uint64_t result = sub_1ACE76FB8();
  qword_1E99F2E28 = result;
  return result;
}

id static OS_os_log.iTunesSync.getter()
{
  return sub_1ACBA2E20(&qword_1E99F0000, (void **)&qword_1E99F2E28);
}

void static OS_os_log.iTunesSync.setter(void *a1)
{
}

uint64_t (*static OS_os_log.iTunesSync.modify())()
{
  if (qword_1E99F0000 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA1A00()
{
  sub_1ACBA1E3C();
  uint64_t result = sub_1ACE76FB8();
  qword_1EB766B50 = result;
  return result;
}

id static OS_os_log.jsSignpost.getter()
{
  return sub_1ACBA2E20(&qword_1EB766B58, (void **)&qword_1EB766B50);
}

void static OS_os_log.jsSignpost.setter(void *a1)
{
}

uint64_t (*static OS_os_log.jsSignpost.modify())()
{
  if (qword_1EB766B58 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA1B24()
{
  uint64_t v0 = sub_1ACE754C8();
  __swift_allocate_value_buffer(v0, qword_1E99F2E30);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E99F2E30);
  if (qword_1EB766B58 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)qword_1EB766B50;
  return sub_1ACE754D8();
}

uint64_t static OS_os_log.js.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA2A24(&qword_1E99F0010, (uint64_t)qword_1E99F2E30, a1);
}

uint64_t static OS_os_log.js.setter(uint64_t a1)
{
  return sub_1ACBA2AF0(a1, &qword_1E99F0010, (uint64_t)qword_1E99F2E30);
}

uint64_t (*static OS_os_log.js.modify())()
{
  if (qword_1E99F0010 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE754C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1E99F2E30);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA1CAC()
{
  sub_1ACBA1E3C();
  uint64_t result = sub_1ACE76FB8();
  qword_1EB766A28 = result;
  return result;
}

id static OS_os_log.launch.getter()
{
  return sub_1ACBA2E20(&qword_1EB766A38, (void **)&qword_1EB766A28);
}

void static OS_os_log.launch.setter(void *a1)
{
}

uint64_t (*static OS_os_log.launch.modify())()
{
  if (qword_1EB766A38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static OS_os_log.libraryLoadingSignpost.getter()
{
  return sub_1ACE76FB8();
}

unint64_t sub_1ACBA1E3C()
{
  unint64_t result = qword_1EB7734C0;
  if (!qword_1EB7734C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB7734C0);
  }
  return result;
}

uint64_t static OS_os_log.homePageSignpost.getter()
{
  return sub_1ACE76FB8();
}

uint64_t sub_1ACBA1EDC(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB766B60);
}

uint64_t static OS_os_log.librarySplitView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA2A24(&qword_1EB766B80, (uint64_t)qword_1EB766B60, a1);
}

uint64_t static OS_os_log.librarySplitView.setter(uint64_t a1)
{
  return sub_1ACBA2AF0(a1, &qword_1EB766B80, (uint64_t)qword_1EB766B60);
}

uint64_t (*static OS_os_log.librarySplitView.modify())()
{
  if (qword_1EB766B80 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE754C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB766B60);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA1FDC()
{
  sub_1ACBA1E3C();
  uint64_t result = sub_1ACE76FB8();
  qword_1E99F2E48 = result;
  return result;
}

id static OS_os_log.mediaLibrary.getter()
{
  return sub_1ACBA2E20(&qword_1E99F0018, (void **)&qword_1E99F2E48);
}

void static OS_os_log.mediaLibrary.setter(void *a1)
{
}

uint64_t (*static OS_os_log.mediaLibrary.modify())()
{
  if (qword_1E99F0018 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA2114(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2E50);
}

uint64_t static OS_os_log.mediaRemote.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA2A24(&qword_1E99F0020, (uint64_t)qword_1E99F2E50, a1);
}

uint64_t static OS_os_log.mediaRemote.setter(uint64_t a1)
{
  return sub_1ACBA2AF0(a1, &qword_1E99F0020, (uint64_t)qword_1E99F2E50);
}

uint64_t (*static OS_os_log.mediaRemote.modify())()
{
  if (qword_1E99F0020 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE754C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1E99F2E50);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA2218()
{
  sub_1ACBA1E3C();
  uint64_t result = sub_1ACE76FB8();
  qword_1EB768FE0 = result;
  return result;
}

id static OS_os_log.metrics.getter()
{
  return sub_1ACBA2E20(&qword_1EB768FE8, (void **)&qword_1EB768FE0);
}

void static OS_os_log.metrics.setter(void *a1)
{
}

uint64_t (*static OS_os_log.metrics.modify())()
{
  if (qword_1EB768FE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA2348()
{
  sub_1ACBA1E3C();
  uint64_t result = sub_1ACE76FB8();
  qword_1E99F2E68 = result;
  return result;
}

id static OS_os_log.notifications.getter()
{
  return sub_1ACBA2E20(&qword_1E99F0030, (void **)&qword_1E99F2E68);
}

void static OS_os_log.notifications.setter(void *a1)
{
}

uint64_t (*static OS_os_log.notifications.modify())()
{
  if (qword_1E99F0030 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA2484(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2E70);
}

uint64_t static OS_os_log.playback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA2A24(&qword_1E99F0038, (uint64_t)qword_1E99F2E70, a1);
}

uint64_t static OS_os_log.playback.setter(uint64_t a1)
{
  return sub_1ACBA2AF0(a1, &qword_1E99F0038, (uint64_t)qword_1E99F2E70);
}

uint64_t (*static OS_os_log.playback.modify())()
{
  if (qword_1E99F0038 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE754C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1E99F2E70);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA2580(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB766B88);
}

uint64_t static OS_os_log.purchases.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA2A24(&qword_1EB772290, (uint64_t)qword_1EB766B88, a1);
}

uint64_t static OS_os_log.purchases.setter(uint64_t a1)
{
  return sub_1ACBA2AF0(a1, &qword_1EB772290, (uint64_t)qword_1EB766B88);
}

uint64_t (*static OS_os_log.purchases.modify())()
{
  if (qword_1EB772290 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE754C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB766B88);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA2680(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1E99F2E88);
}

uint64_t static OS_os_log.search.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA2A24(&qword_1E99F0048, (uint64_t)qword_1E99F2E88, a1);
}

uint64_t static OS_os_log.search.setter(uint64_t a1)
{
  return sub_1ACBA2AF0(a1, &qword_1E99F0048, (uint64_t)qword_1E99F2E88);
}

uint64_t (*static OS_os_log.search.modify())()
{
  if (qword_1E99F0048 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE754C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1E99F2E88);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA2778()
{
  sub_1ACBA1E3C();
  uint64_t result = sub_1ACE76FB8();
  qword_1EB7720C0 = result;
  return result;
}

id static OS_os_log.restore.getter()
{
  return sub_1ACBA2E20(&qword_1EB7725C0, (void **)&qword_1EB7720C0);
}

void static OS_os_log.restore.setter(void *a1)
{
}

uint64_t (*static OS_os_log.restore.modify())()
{
  if (qword_1EB7725C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA28A8()
{
  sub_1ACBA1E3C();
  uint64_t result = sub_1ACE76FB8();
  qword_1E99F2EA0 = result;
  return result;
}

id static OS_os_log.reviews.getter()
{
  return sub_1ACBA2E20(&qword_1E99F0058, (void **)&qword_1E99F2EA0);
}

void static OS_os_log.reviews.setter(void *a1)
{
}

uint64_t (*static OS_os_log.reviews.modify())()
{
  if (qword_1E99F0058 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA29D8(uint64_t a1)
{
  return sub_1ACBA0020(a1, qword_1EB7725A0);
}

uint64_t static OS_os_log.shelfSystem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBA2A24(&qword_1EB772270, (uint64_t)qword_1EB7725A0, a1);
}

uint64_t sub_1ACBA2A24@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1ACE754C8();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t static OS_os_log.shelfSystem.setter(uint64_t a1)
{
  return sub_1ACBA2AF0(a1, &qword_1EB772270, (uint64_t)qword_1EB7725A0);
}

uint64_t sub_1ACBA2AF0(uint64_t a1, void *a2, uint64_t a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1ACE754C8();
  uint64_t v6 = __swift_project_value_buffer(v5, a3);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v6, a1, v5);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v5);
}

uint64_t (*static OS_os_log.shelfSystem.modify())()
{
  if (qword_1EB772270 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE754C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB7725A0);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA2C68()
{
  sub_1ACBA1E3C();
  uint64_t result = sub_1ACE76FB8();
  qword_1EB7734B8 = result;
  return result;
}

id static OS_os_log.widget.getter()
{
  return sub_1ACBA2E20(&qword_1EB7734C8, (void **)&qword_1EB7734B8);
}

void static OS_os_log.widget.setter(void *a1)
{
}

uint64_t (*static OS_os_log.widget.modify())()
{
  if (qword_1EB7734C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA2D94()
{
  sub_1ACBA1E3C();
  uint64_t result = sub_1ACE76FB8();
  qword_1E99F2EA8 = result;
  return result;
}

id static OS_os_log.podcastsMediaLibrarySignpost.getter()
{
  return sub_1ACBA2E20(&qword_1E99F0060, (void **)&qword_1E99F2EA8);
}

id sub_1ACBA2E20(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = *a2;
  return v3;
}

void static OS_os_log.podcastsMediaLibrarySignpost.setter(void *a1)
{
}

void sub_1ACBA2EAC(void *a1, void *a2, void **a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v5 = *a3;
  *a3 = a1;
}

uint64_t (*static OS_os_log.podcastsMediaLibrarySignpost.modify())()
{
  if (qword_1E99F0060 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBA2F9C(uint64_t a1)
{
  return sub_1ACBA2FC8(a1, qword_1EB76ECE8, &qword_1EB76ED30, (uint64_t)qword_1EB76ED10);
}

uint64_t sub_1ACBA2FC8(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4)
{
  uint64_t v7 = sub_1ACE754C8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE75438();
  __swift_allocate_value_buffer(v11, a2);
  __swift_project_value_buffer(v11, (uint64_t)a2);
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v7, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  return sub_1ACE75418();
}

uint64_t static OSSignposter.js.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB76ED08 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1ACE75438();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB76ECE8);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static OSSignposter.js.setter(uint64_t a1)
{
  if (qword_1EB76ED08 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1ACE75438();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB76ECE8);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static OSSignposter.js.modify())()
{
  if (qword_1EB76ED08 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE75438();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB76ECE8);
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_1ACBA334C()
{
  unint64_t result = qword_1E99F2EB0;
  if (!qword_1E99F2EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2EB0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PodcastsSystem(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xCE) {
    goto LABEL_17;
  }
  if (a2 + 50 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 50) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 50;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 50;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 50;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x33;
  int v8 = v6 - 51;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PodcastsSystem(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 50 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 50) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xCE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xCD)
  {
    unsigned int v6 = ((a2 - 206) >> 8) + 1;
    *unint64_t result = a2 + 50;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACBA34FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 50;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsSystem()
{
  return &type metadata for PodcastsSystem;
}

uint64_t Publisher.validator(unlimited:timeout:)(char a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2EB8);
  MEMORY[0x1F4188790](v4 - 8);
  unsigned int v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    uint64_t v7 = sub_1ACE757D8();
  }
  else {
    uint64_t v7 = 0;
  }
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for XCTestCombineValidator();
  sub_1ACA3AAD4(a2, (uint64_t)v6, &qword_1E99F2EB8);
  uint64_t v8 = swift_allocObject();
  XCTestCombineValidator.init(initialDemand:timeout:)(v7, (uint64_t)v6);
  v10[1] = v8;
  swift_getWitnessTable();
  sub_1ACE75D18();
  return v8;
}

uint64_t type metadata accessor for XCTestCombineValidator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t XCTestCombineValidator.__allocating_init(initialDemand:timeout:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  XCTestCombineValidator.init(initialDemand:timeout:)(a1, a2);
  return v4;
}

uint64_t Publisher.validator(secondsUntilTimeout:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = a3;
  uint64_t v4 = sub_1ACE75DA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1ACE75E88();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2EB8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE75E78();
  *uint64_t v7 = a1;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCAE8], v4);
  MEMORY[0x1AD118090](v11, v7);
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
  uint64_t v15 = Publisher.validator(unlimited:timeout:)(1, (uint64_t)v14);
  sub_1ACA50E78((uint64_t)v14, &qword_1E99F2EB8);
  return v15;
}

uint64_t XCTestCombineValidator.currentValues.getter()
{
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)((char *)v0 + *(void *)(*v0 + 184)) + 16));
  swift_beginAccess();
  uint64_t v1 = v0[2];
  int v2 = (os_unfair_lock_s *)(*(void *)((char *)v0 + *(void *)(*v0 + 184)) + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v2);
  return v1;
}

void sub_1ACBA3A1C(uint64_t a1)
{
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)((char *)v1 + *(void *)(*v1 + 184)) + 16));
  swift_beginAccess();
  v1[2] = a1;
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)((char *)v1 + *(void *)(*v1 + 184)) + 16));
}

uint64_t XCTestCombineValidator.timeout.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA3AAD4(v1 + qword_1E9A22B18, a1, &qword_1E99F2EB8);
}

uint64_t XCTestCombineValidator.description.getter()
{
  return 0x6F746164696C6156;
}

void *XCTestCombineValidator.init(initialDemand:timeout:)(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  v3[2] = sub_1ACE75FA8();
  *(void *)((char *)v3 + qword_1E99F2EC0) = MEMORY[0x1E4FBC860];
  uint64_t v6 = (char *)v3 + *(void *)(*v3 + 128);
  uint64_t v7 = sub_1ACE757A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (void *)((char *)v3 + *(void *)(*v3 + 136));
  *uint64_t v8 = 0;
  v8[1] = 0;
  uint64_t v9 = (char *)v3 + *(void *)(*v3 + 144);
  *((void *)v9 + 4) = 0;
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  uint64_t v10 = (void *)((char *)v3 + *(void *)(*v3 + 152));
  void *v10 = 0;
  swift_beginAccess();
  void *v10 = a1;
  sub_1ACA3AAD4(a2, (uint64_t)v3 + qword_1E9A22B18, &qword_1E99F2EB8);
  type metadata accessor for RunLoopSemaphore();
  swift_allocObject();
  *(void *)((char *)v3 + *(void *)(*v3 + 160)) = sub_1ACD71CBC(0);
  swift_allocObject();
  uint64_t v11 = sub_1ACD71CBC(0);
  sub_1ACA50E78(a2, &qword_1E99F2EB8);
  *(void *)((char *)v3 + *(void *)(*v3 + 168)) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  *(void *)((char *)v3 + *(void *)(*v3 + 184)) = v12;
  *(void *)((char *)v3 + *(void *)(*v3 + 176)) = 0;
  return v3;
}

uint64_t XCTestCombineValidator.deinit()
{
  XCTestCombineValidator.cancel()();
  swift_bridgeObjectRelease();
  sub_1ACA50E78(v0 + qword_1E9A22B18, &qword_1E99F2EB8);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 128);
  sub_1ACE757A8();
  uint64_t v2 = sub_1ACE76FD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_1ACA50E78(v0 + *(void *)(*(void *)v0 + 144), &qword_1EB76DE38);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

Swift::Void __swiftcall XCTestCombineValidator.cancel()()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 144);
  swift_beginAccess();
  if (*(void *)(v1 + 24))
  {
    sub_1ACA3E158(v1, (uint64_t)&v2);
    __swift_project_boxed_opaque_existential_1(&v2, *((uint64_t *)&v3 + 1));
    sub_1ACE75798();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v2);
  }
  uint64_t v4 = 0;
  long long v2 = 0u;
  long long v3 = 0u;
  swift_beginAccess();
  sub_1ACAC8CB4((uint64_t)&v2, v1);
  swift_endAccess();
}

uint64_t XCTestCombineValidator.__deallocating_deinit()
{
  XCTestCombineValidator.deinit();
  return swift_deallocClassInstance();
}

BOOL XCTestCombineValidator.isEmpty.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE757A8();
  uint64_t v4 = sub_1ACE76FD8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - v6;
  uint64_t v8 = (os_unfair_lock_s *)(*(void *)((char *)v1 + *(void *)(v2 + 184)) + 16);
  os_unfair_lock_lock(v8);
  swift_beginAccess();
  uint64_t v12 = v1[2];
  sub_1ACE76688();
  swift_getWitnessTable();
  if (sub_1ACE76AD8())
  {
    uint64_t v9 = (char *)v1 + *(void *)(*v1 + 128);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v9, v4);
    BOOL v10 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v7, 1, v3) == 1;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    BOOL v10 = 0;
  }
  os_unfair_lock_unlock(v8);
  return v10;
}

uint64_t XCTestCombineValidator.isFailed.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 88);
  uint64_t v3 = sub_1ACE757A8();
  uint64_t v4 = sub_1ACE76FD8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = *(void *)(v3 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v6);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v19 - v13;
  uint64_t v15 = (os_unfair_lock_s *)(*(uint64_t *)((char *)v0 + *(void *)(v1 + 184)) + 16);
  os_unfair_lock_lock(v15);
  uint64_t v16 = (uint64_t)v0 + *(void *)(*v0 + 128);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v16, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    os_unfair_lock_unlock(v15);
    return 0;
  }
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v17(v14, v8, v3);
  os_unfair_lock_unlock(v15);
  v17(v12, v14, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v12, 1, v2) == 1) {
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v3);
  return 1;
}

uint64_t XCTestCombineValidator.isFinished.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 88);
  uint64_t v3 = sub_1ACE757A8();
  uint64_t v4 = sub_1ACE76FD8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = *(void *)(v3 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v6);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = (os_unfair_lock_s *)(*(uint64_t *)((char *)v0 + *(void *)(v1 + 184)) + 16);
  os_unfair_lock_lock(v15);
  uint64_t v16 = (uint64_t)v0 + *(void *)(*v0 + 128);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v16, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    os_unfair_lock_unlock(v15);
    return 0;
  }
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v17(v14, v8, v3);
  os_unfair_lock_unlock(v15);
  v17(v12, v14, v3);
  uint64_t v18 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v12, 1, v2) != 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v3);
    return 0;
  }
  return v18;
}

BOOL XCTestCombineValidator.isSubscribed.getter()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + *(void *)(*(void *)v0 + 184)) + 16);
  os_unfair_lock_lock(v1);
  uint64_t v2 = v0 + *(void *)(*(void *)v0 + 144);
  swift_beginAccess();
  sub_1ACA3AAD4(v2, (uint64_t)v5, &qword_1EB76DE38);
  BOOL v3 = v5[3] != 0;
  sub_1ACA50E78((uint64_t)v5, &qword_1EB76DE38);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t XCTestCombineValidator.awaitFinish()(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v49 = *v1;
  uint64_t v3 = *(void *)(v49 + 88);
  uint64_t v43 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v41 = (char *)&v41 - v4;
  uint64_t v48 = *(void *)(v5 + 96);
  uint64_t v6 = sub_1ACE757A8();
  uint64_t v7 = sub_1ACE76FD8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v44 = (char *)v7;
  uint64_t v45 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v47 = *(void *)(v6 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v42 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v46 = (char *)&v41 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2EB8);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1ACE75E88();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA3AAD4((uint64_t)v2 + qword_1E9A22B18, (uint64_t)v17, &qword_1E99F2EB8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1ACA50E78((uint64_t)v17, &qword_1E99F2EB8);
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    swift_retain();
    sub_1ACD71A10();
    char v23 = v22;
    swift_release();
    if ((v23 & 1) == 0)
    {
      uint64_t v24 = type metadata accessor for XCTestCombineValidator.Errors();
      swift_getWitnessTable();
      swift_allocError();
      swift_storeEnumTagMultiPayload();
LABEL_6:
      swift_willThrow();
      goto LABEL_7;
    }
    unint64_t v25 = (void *)((char *)v2 + *(void *)(*v2 + 136));
    uint64_t v26 = v25[1];
    if (v26)
    {
      uint64_t v27 = *v25;
      uint64_t v24 = type metadata accessor for XCTestCombineValidator.Errors();
      swift_getWitnessTable();
      swift_allocError();
      void *v28 = v27;
      v28[1] = v26;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
    uint64_t v30 = (char *)v2 + *(void *)(*v2 + 128);
    swift_beginAccess();
    uint64_t v17 = v44;
    (*(void (**)(char *, char *, char *))(v45 + 16))(v11, v30, v44);
    uint64_t v31 = v47;
    int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48))(v11, 1, v6);
    uint64_t v33 = v11;
    if (v32 != 1)
    {
      uint64_t v34 = v6;
      uint64_t v35 = v46;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v46, v33, v34);
      uint64_t v36 = v42;
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v42, v35, v34);
      uint64_t v37 = v43;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v36, 1, v3) == 1)
      {
        uint64_t v24 = XCTestCombineValidator.currentValues.getter();
        (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v34);
        (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
        return v24;
      }
      uint64_t v38 = *(void (**)(void))(v37 + 32);
      uint64_t v45 = v34;
      os_signpost_id_t v39 = v41;
      v38();
      uint64_t v24 = type metadata accessor for XCTestCombineValidator.Errors();
      swift_getWitnessTable();
      swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(v40, v39, v3);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v3);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v45);
LABEL_7:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      return v24;
    }
  }
  uint64_t result = (*(uint64_t (**)(char *, char *))(v45 + 8))(v33, v17);
  __break(1u);
  return result;
}

uint64_t XCTestCombineValidator.awaitFailure()(uint64_t a1)
{
  uint64_t v44 = a1;
  uint64_t v2 = v1;
  uint64_t v52 = *v1;
  uint64_t v3 = *(void *)(v52 + 88);
  uint64_t v46 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v43 = (char *)&v42 - v4;
  uint64_t v51 = *(void *)(v5 + 96);
  uint64_t v6 = sub_1ACE757A8();
  uint64_t v7 = sub_1ACE76FD8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v47 = (char *)v7;
  uint64_t v48 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v45 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v49 = (char *)&v42 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2EB8);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1ACE75E88();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA3AAD4((uint64_t)v2 + qword_1E9A22B18, (uint64_t)v17, &qword_1E99F2EB8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1ACA50E78((uint64_t)v17, &qword_1E99F2EB8);
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    swift_retain();
    sub_1ACD71A10();
    char v23 = v22;
    swift_release();
    if ((v23 & 1) == 0)
    {
      uint64_t v24 = type metadata accessor for XCTestCombineValidator.Errors();
      swift_getWitnessTable();
      swift_allocError();
      swift_storeEnumTagMultiPayload();
LABEL_6:
      swift_willThrow();
      goto LABEL_7;
    }
    unint64_t v25 = (void *)((char *)v2 + *(void *)(*v2 + 136));
    uint64_t v26 = v25[1];
    if (v26)
    {
      uint64_t v27 = *v25;
      uint64_t v24 = type metadata accessor for XCTestCombineValidator.Errors();
      swift_getWitnessTable();
      swift_allocError();
      void *v28 = v27;
      v28[1] = v26;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
    uint64_t v30 = (char *)v2 + *(void *)(*v2 + 128);
    swift_beginAccess();
    uint64_t v31 = v30;
    uint64_t v17 = v47;
    (*(void (**)(char *, char *, char *))(v48 + 16))(v11, v31, v47);
    uint64_t v32 = v50;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v11, 1, v6) != 1)
    {
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      uint64_t v34 = v32;
      uint64_t v35 = v49;
      v33(v49, v11, v6);
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
      uint64_t v37 = v45;
      v36(v45, v35, v6);
      uint64_t v38 = v46;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v37, 1, v3) != 1)
      {
        os_signpost_id_t v39 = v43;
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v43, v37, v3);
        (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v44, v39, v3);
        uint64_t v40 = XCTestCombineValidator.currentValues.getter();
        uint64_t v41 = v38;
        uint64_t v24 = v40;
        (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v3);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v6);
        (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
        return v24;
      }
      uint64_t v24 = type metadata accessor for XCTestCombineValidator.Errors();
      swift_getWitnessTable();
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v6);
LABEL_7:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      return v24;
    }
  }
  uint64_t result = (*(uint64_t (**)(char *, char *))(v48 + 8))(v11, v17);
  __break(1u);
  return result;
}

uint64_t XCTestCombineValidator.awaitInput()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v50 = a2;
  uint64_t v56 = (char *)*v2;
  uint64_t v6 = *((void *)v56 + 11);
  uint64_t v47 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v53 = (char *)&v43 - v7;
  uint64_t v55 = *(void *)(v8 + 96);
  uint64_t v9 = sub_1ACE757A8();
  uint64_t v10 = sub_1ACE76FD8();
  uint64_t v48 = *(void *)(v10 - 8);
  uint64_t v49 = (char *)v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v54 = v9;
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v46 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v52 = (char *)&v43 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2EB8);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1ACE75E88();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  char v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA3AAD4((uint64_t)v5 + qword_1E9A22B18, (uint64_t)v19, &qword_1E99F2EB8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v19, v20);
    swift_retain();
    sub_1ACD71A10();
    char v25 = v24;
    swift_release();
    if ((v25 & 1) == 0)
    {
      type metadata accessor for XCTestCombineValidator.Errors();
      swift_getWitnessTable();
      swift_allocError();
      swift_storeEnumTagMultiPayload();
LABEL_6:
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    }
    uint64_t v26 = (void *)((char *)v5 + *(void *)(*v5 + 136));
    uint64_t v27 = v26[1];
    if (v27)
    {
      uint64_t v28 = *v26;
      type metadata accessor for XCTestCombineValidator.Errors();
      swift_getWitnessTable();
      swift_allocError();
      void *v29 = v28;
      v29[1] = v27;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
    uint64_t v43 = *(void *)(*v5 + 176);
    uint64_t v44 = v13;
    uint64_t v45 = *(void *)((char *)v5 + v43);
    XCTestCombineValidator.currentValues.getter();
    uint64_t v13 = (char *)*((void *)v56 + 10);
    uint64_t v31 = MEMORY[0x1AD118820]();
    swift_bridgeObjectRelease();
    if (v45 == v31)
    {
      uint64_t v56 = v13;
      uint64_t v32 = (char *)v5 + *(void *)(*v5 + 128);
      swift_beginAccess();
      uint64_t v4 = v48;
      uint64_t v13 = v44;
      uint64_t v33 = v32;
      uint64_t v19 = v49;
      (*(void (**)(char *, char *, char *))(v48 + 16))(v44, v33, v49);
      uint64_t v34 = v51;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v13, 1, v54) != 1)
      {
        uint64_t v35 = v52;
        uint64_t v36 = v54;
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v52, v13, v54);
        uint64_t v37 = v46;
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v46, v35, v36);
        uint64_t v38 = v47;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v37, 1, v6) == 1)
        {
          type metadata accessor for XCTestCombineValidator.Errors();
          swift_getWitnessTable();
          swift_allocError();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v54);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v53, v37, v6);
          type metadata accessor for XCTestCombineValidator.Errors();
          swift_getWitnessTable();
          swift_allocError();
          (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v42, v53, v6);
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v53, v6);
          (*(void (**)(char *, uint64_t))(v34 + 8))(v52, v54);
        }
        return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
      }
      goto LABEL_17;
    }
    uint64_t v39 = v43;
    XCTestCombineValidator.currentValues.getter();
    sub_1ACE766B8();
    swift_bridgeObjectRelease();
    XCTestCombineValidator.currentValues.getter();
    uint64_t v40 = *(void *)((char *)v5 + v39);
    swift_bridgeObjectRelease();
    BOOL v41 = __OFADD__(v40, 1);
    uint64_t v19 = (char *)(v40 + 1);
    if (!v41)
    {
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
      *(void *)((char *)v5 + v39) = v19;
      return result;
    }
    __break(1u);
  }
  sub_1ACA50E78((uint64_t)v19, &qword_1E99F2EB8);
  __break(1u);
LABEL_17:
  uint64_t result = (*(uint64_t (**)(char *, char *))(v4 + 8))(v13, v19);
  __break(1u);
  return result;
}

uint64_t XCTestCombineValidator.awaitInput(_:)(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)&v7 - v3;
  uint64_t result = sub_1ACE765F8();
  uint64_t v8 = result;
  if (a1 >= 1)
  {
    uint64_t v6 = a1 + 1;
    while (1)
    {
      XCTestCombineValidator.awaitInput()(result, (uint64_t)v4);
      if (v1) {
        break;
      }
      sub_1ACE76688();
      uint64_t result = sub_1ACE76648();
      if (--v6 <= 1) {
        return v8;
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void XCTestCombineValidator.receive(subscription:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (os_unfair_lock_s *)(*(void *)(v1 + *(void *)(*(void *)v1 + 184)) + 16);
  os_unfair_lock_lock(v4);
  uint64_t v5 = v2 + *(void *)(*(void *)v2 + 144);
  swift_beginAccess();
  sub_1ACA3AAD4(v5, (uint64_t)&v11, &qword_1EB76DE38);
  uint64_t v6 = v13;
  sub_1ACA50E78((uint64_t)&v11, &qword_1EB76DE38);
  if (v6)
  {
    os_unfair_lock_unlock(v4);
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    sub_1ACE77268();
    sub_1ACE762C8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772240);
    sub_1ACE77458();
    sub_1ACE762C8();
    unint64_t v7 = v12;
    uint64_t v8 = (void *)(v2 + *(void *)(*(void *)v2 + 136));
    *uint64_t v8 = v11;
    v8[1] = v7;
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ACE75798();
    return;
  }
  sub_1ACA3E158((uint64_t)a1, (uint64_t)&v11);
  swift_beginAccess();
  sub_1ACAC8CB4((uint64_t)&v11, v5);
  swift_endAccess();
  uint64_t v9 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 152));
  swift_beginAccess();
  sub_1ACE757D8();
  if (sub_1ACE757B8())
  {
    os_unfair_lock_unlock(v4);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ACE757D8();
  }
  else
  {
    uint64_t v10 = *v9;
    sub_1ACE757D8();
    if ((sub_1ACE757B8() & 1) == 0)
    {
      if (v10 < 0)
      {
        __break(1u);
        return;
      }
      if (!v10)
      {
        os_unfair_lock_unlock(v4);
        return;
      }
    }
    os_unfair_lock_unlock(v4);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  }
  sub_1ACE75808();
}

void XCTestCombineValidator.receive(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v42 = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2EB8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v40 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  BOOL v41 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v3 + 80);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = sub_1ACE757A8();
  uint64_t v14 = sub_1ACE76FD8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v37 - v16;
  uint64_t v18 = (os_unfair_lock_s *)(*(void *)((char *)v2 + *(void *)(v3 + 184)) + 16);
  os_unfair_lock_lock(v18);
  uint64_t v19 = (char *)v2 + *(void *)(*v2 + 128);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v19, v14);
  LODWORD(v19) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v17, 1, v13);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (v19 != 1)
  {
    os_unfair_lock_unlock(v18);
    uint64_t v43 = 0;
    unint64_t v44 = 0xE000000000000000;
    sub_1ACE77268();
    sub_1ACE762C8();
    sub_1ACE77808();
    sub_1ACE762C8();
    unint64_t v35 = v44;
    uint64_t v36 = (void *)((char *)v2 + *(void *)(*v2 + 136));
    *uint64_t v36 = v43;
    v36[1] = v35;
    swift_bridgeObjectRelease();
LABEL_12:
    sub_1ACE757C8();
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v42, v9);
  swift_beginAccess();
  sub_1ACE76688();
  sub_1ACE76648();
  swift_endAccess();
  uint64_t v20 = v41;
  sub_1ACE75098();
  uint64_t v21 = (void *)((char *)v2 + qword_1E99F2EC0);
  swift_beginAccess();
  unint64_t v22 = *v21;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v21 = v22;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v22 = sub_1ACA41630(0, *(void *)(v22 + 16) + 1, 1, v22);
    *uint64_t v21 = v22;
  }
  uint64_t v24 = v39;
  uint64_t v25 = (uint64_t)v40;
  uint64_t v26 = v38;
  unint64_t v28 = *(void *)(v22 + 16);
  unint64_t v27 = *(void *)(v22 + 24);
  if (v28 >= v27 >> 1)
  {
    unint64_t v22 = sub_1ACA41630(v27 > 1, v28 + 1, 1, v22);
    *uint64_t v21 = v22;
  }
  *(void *)(v22 + 16) = v28 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v22+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v28, v20, v24);
  swift_endAccess();
  os_unfair_lock_unlock(v18);
  sub_1ACA3AAD4((uint64_t)v2 + qword_1E9A22B18, v25, &qword_1E99F2EB8);
  uint64_t v29 = sub_1ACE75E88();
  int v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v25, 1, v29);
  sub_1ACA50E78(v25, &qword_1E99F2EB8);
  if (v30 == 1) {
    goto LABEL_12;
  }
  uint64_t v31 = *(void *)((char *)v2 + *(void *)(*v2 + 168));
  uint64_t v32 = (os_unfair_lock_s *)(*(void *)(v31 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v32);
  uint64_t v33 = *(void *)(v31 + 24);
  uint64_t v34 = v33 - 1;
  if (!__OFSUB__(v33, 1))
  {
    *(void *)(v31 + 24) = v34;
    os_unfair_lock_unlock(v32);
    if (!v34)
    {
      CFRunLoopSourceSignal(*(CFRunLoopSourceRef *)(v31 + 40));
      CFRunLoopWakeUp(*(CFRunLoopRef *)(v31 + 32));
    }
    swift_release();
    goto LABEL_12;
  }
  __break(1u);
}

void XCTestCombineValidator.receive(completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v30 = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2EB8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v29 = (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE757A8();
  uint64_t v7 = sub_1ACE76FD8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = (os_unfair_lock_s *)(*(uint64_t *)((char *)v1 + *(void *)(v3 + 184)) + 16);
  os_unfair_lock_lock(v14);
  uint64_t v15 = (uint64_t)v1 + *(void *)(*v1 + 128);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, v15, v7);
  uint64_t v16 = *(void *)(v6 - 8);
  int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  if (v17 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v11, v30, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v6);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v15, v11, v7);
    swift_endAccess();
    uint64_t v32 = 0;
    memset(v31, 0, sizeof(v31));
    uint64_t v18 = (uint64_t)v2 + *(void *)(*v2 + 144);
    swift_beginAccess();
    sub_1ACAC8CB4((uint64_t)v31, v18);
    swift_endAccess();
    os_unfair_lock_unlock(v14);
    uint64_t v19 = v29;
    sub_1ACA3AAD4((uint64_t)v2 + qword_1E9A22B18, v29, &qword_1E99F2EB8);
    uint64_t v20 = sub_1ACE75E88();
    int v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20);
    sub_1ACA50E78(v19, &qword_1E99F2EB8);
    if (v21 != 1)
    {
      uint64_t v22 = *(uint64_t *)((char *)v2 + *(void *)(*v2 + 160));
      char v23 = (os_unfair_lock_s *)(*(void *)(v22 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v23);
      uint64_t v24 = *(void *)(v22 + 24);
      uint64_t v25 = v24 - 1;
      if (__OFSUB__(v24, 1))
      {
        __break(1u);
      }
      else
      {
        *(void *)(v22 + 24) = v25;
        os_unfair_lock_unlock(v23);
        if (!v25)
        {
          CFRunLoopSourceSignal(*(CFRunLoopSourceRef *)(v22 + 40));
          CFRunLoopWakeUp(*(CFRunLoopRef *)(v22 + 32));
        }
        swift_release();
      }
    }
  }
  else
  {
    os_unfair_lock_unlock(v14);
    *(void *)&v31[0] = 0;
    *((void *)&v31[0] + 1) = 0xE000000000000000;
    sub_1ACE77268();
    sub_1ACE762C8();
    sub_1ACE77808();
    sub_1ACE762C8();
    uint64_t v26 = *((void *)&v31[0] + 1);
    unint64_t v27 = (uint64_t *)((char *)v2 + *(void *)(*v2 + 136));
    *unint64_t v27 = *(void *)&v31[0];
    v27[1] = v26;
    swift_bridgeObjectRelease();
  }
}

void XCTestCombineValidator.request(_:)(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + *(void *)(*(void *)v1 + 184)) + 16);
  os_unfair_lock_lock(v3);
  uint64_t v4 = v1 + *(void *)(*(void *)v1 + 144);
  swift_beginAccess();
  sub_1ACA3AAD4(v4, (uint64_t)&v9, &qword_1EB76DE38);
  if (v10)
  {
    sub_1ACA3AABC(&v9, (uint64_t)v11);
    os_unfair_lock_unlock(v3);
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    sub_1ACE75808();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
    return;
  }
  sub_1ACA50E78((uint64_t)&v9, &qword_1EB76DE38);
  uint64_t v5 = (uint64_t *)(v1 + *(void *)(*(void *)v1 + 152));
  swift_beginAccess();
  uint64_t v6 = *v5;
  sub_1ACE757D8();
  if (sub_1ACE757B8()) {
    goto LABEL_12;
  }
  sub_1ACE757D8();
  char v7 = sub_1ACE757B8();
  uint64_t v8 = sub_1ACE757D8();
  if ((v7 & 1) == 0)
  {
    if ((sub_1ACE757B8() & 1) == 0)
    {
      if ((v6 | a1) < 0)
      {
        __break(1u);
        goto LABEL_15;
      }
      uint64_t v8 = v6 + a1;
      if (!__OFADD__(v6, a1))
      {
        if ((v8 & 0x8000000000000000) == 0) {
          goto LABEL_11;
        }
LABEL_15:
        __break(1u);
        return;
      }
    }
    uint64_t v8 = sub_1ACE757D8();
  }
LABEL_11:
  *uint64_t v5 = v8;
LABEL_12:
  swift_endAccess();
  os_unfair_lock_unlock(v3);
}

void sub_1ACBA6E14(void *a1)
{
}

void sub_1ACBA6E38(uint64_t a1)
{
}

void sub_1ACBA6E5C(uint64_t a1)
{
}

void sub_1ACBA6E80(uint64_t a1)
{
}

uint64_t sub_1ACBA6EA4()
{
  return 0x6F746164696C6156;
}

void sub_1ACBA6EC0()
{
}

uint64_t type metadata accessor for XCTestCombineValidator.Errors()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACBA6EFC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACBA6F18()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACBA6F34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = XCTestCombineValidator.currentValues.getter();
  *a1 = result;
  return result;
}

void sub_1ACBA6F60()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1ACBA3A1C(v0);
}

uint64_t sub_1ACBA6F8C()
{
  return 24;
}

__n128 sub_1ACBA6F98(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

void sub_1ACBA6FAC()
{
  sub_1ACBA70F4();
  if (v0 <= 0x3F)
  {
    sub_1ACE757A8();
    sub_1ACE76FD8();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t method lookup function for XCTestCombineValidator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for XCTestCombineValidator);
}

uint64_t dispatch thunk of XCTestCombineValidator.__allocating_init(initialDemand:timeout:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

void sub_1ACBA70F4()
{
  if (!qword_1E99F2F48[0])
  {
    sub_1ACE75E88();
    unint64_t v0 = sub_1ACE76FD8();
    if (!v1) {
      atomic_store(v0, qword_1E99F2F48);
    }
  }
}

uint64_t sub_1ACBA714C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1ACBA71E0(void *__dst, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = __dst;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  if (v5 > 3)
  {
    unint64_t v6 = v5 + 1;
    int v7 = *(_DWORD *)(v4 + 80);
    int v8 = v7 & 0x1000F8;
    goto LABEL_6;
  }
  unsigned int v12 = ((1 << (8 * v5)) + 1) >> (8 * v5);
  int v7 = *(_DWORD *)(v4 + 80);
  if (v12 > 0xFFFD)
  {
    if ((unint64_t)(v5 + 4) > 0x18 || (v7 & 0x1000F8) != 0) {
      goto LABEL_27;
    }
    unsigned int v10 = *(_DWORD *)&a2[v5];
    unsigned int v11 = v10 - 2;
    if (v10 < 2) {
      goto LABEL_39;
    }
    goto LABEL_29;
  }
  int v8 = v7 & 0x1000F8;
  if (v12 > 0xFD)
  {
    if ((unint64_t)(v5 + 2) > 0x18 || v8 != 0) {
      goto LABEL_27;
    }
    unsigned int v10 = *(unsigned __int16 *)&a2[v5];
    unsigned int v11 = v10 - 2;
    if (v10 < 2) {
      goto LABEL_39;
    }
LABEL_29:
    if (v5 <= 3) {
      uint64_t v16 = v5;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a2;
        goto LABEL_37;
      case 2:
        int v17 = *(unsigned __int16 *)a2;
        goto LABEL_37;
      case 3:
        int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_37;
      case 4:
        int v17 = *(_DWORD *)a2;
LABEL_37:
        int v18 = (v17 | (v11 << (8 * v5))) + 2;
        unsigned int v10 = v17 + 2;
        if (v5 < 4) {
          unsigned int v10 = v18;
        }
        break;
      default:
        goto LABEL_39;
    }
    goto LABEL_39;
  }
  unint64_t v6 = v5 + 1;
LABEL_6:
  if (v6 > 0x18 || v8 != 0)
  {
LABEL_27:
    uint64_t v15 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v15 + (((v7 & 0xF8 | 7u) + 16) & ~(unint64_t)(v7 & 0xF8 | 7u)));
    swift_retain();
    return v3;
  }
  unsigned int v10 = a2[v5];
  unsigned int v11 = v10 - 2;
  if (v10 >= 2) {
    goto LABEL_29;
  }
LABEL_39:
  if (v10 == 1)
  {
    uint64_t v20 = *((void *)a2 + 1);
    *uint64_t v3 = *(void *)a2;
    v3[1] = v20;
    swift_bridgeObjectRetain();
    if (v5 > 3) {
      goto LABEL_46;
    }
    unsigned int v23 = ((1 << (8 * v5)) + 1) >> (8 * v5);
    if (v23 > 0xFFFD)
    {
      *(_DWORD *)((char *)v3 + v5) = 1;
      return v3;
    }
    if (v23 <= 0xFD) {
LABEL_46:
    }
      *((unsigned char *)v3 + v5) = 1;
    else {
      *(_WORD *)((char *)v3 + v5) = 1;
    }
  }
  else if (v10)
  {
    if (v5 > 3) {
      goto LABEL_51;
    }
    unsigned int v21 = ((1 << (8 * v5)) + 1) >> (8 * v5);
    uint64_t v22 = 2;
    if (v21 > 0xFFFD) {
      uint64_t v22 = 4;
    }
    if (v21 <= 0xFD) {
LABEL_51:
    }
      uint64_t v22 = 1;
    memcpy(__dst, a2, v22 + v5);
  }
  else
  {
    (*(void (**)(void *))(v4 + 16))(__dst);
    if (v5 <= 3)
    {
      unsigned int v19 = ((1 << (8 * v5)) + 1) >> (8 * v5);
      if (v19 > 0xFFFD)
      {
        *(_DWORD *)((char *)v3 + v5) = 0;
        return v3;
      }
      if (v19 > 0xFD)
      {
        *(_WORD *)((char *)v3 + v5) = 0;
        return v3;
      }
    }
    *((unsigned char *)v3 + v5) = 0;
  }
  return v3;
}

unsigned __int8 *sub_1ACBA74B4(unsigned __int8 *result, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  if (v2 > 3) {
    goto LABEL_4;
  }
  unsigned int v4 = ((1 << (8 * v2)) + 1) >> (8 * v2);
  if (v4 > 0xFFFD)
  {
    unsigned int v3 = *(_DWORD *)&result[v2];
  }
  else
  {
    if (v4 <= 0xFD)
    {
LABEL_4:
      unsigned int v3 = result[v2];
      goto LABEL_9;
    }
    unsigned int v3 = *(unsigned __int16 *)&result[v2];
  }
LABEL_9:
  unsigned int v5 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v6 = v2;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *result;
        goto LABEL_18;
      case 2:
        int v7 = *(unsigned __int16 *)result;
        goto LABEL_18;
      case 3:
        int v7 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_18;
      case 4:
        int v7 = *(_DWORD *)result;
LABEL_18:
        int v8 = (v7 | (v5 << (8 * v2))) + 2;
        unsigned int v3 = v7 + 2;
        if (v2 < 4) {
          unsigned int v3 = v8;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return (unsigned __int8 *)swift_bridgeObjectRelease();
  }
  if (!v3) {
    return (unsigned __int8 *)(*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 24) - 8) + 8))();
  }
  return result;
}

void *sub_1ACBA75FC(void *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  if (v4 > 3) {
    goto LABEL_5;
  }
  unsigned int v6 = ((1 << (8 * v4)) + 1) >> (8 * v4);
  if (v6 > 0xFFFD)
  {
    unsigned int v5 = *(_DWORD *)&a2[v4];
  }
  else
  {
    if (v6 <= 0xFD)
    {
LABEL_5:
      unsigned int v5 = a2[v4];
      goto LABEL_10;
    }
    unsigned int v5 = *(unsigned __int16 *)&a2[v4];
  }
LABEL_10:
  unsigned int v7 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v8 = v4;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_19;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_19:
        int v10 = (v9 | (v7 << (8 * v4))) + 2;
        unsigned int v5 = v9 + 2;
        if (v4 < 4) {
          unsigned int v5 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v12 = *((void *)a2 + 1);
    void *__dst = *(void *)a2;
    __dst[1] = v12;
    swift_bridgeObjectRetain();
    if (v4 > 3) {
      goto LABEL_28;
    }
    unsigned int v15 = ((1 << (8 * v4)) + 1) >> (8 * v4);
    if (v15 > 0xFFFD)
    {
      *(_DWORD *)((char *)__dst + v4) = 1;
      return __dst;
    }
    if (v15 <= 0xFD) {
LABEL_28:
    }
      *((unsigned char *)__dst + v4) = 1;
    else {
      *(_WORD *)((char *)__dst + v4) = 1;
    }
  }
  else if (v5)
  {
    if (v4 > 3) {
      goto LABEL_33;
    }
    unsigned int v13 = ((1 << (8 * v4)) + 1) >> (8 * v4);
    uint64_t v14 = 2;
    if (v13 > 0xFFFD) {
      uint64_t v14 = 4;
    }
    if (v13 <= 0xFD) {
LABEL_33:
    }
      uint64_t v14 = 1;
    memcpy(__dst, a2, v14 + v4);
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 24) - 8) + 16))(__dst);
    if (v4 <= 3)
    {
      unsigned int v11 = ((1 << (8 * v4)) + 1) >> (8 * v4);
      if (v11 > 0xFFFD)
      {
        *(_DWORD *)((char *)__dst + v4) = 0;
        return __dst;
      }
      if (v11 > 0xFD)
      {
        *(_WORD *)((char *)__dst + v4) = 0;
        return __dst;
      }
    }
    *((unsigned char *)__dst + v4) = 0;
  }
  return __dst;
}

void *sub_1ACBA7848(void *__dst, void *__src, uint64_t a3)
{
  if (__dst == __src) {
    return __dst;
  }
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 0x10uLL) {
    uint64_t v7 = 16;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  if (v7 > 3) {
    goto LABEL_6;
  }
  unsigned int v9 = ((1 << (8 * v7)) + 1) >> (8 * v7);
  if (v9 > 0xFFFD)
  {
    unsigned int v8 = *(_DWORD *)((char *)__dst + v7);
  }
  else
  {
    if (v9 <= 0xFD)
    {
LABEL_6:
      unsigned int v8 = *((unsigned __int8 *)__dst + v7);
      goto LABEL_11;
    }
    unsigned int v8 = *(unsigned __int16 *)((char *)__dst + v7);
  }
LABEL_11:
  unsigned int v10 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v11 = v7;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *(unsigned __int8 *)__dst;
        if (v7 < 4) {
          goto LABEL_23;
        }
        goto LABEL_24;
      case 2:
        int v12 = *(unsigned __int16 *)__dst;
        if (v7 >= 4) {
          goto LABEL_24;
        }
        goto LABEL_23;
      case 3:
        int v12 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
        if (v7 >= 4) {
          goto LABEL_24;
        }
        goto LABEL_23;
      case 4:
        int v12 = *(_DWORD *)__dst;
        if (v7 < 4) {
LABEL_23:
        }
          v12 |= v10 << (8 * v7);
LABEL_24:
        unsigned int v8 = v12 + 2;
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    swift_bridgeObjectRelease();
    if (v7 > 3) {
      goto LABEL_33;
    }
  }
  else
  {
    if (!v8) {
      (*(void (**)(void *, uint64_t))(v6 + 8))(__dst, v5);
    }
    if (v7 > 3) {
      goto LABEL_33;
    }
  }
  unsigned int v13 = ((1 << (8 * v7)) + 1) >> (8 * v7);
  if (v13 <= 0xFFFD)
  {
    if (v13 > 0xFD)
    {
      unsigned int v14 = *(unsigned __int16 *)((char *)__src + v7);
      unsigned int v15 = v14 - 2;
      if (v14 < 2) {
        goto LABEL_48;
      }
      goto LABEL_38;
    }
LABEL_33:
    unsigned int v14 = *((unsigned __int8 *)__src + v7);
    unsigned int v15 = v14 - 2;
    if (v14 < 2) {
      goto LABEL_48;
    }
LABEL_38:
    if (v7 <= 3) {
      uint64_t v16 = v7;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *(unsigned __int8 *)__src;
        if (v7 >= 4) {
          goto LABEL_61;
        }
        goto LABEL_47;
      case 2:
        int v17 = *(unsigned __int16 *)__src;
        if (v7 >= 4) {
          goto LABEL_61;
        }
        goto LABEL_47;
      case 3:
        int v17 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
        if (v7 < 4) {
          goto LABEL_47;
        }
        goto LABEL_61;
      case 4:
        int v17 = *(_DWORD *)__src;
        if (v7 < 4)
        {
LABEL_47:
          unsigned int v14 = (v17 | (v15 << (8 * v7))) + 2;
          goto LABEL_48;
        }
LABEL_61:
        unsigned int v14 = v17 + 2;
        if (v14 == 1) {
          goto LABEL_62;
        }
        goto LABEL_49;
      default:
        goto LABEL_48;
    }
  }
  unsigned int v14 = *(_DWORD *)((char *)__src + v7);
  unsigned int v15 = v14 - 2;
  if (v14 >= 2) {
    goto LABEL_38;
  }
LABEL_48:
  if (v14 == 1)
  {
LABEL_62:
    void *__dst = *__src;
    __dst[1] = __src[1];
    swift_bridgeObjectRetain();
    if (v7 > 3) {
      goto LABEL_63;
    }
    unsigned int v21 = ((1 << (8 * v7)) + 1) >> (8 * v7);
    if (v21 > 0xFFFD)
    {
      *(_DWORD *)((char *)__dst + v7) = 1;
      return __dst;
    }
    if (v21 <= 0xFD) {
LABEL_63:
    }
      *((unsigned char *)__dst + v7) = 1;
    else {
      *(_WORD *)((char *)__dst + v7) = 1;
    }
  }
  else
  {
LABEL_49:
    if (v14)
    {
      if (v7 > 3) {
        goto LABEL_58;
      }
      unsigned int v19 = ((1 << (8 * v7)) + 1) >> (8 * v7);
      uint64_t v20 = 2;
      if (v19 > 0xFFFD) {
        uint64_t v20 = 4;
      }
      if (v19 <= 0xFD) {
LABEL_58:
      }
        uint64_t v20 = 1;
      memcpy(__dst, __src, v20 + v7);
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(__dst, __src, v5);
      if (v7 <= 3)
      {
        unsigned int v18 = ((1 << (8 * v7)) + 1) >> (8 * v7);
        if (v18 > 0xFFFD)
        {
          *(_DWORD *)((char *)__dst + v7) = 0;
          return __dst;
        }
        if (v18 > 0xFD)
        {
          *(_WORD *)((char *)__dst + v7) = 0;
          return __dst;
        }
      }
      *((unsigned char *)__dst + v7) = 0;
    }
  }
  return __dst;
}

char *sub_1ACBA7C0C(char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  if (v4 > 3) {
    goto LABEL_5;
  }
  unsigned int v6 = ((1 << (8 * v4)) + 1) >> (8 * v4);
  if (v6 > 0xFFFD)
  {
    unsigned int v5 = *(_DWORD *)&a2[v4];
  }
  else
  {
    if (v6 <= 0xFD)
    {
LABEL_5:
      unsigned int v5 = a2[v4];
      goto LABEL_10;
    }
    unsigned int v5 = *(unsigned __int16 *)&a2[v4];
  }
LABEL_10:
  unsigned int v7 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v8 = v4;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_19;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_19:
        int v10 = (v9 | (v7 << (8 * v4))) + 2;
        unsigned int v5 = v9 + 2;
        if (v4 < 4) {
          unsigned int v5 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *(_OWORD *)__dst = *(_OWORD *)a2;
    if (v4 > 3) {
      goto LABEL_28;
    }
    unsigned int v14 = ((1 << (8 * v4)) + 1) >> (8 * v4);
    if (v14 > 0xFFFD)
    {
      *(_DWORD *)&__dst[v4] = 1;
      return __dst;
    }
    if (v14 <= 0xFD) {
LABEL_28:
    }
      __dst[v4] = 1;
    else {
      *(_WORD *)&__dst[v4] = 1;
    }
  }
  else if (v5)
  {
    if (v4 > 3) {
      goto LABEL_33;
    }
    unsigned int v12 = ((1 << (8 * v4)) + 1) >> (8 * v4);
    uint64_t v13 = 2;
    if (v12 > 0xFFFD) {
      uint64_t v13 = 4;
    }
    if (v12 <= 0xFD) {
LABEL_33:
    }
      uint64_t v13 = 1;
    memcpy(__dst, a2, v13 + v4);
  }
  else
  {
    (*(void (**)(char *))(*(void *)(*(void *)(a3 + 24) - 8) + 32))(__dst);
    if (v4 <= 3)
    {
      unsigned int v11 = ((1 << (8 * v4)) + 1) >> (8 * v4);
      if (v11 > 0xFFFD)
      {
        *(_DWORD *)&__dst[v4] = 0;
        return __dst;
      }
      if (v11 > 0xFD)
      {
        *(_WORD *)&__dst[v4] = 0;
        return __dst;
      }
    }
    __dst[v4] = 0;
  }
  return __dst;
}

char *sub_1ACBA7E54(char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst == (char *)__src) {
    return __dst;
  }
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 0x10uLL) {
    uint64_t v7 = 16;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  if (v7 > 3) {
    goto LABEL_6;
  }
  unsigned int v9 = ((1 << (8 * v7)) + 1) >> (8 * v7);
  if (v9 > 0xFFFD)
  {
    unsigned int v8 = *(_DWORD *)&__dst[v7];
  }
  else
  {
    if (v9 <= 0xFD)
    {
LABEL_6:
      unsigned int v8 = __dst[v7];
      goto LABEL_11;
    }
    unsigned int v8 = *(unsigned __int16 *)&__dst[v7];
  }
LABEL_11:
  unsigned int v10 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v11 = v7;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *__dst;
        goto LABEL_20;
      case 2:
        int v12 = *(unsigned __int16 *)__dst;
        goto LABEL_20;
      case 3:
        int v12 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
        goto LABEL_20;
      case 4:
        int v12 = *(_DWORD *)__dst;
LABEL_20:
        int v13 = (v12 | (v10 << (8 * v7))) + 2;
        unsigned int v8 = v12 + 2;
        if (v7 < 4) {
          unsigned int v8 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    swift_bridgeObjectRelease();
    if (v7 > 3) {
      goto LABEL_30;
    }
  }
  else
  {
    if (!v8) {
      (*(void (**)(char *, uint64_t))(v6 + 8))(__dst, v5);
    }
    if (v7 > 3)
    {
LABEL_30:
      unsigned int v15 = __src[v7];
      unsigned int v16 = v15 - 2;
      if (v15 < 2) {
        goto LABEL_45;
      }
      goto LABEL_35;
    }
  }
  unsigned int v14 = ((1 << (8 * v7)) + 1) >> (8 * v7);
  if (v14 > 0xFFFD)
  {
    unsigned int v15 = *(_DWORD *)&__src[v7];
    unsigned int v16 = v15 - 2;
    if (v15 < 2) {
      goto LABEL_45;
    }
    goto LABEL_35;
  }
  if (v14 <= 0xFD) {
    goto LABEL_30;
  }
  unsigned int v15 = *(unsigned __int16 *)&__src[v7];
  unsigned int v16 = v15 - 2;
  if (v15 < 2) {
    goto LABEL_45;
  }
LABEL_35:
  if (v7 <= 3) {
    uint64_t v17 = v7;
  }
  else {
    uint64_t v17 = 4;
  }
  switch(v17)
  {
    case 1:
      int v18 = *__src;
      goto LABEL_43;
    case 2:
      int v18 = *(unsigned __int16 *)__src;
      goto LABEL_43;
    case 3:
      int v18 = *(unsigned __int16 *)__src | (__src[2] << 16);
      goto LABEL_43;
    case 4:
      int v18 = *(_DWORD *)__src;
LABEL_43:
      int v19 = (v18 | (v16 << (8 * v7))) + 2;
      unsigned int v15 = v18 + 2;
      if (v7 < 4) {
        unsigned int v15 = v19;
      }
      break;
    default:
      break;
  }
LABEL_45:
  if (v15 == 1)
  {
    *(_OWORD *)__dst = *(_OWORD *)__src;
    if (v7 > 3) {
      goto LABEL_52;
    }
    unsigned int v23 = ((1 << (8 * v7)) + 1) >> (8 * v7);
    if (v23 > 0xFFFD)
    {
      *(_DWORD *)&__dst[v7] = 1;
      return __dst;
    }
    if (v23 <= 0xFD) {
LABEL_52:
    }
      __dst[v7] = 1;
    else {
      *(_WORD *)&__dst[v7] = 1;
    }
  }
  else if (v15)
  {
    if (v7 > 3) {
      goto LABEL_57;
    }
    unsigned int v21 = ((1 << (8 * v7)) + 1) >> (8 * v7);
    uint64_t v22 = 2;
    if (v21 > 0xFFFD) {
      uint64_t v22 = 4;
    }
    if (v21 <= 0xFD) {
LABEL_57:
    }
      uint64_t v22 = 1;
    memcpy(__dst, __src, v22 + v7);
  }
  else
  {
    (*(void (**)(char *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
    if (v7 <= 3)
    {
      unsigned int v20 = ((1 << (8 * v7)) + 1) >> (8 * v7);
      if (v20 > 0xFFFD)
      {
        *(_DWORD *)&__dst[v7] = 0;
        return __dst;
      }
      if (v20 > 0xFD)
      {
        *(_WORD *)&__dst[v7] = 0;
        return __dst;
      }
    }
    __dst[v7] = 0;
  }
  return __dst;
}

uint64_t sub_1ACBA81DC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (v3 <= 0x10) {
    unint64_t v3 = 16;
  }
  if (v3 > 3)
  {
    int v4 = 3;
LABEL_7:
    char v6 = 8;
    goto LABEL_8;
  }
  unsigned int v5 = ((1 << (8 * v3)) + 1) >> (8 * v3);
  if (v5 > 0xFFFD) {
    goto LABEL_11;
  }
  int v4 = v5 + 2;
  if (v5 <= 0xFD) {
    goto LABEL_7;
  }
  char v6 = 16;
LABEL_8:
  unsigned int v7 = (1 << v6) - v4;
  if ((v7 & 0x80000000) == 0)
  {
    if (v3 > 3) {
      goto LABEL_15;
    }
LABEL_12:
    unsigned int v8 = ((1 << (8 * v3)) + 1) >> (8 * v3);
    uint64_t v9 = 2;
    if (v8 > 0xFFFD) {
      uint64_t v9 = 4;
    }
    if (v8 > 0xFD) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_11:
  unsigned int v7 = 0x7FFFFFFF;
  if (v3 <= 3) {
    goto LABEL_12;
  }
LABEL_15:
  uint64_t v9 = 1;
LABEL_16:
  if (!a2) {
    return 0;
  }
  if (a2 <= v7) {
    goto LABEL_35;
  }
  unint64_t v10 = v9 + v3;
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v13 = ((a2 - v7 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v13))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_35;
      }
      goto LABEL_27;
    }
    if (v13 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_35;
      }
      goto LABEL_27;
    }
    if (v13 < 2)
    {
LABEL_35:
      if (v7)
      {
        if (v3 <= 3)
        {
          unsigned int v21 = ((1 << (8 * v3)) + 1) >> (8 * v3);
          if (v21 > 0xFFFD)
          {
            unsigned int v16 = *(_DWORD *)((char *)a1 + v3);
            unsigned int v17 = ~v16;
LABEL_45:
            unsigned int v24 = 0x7FFFFFFF;
LABEL_46:
            if (v24 > v17) {
              return -v16;
            }
            else {
              return 0;
            }
          }
          int v19 = v21 + 2;
          if (v21 > 0xFD)
          {
            int v23 = *(unsigned __int16 *)((char *)a1 + v3);
            unsigned int v16 = v23 | 0xFFFF0000;
            unsigned int v17 = v23 ^ 0xFFFF;
            char v18 = 16;
          }
          else
          {
            int v22 = *((unsigned __int8 *)a1 + v3);
            unsigned int v16 = v22 | 0xFFFFFF00;
            unsigned int v17 = v22 ^ 0xFF;
            char v18 = 8;
          }
        }
        else
        {
          int v15 = *((unsigned __int8 *)a1 + v3);
          unsigned int v16 = v15 | 0xFFFFFF00;
          unsigned int v17 = v15 ^ 0xFF;
          char v18 = 8;
          int v19 = 3;
        }
        unsigned int v24 = (1 << v18) - v19;
        if ((v24 & 0x80000000) == 0) {
          goto LABEL_46;
        }
        goto LABEL_45;
      }
      return 0;
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_35;
  }
LABEL_27:
  int v14 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v14 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v10 | v14) + 1;
}

void sub_1ACBA8440(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  char v6 = 8 * v5;
  if (v5 > 3)
  {
    int v7 = 3;
LABEL_5:
    char v8 = 8;
    goto LABEL_6;
  }
  unsigned int v10 = ((1 << v6) + 1) >> v6;
  if (v10 > 0xFFFD) {
    goto LABEL_12;
  }
  int v7 = v10 + 2;
  if (v10 <= 0xFD) {
    goto LABEL_5;
  }
  char v8 = 16;
LABEL_6:
  unsigned int v9 = (1 << v8) - v7;
  if ((v9 & 0x80000000) == 0)
  {
    if (v5 > 3) {
      goto LABEL_16;
    }
    goto LABEL_13;
  }
LABEL_12:
  unsigned int v9 = 0x7FFFFFFF;
  if (v5 > 3)
  {
LABEL_16:
    uint64_t v12 = 1;
    goto LABEL_17;
  }
LABEL_13:
  unsigned int v11 = ((1 << v6) + 1) >> v6;
  uint64_t v12 = 2;
  if (v11 > 0xFFFD) {
    uint64_t v12 = 4;
  }
  if (v11 <= 0xFD) {
    goto LABEL_16;
  }
LABEL_17:
  size_t v13 = v12 + v5;
  if (a3 <= v9)
  {
    int v14 = 0;
  }
  else if (v13 <= 3)
  {
    unsigned int v17 = ((a3 - v9 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
    if (HIWORD(v17))
    {
      int v14 = 4;
    }
    else if (v17 >= 0x100)
    {
      int v14 = 2;
    }
    else
    {
      int v14 = v17 > 1;
    }
  }
  else
  {
    int v14 = 1;
  }
  if (v9 < a2)
  {
    unsigned int v15 = ~v9 + a2;
    if (v13 < 4)
    {
      int v16 = (v15 >> (8 * v13)) + 1;
      if (v13)
      {
        int v18 = v15 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if (v13 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if (v13 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v15;
      int v16 = 1;
    }
    switch(v14)
    {
      case 1:
        a1[v13] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v13] = v16;
        return;
      case 3:
        goto LABEL_53;
      case 4:
        *(_DWORD *)&a1[v13] = v16;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 2:
      *(_WORD *)&a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 3:
LABEL_53:
      __break(1u);
      JUMPOUT(0x1ACBA86E0);
    case 4:
      *(_DWORD *)&a1[v13] = 0;
      goto LABEL_36;
    default:
LABEL_36:
      if (!a2) {
        return;
      }
LABEL_37:
      int v19 = -a2;
      if (v5 > 3) {
        goto LABEL_38;
      }
      unsigned int v20 = ((1 << v6) + 1) >> v6;
      if (v20 > 0xFFFD)
      {
        *(_DWORD *)&a1[v5] = v19;
      }
      else if (v20 <= 0xFD)
      {
LABEL_38:
        a1[v5] = v19;
      }
      else
      {
        *(_WORD *)&a1[v5] = v19;
      }
      return;
  }
}

uint64_t sub_1ACBA8708(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v3 = 16;
  if (*(void *)(v2 + 64) > 0x10uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  if (v3 > 3) {
    goto LABEL_4;
  }
  unsigned int v5 = ((1 << (8 * v3)) + 1) >> (8 * v3);
  if (v5 > 0xFFFD)
  {
    uint64_t v4 = *(unsigned int *)&a1[v3];
  }
  else
  {
    if (v5 <= 0xFD)
    {
LABEL_4:
      uint64_t v4 = a1[v3];
      goto LABEL_9;
    }
    uint64_t v4 = *(unsigned __int16 *)&a1[v3];
  }
LABEL_9:
  int v6 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v7 = v3;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_18;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_18;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_18;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_18:
        unsigned int v9 = (v8 | (v6 << (8 * v3))) + 2;
        LODWORD(v4) = v8 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v9;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1ACBA8800(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= 0x10uLL) {
    size_t v5 = 16;
  }
  else {
    size_t v5 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v6 = a2 - 2;
    if (v5 < 4)
    {
      int v8 = (v6 >> (8 * v5)) + 2;
      v6 &= ~(-1 << (8 * v5));
      unsigned int v9 = (int *)&a1[v5];
      unsigned int v10 = ((1 << (8 * v5)) + 1) >> (8 * v5);
      if (v10 > 0xFFFD)
      {
        *unsigned int v9 = v8;
      }
      else if (v10 > 0xFD)
      {
        *(_WORD *)unsigned int v9 = v8;
      }
      else
      {
        *(unsigned char *)unsigned int v9 = v8;
      }
    }
    else
    {
      a1[v5] = 2;
    }
    if (v5 <= 3) {
      int v11 = v5;
    }
    else {
      int v11 = 4;
    }
    bzero(a1, v5);
    switch(v11)
    {
      case 2:
        *(_WORD *)a1 = v6;
        break;
      case 3:
        *(_WORD *)a1 = v6;
        a1[2] = BYTE2(v6);
        break;
      case 4:
        *(_DWORD *)a1 = v6;
        break;
      default:
        *a1 = v6;
        break;
    }
  }
  else
  {
    if (v5 > 3)
    {
LABEL_6:
      a1[v5] = a2;
      return;
    }
    unsigned int v7 = ((1 << (8 * v5)) + 1) >> (8 * v5);
    if (v7 > 0xFFFD)
    {
      *(_DWORD *)&a1[v5] = a2;
    }
    else
    {
      if (v7 <= 0xFD) {
        goto LABEL_6;
      }
      *(_WORD *)&a1[v5] = a2;
    }
  }
}

uint64_t dispatch thunk of PlayStateEstimationProvider.estimatedPlayState(for:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a5 + 8))(a1, a2, a3 & 1);
}

id AssetProcessingStep.receive(on:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  size_t v13 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  int v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, a2);
  uint64_t v9 = type metadata accessor for ReceiveOnAssetProcessingStep();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&a3[*(int *)(v9 + 36)], v8, a2);
  unsigned int v10 = v13;
  *(void *)a3 = v13;
  return v10;
}

uint64_t ReceiveOnAssetProcessingStep.init(upstream:receiveQueue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for ReceiveOnAssetProcessingStep();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(&a4[*(int *)(v8 + 36)], a1, a3);
  *(void *)a4 = a2;
  return result;
}

uint64_t type metadata accessor for ReceiveOnAssetProcessingStep()
{
  return __swift_instantiateGenericMetadata();
}

id ReceiveOnAssetProcessingStep.receiveQueue.getter()
{
  return *v0;
}

uint64_t ReceiveOnAssetProcessingStep.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t ReceiveOnAssetProcessingStep.metadata.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 40))(*(void *)(a1 + 16));
}

uint64_t ReceiveOnAssetProcessingStep.publisher.getter(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v3 - 8);
  size_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v32 = a1;
  uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
  uint64_t v37 = *(AssociatedTypeWitness - 1);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  unsigned int v10 = (char *)&v32 - v9;
  int v11 = (void *)sub_1ACA51E1C();
  uint64_t v36 = v11;
  uint64_t AssociatedConformanceWitness = (void *)swift_getAssociatedConformanceWitness();
  unint64_t v35 = AssociatedConformanceWitness;
  uint64_t v34 = (void *)sub_1ACA93A6C();
  v41[0] = AssociatedTypeWitness;
  v41[1] = v11;
  v41[2] = AssociatedConformanceWitness;
  v41[3] = v34;
  uint64_t v13 = sub_1ACE75758();
  uint64_t v40 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v33 = (char *)&v32 - v14;
  swift_getWitnessTable();
  uint64_t v15 = type metadata accessor for EmitLifecycle();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v38 = v15;
  uint64_t v39 = v16;
  MEMORY[0x1F4188790](v15);
  int v18 = (char *)&v32 - v17;
  (*(void (**)(uint64_t, uint64_t))(v6 + 48))(v7, v6);
  int v19 = *v1;
  v41[0] = v19;
  uint64_t v20 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v5, 1, 1, v20);
  id v21 = v19;
  int v22 = v33;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v5, &qword_1EB7669C8);

  (*(void (**)(char *, void *))(v37 + 8))(v10, AssociatedTypeWitness);
  uint64_t v23 = v32;
  uint64_t WitnessTable = swift_getWitnessTable();
  AssetProcessingStep.metadataTrace.getter(v23, WitnessTable, (uint64_t)v41);
  uint64_t v25 = sub_1ACE76D38();
  unint64_t v27 = v26;
  char v28 = j___s18PodcastsFoundation13EmitLifecycleV16defaultVerbositySbvgZ();
  Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)((uint64_t)v41, (uint64_t)"QueueHop", 8, 2, 0, v25, v27, v28 & 1, (uint64_t)v18, v13);
  swift_bridgeObjectRelease();
  sub_1ACA50E78((uint64_t)v41, &qword_1EB772EA0);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v13);
  uint64_t v29 = v38;
  swift_getWitnessTable();
  uint64_t v30 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v29);
  return v30;
}

uint64_t sub_1ACBA9024@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = ReceiveOnAssetProcessingStep.publisher.getter(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1ACBA904C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1ACBA91EC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 8) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1ACBA9448);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
          uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t sub_1ACBA9470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v71 = a3;
  uint64_t v74 = a1;
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1EC8);
  MEMORY[0x1F4188790](v70);
  uint64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ThinClientEpisodeStateModel();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v72 = v10;
  uint64_t v73 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v66 = (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v67 = (uint64_t)&v65 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v68 = (uint64_t)&v65 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0D30);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  id v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  unsigned int v24 = (char *)&v65 - v23;
  MEMORY[0x1F4188790](v22);
  unint64_t v26 = (char *)&v65 - v25;
  if (*(void *)(a4 + 16))
  {
    uint64_t v27 = sub_1ACA65CC4(v74);
    if (v28)
    {
      uint64_t v29 = *(void *)(*(void *)(a4 + 56) + 8 * v27);
      uint64_t v30 = *(void *)(v29 + 16);
      if (v30)
      {
        uint64_t v69 = a5;
        uint64_t v31 = (uint64_t)&v26[*(int *)(v17 + 48)];
        sub_1ACA3AAD4(v29+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * (v30 - 1), (uint64_t)v24, &qword_1E99F0D30);
        uint64_t v32 = (uint64_t)&v24[*(int *)(v17 + 48)];
        uint64_t v33 = sub_1ACE75118();
        uint64_t v34 = *(void *)(v33 - 8);
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v26, v24, v33);
        sub_1ACAEF308(v32, v31);
        uint64_t v35 = (uint64_t)&v21[*(int *)(v17 + 48)];
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v21, v26, v33);
        sub_1ACA50DB0(v31, v35);
        uint64_t v36 = v68;
        sub_1ACAEF308(v35, v68);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v33);
        if (qword_1E99EFEE8 != -1) {
          swift_once();
        }
        uint64_t v37 = sub_1ACE754C8();
        __swift_project_value_buffer(v37, (uint64_t)qword_1E99F2BF8);
        uint64_t v38 = v67;
        sub_1ACA50DB0(v36, v67);
        uint64_t v39 = sub_1ACE75498();
        os_log_type_t v40 = sub_1ACE76BD8();
        if (os_log_type_enabled(v39, v40))
        {
          uint64_t v41 = swift_slowAlloc();
          uint64_t v42 = swift_slowAlloc();
          *(_DWORD *)uint64_t v41 = 136315394;
          uint64_t v75 = v74;
          uint64_t v76 = v42;
          sub_1ACA55E4C();
          uint64_t v43 = sub_1ACE770B8();
          uint64_t v75 = sub_1ACA3189C(v43, v44, &v76);
          sub_1ACE76FF8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v41 + 12) = 2080;
          sub_1ACA50DB0(v38, v66);
          uint64_t v45 = sub_1ACE76228();
          uint64_t v75 = sub_1ACA3189C(v45, v46, &v76);
          sub_1ACE76FF8();
          swift_bridgeObjectRelease();
          sub_1ACAEF36C(v38);
          _os_log_impl(&dword_1AC9D5000, v39, v40, "[StateCache] state for %s (in-flight) -> %s", (uint8_t *)v41, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v42, -1, -1);
          MEMORY[0x1AD11B340](v41, -1, -1);
        }
        else
        {

          sub_1ACAEF36C(v38);
        }
        sub_1ACA50E78((uint64_t)v26, &qword_1E99F0D30);
        a5 = v69;
        sub_1ACAEF308(v36, v69);
        goto LABEL_23;
      }
    }
  }
  if (qword_1E99EFEE8 != -1) {
    swift_once();
  }
  uint64_t v47 = sub_1ACE754C8();
  __swift_project_value_buffer(v47, (uint64_t)qword_1E99F2BF8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v48 = sub_1ACE75498();
  os_log_type_t v49 = sub_1ACE76BD8();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v69 = a5;
    uint64_t v50 = swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    uint64_t v68 = v51;
    *(_DWORD *)uint64_t v50 = 136315394;
    uint64_t v52 = v74;
    uint64_t v75 = v74;
    uint64_t v76 = v51;
    sub_1ACA55E4C();
    uint64_t v53 = sub_1ACE770B8();
    uint64_t v75 = sub_1ACA3189C(v53, v54, &v76);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 12) = 2080;
    if (*(void *)(a2 + 16) && (uint64_t v55 = sub_1ACA65CC4(v52), (v56 & 1) != 0))
    {
      sub_1ACA50DB0(*(void *)(a2 + 56) + *(void *)(v73 + 72) * v55, (uint64_t)v9);
      uint64_t v57 = 0;
    }
    else
    {
      uint64_t v57 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56))(v9, v57, 1, v72);
    uint64_t v58 = sub_1ACE76228();
    uint64_t v75 = sub_1ACA3189C(v58, v59, &v76);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v48, v49, "[StateCache] state for %s (consolidated) -> %s", (uint8_t *)v50, 0x16u);
    uint64_t v60 = v68;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v60, -1, -1);
    MEMORY[0x1AD11B340](v50, -1, -1);

    a5 = v69;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  if (*(void *)(a2 + 16))
  {
    uint64_t v61 = sub_1ACA65CC4(v74);
    if (v62)
    {
      sub_1ACA50DB0(*(void *)(a2 + 56) + *(void *)(v73 + 72) * v61, a5);
LABEL_23:
      uint64_t v63 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56))(a5, v63, 1, v72);
    }
  }
  uint64_t v63 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56))(a5, v63, 1, v72);
}

void sub_1ACBA9C6C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v73 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2FD0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v68 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v68 - v17;
  if (!*(void *)(a4 + 16)
    || (uint64_t v19 = sub_1ACA65CC4(a1), (v20 & 1) == 0)
    || (uint64_t v21 = *(void *)(*(void *)(a4 + 56) + 8 * v19), (v22 = *(void *)(v21 + 16)) == 0))
  {
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v47 = sub_1ACE754C8();
    __swift_project_value_buffer(v47, (uint64_t)qword_1E99F2BF8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v48 = sub_1ACE75498();
    int v49 = sub_1ACE76BD8();
    if (os_log_type_enabled(v48, (os_log_type_t)v49))
    {
      LODWORD(v70) = v49;
      uint64_t v72 = a5;
      uint64_t v50 = swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      uint64_t v79 = v69;
      *(_DWORD *)uint64_t v50 = 136315394;
      uint64_t v74 = a1;
      sub_1ACA55E4C();
      uint64_t v51 = sub_1ACE770B8();
      uint64_t v74 = sub_1ACA3189C(v51, v52, &v79);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2080;
      uint64_t v53 = *(void *)(a2 + 16);
      uint64_t v71 = a1;
      if (v53 && (uint64_t v54 = sub_1ACA65CC4(a1), (v55 & 1) != 0))
      {
        char v56 = (uint64_t *)(*(void *)(a2 + 56) + 40 * v54);
        uint64_t v57 = *v56;
        uint64_t v58 = v56[1];
        unint64_t v60 = v56[2];
        uint64_t v59 = v56[3];
        uint64_t v61 = v56[4];
        sub_1ACA50D88(*v56, v58, v60);
      }
      else
      {
        uint64_t v57 = 0;
        uint64_t v58 = 0;
        uint64_t v59 = 0;
        uint64_t v61 = 0;
        unint64_t v60 = 3;
      }
      uint64_t v74 = v57;
      uint64_t v75 = v58;
      unint64_t v76 = v60;
      uint64_t v77 = v59;
      uint64_t v78 = v61;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB766C98);
      uint64_t v62 = sub_1ACE76228();
      uint64_t v74 = sub_1ACA3189C(v62, v63, &v79);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v48, (os_log_type_t)v70, "[StateCache] state for %s (consolidated) -> %s", (uint8_t *)v50, 0x16u);
      uint64_t v64 = v69;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v64, -1, -1);
      MEMORY[0x1AD11B340](v50, -1, -1);

      a1 = v71;
      a5 = v72;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_20;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      if (!*(void *)(a2 + 16)) {
        goto LABEL_20;
      }
    }
    uint64_t v65 = sub_1ACA65CC4(a1);
    if (v66)
    {
      uint64_t v67 = (uint64_t *)(*(void *)(a2 + 56) + 40 * v65);
      uint64_t v36 = *v67;
      uint64_t v29 = v67[1];
      unint64_t v31 = v67[2];
      uint64_t v30 = v67[3];
      uint64_t v32 = v67[4];
      sub_1ACA50D88(*v67, v29, v31);
      goto LABEL_23;
    }
LABEL_20:
    uint64_t v36 = 0;
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    uint64_t v32 = 0;
    unint64_t v31 = 3;
    goto LABEL_23;
  }
  uint64_t v71 = a1;
  uint64_t v72 = a5;
  uint64_t v23 = &v18[*(int *)(v9 + 48)];
  sub_1ACA3AAD4(v21+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * (v22 - 1), (uint64_t)v16, &qword_1E99F2FD0);
  unsigned int v24 = (uint64_t *)&v16[*(int *)(v9 + 48)];
  uint64_t v25 = sub_1ACE75118();
  uint64_t v26 = (uint64_t)v18;
  uint64_t v27 = *(void *)(v25 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v26, v16, v25);
  uint64_t v28 = *v24;
  uint64_t v29 = v24[1];
  unint64_t v31 = v24[2];
  uint64_t v30 = v24[3];
  uint64_t v32 = v24[4];
  *(void *)uint64_t v23 = v28;
  *((void *)v23 + 1) = v29;
  *((void *)v23 + 2) = v31;
  *((void *)v23 + 3) = v30;
  *((void *)v23 + 4) = v32;
  uint64_t v33 = (uint64_t *)&v13[*(int *)(v9 + 48)];
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  uint64_t v73 = v26;
  uint64_t v35 = v26;
  uint64_t v36 = v28;
  v34(v13, v35, v25);
  *uint64_t v33 = v36;
  v33[1] = v29;
  v33[2] = v31;
  v33[3] = v30;
  v33[4] = v32;
  sub_1ACA50D88(v36, v29, v31);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v25);
  if (qword_1E99EFEE8 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_1ACE754C8();
  __swift_project_value_buffer(v37, (uint64_t)qword_1E99F2BF8);
  sub_1ACA50D88(v36, v29, v31);
  sub_1ACA50D88(v36, v29, v31);
  uint64_t v38 = sub_1ACE75498();
  os_log_type_t v39 = sub_1ACE76BD8();
  int v40 = v39;
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v41 = swift_slowAlloc();
    uint64_t v70 = swift_slowAlloc();
    uint64_t v79 = v70;
    *(_DWORD *)uint64_t v41 = 136315394;
    LODWORD(v69) = v40;
    uint64_t v74 = v71;
    sub_1ACA55E4C();
    uint64_t v42 = sub_1ACE770B8();
    uint64_t v74 = sub_1ACA3189C(v42, v43, &v79);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2080;
    uint64_t v74 = v36;
    uint64_t v75 = v29;
    unint64_t v76 = v31;
    uint64_t v77 = v30;
    uint64_t v78 = v32;
    sub_1ACA50D88(v36, v29, v31);
    uint64_t v44 = sub_1ACE76228();
    uint64_t v74 = sub_1ACA3189C(v44, v45, &v79);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACA50D9C(v36, v29, v31);
    sub_1ACA50D9C(v36, v29, v31);
    _os_log_impl(&dword_1AC9D5000, v38, (os_log_type_t)v69, "[StateCache] state for %s (in-flight) -> %s", (uint8_t *)v41, 0x16u);
    uint64_t v46 = v70;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v46, -1, -1);
    MEMORY[0x1AD11B340](v41, -1, -1);
  }
  else
  {

    sub_1ACA50D9C(v36, v29, v31);
    sub_1ACA50D9C(v36, v29, v31);
  }
  sub_1ACA50E78(v73, &qword_1E99F2FD0);
  a5 = v72;
LABEL_23:
  *a5 = v36;
  a5[1] = v29;
  a5[2] = v31;
  a5[3] = v30;
  a5[4] = v32;
}

uint64_t ThinClientLibraryPodcastStateDataSource.delegate.getter()
{
  swift_beginAccess();
  return MEMORY[0x1AD11B470](v0 + 16);
}

uint64_t ThinClientLibraryPodcastStateDataSource.delegate.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*ThinClientLibraryPodcastStateDataSource.delegate.modify(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1AD11B470](v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1ACBAA570;
}

void *ThinClientLibraryPodcastStateDataSource.__allocating_init(thinClientPodcastStateRepository:)(uint64_t a1)
{
  swift_allocObject();
  uint64_t v2 = sub_1ACBAACC4(a1);
  swift_release();
  return v2;
}

void *ThinClientLibraryPodcastStateDataSource.init(thinClientPodcastStateRepository:)(uint64_t a1)
{
  uint64_t v1 = sub_1ACBAACC4(a1);
  swift_release();
  return v1;
}

Swift::Void __swiftcall ThinClientLibraryPodcastStateDataSource.startObservingChanges()()
{
  uint64_t v1 = v0;
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0FF8);
  sub_1ACBAADE8();
  uint64_t v2 = sub_1ACE75D58();
  swift_release();
  swift_release();
  *(void *)(v1 + 40) = v2;
  swift_release();
}

uint64_t sub_1ACBAA6BC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = result + 16;
    swift_beginAccess();
    if (MEMORY[0x1AD11B470](v4))
    {
      uint64_t v5 = *(void *)(v3 + 24);
      swift_release();
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(v1, ObjectType, v5);
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

__n128 ThinClientLibraryPodcastStateDataSource.state(for:)@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 32) + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 40));
  sub_1ACBAAE44((uint64_t *)(v3 + 16), (uint64_t)v8);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 40));
  __n128 v6 = (__n128)v8[1];
  long long v7 = v8[0];
  uint64_t v4 = v9;
  swift_release();
  __n128 result = v6;
  *(_OWORD *)a1 = v7;
  *(__n128 *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = v4;
  return result;
}

uint64_t ThinClientLibraryPodcastStateDataSource.state(for:)@<X0>(uint64_t a1@<X8>)
{
  sub_1ACBAAB04(v3);
  return sub_1ACB9B34C((uint64_t)v3, a1);
}

uint64_t ThinClientLibraryPodcastStateDataSource.deinit()
{
  sub_1ACA8EF4C(v0 + 16);
  swift_release();
  swift_release();
  return v0;
}

uint64_t ThinClientLibraryPodcastStateDataSource.__deallocating_deinit()
{
  sub_1ACA8EF4C(v0 + 16);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACBAA8DC()
{
  swift_beginAccess();
  return MEMORY[0x1AD11B470](v0 + 16);
}

uint64_t sub_1ACBAA924(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1ACBAA988(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  void v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1AD11B470](v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1ACBAA570;
}

void sub_1ACBAAA08(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 24) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_1ACBAAA8C@<X0>(uint64_t a1@<X8>)
{
  ThinClientLibraryPodcastStateDataSource.state(for:)((uint64_t)v3);
  return sub_1ACB9B34C((uint64_t)v3, a1);
}

uint64_t sub_1ACBAAAC8@<X0>(uint64_t a1@<X8>)
{
  sub_1ACBAAB04(v3);
  return sub_1ACB9B34C((uint64_t)v3, a1);
}

uint64_t sub_1ACBAAB04@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_1ACE754C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E99EFFD8 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1E99F2DE8);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  long long v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76BF8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1AC9D5000, v7, v8, "We should never be handling UUIDs on a thin client", v9, 2u);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = 0;
  a1[1] = 0;
  a1[3] = 0;
  a1[4] = 0;
  a1[2] = 3;
  return result;
}

void *sub_1ACBAACC4(uint64_t a1)
{
  uint64_t v2 = v1;
  v2[3] = 0;
  swift_unknownObjectWeakInit();
  v2[4] = a1;
  v2[5] = 0;
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0FF8);
  sub_1ACBAADE8();
  uint64_t v4 = sub_1ACE75D58();
  swift_release();
  swift_release();
  v2[5] = v4;
  swift_release();
  return v2;
}

uint64_t sub_1ACBAADA8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACBAADE0(uint64_t *a1)
{
  return sub_1ACBAA6BC(a1);
}

unint64_t sub_1ACBAADE8()
{
  unint64_t result = qword_1E99F1088;
  if (!qword_1E99F1088)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F0FF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1088);
  }
  return result;
}

uint64_t sub_1ACBAAE44@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1ACBA9C6C(*(void *)(v2 + 16), *a1, a1[1], a1[2], v5);
  return sub_1ACB9B34C((uint64_t)v5, a2);
}

uint64_t sub_1ACBAAE98@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1AD11B470](v4);
  uint64_t v6 = *(void *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1ACBAAEF4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t type metadata accessor for ThinClientLibraryPodcastStateDataSource()
{
  return self;
}

uint64_t method lookup function for ThinClientLibraryPodcastStateDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ThinClientLibraryPodcastStateDataSource);
}

uint64_t dispatch thunk of ThinClientLibraryPodcastStateDataSource.__allocating_init(thinClientPodcastStateRepository:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t static Array.+= infix(_:_:)(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ACE76688();
  return sub_1ACE76648();
}

void AnyCancellable.store<A>(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a2;
  v3[3] = a3;
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACBAB0CC, (uint64_t)v3, a1);
}

uint64_t sub_1ACBAB0CC()
{
  return sub_1ACE75838();
}

void AnyCancellable.store(in:)(os_unfair_lock_s *a1)
{
  uint64_t v1 = a1 + 6;
  os_unfair_lock_lock(a1 + 6);
  sub_1ACBAB158();
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1ACBAB158()
{
  return sub_1ACE75828();
}

uint64_t static Podcasts.areTranscriptsSupportedOnPlatform.getter()
{
  return 1;
}

const char *Podcasts.domain.getter()
{
  return "Podcasts";
}

const char *Podcasts.feature.getter()
{
  uint64_t result = "WatchContextMenu";
  switch(*v0)
  {
    case 1:
      uint64_t result = "SerialSortAutoDownloads";
      break;
    case 2:
      uint64_t result = "RenderImplicitFollowsAsLocalShows";
      break;
    case 3:
      uint64_t result = "RemoveDownloadsTipService";
      break;
    case 4:
      uint64_t result = "RemoveOlderDownloadsTipMac";
      break;
    case 5:
      uint64_t result = "MercuryOnMac";
      break;
    case 6:
      uint64_t result = "SimplifiedSyncDirtyHandling";
      break;
    case 7:
      uint64_t result = "SmartPlayButtonHaptics";
      break;
    case 8:
      uint64_t result = "iTunesCloudFairPlayStreaming";
      break;
    case 9:
      uint64_t result = "BlueMoonHomepod";
      break;
    case 0xA:
      uint64_t result = "HorizontalShelfSlowDeceleration";
      break;
    case 0xB:
      uint64_t result = "UpNextTapToShowDetailExperiment";
      break;
    case 0xC:
      uint64_t result = "EpisodeHeroHideSubBadgeForPaidShowWhenEntitled";
      break;
    case 0xD:
      uint64_t result = "EpisodeHeroUIKitButtonArea";
      break;
    case 0xE:
      uint64_t result = "EpisodeHeroUIKitTextArea";
      break;
    case 0xF:
      uint64_t result = "HeroJoeColorDebugger";
      break;
    case 0x10:
      uint64_t result = "WidgetLargePlaybackButton";
      break;
    case 0x11:
      uint64_t result = "WidgetNowPlayingArtwork";
      break;
    case 0x12:
      uint64_t result = "iTunesCloudFairPlayOffline";
      break;
    case 0x13:
      uint64_t result = "Entitlements";
      break;
    case 0x14:
      uint64_t result = "PreventExplicitNavigation";
      break;
    case 0x15:
      uint64_t result = "EpisodeArtwork";
      break;
    case 0x16:
      uint64_t result = "BlueMooniOS";
      break;
    case 0x17:
      uint64_t result = "BlueMoonMacOS";
      break;
    case 0x18:
      uint64_t result = "BlueMoonWatchOS";
      break;
    case 0x19:
      uint64_t result = "ResponsivePlayback";
      break;
    case 0x1A:
      uint64_t result = "ReadOnlySyncOnHomePods";
      break;
    case 0x1B:
      uint64_t result = "RecentlyUnfollowed";
      break;
    case 0x1C:
      uint64_t result = "WatchUpNextWidget";
      break;
    case 0x1D:
      uint64_t result = "CarPlayStoreShowPage";
      break;
    case 0x1E:
      uint64_t result = "RecentlySearched";
      break;
    case 0x1F:
      uint64_t result = "StorageThresholdTip";
      break;
    case 0x20:
      uint64_t result = "HomeTab";
      break;
    case 0x21:
      uint64_t result = "Ponderosa";
      break;
    case 0x22:
      uint64_t result = "PonderosaForceColdStart";
      break;
    case 0x23:
      uint64_t result = "AsyncAutoDownloadsPicker";
      break;
    case 0x24:
      uint64_t result = "SkipEmptyUPPSync";
      break;
    case 0x25:
      uint64_t result = "PonderosaSync";
      break;
    case 0x26:
      uint64_t result = "Ginkgo";
      break;
    case 0x27:
      uint64_t result = "ProfilePictureAllTabs";
      break;
    case 0x28:
      uint64_t result = "CompactLargeTitles";
      break;
    case 0x29:
      uint64_t result = "TopHits";
      break;
    case 0x2A:
      uint64_t result = "UipFluidTransitions";
      break;
    case 0x2B:
      uint64_t result = "UipNewSidebar";
      break;
    case 0x2C:
      uint64_t result = "TabRewrite";
      break;
    case 0x2D:
      uint64_t result = "WriteReviewNew";
      break;
    case 0x2E:
      uint64_t result = "CategoriesInLibrary";
      break;
    case 0x2F:
      uint64_t result = "DisableSiriPlistDumper";
      break;
    case 0x30:
      uint64_t result = "DisableHomePodStationDonation";
      break;
    case 0x31:
      uint64_t result = "HomePodSiriDonationFromAPNS";
      break;
    case 0x32:
      uint64_t result = "DisableHomePodCloudSync";
      break;
    case 0x33:
      uint64_t result = "InAppProductPage";
      break;
    case 0x34:
      uint64_t result = "BatchFeedFetch";
      break;
    case 0x35:
      uint64_t result = "UseShowPageTallForBackdrop";
      break;
    case 0x36:
      uint64_t result = "ThinClientWelcomeScreen";
      break;
    case 0x37:
      uint64_t result = "DisconnectConnectedSubscriptions";
      break;
    case 0x38:
      uint64_t result = "ThinClientSleepTimer";
      break;
    case 0x39:
      uint64_t result = "PromoteInitialUpNextItem";
      break;
    case 0x3A:
      uint64_t result = "DisableConnectedSubscriptionsHardcode";
      break;
    case 0x3B:
      uint64_t result = "InMemoryStatePushes";
      break;
    case 0x3C:
      uint64_t result = "InMemoryStateRefactor";
      break;
    case 0x3D:
      uint64_t result = "UseLiteralContinuousPlaybackSetting";
      break;
    case 0x3E:
      uint64_t result = "LibraryCategoriesPageImpressionMetrics";
      break;
    default:
      return result;
  }
  return result;
}

uint64_t static Podcasts.isRecentlyUnfollowedEnabled()()
{
  return sub_1ACBAB6D0(27);
}

uint64_t static Podcasts.isBlueMoonEnabled()()
{
  return sub_1ACBAB6D0(22);
}

uint64_t static Podcasts.isUIPSidebarEnabled.getter()
{
  return sub_1ACBAB6D0(43);
}

uint64_t static Podcasts.isTopHitsEnabled.getter()
{
  return sub_1ACBAB6D0(41);
}

uint64_t static Podcasts.isGinkgoEnabled.getter()
{
  return sub_1ACBAB6D0(38);
}

uint64_t static Podcasts.isInMemoryStatePushesEnabled.getter()
{
  return sub_1ACBAB6D0(59);
}

uint64_t sub_1ACBAB6D0(char a1)
{
  uint64_t v5 = &type metadata for Podcasts;
  unint64_t v6 = sub_1ACA56248();
  v4[0] = a1;
  char v2 = sub_1ACE75298();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
  return v2 & 1;
}

BOOL static Podcasts.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Podcasts.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t Podcasts.hashValue.getter()
{
  return sub_1ACE77B78();
}

unint64_t sub_1ACBAB7B4()
{
  unint64_t result = qword_1E99F2FD8;
  if (!qword_1E99F2FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2FD8);
  }
  return result;
}

const char *sub_1ACBAB808()
{
  return "Podcasts";
}

const char *sub_1ACBAB81C()
{
  return Podcasts.feature.getter();
}

uint64_t getEnumTagSinglePayload for Podcasts(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xC2) {
    goto LABEL_17;
  }
  if (a2 + 62 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 62) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 62;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 62;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 62;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x3F;
  int v8 = v6 - 63;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Podcasts(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 62 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 62) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xC2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xC1)
  {
    unsigned int v6 = ((a2 - 194) >> 8) + 1;
    *unint64_t result = a2 + 62;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACBAB994);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 62;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Podcasts()
{
  return &type metadata for Podcasts;
}

uint64_t sub_1ACBAB9CC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1ACC83200(0, v1, 0);
  uint64_t v2 = v23;
  uint64_t result = sub_1ACC25F20(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v20 = v1;
  int v21 = v5;
  uint64_t v22 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    unint64_t v13 = *(void *)(v23 + 16);
    unint64_t v14 = *(void *)(v23 + 24);
    uint64_t result = swift_bridgeObjectRetain();
    if (v13 >= v14 >> 1) {
      uint64_t result = sub_1ACC83200(v14 > 1, v13 + 1, 1);
    }
    *(void *)(v23 + 16) = v13 + 1;
    *(void *)(v23 + 8 * v13 + 32) = v12;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v15 = *(void *)(v22 + 8 * v11);
    if ((v15 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v21;
    if (*(_DWORD *)(a1 + 36) != v21) {
      goto LABEL_27;
    }
    unint64_t v16 = v15 & (-2 << (v6 & 0x3F));
    if (v16)
    {
      int64_t v9 = __clz(__rbit64(v16)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v20;
    }
    else
    {
      unint64_t v17 = v11 + 1;
      unint64_t v18 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v20;
      if (v11 + 1 < v18)
      {
        unint64_t v19 = *(void *)(v22 + 8 * v17);
        if (v19)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v19)) + (v17 << 6);
        }
        else
        {
          while (v18 - 2 != v11)
          {
            unint64_t v19 = *(void *)(a1 + 80 + 8 * v11++);
            if (v19)
            {
              unint64_t v17 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1ACBABBCC(unint64_t a1)
{
  v28[5] = *(id *)MEMORY[0x1E4F143B8];
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    int v3 = (void *)sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (!v3) {
      return v3;
    }
  }
  else
  {
    int v3 = *(void **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      return v3;
    }
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    unsigned int v4 = (char *)MEMORY[0x1AD119490](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_30;
    }
    unsigned int v4 = (char *)*(id *)(a1 + 32);
  }
  int v5 = v4;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  sub_1ACE771F8();
  uint64_t v27 = v6;
  *(void *)&long long v26 = 49;
  *((void *)&v26 + 1) = 0xE100000000000000;
  sub_1ACA3AA44(&v26, v25);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1ACD0C840(v25, (uint64_t)v28, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_1ACA6A0F8((uint64_t)v28);
  unsigned int v24 = v5;
  unint64_t v8 = 0xD000000000000010;
  if (*(void *)&v5[OBJC_IVAR___MTContentKeyRequest_requestType] == 3)
  {
    unint64_t v8 = 0x65722D65636E6F6ELL;
    unint64_t v9 = 0xEE00737473657571;
  }
  else
  {
    unint64_t v9 = 0x80000001ACECB940;
  }
  *(void *)&long long v26 = v8;
  *((void *)&v26 + 1) = v9;
  swift_bridgeObjectRetain();
  sub_1ACE771F8();
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v10)
    {
LABEL_11:
      *(void *)&long long v26 = MEMORY[0x1E4FBC860];
      sub_1ACC831D0(0, v10 & ~(v10 >> 63), 0);
      if ((v10 & 0x8000000000000000) == 0)
      {
        uint64_t v11 = 0;
        uint64_t v12 = v26;
        do
        {
          if ((a1 & 0xC000000000000001) != 0) {
            id v13 = (id)MEMORY[0x1AD119490](v11, a1);
          }
          else {
            id v13 = *(id *)(a1 + 8 * v11 + 32);
          }
          unint64_t v14 = v13;
          uint64_t v15 = sub_1ACAB389C();

          *(void *)&long long v26 = v12;
          unint64_t v17 = *(void *)(v12 + 16);
          unint64_t v16 = *(void *)(v12 + 24);
          if (v17 >= v16 >> 1)
          {
            sub_1ACC831D0(v16 > 1, v17 + 1, 1);
            uint64_t v12 = v26;
          }
          ++v11;
          *(void *)(v12 + 16) = v17 + 1;
          *(void *)(v12 + 8 * v17 + 32) = v15;
        }
        while (v10 != v11);
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
LABEL_30:
      __break(1u);
    }
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_22:
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772250);
  *(void *)&long long v26 = v12;
  sub_1ACA3AA44(&v26, v25);
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_1ACD0C840(v25, (uint64_t)v28, v18);
  swift_bridgeObjectRelease();
  sub_1ACA6A0F8((uint64_t)v28);
  unint64_t v19 = self;
  int64_t v20 = (void *)sub_1ACE75FC8();
  swift_bridgeObjectRelease();
  v28[0] = 0;
  id v21 = objc_msgSend(v19, sel_dataWithJSONObject_options_error_, v20, 0, v28);

  id v22 = v28[0];
  if (v21)
  {
    int v3 = (void *)sub_1ACE74F88();
  }
  else
  {
    int v3 = v22;
    sub_1ACE74D78();

    swift_willThrow();
  }

  return v3;
}

uint64_t KeyRequestLicenseError.init(rawValue:)(uint64_t a1)
{
  return sub_1ACBAEFA8(a1);
}

uint64_t sub_1ACBAC018@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1ACBAEFA8(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t static StandardKeyRequestHandler.keyRequestLicenseErrorDomain.getter()
{
  return 0xD000000000000036;
}

uint64_t sub_1ACBAC0A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1ACE75DC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE75E48();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)&v2[OBJC_IVAR___MTStandardKeyRequestHandler_requestQueue];
  id v13 = (void *)swift_allocObject();
  void v13[2] = a1;
  unint64_t v13[3] = a2;
  void v13[4] = v2;
  aBlock[4] = sub_1ACBAEFEC;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_32;
  unint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v15 = v2;
  sub_1ACE75E08();
  v17[1] = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

void sub_1ACBAC368(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = objc_msgSend(self, sel_sharedInstance);
  id v7 = objc_msgSend(v6, sel_podcastsLicenseCert);

  unint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  void v11[4] = sub_1ACBAFF3C;
  v11[5] = v8;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  void v11[2] = sub_1ACA6E5F0;
  v11[3] = &block_descriptor_44_1;
  uint64_t v9 = _Block_copy(v11);
  swift_retain();
  id v10 = a3;
  swift_release();
  objc_msgSend(v7, sel_valueWithCompletion_, v9);
  _Block_release(v9);
}

uint64_t sub_1ACBAC4A0(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v35 = a6;
  uint64_t v36 = a5;
  uint64_t v33 = a3;
  uint64_t v8 = sub_1ACE74F28();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1ACE74898();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1ACE75DC8();
  uint64_t v34 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_1ACE74E98();
    id v20 = a1;
    sub_1ACE74848();
    id v21 = (void *)sub_1ACE74818();
    uint64_t v22 = swift_allocObject();
    uint64_t v23 = v36;
    *(void *)(v22 + 16) = a4;
    *(void *)(v22 + 24) = v23;
    uint64_t v41 = sub_1ACBAFFF4;
    uint64_t v42 = (void *)v22;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v38 = 1107296256;
    os_log_type_t v39 = sub_1ACCCAC28;
    int v40 = &block_descriptor_56;
    unsigned int v24 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v35, sel_performDataRequest_callback_, v21, v24);
    _Block_release(v24);

    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    uint64_t v26 = v17;
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
    uint64_t v27 = (void *)sub_1ACE76CF8();
    uint64_t v28 = (void *)swift_allocObject();
    uint64_t v29 = v36;
    v28[2] = a4;
    v28[3] = v29;
    uint64_t v30 = v33;
    v28[4] = v33;
    uint64_t v41 = sub_1ACBAFFB0;
    uint64_t v42 = v28;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v38 = 1107296256;
    os_log_type_t v39 = sub_1ACA6DA9C;
    int v40 = &block_descriptor_50;
    unint64_t v31 = _Block_copy(&aBlock);
    swift_retain();
    id v32 = v30;
    swift_release();
    sub_1ACE75E08();
    uint64_t aBlock = MEMORY[0x1E4FBC860];
    sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v19, v15, v31);
    _Block_release(v31);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v19, v16);
  }
}

void sub_1ACBAC964(void (*a1)(id), uint64_t a2, void *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE750A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = (objc_class *)type metadata accessor for ContentKeyResponse(0);
  uint64_t v10 = (char *)objc_allocWithZone(v9);
  uint64_t v11 = (void **)&v10[OBJC_IVAR___MTContentKeyResponse_error];
  *(void *)&v10[OBJC_IVAR___MTContentKeyResponse_error] = 0;
  uint64_t v12 = (uint64_t *)&v10[OBJC_IVAR___MTContentKeyResponse_keyData];
  long long v20 = xmmword_1ACE91EF0;
  *(_OWORD *)&v10[OBJC_IVAR___MTContentKeyResponse_keyData] = xmmword_1ACE91EF0;
  *(void *)&v10[OBJC_IVAR___MTContentKeyResponse_request] = 0;
  swift_beginAccess();
  uint64_t v13 = *v12;
  unint64_t v14 = v12[1];
  *(_OWORD *)uint64_t v12 = v20;
  id v15 = a3;
  uint64_t v16 = v10;
  sub_1ACAB2EF0(v13, v14);
  sub_1ACA72A5C((uint64_t)v7, (uint64_t)&v16[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
  swift_beginAccess();
  uint64_t v17 = *v11;
  *uint64_t v11 = a3;
  id v18 = a3;

  v21.receiver = v16;
  v21.super_class = v9;
  id v19 = objc_msgSendSuper2(&v21, sel_init);
  sub_1ACA3E034((uint64_t)v7);

  a1(v19);
}

uint64_t sub_1ACBACB50(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = sub_1ACE75DC8();
  uint64_t v26 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1ACE75E48();
  uint64_t v15 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  uint64_t v24 = sub_1ACE76CF8();
  id v18 = (void *)swift_allocObject();
  v18[2] = a6;
  v18[3] = a7;
  v18[4] = a1;
  v18[5] = a2;
  void v18[6] = a5;
  aBlock[4] = sub_1ACBB0054;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_62;
  id v19 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACA39848(a1, a2);
  id v20 = a5;
  swift_release();
  sub_1ACE75E08();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  objc_super v21 = (void *)v24;
  MEMORY[0x1AD118ED0](0, v17, v14, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v25);
}

void sub_1ACBACE50(void (*a1)(id), uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v23 = a2;
  uint64_t v24 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE750A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = (objc_class *)type metadata accessor for ContentKeyResponse(0);
  uint64_t v13 = (char *)objc_allocWithZone(v12);
  unint64_t v14 = (void **)&v13[OBJC_IVAR___MTContentKeyResponse_error];
  *(void *)&v13[OBJC_IVAR___MTContentKeyResponse_error] = 0;
  uint64_t v15 = (uint64_t *)&v13[OBJC_IVAR___MTContentKeyResponse_keyData];
  *(_OWORD *)&v13[OBJC_IVAR___MTContentKeyResponse_keyData] = xmmword_1ACE91EF0;
  *(void *)&v13[OBJC_IVAR___MTContentKeyResponse_request] = 0;
  swift_beginAccess();
  uint64_t v16 = *v15;
  unint64_t v17 = v15[1];
  *uint64_t v15 = a3;
  v15[1] = a4;
  sub_1ACA39848(a3, a4);
  sub_1ACA39848(a3, a4);
  id v18 = a5;
  id v19 = v13;
  sub_1ACAB2EF0(v16, v17);
  sub_1ACA72A5C((uint64_t)v10, (uint64_t)&v19[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
  swift_beginAccess();
  id v20 = *v14;
  char *v14 = a5;
  id v21 = a5;

  v25.receiver = v19;
  v25.super_class = v12;
  id v22 = objc_msgSendSuper2(&v25, sel_init, v23);
  sub_1ACA3E034((uint64_t)v10);

  sub_1ACAB2EF0(a3, a4);
  v24(v22);
}

uint64_t sub_1ACBAD0EC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1ACE75DC8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1ACE75E48();
  uint64_t v13 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(void *)&v4[OBJC_IVAR___MTStandardKeyRequestHandler_requestQueue];
  uint64_t v16 = (void *)swift_allocObject();
  unsigned char v16[2] = a1;
  v16[3] = v4;
  v16[4] = a2;
  v16[5] = a3;
  void v16[6] = a4;
  aBlock[4] = sub_1ACBAF048;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_6;
  unint64_t v17 = _Block_copy(aBlock);
  id v18 = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  id v19 = v4;
  sub_1ACE75E08();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v15, v12, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v22);
  return swift_release();
}

uint64_t sub_1ACBAD3C4(unint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v54 = a4;
  uint64_t v55 = a5;
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v58 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1ACE75E48();
  uint64_t v57 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  char v56 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = MEMORY[0x1E4FBC868];
  if (a1 >> 62)
  {
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1ACE77508();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  unint64_t v52 = (void *)a2;
  uint64_t v53 = a3;
  if (v11)
  {
    unint64_t v63 = a1 & 0xC000000000000001;
    uint64_t v12 = (uint64_t *)MEMORY[0x1E4FBC868];
    uint64_t v13 = 4;
    long long v62 = xmmword_1ACE84830;
    unint64_t v14 = a1;
    while (1)
    {
      a3 = (uint64_t *)(v13 - 4);
      if (v63) {
        uint64_t v16 = (char *)MEMORY[0x1AD119490](v13 - 4, a1);
      }
      else {
        uint64_t v16 = (char *)*(id *)(a1 + 8 * v13);
      }
      unint64_t v17 = v16;
      a2 = v13 - 3;
      if (__OFADD__(a3, 1))
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      id v18 = *(void **)&v16[OBJC_IVAR___MTContentKeyRequest_secureInvalidationDsid];
      if (v18)
      {
        a1 = *(void *)&v16[OBJC_IVAR___MTContentKeyRequest_secureInvalidationDsid];
      }
      else
      {
        a1 = (unint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, 0);
        id v18 = 0;
      }
      id v19 = v18;
      a3 = v12;
      unint64_t v21 = sub_1ACA664A4(a1);
      uint64_t v22 = v12[2];
      BOOL v23 = (v20 & 1) == 0;
      uint64_t v24 = v22 + v23;
      if (__OFADD__(v22, v23)) {
        goto LABEL_29;
      }
      char v25 = v20;
      if (v12[3] < v24)
      {
        sub_1ACD007CC(v24, 1);
        uint64_t v12 = (uint64_t *)aBlock[0];
        unint64_t v26 = sub_1ACA664A4(a1);
        if ((v25 & 1) != (v27 & 1))
        {
          sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
          uint64_t result = sub_1ACE77A68();
          __break(1u);
          return result;
        }
        unint64_t v21 = v26;
      }
      if (v25)
      {

        uint64_t v15 = (void *)(v12[7] + 8 * v21);
        MEMORY[0x1AD118700]();
        if (*(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1ACE765C8();
        }
        sub_1ACE76628();
        sub_1ACE76598();
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = v62;
        *(void *)(v28 + 32) = v17;
        uint64_t v65 = v28;
        a3 = &v65;
        sub_1ACE76598();
        uint64_t v29 = v65;
        v12[(v21 >> 6) + 8] |= 1 << v21;
        uint64_t v30 = 8 * v21;
        *(void *)(v12[6] + v30) = a1;
        *(void *)(v12[7] + v30) = v29;
        uint64_t v31 = v12[2];
        BOOL v32 = __OFADD__(v31, 1);
        uint64_t v33 = v31 + 1;
        if (v32) {
          goto LABEL_30;
        }
        v12[2] = v33;
      }
      a1 = v14;
      ++v13;
      if (a2 == v11) {
        goto LABEL_24;
      }
    }
  }
  uint64_t v12 = (uint64_t *)MEMORY[0x1E4FBC868];
LABEL_24:
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_1ACBAB9CC((uint64_t)v12);
  swift_release();
  id v35 = dispatch_group_create();
  uint64_t v36 = (void *)swift_allocObject();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  uint64_t v36[2] = MEMORY[0x1E4FBC860];
  uint64_t v38 = *(void *)(v34 + 16);
  uint64_t v39 = (uint64_t)v53;
  int v40 = v52;
  if (v38)
  {
    uint64_t v41 = (unint64_t *)(v34 + 32);
    do
    {
      unint64_t v42 = *v41++;
      swift_bridgeObjectRetain();
      dispatch_group_enter(v35);
      swift_retain();
      unint64_t v43 = v35;
      sub_1ACBAF390(v42, v39, v40, v36, v43);
      swift_bridgeObjectRelease();

      swift_release();
      --v38;
    }
    while (v38);
  }
  swift_bridgeObjectRelease();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  uint64_t v44 = (void *)sub_1ACE76CF8();
  unint64_t v45 = (void *)swift_allocObject();
  uint64_t v46 = v55;
  v45[2] = v54;
  v45[3] = v46;
  v45[4] = v36;
  aBlock[4] = sub_1ACBAFD98;
  aBlock[5] = v45;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_23;
  uint64_t v47 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  uint64_t v48 = v56;
  sub_1ACE75E08();
  uint64_t v65 = v37;
  sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  int v49 = v58;
  uint64_t v50 = v61;
  sub_1ACE770E8();
  sub_1ACE76C68();
  _Block_release(v47);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v49, v50);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v48, v59);
  swift_release();
  return swift_release();
}

void sub_1ACBADA00(uint64_t a1, uint64_t a2, NSObject *a3)
{
  swift_beginAccess();
  unint64_t v4 = swift_bridgeObjectRetain();
  sub_1ACA7021C(v4);
  swift_endAccess();
  dispatch_group_leave(a3);
}

uint64_t sub_1ACBADA6C(void (*a1)(uint64_t))
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  a1(v2);
  return swift_bridgeObjectRelease();
}

void sub_1ACBADBA4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ContentKeyResponse(0);
  id v3 = (id)sub_1ACE76558();
  (*(void (**)(uint64_t, id))(a2 + 16))(a2, v3);
}

void sub_1ACBADC10(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, id a8, unint64_t a9, void *a10, void *a11, uint64_t a12)
{
  uint64_t v80 = a7;
  uint64_t v81 = a10;
  unint64_t v78 = a9;
  uint64_t v17 = sub_1ACE74F28();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v77 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1ACE74898();
  uint64_t v76 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  char v20 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1ACE754C8();
  uint64_t v82 = *(void *)(v21 - 8);
  uint64_t v83 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v22)
  {
    uint64_t v74 = a12;
    uint64_t v75 = v20;
    id v73 = a11;
    uint64_t v25 = qword_1EB768FD8;
    uint64_t v70 = v22;
    uint64_t v26 = v22;
    if (v25 == -1) {
      goto LABEL_3;
    }
    goto LABEL_31;
  }
  if (a3)
  {
    int v40 = a3;
    if (!(a4 >> 62)) {
      goto LABEL_7;
    }
LABEL_25:
    swift_bridgeObjectRetain();
    id v64 = v40;
    id v65 = a3;
    uint64_t v26 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v26) {
      goto LABEL_8;
    }
LABEL_26:

    a5(MEMORY[0x1E4FBC860]);
LABEL_27:
    swift_bridgeObjectRelease();

    return;
  }
  sub_1ACBAFDEC();
  int v40 = (void *)swift_allocError();
  *unint64_t v63 = 2;
  if (a4 >> 62) {
    goto LABEL_25;
  }
LABEL_7:
  uint64_t v26 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v41 = v40;
  id v42 = a3;
  if (!v26) {
    goto LABEL_26;
  }
LABEL_8:
  aBlock[0] = MEMORY[0x1E4FBC860];
  uint64_t v24 = (char *)aBlock;
  sub_1ACE773D8();
  if ((v26 & 0x8000000000000000) == 0)
  {
    uint64_t v69 = a5;
    uint64_t v43 = 0;
    a5 = (void (*)(uint64_t))(a4 & 0xC000000000000001);
    while (v26 != v43)
    {
      if (a5) {
        id v44 = (id)MEMORY[0x1AD119490](v43, a4);
      }
      else {
        id v44 = *(id *)(a4 + 8 * v43 + 32);
      }
      unint64_t v45 = v44;
      ++v43;
      id v46 = objc_allocWithZone((Class)type metadata accessor for ContentKeyResponse(0));
      id v47 = v40;
      id v48 = v45;
      int v49 = (void *)sub_1ACE74D68();
      a8 = objc_msgSend(v46, sel_initWithRequest_keyData_renewalDate_error_, v48, 0, 0, v49);

      uint64_t v24 = (char *)aBlock;
      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
      if (v26 == v43)
      {
        uint64_t v62 = aBlock[0];

        v69(v62);
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_31:
    swift_once();
LABEL_3:
    uint64_t v71 = (uint64_t)a8;
    uint64_t v27 = v83;
    uint64_t v28 = __swift_project_value_buffer(v83, (uint64_t)qword_1EB768FB8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v24, v28, v27);
    uint64_t v29 = (id)v26;
    uint64_t v30 = sub_1ACE75498();
    os_log_type_t v31 = sub_1ACE76C08();
    BOOL v32 = os_log_type_enabled(v30, v31);
    uint64_t v72 = v29;
    if (v32)
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v68 = a6;
      uint64_t v34 = v33;
      id v35 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 138412546;
      unint64_t v67 = a4;
      aBlock[0] = v29;
      uint64_t v69 = a5;
      uint64_t v36 = v29;
      a4 = v67;
      sub_1ACE76FF8();
      *id v35 = v70;

      *(_WORD *)(v34 + 12) = 2048;
      uint64_t v37 = v80;
      aBlock[0] = v80;
      a5 = v69;
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v30, v31, "[Key Loading] From %@ request Type %ld", (uint8_t *)v34, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v35, -1, -1);
      uint64_t v38 = v34;
      a6 = v68;
      MEMORY[0x1AD11B340](v38, -1, -1);
      uint64_t v39 = v75;
    }
    else
    {

      uint64_t v30 = v29;
      uint64_t v39 = v75;
      uint64_t v37 = v80;
    }

    (*(void (**)(char *, uint64_t))(v82 + 8))(v24, v83);
    sub_1ACE74E98();
    sub_1ACE74848();
    sub_1ACA39848(v71, v78);
    sub_1ACE74878();
    sub_1ACE747E8();
    unint64_t v50 = sub_1ACA36394((uint64_t)&unk_1F0380808);
    if (v37 == 2)
    {
      uint64_t v51 = v81;
      if (!v81) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v51 = v81;
      if (v37 != 3 || !v81) {
        goto LABEL_22;
      }
    }
    id v52 = v51;
    id v53 = objc_msgSend(v52, sel_stringValue);
    uint64_t v54 = sub_1ACE761B8();
    uint64_t v56 = v55;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v50;
    uint64_t v58 = v54;
    uint64_t v39 = v75;
    sub_1ACD0CAD0(v58, v56, 0xD00000000000001ALL, 0x80000001ACECB920, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
LABEL_22:
    sub_1ACE74828();
    uint64_t v59 = (void *)sub_1ACE74818();
    uint64_t v60 = (void *)swift_allocObject();
    v60[2] = a4;
    v60[3] = a5;
    v60[4] = a6;
    aBlock[4] = sub_1ACBAFF2C;
    aBlock[5] = v60;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACCCAC28;
    aBlock[3] = &block_descriptor_38_0;
    uint64_t v61 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v73, sel_performDataRequest_account_callback_, v59, v74, v61);
    _Block_release(v61);

    (*(void (**)(char *, uint64_t))(v76 + 8))(v39, v79);
    return;
  }
  __break(1u);
}

uint64_t sub_1ACBAE3F8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, unint64_t a6, void (*a7)(void), uint64_t a8)
{
  unint64_t v52 = a6;
  uint64_t v53 = a8;
  unint64_t v51 = a2;
  uint64_t v48 = a1;
  uint64_t v10 = sub_1ACE754C8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v54 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v45 - v14;
  if (qword_1EB768FD8 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v10, (uint64_t)qword_1EB768FB8);
  swift_beginAccess();
  id v47 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v47(v15, v16, v10);
  id v17 = a5;
  id v18 = a5;
  uint64_t v19 = sub_1ACE75498();
  uint64_t v20 = v11;
  os_log_type_t v21 = sub_1ACE76C08();
  if (os_log_type_enabled(v19, v21))
  {
    uint64_t v49 = v20;
    uint64_t v50 = v10;
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v56 = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    id v46 = a7;
    if (a5)
    {
      swift_getErrorValue();
      uint64_t v24 = sub_1ACE77A98();
      unint64_t v26 = v25;
    }
    else
    {
      unint64_t v26 = 0xE90000000000002ELL;
      uint64_t v24 = 0x726F727265206F6ELL;
    }
    uint64_t v55 = sub_1ACA3189C(v24, v26, &v56);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AC9D5000, v19, v21, "[Key Loading] Loaded with %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v23, -1, -1);
    MEMORY[0x1AD11B340](v22, -1, -1);

    uint64_t v28 = v49;
    uint64_t v10 = v50;
    uint64_t v27 = *(void (**)(char *, uint64_t))(v49 + 8);
    v27(v15, v50);
    a7 = v46;
  }
  else
  {

    uint64_t v27 = *(void (**)(char *, uint64_t))(v20 + 8);
    v27(v15, v10);
    uint64_t v28 = v20;
  }
  uint64_t v29 = (void *)v51;
  uint64_t v30 = v54;
  if (v51 >> 60 == 15)
  {
    id v31 = a5;
    uint64_t v32 = sub_1ACBAF1E4(v52, a5);

    v47(v30, v16, v10);
    id v33 = a5;
    id v34 = a5;
    id v35 = sub_1ACE75498();
    uint64_t v36 = v10;
    os_log_type_t v37 = sub_1ACE76BE8();
    if (os_log_type_enabled(v35, v37))
    {
      uint64_t v49 = v28;
      uint64_t v50 = v36;
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v56 = v39;
      *(_DWORD *)uint64_t v38 = 136315138;
      if (a5)
      {
        swift_getErrorValue();
        uint64_t v40 = sub_1ACE77A98();
        unint64_t v42 = v41;
      }
      else
      {
        uint64_t v40 = 0;
        unint64_t v42 = 0xE000000000000000;
      }
      uint64_t v55 = sub_1ACA3189C(v40, v42, &v56);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AC9D5000, v35, v37, "[Key Loading] Loaded with missing data with error %s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v39, -1, -1);
      MEMORY[0x1AD11B340](v38, -1, -1);

      v27(v54, v50);
    }
    else
    {

      v27(v30, v36);
    }
    ((void (*)(uint64_t))a7)(v32);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v43 = v48;
    sub_1ACA39848(v48, v51);
    sub_1ACC71B00(v52, v43, v29);
    a7();
    swift_bridgeObjectRelease();
    return sub_1ACAB2EF0(v43, (unint64_t)v29);
  }
}

id StandardKeyRequestHandler.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id StandardKeyRequestHandler.init()()
{
  uint64_t v11 = sub_1ACE76CE8();
  uint64_t v1 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v10 = OBJC_IVAR___MTStandardKeyRequestHandler_requestQueue;
  v9[1] = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  id v6 = v0;
  sub_1ACE75E08();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v11);
  *(void *)(v9[2] + v10) = sub_1ACE76D28();

  id v7 = (objc_class *)type metadata accessor for StandardKeyRequestHandler();
  v12.receiver = v6;
  v12.super_class = v7;
  return objc_msgSendSuper2(&v12, sel_init);
}

id StandardKeyRequestHandler.__allocating_init(concurrentOperationCount:requestEncodingType:)(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return objc_msgSend(v5, sel_initWithConcurrentOperationCount_requestEncodingType_, a1, a2);
}

id StandardKeyRequestHandler.init(concurrentOperationCount:requestEncodingType:)(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  uint64_t v13 = sub_1ACE76CE8();
  uint64_t v3 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v12 = OBJC_IVAR___MTStandardKeyRequestHandler_requestQueue;
  v11[1] = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  id v8 = v2;
  sub_1ACE75E08();
  uint64_t v17 = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCC58], v13);
  *(void *)(v11[2] + v12) = sub_1ACE76D28();

  uint64_t v9 = (objc_class *)type metadata accessor for StandardKeyRequestHandler();
  v16.receiver = v8;
  v16.super_class = v9;
  return objc_msgSendSuper2(&v16, sel_initWithConcurrentOperationCount_requestEncodingType_, v14, v15);
}

id StandardKeyRequestHandler.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StandardKeyRequestHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACBAEFA8(uint64_t result)
{
  if (((unint64_t)(result + 1021) > 0x14 || ((1 << (result - 3)) & 0x1F0F8F) == 0)
    && result != -1)
  {
    return 0;
  }
  return result;
}

void sub_1ACBAEFEC()
{
  sub_1ACBAC368(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1ACBAEFF8()
{
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACBAF048()
{
  return sub_1ACBB006C((uint64_t (*)(void, void, void, void, void))sub_1ACBAD3C4);
}

uint64_t type metadata accessor for StandardKeyRequestHandler()
{
  return self;
}

unint64_t sub_1ACBAF088()
{
  unint64_t result = qword_1E99F2FE8;
  if (!qword_1E99F2FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2FE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyRequestLicenseError()
{
  return &type metadata for KeyRequestLicenseError;
}

uint64_t method lookup function for StandardKeyRequestHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StandardKeyRequestHandler);
}

uint64_t dispatch thunk of StandardKeyRequestHandler.loadCertificateData(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of StandardKeyRequestHandler.loadKeyData(for:account:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t sub_1ACBAF16C()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1ACBAF1A4(uint64_t a1)
{
  sub_1ACBADBA4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1ACBAF1AC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACBAF1E4(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v4) {
      break;
    }
    uint64_t v13 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1ACE773D8();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v6 = 0;
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x1AD119490](v6, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * v6 + 32);
      }
      uint64_t v10 = v9;
      id v11 = objc_allocWithZone((Class)type metadata accessor for ContentKeyResponse(0));
      id v12 = v10;
      if (a2)
      {
        id v7 = a2;
        id v8 = (void *)sub_1ACE74D68();
      }
      else
      {
        id v8 = 0;
      }
      ++v6;
      objc_msgSend(v11, sel_initWithRequest_keyData_renewalDate_error_, v12, 0, 0, v8);

      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
      if (v4 == v6) {
        return v13;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1ACBAF390(unint64_t a1, uint64_t a2, void *a3, void *a4, NSObject *a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a4;
  *(void *)(v13 + 24) = a5;
  uint64_t v70 = v13;
  unint64_t v14 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_31;
  }
  uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  objc_super v16 = a5;
  swift_bridgeObjectRetain();
  dispatch_group_t v69 = a5;
  if (!v15)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1ACE84830;
    uint64_t v49 = sub_1ACE750A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v12, 1, 1, v49);
    sub_1ACBAFDEC();
    uint64_t v50 = (void *)swift_allocError();
    *unint64_t v51 = 0;
    unint64_t v52 = (objc_class *)type metadata accessor for ContentKeyResponse(0);
    uint64_t v53 = (char *)objc_allocWithZone(v52);
    uint64_t v54 = (void **)&v53[OBJC_IVAR___MTContentKeyResponse_error];
    *(void *)&v53[OBJC_IVAR___MTContentKeyResponse_error] = 0;
    uint64_t v55 = (uint64_t *)&v53[OBJC_IVAR___MTContentKeyResponse_keyData];
    long long v73 = xmmword_1ACE91EF0;
    *(_OWORD *)&v53[OBJC_IVAR___MTContentKeyResponse_keyData] = xmmword_1ACE91EF0;
    *(void *)&v53[OBJC_IVAR___MTContentKeyResponse_request] = 0;
    swift_beginAccess();
    uint64_t v57 = *v55;
    unint64_t v56 = v55[1];
    *(_OWORD *)uint64_t v55 = v73;
    uint64_t v58 = v53;
    sub_1ACAB2EF0(v57, v56);
    sub_1ACA72A5C((uint64_t)v12, (uint64_t)&v58[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
    swift_beginAccess();
    uint64_t v59 = *v54;
    *uint64_t v54 = v50;
    id v60 = v50;

    v75.receiver = v58;
    v75.super_class = v52;
    id v61 = objc_msgSendSuper2(&v75, sel_init);
    sub_1ACA3E034((uint64_t)v12);

    *(void *)(v48 + 32) = v61;
    uint64_t v74 = v48;
    sub_1ACE76598();
    swift_beginAccess();
    unint64_t v62 = swift_bridgeObjectRetain();
    sub_1ACA7021C(v62);
    swift_endAccess();
    dispatch_group_leave(v69);
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  while (1)
  {
    *(void *)&long long v73 = a1 & 0xC000000000000001;
    id v65 = a4;
    id v64 = a3;
    unint64_t v63 = (void *)a2;
    unint64_t v66 = v14;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v17 = (char *)MEMORY[0x1AD119490](0, a1);
      goto LABEL_6;
    }
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      break;
    }
    uint64_t v17 = (char *)*(id *)(a1 + 32);
LABEL_6:
    id v18 = v17;
    swift_bridgeObjectRelease();
    id v67 = sub_1ACD35BA0();
    a3 = *(void **)&v18[OBJC_IVAR___MTContentKeyRequest_requestType];
    uint64_t v19 = *(void **)&v18[OBJC_IVAR___MTContentKeyRequest_secureInvalidationDsid];
    id v68 = v18;
    unint64_t v14 = v18[OBJC_IVAR___MTContentKeyRequest_offlineRequest];
    swift_bridgeObjectRetain();
    uint64_t v72 = v19;
    id v71 = v19;
    for (uint64_t i = 4; ; ++i)
    {
      id v12 = (char *)(i - 4);
      os_log_type_t v21 = (void)v73 ? (char *)MEMORY[0x1AD119490](i - 4, a1) : (char *)*(id *)(a1 + 8 * i);
      a4 = v21;
      a2 = i - 3;
      if (__OFADD__(v12, 1)) {
        break;
      }
      if (a3 != *(void **)&v21[OBJC_IVAR___MTContentKeyRequest_requestType]
        || v14 != v21[OBJC_IVAR___MTContentKeyRequest_offlineRequest])
      {
LABEL_18:
        if (v66)
        {
          swift_bridgeObjectRetain();
          uint64_t v26 = sub_1ACE77508();
          swift_bridgeObjectRelease();
          if (v26)
          {
LABEL_20:
            aBlock[0] = MEMORY[0x1E4FBC860];
            sub_1ACE773D8();
            if (v26 < 0) {
              goto LABEL_35;
            }
            uint64_t v27 = 0;
            do
            {
              if ((void)v73) {
                id v28 = (id)MEMORY[0x1AD119490](v27, a1);
              }
              else {
                id v28 = *(id *)(a1 + 8 * v27 + 32);
              }
              uint64_t v29 = v28;
              ++v27;
              sub_1ACBAFDEC();
              uint64_t v30 = (void *)swift_allocError();
              *id v31 = 3;
              id v32 = objc_allocWithZone((Class)type metadata accessor for ContentKeyResponse(0));
              id v33 = v30;
              id v34 = (void *)sub_1ACE74D68();

              objc_msgSend(v32, sel_initWithRequest_keyData_renewalDate_error_, v29, 0, 0, v34);
              sub_1ACE773A8();
              sub_1ACE773E8();
              sub_1ACE773F8();
              sub_1ACE773B8();
            }
            while (v26 != v27);
          }
        }
        else
        {
          uint64_t v26 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v26) {
            goto LABEL_20;
          }
        }
        swift_bridgeObjectRelease();
        swift_beginAccess();
        unint64_t v35 = swift_bridgeObjectRetain();
        sub_1ACA7021C(v35);
        swift_endAccess();
        dispatch_group_leave(v69);
        swift_release();

        swift_bridgeObjectRelease();
        return;
      }
      a5 = *(NSObject **)&v21[OBJC_IVAR___MTContentKeyRequest_secureInvalidationDsid];
      if (a5)
      {
        if (!v72) {
          goto LABEL_18;
        }
        sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
        uint64_t v22 = v15;
        uint64_t v23 = a3;
        id v24 = v71;
        a5 = a5;
        char v25 = sub_1ACE76F68();

        a3 = v23;
        uint64_t v15 = v22;
        if ((v25 & 1) == 0) {
          goto LABEL_18;
        }
      }
      else if (v72)
      {
        goto LABEL_18;
      }

      if (a2 == v15)
      {
        swift_bridgeObjectRelease();
        id v36 = v64;
        objc_msgSend(v64, sel_setPersonalizeRequests_, 1);
        os_log_type_t v37 = sub_1ACBABBCC(a1);
        unint64_t v39 = v38;
        uint64_t v40 = (void *)swift_allocObject();
        v40[2] = a1;
        v40[3] = sub_1ACBAFDE4;
        v40[4] = v70;
        v40[5] = a3;
        v40[6] = v37;
        v40[7] = v39;
        v40[8] = v72;
        v40[9] = v36;
        unint64_t v41 = v63;
        v40[10] = v63;
        aBlock[4] = sub_1ACBAFEB0;
        aBlock[5] = v40;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1ACA6E5F0;
        aBlock[3] = &block_descriptor_32_0;
        unint64_t v42 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        id v43 = v71;
        swift_retain();
        sub_1ACA39848((uint64_t)v37, v39);
        id v44 = v41;
        id v45 = v36;
        swift_release();
        id v46 = v67;
        objc_msgSend(v67, sel_valueWithCompletion_, v42);
        _Block_release(v42);
        sub_1ACAB2EF0((uint64_t)v37, v39);
        swift_release();

        return;
      }
    }
    __break(1u);
    __break(1u);
LABEL_31:
    swift_retain();
    id v47 = a5;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1ACE77508();
    dispatch_group_t v69 = a5;
    if (!v15) {
      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
  __break(1u);
}

uint64_t sub_1ACBAFD80()
{
  return objectdestroy_19Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1ACBAFD98()
{
  return sub_1ACBADA6C(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_1ACBAFDA4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1ACBAFDE4(uint64_t a1)
{
  sub_1ACBADA00(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24));
}

unint64_t sub_1ACBAFDEC()
{
  unint64_t result = qword_1E99F2FF0;
  if (!qword_1E99F2FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2FF0);
  }
  return result;
}

uint64_t sub_1ACBAFE40()
{
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v1 = *(void *)(v0 + 56);
  if (v1 >> 60 != 15) {
    sub_1ACA50850(*(void *)(v0 + 48), v1);
  }

  return swift_deallocObject();
}

void sub_1ACBAFEB0(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1ACBADC10(a1, a2, a3, *(void *)(v3 + 16), *(void (**)(uint64_t))(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(id *)(v3 + 48), *(void *)(v3 + 56), *(void **)(v3 + 64), *(void **)(v3 + 72), *(void *)(v3 + 80));
}

uint64_t sub_1ACBAFEEC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACBAFF2C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1ACBAE3F8(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void (**)(void))(v5 + 24), *(void *)(v5 + 32));
}

uint64_t sub_1ACBAFF3C(void *a1, uint64_t a2, void *a3)
{
  return sub_1ACBAC4A0(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32));
}

uint64_t sub_1ACBAFF48()
{
  return objectdestroy_19Tm(MEMORY[0x1E4FBC8B8]);
}

uint64_t objectdestroy_19Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));
  return swift_deallocObject();
}

void sub_1ACBAFFB0()
{
  sub_1ACBAC964(*(void (**)(id))(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1ACBAFFBC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACBAFFF4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1ACBACB50(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void *)(v5 + 24));
}

uint64_t sub_1ACBAFFFC()
{
  swift_release();
  unint64_t v1 = *(void *)(v0 + 40);
  if (v1 >> 60 != 15) {
    sub_1ACA50850(*(void *)(v0 + 32), v1);
  }

  return swift_deallocObject();
}

uint64_t sub_1ACBB0054()
{
  return sub_1ACBB006C((uint64_t (*)(void, void, void, void, void))sub_1ACBACE50);
}

uint64_t sub_1ACBB006C(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

unsigned char *storeEnumTagSinglePayload for KeyRequestLoadingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACBB0150);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyRequestLoadingError()
{
  return &type metadata for KeyRequestLoadingError;
}

unint64_t sub_1ACBB018C()
{
  unint64_t result = qword_1E99F2FF8;
  if (!qword_1E99F2FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2FF8);
  }
  return result;
}

double CGSize.init(width:proportionalTo:)(double result, double a2)
{
  if (result <= 0.0) {
    return a2;
  }
  return result;
}

double CGSize.scaled(_:)(double a1, double a2)
{
  return a1 * a2;
}

uint64_t DefaultEpisodeStateDataSource.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

uint64_t DefaultEpisodeStateDataSource.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  return result;
}

uint64_t sub_1ACBB026C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_1ACA91A90();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  if (v2)
  {
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = v3;
    *(void *)(v2 + 24) = v5;
    unsigned int v6 = sub_1ACA91C80;
  }
  else
  {
    unsigned int v6 = 0;
  }
  *a1 = v6;
  a1[1] = v2;
  return sub_1ACA6DEC8(v3);
}

uint64_t sub_1ACBB02F4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_1ACA91C78;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_1ACA6DEC8(v1);
  return sub_1ACBB03B8((uint64_t)v4, v3);
}

uint64_t sub_1ACBB0384()
{
  uint64_t v0 = sub_1ACA91A90();
  sub_1ACA6DEC8(v0);
  return v0;
}

uint64_t sub_1ACBB03B8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return sub_1ACA76F34(v5);
}

uint64_t (*sub_1ACBB040C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1ACBB0460@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(*(void *)v1 + 88) + 24))(a1, v3);
  uint64_t v4 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  return v4(a1, 0, 1, v3);
}

uint64_t DefaultEpisodeStateDataSource.deinit()
{
  sub_1ACA76F34(*(void *)(v0 + 16));
  return v0;
}

uint64_t DefaultEpisodeStateDataSource.__deallocating_deinit()
{
  sub_1ACA76F34(*(void *)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t sub_1ACBB0570(uint64_t a1, uint64_t a2)
{
  return sub_1ACBB03B8(a1, a2);
}

void (*sub_1ACBB0594(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ACBB040C();
  return sub_1ACA8E534;
}

uint64_t sub_1ACBB05F0@<X0>(void *a1@<X8>)
{
  return sub_1ACBB0460(a1);
}

uint64_t sub_1ACBB061C()
{
  return 16;
}

__n128 sub_1ACBB0628(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1ACBB0634()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DefaultEpisodeStateDataSource()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for DefaultEpisodeStateDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DefaultEpisodeStateDataSource);
}

uint64_t dispatch thunk of DefaultEpisodeStateDataSource.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of DefaultEpisodeStateDataSource.refreshControllerStates.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DefaultEpisodeStateDataSource.refreshControllerStates.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DefaultEpisodeStateDataSource.refreshControllerStates.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DefaultEpisodeStateDataSource.startObservingChanges()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DefaultEpisodeStateDataSource.state(for:)(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v3 + 144))(a1, a2, a3 & 1);
}

uint64_t sub_1ACBB0774()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t OSSignposter.makeSignpostID(hash:)(uint64_t a1, char a2)
{
  if (a2)
  {
    sub_1ACE75428();
    return sub_1ACE753C8();
  }
  else
  {
    return MEMORY[0x1F4188588]();
  }
}

uint64_t TranscriptRequest.episodeAdamID.getter()
{
  return *(void *)v0;
}

uint64_t TranscriptRequest.ttmlIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void TranscriptRequest.priority.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

void TranscriptRequest.lifetime.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 25);
}

uint64_t TranscriptRequest.trace.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA3AAD4(v1 + 32, a1, &qword_1EB772EA0);
}

uint64_t TranscriptRequest.trace.setter(uint64_t a1)
{
  return sub_1ACBB135C(a1, v1 + 32);
}

uint64_t (*TranscriptRequest.trace.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptRequest.init(episodeAdamID:ttmlIdentifier:priority:lifetime:trace:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v7 = *a4;
  char v8 = *a5;
  *(_OWORD *)(a7 + 48) = 0u;
  *(void *)(a7 + 64) = 0;
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(unsigned char *)(a7 + 24) = v7;
  *(unsigned char *)(a7 + 25) = v8;
  *(_OWORD *)(a7 + 32) = 0u;
  return sub_1ACBB135C(a6, a7 + 32);
}

uint64_t sub_1ACBB08E4()
{
  uint64_t result = 0x4165646F73697065;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6564496C6D7474;
      break;
    case 2:
      uint64_t result = 0x797469726F697270;
      break;
    case 3:
      uint64_t result = 0x656D69746566696CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACBB098C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACBB1B40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACBB09B4(uint64_t a1)
{
  unint64_t v2 = sub_1ACBB142C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACBB09F0(uint64_t a1)
{
  unint64_t v2 = sub_1ACBB142C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TranscriptRequest.ttmlRequest(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACBB0A64(a1, (uint64_t (*)(void))type metadata accessor for TTMLRequest, 7, a2);
}

uint64_t TranscriptRequest.shazamSignatureRequest(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACBB0A64(a1, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, 6, a2);
}

uint64_t sub_1ACBB0A64@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  sub_1ACA3AAD4(a1, a4, &qword_1EB7731B0);
  char v8 = *(unsigned char *)(v4 + 24);
  uint64_t v14 = *(void *)(v4 + 8);
  uint64_t v15 = *(void *)(v4 + 16);
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  sub_1ACA55E4C();
  sub_1ACE770B8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  char v9 = *(unsigned char *)(v4 + 25);
  uint64_t v10 = (int *)a2(0);
  uint64_t v11 = a4 + v10[9];
  *(void *)(v11 + 32) = 0;
  *(_OWORD *)uint64_t v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(unsigned char *)(a4 + v10[5]) = v8;
  id v12 = (void *)(a4 + v10[6]);
  *id v12 = v14;
  v12[1] = v15;
  *(unsigned char *)(a4 + v10[8]) = v9;
  *(unsigned char *)(a4 + v10[7]) = a3;
  return sub_1ACBB13C4(v4 + 32, v11);
}

uint64_t TranscriptRequest.hash(into:)()
{
  return sub_1ACE77B48();
}

uint64_t TranscriptRequest.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3000);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACBB142C();
  sub_1ACE77C78();
  uint64_t v11 = *v3;
  v10[7] = 0;
  sub_1ACA80994();
  sub_1ACE77788();
  if (!v2)
  {
    v10[6] = 1;
    sub_1ACE77748();
    v10[5] = *((unsigned char *)v3 + 24);
    void v10[4] = 2;
    sub_1ACBB1480();
    sub_1ACE77788();
    v10[3] = *((unsigned char *)v3 + 25);
    void v10[2] = 3;
    sub_1ACBB14D4();
    sub_1ACE77788();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t TranscriptRequest.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t TranscriptRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3020);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v12[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACBB142C();
  sub_1ACE77C48();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return sub_1ACB3E38C((uint64_t)v15);
  }
  else
  {
    HIBYTE(v11) = 0;
    sub_1ACA80CD4();
    sub_1ACE77698();
    v12[0] = v17;
    LOBYTE(v17) = 1;
    v12[1] = sub_1ACE77658();
    v12[2] = v9;
    HIBYTE(v11) = 2;
    sub_1ACBB1528();
    sub_1ACE77698();
    char v13 = v17;
    HIBYTE(v11) = 3;
    sub_1ACBB157C();
    sub_1ACE77698();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v14 = v17;
    sub_1ACA69FEC((uint64_t)v12, a2);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return sub_1ACA6A048((uint64_t)v12);
  }
}

uint64_t sub_1ACBB10E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TranscriptRequest.init(from:)(a1, a2);
}

uint64_t sub_1ACBB10F8(void *a1)
{
  return TranscriptRequest.encode(to:)(a1);
}

uint64_t sub_1ACBB1114()
{
  return sub_1ACE77B48();
}

uint64_t sub_1ACBB1160()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACBB11C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA3AAD4(v1 + 32, a1, &qword_1EB772EA0);
}

uint64_t sub_1ACBB11F0(uint64_t a1)
{
  return sub_1ACBB135C(a1, v1 + 32);
}

uint64_t (*sub_1ACBB11F8())()
{
  return nullsub_1;
}

BOOL _s18PodcastsFoundation17TranscriptRequestV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  sub_1ACA69FEC((uint64_t)a1, (uint64_t)v15);
  sub_1ACA69FEC((uint64_t)a2, (uint64_t)v12);
  if (v4 == v5)
  {
    if (v16 == v13 && v17 == v14)
    {
      sub_1ACA6A048((uint64_t)v15);
      sub_1ACA6A048((uint64_t)v12);
      sub_1ACA69FEC((uint64_t)a1, (uint64_t)v11);
      sub_1ACA69FEC((uint64_t)a2, (uint64_t)v10);
    }
    else
    {
      char v7 = sub_1ACE77848();
      sub_1ACA6A048((uint64_t)v15);
      sub_1ACA6A048((uint64_t)v12);
      sub_1ACA69FEC((uint64_t)a1, (uint64_t)v11);
      sub_1ACA69FEC((uint64_t)a2, (uint64_t)v10);
      BOOL v8 = 0;
      if ((v7 & 1) == 0) {
        goto LABEL_11;
      }
    }
    BOOL v8 = flt_1ACE852C0[v11[24]] == flt_1ACE852C0[v10[24]];
  }
  else
  {
    sub_1ACA6A048((uint64_t)v15);
    sub_1ACA6A048((uint64_t)v12);
    sub_1ACA69FEC((uint64_t)a1, (uint64_t)v11);
    sub_1ACA69FEC((uint64_t)a2, (uint64_t)v10);
    BOOL v8 = 0;
  }
LABEL_11:
  sub_1ACA6A048((uint64_t)v10);
  sub_1ACA6A048((uint64_t)v11);
  return v8;
}

uint64_t sub_1ACBB135C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACBB13C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ACBB142C()
{
  unint64_t result = qword_1E99F3008;
  if (!qword_1E99F3008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3008);
  }
  return result;
}

unint64_t sub_1ACBB1480()
{
  unint64_t result = qword_1E99F3010;
  if (!qword_1E99F3010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3010);
  }
  return result;
}

unint64_t sub_1ACBB14D4()
{
  unint64_t result = qword_1E99F3018;
  if (!qword_1E99F3018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3018);
  }
  return result;
}

unint64_t sub_1ACBB1528()
{
  unint64_t result = qword_1EB771298;
  if (!qword_1EB771298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771298);
  }
  return result;
}

unint64_t sub_1ACBB157C()
{
  unint64_t result = qword_1E99F3028;
  if (!qword_1E99F3028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3028);
  }
  return result;
}

unint64_t sub_1ACBB15D4()
{
  unint64_t result = qword_1EB76A350;
  if (!qword_1EB76A350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A350);
  }
  return result;
}

uint64_t destroy for TranscriptRequest(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    return __swift_destroy_boxed_opaque_existential_0(a1 + 32);
  }
  return result;
}

uint64_t initializeWithCopy for TranscriptRequest(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v4 = (_OWORD *)(a1 + 32);
  uint64_t v5 = a2 + 32;
  uint64_t v6 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v6;
    *(void *)(a1 + 64) = v7;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1 + 32, v5, v6);
  }
  else
  {
    long long v8 = *(_OWORD *)(v5 + 16);
    _OWORD *v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 48) = v8;
    *(void *)(a1 + 64) = *(void *)(v5 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for TranscriptRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  uint64_t v4 = *(void *)(a2 + 56);
  if (!*(void *)(a1 + 56))
  {
    if (v4)
    {
      *(void *)(a1 + 56) = v4;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 32, a2 + 32);
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 32);
    long long v6 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v5;
    *(_OWORD *)(a1 + 48) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_0(a1 + 32);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  return a1;
}

uint64_t assignWithTake for TranscriptRequest(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  if (*(void *)(a1 + 56)) {
    __swift_destroy_boxed_opaque_existential_0(a1 + 32);
  }
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptRequest()
{
  return &type metadata for TranscriptRequest;
}

unsigned char *storeEnumTagSinglePayload for TranscriptRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACBB1A00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptRequest.CodingKeys()
{
  return &type metadata for TranscriptRequest.CodingKeys;
}

unint64_t sub_1ACBB1A3C()
{
  unint64_t result = qword_1E99F3030;
  if (!qword_1E99F3030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3030);
  }
  return result;
}

unint64_t sub_1ACBB1A94()
{
  unint64_t result = qword_1E99F3038;
  if (!qword_1E99F3038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3038);
  }
  return result;
}

unint64_t sub_1ACBB1AEC()
{
  unint64_t result = qword_1E99F3040;
  if (!qword_1E99F3040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3040);
  }
  return result;
}

uint64_t sub_1ACBB1B40(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4165646F73697065 && a2 == 0xED000044496D6164;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6564496C6D7474 && a2 == 0xEE00726569666974 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D69746566696CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t FairPlayKeySessionProvider.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

uint64_t FairPlayKeySessionProvider.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  return result;
}

void FairPlayKeySessionProvider.session(for:)(void *a1)
{
  uint64_t v2 = v1;
  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1ACE754C8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB76D598);
  swift_retain_n();
  id v5 = a1;
  char v6 = sub_1ACE75498();
  os_log_type_t v7 = sub_1ACE76BD8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v17 = v9;
    *(_DWORD *)uint64_t v8 = 136315651;
    unint64_t v10 = sub_1ACBB2014();
    sub_1ACA3189C(v10, v11, &v17);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2160;
    sub_1ACE76FF8();
    *(_WORD *)(v8 + 22) = 2081;
    uint64_t v12 = FairPlayAsset.description.getter();
    sub_1ACA3189C(v12, v13, &v17);
    uint64_t v2 = v1;
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v6, v7, "%s Creating a session for asset: %{private,mask.hash}s.", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v9, -1, -1);
    MEMORY[0x1AD11B340](v8, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  id v14 = v5;
  sub_1ACE4EC38();
  if (v2)
  {
  }
  else
  {
    uint64_t v16 = v15;
    type metadata accessor for ICContentFairPlayKeySession();
    swift_allocObject();
    sub_1ACE4C4D8((char *)v14, v16);
  }
}

unint64_t sub_1ACBB2014()
{
  if (*(void *)(v0 + 24))
  {
    unint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    unint64_t v1 = 0xD000000000000030;
    *(void *)(v0 + 16) = 0xD000000000000030;
    *(void *)(v0 + 24) = 0x80000001ACECBA30;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FairPlayKeySessionProvider.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FairPlayKeySessionProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1ACBB20D8(void *a1)
{
}

uint64_t type metadata accessor for FairPlayKeySessionProvider()
{
  return self;
}

uint64_t method lookup function for FairPlayKeySessionProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FairPlayKeySessionProvider);
}

uint64_t dispatch thunk of FairPlayKeySessionProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t Result.success.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  char v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = v9;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v8);
  }
}

uint64_t Result.failure.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  char v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = v9;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }
}

uint64_t Result<>.init(success:error:)(char a1, void *a2)
{
  uint64_t v4 = sub_1ACE754C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  os_log_type_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {

    return 0;
  }
  else if (!a2)
  {
    sub_1ACE754B8();
    uint64_t v8 = sub_1ACE75498();
    os_log_type_t v9 = sub_1ACE76BF8();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1AC9D5000, v8, v9, "A failed result was created without an error", v10, 2u);
      MEMORY[0x1AD11B340](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1ACBB25E8();
    return swift_allocError();
  }
  return (uint64_t)a2;
}

unint64_t sub_1ACBB25E8()
{
  unint64_t result = qword_1E99F3048;
  if (!qword_1E99F3048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3048);
  }
  return result;
}

BOOL Result<>.successAndError.getter(void *a1, char a2)
{
  if (a2) {
    id v3 = a1;
  }
  return (a2 & 1) == 0;
}

unsigned char *storeEnumTagSinglePayload for ResultSuccessError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACBB2718);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResultSuccessError()
{
  return &type metadata for ResultSuccessError;
}

unint64_t sub_1ACBB2754()
{
  unint64_t result = qword_1E99F3050;
  if (!qword_1E99F3050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3050);
  }
  return result;
}

uint64_t MetricsEngagementThresholdMet.rawValue.getter(char a1)
{
  uint64_t result = 7562617;
  switch(a1)
  {
    case 1:
      uint64_t result = 28526;
      break;
    case 2:
      uint64_t result = 0x6465636E79736E75;
      break;
    case 3:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACBB282C(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 7562617;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE300000000000000;
  uint64_t v5 = 7562617;
  switch(v3)
  {
    case 1:
      unint64_t v4 = 0xE200000000000000;
      uint64_t v5 = 28526;
      break;
    case 2:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v5 = 0x6465636E79736E75;
      break;
    case 3:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v6 = 0xE200000000000000;
      if (v5 == 28526) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x6465636E79736E75;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x6E776F6E6B6E75) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1ACBB2998@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s18PodcastsFoundation29MetricsEngagementThresholdMetO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1ACBB29C8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 7562617;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE200000000000000;
      uint64_t v3 = 28526;
      goto LABEL_3;
    case 2:
      *a1 = 0x6465636E79736E75;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x6E776F6E6B6E75;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1ACBB2A50()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACBB2B18()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBB2BC8()
{
  return sub_1ACE77B78();
}

unint64_t MetricsEngagementThresholdMet.debugDescription.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t sub_1ACBB2D84()
{
  return MetricsEngagementThresholdMet.debugDescription.getter();
}

uint64_t _s18PodcastsFoundation29MetricsEngagementThresholdMetO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1ACBB2DDC()
{
  unint64_t result = qword_1E99F3058;
  if (!qword_1E99F3058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3058);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MetricsEngagementThresholdMet(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACBB2EFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEngagementThresholdMet()
{
  return &type metadata for MetricsEngagementThresholdMet;
}

uint64_t MediaLibraryPid.value.getter()
{
  return *(void *)v0;
}

uint64_t MediaLibraryPid.uint64Value.getter()
{
  return *(void *)v0;
}

BOOL MediaLibraryPid.isValid.getter()
{
  return isValidMediaLibraryPid(*v0);
}

BOOL isValidMediaLibraryPid(uint64_t a1)
{
  return a1 != 0;
}

uint64_t MediaLibraryPid.init(uint64Value:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

ValueMetadata *type metadata accessor for MediaLibraryPid()
{
  return &type metadata for MediaLibraryPid;
}

uint64_t dispatch thunk of MediaLibraryClientProtocol.addEpisode(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of MediaLibraryClientProtocol.deleteEpisodes(identifiers:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of MediaLibraryClientProtocol.addArtwork(withFileUrl:toEpisodeWithPersistentId:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of MediaLibraryClientProtocol.reconcileMostRecentlyDownloadedEpisodes(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of MediaLibraryClientProtocol.postRestoreCandidates()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MediaLibraryClientProtocol.mostRecentRestoreToken.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

id MediaCacheDeleteRemovalProcessor.managedObjectContext.getter()
{
  return *v0;
}

id MediaCacheDeleteRemovalProcessor.workQueue.getter()
{
  return *(id *)(v0 + 8);
}

double MediaCacheDeleteRemovalProcessor.debounceInterval.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t MediaCacheDeleteRemovalProcessor.isRunning.getter()
{
  unint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  unint64_t v2 = v1 + 4;
  int v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1ACA8ADD8(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void MediaCacheDeleteRemovalProcessor.init(managedObjectContext:workQueue:userDefaults:debounceInterval:)(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8B0);
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 20) = 0;
  *(unsigned char *)(v10 + 16) = 0;
  MediaCacheDeleteRemovalProcessorDataSource.init(userDefaults:)((uint64_t)a3, v19);
  type metadata accessor for CoreDataEpisodeAndShowStorage();
  swift_allocObject();
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  id v14 = CoreDataEpisodeAndShowStorage.init(context:)(v11);
  type metadata accessor for DebouncedEpisodeAndShowProcessor();
  uint64_t v15 = swift_allocObject();
  id v16 = v11;
  id v17 = v12;
  uint64_t v18 = sub_1ACBB3294((uint64_t)v19, (uint64_t)v14, (uint64_t)v16, (uint64_t)v17, 0, 100, v15);

  *(void *)a4 = v16;
  *(void *)(a4 + 8) = v17;
  *(double *)(a4 + 16) = a5;
  *(void *)(a4 + 24) = v10;
  *(void *)(a4 + 32) = v18;
}

Swift::Bool __swiftcall MediaCacheDeleteRemovalProcessor.start()()
{
  unint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  int v3 = v1 + 4;
  unsigned int v4 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1ACA8ADD8(v3, &v10);
  os_unfair_lock_unlock(v4);
  if ((v10 & 1) == 0)
  {
    unsigned __int8 v5 = *(os_unfair_lock_s **)(v2 + 264);
    unsigned int v6 = v5 + 4;
    char v7 = v5 + 5;
    os_unfair_lock_lock(v5 + 5);
    sub_1ACA8ADD8(v6, v9);
    os_unfair_lock_unlock(v7);
    if (v9[0] - 2 < 2) {
      sub_1ACD781F8();
    }
    os_unfair_lock_lock(v4);
    sub_1ACBB3288(v3);
    os_unfair_lock_unlock(v4);
  }
  return 1;
}

unsigned char *sub_1ACBB3288(unsigned char *result)
{
  *unint64_t result = 1;
  return result;
}

uint64_t sub_1ACBB3294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = sub_1ACE76CE8();
  uint64_t v37 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  unint64_t v38 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v16);
  id v36 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v18 - 8);
  v44[3] = &type metadata for MediaCacheDeleteRemovalProcessorDataSource;
  v44[4] = &protocol witness table for MediaCacheDeleteRemovalProcessorDataSource;
  uint64_t v19 = swift_allocObject();
  v44[0] = v19;
  long long v20 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v19 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v19 + 32) = v20;
  *(void *)(v19 + 48) = *(void *)(a1 + 32);
  uint64_t v21 = type metadata accessor for CoreDataEpisodeAndShowStorage();
  v43[4] = &protocol witness table for CoreDataEpisodeAndShowStorage;
  v43[3] = v21;
  v43[0] = a2;
  uint64_t v42[3] = &type metadata for MediaCacheDeleteRemovalProcessorDelegate;
  v42[4] = &protocol witness table for MediaCacheDeleteRemovalProcessorDelegate;
  v42[0] = a3;
  v42[1] = a4;
  *(_OWORD *)(a7 + 152) = 0u;
  *(_OWORD *)(a7 + 168) = 0u;
  *(void *)(a7 + 184) = 0;
  *(_OWORD *)(a7 + 216) = 0u;
  *(_OWORD *)(a7 + 232) = 0u;
  *(void *)(a7 + 248) = 0;
  *(void *)(a7 + 256) = 5;
  *(void *)(a7 + 272) = 0;
  *(void *)(a7 + 280) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE60);
  swift_allocObject();
  *(void *)(a7 + 192) = sub_1ACE758B8();
  swift_allocObject();
  *(void *)(a7 + 200) = sub_1ACE758B8();
  sub_1ACA3E158((uint64_t)v44, a7 + 24);
  sub_1ACA3E158((uint64_t)v43, a7 + 64);
  sub_1ACA3E158((uint64_t)v44, (uint64_t)v41);
  if (a5)
  {
    uint64_t v22 = (uint64_t)a5;
  }
  else
  {
    v33[3] = sub_1ACA51E1C();
    unint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    sub_1ACE77268();
    swift_bridgeObjectRelease();
    unint64_t v39 = 0xD00000000000001DLL;
    unint64_t v40 = 0x80000001ACECBA90;
    __swift_project_boxed_opaque_existential_1(v41, v41[3]);
    uint64_t v35 = a6;
    id v34 = 0;
    swift_bridgeObjectRetain();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    v33[2] = v39;
    v33[1] = v40;
    sub_1ACE75E08();
    unint64_t v39 = MEMORY[0x1E4FBC860];
    sub_1ACABEAC4();
    uint64_t v23 = v37;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
    sub_1ACABEB1C();
    a5 = v34;
    sub_1ACE770E8();
    (*(void (**)(char *, void, uint64_t))(v23 + 104))(v38, *MEMORY[0x1E4FBCC58], v14);
    a6 = v35;
    uint64_t v22 = sub_1ACE76D28();
  }
  id v24 = a5;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
  *(void *)(a7 + 16) = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3B8);
  uint64_t v25 = swift_allocObject();
  *(_DWORD *)(v25 + 20) = 0;
  *(unsigned char *)(v25 + 16) = 3;
  *(void *)(a7 + 264) = v25;
  v41[0] = objc_msgSend(self, sel_falsePredicate);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE98);
  swift_allocObject();
  *(void *)(a7 + 208) = sub_1ACE75938();
  sub_1ACA3E158((uint64_t)v42, a7 + 112);
  *(void *)(a7 + 104) = a6;
  uint64_t v26 = *(void *)(a7 + 96);
  __swift_project_boxed_opaque_existential_1((void *)(a7 + 64), *(void *)(a7 + 88));
  uint64_t v27 = *(void *)(a7 + 48);
  uint64_t v28 = *(void *)(a7 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(a7 + 24), v27);
  (*(void (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
  (*(void (**)(void))(v26 + 24))();
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(a7 + 96);
  __swift_project_boxed_opaque_existential_1((void *)(a7 + 64), *(void *)(a7 + 88));
  uint64_t v30 = *(void *)(a7 + 48);
  uint64_t v31 = *(void *)(a7 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(a7 + 24), v30);
  (*(void (**)(uint64_t, uint64_t))(v31 + 24))(v30, v31);
  (*(void (**)(void))(v29 + 32))();
  swift_bridgeObjectRelease();
  sub_1ACD73240();
  sub_1ACD73814();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  return a7;
}

uint64_t destroy for MediaCacheDeleteRemovalProcessor(id *a1)
{
  swift_release();
  return swift_release();
}

void *initializeWithCopy for MediaCacheDeleteRemovalProcessor(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  a1[4] = *(void *)(a2 + 32);
  id v6 = v3;
  id v7 = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MediaCacheDeleteRemovalProcessor(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MediaCacheDeleteRemovalProcessor(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaCacheDeleteRemovalProcessor(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaCacheDeleteRemovalProcessor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaCacheDeleteRemovalProcessor()
{
  return &type metadata for MediaCacheDeleteRemovalProcessor;
}

uint64_t sub_1ACBB3AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = sub_1ACE76CE8();
  uint64_t v37 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  unint64_t v38 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v16);
  id v36 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v18 - 8);
  v44[3] = &type metadata for MediaCacheDeleteProcessorDataSource;
  v44[4] = &protocol witness table for MediaCacheDeleteProcessorDataSource;
  uint64_t v19 = swift_allocObject();
  v44[0] = v19;
  long long v20 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v19 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v19 + 32) = v20;
  *(void *)(v19 + 48) = *(void *)(a1 + 32);
  uint64_t v21 = type metadata accessor for CoreDataEpisodeAndShowStorage();
  v43[4] = &protocol witness table for CoreDataEpisodeAndShowStorage;
  v43[3] = v21;
  v43[0] = a2;
  uint64_t v42[3] = &type metadata for MediaCacheDeleteProcessorDelegate;
  v42[4] = &protocol witness table for MediaCacheDeleteProcessorDelegate;
  v42[0] = a3;
  v42[1] = a4;
  *(_OWORD *)(a7 + 152) = 0u;
  *(_OWORD *)(a7 + 168) = 0u;
  *(void *)(a7 + 184) = 0;
  *(_OWORD *)(a7 + 216) = 0u;
  *(_OWORD *)(a7 + 232) = 0u;
  *(void *)(a7 + 248) = 0;
  *(void *)(a7 + 256) = 5;
  *(void *)(a7 + 272) = 0;
  *(void *)(a7 + 280) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE60);
  swift_allocObject();
  *(void *)(a7 + 192) = sub_1ACE758B8();
  swift_allocObject();
  *(void *)(a7 + 200) = sub_1ACE758B8();
  sub_1ACA3E158((uint64_t)v44, a7 + 24);
  sub_1ACA3E158((uint64_t)v43, a7 + 64);
  sub_1ACA3E158((uint64_t)v44, (uint64_t)v41);
  if (a5)
  {
    uint64_t v22 = (uint64_t)a5;
  }
  else
  {
    v33[3] = sub_1ACA51E1C();
    unint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    sub_1ACE77268();
    swift_bridgeObjectRelease();
    unint64_t v39 = 0xD00000000000001DLL;
    unint64_t v40 = 0x80000001ACECBA90;
    __swift_project_boxed_opaque_existential_1(v41, v41[3]);
    uint64_t v35 = a6;
    id v34 = 0;
    swift_bridgeObjectRetain();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    v33[2] = v39;
    v33[1] = v40;
    sub_1ACE75E08();
    unint64_t v39 = MEMORY[0x1E4FBC860];
    sub_1ACABEAC4();
    uint64_t v23 = v37;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
    sub_1ACABEB1C();
    a5 = v34;
    sub_1ACE770E8();
    (*(void (**)(char *, void, uint64_t))(v23 + 104))(v38, *MEMORY[0x1E4FBCC58], v14);
    a6 = v35;
    uint64_t v22 = sub_1ACE76D28();
  }
  id v24 = a5;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
  *(void *)(a7 + 16) = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3B8);
  uint64_t v25 = swift_allocObject();
  *(_DWORD *)(v25 + 20) = 0;
  *(unsigned char *)(v25 + 16) = 3;
  *(void *)(a7 + 264) = v25;
  v41[0] = objc_msgSend(self, sel_falsePredicate);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE98);
  swift_allocObject();
  *(void *)(a7 + 208) = sub_1ACE75938();
  sub_1ACA3E158((uint64_t)v42, a7 + 112);
  *(void *)(a7 + 104) = a6;
  uint64_t v26 = *(void *)(a7 + 96);
  __swift_project_boxed_opaque_existential_1((void *)(a7 + 64), *(void *)(a7 + 88));
  uint64_t v27 = *(void *)(a7 + 48);
  uint64_t v28 = *(void *)(a7 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(a7 + 24), v27);
  (*(void (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
  (*(void (**)(void))(v26 + 24))();
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(a7 + 96);
  __swift_project_boxed_opaque_existential_1((void *)(a7 + 64), *(void *)(a7 + 88));
  uint64_t v30 = *(void *)(a7 + 48);
  uint64_t v31 = *(void *)(a7 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(a7 + 24), v30);
  (*(void (**)(uint64_t, uint64_t))(v31 + 24))(v30, v31);
  (*(void (**)(void))(v29 + 32))();
  swift_bridgeObjectRelease();
  sub_1ACD73240();
  sub_1ACD73814();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  return a7;
}

void sub_1ACBB4084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1ACE74D68();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

id static DispatchingFairPlayValidationManaging.receive(on:manager:)(void *a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR___PFDispatchingFairPlayValidationManaging_wrappedInstance] = a2;
  *(void *)&v5[OBJC_IVAR___PFDispatchingFairPlayValidationManaging_responseQueue] = a1;
  v8.receiver = v5;
  v8.super_class = v2;
  swift_unknownObjectRetain();
  id v6 = a1;
  return objc_msgSendSuper2(&v8, sel_init);
}

void DispatchingFairPlayValidationManaging.validateDownloadedEpisodes(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = *(void **)(v3 + OBJC_IVAR___PFDispatchingFairPlayValidationManaging_wrappedInstance);
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  objc_super v8 = (void *)swift_allocObject();
  _OWORD v8[2] = v7;
  v8[3] = a1;
  v8[4] = a2;
  void v10[4] = sub_1ACBB466C;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  void v10[2] = sub_1ACBB4678;
  v10[3] = &block_descriptor_33;
  id v9 = _Block_copy(v10);
  sub_1ACA6DEC8(a1);
  swift_release();
  objc_msgSend(v6, sel_validateDownloadedEpisodesWithCompletion_, v9);
  _Block_release(v9);
}

uint64_t sub_1ACBB431C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACBB4354(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1ACE75DC8();
  uint64_t v24 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1ACE75E48();
  uint64_t v13 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1AD11B470](a3 + 16);
  if (result)
  {
    uint64_t v17 = (void *)result;
    id v18 = *(id *)(result + OBJC_IVAR___PFDispatchingFairPlayValidationManaging_responseQueue);

    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = a4;
    v19[3] = a5;
    v19[4] = a1;
    void v19[5] = a2;
    aBlock[4] = sub_1ACBB4A10;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = &block_descriptor_15;
    long long v20 = _Block_copy(aBlock);
    sub_1ACA6DEC8(a4);
    id v21 = a1;
    id v22 = a2;
    sub_1ACE75E08();
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1ACA55D24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v15, v12, v20);
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v23);
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACBB4624()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1ACBB466C(void *a1, void *a2)
{
  return sub_1ACBB4354(a1, a2, v2[2], v2[3], v2[4]);
}

void sub_1ACBB4678(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

id DispatchingFairPlayValidationManaging.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DispatchingFairPlayValidationManaging.init()()
{
}

id DispatchingFairPlayValidationManaging.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id FairPlayValidationManaging.receive(on:)(void *a1)
{
  uint64_t v3 = (objc_class *)type metadata accessor for DispatchingFairPlayValidationManaging();
  unsigned int v4 = (char *)objc_allocWithZone(v3);
  *(void *)&v4[OBJC_IVAR___PFDispatchingFairPlayValidationManaging_wrappedInstance] = v1;
  *(void *)&v4[OBJC_IVAR___PFDispatchingFairPlayValidationManaging_responseQueue] = a1;
  v7.receiver = v4;
  v7.super_class = v3;
  id v5 = a1;
  swift_unknownObjectRetain();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for DispatchingFairPlayValidationManaging()
{
  return self;
}

uint64_t method lookup function for DispatchingFairPlayValidationManaging(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DispatchingFairPlayValidationManaging);
}

uint64_t sub_1ACBB4988()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1ACBB49C0()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1ACBB4A10()
{
  uint64_t v1 = (uint64_t (*)(void, void))v0[2];
  if (v1) {
    return v1(v0[4], v0[5]);
  }
  return result;
}

uint64_t sub_1ACBB4A4C(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v6; ++i)
    {
      v10[1] = *(id *)(a1 + 8 * i + 32);
      swift_bridgeObjectRetain();
      sub_1ACBB6904(a3, v10);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v9 = swift_bridgeObjectRelease();
      if (v10[0])
      {
        MEMORY[0x1AD118700](v9);
        if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1ACE765C8();
        }
        sub_1ACE76628();
        sub_1ACE76598();
      }
    }
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_1ACBB4B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v8; ++i)
    {
      uint64_t v12 = swift_bridgeObjectRetain();
      uint64_t v13 = a5(v12, a2, a3, a4);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v14 = v13;
      uint64_t v15 = swift_bridgeObjectRelease();
      if (v14)
      {
        MEMORY[0x1AD118700](v15);
        if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1ACE765C8();
        }
        sub_1ACE76628();
        sub_1ACE76598();
      }
    }
    swift_bridgeObjectRelease();
    return v18;
  }
  return result;
}

BOOL static MediaRequestResponseParser.parseResponse(_:params:)(uint64_t a1)
{
  _s18PodcastsFoundation26MediaRequestResponseParserC15extractNextPageySSSgSDys11AnyHashableVypGFZ_0(a1);
  uint64_t v3 = v2;
  if (v2) {
    swift_bridgeObjectRelease();
  }
  sub_1ACBB4E48(a1, (uint64_t)v8);
  char v4 = v8[0];
  if (v8[1])
  {
    sub_1ACB08198();
    swift_allocError();
    *uint64_t v5 = v4;
  }
  else
  {
    char v7 = v8[0];
    sub_1ACBB4F88(a1, &v7);
  }
  return v3 != 0;
}

PodcastsFoundation::MediaRequestResponseParser::MediaRequestResponseParseError_optional __swiftcall MediaRequestResponseParser.MediaRequestResponseParseError.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (PodcastsFoundation::MediaRequestResponseParser::MediaRequestResponseParseError_optional)rawValue;
}

uint64_t MediaRequestResponseParser.MediaRequestResponseParseError.rawValue.getter()
{
  return *v0;
}

PodcastsFoundation::MediaRequestResponseParser::MediaRequestResponseParseError_optional sub_1ACBB4DA8(Swift::Int *a1)
{
  return MediaRequestResponseParser.MediaRequestResponseParseError.init(rawValue:)(*a1);
}

uint64_t sub_1ACBB4DB0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1ACBB7E94();
  unint64_t v5 = sub_1ACA339A4();
  return MEMORY[0x1F4185E20](a1, a2, v4, v5);
}

uint64_t sub_1ACBB4E08()
{
  sub_1ACE748C8();
  swift_allocObject();
  uint64_t result = sub_1ACE748B8();
  qword_1EB766AC8 = result;
  return result;
}

char sub_1ACBB4E48@<W0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = _s18PodcastsFoundation26MediaRequestResponseParserC11extractDataySaySDys11AnyHashableVypGGSgAGFZ_0(a1);
  if (!v3) {
    goto LABEL_13;
  }
  if (!*(void *)(v3 + 16))
  {
    LOBYTE(v3) = swift_bridgeObjectRelease();
    __int16 v8 = 257;
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)(v3 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1ACE771F8();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1ACA65B48((uint64_t)v10), (v6 & 1) != 0))
  {
    sub_1ACA33128(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1ACA6A0F8((uint64_t)v10);
  if (!*((void *)&v12 + 1))
  {
    LOBYTE(v3) = sub_1ACA65828((uint64_t)&v11);
    goto LABEL_13;
  }
  LOBYTE(v3) = swift_dynamicCast();
  if ((v3 & 1) == 0)
  {
LABEL_13:
    __int16 v8 = 256;
    goto LABEL_14;
  }
  v7._countAndFlagsBits = 1701869940;
  v7._object = (void *)0xE400000000000000;
  LOBYTE(v3) = MediaRequest.ContentType.init(rawValue:)(v7);
  if (v10[0] == 6)
  {
    __int16 v8 = 258;
LABEL_14:
    *(_WORD *)a2 = v8;
    return v3;
  }
  *(unsigned char *)a2 = v10[0];
  *(unsigned char *)(a2 + 1) = 0;
  return v3;
}

uint64_t sub_1ACBB4F88(uint64_t a1, unsigned char *a2)
{
  switch(*a2)
  {
    case 1:
      uint64_t v5 = type metadata accessor for ServerPodcast();
      uint64_t v6 = _s18PodcastsFoundation26MediaRequestResponseParserC11extractDataySaySDys11AnyHashableVypGGSgAGFZ_0(a1);
      if (!v6) {
        goto LABEL_16;
      }
      uint64_t v7 = v6;
      uint64_t v13 = 0;
      __int16 v8 = sub_1ACBB5968;
      goto LABEL_7;
    case 2:
      uint64_t v5 = type metadata accessor for ServerPodcastStation();
      uint64_t v9 = _s18PodcastsFoundation26MediaRequestResponseParserC11extractDataySaySDys11AnyHashableVypGGSgAGFZ_0(a1);
      if (v9)
      {
        uint64_t v7 = v9;
        uint64_t v13 = 0;
        __int16 v8 = sub_1ACBB5428;
LABEL_7:
        unint64_t v10 = sub_1ACBB4B90(v7, v2, (uint64_t)&v13, v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8);
        swift_bridgeObjectRelease();
        if (!(v10 >> 62)) {
          goto LABEL_8;
        }
      }
      else
      {
LABEL_16:
        unint64_t v10 = MEMORY[0x1E4FBC860];
        if (!(MEMORY[0x1E4FBC860] >> 62))
        {
LABEL_8:
          swift_bridgeObjectRetain();
          sub_1ACE779C8();
          goto LABEL_14;
        }
      }
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7722D0);
      uint64_t v11 = sub_1ACE774B8();
      swift_bridgeObjectRelease();
LABEL_15:
      swift_bridgeObjectRelease();
      return v11;
    case 3:
      unint64_t v4 = static MediaRequestResponseParser.parseChannelResponse(_:)(a1);
      goto LABEL_12;
    case 4:
      unint64_t v4 = static MediaRequestResponseParser.parseTranscriptResponse(_:)(a1);
      goto LABEL_12;
    case 5:
      unint64_t v4 = static MediaRequestResponseParser.parseCategoriesResponse(_:)(a1);
      goto LABEL_12;
    default:
      unint64_t v4 = static MediaRequestResponseParser.parsePodcastEpisodeResponse(_:)(a1);
LABEL_12:
      unint64_t v10 = v4;
      if (v4 >> 62)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7722D0);
        uint64_t v11 = sub_1ACE774B8();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1ACE779C8();
LABEL_14:
        uint64_t v11 = v10;
      }
      goto LABEL_15;
  }
}

uint64_t static MediaRequestResponseParser.parseContainerResponse<A>(containerType:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = _s18PodcastsFoundation26MediaRequestResponseParserC11extractDataySaySDys11AnyHashableVypGGSgAGFZ_0(a2);
  if (!v2) {
    return 0;
  }
  MEMORY[0x1F4188790](v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772250);
  sub_1ACBB7CA0();
  uint64_t v3 = sub_1ACE763D8();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t static MediaRequestResponseParser.parseChannelResponse(_:)(uint64_t a1)
{
  return sub_1ACBB52DC(a1, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))sub_1ACBB7014);
}

uint64_t static MediaRequestResponseParser.parsePodcastEpisodeResponse(_:)(uint64_t a1)
{
  return sub_1ACBB52DC(a1, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))sub_1ACBB6C8C);
}

uint64_t static MediaRequestResponseParser.parseTranscriptResponse(_:)(uint64_t a1)
{
  return sub_1ACBB52DC(a1, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))sub_1ACBB739C);
}

uint64_t static MediaRequestResponseParser.parseCategoriesResponse(_:)(uint64_t a1)
{
  return sub_1ACBB52DC(a1, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))sub_1ACBB7724);
}

uint64_t sub_1ACBB52DC(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *, uint64_t))
{
  uint64_t v4 = v2;
  uint64_t v5 = _s18PodcastsFoundation26MediaRequestResponseParserC11extractDataySaySDys11AnyHashableVypGGSgAGFZ_0(a1);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v7 = v5;
    uint64_t v14 = MEMORY[0x1E4FBC860];
    uint64_t v8 = *(void *)(v5 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v8; ++i)
      {
        uint64_t v13 = *(void *)(v7 + 8 * i + 32);
        swift_bridgeObjectRetain();
        a2(&v12, &v13, v4);
        uint64_t v10 = swift_bridgeObjectRelease();
        if (v12)
        {
          MEMORY[0x1AD118700](v10);
          if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1ACE765C8();
          }
          sub_1ACE76628();
          sub_1ACE76598();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v6 = v14;
    }
    swift_bridgeObjectRelease();
  }
  return v6;
}

char *sub_1ACBB5428(unint64_t a1, void *a2, void **a3)
{
  v39[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v7 = self;
  uint64_t v8 = (void *)sub_1ACE75FC8();
  v39[0] = 0;
  id v9 = objc_msgSend(v7, sel_dataWithJSONObject_options_error_, v8, 0, v39);

  id v10 = v39[0];
  if (!v9)
  {
    uint64_t v26 = v10;
    uint64_t v27 = sub_1ACE74D78();

    swift_willThrow();
    uint64_t v28 = (void *)v27;
LABEL_26:

    return 0;
  }
  uint64_t v33 = (uint64_t)a2;
  id v34 = a3;
  uint64_t v35 = sub_1ACE74F88();
  unint64_t v36 = v11;

  uint64_t v12 = 0;
  uint64_t v13 = &off_1F037CEE0;
  unint64_t v14 = (unint64_t)&selRef_supportsMetrics;
  do
  {
    if ((unint64_t)v12 >= qword_1F037CEC8)
    {
      __break(1u);
      goto LABEL_29;
    }
    swift_bridgeObjectRetain();
    a2 = (void *)sub_1ACE75FC8();
    uint64_t v15 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(a2, sel_valueForKeyPath_, v15);

    if (v16)
    {
      sub_1ACE770C8();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v38, 0, sizeof(v38));
    }
    sub_1ACA9D6FC((uint64_t)v38, (uint64_t)v39);
    if (v39[3])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772250);
      if (swift_dynamicCast())
      {
        uint64_t v17 = v37;
        goto LABEL_13;
      }
    }
    else
    {
      sub_1ACA65828((uint64_t)v39);
    }
    uint64_t v12 = (void **)((char *)v12 + 1);
    v13 += 2;
  }
  while (v12 != (void **)3);
  uint64_t v17 = MEMORY[0x1E4FBC860];
LABEL_13:
  uint64_t v12 = v34;
  unint64_t v14 = sub_1ACBB4A4C(v17, v33, v34);
  uint64_t v13 = v3;
  swift_bridgeObjectRelease();
  a2 = (void *)v35;
  a1 = v36;
  if (qword_1EB7680D0 == -1) {
    goto LABEL_14;
  }
LABEL_29:
  swift_once();
LABEL_14:
  type metadata accessor for ServerPodcastStation();
  sub_1ACBB7EE8(&qword_1E99F3098, (void (*)(uint64_t))type metadata accessor for ServerPodcastStation);
  uint64_t v18 = v13;
  sub_1ACE748A8();
  if (v13)
  {
    swift_bridgeObjectRelease();
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1ACE754C8();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EB768C28);
    long long v20 = v13;
    id v21 = sub_1ACE75498();
    os_log_type_t v22 = sub_1ACE76BE8();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 138412290;
      uint64_t v25 = (void *)sub_1ACE74D68();
      v39[0] = v25;
      a1 = v36;
      sub_1ACE76FF8();
      void *v24 = v25;
      a2 = (void *)v35;

      _os_log_impl(&dword_1AC9D5000, v21, v22, "Failed to parse container with error: %@", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v24, -1, -1);
      MEMORY[0x1AD11B340](v23, -1, -1);
    }
    else
    {
    }
    sub_1ACA50850((uint64_t)a2, a1);

    uint64_t v28 = *v12;
    *uint64_t v12 = v18;
    goto LABEL_26;
  }
  uint64_t v29 = (char *)v39[0];
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v32 > 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (*(uint64_t *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 0)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    unint64_t v14 = 0;
  }
LABEL_23:
  uint64_t v30 = (unint64_t *)&v29[OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_episodes];
  swift_beginAccess();
  *uint64_t v30 = v14;
  swift_bridgeObjectRelease();
  sub_1ACA50850((uint64_t)a2, a1);
  return v29;
}

char *sub_1ACBB5968(unint64_t a1, void *a2, void **a3)
{
  v39[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v7 = self;
  uint64_t v8 = (void *)sub_1ACE75FC8();
  v39[0] = 0;
  id v9 = objc_msgSend(v7, sel_dataWithJSONObject_options_error_, v8, 0, v39);

  id v10 = v39[0];
  if (!v9)
  {
    uint64_t v26 = v10;
    uint64_t v27 = sub_1ACE74D78();

    swift_willThrow();
    uint64_t v28 = (void *)v27;
LABEL_26:

    return 0;
  }
  uint64_t v33 = (uint64_t)a2;
  id v34 = a3;
  uint64_t v35 = sub_1ACE74F88();
  unint64_t v36 = v11;

  uint64_t v12 = 0;
  uint64_t v13 = &off_1F037CF30;
  unint64_t v14 = (unint64_t)&selRef_supportsMetrics;
  do
  {
    if ((unint64_t)v12 >= qword_1F037CF18)
    {
      __break(1u);
      goto LABEL_29;
    }
    swift_bridgeObjectRetain();
    a2 = (void *)sub_1ACE75FC8();
    uint64_t v15 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(a2, sel_valueForKeyPath_, v15);

    if (v16)
    {
      sub_1ACE770C8();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v38, 0, sizeof(v38));
    }
    sub_1ACA9D6FC((uint64_t)v38, (uint64_t)v39);
    if (v39[3])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772250);
      if (swift_dynamicCast())
      {
        uint64_t v17 = v37;
        goto LABEL_13;
      }
    }
    else
    {
      sub_1ACA65828((uint64_t)v39);
    }
    uint64_t v12 = (void **)((char *)v12 + 1);
    v13 += 2;
  }
  while (v12 != (void **)3);
  uint64_t v17 = MEMORY[0x1E4FBC860];
LABEL_13:
  uint64_t v12 = v34;
  unint64_t v14 = sub_1ACBB4A4C(v17, v33, v34);
  uint64_t v13 = v3;
  swift_bridgeObjectRelease();
  a2 = (void *)v35;
  a1 = v36;
  if (qword_1EB7680D0 == -1) {
    goto LABEL_14;
  }
LABEL_29:
  swift_once();
LABEL_14:
  type metadata accessor for ServerPodcast();
  sub_1ACBB7EE8(qword_1EB766E50, (void (*)(uint64_t))type metadata accessor for ServerPodcast);
  uint64_t v18 = v13;
  sub_1ACE748A8();
  if (v13)
  {
    swift_bridgeObjectRelease();
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1ACE754C8();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EB768C28);
    long long v20 = v13;
    id v21 = sub_1ACE75498();
    os_log_type_t v22 = sub_1ACE76BE8();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 138412290;
      uint64_t v25 = (void *)sub_1ACE74D68();
      v39[0] = v25;
      a1 = v36;
      sub_1ACE76FF8();
      void *v24 = v25;
      a2 = (void *)v35;

      _os_log_impl(&dword_1AC9D5000, v21, v22, "Failed to parse container with error: %@", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v24, -1, -1);
      MEMORY[0x1AD11B340](v23, -1, -1);
    }
    else
    {
    }
    sub_1ACA50850((uint64_t)a2, a1);

    uint64_t v28 = *v12;
    *uint64_t v12 = v18;
    goto LABEL_26;
  }
  uint64_t v29 = (char *)v39[0];
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v32 > 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (*(uint64_t *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 0)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    unint64_t v14 = 0;
  }
LABEL_23:
  uint64_t v30 = (unint64_t *)&v29[OBJC_IVAR___MTServerPodcast_episodes];
  swift_beginAccess();
  *uint64_t v30 = v14;
  swift_bridgeObjectRelease();
  sub_1ACA50850((uint64_t)a2, a1);
  return v29;
}

char *sub_1ACBB5EA8(uint64_t a1, void **a2)
{
  v41[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = type metadata accessor for MediaRequestResponseParser();
  type metadata accessor for ServerPodcast();
  uint64_t v6 = self;
  uint64_t v7 = (void *)sub_1ACE75FC8();
  v41[0] = 0;
  id v8 = objc_msgSend(v6, sel_dataWithJSONObject_options_error_, v7, 0, v41);

  id v9 = v41[0];
  if (!v8)
  {
    uint64_t v28 = v9;
    uint64_t v29 = sub_1ACE74D78();

    swift_willThrow();
    uint64_t v30 = (void *)v29;
LABEL_26:

    return 0;
  }
  uint64_t v35 = v5;
  unint64_t v36 = a2;
  uint64_t v37 = sub_1ACE74F88();
  unint64_t v38 = v10;

  unint64_t v11 = 0;
  unint64_t v12 = (unint64_t)&off_1F037CF80;
  unint64_t v13 = MEMORY[0x1E4FBB968];
  unint64_t v14 = &selRef_supportsMetrics;
  do
  {
    if ((unint64_t)v11 >= qword_1F037CF68)
    {
      __break(1u);
      goto LABEL_29;
    }
    swift_bridgeObjectRetain();
    uint64_t v15 = (void *)sub_1ACE75FC8();
    id v16 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v15, sel_valueForKeyPath_, v16);

    if (v17)
    {
      sub_1ACE770C8();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v40, 0, sizeof(v40));
    }
    sub_1ACA9D6FC((uint64_t)v40, (uint64_t)v41);
    if (v41[3])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772250);
      if (swift_dynamicCast())
      {
        uint64_t v18 = v39;
        goto LABEL_13;
      }
    }
    else
    {
      sub_1ACA65828((uint64_t)v41);
    }
    unint64_t v11 = (void **)((char *)v11 + 1);
    v12 += 16;
  }
  while (v11 != (void **)3);
  uint64_t v18 = MEMORY[0x1E4FBC860];
LABEL_13:
  unint64_t v11 = v36;
  unint64_t v12 = sub_1ACBB4A4C(v18, v35, v36);
  unint64_t v14 = v2;
  swift_bridgeObjectRelease();
  a1 = v37;
  unint64_t v13 = v38;
  if (qword_1EB7680D0 == -1) {
    goto LABEL_14;
  }
LABEL_29:
  swift_once();
LABEL_14:
  sub_1ACBB7EE8(qword_1EB766E50, (void (*)(uint64_t))type metadata accessor for ServerPodcast);
  uint64_t v19 = v14;
  sub_1ACE748A8();
  if (v14)
  {
    swift_bridgeObjectRelease();
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1ACE754C8();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EB768C28);
    id v21 = v14;
    os_log_type_t v22 = sub_1ACE75498();
    os_log_type_t v23 = sub_1ACE76BE8();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 138412290;
      uint64_t v26 = (void *)sub_1ACE74D68();
      v41[0] = v26;
      a1 = v37;
      sub_1ACE76FF8();
      *uint64_t v25 = v26;

      _os_log_impl(&dword_1AC9D5000, v22, v23, "Failed to parse container with error: %@", v24, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      uint64_t v27 = v25;
      unint64_t v13 = v38;
      MEMORY[0x1AD11B340](v27, -1, -1);
      MEMORY[0x1AD11B340](v24, -1, -1);
    }
    else
    {
    }
    sub_1ACA50850(a1, v13);

    uint64_t v30 = *v11;
    *unint64_t v11 = v19;
    goto LABEL_26;
  }
  uint64_t v31 = (char *)v41[0];
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v34 > 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (*(uint64_t *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 0)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    unint64_t v12 = 0;
  }
LABEL_23:
  uint64_t v32 = (unint64_t *)&v31[OBJC_IVAR___MTServerPodcast_episodes];
  swift_beginAccess();
  *uint64_t v32 = v12;
  swift_bridgeObjectRelease();
  sub_1ACA50850(a1, v13);
  return v31;
}

void sub_1ACBB63E8(void ***a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, void *a6@<X8>)
{
  v43[4] = *(id *)MEMORY[0x1E4F143B8];
  unint64_t v10 = *a1;
  unint64_t v11 = self;
  unint64_t v12 = MEMORY[0x1E4FBC840] + 8;
  unint64_t v13 = (void *)sub_1ACE75FC8();
  v43[0] = 0;
  id v14 = objc_msgSend(v11, sel_dataWithJSONObject_options_error_, v13, 0, v43);

  id v15 = v43[0];
  if (v14)
  {
    unint64_t v36 = (void **)a3;
    uint64_t v37 = a6;
    uint64_t v34 = sub_1ACE74F88();
    unint64_t v35 = v16;

    a6 = 0;
    id v17 = &off_1F0380870;
    uint64_t v18 = &selRef_supportsMetrics;
    do
    {
      if ((unint64_t)a6 >= qword_1F0380858)
      {
        __break(1u);
        goto LABEL_29;
      }
      swift_bridgeObjectRetain();
      a3 = sub_1ACE75FC8();
      uint64_t v6 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      id v19 = objc_msgSend((id)a3, sel_valueForKeyPath_, v6);

      if (v19)
      {
        sub_1ACE770C8();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v42, 0, sizeof(v42));
      }
      sub_1ACA9D6FC((uint64_t)v42, (uint64_t)v43);
      if (v43[3])
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772250);
        if (swift_dynamicCast())
        {
          uint64_t v20 = v41;
          goto LABEL_13;
        }
      }
      else
      {
        sub_1ACA65828((uint64_t)v43);
      }
      a6 = (void *)((char *)a6 + 1);
      v17 += 2;
    }
    while (a6 != (void *)3);
    uint64_t v20 = MEMORY[0x1E4FBC860];
LABEL_13:
    unint64_t v10 = v36;
    a3 = sub_1ACBB4A4C(v20, a2, v36);
    uint64_t v18 = v39;
    swift_bridgeObjectRelease();
    a6 = v37;
    uint64_t v6 = (void *)v34;
    unint64_t v12 = v35;
    if (qword_1EB7680D0 == -1) {
      goto LABEL_14;
    }
LABEL_29:
    swift_once();
LABEL_14:
    id v21 = v18;
    sub_1ACE748A8();
    if (v18)
    {
      swift_bridgeObjectRelease();
      if (qword_1EB768C48 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_1ACE754C8();
      __swift_project_value_buffer(v22, (uint64_t)qword_1EB768C28);
      os_log_type_t v23 = v18;
      uint64_t v24 = v18;
      uint64_t v25 = sub_1ACE75498();
      os_log_type_t v26 = sub_1ACE76BE8();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        uint64_t v28 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v27 = 138412290;
        uint64_t v29 = (void *)sub_1ACE74D68();
        v43[0] = v29;
        a6 = v37;
        sub_1ACE76FF8();
        void *v28 = v29;
        unint64_t v10 = v36;

        _os_log_impl(&dword_1AC9D5000, v25, v26, "Failed to parse container with error: %@", v27, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v28, -1, -1);
        MEMORY[0x1AD11B340](v27, -1, -1);
        sub_1ACA50850((uint64_t)v6, v35);
      }
      else
      {
        sub_1ACA50850((uint64_t)v6, v12);
      }
      uint64_t v33 = *v10;
      uint8_t *v10 = v21;

      id v14 = 0;
    }
    else
    {
      id v14 = v43[0];
      if (a3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v32 = sub_1ACE77508();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v32 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v32 <= 0)
      {
        swift_bridgeObjectRelease();
        a3 = 0;
      }
      (*(void (**)(unint64_t, uint64_t))(a5 + 16))(a3, a4);
      sub_1ACA50850((uint64_t)v6, v12);
    }
  }
  else
  {
    uint64_t v30 = v15;
    uint64_t v31 = (void *)sub_1ACE74D78();

    swift_willThrow();
  }
  *a6 = v14;
}

void sub_1ACBB6904(void **a1@<X2>, id *a2@<X8>)
{
  v26[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = self;
  uint64_t v6 = (void *)sub_1ACE75FC8();
  v26[0] = 0;
  id v7 = objc_msgSend(v5, sel_dataWithJSONObject_options_error_, v6, 0, v26);

  id v8 = v26[0];
  if (v7)
  {
    uint64_t v9 = sub_1ACE74F88();
    unint64_t v11 = v10;

    if (qword_1EB7680D0 != -1) {
      swift_once();
    }
    type metadata accessor for ServerPodcastEpisode();
    sub_1ACBB7EE8(qword_1EB767AA0, (void (*)(uint64_t))type metadata accessor for ServerPodcastEpisode);
    sub_1ACE748A8();
    if (!v2)
    {
      sub_1ACA50850(v9, v11);
      *a2 = v26[0];
      return;
    }
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1ACE754C8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EB768C28);
    id v13 = v2;
    id v14 = v2;
    id v15 = sub_1ACE75498();
    os_log_type_t v16 = sub_1ACE76BE8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v25 = a1;
      id v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      *(_DWORD *)id v17 = 138412290;
      unint64_t v24 = v11;
      id v19 = (void *)sub_1ACE74D68();
      v26[0] = v19;
      sub_1ACE76FF8();
      *uint64_t v18 = v19;

      _os_log_impl(&dword_1AC9D5000, v15, v16, "Failed to parse episode with error: %@", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v18, -1, -1);
      uint64_t v20 = v17;
      a1 = v25;
      MEMORY[0x1AD11B340](v20, -1, -1);
      sub_1ACA50850(v9, v24);
    }
    else
    {
      sub_1ACA50850(v9, v11);
    }
    os_log_type_t v23 = *a1;
    *a1 = v2;
  }
  else
  {
    id v21 = v8;
    uint64_t v22 = sub_1ACE74D78();

    swift_willThrow();
    os_log_type_t v23 = (void *)v22;
  }

  *a2 = 0;
}

void sub_1ACBB6C8C(id *a1@<X8>)
{
  v21[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = self;
  uint64_t v4 = (void *)sub_1ACE75FC8();
  v21[0] = 0;
  id v5 = objc_msgSend(v3, sel_dataWithJSONObject_options_error_, v4, 0, v21);

  id v6 = v21[0];
  if (v5)
  {
    uint64_t v7 = sub_1ACE74F88();
    unint64_t v9 = v8;

    if (qword_1EB7680D0 != -1) {
      swift_once();
    }
    type metadata accessor for ServerPodcastEpisode();
    sub_1ACBB7EE8(qword_1EB767AA0, (void (*)(uint64_t))type metadata accessor for ServerPodcastEpisode);
    sub_1ACE748A8();
    if (!v1)
    {
      sub_1ACA50850(v7, v9);
      *a1 = v21[0];
      return;
    }
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1ACE754C8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB768C28);
    id v11 = v1;
    id v12 = v1;
    id v13 = sub_1ACE75498();
    os_log_type_t v14 = sub_1ACE76BE8();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v16 = (void *)swift_slowAlloc();
      *(_DWORD *)id v15 = 138412290;
      unint64_t v20 = v9;
      id v17 = (void *)sub_1ACE74D68();
      v21[0] = v17;
      sub_1ACE76FF8();
      *os_log_type_t v16 = v17;

      _os_log_impl(&dword_1AC9D5000, v13, v14, "Failed to parse episode with error: %@", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v16, -1, -1);
      MEMORY[0x1AD11B340](v15, -1, -1);
      sub_1ACA50850(v7, v20);
    }
    else
    {
      sub_1ACA50850(v7, v9);
    }
  }
  else
  {
    uint64_t v18 = v6;
    id v19 = (void *)sub_1ACE74D78();

    swift_willThrow();
  }
  *a1 = 0;
}

void sub_1ACBB7014(id *a1@<X8>)
{
  v21[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = self;
  uint64_t v4 = (void *)sub_1ACE75FC8();
  v21[0] = 0;
  id v5 = objc_msgSend(v3, sel_dataWithJSONObject_options_error_, v4, 0, v21);

  id v6 = v21[0];
  if (v5)
  {
    uint64_t v7 = sub_1ACE74F88();
    unint64_t v9 = v8;

    if (qword_1EB7680D0 != -1) {
      swift_once();
    }
    type metadata accessor for ServerChannel();
    sub_1ACBB7EE8(&qword_1E99F3090, (void (*)(uint64_t))type metadata accessor for ServerChannel);
    sub_1ACE748A8();
    if (!v1)
    {
      sub_1ACA50850(v7, v9);
      *a1 = v21[0];
      return;
    }
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1ACE754C8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB768C28);
    id v11 = v1;
    id v12 = v1;
    id v13 = sub_1ACE75498();
    os_log_type_t v14 = sub_1ACE76BE8();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v16 = (void *)swift_slowAlloc();
      *(_DWORD *)id v15 = 138412290;
      unint64_t v20 = v9;
      id v17 = (void *)sub_1ACE74D68();
      v21[0] = v17;
      sub_1ACE76FF8();
      *os_log_type_t v16 = v17;

      _os_log_impl(&dword_1AC9D5000, v13, v14, "Failed to parse channel with error: %@", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v16, -1, -1);
      MEMORY[0x1AD11B340](v15, -1, -1);
      sub_1ACA50850(v7, v20);
    }
    else
    {
      sub_1ACA50850(v7, v9);
    }
  }
  else
  {
    uint64_t v18 = v6;
    id v19 = (void *)sub_1ACE74D78();

    swift_willThrow();
  }
  *a1 = 0;
}

void sub_1ACBB739C(id *a1@<X8>)
{
  v21[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = self;
  uint64_t v4 = (void *)sub_1ACE75FC8();
  v21[0] = 0;
  id v5 = objc_msgSend(v3, sel_dataWithJSONObject_options_error_, v4, 0, v21);

  id v6 = v21[0];
  if (v5)
  {
    uint64_t v7 = sub_1ACE74F88();
    unint64_t v9 = v8;

    if (qword_1EB7680D0 != -1) {
      swift_once();
    }
    type metadata accessor for ServerTranscript(0);
    sub_1ACBB7EE8(&qword_1E99F3088, (void (*)(uint64_t))type metadata accessor for ServerTranscript);
    sub_1ACE748A8();
    if (!v1)
    {
      sub_1ACA50850(v7, v9);
      *a1 = v21[0];
      return;
    }
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1ACE754C8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB768C28);
    id v11 = v1;
    id v12 = v1;
    id v13 = sub_1ACE75498();
    os_log_type_t v14 = sub_1ACE76BE8();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v16 = (void *)swift_slowAlloc();
      *(_DWORD *)id v15 = 138412290;
      unint64_t v20 = v9;
      id v17 = (void *)sub_1ACE74D68();
      v21[0] = v17;
      sub_1ACE76FF8();
      *os_log_type_t v16 = v17;

      _os_log_impl(&dword_1AC9D5000, v13, v14, "Failed to parse transcript with error: %@", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v16, -1, -1);
      MEMORY[0x1AD11B340](v15, -1, -1);
      sub_1ACA50850(v7, v20);
    }
    else
    {
      sub_1ACA50850(v7, v9);
    }
  }
  else
  {
    uint64_t v18 = v6;
    id v19 = (void *)sub_1ACE74D78();

    swift_willThrow();
  }
  *a1 = 0;
}

void sub_1ACBB7724(id *a1@<X8>)
{
  v21[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = self;
  uint64_t v4 = (void *)sub_1ACE75FC8();
  v21[0] = 0;
  id v5 = objc_msgSend(v3, sel_dataWithJSONObject_options_error_, v4, 0, v21);

  id v6 = v21[0];
  if (v5)
  {
    uint64_t v7 = sub_1ACE74F88();
    unint64_t v9 = v8;

    if (qword_1EB7680D0 != -1) {
      swift_once();
    }
    type metadata accessor for ServerCategory();
    sub_1ACBB7EE8(&qword_1E99F3080, (void (*)(uint64_t))type metadata accessor for ServerCategory);
    sub_1ACE748A8();
    if (!v1)
    {
      sub_1ACA50850(v7, v9);
      *a1 = v21[0];
      return;
    }
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1ACE754C8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB768C28);
    id v11 = v1;
    id v12 = v1;
    id v13 = sub_1ACE75498();
    os_log_type_t v14 = sub_1ACE76BE8();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v16 = (void *)swift_slowAlloc();
      *(_DWORD *)id v15 = 138412290;
      unint64_t v20 = v9;
      id v17 = (void *)sub_1ACE74D68();
      v21[0] = v17;
      sub_1ACE76FF8();
      *os_log_type_t v16 = v17;

      _os_log_impl(&dword_1AC9D5000, v13, v14, "Failed to parse category with error: %@", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v16, -1, -1);
      MEMORY[0x1AD11B340](v15, -1, -1);
      sub_1ACA50850(v7, v20);
    }
    else
    {
      sub_1ACA50850(v7, v9);
    }
  }
  else
  {
    uint64_t v18 = v6;
    id v19 = (void *)sub_1ACE74D78();

    swift_willThrow();
  }
  *a1 = 0;
}

uint64_t MediaRequestResponseParser.deinit()
{
  return v0;
}

uint64_t MediaRequestResponseParser.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s18PodcastsFoundation26MediaRequestResponseParserC11extractDataySaySDys11AnyHashableVypGGSgAGFZ_0(uint64_t a1)
{
  *(void *)&long long v7 = 1635017060;
  *((void *)&v7 + 1) = 0xE400000000000000;
  sub_1ACE771F8();
  if (*(void *)(a1 + 16) && (unint64_t v2 = sub_1ACA65B48((uint64_t)v6), (v3 & 1) != 0))
  {
    sub_1ACA33128(*(void *)(a1 + 56) + 32 * v2, (uint64_t)&v7);
  }
  else
  {
    long long v7 = 0u;
    long long v8 = 0u;
  }
  sub_1ACA6A0F8((uint64_t)v6);
  if (*((void *)&v8 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772250);
    if (swift_dynamicCast()) {
      return v5;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1ACA65828((uint64_t)&v7);
    return 0;
  }
}

uint64_t _s18PodcastsFoundation26MediaRequestResponseParserC15extractNextPageySSSgSDys11AnyHashableVypGFZ_0(uint64_t a1)
{
  *(void *)&long long v7 = 1954047342;
  *((void *)&v7 + 1) = 0xE400000000000000;
  sub_1ACE771F8();
  if (*(void *)(a1 + 16) && (unint64_t v2 = sub_1ACA65B48((uint64_t)v6), (v3 & 1) != 0))
  {
    sub_1ACA33128(*(void *)(a1 + 56) + 32 * v2, (uint64_t)&v7);
  }
  else
  {
    long long v7 = 0u;
    long long v8 = 0u;
  }
  sub_1ACA6A0F8((uint64_t)v6);
  if (*((void *)&v8 + 1))
  {
    if (swift_dynamicCast()) {
      return v5;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1ACA65828((uint64_t)&v7);
    return 0;
  }
}

void sub_1ACBB7C7C(void ***a1@<X0>, void *a2@<X8>)
{
  sub_1ACBB63E8(a1, *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_1ACBB7CA0()
{
  unint64_t result = qword_1EB76E088;
  if (!qword_1EB76E088)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB772250);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76E088);
  }
  return result;
}

unint64_t sub_1ACBB7D00()
{
  unint64_t result = qword_1E99F3070;
  if (!qword_1E99F3070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3070);
  }
  return result;
}

uint64_t type metadata accessor for MediaRequestResponseParser()
{
  return self;
}

uint64_t method lookup function for MediaRequestResponseParser(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MediaRequestResponseParser);
}

unsigned char *storeEnumTagSinglePayload for MediaRequestResponseParser.MediaRequestResponseParseError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACBB7E5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaRequestResponseParser.MediaRequestResponseParseError()
{
  return &type metadata for MediaRequestResponseParser.MediaRequestResponseParseError;
}

unint64_t sub_1ACBB7E94()
{
  unint64_t result = qword_1E99F3078;
  if (!qword_1E99F3078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3078);
  }
  return result;
}

uint64_t sub_1ACBB7EE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Trace.emit(event:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(a5 + 16))(a1, a2, a3, 0, 0, a4, a5);
}

uint64_t Trace.start(interval:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(a5 + 24))(a1, a2, a3, 0, 0, a4, a5);
}

uint64_t Traceable.traced(by:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v4, a2);
  sub_1ACA3E158(a1, (uint64_t)v9);
  return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(a3 + 16))(v9, a2, a3);
}

uint64_t Traceable.traced(on:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  v23[1] = a4;
  uint64_t v24 = a3;
  uint64_t v9 = sub_1ACE75118();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1ACE754C8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  os_log_type_t v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v5, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  LOBYTE(v5) = sub_1ACE76BC8();
  sub_1ACE75108();
  uint64_t v17 = sub_1ACE750C8();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v20 = type metadata accessor for LoggerTrace(0);
  v25[3] = v20;
  v25[4] = (uint64_t)&protocol witness table for LoggerTrace;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25);
  uint64_t *boxed_opaque_existential_1 = v17;
  boxed_opaque_existential_1[1] = v19;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))((char *)boxed_opaque_existential_1 + *(int *)(v20 + 20), v16, v13);
  *((unsigned char *)boxed_opaque_existential_1 + *(int *)(v20 + 24)) = v5;
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v24 + 16))(v25, a2);
}

uint64_t dispatch thunk of Traceable.trace.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Traceable.trace.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of Traceable.trace.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t ServerCategory.id.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerCategory.type.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerCategory.attributes.getter()
{
  return swift_retain();
}

uint64_t ServerCategory.relationships.getter()
{
  return swift_retain();
}

void *ServerCategory.__allocating_init(id:type:attributes:relationships:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  result[6] = a5;
  result[7] = a6;
  return result;
}

void *ServerCategory.init(id:type:attributes:relationships:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  v6[6] = a5;
  v6[7] = a6;
  return v6;
}

uint64_t ServerCategory.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t static ServerCategory.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_1ACE77848();
  }
}

uint64_t sub_1ACBB84BC()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701869940;
      break;
    case 2:
      uint64_t result = 0x7475626972747461;
      break;
    case 3:
      uint64_t result = 0x6E6F6974616C6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACBB8548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACBBBF20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACBB8570(uint64_t a1)
{
  unint64_t v2 = sub_1ACBB88B8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACBB85AC(uint64_t a1)
{
  unint64_t v2 = sub_1ACBB88B8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ServerCategory.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t ServerCategory.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t ServerCategory.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F30A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACBB88B8();
  sub_1ACE77C78();
  LOBYTE(v13) = 0;
  sub_1ACE77748();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1ACE77748();
    uint64_t v13 = *(void *)(v3 + 48);
    HIBYTE(v12) = 2;
    type metadata accessor for ServerCategoryAttributes();
    sub_1ACBBB3D4(&qword_1E99F30A8, v9, (void (*)(uint64_t))type metadata accessor for ServerCategoryAttributes);
    sub_1ACE77788();
    uint64_t v13 = *(void *)(v3 + 56);
    HIBYTE(v12) = 3;
    type metadata accessor for ServerCategoryRelationships();
    sub_1ACBBB3D4(&qword_1E99F30B0, v10, (void (*)(uint64_t))type metadata accessor for ServerCategoryRelationships);
    sub_1ACE77728();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1ACBB88B8()
{
  unint64_t result = qword_1EB770FD0;
  if (!qword_1EB770FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770FD0);
  }
  return result;
}

uint64_t type metadata accessor for ServerCategoryAttributes()
{
  return self;
}

uint64_t type metadata accessor for ServerCategoryRelationships()
{
  return self;
}

uint64_t ServerCategory.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t ServerCategory.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ServerCategory.init(from:)(a1);
  return v2;
}

void *ServerCategory.init(from:)(void *a1)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771990);
  uint64_t v4 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACBB88B8();
  sub_1ACE77C48();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v7 = v4;
    LOBYTE(v16) = 0;
    uint64_t v8 = v14;
    v1[2] = sub_1ACE77658();
    v1[3] = v9;
    LOBYTE(v16) = 1;
    v1[4] = sub_1ACE77658();
    v1[5] = v10;
    type metadata accessor for ServerCategoryAttributes();
    char v15 = 2;
    sub_1ACBBB3D4(&qword_1EB771458, v11, (void (*)(uint64_t))type metadata accessor for ServerCategoryAttributes);
    sub_1ACE77698();
    v1[6] = v16;
    type metadata accessor for ServerCategoryRelationships();
    char v15 = 3;
    sub_1ACBBB3D4(&qword_1EB771480, v12, (void (*)(uint64_t))type metadata accessor for ServerCategoryRelationships);
    sub_1ACE77638();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v6, v8);
    v1[7] = v16;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t sub_1ACBB8D54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACBBB298(a1, (uint64_t (*)(uint64_t))ServerCategory.init(from:), a2);
}

uint64_t sub_1ACBB8D84(void *a1)
{
  return ServerCategory.encode(to:)(a1);
}

uint64_t sub_1ACBB8DA8()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACBB8E08()
{
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBB8E64()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACBB8EC0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)a1 + 16) == *(void *)(*(void *)a2 + 16)
    && *(void *)(*(void *)a1 + 24) == *(void *)(*(void *)a2 + 24))
  {
    return 1;
  }
  else
  {
    return sub_1ACE77848();
  }
}

uint64_t ServerCategoryAttributes.url.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerCategoryAttributes.editorialArtwork.getter()
{
  return swift_retain();
}

uint64_t ServerCategoryAttributes.color.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

void *ServerCategoryAttributes.__allocating_init(name:url:editorialArtwork:color:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  result[6] = a5;
  result[7] = a6;
  result[8] = a7;
  return result;
}

void *ServerCategoryAttributes.init(name:url:editorialArtwork:color:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  v7[5] = a4;
  void v7[6] = a5;
  v7[7] = a6;
  v7[8] = a7;
  return v7;
}

unint64_t sub_1ACBB8FDC()
{
  unint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      unint64_t result = 7107189;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x726F6C6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACBB905C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACBBC0E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACBB9084(uint64_t a1)
{
  unint64_t v2 = sub_1ACBB9380();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACBB90C0(uint64_t a1)
{
  unint64_t v2 = sub_1ACBB9380();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ServerCategoryAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ServerCategoryAttributes.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ServerCategoryAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F30B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACBB9380();
  sub_1ACE77C78();
  char v14 = 0;
  sub_1ACE77748();
  if (!v2)
  {
    char v13 = 1;
    sub_1ACE776E8();
    uint64_t v12 = *(void *)(v3 + 48);
    v11[15] = 2;
    type metadata accessor for ServerCategoryBrandLogoArtwork();
    sub_1ACBBB3D4(&qword_1E99F30C0, v9, (void (*)(uint64_t))type metadata accessor for ServerCategoryBrandLogoArtwork);
    sub_1ACE77728();
    v11[14] = 3;
    sub_1ACE776E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1ACBB9380()
{
  unint64_t result = qword_1EB771440;
  if (!qword_1EB771440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771440);
  }
  return result;
}

uint64_t type metadata accessor for ServerCategoryBrandLogoArtwork()
{
  return self;
}

uint64_t ServerCategoryAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ServerCategoryAttributes.init(from:)(a1);
  return v2;
}

void *ServerCategoryAttributes.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  v17[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7719C0);
  uint64_t v5 = *(void *)(v17[0] - 8);
  MEMORY[0x1F4188790](v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACBB9380();
  sub_1ACE77C48();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v5;
    char v21 = 0;
    uint64_t v9 = v17[0];
    v1[2] = sub_1ACE77658();
    v1[3] = v10;
    char v20 = 1;
    v1[4] = sub_1ACE775F8();
    v1[5] = v11;
    type metadata accessor for ServerCategoryBrandLogoArtwork();
    char v19 = 2;
    sub_1ACBBB3D4(&qword_1EB7714A0, v12, (void (*)(uint64_t))type metadata accessor for ServerCategoryBrandLogoArtwork);
    sub_1ACE77638();
    v1[6] = v17[1];
    char v18 = 3;
    uint64_t v14 = sub_1ACE775F8();
    uint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    v3[7] = v14;
    v3[8] = v16;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1ACBB9750@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACBBB298(a1, (uint64_t (*)(uint64_t))ServerCategoryAttributes.init(from:), a2);
}

uint64_t sub_1ACBB9780(void *a1)
{
  return ServerCategoryAttributes.encode(to:)(a1);
}

uint64_t ServerCategoryRelationships.parent.getter()
{
  return swift_retain();
}

uint64_t ServerCategoryRelationships.children.getter()
{
  return swift_retain();
}

uint64_t sub_1ACBB97B4(char *a1, char *a2)
{
  return sub_1ACCF46A8(*a1, *a2);
}

uint64_t sub_1ACBB97C0()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACBB9840()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBB98AC()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACBB9928@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1ACBB9988(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x746E65726170;
  if (*v1) {
    uint64_t v2 = 0x6E6572646C696863;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ACBB99C4()
{
  if (*v0) {
    return 0x6E6572646C696863;
  }
  else {
    return 0x746E65726170;
  }
}

uint64_t sub_1ACBB99FC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1ACBB9A60(uint64_t a1)
{
  unint64_t v2 = sub_1ACBB9DB8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACBB9A9C(uint64_t a1)
{
  unint64_t v2 = sub_1ACBB9DB8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ServerCategoryRelationships.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ServerCategoryRelationships.init(from:)(a1);
  return v2;
}

uint64_t ServerCategoryRelationships.init(from:)(void *a1)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F30C8);
  uint64_t v4 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACBB9DB8();
  sub_1ACE77C48();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v7 = v4;
    type metadata accessor for ServerCategoryParentRelationshipContainer();
    char v13 = 0;
    sub_1ACBBB3D4(&qword_1E99F30D8, v8, (void (*)(uint64_t))type metadata accessor for ServerCategoryParentRelationshipContainer);
    uint64_t v9 = v12;
    sub_1ACE77638();
    *(void *)(v1 + 16) = v14;
    type metadata accessor for ServerCategoryChildrenRelationshipContainer();
    char v13 = 1;
    sub_1ACBBB3D4(&qword_1E99F30E0, v10, (void (*)(uint64_t))type metadata accessor for ServerCategoryChildrenRelationshipContainer);
    sub_1ACE77638();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v6, v9);
    *(void *)(v1 + 24) = v14;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

unint64_t sub_1ACBB9DB8()
{
  unint64_t result = qword_1E99F30D0;
  if (!qword_1E99F30D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F30D0);
  }
  return result;
}

uint64_t type metadata accessor for ServerCategoryParentRelationshipContainer()
{
  return self;
}

uint64_t type metadata accessor for ServerCategoryChildrenRelationshipContainer()
{
  return self;
}

uint64_t ServerCategoryRelationships.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t ServerCategoryRelationships.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t ServerCategoryRelationships.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F30E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACBB9DB8();
  sub_1ACE77C78();
  uint64_t v13 = *(void *)(v3 + 16);
  HIBYTE(v12) = 0;
  type metadata accessor for ServerCategoryParentRelationshipContainer();
  sub_1ACBBB3D4(&qword_1E99F30F0, v9, (void (*)(uint64_t))type metadata accessor for ServerCategoryParentRelationshipContainer);
  sub_1ACE77728();
  if (!v2)
  {
    uint64_t v13 = *(void *)(v3 + 24);
    HIBYTE(v12) = 1;
    type metadata accessor for ServerCategoryChildrenRelationshipContainer();
    sub_1ACBBB3D4(&qword_1E99F30F8, v10, (void (*)(uint64_t))type metadata accessor for ServerCategoryChildrenRelationshipContainer);
    sub_1ACE77728();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1ACBBA0B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACBBB298(a1, (uint64_t (*)(uint64_t))ServerCategoryRelationships.init(from:), a2);
}

uint64_t sub_1ACBBA0E4(void *a1)
{
  return ServerCategoryRelationships.encode(to:)(a1);
}

uint64_t ServerCategoryParentRelationshipContainer.data.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACBBA114()
{
  return sub_1ACE76108();
}

uint64_t sub_1ACBBA128@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA598(a1);
}

void sub_1ACBBA134(void *a1@<X8>)
{
  *a1 = 1635017060;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1ACBBA148@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA5F4(a1);
}

uint64_t sub_1ACBBA154(uint64_t a1)
{
  unint64_t v2 = sub_1ACBBA258();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACBBA190(uint64_t a1)
{
  unint64_t v2 = sub_1ACBBA258();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ServerCategoryParentRelationshipContainer.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ServerCategoryParentRelationshipContainer.init(from:)(a1);
  return v2;
}

uint64_t ServerCategoryParentRelationshipContainer.init(from:)(void *a1)
{
  return sub_1ACBBA74C(a1, &qword_1E99F3100, (void (*)(void))sub_1ACBBA258);
}

unint64_t sub_1ACBBA258()
{
  unint64_t result = qword_1E99F3108;
  if (!qword_1E99F3108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3108);
  }
  return result;
}

unint64_t sub_1ACBBA2AC()
{
  unint64_t result = qword_1EB771880;
  if (!qword_1EB771880)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB771878);
    sub_1ACBBA320();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771880);
  }
  return result;
}

unint64_t sub_1ACBBA320()
{
  unint64_t result = qword_1EB7711D0;
  if (!qword_1EB7711D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7711D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7711D0);
  }
  return result;
}

uint64_t ServerCategoryParentRelationshipContainer.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ServerCategoryParentRelationshipContainer.encode(to:)(void *a1)
{
  return sub_1ACBBAACC(a1, &qword_1E99F3110, (void (*)(void))sub_1ACBBA258);
}

unint64_t sub_1ACBBA3DC()
{
  unint64_t result = qword_1E99F3118;
  if (!qword_1E99F3118)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB770B90);
    sub_1ACBBB3D4(&qword_1E99F3120, v1, (void (*)(uint64_t))type metadata accessor for ServerCategory);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3118);
  }
  return result;
}

uint64_t type metadata accessor for ServerCategory()
{
  return self;
}

uint64_t sub_1ACBBA4A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACBBB298(a1, (uint64_t (*)(uint64_t))ServerCategoryParentRelationshipContainer.init(from:), a2);
}

uint64_t sub_1ACBBA4D4(void *a1)
{
  return ServerCategoryParentRelationshipContainer.encode(to:)(a1);
}

uint64_t sub_1ACBBA4F8()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACBBA544()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACBBA58C@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA598(a1);
}

uint64_t sub_1ACBBA598@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1ACBBA5E8@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA5F4(a1);
}

uint64_t sub_1ACBBA5F4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1ACBBA648(uint64_t a1)
{
  unint64_t v2 = sub_1ACBBAA00();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACBBA684(uint64_t a1)
{
  unint64_t v2 = sub_1ACBBAA00();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ServerCategoryChildrenRelationshipContainer.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ServerCategoryChildrenRelationshipContainer.init(from:)(a1);
  return v2;
}

uint64_t ServerCategoryChildrenRelationshipContainer.init(from:)(void *a1)
{
  return sub_1ACBBA74C(a1, &qword_1E99F3128, (void (*)(void))sub_1ACBBAA00);
}

uint64_t sub_1ACBBA74C(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5 = v3;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v24 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  uint64_t v9 = v23;
  sub_1ACE77C48();
  if (v9)
  {
    swift_deallocPartialClassInstance();
    uint64_t v12 = (uint64_t)a1;
  }
  else
  {
    uint64_t v10 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771878);
    sub_1ACBBA2AC();
    uint64_t v11 = v22;
    sub_1ACE77638();
    uint64_t v23 = v3;
    uint64_t v14 = MEMORY[0x1E4FBC860];
    if (v25) {
      uint64_t v15 = v25;
    }
    else {
      uint64_t v15 = MEMORY[0x1E4FBC860];
    }
    uint64_t v25 = MEMORY[0x1E4FBC860];
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      char v21 = v8;
      swift_bridgeObjectRetain();
      uint64_t v17 = 0;
      uint64_t v18 = v24;
      do
      {
        if (*(void *)(v15 + 8 * v17 + 32))
        {
          uint64_t v19 = swift_retain();
          MEMORY[0x1AD118700](v19);
          if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1ACE765C8();
          }
          sub_1ACE76628();
          sub_1ACE76598();
          uint64_t v18 = v24;
        }
        ++v17;
      }
      while (v16 != v17);
      swift_bridgeObjectRelease();
      uint64_t v14 = v25;
      uint64_t v8 = v21;
    }
    else
    {
      uint64_t v18 = v24;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v11);
    uint64_t v20 = v23;
    *(void *)(v23 + 16) = v14;
    uint64_t v5 = v20;
    uint64_t v12 = (uint64_t)v10;
  }
  __swift_destroy_boxed_opaque_existential_0(v12);
  return v5;
}

unint64_t sub_1ACBBAA00()
{
  unint64_t result = qword_1E99F3130;
  if (!qword_1E99F3130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3130);
  }
  return result;
}

uint64_t _s18PodcastsFoundation41ServerCategoryParentRelationshipContainerCfD_0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ServerCategoryChildrenRelationshipContainer.encode(to:)(void *a1)
{
  return sub_1ACBBAACC(a1, &qword_1E99F3138, (void (*)(void))sub_1ACBBAA00);
}

uint64_t sub_1ACBBAACC(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1ACE77C78();
  void v12[3] = *(void *)(v5 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770B90);
  sub_1ACBBA3DC();
  sub_1ACE77788();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1ACBBAC2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACBBB298(a1, (uint64_t (*)(uint64_t))ServerCategoryChildrenRelationshipContainer.init(from:), a2);
}

uint64_t sub_1ACBBAC5C(void *a1)
{
  return ServerCategoryChildrenRelationshipContainer.encode(to:)(a1);
}

uint64_t ServerCategoryBrandLogoArtwork.__allocating_init(brandLogo:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t ServerCategoryBrandLogoArtwork.init(brandLogo:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_1ACBBACC0()
{
  return 0x676F4C646E617262;
}

uint64_t sub_1ACBBACDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x676F4C646E617262 && a2 == 0xE90000000000006FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1ACE77848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ACBBAD80(uint64_t a1)
{
  unint64_t v2 = sub_1ACBBAFD4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACBBADBC(uint64_t a1)
{
  unint64_t v2 = sub_1ACBBAFD4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ServerCategoryBrandLogoArtwork.deinit()
{
  swift_release();
  return v0;
}

uint64_t ServerCategoryBrandLogoArtwork.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t ServerCategoryBrandLogoArtwork.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3140);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACBBAFD4();
  sub_1ACE77C78();
  v9[1] = *(void *)(v2 + 16);
  type metadata accessor for ServerArtwork();
  sub_1ACBBB3D4(&qword_1EB766D38, 255, (void (*)(uint64_t))type metadata accessor for ServerArtwork);
  sub_1ACE77728();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1ACBBAFD4()
{
  unint64_t result = qword_1EB771488;
  if (!qword_1EB771488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771488);
  }
  return result;
}

uint64_t ServerCategoryBrandLogoArtwork.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ServerCategoryBrandLogoArtwork.init(from:)(a1);
  return v2;
}

uint64_t ServerCategoryBrandLogoArtwork.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7719C8);
  uint64_t v9 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACBBAFD4();
  sub_1ACE77C48();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for ServerArtwork();
    sub_1ACBBB3D4(&qword_1EB766D40, 255, (void (*)(uint64_t))type metadata accessor for ServerArtwork);
    sub_1ACE77638();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v4);
    *(void *)(v1 + 16) = v10;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t sub_1ACBBB268@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACBBB298(a1, (uint64_t (*)(uint64_t))ServerCategoryBrandLogoArtwork.init(from:), a2);
}

uint64_t sub_1ACBBB298@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X4>, uint64_t *a3@<X8>)
{
  uint64_t v7 = swift_allocObject();
  uint64_t result = a2(a1);
  if (!v3) {
    *a3 = v7;
  }
  return result;
}

uint64_t sub_1ACBBB300(void *a1)
{
  return ServerCategoryBrandLogoArtwork.encode(to:)(a1);
}

uint64_t ServerCategory.adamID.getter()
{
  unint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1ACD1C588(v1, v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1ACBBB38C(uint64_t a1, uint64_t a2)
{
  return sub_1ACBBB3D4(&qword_1EB770B28, a2, (void (*)(uint64_t))type metadata accessor for ServerCategory);
}

uint64_t sub_1ACBBB3D4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for ServerCategory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ServerCategory);
}

uint64_t dispatch thunk of ServerCategory.__allocating_init(id:type:attributes:relationships:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ServerCategory.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t method lookup function for ServerCategoryAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ServerCategoryAttributes);
}

uint64_t dispatch thunk of ServerCategoryAttributes.__allocating_init(name:url:editorialArtwork:color:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ServerCategoryAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t method lookup function for ServerCategoryRelationships(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ServerCategoryRelationships);
}

uint64_t dispatch thunk of ServerCategoryRelationships.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t method lookup function for ServerCategoryParentRelationshipContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ServerCategoryParentRelationshipContainer);
}

uint64_t dispatch thunk of ServerCategoryParentRelationshipContainer.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for ServerCategoryChildrenRelationshipContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ServerCategoryChildrenRelationshipContainer);
}

uint64_t dispatch thunk of ServerCategoryChildrenRelationshipContainer.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for ServerCategoryBrandLogoArtwork(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ServerCategoryBrandLogoArtwork);
}

uint64_t dispatch thunk of ServerCategoryBrandLogoArtwork.__allocating_init(brandLogo:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ServerCategoryBrandLogoArtwork.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

ValueMetadata *type metadata accessor for ServerCategoryBrandLogoArtwork.CodingKeys()
{
  return &type metadata for ServerCategoryBrandLogoArtwork.CodingKeys;
}

ValueMetadata *type metadata accessor for ServerCategoryChildrenRelationshipContainer.CodingKeys()
{
  return &type metadata for ServerCategoryChildrenRelationshipContainer.CodingKeys;
}

unsigned char *_s18PodcastsFoundation30ServerCategoryBrandLogoArtworkC10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACBBB698);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerCategoryParentRelationshipContainer.CodingKeys()
{
  return &type metadata for ServerCategoryParentRelationshipContainer.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ServerCategoryRelationships.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACBBB79CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerCategoryRelationships.CodingKeys()
{
  return &type metadata for ServerCategoryRelationships.CodingKeys;
}

ValueMetadata *type metadata accessor for ServerCategoryAttributes.CodingKeys()
{
  return &type metadata for ServerCategoryAttributes.CodingKeys;
}

unsigned char *_s18PodcastsFoundation24ServerCategoryAttributesC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACBBB8B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerCategory.CodingKeys()
{
  return &type metadata for ServerCategory.CodingKeys;
}

unint64_t sub_1ACBBB8F4()
{
  unint64_t result = qword_1E99F3148;
  if (!qword_1E99F3148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3148);
  }
  return result;
}

unint64_t sub_1ACBBB94C()
{
  unint64_t result = qword_1E99F3150;
  if (!qword_1E99F3150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3150);
  }
  return result;
}

unint64_t sub_1ACBBB9A4()
{
  unint64_t result = qword_1E99F3158;
  if (!qword_1E99F3158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3158);
  }
  return result;
}

unint64_t sub_1ACBBB9FC()
{
  unint64_t result = qword_1E99F3160;
  if (!qword_1E99F3160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3160);
  }
  return result;
}

unint64_t sub_1ACBBBA54()
{
  unint64_t result = qword_1E99F3168;
  if (!qword_1E99F3168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3168);
  }
  return result;
}

unint64_t sub_1ACBBBAAC()
{
  unint64_t result = qword_1E99F3170;
  if (!qword_1E99F3170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3170);
  }
  return result;
}

unint64_t sub_1ACBBBB04()
{
  unint64_t result = qword_1EB771498;
  if (!qword_1EB771498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771498);
  }
  return result;
}

unint64_t sub_1ACBBBB5C()
{
  unint64_t result = qword_1EB771490;
  if (!qword_1EB771490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771490);
  }
  return result;
}

unint64_t sub_1ACBBBBB4()
{
  unint64_t result = qword_1E99F3178;
  if (!qword_1E99F3178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3178);
  }
  return result;
}

unint64_t sub_1ACBBBC0C()
{
  unint64_t result = qword_1E99F3180;
  if (!qword_1E99F3180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3180);
  }
  return result;
}

unint64_t sub_1ACBBBC64()
{
  unint64_t result = qword_1E99F3188;
  if (!qword_1E99F3188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3188);
  }
  return result;
}

unint64_t sub_1ACBBBCBC()
{
  unint64_t result = qword_1E99F3190;
  if (!qword_1E99F3190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3190);
  }
  return result;
}

unint64_t sub_1ACBBBD14()
{
  unint64_t result = qword_1E99F3198;
  if (!qword_1E99F3198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3198);
  }
  return result;
}

unint64_t sub_1ACBBBD6C()
{
  unint64_t result = qword_1E99F31A0;
  if (!qword_1E99F31A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F31A0);
  }
  return result;
}

unint64_t sub_1ACBBBDC4()
{
  unint64_t result = qword_1EB771450;
  if (!qword_1EB771450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771450);
  }
  return result;
}

unint64_t sub_1ACBBBE1C()
{
  unint64_t result = qword_1EB771448;
  if (!qword_1EB771448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771448);
  }
  return result;
}

unint64_t sub_1ACBBBE74()
{
  unint64_t result = qword_1EB770FE0;
  if (!qword_1EB770FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770FE0);
  }
  return result;
}

unint64_t sub_1ACBBBECC()
{
  unint64_t result = qword_1EB770FD8;
  if (!qword_1EB770FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770FD8);
  }
  return result;
}

uint64_t sub_1ACBBBF20(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1ACBBC0E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ACEC3D50 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t Array<A>.onReceive(perform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[5] = a4;
  void v5[6] = a5;
  v5[3] = a2;
  void v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1ACBBC2AC, 0, 0);
}

uint64_t sub_1ACBBC2AC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  long long v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 40);
  *(void *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = v3;
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  void *v4 = v0;
  v4[1] = sub_1ACBBC3A0;
  return MEMORY[0x1F4188080]();
}

uint64_t sub_1ACBBC3A0()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1ACBBC4D8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1ACBBC4BC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACBBC4BC()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_1ACBBC4D8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_1ACBBC540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[14] = a6;
  v7[15] = a7;
  v7[12] = a4;
  v7[13] = a5;
  v7[10] = a2;
  v7[11] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  v7[16] = swift_task_alloc();
  v7[17] = swift_task_alloc();
  uint64_t v9 = *(void *)(a6 - 8);
  v7[18] = v9;
  v7[19] = *(void *)(v9 + 64);
  v7[20] = swift_task_alloc();
  v7[21] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACBBC658, 0, 0);
}

uint64_t sub_1ACBBC658()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = swift_bridgeObjectRetain();
  if (MEMORY[0x1AD118820](v2, v1))
  {
    uint64_t v3 = 0;
    uint64_t v4 = *(void *)(v0 + 144);
    uint64_t v33 = (void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    uint64_t v31 = *(void *)(v0 + 152);
    uint64_t v32 = v4;
    do
    {
      char v8 = sub_1ACE76618();
      sub_1ACE765B8();
      if (v8)
      {
        (*(void (**)(void, unint64_t, void))(v4 + 16))(*(void *)(v0 + 168), *(void *)(v0 + 88)+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v3, *(void *)(v0 + 112));
        uint64_t v9 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t result = sub_1ACE772C8();
        if (v31 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v27 = result;
        uint64_t v28 = *(void *)(v0 + 168);
        uint64_t v29 = *(void *)(v0 + 112);
        *(void *)(v0 + 72) = v27;
        (*v33)(v28, v0 + 72, v29);
        swift_unknownObjectRelease();
        uint64_t v9 = v3 + 1;
        if (__OFADD__(v3, 1))
        {
LABEL_17:
          __break(1u);
          break;
        }
      }
      uint64_t v38 = v9;
      uint64_t v39 = v3;
      unint64_t v10 = *(void *)(v0 + 160);
      uint64_t v11 = *(void *)(v0 + 168);
      uint64_t v12 = *(void *)(v0 + 136);
      uint64_t v34 = v12;
      uint64_t v36 = *(void *)(v0 + 104);
      uint64_t v37 = *(void *)(v0 + 128);
      uint64_t v35 = *(void *)(v0 + 96);
      uint64_t v13 = sub_1ACE767F8();
      uint64_t v14 = *(void *)(v13 - 8);
      long long v40 = *(_OWORD *)(v0 + 112);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
      uint64_t v15 = *(void (**)(unint64_t, uint64_t, void))(v4 + 32);
      v15(v10, v11, v40);
      unint64_t v16 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = 0;
      *(void *)(v17 + 24) = 0;
      *(_OWORD *)(v17 + 32) = v40;
      v15(v17 + v16, v10, v40);
      uint64_t v18 = (void *)(v17 + ((v31 + 7 + v16) & 0xFFFFFFFFFFFFFFF8));
      *uint64_t v18 = v35;
      v18[1] = v36;
      sub_1ACBBE50C(v34, v37);
      int v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v37, 1, v13);
      swift_retain();
      uint64_t v20 = *(void *)(v0 + 128);
      if (v19 == 1)
      {
        sub_1ACBBE574(*(void *)(v0 + 128));
      }
      else
      {
        sub_1ACE767E8();
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v20, v13);
      }
      uint64_t v4 = v32;
      if (*(void *)(v17 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v21 = sub_1ACE766D8();
        uint64_t v23 = v22;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v21 = 0;
        uint64_t v23 = 0;
      }
      uint64_t v24 = **(void **)(v0 + 80);
      uint64_t v25 = v23 | v21;
      if (v23 | v21)
      {
        uint64_t v25 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v21;
        *(void *)(v0 + 40) = v23;
      }
      uint64_t v5 = *(void *)(v0 + 136);
      uint64_t v6 = *(void *)(v0 + 112);
      uint64_t v7 = *(void *)(v0 + 88);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v25;
      *(void *)(v0 + 64) = v24;
      swift_task_create();
      swift_release();
      sub_1ACBBE574(v5);
      uint64_t v3 = v39 + 1;
    }
    while (v38 != MEMORY[0x1AD118820](v7, v6));
  }
  swift_bridgeObjectRelease();
  uint64_t v41 = (char *)&dword_1E99F6C90 + dword_1E99F6C90;
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_1ACBBCACC;
  return ((uint64_t (*)(void, void))v41)(0, 0);
}

uint64_t sub_1ACBBCACC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1ACBBCC40(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_1ACA50B84;
  return sub_1ACBBC540(a1, a2, v8, v9, v10, v6, v7);
}

uint64_t sub_1ACBBCD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  unsigned char v8[2] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[7] = AssociatedTypeWitness;
  v8[8] = *(void *)(AssociatedTypeWitness - 8);
  v8[9] = swift_task_alloc();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  void v8[10] = v11;
  v8[11] = *(void *)(v11 - 8);
  v8[12] = swift_task_alloc();
  v8[13] = swift_task_alloc();
  sub_1ACE76FD8();
  v8[14] = swift_task_alloc();
  v8[15] = *(void *)(a7 - 8);
  v8[16] = swift_task_alloc();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  v8[17] = v12;
  v8[18] = *(void *)(v12 - 8);
  v8[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACBBCF90, 0, 0);
}

uint64_t sub_1ACBBCF90()
{
  (*(void (**)(void, void, void))(v0[15] + 16))(v0[16], v0[2], v0[5]);
  sub_1ACE768F8();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[20] = AssociatedConformanceWitness;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[21] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1ACBBD0A4;
  uint64_t v3 = v0[17];
  uint64_t v5 = v0[13];
  uint64_t v4 = v0[14];
  return MEMORY[0x1F4187C80](v4, 0, 0, v5, v3, AssociatedConformanceWitness);
}

uint64_t sub_1ACBBD0A4()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1ACBBD59C;
  }
  else {
    uint64_t v1 = sub_1ACBBD1B4;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1ACBBD1B4()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
LABEL_4:
    (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[9], v1, v2);
  if (sub_1ACE76868())
  {
    (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
    goto LABEL_4;
  }
  uint64_t v8 = (uint64_t (*)(uint64_t))(v0[3] + *(int *)v0[3]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[22] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1ACBBD3A0;
  uint64_t v7 = v0[9];
  return v8(v7);
}

uint64_t sub_1ACBBD3A0()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1ACBBD71C;
  }
  else {
    uint64_t v2 = sub_1ACBBD4B4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACBBD4B4()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[20] = AssociatedConformanceWitness;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[21] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1ACBBD0A4;
  uint64_t v3 = v0[17];
  uint64_t v5 = v0[13];
  uint64_t v4 = v0[14];
  return MEMORY[0x1F4187C80](v4, 0, 0, v5, v3, AssociatedConformanceWitness);
}

uint64_t sub_1ACBBD59C()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[11] + 32);
  v1(v0[12], v0[13], v0[10]);
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = sub_1ACE777F8();
  uint64_t v3 = v0[12];
  if (v2)
  {
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  }
  else
  {
    uint64_t v4 = v0[10];
    swift_allocError();
    v1(v5, v3, v4);
  }
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1ACBBD71C()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t AsyncSequence.onNext(perform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5[5] = a4;
  void v5[6] = v4;
  v5[3] = a2;
  void v5[4] = a3;
  v5[2] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[7] = AssociatedTypeWitness;
  void v5[8] = *(void *)(AssociatedTypeWitness - 8);
  v5[9] = swift_task_alloc();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  v5[10] = v8;
  v5[11] = *(void *)(v8 - 8);
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  sub_1ACE76FD8();
  v5[14] = swift_task_alloc();
  v5[15] = *(void *)(a3 - 8);
  v5[16] = swift_task_alloc();
  uint64_t v9 = swift_getAssociatedTypeWitness();
  v5[17] = v9;
  v5[18] = *(void *)(v9 - 8);
  v5[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACBBDA74, 0, 0);
}

uint64_t sub_1ACBBDA74()
{
  (*(void (**)(void, void, void))(v0[15] + 16))(v0[16], v0[6], v0[4]);
  sub_1ACE768F8();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[20] = AssociatedConformanceWitness;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[21] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1ACBBDB88;
  uint64_t v3 = v0[17];
  uint64_t v5 = v0[13];
  uint64_t v4 = v0[14];
  return MEMORY[0x1F4187C80](v4, 0, 0, v5, v3, AssociatedConformanceWitness);
}

uint64_t sub_1ACBBDB88()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1ACBBE084;
  }
  else {
    uint64_t v1 = sub_1ACBBDC98;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1ACBBDC98()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
LABEL_4:
    (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
    return v4(1);
  }
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[9], v1, v2);
  if (sub_1ACE76868())
  {
    (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
    goto LABEL_4;
  }
  uint64_t v8 = (uint64_t (*)(uint64_t))(v0[2] + *(int *)v0[2]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[22] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1ACBBDE88;
  uint64_t v7 = v0[9];
  return v8(v7);
}

uint64_t sub_1ACBBDE88()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1ACBBE208;
  }
  else {
    uint64_t v2 = sub_1ACBBDF9C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACBBDF9C()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[20] = AssociatedConformanceWitness;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[21] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1ACBBDB88;
  uint64_t v3 = v0[17];
  uint64_t v5 = v0[13];
  uint64_t v4 = v0[14];
  return MEMORY[0x1F4187C80](v4, 0, 0, v5, v3, AssociatedConformanceWitness);
}

uint64_t sub_1ACBBE084()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[11] + 32);
  v1(v0[12], v0[13], v0[10]);
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = sub_1ACE777F8();
  uint64_t v3 = v0[12];
  if (v2)
  {
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  }
  else
  {
    uint64_t v4 = v0[10];
    swift_allocError();
    v1(v5, v3, v4);
  }
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6(0);
}

uint64_t sub_1ACBBE208()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1(0);
}

uint64_t sub_1ACBBE2F0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACBBE3D4(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + v6;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(*(void *)(v4 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1ACA51034;
  return sub_1ACBBCD18(a1, v7, v8, v9, v11, v12, v4, v5);
}

uint64_t sub_1ACBBE50C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACBBE574(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AllPodcastStateRule.rules.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AllPodcastStateRule.init(rules:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t AllPodcastStateRule.canMove(from:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)v2 + 16);
  if (v3)
  {
    uint64_t v6 = *(void *)v2 + 32;
    swift_bridgeObjectRetain();
    char v7 = 1;
    do
    {
      sub_1ACA3E158(v6, (uint64_t)v11);
      if (v7)
      {
        uint64_t v8 = v12;
        uint64_t v9 = v13;
        __swift_project_boxed_opaque_existential_1(v11, v12);
        char v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, a2, v8, v9);
      }
      else
      {
        char v7 = 0;
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
      v6 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = 1;
  }
  return v7 & 1;
}

uint64_t AnyPodcastStateRule.canMove(from:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)v2 + 16);
  if (v3)
  {
    uint64_t v6 = *(void *)v2 + 32;
    swift_bridgeObjectRetain();
    char v7 = 0;
    do
    {
      sub_1ACA3E158(v6, (uint64_t)v11);
      if (v7)
      {
        char v7 = 1;
      }
      else
      {
        uint64_t v8 = v12;
        uint64_t v9 = v13;
        __swift_project_boxed_opaque_existential_1(v11, v12);
        char v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, a2, v8, v9);
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
      v6 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t NonePodcastStateRule.canMove(from:to:)()
{
  return 0;
}

unint64_t sub_1ACBBE7B8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769158);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84630;
  *(void *)(inited + 72) = &type metadata for AddableRules;
  *(void *)(inited + 80) = &off_1F038DFA0;
  *(void *)(inited + 88) = 0x676E69646461;
  *(void *)(inited + 96) = 0xE600000000000000;
  *(void *)(inited + 128) = &type metadata for AddingRules;
  *(void *)(inited + 136) = &off_1F038DF90;
  *(void *)(inited + 144) = 0x6465646461;
  *(void *)(inited + 152) = 0xE500000000000000;
  *(void *)(inited + 32) = 0x656C6261646461;
  *(void *)(inited + 40) = 0xE700000000000000;
  *(void *)(inited + 184) = &type metadata for AddedRules;
  *(void *)(inited + 192) = &off_1F038DF80;
  *(void *)(inited + 200) = 0x6E776F6E6B6E75;
  *(void *)(inited + 208) = 0xE700000000000000;
  *(void *)(inited + 240) = &type metadata for NonePodcastStateRule;
  *(void *)(inited + 248) = &protocol witness table for NonePodcastStateRule;
  unint64_t result = sub_1ACA3758C(inited);
  qword_1EB768468 = result;
  return result;
}

uint64_t defaultPodcastTransitionRules.getter()
{
  if (qword_1EB768478 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of PodcastStateRule.canMove(from:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(uint64_t (**)(_OWORD *, _OWORD *))(a4 + 8);
  long long v7 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v7;
  uint64_t v13 = v4;
  long long v8 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v8;
  uint64_t v11 = v5;
  return v6(v12, v10) & 1;
}

ValueMetadata *type metadata accessor for AllPodcastStateRule()
{
  return &type metadata for AllPodcastStateRule;
}

ValueMetadata *type metadata accessor for AnyPodcastStateRule()
{
  return &type metadata for AnyPodcastStateRule;
}

ValueMetadata *type metadata accessor for NonePodcastStateRule()
{
  return &type metadata for NonePodcastStateRule;
}

ValueMetadata *type metadata accessor for AddedRules()
{
  return &type metadata for AddedRules;
}

ValueMetadata *type metadata accessor for AddingRules()
{
  return &type metadata for AddingRules;
}

ValueMetadata *type metadata accessor for AddableRules()
{
  return &type metadata for AddableRules;
}

BOOL sub_1ACBBE9C4(uint64_t a1, uint64_t a2)
{
  sub_1ACA8F4F4(a1, (uint64_t)v6);
  uint64_t v4 = v7;
  sub_1ACA8F4F4(a2, (uint64_t)v10);
  if (v11) {
    return 0;
  }
  sub_1ACA8F4F4(a1, (uint64_t)v8);
  return v9 == 2 || (v4 & 0xFFFFFFFFFFFFFFFDLL) != 0;
}

BOOL sub_1ACBBEA44(uint64_t a1, uint64_t a2)
{
  sub_1ACA8F4F4(a1, (uint64_t)v7);
  uint64_t v4 = v8;
  sub_1ACA8F4F4(a2, (uint64_t)v11);
  if (v12 != 1) {
    return 0;
  }
  sub_1ACA8F4F4(a1, (uint64_t)v9);
  return v10 == 2 || v4 == 0;
}

BOOL sub_1ACBBEAC0(uint64_t a1, uint64_t a2)
{
  sub_1ACA8F4F4(a1, (uint64_t)v7);
  uint64_t v4 = v8;
  sub_1ACA8F4F4(a2, (uint64_t)v11);
  if (v12 < 3) {
    return 0;
  }
  sub_1ACA8F4F4(a1, (uint64_t)v9);
  return v10 == 2 || v4 != 2;
}

uint64_t CropCode.rawValue.getter()
{
  uint64_t result = 25186;
  switch(*v0)
  {
    case 1:
      uint64_t result = 29299;
      break;
    case 2:
      uint64_t result = 29555;
      break;
    case 3:
      uint64_t result = 28006;
      break;
    case 4:
      uint64_t result = 28262;
      break;
    case 5:
      uint64_t result = 28518;
      break;
    case 6:
      uint64_t result = 24934;
      break;
    case 7:
      uint64_t result = 30309;
      break;
    case 8:
      uint64_t result = 30053;
      break;
    case 9:
      uint64_t result = 29797;
      break;
    case 0xA:
      uint64_t result = 0x4D7370552E545053;
      break;
    case 0xB:
      uint64_t result = 0x577370552E545053;
      break;
    case 0xC:
      uint64_t result = 0x547370552E545053;
      break;
    case 0xD:
      uint64_t result = 0x3042454C532E4553;
      break;
    case 0xE:
      uint64_t result = 0x544C424C532E4253;
      break;
    case 0xF:
      uint64_t result = 0x5452424C532E4253;
      break;
    default:
      return result;
  }
  return result;
}

BOOL CropCode.targetSizeShouldRespectAspectRatioOfModel.getter()
{
  return *v0 - 16 < 0xFFFFFFFD;
}

PodcastsFoundation::CropCode_optional __swiftcall CropCode.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1ACE775B8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 16;
  if (v3 < 0x10) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1ACBBED0C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF66D0(*a1, *a2);
}

unint64_t sub_1ACBBED1C()
{
  unint64_t result = qword_1E99F31D8;
  if (!qword_1E99F31D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F31D8);
  }
  return result;
}

uint64_t sub_1ACBBED70()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACBBEDD8()
{
  CropCode.rawValue.getter();
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBBEE3C()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::CropCode_optional sub_1ACBBEEA0(Swift::String *a1)
{
  return CropCode.init(rawValue:)(*a1);
}

uint64_t sub_1ACBBEEAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CropCode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1ACBBEED4()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACBBEF34()
{
  return sub_1ACE764C8();
}

unsigned char *storeEnumTagSinglePayload for CropCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *uint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACBBF050);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CropCode()
{
  return &type metadata for CropCode;
}

uint64_t DiskAssetCache.__allocating_init(cacheDirectory:memoryBuffer:writeQueue:cacheDeleteUrgency:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  DiskAssetCache.init(cacheDirectory:memoryBuffer:writeQueue:cacheDeleteUrgency:)(a1, a2, a3, a4 | ((HIDWORD(a4) & 1) << 32));
  return v8;
}

uint64_t DiskAssetCache<>.asset(at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v77 = a3;
  uint64_t v6 = *v3;
  uint64_t v7 = *(void *)(v6 + 88);
  unint64_t v78 = sub_1ACE76FD8();
  uint64_t v73 = *(void *)(v78 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v78);
  uint64_t v70 = &v68[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v12 = &v68[-v11];
  uint64_t v13 = *(void *)(v6 + 80);
  uint64_t v76 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v10);
  uint64_t v72 = &v68[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = &v68[-v17];
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  dispatch_group_t v69 = (uint64_t (**)(uint64_t))&v68[-v20];
  uint64_t v75 = v7;
  uint64_t v74 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = &v68[-v21];
  uint64_t v23 = sub_1ACE74F28();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v80 = v23;
  uint64_t v81 = v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  id v71 = &v68[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = &v68[-v27];
  FileBasedAssetLocation.fileURL(in:)(v13, a2, (uint64_t)&v68[-v27]);
  id v29 = objc_msgSend(self, sel_defaultManager);
  uint64_t v79 = v28;
  sub_1ACE74EC8();
  uint64_t v30 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v31 = objc_msgSend(v29, sel_contentsAtPath_, v30);

  if (v31)
  {
    uint64_t v32 = sub_1ACE74F88();
    unint64_t v34 = v33;

    (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(a2 + 40))(v32, v34, v13, a2);
    uint64_t v35 = v22;
    uint64_t v54 = v76;
    if (qword_1EB772EF0 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_1ACE754C8();
    __swift_project_value_buffer(v55, (uint64_t)qword_1EB772ED0);
    unint64_t v56 = v69;
    (*(void (**)(uint64_t (**)(uint64_t), uint64_t, uint64_t))(v54 + 16))(v69, a1, v13);
    uint64_t v57 = sub_1ACE75498();
    os_log_type_t v58 = sub_1ACE76BD8();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      uint64_t v73 = v32;
      uint64_t v61 = v60;
      unint64_t v78 = v34;
      *(_DWORD *)uint64_t v59 = 136315138;
      uint64_t v83 = v60;
      uint64_t v62 = (*(uint64_t (**)(uint64_t))(a2 + 16))(v13);
      uint64_t v82 = sub_1ACA3189C(v62, v63, &v83);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v54 + 8))(v69, v13);
      _os_log_impl(&dword_1AC9D5000, v57, v58, "Cache hit for asset at %s", v59, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v61, -1, -1);
      MEMORY[0x1AD11B340](v59, -1, -1);
      sub_1ACA50850(v73, v78);
    }
    else
    {
      sub_1ACA50850(v32, v34);

      (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v54 + 8))(v56, v13);
    }
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v79, v80);
    uint64_t v66 = v74;
    uint64_t v65 = v75;
    uint64_t v67 = v77;
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v74 + 32))(v77, v35, v75);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v66 + 56))(v67, 0, 1, v65);
  }
  else
  {
    uint64_t v36 = v18;
    uint64_t v37 = v70;
    dispatch_group_t v69 = (uint64_t (**)(uint64_t))a2;
    InMemoryAssetCache.asset(at:)(a1);
    if (qword_1EB772EF0 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_1ACE754C8();
    __swift_project_value_buffer(v38, (uint64_t)qword_1EB772ED0);
    uint64_t v39 = v73;
    long long v40 = v37;
    (*(void (**)(unsigned char *, unsigned char *, unint64_t))(v73 + 16))(v37, v12, v78);
    uint64_t v41 = v76;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v76 + 16))(v36, a1, v13);
    uint64_t v42 = sub_1ACE75498();
    os_log_type_t v43 = sub_1ACE76BD8();
    int v44 = v43;
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v72 = v12;
      uint64_t v46 = v45;
      uint64_t v47 = swift_slowAlloc();
      uint64_t v83 = v47;
      *(_DWORD *)uint64_t v46 = 136315394;
      int v48 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v74 + 48))(v40, 1, v75);
      BOOL v49 = v48 == 1;
      if (v48 == 1) {
        uint64_t v50 = 1936943469;
      }
      else {
        uint64_t v50 = 7629160;
      }
      LODWORD(v75) = v44;
      if (v49) {
        unint64_t v51 = 0xE400000000000000;
      }
      else {
        unint64_t v51 = 0xE300000000000000;
      }
      uint64_t v82 = sub_1ACA3189C(v50, v51, &v83);
      uint64_t v39 = v73;
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, unint64_t))(v39 + 8))(v40, v78);
      *(_WORD *)(v46 + 12) = 2080;
      uint64_t v52 = v69[2](v13);
      uint64_t v82 = sub_1ACA3189C(v52, v53, &v83);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v36, v13);
      _os_log_impl(&dword_1AC9D5000, v42, (os_log_type_t)v75, "Cache %s for asset at %s", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v47, -1, -1);
      unint64_t v12 = v72;
      MEMORY[0x1AD11B340](v46, -1, -1);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v36, v13);
      (*(void (**)(unsigned char *, unint64_t))(v39 + 8))(v40, v78);
    }
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v79, v80);
    return (*(uint64_t (**)(uint64_t, unsigned char *, unint64_t))(v39 + 32))(v77, v12, v78);
  }
}

uint64_t DiskAssetCache<>.store(asset:at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  uint64_t v46 = a3;
  uint64_t v50 = *v4;
  uint64_t v8 = v50;
  uint64_t v53 = v50;
  uint64_t v56 = sub_1ACE75DC8();
  uint64_t v59 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v55 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE75E48();
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v58 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v54 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v8 + 80);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v49 = *(void *)(v14 + 64);
  uint64_t v15 = MEMORY[0x1F4188790](v11);
  uint64_t v61 = (char *)&v42 - v16;
  uint64_t v47 = *(void *)(v8 + 88);
  uint64_t v17 = *(void *)(v47 - 8);
  uint64_t v48 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v42 - v18;
  int v44 = (char *)&v42 - v18;
  uint64_t v45 = sub_1ACE74F28();
  uint64_t v43 = *(void *)(v45 - 8);
  uint64_t v20 = *(void *)(v43 + 64);
  uint64_t v21 = MEMORY[0x1F4188790](v45);
  uint64_t v60 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v42 - v22;
  uint64_t v52 = (char *)&v42 - v22;
  FileBasedAssetLocation.fileURL(in:)(v13, a3, (uint64_t)&v42 - v22);
  InMemoryAssetCache.store(asset:at:)(a1, a2);
  uint64_t v51 = *(uint64_t *)((char *)v4 + qword_1EB772C00);
  uint64_t v24 = v19;
  uint64_t v25 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v24, a1, v47);
  uint64_t v42 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v61, a2, v13);
  uint64_t v26 = v43;
  uint64_t v27 = v45;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v60, v23, v45);
  unint64_t v28 = (*(unsigned __int8 *)(v17 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v29 = (v48 + *(unsigned __int8 *)(v14 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v30 = (v49 + *(unsigned __int8 *)(v26 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v50;
  *(void *)(v31 + 16) = v13;
  *(void *)(v31 + 24) = v25;
  *(void *)(v31 + 32) = v46;
  *(_OWORD *)(v31 + 40) = *(_OWORD *)(v53 + 96);
  *(void *)(v31 + 56) = *(void *)(v32 + 112);
  *(void *)(v31 + 64) = v4;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v31 + v28, v44, v25);
  (*(void (**)(unint64_t, char *, uint64_t))(v42 + 32))(v31 + v29, v61, v13);
  unint64_t v33 = v31 + v30;
  uint64_t v34 = v26;
  uint64_t v35 = *(void (**)(unint64_t, char *, uint64_t))(v26 + 32);
  uint64_t v36 = v27;
  v35(v33, v60, v27);
  aBlock[4] = sub_1ACBC1B78;
  aBlock[5] = v31;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_34;
  uint64_t v37 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v38 = v54;
  sub_1ACE75E08();
  uint64_t v62 = MEMORY[0x1E4FBC860];
  sub_1ACBC1CA0((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA55D7C();
  long long v40 = v55;
  uint64_t v39 = v56;
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v38, v40, v37);
  _Block_release(v37);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v40, v39);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v38, v58);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v52, v36);
  return swift_release();
}

id DiskAssetCache<>.containsAsset(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  FileBasedAssetLocation.fileURL(in:)(*(void *)(v4 + 80), a2, (uint64_t)v8);
  id v9 = objc_msgSend(self, sel_defaultManager);
  sub_1ACE74EC8();
  uint64_t v10 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_fileExistsAtPath_, v10);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

uint64_t DiskAssetCache<>.invalidate(at:)(uint64_t a1, uint64_t a2)
{
  v53[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = *(void *)(*(void *)v2 + 80);
  uint64_t v49 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v48 = (char *)&v43 - v6;
  uint64_t v7 = sub_1ACE74F28();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v50 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v43 - v11;
  uint64_t v46 = a2;
  uint64_t v47 = a1;
  FileBasedAssetLocation.fileURL(in:)(v5, a2, (uint64_t)&v43 - v11);
  uint64_t v13 = self;
  id v14 = objc_msgSend(v13, sel_defaultManager);
  sub_1ACE74EC8();
  uint64_t v15 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  unsigned int v16 = objc_msgSend(v14, sel_fileExistsAtPath_, v15);

  if (!v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  id v17 = objc_msgSend(v13, sel_defaultManager);
  uint64_t v18 = (void *)sub_1ACE74E18();
  v53[0] = 0;
  unsigned int v19 = objc_msgSend(v17, sel_removeItemAtURL_error_, v18, v53);

  if (v19)
  {
    uint64_t v20 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    id v21 = v53[0];
    return v20(v12, v7);
  }
  else
  {
    id v23 = v53[0];
    uint64_t v24 = (void *)sub_1ACE74D78();

    swift_willThrow();
    if (qword_1EB772EF0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1ACE754C8();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EB772ED0);
    uint64_t v27 = v48;
    uint64_t v26 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v47, v5);
    unint64_t v28 = v50;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v50, v12, v7);
    unint64_t v29 = sub_1ACE75498();
    os_log_type_t v30 = sub_1ACE76BE8();
    uint64_t v51 = v29;
    LODWORD(v47) = v30;
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v45 = v24;
      uint64_t v32 = v31;
      uint64_t v43 = (void *)swift_slowAlloc();
      v53[0] = v43;
      *(_DWORD *)uint64_t v32 = 136315394;
      uint64_t v44 = v7;
      uint64_t v33 = (*(uint64_t (**)(uint64_t))(v46 + 16))(v5);
      uint64_t v52 = sub_1ACA3189C(v33, v34, (uint64_t *)v53);
      uint64_t v7 = v44;
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v5);
      *(_WORD *)(v32 + 12) = 2080;
      sub_1ACBC1CA0((unint64_t *)&qword_1EB771B10, MEMORY[0x1E4F276F0]);
      uint64_t v35 = v50;
      uint64_t v36 = sub_1ACE777C8();
      uint64_t v52 = sub_1ACA3189C(v36, v37, (uint64_t *)v53);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      uint64_t v38 = *(void (**)(char *, uint64_t))(v8 + 8);
      v38(v35, v7);
      uint64_t v39 = v51;
      _os_log_impl(&dword_1AC9D5000, v51, (os_log_type_t)v47, "Error deleting file for key %s, url: %s", (uint8_t *)v32, 0x16u);
      long long v40 = v43;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v40, -1, -1);
      uint64_t v41 = v32;
      uint64_t v24 = v45;
      MEMORY[0x1AD11B340](v41, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v5);
      uint64_t v38 = *(void (**)(char *, uint64_t))(v8 + 8);
      v38(v28, v7);
    }
    sub_1ACBC1CE8();
    swift_allocError();
    *uint64_t v42 = 1;
    swift_willThrow();

    return ((uint64_t (*)(char *, uint64_t))v38)(v12, v7);
  }
}

BOOL static DiskAssetCacheError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DiskAssetCacheError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t DiskAssetCacheError.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t DiskAssetCache.cacheDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_1EB7859C8;
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

unint64_t DiskAssetCache.cacheDeleteUrgency.getter()
{
  return *(unsigned int *)(v0 + qword_1EB7859D0) | ((unint64_t)*(unsigned __int8 *)(v0 + qword_1EB7859D0 + 4) << 32);
}

uint64_t DiskAssetCache.description.getter()
{
  sub_1ACE77268();
  sub_1ACE762C8();
  sub_1ACE77D48();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  sub_1ACE77D48();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  if (*(unsigned char *)(v0 + qword_1EB7859D0 + 4)) {
    goto LABEL_2;
  }
  int v2 = *(_DWORD *)(v0 + qword_1EB7859D0);
  if (v2 > 2047)
  {
    if (v2 == 2048 || v2 == 0x8000) {
      goto LABEL_2;
    }
  }
  else if (v2 == 512 || v2 == 1024)
  {
LABEL_2:
    sub_1ACE77458();
    sub_1ACE762C8();
    return 0;
  }
  uint64_t result = sub_1ACE77498();
  __break(1u);
  return result;
}

uint64_t DiskAssetCache.init(cacheDirectory:memoryBuffer:writeQueue:cacheDeleteUrgency:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v4 + qword_1EB7859C8;
  uint64_t v10 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a1, v10);
  uint64_t v11 = v4 + qword_1EB7859D0;
  *(_DWORD *)uint64_t v11 = a4;
  *(unsigned char *)(v11 + 4) = BYTE4(a4) & 1;
  *(void *)(v4 + qword_1EB772C00) = a3;
  *(void *)(v4 + qword_1EB772BF8) = a2;
  return v4;
}

uint64_t DiskAssetCache.deinit()
{
  uint64_t v1 = v0 + qword_1EB7859C8;
  uint64_t v2 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return v0;
}

uint64_t DiskAssetCache.__deallocating_deinit()
{
  DiskAssetCache.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACBC0FDC()
{
  return DiskAssetCache.description.getter();
}

void sub_1ACBC1000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t sub_1ACBC108C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v24 = a4;
  uint64_t v25 = a2;
  uint64_t v22 = a1;
  uint64_t v6 = *(void *)(*(void *)v4 + 80);
  v21[1] = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  id v21[2] = (char *)v21 - v7;
  uint64_t v8 = sub_1ACE74F28();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  id v23 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v21 - v12;
  sub_1ACE74E58();
  id v14 = objc_msgSend(self, sel_defaultManager);
  sub_1ACE74EC8();
  uint64_t v15 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  unsigned __int8 v16 = objc_msgSend(v14, sel_fileExistsAtPath_, v15);

  if ((v16 & 1) == 0) {
    NSFileManager.createDirectory(url:createIntermediates:)((uint64_t)v13, 1);
  }
  v21[0] = *(void *)(v9 + 8);
  ((void (*)(char *, uint64_t))v21[0])(v13, v8);

  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 32))(v22, v6);
  unint64_t v19 = v18;
  sub_1ACE74F98();
  if (*(unsigned char *)(v5 + qword_1EB7859D0 + 4) != 1) {
    sub_1ACCA0F8C(*(_DWORD *)(v5 + qword_1EB7859D0));
  }
  return sub_1ACA50850(v17, v19);
}

uint64_t sub_1ACBC1818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return DiskAssetCache<>.asset(at:)(a1, *(void *)(a2 - 8), a3);
}

uint64_t sub_1ACBC1840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return DiskAssetCache<>.store(asset:at:)(a1, a2, *(void *)(a4 - 8));
}

unint64_t sub_1ACBC1868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (unint64_t)DiskAssetCache<>.containsAsset(for:)(a1, *(void *)(a3 - 8)) & 1;
}

uint64_t sub_1ACBC1894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return DiskAssetCache<>.invalidate(at:)(a1, *(void *)(a3 - 8));
}

uint64_t sub_1ACBC18BC(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

void sub_1ACBC18F4(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_1ACE76FF8();
  *a1 = v7;
  uint64_t v8 = *a2;
  if (*a2)
  {
    *uint64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_1ACBC19AC()
{
  uint64_t v10 = *(void *)(v0 + 16);
  uint64_t v11 = *(void *)(v0 + 24);
  uint64_t v1 = *(void *)(v11 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v10 - 8);
  unint64_t v4 = (v2 + *(void *)(v1 + 64) + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v2, v11);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v10);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, v6);
  return swift_deallocObject();
}

void sub_1ACBC1B78()
{
  uint64_t v1 = v0[4];
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v0[3] - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[3] - 8) + 80);
  uint64_t v3 = *(void *)(v0[2] - 8);
  unint64_t v4 = (v2 + *(void *)(*(void *)(v0[3] - 8) + 64) + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_1ACE74F28() - 8);
  uint64_t v7 = v0[8];
  uint64_t v8 = (uint64_t)v0 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  sub_1ACBC1000(v7, (uint64_t)v0 + v2, (uint64_t)v0 + v4, v8, v1);
}

uint64_t sub_1ACBC1CA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACBC1CE8()
{
  unint64_t result = qword_1E99F31E0;
  if (!qword_1E99F31E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F31E0);
  }
  return result;
}

unint64_t sub_1ACBC1D40()
{
  unint64_t result = qword_1E99F31E8[0];
  if (!qword_1E99F31E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E99F31E8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DiskAssetCacheError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACBC1E60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiskAssetCacheError()
{
  return &type metadata for DiskAssetCacheError;
}

uint64_t sub_1ACBC1E98()
{
  uint64_t result = sub_1ACE74F28();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for DiskAssetCache()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for DiskAssetCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DiskAssetCache);
}

uint64_t dispatch thunk of DiskAssetCache.__allocating_init(cacheDirectory:memoryBuffer:writeQueue:cacheDeleteUrgency:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v4 + 152))(a1, a2, a3, a4 | ((HIDWORD(a4) & 1) << 32));
}

uint64_t Publishers.PFCombineLatest5.b.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 100));
}

uint64_t Publishers.PFCombineLatest5.c.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 32) - 8) + 16))(a2, v2 + *(int *)(a1 + 104));
}

uint64_t Publishers.PFCombineLatest5.d.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 40) - 8) + 16))(a2, v2 + *(int *)(a1 + 108));
}

uint64_t Publishers.PFCombineLatest5.e.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 48) - 8) + 16))(a2, v2 + *(int *)(a1 + 112));
}

uint64_t Publishers.PFCombineLatest5.init(_:_:_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a9, a1, a6);
  uint64_t v17 = (int *)type metadata accessor for Publishers.PFCombineLatest5();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(a9 + v17[25], a2, a7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(a9 + v17[26], a3, a8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(a9 + v17[27], a4, a10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(a9 + v17[28], a5, a11);
}

uint64_t type metadata accessor for Publishers.PFCombineLatest5()
{
  return swift_getGenericMetadata();
}

uint64_t Publishers.PFCombineLatest5.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v86 = a4;
  uint64_t v85 = a3;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v87 = a1;
  uint64_t v88 = v5;
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t AssociatedTypeWitness = v6;
  uint64_t v102 = v5;
  uint64_t v90 = v6;
  uint64_t v103 = v7;
  uint64_t v104 = v8;
  uint64_t v98 = v8;
  uint64_t v99 = v7;
  uint64_t v105 = v9;
  uint64_t v106 = v10;
  uint64_t v96 = v10;
  uint64_t v97 = v9;
  uint64_t v100 = sub_1ACE75528();
  uint64_t v11 = *(void *)(a2 + 40);
  uint64_t v91 = *(void *)(a2 + 48);
  uint64_t v93 = (char *)MEMORY[0x1E4F1A808];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = *(void *)(a2 + 80);
  uint64_t v106 = *(void *)(a2 + 88);
  uint64_t v95 = v12;
  uint64_t v76 = v106;
  uint64_t v94 = sub_1ACE75528();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = v88;
  uint64_t v102 = swift_getAssociatedTypeWitness();
  uint64_t v14 = v99;
  uint64_t v103 = swift_getAssociatedTypeWitness();
  uint64_t v89 = v11;
  uint64_t v104 = swift_getAssociatedTypeWitness();
  uint64_t v105 = swift_getAssociatedTypeWitness();
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v15 = v94;
  uint64_t v80 = swift_getWitnessTable();
  uint64_t v82 = sub_1ACE75678();
  uint64_t v83 = *(void *)(v82 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v82);
  unint64_t v78 = (char *)&v68 - v17;
  uint64_t v75 = *(void *)(v91 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v74 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = *(void *)(v11 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v73 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = *(void *)(v15 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v93 = (char *)&v68 - v23;
  uint64_t v24 = *(void *)(v14 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v22);
  uint64_t v27 = (char *)&v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v13;
  uint64_t v29 = *(void *)(v13 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v25);
  uint64_t v32 = (char *)&v68 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x1F4188790](v30);
  uint64_t v35 = (char *)&v68 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = *(void *)(v100 - 8);
  uint64_t v36 = MEMORY[0x1F4188790](v33);
  uint64_t v70 = (char *)&v68 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v39 = (char *)&v68 - v38;
  uint64_t v41 = v79;
  uint64_t v43 = v42;
  (*(void (**)(char *, uint64_t))(v40 + 16))(v35, v79);
  uint64_t v69 = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v32, v41 + *(int *)(a2 + 100), v28);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v27, v41 + *(int *)(a2 + 104), v99);
  uint64_t v72 = v39;
  uint64_t v44 = v43;
  sub_1ACE75538();
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v70, v39, v100);
  uint64_t v45 = v69;
  uint64_t v46 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v73, v41 + *(int *)(v69 + 108), v89);
  uint64_t v47 = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v74, v41 + *(int *)(v45 + 112), v91);
  uint64_t v48 = v76;
  uint64_t v49 = v46;
  uint64_t v50 = v47;
  uint64_t v51 = v95;
  sub_1ACE75538();
  uint64_t v52 = (void *)swift_allocObject();
  v52[2] = v44;
  v52[3] = v28;
  uint64_t v53 = v98;
  uint64_t v54 = v99;
  v52[4] = v99;
  v52[5] = v49;
  uint64_t v55 = v85;
  v52[6] = v50;
  v52[7] = v55;
  uint64_t v56 = v96;
  uint64_t v57 = v97;
  v52[8] = v53;
  v52[9] = v57;
  v52[10] = v56;
  v52[11] = v51;
  uint64_t v58 = v86;
  v52[12] = v48;
  v52[13] = v58;
  uint64_t v59 = (void *)swift_allocObject();
  uint64_t v60 = v88;
  v59[2] = v90;
  v59[3] = v60;
  uint64_t v61 = v89;
  v59[4] = v54;
  v59[5] = v61;
  v59[6] = v50;
  v59[7] = v55;
  v59[8] = v53;
  v59[9] = v57;
  uint64_t v62 = v95;
  v59[10] = v56;
  v59[11] = v62;
  v59[12] = v48;
  v59[13] = v58;
  v59[14] = sub_1ACBC30EC;
  v59[15] = v52;
  unint64_t v63 = v78;
  uint64_t v65 = v93;
  uint64_t v64 = v94;
  sub_1ACE75B58();
  swift_release();
  uint64_t v66 = v82;
  sub_1ACE75668();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v63, v66);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v65, v64);
  return (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v72, v100);
}

uint64_t sub_1ACBC2AFC(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, void (*a6)(char *, char *, uint64_t), char *a7, char *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v65 = a8;
  uint64_t v66 = a7;
  uint64_t v67 = a1;
  uint64_t v81 = a6;
  uint64_t v75 = a21;
  uint64_t v73 = a4;
  uint64_t v74 = a15;
  uint64_t v76 = a10;
  uint64_t v77 = a5;
  uint64_t v71 = a3;
  uint64_t v72 = a9;
  uint64_t v70 = a20;
  uint64_t v68 = a2;
  uint64_t v69 = a14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v25 = TupleTypeMetadata3 - 8;
  uint64_t v26 = MEMORY[0x1F4188790](TupleTypeMetadata3);
  uint64_t v85 = (char *)&v58 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v84 = (char *)&v58 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v79 = (char *)&v58 - v31;
  MEMORY[0x1F4188790](v30);
  uint64_t v80 = (char *)&v58 + *(int *)(v25 + 56) - v32;
  uint64_t v33 = v80;
  unint64_t v78 = (char *)&v58 + *(int *)(v25 + 72) - v32;
  uint64_t v34 = v78;
  uint64_t v61 = AssociatedTypeWitness;
  uint64_t v86 = *(void **)(AssociatedTypeWitness - 8);
  uint64_t v82 = (void (*)(void))v86[2];
  uint64_t v83 = (char *)&v58 - v32;
  ((void (*)(char *, void, uint64_t))v82)((char *)&v58 - v32, v81, AssociatedTypeWitness);
  uint64_t v63 = *(void *)(v22 - 8);
  uint64_t v81 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  uint64_t v58 = v22;
  v81(v33, v66, v22);
  uint64_t v64 = *(void *)(v23 - 8);
  uint64_t v35 = *(void (**)(char *, char *))(v64 + 16);
  uint64_t v59 = v23;
  v35(v34, v65);
  uint64_t v60 = (void (*)(char *, char *, uint64_t))v35;
  uint64_t v66 = &v79[*(int *)(v25 + 56)];
  uint64_t v36 = v66;
  uint64_t v65 = &v79[*(int *)(v25 + 72)];
  uint64_t v37 = v65;
  uint64_t v38 = v61;
  v82();
  v81(v36, v80, v22);
  uint64_t v39 = v78;
  ((void (*)(char *, char *, uint64_t))v35)(v37, v78, v23);
  uint64_t v62 = (void (*)(void))v86[4];
  ((void (*)(uint64_t, char *, uint64_t))v62)(v67, v79, v38);
  uint64_t v40 = &v84[*(int *)(v25 + 56)];
  uint64_t v79 = &v84[*(int *)(v25 + 72)];
  uint64_t v41 = v79;
  v82();
  uint64_t v42 = v80;
  uint64_t v43 = v58;
  v81(v40, v80, v58);
  uint64_t v44 = v39;
  uint64_t v45 = v59;
  v60(v41, v44, v59);
  uint64_t v46 = v63;
  uint64_t v47 = *(void (**)(uint64_t, char *, uint64_t))(v63 + 32);
  v47(v68, v40, v43);
  uint64_t v48 = &v85[*(int *)(v25 + 56)];
  uint64_t v49 = &v85[*(int *)(v25 + 72)];
  v62();
  v47((uint64_t)v48, v42, v43);
  uint64_t v50 = v64;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
  v51(v49, v78, v45);
  v51(v71, v49, v45);
  uint64_t v52 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v73, v72, v52);
  uint64_t v53 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v77, v76, v53);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v46 + 8);
  v54(v48, v43);
  uint64_t v55 = (void (*)(char *, uint64_t))v86[1];
  v55(v85, v38);
  uint64_t v56 = *(void (**)(char *, uint64_t))(v50 + 8);
  v56(v79, v45);
  v55(v84, v38);
  v56(v65, v45);
  return ((uint64_t (*)(char *, uint64_t))v54)(v66, v43);
}

uint64_t sub_1ACBC30DC()
{
  return swift_deallocObject();
}

uint64_t sub_1ACBC30EC(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, void (*a6)(char *, char *, uint64_t), char *a7, char *a8, uint64_t a9, uint64_t a10)
{
  return sub_1ACBC2AFC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, v10[2], v10[3], v10[4], v10[5], v10[6], v10[7], v10[8], v10[9], v10[10],
           v10[11],
           v10[12]);
}

uint64_t sub_1ACBC3134@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v12 = a1 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v6 = a1 + *(int *)(TupleTypeMetadata3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v7 = swift_getTupleTypeMetadata3();
  uint64_t v8 = a1 + *(int *)(v7 + 48);
  uint64_t v9 = a1 + *(int *)(v7 + 64);
  uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return a2(a3, a3 + TupleTypeMetadata[12], a3 + TupleTypeMetadata[16], a3 + TupleTypeMetadata[20], a3 + TupleTypeMetadata[24], a1, v12, v6, v8, v9);
}

uint64_t sub_1ACBC3300()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACBC3338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACBC3134(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 112), a2);
}

uint64_t sub_1ACBC3384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.PFCombineLatest5.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t Publishers.PFCombineLatest6.b.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 116));
}

uint64_t Publishers.PFCombineLatest6.c.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 32) - 8) + 16))(a2, v2 + *(int *)(a1 + 120));
}

uint64_t Publishers.PFCombineLatest6.d.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 40) - 8) + 16))(a2, v2 + *(int *)(a1 + 124));
}

uint64_t Publishers.PFCombineLatest6.e.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 48) - 8) + 16))(a2, v2 + *(int *)(a1 + 128));
}

uint64_t Publishers.PFCombineLatest6.f.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 56) - 8) + 16))(a2, v2 + *(int *)(a1 + 132));
}

uint64_t Publishers.PFCombineLatest6.init(_:_:_:_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(a9, a1, a7);
  uint64_t v16 = (int *)type metadata accessor for Publishers.PFCombineLatest6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(a9 + v16[29], a2, a8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(a9 + v16[30], a3, a10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(a9 + v16[31], a4, a11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a12 - 8) + 32))(a9 + v16[32], a5, a12);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32))(a9 + v16[33], a6, a13);
}

uint64_t type metadata accessor for Publishers.PFCombineLatest6()
{
  return swift_getGenericMetadata();
}

uint64_t Publishers.PFCombineLatest6.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v90 = a4;
  uint64_t v89 = a3;
  uint64_t v91 = a1;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 72);
  uint64_t v104 = *(void *)(a2 + 80);
  uint64_t v105 = v7;
  uint64_t AssociatedTypeWitness = v5;
  uint64_t v108 = v6;
  uint64_t v93 = v5;
  uint64_t v106 = v6;
  uint64_t v109 = v7;
  uint64_t v110 = v8;
  uint64_t v98 = v9;
  uint64_t v99 = v8;
  uint64_t v111 = v9;
  uint64_t v112 = v104;
  uint64_t v10 = sub_1ACE75528();
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v100 = *(void *)(a2 + 40);
  uint64_t v101 = v11;
  uint64_t v102 = *(void *)(a2 + 56);
  uint64_t v103 = v10;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = *(void *)(a2 + 96);
  uint64_t v13 = *(void *)(a2 + 104);
  uint64_t v82 = *(void *)(a2 + 88);
  uint64_t v113 = v12;
  uint64_t v114 = v13;
  uint64_t v96 = v13;
  uint64_t v97 = v12;
  uint64_t v95 = sub_1ACE75548();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v108 = swift_getAssociatedTypeWitness();
  uint64_t v14 = v105;
  uint64_t v109 = swift_getAssociatedTypeWitness();
  uint64_t v15 = v100;
  uint64_t v110 = swift_getAssociatedTypeWitness();
  uint64_t v111 = swift_getAssociatedTypeWitness();
  uint64_t v112 = swift_getAssociatedTypeWitness();
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v16 = v95;
  uint64_t v84 = swift_getWitnessTable();
  uint64_t v86 = sub_1ACE75678();
  uint64_t v87 = *(void *)(v86 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v86);
  uint64_t v81 = (char *)v71 - v18;
  uint64_t v79 = *(void *)(v102 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  unint64_t v78 = (char *)v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = *(void *)(v11 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v76 = (char *)v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = *(void *)(v15 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v73 = (char *)v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = *(void *)(v16 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v94 = (char *)v71 - v26;
  uint64_t v27 = *(void *)(v14 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v25);
  uint64_t v72 = (char *)v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(void *)(v106 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v28);
  uint64_t v33 = (char *)v71 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v93;
  uint64_t v35 = MEMORY[0x1F4188790](v31);
  uint64_t v37 = (char *)v71 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = *(void *)(v103 - 8);
  uint64_t v38 = MEMORY[0x1F4188790](v35);
  uint64_t v40 = (char *)v71 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71[1] = v40;
  MEMORY[0x1F4188790](v38);
  uint64_t v42 = (char *)v71 - v41;
  uint64_t v74 = (char *)v71 - v41;
  uint64_t v44 = v83;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v37, v83, v34);
  uint64_t v45 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v33, v44 + *(int *)(a2 + 116), v106);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v72, v44 + *(int *)(a2 + 120), v105);
  sub_1ACE75538();
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v40, v42, v103);
  uint64_t v46 = v100;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v73, v44 + *(int *)(a2 + 124), v100);
  uint64_t v47 = v101;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, v45 + *(int *)(a2 + 128), v101);
  uint64_t v48 = v102;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v78, v45 + *(int *)(a2 + 132), v102);
  uint64_t v49 = v96;
  uint64_t v50 = v82;
  uint64_t v51 = v46;
  uint64_t v52 = v47;
  sub_1ACE75558();
  uint64_t v53 = (void *)swift_allocObject();
  uint64_t v54 = v93;
  uint64_t v55 = v106;
  id v53[2] = v93;
  v53[3] = v55;
  uint64_t v56 = v104;
  _OWORD v53[4] = v105;
  v53[5] = v51;
  v53[6] = v52;
  v53[7] = v48;
  uint64_t v57 = v89;
  uint64_t v59 = v98;
  uint64_t v58 = v99;
  v53[8] = v89;
  v53[9] = v58;
  v53[10] = v59;
  v53[11] = v56;
  uint64_t v60 = v97;
  v53[12] = v50;
  v53[13] = v60;
  uint64_t v61 = v90;
  v53[14] = v49;
  v53[15] = v61;
  uint64_t v62 = (void *)swift_allocObject();
  uint64_t v63 = v106;
  v62[2] = v54;
  v62[3] = v63;
  uint64_t v64 = v100;
  v62[4] = v105;
  v62[5] = v64;
  uint64_t v65 = v102;
  v62[6] = v101;
  v62[7] = v65;
  v62[8] = v57;
  v62[9] = v58;
  v62[10] = v59;
  v62[11] = v56;
  v62[12] = v50;
  v62[13] = v60;
  uint64_t v66 = v95;
  v62[14] = v96;
  v62[15] = v61;
  v62[16] = sub_1ACBC4750;
  v62[17] = v53;
  uint64_t v67 = v81;
  uint64_t v68 = v94;
  sub_1ACE75B58();
  swift_release();
  uint64_t v69 = v86;
  sub_1ACE75668();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v67, v69);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v68, v66);
  return (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v74, v103);
}

uint64_t sub_1ACBC4098(char *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, char *a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v77 = a8;
  uint64_t v96 = a7;
  uint64_t v91 = a6;
  uint64_t v89 = a5;
  uint64_t v85 = a4;
  uint64_t v81 = a3;
  uint64_t v78 = a2;
  uint64_t v76 = a1;
  uint64_t v90 = a12;
  uint64_t v88 = a25;
  uint64_t v86 = a11;
  uint64_t v87 = a18;
  uint64_t v83 = a17;
  uint64_t v84 = a24;
  uint64_t v82 = a10;
  uint64_t v75 = a9;
  uint64_t v80 = a23;
  uint64_t v79 = a16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v27 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v29 = TupleTypeMetadata3 - 8;
  uint64_t v30 = MEMORY[0x1F4188790](TupleTypeMetadata3);
  uint64_t v97 = (char *)&v66 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v98 = (char *)&v66 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v36 = (char *)&v66 - v35;
  MEMORY[0x1F4188790](v34);
  uint64_t v92 = (char *)&v66 + *(int *)(v29 + 56) - v37;
  uint64_t v38 = v92;
  uint64_t v93 = (char *)&v66 - v37;
  uint64_t v39 = (char *)&v66 + *(int *)(v29 + 72) - v37;
  uint64_t v99 = *(void **)(AssociatedTypeWitness - 8);
  uint64_t v100 = AssociatedTypeWitness;
  uint64_t v40 = v99 + 2;
  uint64_t v95 = (void (*)(void))v99[2];
  ((void (*)(char *, void *, uint64_t))v95)((char *)&v66 - v37, v96, AssociatedTypeWitness);
  uint64_t v69 = v40;
  uint64_t v96 = *(void **)(v26 - 8);
  uint64_t v94 = (void (*)(char *, char *, uint64_t))v96[2];
  uint64_t v70 = v26;
  v94(v38, v77, v26);
  uint64_t v68 = v27;
  uint64_t v74 = *(void *)(v27 - 8);
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  uint64_t v71 = v39;
  v41(v39, v75, v27);
  uint64_t v72 = v41;
  uint64_t v42 = *(int *)(v29 + 56);
  uint64_t v67 = v36;
  uint64_t v43 = &v36[v42];
  uint64_t v77 = &v36[v42];
  uint64_t v75 = &v36[*(int *)(v29 + 72)];
  uint64_t v44 = v75;
  ((void (*)(char *, char *, uint64_t))v95)(v36, v93, v100);
  uint64_t v45 = v43;
  uint64_t v46 = v92;
  v94(v45, v92, v26);
  uint64_t v47 = v68;
  v41(v44, v39, v68);
  uint64_t v73 = (void (*)(void))v99[4];
  ((void (*)(char *, char *, uint64_t))v73)(v76, v67, v100);
  uint64_t v67 = &v98[*(int *)(v29 + 56)];
  uint64_t v48 = v67;
  uint64_t v76 = &v98[*(int *)(v29 + 72)];
  uint64_t v49 = v76;
  v95();
  uint64_t v50 = v46;
  uint64_t v51 = v70;
  v94(v48, v50, v70);
  uint64_t v52 = v71;
  v72(v49, v71, v47);
  uint64_t v53 = (void (*)(uint64_t, char *, uint64_t))v96[4];
  v53(v78, v67, v51);
  uint64_t v54 = &v97[*(int *)(v29 + 56)];
  uint64_t v55 = &v97[*(int *)(v29 + 72)];
  v73();
  v53((uint64_t)v54, v92, v51);
  uint64_t v56 = v74;
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
  v57(v55, v52, v47);
  v57(v81, v55, v47);
  uint64_t v58 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v85, v82, v58);
  uint64_t v59 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v89, v86, v59);
  uint64_t v60 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 16))(v91, v90, v60);
  uint64_t v61 = (void (*)(char *, uint64_t))v96[1];
  v61(v54, v51);
  uint64_t v62 = v100;
  uint64_t v63 = (void (*)(char *, uint64_t))v99[1];
  v63(v97, v100);
  uint64_t v64 = *(void (**)(char *, uint64_t))(v56 + 8);
  v64(v76, v47);
  v63(v98, v62);
  v64(v75, v47);
  return ((uint64_t (*)(char *, uint64_t))v61)(v77, v51);
}

uint64_t sub_1ACBC4740()
{
  return swift_deallocObject();
}

uint64_t sub_1ACBC4750(char *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, char *a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1ACBC4098(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, v12[2], v12[3], v12[4], v12[5], v12[6], v12[7], v12[8],
           v12[9],
           v12[10],
           v12[11],
           v12[12],
           v12[13],
           v12[14]);
}

uint64_t sub_1ACBC47A0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v13 = a1 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v12 = a1 + *(int *)(TupleTypeMetadata3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v7 = a1 + TupleTypeMetadata[12];
  uint64_t v8 = a1 + TupleTypeMetadata[16];
  uint64_t v9 = a1 + TupleTypeMetadata[20];
  uint64_t v10 = (int *)swift_getTupleTypeMetadata();
  return a2(a3, a3 + v10[12], a3 + v10[16], a3 + v10[20], a3 + v10[24], a3 + v10[28], a1, v13, v12, v7, v8, v9);
}

uint64_t sub_1ACBC49B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACBC49F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACBC47A0(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 128), a2);
}

uint64_t sub_1ACBC4A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.PFCombineLatest6.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t _s7Combine10PublishersO18PodcastsFoundationE16PFCombineLatest5V1axvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Publishers.PFCombineLatest7.b.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 132));
}

uint64_t Publishers.PFCombineLatest7.c.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 32) - 8) + 16))(a2, v2 + *(int *)(a1 + 136));
}

uint64_t Publishers.PFCombineLatest7.d.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 40) - 8) + 16))(a2, v2 + *(int *)(a1 + 140));
}

uint64_t Publishers.PFCombineLatest7.e.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 48) - 8) + 16))(a2, v2 + *(int *)(a1 + 144));
}

uint64_t Publishers.PFCombineLatest7.f.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 56) - 8) + 16))(a2, v2 + *(int *)(a1 + 148));
}

uint64_t Publishers.PFCombineLatest7.g.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 64) - 8) + 16))(a2, v2 + *(int *)(a1 + 152));
}

uint64_t Publishers.PFCombineLatest7.init(_:_:_:_:_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(a9, a1, a8);
  uint64_t v17 = (int *)type metadata accessor for Publishers.PFCombineLatest7();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(a9 + v17[33], a2, a10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(a9 + v17[34], a3, a11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a12 - 8) + 32))(a9 + v17[35], a4, a12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32))(a9 + v17[36], a5, a13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a14 - 8) + 32))(a9 + v17[37], a6, a14);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a15 - 8) + 32))(a9 + v17[38], a7, a15);
}

uint64_t type metadata accessor for Publishers.PFCombineLatest7()
{
  return swift_getGenericMetadata();
}

uint64_t Publishers.PFCombineLatest7.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v94 = a4;
  uint64_t v93 = a3;
  uint64_t v95 = a1;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v111 = *(void *)(a2 + 32);
  uint64_t v112 = v5;
  uint64_t v8 = *(void *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 88);
  uint64_t v110 = *(void *)(a2 + 96);
  uint64_t v113 = v6;
  uint64_t AssociatedTypeWitness = v6;
  uint64_t v115 = v5;
  uint64_t v116 = v111;
  uint64_t v117 = v7;
  uint64_t v118 = v8;
  uint64_t v104 = v8;
  uint64_t v105 = v7;
  uint64_t v119 = v9;
  uint64_t v120 = v10;
  uint64_t v102 = v10;
  uint64_t v103 = v9;
  uint64_t v121 = v110;
  uint64_t v11 = sub_1ACE75548();
  uint64_t v12 = *(void *)(a2 + 56);
  uint64_t v106 = *(void *)(a2 + 48);
  uint64_t v107 = v12;
  uint64_t v108 = *(void *)(a2 + 64);
  uint64_t v109 = v11;
  uint64_t v98 = (char *)MEMORY[0x1E4F1A810];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = *(void *)(a2 + 112);
  uint64_t v14 = *(void *)(a2 + 120);
  uint64_t v101 = *(void *)(a2 + 104);
  uint64_t v121 = v14;
  uint64_t v85 = v13;
  uint64_t v100 = v14;
  uint64_t v99 = sub_1ACE75548();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v115 = swift_getAssociatedTypeWitness();
  uint64_t v15 = v111;
  uint64_t v116 = swift_getAssociatedTypeWitness();
  uint64_t v16 = v105;
  uint64_t v117 = swift_getAssociatedTypeWitness();
  uint64_t v17 = v106;
  uint64_t v118 = swift_getAssociatedTypeWitness();
  uint64_t v119 = swift_getAssociatedTypeWitness();
  uint64_t v120 = swift_getAssociatedTypeWitness();
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v18 = v99;
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v90 = sub_1ACE75678();
  uint64_t v91 = *(void *)(v90 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v90);
  uint64_t v86 = (char *)&v75 - v20;
  uint64_t v83 = *(void *)(v108 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v82 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = *(void *)(v12 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v80 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = *(void *)(v17 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v78 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = *(void *)(v18 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v98 = (char *)&v75 - v28;
  uint64_t v75 = *(void *)(v16 - 8);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v76 = (char *)&v75 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *(void *)(v15 - 8);
  uint64_t v32 = MEMORY[0x1F4188790](v29);
  uint64_t v34 = (char *)&v75 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v112;
  uint64_t v36 = *(void *)(v112 - 8);
  uint64_t v37 = MEMORY[0x1F4188790](v32);
  uint64_t v39 = (char *)&v75 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = MEMORY[0x1F4188790](v37);
  uint64_t v42 = (char *)&v75 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = *(void *)(v109 - 8);
  uint64_t v43 = MEMORY[0x1F4188790](v40);
  uint64_t v96 = (char *)&v75 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v43);
  uint64_t v46 = (char *)&v75 - v45;
  uint64_t v48 = v87;
  (*(void (**)(char *, uint64_t))(v47 + 16))(v42, v87);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v39, v48 + *(int *)(a2 + 132), v35);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v34, v48 + *(int *)(a2 + 136), v111);
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v76, v48 + *(int *)(a2 + 140), v105);
  uint64_t v77 = v46;
  sub_1ACE75558();
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v96, v46, v109);
  uint64_t v49 = v106;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v78, v48 + *(int *)(a2 + 144), v106);
  uint64_t v50 = v107;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v80, v48 + *(int *)(a2 + 148), v107);
  uint64_t v51 = v48 + *(int *)(a2 + 152);
  uint64_t v52 = v108;
  (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v82, v51, v108);
  uint64_t v53 = v100;
  uint64_t v54 = v85;
  uint64_t v55 = v101;
  uint64_t v56 = v50;
  uint64_t v57 = v52;
  sub_1ACE75558();
  uint64_t v58 = (void *)swift_allocObject();
  uint64_t v59 = v112;
  v58[2] = v113;
  v58[3] = v59;
  uint64_t v60 = v105;
  v58[4] = v111;
  v58[5] = v60;
  v58[6] = v49;
  v58[7] = v56;
  uint64_t v61 = v93;
  v58[8] = v57;
  v58[9] = v61;
  uint64_t v63 = v103;
  uint64_t v62 = v104;
  v58[10] = v104;
  v58[11] = v63;
  uint64_t v64 = v102;
  uint64_t v65 = v110;
  v58[12] = v102;
  v58[13] = v65;
  v58[14] = v55;
  v58[15] = v54;
  uint64_t v66 = v94;
  v58[16] = v53;
  v58[17] = v66;
  uint64_t v67 = (void *)swift_allocObject();
  uint64_t v68 = v112;
  v67[2] = v113;
  v67[3] = v68;
  v67[4] = v111;
  v67[5] = v60;
  uint64_t v69 = v107;
  v67[6] = v106;
  v67[7] = v69;
  v67[8] = v108;
  v67[9] = v61;
  v67[10] = v62;
  v67[11] = v63;
  v67[12] = v64;
  v67[13] = v65;
  v67[14] = v101;
  v67[15] = v54;
  v67[16] = v100;
  v67[17] = v66;
  v67[18] = sub_1ACBC63CC;
  v67[19] = v58;
  uint64_t v70 = v86;
  uint64_t v71 = v99;
  uint64_t v72 = v98;
  sub_1ACE75B58();
  swift_release();
  uint64_t v73 = v90;
  sub_1ACE75668();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v70, v73);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v72, v71);
  return (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v77, v109);
}

uint64_t sub_1ACBC591C(char *a1, char *a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(char *, uint64_t), void (*a10)(char *, char *, uint64_t), char *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void (*a17)(char *, char *, uint64_t), uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void (*a24)(char *, uint64_t),uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v141 = a8;
  uint64_t v118 = a7;
  uint64_t v116 = a6;
  uint64_t v112 = a5;
  uint64_t v108 = a4;
  uint64_t v105 = a3;
  uint64_t v104 = a2;
  uint64_t v101 = a1;
  uint64_t v115 = a29;
  uint64_t v114 = a21;
  uint64_t v117 = a14;
  uint64_t v113 = a13;
  uint64_t v111 = a28;
  uint64_t v107 = a27;
  uint64_t v110 = a20;
  uint64_t v106 = a19;
  uint64_t v109 = a12;
  uint64_t v103 = a11;
  int v138 = a10;
  uint64_t v139 = a9;
  uint64_t v135 = a25;
  uint64_t v136 = a18;
  int v137 = a26;
  uint64_t v133 = a17;
  uint64_t v140 = a24;
  uint64_t v131 = a16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v143 = swift_getAssociatedTypeWitness();
  uint64_t v144 = swift_getAssociatedTypeWitness();
  uint64_t v145 = swift_getAssociatedTypeWitness();
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v30 = (int *)(TupleTypeMetadata - 8);
  uint64_t v31 = MEMORY[0x1F4188790](TupleTypeMetadata);
  uint64_t v129 = (char *)v94 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v127 = (char *)v94 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v128 = (char *)v94 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v39 = (char *)v94 - v38;
  MEMORY[0x1F4188790](v37);
  uint64_t v41 = (char *)v94 - v40;
  uint64_t v120 = (char *)v94 + v30[14] - v40;
  uint64_t v42 = v120;
  uint64_t v43 = (char *)v94 + v30[18] - v40;
  uint64_t v124 = (char *)v94 + v30[22] - v40;
  uint64_t v134 = (char *)v94 - v40;
  uint64_t v44 = swift_getAssociatedTypeWitness();
  uint64_t v132 = *(void **)(v44 - 8);
  uint64_t v122 = (void (*)(void))v132[2];
  uint64_t v123 = v132 + 2;
  ((void (*)(char *, uint64_t, uint64_t))v122)(v41, v141, v44);
  uint64_t v141 = swift_getAssociatedTypeWitness();
  uint64_t v131 = *(void **)(v141 - 8);
  uint64_t v119 = (void (*)(char *, char *, uint64_t))v131[2];
  uint64_t v140 = (void (*)(char *, uint64_t))(v131 + 2);
  v119(v42, (char *)v139, v141);
  uint64_t v135 = swift_getAssociatedTypeWitness();
  uint64_t v126 = *(void **)(v135 - 8);
  uint64_t v133 = (void (*)(char *, char *, uint64_t))v126[2];
  uint64_t v139 = (uint64_t (*)(char *, uint64_t))(v126 + 2);
  uint64_t v45 = v43;
  uint64_t v121 = v43;
  v133(v43, (char *)v138, v135);
  uint64_t v46 = swift_getAssociatedTypeWitness();
  uint64_t v130 = *(void **)(v46 - 8);
  uint64_t v47 = (void (*)(char *, char *, uint64_t))v130[2];
  uint64_t v136 = v46;
  int v137 = v130 + 2;
  int v138 = v47;
  uint64_t v48 = v124;
  v47(v124, v103, v46);
  uint64_t v49 = v30[14];
  uint64_t v99 = v39;
  uint64_t v50 = &v39[v49];
  uint64_t v103 = &v39[v49];
  uint64_t v102 = &v39[v30[18]];
  uint64_t v51 = v102;
  uint64_t v100 = &v39[v30[22]];
  uint64_t v52 = v100;
  uint64_t v53 = v39;
  uint64_t v125 = v44;
  uint64_t v54 = v122;
  ((void (*)(char *, char *, uint64_t))v122)(v53, v134, v44);
  uint64_t v55 = v50;
  uint64_t v56 = v119;
  v119(v55, v120, v141);
  v133(v51, v45, v135);
  uint64_t v57 = v52;
  uint64_t v58 = v48;
  v138(v57, v48, v136);
  uint64_t v59 = (void (*)(void))v132[4];
  uint64_t v96 = v132 + 4;
  uint64_t v97 = v59;
  ((void (*)(char *, char *, uint64_t))v59)(v101, v99, v44);
  uint64_t v60 = &v128[v30[14]];
  uint64_t v101 = &v128[v30[18]];
  uint64_t v61 = v101;
  uint64_t v99 = &v128[v30[22]];
  uint64_t v62 = v99;
  v54();
  uint64_t v63 = v60;
  uint64_t v64 = v60;
  uint64_t v65 = v120;
  uint64_t v66 = v141;
  v56(v63, v120, v141);
  uint64_t v67 = v135;
  v133(v61, v121, v135);
  uint64_t v68 = v136;
  v138(v62, v58, v136);
  uint64_t v69 = (void (*)(char *, char *, uint64_t))v131[4];
  v94[1] = v131 + 4;
  uint64_t v95 = v69;
  uint64_t v70 = v66;
  v69(v104, v64, v66);
  uint64_t v104 = &v127[v30[14]];
  uint64_t v71 = v104;
  uint64_t v72 = &v127[v30[18]];
  uint64_t v98 = &v127[v30[22]];
  uint64_t v73 = v98;
  v122();
  v119(v71, v65, v70);
  uint64_t v74 = v121;
  v133(v72, v121, v67);
  v138(v73, v58, v68);
  uint64_t v75 = (void (*)(uint64_t, char *, uint64_t))v126[4];
  v75(v105, v72, v67);
  uint64_t v76 = &v129[v30[14]];
  uint64_t v77 = &v129[v30[18]];
  uint64_t v78 = &v129[v30[22]];
  v97();
  uint64_t v79 = v65;
  uint64_t v80 = v141;
  v95(v76, v79, v141);
  v75((uint64_t)v77, v74, v67);
  uint64_t v81 = (void (*)(char *, char *, uint64_t))v130[4];
  v81(v78, v124, v68);
  v81(v108, v78, v68);
  uint64_t v82 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v112, v109, v82);
  uint64_t v83 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 16))(v116, v113, v83);
  uint64_t v84 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16))(v118, v117, v84);
  uint64_t v140 = (void (*)(char *, uint64_t))v126[1];
  v140(v77, v67);
  uint64_t v85 = (void (*)(char *, uint64_t))v131[1];
  uint64_t v86 = v80;
  v85(v76, v80);
  uint64_t v139 = (uint64_t (*)(char *, uint64_t))v85;
  uint64_t v87 = (void (*)(char *, uint64_t))v132[1];
  uint64_t v88 = v125;
  v87(v129, v125);
  uint64_t v89 = (void (*)(char *, uint64_t))v130[1];
  uint64_t v90 = v136;
  v89(v98, v136);
  v85(v104, v86);
  v87(v127, v88);
  v89(v99, v90);
  uint64_t v91 = v135;
  uint64_t v92 = v140;
  v140(v101, v135);
  v87(v128, v88);
  v89(v100, v90);
  v92(v102, v91);
  return v139(v103, v141);
}

uint64_t sub_1ACBC63BC()
{
  return swift_deallocObject();
}

uint64_t sub_1ACBC63CC(char *a1, char *a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(char *, uint64_t), void (*a10)(char *, char *, uint64_t), char *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return sub_1ACBC591C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, *(void *)(v14 + 16), *(void **)(v14 + 24), *(void (**)(char *, char *, uint64_t))(v14 + 32), *(void *)(v14 + 40), *(void *)(v14 + 48),
           *(void *)(v14 + 56),
           *(void *)(v14 + 64),
           *(void *)(v14 + 72),
           *(void *)(v14 + 80),
           *(void (**)(char *, uint64_t))(v14 + 88),
           *(void *)(v14 + 96),
           *(void **)(v14 + 104),
           *(void *)(v14 + 112),
           *(void *)(v14 + 120),
           *(void *)(v14 + 128));
}

uint64_t sub_1ACBC6424@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v14 = a1 + TupleTypeMetadata[12];
  uint64_t v13 = a1 + TupleTypeMetadata[16];
  uint64_t v12 = a1 + TupleTypeMetadata[20];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v6 = (int *)swift_getTupleTypeMetadata();
  uint64_t v7 = a1 + v6[12];
  uint64_t v8 = a1 + v6[16];
  uint64_t v9 = a1 + v6[20];
  uint64_t v10 = (int *)swift_getTupleTypeMetadata();
  return a2(a3, a3 + v10[12], a3 + v10[16], a3 + v10[20], a3 + v10[24], a3 + v10[28], a3 + v10[32], a1, v14, v13, v12, v7, v8, v9);
}

uint64_t sub_1ACBC6694()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACBC66CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACBC6424(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 144), a2);
}

uint64_t sub_1ACBC6724()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1ACBC6744()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1ACBC6764()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1ACBC6784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.PFCombineLatest7.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t sub_1ACBC6798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 104);
}

uint64_t sub_1ACBC67A0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        uint64_t result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          uint64_t result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            swift_initStructMetadata();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1ACBC6930(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[2] - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(void *)(a3[3] - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = v5 + v7;
  uint64_t v9 = (v5 + v7) & ~v7;
  uint64_t v10 = *(void *)(a3[4] - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v46 = *(void *)(v6 + 64) + v11;
  uint64_t v12 = v46 + v9;
  uint64_t v13 = *(void *)(v10 + 64);
  uint64_t v14 = a3[6];
  uint64_t v15 = v12 & ~v11;
  uint64_t v16 = *(void *)(a3[5] - 8);
  uint64_t v17 = *(_DWORD *)(v16 + 80);
  uint64_t v18 = v13 + v17;
  uint64_t v19 = *(void *)(v16 + 64);
  uint64_t v20 = *(void *)(v14 - 8);
  uint64_t v21 = *(_DWORD *)(v20 + 80);
  uint64_t v22 = v19 + v21;
  unint64_t v23 = ((v19 + v21 + ((v13 + v17 + v15) & ~v17)) & ~v21) + *(void *)(v20 + 64);
  uint64_t v24 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v4 + 80) | *(unsigned char *)(v10 + 80) | *(unsigned char *)(v16 + 80) | *(unsigned char *)(v20 + 80));
  if (v24 <= 7
    && v23 <= 0x18
    && ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v10 + 80) | *(_DWORD *)(v16 + 80) | *(_DWORD *)(v20 + 80)) & 0x100000) == 0)
  {
    uint64_t v44 = a3[5];
    uint64_t v29 = ~v7;
    uint64_t v40 = a3[4];
    uint64_t v41 = ~v11;
    uint64_t v42 = ~v17;
    uint64_t v43 = ~v21;
    uint64_t v39 = a3[3];
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    uint64_t v45 = a1;
    unint64_t v31 = ((unint64_t)a1 + v8) & v29;
    unint64_t v32 = ((unint64_t)a2 + v8) & v29;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v31, v32, v39);
    uint64_t v33 = v31 + v46;
    uint64_t v28 = v45;
    uint64_t v34 = v33 & v41;
    unint64_t v35 = (v32 + v46) & v41;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(v33 & v41, v35, v40);
    uint64_t v36 = (v34 + v18) & v42;
    unint64_t v37 = (v35 + v18) & v42;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v16 + 16))(v36, v37, v44);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 16))((v36 + v22) & v43, (v37 + v22) & v43, v14);
  }
  else
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    uint64_t v28 = (uint64_t *)(v27 + ((v24 + 16) & ~v24));
    swift_retain();
  }
  return v28;
}

uint64_t sub_1ACBC6C74(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a2[2] - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2[3] - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t v10 = *(void *)(a2[4] - 8);
  uint64_t v11 = v10 + 8;
  unint64_t v12 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t))(v10 + 8))(v12);
  uint64_t v13 = *(void *)(v11 + 56);
  uint64_t v14 = *(void *)(a2[5] - 8);
  uint64_t v15 = v14 + 8;
  unint64_t v16 = (v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  (*(void (**)(unint64_t))(v14 + 8))(v16);
  uint64_t v17 = *(void *)(a2[6] - 8);
  uint64_t v18 = *(uint64_t (**)(unint64_t))(v17 + 8);
  unint64_t v19 = (v16 + *(void *)(v15 + 56) + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  return v18(v19);
}

uint64_t sub_1ACBC6DE4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 48) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 48);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 16;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 48);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 16;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v25, v26);
  uint64_t v27 = *(void *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v27 + 16))((*(void *)(v22 + 48) + *(unsigned __int8 *)(v27 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), (*(void *)(v22 + 48) + *(unsigned __int8 *)(v27 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  return a1;
}

uint64_t sub_1ACBC6F84(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 40);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 40);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 24;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v25, v26);
  uint64_t v27 = *(void *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v27 + 24))((*(void *)(v22 + 40) + *(unsigned __int8 *)(v27 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), (*(void *)(v22 + 40) + *(unsigned __int8 *)(v27 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  return a1;
}

uint64_t sub_1ACBC7124(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 32) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 32);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 32);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 32;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v25, v26);
  uint64_t v27 = *(void *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v27 + 32))((*(void *)(v22 + 32) + *(unsigned __int8 *)(v27 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), (*(void *)(v22 + 32) + *(unsigned __int8 *)(v27 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  return a1;
}

uint64_t sub_1ACBC72C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 24);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 40;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 24);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 40;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 40))(v25, v26);
  uint64_t v27 = *(void *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v27 + 40))((*(void *)(v22 + 24) + *(unsigned __int8 *)(v27 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), (*(void *)(v22 + 24) + *(unsigned __int8 *)(v27 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  return a1;
}

uint64_t sub_1ACBC7464(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v44 = *(void *)(a3[2] - 8);
  unsigned int v5 = *(_DWORD *)(v44 + 84);
  uint64_t v6 = *(void *)(a3[3] - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5) {
    unsigned int v8 = *(_DWORD *)(v44 + 84);
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = *(void *)(a3[4] - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = v8;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(void *)(v9 - 8);
  unsigned int v14 = *(_DWORD *)(v13 + 84);
  if (v14 <= v12) {
    unsigned int v15 = v12;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v13 + 84);
  }
  uint64_t v16 = *(void *)(a3[6] - 8);
  uint64_t v17 = *(unsigned int *)(v16 + 84);
  uint64_t v18 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = *(void *)(*(void *)(a3[3] - 8) + 64);
  uint64_t v20 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v21 = *(void *)(*(void *)(a3[4] - 8) + 64);
  uint64_t v22 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v23 = *(unsigned __int8 *)(v16 + 80);
  if (v17 <= v15) {
    unsigned int v24 = v15;
  }
  else {
    unsigned int v24 = *(_DWORD *)(v16 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v25 = *(void *)(*(void *)(a3[2] - 8) + 64) + v18;
  uint64_t v26 = *(void *)(*(void *)(v9 - 8) + 64) + v23;
  int v27 = a2 - v24;
  if (a2 <= v24) {
    goto LABEL_33;
  }
  uint64_t v28 = ((v26 + ((v21 + v22 + ((v19 + v20 + (v25 & ~v18)) & ~v20)) & ~v22)) & ~v23)
      + *(void *)(*(void *)(a3[6] - 8) + 64);
  char v29 = 8 * v28;
  if (v28 > 3) {
    goto LABEL_16;
  }
  unsigned int v31 = ((v27 + ~(-1 << v29)) >> v29) + 1;
  if (HIWORD(v31))
  {
    int v30 = *(_DWORD *)((char *)a1 + v28);
    if (!v30) {
      goto LABEL_33;
    }
    goto LABEL_23;
  }
  if (v31 > 0xFF)
  {
    int v30 = *(unsigned __int16 *)((char *)a1 + v28);
    if (!*(unsigned __int16 *)((char *)a1 + v28)) {
      goto LABEL_33;
    }
    goto LABEL_23;
  }
  if (v31 >= 2)
  {
LABEL_16:
    int v30 = *((unsigned __int8 *)a1 + v28);
    if (!*((unsigned char *)a1 + v28)) {
      goto LABEL_33;
    }
LABEL_23:
    int v32 = (v30 - 1) << v29;
    if (v28 > 3) {
      int v32 = 0;
    }
    if (v28)
    {
      if (v28 <= 3) {
        int v33 = ((v26 + ((v21 + v22 + ((v19 + v20 + (v25 & ~v18)) & ~v20)) & ~v22)) & ~v23)
      }
            + *(_DWORD *)(*(void *)(a3[6] - 8) + 64);
      else {
        int v33 = 4;
      }
      switch(v33)
      {
        case 2:
          int v34 = *a1;
          break;
        case 3:
          int v34 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v34 = *(_DWORD *)a1;
          break;
        default:
          int v34 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v34 = 0;
    }
    return v24 + (v34 | v32) + 1;
  }
LABEL_33:
  if (!v24) {
    return 0;
  }
  if (v5 == v24)
  {
    unint64_t v35 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v44 + 48);
    uint64_t v36 = a1;
    uint64_t v37 = *(unsigned int *)(v44 + 84);
    uint64_t v38 = a3[2];
    return v35(v36, v37, v38);
  }
  unint64_t v40 = ((unint64_t)a1 + v25) & ~v18;
  if (v7 == v24)
  {
    uint64_t v41 = *(uint64_t (**)(unint64_t))(v6 + 48);
    return v41(((unint64_t)a1 + v25) & ~v18);
  }
  else
  {
    if (v11 == v24)
    {
      unint64_t v35 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v10 + 48);
      uint64_t v36 = (unsigned __int16 *)((v40 + v19 + v20) & ~v20);
      uint64_t v37 = *(unsigned int *)(v10 + 84);
      uint64_t v38 = a3[4];
      return v35(v36, v37, v38);
    }
    uint64_t v36 = (unsigned __int16 *)((((v40 + v19 + v20) & ~v20) + v21 + v22) & ~v22);
    if (v14 == v24)
    {
      unint64_t v35 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v37 = *(unsigned int *)(v13 + 84);
      uint64_t v38 = a3[5];
      return v35(v36, v37, v38);
    }
    unint64_t v42 = ((unint64_t)v36 + v26) & ~v23;
    uint64_t v43 = *(uint64_t (**)(unint64_t, uint64_t))(v16 + 48);
    return v43(v42, v17);
  }
}

void sub_1ACBC7938(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v39 = *(void *)(a4[2] - 8);
  unsigned int v6 = *(_DWORD *)(v39 + 84);
  uint64_t v7 = *(void *)(a4[3] - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(a4[4] - 8);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v39 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v11 = *(void *)(a4[4] - 8);
  unsigned int v12 = *(_DWORD *)(v9 + 84);
  if (v12 <= v10) {
    unsigned int v13 = v10;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v14 = a4[6];
  uint64_t v38 = a4[5];
  uint64_t v15 = *(void *)(v38 - 8);
  unsigned int v16 = *(_DWORD *)(v15 + 84);
  if (v16 <= v13) {
    unsigned int v17 = v13;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v15 + 84);
  }
  uint64_t v18 = *(void *)(v14 - 8);
  uint64_t v19 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = *(void *)(*(void *)(a4[3] - 8) + 64);
  uint64_t v21 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v22 = *(void *)(v9 + 64);
  uint64_t v23 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v24 = *(unsigned __int8 *)(v18 + 80);
  if (*(_DWORD *)(v18 + 84) <= v17) {
    unsigned int v25 = v17;
  }
  else {
    unsigned int v25 = *(_DWORD *)(v18 + 84);
  }
  uint64_t v26 = *(void *)(*(void *)(a4[2] - 8) + 64) + v19;
  uint64_t v27 = *(void *)(*(void *)(v38 - 8) + 64) + v24;
  size_t v28 = ((v27 + ((v22 + v23 + ((v20 + v21 + (v26 & ~v19)) & ~v21)) & ~v23)) & ~v24)
      + *(void *)(*(void *)(v14 - 8) + 64);
  if (a3 <= v25)
  {
    int v29 = 0;
  }
  else if (v28 <= 3)
  {
    unsigned int v34 = ((a3 - v25 + ~(-1 << (8 * v28))) >> (8 * v28)) + 1;
    if (HIWORD(v34))
    {
      int v29 = 4;
    }
    else if (v34 >= 0x100)
    {
      int v29 = 2;
    }
    else
    {
      int v29 = v34 > 1;
    }
  }
  else
  {
    int v29 = 1;
  }
  if (v25 < a2)
  {
    unsigned int v30 = ~v25 + a2;
    if (v28 < 4)
    {
      int v31 = (v30 >> (8 * v28)) + 1;
      if (v28)
      {
        int v35 = v30 & ~(-1 << (8 * v28));
        bzero(a1, v28);
        if (v28 == 3)
        {
          *(_WORD *)a1 = v35;
          a1[2] = BYTE2(v35);
        }
        else if (v28 == 2)
        {
          *(_WORD *)a1 = v35;
        }
        else
        {
          *a1 = v35;
        }
      }
    }
    else
    {
      bzero(a1, v28);
      *(_DWORD *)a1 = v30;
      int v31 = 1;
    }
    switch(v29)
    {
      case 1:
        a1[v28] = v31;
        return;
      case 2:
        *(_WORD *)&a1[v28] = v31;
        return;
      case 3:
        goto LABEL_62;
      case 4:
        *(_DWORD *)&a1[v28] = v31;
        return;
      default:
        return;
    }
  }
  uint64_t v32 = ~v19;
  uint64_t v33 = ~v24;
  switch(v29)
  {
    case 1:
      a1[v28] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v28] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_62:
      __break(1u);
      JUMPOUT(0x1ACBC7E70);
    case 4:
      *(_DWORD *)&a1[v28] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v6 == v25)
        {
          uint64_t v36 = *(void (**)(char *))(v39 + 56);
          uint64_t v37 = a1;
        }
        else
        {
          uint64_t v37 = (char *)((unint64_t)&a1[v26] & v32);
          if (v8 == v25)
          {
            uint64_t v36 = *(void (**)(char *))(v7 + 56);
          }
          else
          {
            uint64_t v37 = (char *)((unint64_t)&v37[v20 + v21] & ~v21);
            if (v12 == v25)
            {
              uint64_t v36 = *(void (**)(char *))(v11 + 56);
            }
            else
            {
              uint64_t v37 = (char *)((unint64_t)&v37[v22 + v23] & ~v23);
              if (v16 == v25)
              {
                uint64_t v36 = *(void (**)(char *))(v15 + 56);
              }
              else
              {
                uint64_t v37 = (char *)((unint64_t)&v37[v27] & v33);
                uint64_t v36 = *(void (**)(char *))(v18 + 56);
              }
            }
          }
        }
        v36(v37);
      }
      return;
  }
}

uint64_t sub_1ACBC7E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 120);
}

uint64_t sub_1ACBC7EA0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        uint64_t result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          uint64_t result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            uint64_t result = swift_checkMetadataState();
            if (v6 <= 0x3F)
            {
              swift_initStructMetadata();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1ACBC8070(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[2] - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = a3[3];
  uint64_t v7 = a3[4];
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v54 = v5 + v9;
  uint64_t v10 = (v5 + v9) & ~v9;
  uint64_t v11 = *(void *)(v8 + 64);
  uint64_t v12 = *(void *)(v7 - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  uint64_t v53 = v11 + v13;
  uint64_t v14 = (v11 + v13 + v10) & ~v13;
  uint64_t v15 = *(void *)(v12 + 64);
  uint64_t v55 = *(void *)(a3[5] - 8);
  uint64_t v16 = *(_DWORD *)(v55 + 80);
  uint64_t v52 = v15 + v16;
  uint64_t v17 = (v15 + v16 + v14) & ~v16;
  uint64_t v18 = *(void *)(v55 + 64);
  uint64_t v19 = *(void *)(a3[6] - 8);
  uint64_t v20 = *(_DWORD *)(v19 + 80);
  uint64_t v51 = v18 + v20;
  uint64_t v21 = *(void *)(v19 + 64);
  uint64_t v22 = a3[7];
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(_DWORD *)(v23 + 80);
  uint64_t v25 = v21 + v24;
  unint64_t v26 = ((v21 + v24 + ((v18 + v20 + v17) & ~v20)) & ~v24) + *(void *)(v23 + 64);
  uint64_t v27 = (*(unsigned char *)(v8 + 80) | *(unsigned char *)(v4 + 80) | *(unsigned char *)(v12 + 80) | *(unsigned char *)(v55 + 80) | *(unsigned char *)(v19 + 80) | *(unsigned char *)(v23 + 80));
  if (v27 <= 7
    && v26 <= 0x18
    && ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v12 + 80) | *(_DWORD *)(v55 + 80) | *(_DWORD *)(v19 + 80) | *(_DWORD *)(v23 + 80)) & 0x100000) == 0)
  {
    uint64_t v50 = a3[6];
    uint64_t v32 = *(void *)(v7 - 8);
    uint64_t v33 = ~v9;
    uint64_t v48 = a3[5];
    uint64_t v34 = ~v13;
    uint64_t v45 = a3[4];
    uint64_t v46 = ~v16;
    uint64_t v47 = ~v20;
    uint64_t v49 = ~v24;
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    uint64_t v36 = v6;
    int v31 = a1;
    unint64_t v37 = ((unint64_t)a1 + v54) & v33;
    unint64_t v38 = ((unint64_t)a2 + v54) & v33;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v37, v38, v36);
    unint64_t v39 = (v38 + v53) & v34;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v32 + 16))((v37 + v53) & v34, v39, v45);
    unint64_t v40 = (((v37 + v53) & v34) + v52) & v46;
    unint64_t v41 = (v39 + v52) & v46;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v55 + 16))(v40, v41, v48);
    unint64_t v42 = (v40 + v51) & v47;
    uint64_t v43 = (v41 + v51) & v47;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 16))(v42, v43, v50);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v23 + 16))((v42 + v25) & v49, (v43 + v25) & v49, v22);
  }
  else
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    int v31 = (uint64_t *)(v30 + ((v27 + 16) & ~v27));
    swift_retain();
  }
  return v31;
}

uint64_t sub_1ACBC8460(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a2[2] - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2[3] - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t v10 = *(void *)(a2[4] - 8);
  uint64_t v11 = v10 + 8;
  unint64_t v12 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t))(v10 + 8))(v12);
  uint64_t v13 = *(void *)(v11 + 56);
  uint64_t v14 = *(void *)(a2[5] - 8);
  uint64_t v15 = v14 + 8;
  unint64_t v16 = (v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  (*(void (**)(unint64_t))(v14 + 8))(v16);
  uint64_t v17 = *(void *)(v15 + 56);
  uint64_t v18 = *(void *)(a2[6] - 8);
  uint64_t v19 = v18 + 8;
  unint64_t v20 = (v16 + v17 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  (*(void (**)(unint64_t))(v18 + 8))(v20);
  uint64_t v21 = *(void *)(a2[7] - 8);
  uint64_t v22 = *(uint64_t (**)(unint64_t))(v21 + 8);
  unint64_t v23 = (v20 + *(void *)(v19 + 56) + *(unsigned __int8 *)(v21 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  return v22(v23);
}

uint64_t sub_1ACBC8614(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 48) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 48);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 16;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 48);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 16;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 48);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 16;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 16))(v32, v33);
  uint64_t v34 = *(void *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 16))((*(void *)(v29 + 48) + *(unsigned __int8 *)(v34 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), (*(void *)(v29 + 48) + *(unsigned __int8 *)(v34 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return a1;
}

uint64_t sub_1ACBC8804(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 40);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 40);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 24;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 40);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 24;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 24))(v32, v33);
  uint64_t v34 = *(void *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 24))((*(void *)(v29 + 40) + *(unsigned __int8 *)(v34 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), (*(void *)(v29 + 40) + *(unsigned __int8 *)(v34 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return a1;
}

uint64_t sub_1ACBC89F4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 32) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 32);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 32);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 32;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 32);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 32;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 32))(v32, v33);
  uint64_t v34 = *(void *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 32))((*(void *)(v29 + 32) + *(unsigned __int8 *)(v34 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), (*(void *)(v29 + 32) + *(unsigned __int8 *)(v34 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return a1;
}

uint64_t sub_1ACBC8BE4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 24);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 40;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 24);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 40;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 40))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 24);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 40;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 40))(v32, v33);
  uint64_t v34 = *(void *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 40))((*(void *)(v29 + 24) + *(unsigned __int8 *)(v34 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), (*(void *)(v29 + 24) + *(unsigned __int8 *)(v34 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return a1;
}

uint64_t sub_1ACBC8DD4(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v55 = a3[2];
  uint64_t v54 = *(void *)(v55 - 8);
  unsigned int v5 = *(_DWORD *)(v54 + 84);
  uint64_t v6 = *(void *)(a3[3] - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = a3[5];
  uint64_t v52 = v8;
  uint64_t v53 = a3[4];
  uint64_t v9 = *(void *)(v53 - 8);
  if (v7 <= v5) {
    unsigned int v10 = *(_DWORD *)(v54 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v11 = *(unsigned int *)(v9 + 84);
  if (v11 <= v10) {
    unsigned int v12 = v10;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(v8 - 8);
  unsigned int v14 = *(_DWORD *)(v13 + 84);
  if (v14 <= v12) {
    unsigned int v15 = v12;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v13 + 84);
  }
  uint64_t v50 = a3[7];
  uint64_t v51 = a3[6];
  uint64_t v16 = *(void *)(v51 - 8);
  unsigned int v17 = *(_DWORD *)(v16 + 84);
  uint64_t v18 = *(void *)(v50 - 8);
  if (v17 <= v15) {
    unsigned int v19 = v15;
  }
  else {
    unsigned int v19 = *(_DWORD *)(v16 + 84);
  }
  uint64_t v20 = *(unsigned int *)(v18 + 84);
  uint64_t v21 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v56 = *(void *)(*(void *)(a3[3] - 8) + 64);
  uint64_t v22 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v23 = *(void *)(v9 + 64);
  uint64_t v24 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v25 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v26 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v27 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v28 = *(void *)(v18 + 64);
  if (v20 > v19) {
    unsigned int v19 = *(_DWORD *)(v18 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v29 = *(void *)(*(void *)(v55 - 8) + 64) + v21;
  uint64_t v30 = v25 + v26;
  uint64_t v31 = *(void *)(*(void *)(v51 - 8) + 64) + v27;
  int v32 = a2 - v19;
  if (a2 <= v19) {
    goto LABEL_35;
  }
  uint64_t v33 = (v31 + ((v30 + ((v23 + v24 + ((v56 + v22 + (v29 & ~v21)) & ~v22)) & ~v24)) & ~v26)) & ~v27;
  uint64_t v34 = v33 + v28;
  char v35 = 8 * (v33 + v28);
  if (v34 > 3) {
    goto LABEL_18;
  }
  unsigned int v37 = ((v32 + ~(-1 << v35)) >> v35) + 1;
  if (HIWORD(v37))
  {
    int v36 = *(_DWORD *)((char *)a1 + v34);
    if (!v36) {
      goto LABEL_35;
    }
    goto LABEL_25;
  }
  if (v37 > 0xFF)
  {
    int v36 = *(unsigned __int16 *)((char *)a1 + v34);
    if (!*(unsigned __int16 *)((char *)a1 + v34)) {
      goto LABEL_35;
    }
    goto LABEL_25;
  }
  if (v37 >= 2)
  {
LABEL_18:
    int v36 = *((unsigned __int8 *)a1 + v34);
    if (!*((unsigned char *)a1 + v34)) {
      goto LABEL_35;
    }
LABEL_25:
    int v38 = (v36 - 1) << v35;
    if (v34 > 3) {
      int v38 = 0;
    }
    if (v34)
    {
      if (v34 <= 3) {
        int v39 = v34;
      }
      else {
        int v39 = 4;
      }
      switch(v39)
      {
        case 2:
          int v40 = *a1;
          break;
        case 3:
          int v40 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v40 = *(_DWORD *)a1;
          break;
        default:
          int v40 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v40 = 0;
    }
    return v19 + (v40 | v38) + 1;
  }
LABEL_35:
  if (!v19) {
    return 0;
  }
  if (v5 == v19)
  {
    uint64_t v41 = v55;
    unint64_t v42 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v43 = a1;
    uint64_t v44 = *(unsigned int *)(v54 + 84);
    return v42(v43, v44, v41);
  }
  unint64_t v46 = ((unint64_t)a1 + v29) & ~v21;
  if (v7 == v19)
  {
    uint64_t v47 = *(uint64_t (**)(unint64_t))(v6 + 48);
    return v47(((unint64_t)a1 + v29) & ~v21);
  }
  else
  {
    if (v11 == v19)
    {
      unint64_t v42 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48);
      uint64_t v43 = (unsigned __int16 *)((v46 + v56 + v22) & ~v22);
      uint64_t v44 = v11;
      uint64_t v41 = v53;
      return v42(v43, v44, v41);
    }
    uint64_t v43 = (unsigned __int16 *)((((v46 + v56 + v22) & ~v22) + v23 + v24) & ~v24);
    if (v14 == v19)
    {
      unint64_t v42 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v44 = *(unsigned int *)(v13 + 84);
      uint64_t v41 = v52;
      return v42(v43, v44, v41);
    }
    uint64_t v43 = (unsigned __int16 *)(((unint64_t)v43 + v30) & ~v26);
    if (v17 == v19)
    {
      unint64_t v42 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v16 + 48);
      uint64_t v44 = *(unsigned int *)(v16 + 84);
      uint64_t v41 = v51;
      return v42(v43, v44, v41);
    }
    unint64_t v48 = ((unint64_t)v43 + v31) & ~v27;
    uint64_t v49 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 48);
    return v49(v48, v20, v50);
  }
}

void sub_1ACBC9368(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v6 = *(void *)(a4[2] - 8);
  uint64_t v52 = v6;
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4[3] - 8);
  uint64_t v9 = v8;
  unsigned int v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= v7) {
    unsigned int v11 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v51 = a4[4];
  uint64_t v12 = *(void *)(v51 - 8);
  unsigned int v13 = *(_DWORD *)(v12 + 84);
  uint64_t v14 = *(void *)(a4[5] - 8);
  if (v13 <= v11) {
    unsigned int v15 = v11;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v12 + 84);
  }
  uint64_t v16 = *(void *)(a4[5] - 8);
  unsigned int v50 = *(_DWORD *)(v14 + 84);
  if (v50 <= v15) {
    unsigned int v17 = v15;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v14 + 84);
  }
  uint64_t v18 = *(void *)(a4[6] - 8);
  uint64_t v19 = v18;
  unsigned int v20 = *(_DWORD *)(v18 + 84);
  unsigned int v49 = v20;
  if (v20 <= v17) {
    unsigned int v20 = v17;
  }
  uint64_t v21 = *(void *)(a4[7] - 8);
  uint64_t v22 = *(void *)(v6 + 64);
  uint64_t v23 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v24 = *(void *)(v8 + 64);
  uint64_t v25 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v26 = *(void *)(*(void *)(v51 - 8) + 64);
  uint64_t v27 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v28 = *(void *)(v14 + 64);
  uint64_t v29 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v30 = *(void *)(v18 + 64);
  uint64_t v31 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v32 = v22 + v23;
  uint64_t v33 = v28 + v29;
  uint64_t v34 = v30 + v31;
  size_t v35 = ((v34 + ((v28 + v29 + ((v26 + v27 + ((v24 + v25 + ((v22 + v23) & ~v23)) & ~v25)) & ~v27)) & ~v29)) & ~v31)
      + *(void *)(v21 + 64);
  if (*(_DWORD *)(v21 + 84) <= v20) {
    unsigned int v36 = v20;
  }
  else {
    unsigned int v36 = *(_DWORD *)(v21 + 84);
  }
  if (a3 <= v36)
  {
    int v37 = 0;
  }
  else if (v35 <= 3)
  {
    unsigned int v43 = ((a3 - v36 + ~(-1 << (8 * v35))) >> (8 * v35)) + 1;
    if (HIWORD(v43))
    {
      int v37 = 4;
    }
    else if (v43 >= 0x100)
    {
      int v37 = 2;
    }
    else
    {
      int v37 = v43 > 1;
    }
  }
  else
  {
    int v37 = 1;
  }
  if (v36 < a2)
  {
    unsigned int v38 = ~v36 + a2;
    if (v35 < 4)
    {
      int v39 = (v38 >> (8 * v35)) + 1;
      if (v35)
      {
        int v44 = v38 & ~(-1 << (8 * v35));
        bzero(a1, v35);
        if (v35 == 3)
        {
          *(_WORD *)a1 = v44;
          a1[2] = BYTE2(v44);
        }
        else if (v35 == 2)
        {
          *(_WORD *)a1 = v44;
        }
        else
        {
          *a1 = v44;
        }
      }
    }
    else
    {
      bzero(a1, v35);
      *(_DWORD *)a1 = v38;
      int v39 = 1;
    }
    switch(v37)
    {
      case 1:
        a1[v35] = v39;
        return;
      case 2:
        *(_WORD *)&a1[v35] = v39;
        return;
      case 3:
        goto LABEL_65;
      case 4:
        *(_DWORD *)&a1[v35] = v39;
        return;
      default:
        return;
    }
  }
  uint64_t v40 = ~v23;
  uint64_t v41 = ~v29;
  uint64_t v42 = ~v31;
  switch(v37)
  {
    case 1:
      a1[v35] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)&a1[v35] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_65:
      __break(1u);
      JUMPOUT(0x1ACBC9928);
    case 4:
      *(_DWORD *)&a1[v35] = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (!a2) {
        return;
      }
LABEL_35:
      if (v7 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v52 + 56);
        unint64_t v46 = a1;
        goto LABEL_37;
      }
      unint64_t v46 = (unsigned char *)((unint64_t)&a1[v32] & v40);
      if (v10 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v9 + 56);
        goto LABEL_61;
      }
      unint64_t v46 = (unsigned char *)((unint64_t)&v46[v24 + v25] & ~v25);
      if (v13 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v12 + 56);
        goto LABEL_37;
      }
      unint64_t v46 = (unsigned char *)((unint64_t)&v46[v26 + v27] & ~v27);
      if (v50 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v16 + 56);
LABEL_37:
LABEL_61:
        v45(v46);
        return;
      }
      unint64_t v46 = (unsigned char *)((unint64_t)&v46[v33] & v41);
      if (v49 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v19 + 56);
        goto LABEL_61;
      }
      unint64_t v47 = (unint64_t)&v46[v34] & v42;
      unint64_t v48 = *(void (**)(unint64_t))(v21 + 56);
      v48(v47);
      return;
  }
}

uint64_t sub_1ACBC9950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 144);
}

uint64_t sub_1ACBC9958()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        uint64_t result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          uint64_t result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            uint64_t result = swift_checkMetadataState();
            if (v6 <= 0x3F)
            {
              uint64_t result = swift_checkMetadataState();
              if (v7 <= 0x3F)
              {
                swift_initStructMetadata();
                return 0;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1ACBC9B68(uint64_t *a1, uint64_t *a2, void *a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3[2] - 8);
  uint64_t v5 = *(void *)(a3[3] - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v47 = *(void *)(a3[4] - 8);
  uint64_t v7 = a3[5];
  uint64_t v45 = *(void *)(v7 - 8);
  int v8 = *(_DWORD *)(v45 + 80);
  uint64_t v46 = a3[6];
  uint64_t v43 = *(void *)(v46 - 8);
  uint64_t v44 = a3[7];
  uint64_t v41 = *(void *)(v44 - 8);
  int v9 = *(_DWORD *)(v41 + 80);
  uint64_t v42 = a3[8];
  uint64_t v39 = *(void *)(v42 - 8);
  int v10 = *(_DWORD *)(v39 + 80);
  uint64_t v11 = *(void *)(v5 + 64) + *(_DWORD *)(v47 + 80);
  uint64_t v40 = *(void *)(v4 + 64) + v6;
  uint64_t v12 = *(void *)(v47 + 64) + v8;
  uint64_t v13 = *(void *)(v45 + 64) + *(_DWORD *)(v43 + 80);
  uint64_t v14 = *(void *)(v43 + 64) + v9;
  uint64_t v15 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v4 + 80) | *(unsigned char *)(v47 + 80) | v8 | *(unsigned char *)(v43 + 80) | v9 | v10);
  if (v15 <= 7
    && ((*(void *)(*(void *)(v44 - 8) + 64)
       + *(_DWORD *)(v39 + 80)
       + ((v14
         + ((v13
           + ((v12 + ((v11 + (v40 & ~v6)) & ~(unint64_t)*(_DWORD *)(v47 + 80))) & ~(unint64_t)*(_DWORD *)(v45 + 80))) & ~(unint64_t)*(_DWORD *)(v43 + 80))) & ~(unint64_t)*(_DWORD *)(v41 + 80))) & ~(unint64_t)*(_DWORD *)(v39 + 80))
     + *(void *)(*(void *)(v42 - 8) + 64) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v47 + 80) | v8 | *(_DWORD *)(v43 + 80) | v9 | v10) & 0x100000) == 0)
  {
    uint64_t v19 = ~v6;
    unint64_t v32 = ~(unint64_t)*(_DWORD *)(v47 + 80);
    unint64_t v33 = ~(unint64_t)v8;
    uint64_t v34 = a3[4];
    unint64_t v35 = ~(unint64_t)*(_DWORD *)(v43 + 80);
    uint64_t v36 = *(void *)(*(void *)(v44 - 8) + 64) + *(_DWORD *)(v39 + 80);
    unint64_t v37 = ~(unint64_t)v9;
    unint64_t v38 = ~(unint64_t)*(_DWORD *)(v39 + 80);
    uint64_t v20 = a3[3];
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    unint64_t v22 = ((unint64_t)v3 + v40) & v19;
    unint64_t v23 = ((unint64_t)a2 + v40) & v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v22, v23, v20);
    unint64_t v24 = (v23 + v11) & v32;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v47 + 16))((v22 + v11) & v32, v24, v34);
    unint64_t v25 = (((v22 + v11) & v32) + v12) & v33;
    unint64_t v26 = (v24 + v12) & v33;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v45 + 16))(v25, v26, v7);
    unint64_t v27 = (v25 + v13) & v35;
    unint64_t v28 = (v26 + v13) & v35;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v43 + 16))(v27, v28, v46);
    unint64_t v29 = (v27 + v14) & v37;
    unint64_t v30 = (v28 + v14) & v37;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v41 + 16))(v29, v30, v44);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v39 + 16))((v29 + v36) & v38, (v30 + v36) & v38, v42);
  }
  else
  {
    uint64_t v18 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v18 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1ACBC9FF8(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a2[2] - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2[3] - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t v10 = *(void *)(a2[4] - 8);
  uint64_t v11 = v10 + 8;
  unint64_t v12 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t))(v10 + 8))(v12);
  uint64_t v13 = *(void *)(v11 + 56);
  uint64_t v14 = *(void *)(a2[5] - 8);
  uint64_t v15 = v14 + 8;
  unint64_t v16 = (v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  (*(void (**)(unint64_t))(v14 + 8))(v16);
  uint64_t v17 = *(void *)(v15 + 56);
  uint64_t v18 = *(void *)(a2[6] - 8);
  uint64_t v19 = v18 + 8;
  unint64_t v20 = (v16 + v17 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  (*(void (**)(unint64_t))(v18 + 8))(v20);
  uint64_t v21 = *(void *)(v19 + 56);
  uint64_t v22 = *(void *)(a2[7] - 8);
  uint64_t v23 = v22 + 8;
  unint64_t v24 = (v20 + v21 + *(unsigned __int8 *)(v22 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  (*(void (**)(unint64_t))(v22 + 8))(v24);
  uint64_t v25 = *(void *)(a2[8] - 8);
  unint64_t v26 = *(uint64_t (**)(unint64_t))(v25 + 8);
  unint64_t v27 = (v24 + *(void *)(v23 + 56) + *(unsigned __int8 *)(v25 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  return v26(v27);
}

uint64_t sub_1ACBCA1F0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 48) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 48);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 16;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 48);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 16;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 48);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 16;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 16))(v32, v33);
  uint64_t v34 = *(void *)(v29 + 48);
  uint64_t v35 = *(void *)(a3[7] - 8);
  uint64_t v36 = v35 + 16;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = v34 + v37;
  uint64_t v39 = (v38 + v32) & ~v37;
  uint64_t v40 = (v38 + v33) & ~v37;
  (*(void (**)(uint64_t, uint64_t))(v35 + 16))(v39, v40);
  uint64_t v41 = *(void *)(a3[8] - 8);
  (*(void (**)(unint64_t, unint64_t))(v41 + 16))((*(void *)(v36 + 48) + *(unsigned __int8 *)(v41 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80), (*(void *)(v36 + 48) + *(unsigned __int8 *)(v41 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  return a1;
}

uint64_t sub_1ACBCA430(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 40);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 40);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 24;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 40);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 24;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 24))(v32, v33);
  uint64_t v34 = *(void *)(v29 + 40);
  uint64_t v35 = *(void *)(a3[7] - 8);
  uint64_t v36 = v35 + 24;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = v34 + v37;
  uint64_t v39 = (v38 + v32) & ~v37;
  uint64_t v40 = (v38 + v33) & ~v37;
  (*(void (**)(uint64_t, uint64_t))(v35 + 24))(v39, v40);
  uint64_t v41 = *(void *)(a3[8] - 8);
  (*(void (**)(unint64_t, unint64_t))(v41 + 24))((*(void *)(v36 + 40) + *(unsigned __int8 *)(v41 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80), (*(void *)(v36 + 40) + *(unsigned __int8 *)(v41 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  return a1;
}

uint64_t sub_1ACBCA670(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 32) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 32);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 32);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 32;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 32);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 32;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 32))(v32, v33);
  uint64_t v34 = *(void *)(v29 + 32);
  uint64_t v35 = *(void *)(a3[7] - 8);
  uint64_t v36 = v35 + 32;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = v34 + v37;
  uint64_t v39 = (v38 + v32) & ~v37;
  uint64_t v40 = (v38 + v33) & ~v37;
  (*(void (**)(uint64_t, uint64_t))(v35 + 32))(v39, v40);
  uint64_t v41 = *(void *)(a3[8] - 8);
  (*(void (**)(unint64_t, unint64_t))(v41 + 32))((*(void *)(v36 + 32) + *(unsigned __int8 *)(v41 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80), (*(void *)(v36 + 32) + *(unsigned __int8 *)(v41 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  return a1;
}

uint64_t sub_1ACBCA8B0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 24);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 40;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 24);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 40;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 40))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 24);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 40;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 40))(v32, v33);
  uint64_t v34 = *(void *)(v29 + 24);
  uint64_t v35 = *(void *)(a3[7] - 8);
  uint64_t v36 = v35 + 40;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = v34 + v37;
  uint64_t v39 = (v38 + v32) & ~v37;
  uint64_t v40 = (v38 + v33) & ~v37;
  (*(void (**)(uint64_t, uint64_t))(v35 + 40))(v39, v40);
  uint64_t v41 = *(void *)(a3[8] - 8);
  (*(void (**)(unint64_t, unint64_t))(v41 + 40))((*(void *)(v36 + 24) + *(unsigned __int8 *)(v41 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80), (*(void *)(v36 + 24) + *(unsigned __int8 *)(v41 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  return a1;
}

uint64_t sub_1ACBCAAF0(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v58 = a3[2];
  uint64_t v56 = a3[3];
  uint64_t v57 = *(void *)(v58 - 8);
  unsigned int v5 = *(_DWORD *)(v57 + 84);
  uint64_t v6 = *(void *)(v56 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= v5) {
    unsigned int v8 = *(_DWORD *)(v57 + 84);
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = a3[5];
  uint64_t v54 = a3[4];
  uint64_t v10 = *(void *)(v54 - 8);
  unsigned int v55 = *(_DWORD *)(v10 + 84);
  if (v55 > v8) {
    unsigned int v8 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v11 = *(void *)(v9 - 8);
  unsigned int v53 = *(_DWORD *)(v11 + 84);
  if (v53 <= v8) {
    unsigned int v12 = v8;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v13 = *(void *)(a3[6] - 8);
  unsigned int v52 = *(_DWORD *)(v13 + 84);
  if (v52 <= v12) {
    unsigned int v14 = v12;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v13 + 84);
  }
  uint64_t v49 = a3[8];
  uint64_t v50 = a3[7];
  uint64_t v15 = *(void *)(v50 - 8);
  unsigned int v16 = *(_DWORD *)(v15 + 84);
  unsigned int v51 = v16;
  if (v16 <= v14) {
    unsigned int v16 = v14;
  }
  uint64_t v17 = *(void *)(a3[8] - 8);
  uint64_t v18 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v20 = v13;
  uint64_t v21 = *(void *)(*(void *)(v54 - 8) + 64);
  uint64_t v22 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v23 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v24 = *(void *)(v13 + 64);
  uint64_t v25 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v26 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v27 = *(void *)(v17 + 64);
  if (*(_DWORD *)(v17 + 84) <= v16) {
    unsigned int v28 = v16;
  }
  else {
    unsigned int v28 = *(_DWORD *)(v17 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v29 = *(void *)(*(void *)(v56 - 8) + 64);
  uint64_t v30 = *(void *)(*(void *)(v58 - 8) + 64) + v18;
  uint64_t v31 = *(void *)(*(void *)(v9 - 8) + 64) + v23;
  uint64_t v32 = v24 + v25;
  uint64_t v33 = *(void *)(*(void *)(v50 - 8) + 64) + v26;
  unsigned int v34 = a2 - v28;
  if (a2 <= v28) {
    goto LABEL_37;
  }
  uint64_t v35 = (v33 + ((v32 + ((v31 + ((v21 + v22 + ((v29 + v19 + (v30 & ~v18)) & ~v19)) & ~v22)) & ~v23)) & ~v25)) & ~v26;
  uint64_t v36 = v35 + v27;
  char v37 = 8 * (v35 + v27);
  if (v36 > 3) {
    goto LABEL_20;
  }
  unsigned int v39 = ((v34 + ~(-1 << v37)) >> v37) + 1;
  if (HIWORD(v39))
  {
    int v38 = *(_DWORD *)((char *)a1 + v36);
    if (!v38) {
      goto LABEL_37;
    }
    goto LABEL_27;
  }
  if (v39 > 0xFF)
  {
    int v38 = *(unsigned __int16 *)((char *)a1 + v36);
    if (!*(unsigned __int16 *)((char *)a1 + v36)) {
      goto LABEL_37;
    }
    goto LABEL_27;
  }
  if (v39 >= 2)
  {
LABEL_20:
    int v38 = *((unsigned __int8 *)a1 + v36);
    if (!*((unsigned char *)a1 + v36)) {
      goto LABEL_37;
    }
LABEL_27:
    int v40 = (v38 - 1) << v37;
    if (v36 > 3) {
      int v40 = 0;
    }
    if (v36)
    {
      if (v36 <= 3) {
        int v41 = v36;
      }
      else {
        int v41 = 4;
      }
      switch(v41)
      {
        case 2:
          int v42 = *a1;
          break;
        case 3:
          int v42 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v42 = *(_DWORD *)a1;
          break;
        default:
          int v42 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v42 = 0;
    }
    return v28 + (v42 | v40) + 1;
  }
LABEL_37:
  if (!v28) {
    return 0;
  }
  if (v5 == v28)
  {
    uint64_t v43 = v58;
    uint64_t v44 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v57 + 48);
    uint64_t v7 = *(unsigned int *)(v57 + 84);
    goto LABEL_57;
  }
  unint64_t v46 = ((unint64_t)a1 + v30) & ~v18;
  if (v7 == v28)
  {
    uint64_t v43 = v56;
    uint64_t v44 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48);
    a1 = (unsigned __int16 *)(((unint64_t)a1 + v30) & ~v18);
    goto LABEL_57;
  }
  uint64_t v7 = v55;
  if (v55 == v28)
  {
    uint64_t v43 = v54;
    uint64_t v44 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48);
    a1 = (unsigned __int16 *)((v46 + v29 + v19) & ~v19);
    goto LABEL_57;
  }
  a1 = (unsigned __int16 *)((((v46 + v29 + v19) & ~v19) + v21 + v22) & ~v22);
  uint64_t v7 = v53;
  if (v53 == v28)
  {
    uint64_t v43 = v9;
    uint64_t v44 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    goto LABEL_57;
  }
  unint64_t v47 = ((unint64_t)a1 + v31) & ~v23;
  if (v52 != v28)
  {
    a1 = (unsigned __int16 *)((v32 + v47) & ~v25);
    uint64_t v7 = v51;
    if (v51 != v28)
    {
      a1 = (unsigned __int16 *)(((unint64_t)a1 + v33) & ~v26);
      uint64_t v44 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v17 + 48);
      uint64_t v7 = *(unsigned int *)(v17 + 84);
      uint64_t v43 = v49;
      return v44(a1, v7, v43);
    }
    uint64_t v44 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v15 + 48);
    uint64_t v43 = v50;
LABEL_57:
    return v44(a1, v7, v43);
  }
  unint64_t v48 = *(uint64_t (**)(unint64_t))(v20 + 48);
  return v48(v47);
}

void sub_1ACBCB08C(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v56 = *(void *)(a4[2] - 8);
  unsigned int v5 = *(_DWORD *)(v56 + 84);
  uint64_t v6 = *(void *)(a4[3] - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  unsigned int v55 = v7;
  if (v7 <= v5) {
    unsigned int v7 = *(_DWORD *)(v56 + 84);
  }
  uint64_t v52 = a4[4];
  uint64_t v8 = *(void *)(v52 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  unsigned int v54 = v9;
  if (v9 <= v7) {
    unsigned int v9 = v7;
  }
  uint64_t v49 = a4[5];
  uint64_t v10 = *(void *)(v49 - 8);
  uint64_t v11 = *(void *)(a4[6] - 8);
  unsigned int v50 = *(_DWORD *)(v10 + 84);
  if (v50 > v9) {
    unsigned int v9 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v12 = *(void *)(a4[6] - 8);
  unsigned int v48 = *(_DWORD *)(v11 + 84);
  if (v48 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v46 = a4[7];
  uint64_t v14 = *(void *)(v46 - 8);
  unsigned int v47 = *(_DWORD *)(v14 + 84);
  if (v47 <= v13) {
    unsigned int v15 = v13;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v14 + 84);
  }
  uint64_t v16 = *(void *)(a4[8] - 8);
  uint64_t v17 = *(void *)(*(void *)(a4[2] - 8) + 64);
  uint64_t v53 = *(void *)(a4[3] - 8);
  uint64_t v18 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = *(void *)(v53 + 64);
  uint64_t v51 = *(void *)(v52 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v21 = *(void *)(v51 + 64);
  uint64_t v22 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v23 = *(void *)(*(void *)(v49 - 8) + 64);
  uint64_t v24 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v25 = *(void *)(v11 + 64);
  uint64_t v26 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v27 = *(void *)(*(void *)(v46 - 8) + 64);
  uint64_t v28 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v29 = v17 + v18;
  uint64_t v30 = v23 + v24;
  uint64_t v31 = v25 + v26;
  size_t v32 = ((v27
        + v28
        + ((v25 + v26 + ((v23 + v24 + ((v21 + v22 + ((v19 + v20 + ((v17 + v18) & ~v18)) & ~v20)) & ~v22)) & ~v24)) & ~v26)) & ~v28)
      + *(void *)(v16 + 64);
  if (*(_DWORD *)(v16 + 84) <= v15) {
    unsigned int v33 = v15;
  }
  else {
    unsigned int v33 = *(_DWORD *)(v16 + 84);
  }
  if (a3 <= v33)
  {
    int v34 = 0;
  }
  else if (v32 <= 3)
  {
    unsigned int v39 = ((a3 - v33 + ~(-1 << (8 * v32))) >> (8 * v32)) + 1;
    if (HIWORD(v39))
    {
      int v34 = 4;
    }
    else if (v39 >= 0x100)
    {
      int v34 = 2;
    }
    else
    {
      int v34 = v39 > 1;
    }
  }
  else
  {
    int v34 = 1;
  }
  if (v33 < a2)
  {
    unsigned int v35 = ~v33 + a2;
    if (v32 < 4)
    {
      int v36 = (v35 >> (8 * v32)) + 1;
      if (v32)
      {
        int v40 = v35 & ~(-1 << (8 * v32));
        bzero(a1, v32);
        if (v32 == 3)
        {
          *(_WORD *)a1 = v40;
          a1[2] = BYTE2(v40);
        }
        else if (v32 == 2)
        {
          *(_WORD *)a1 = v40;
        }
        else
        {
          *a1 = v40;
        }
      }
    }
    else
    {
      bzero(a1, v32);
      *(_DWORD *)a1 = v35;
      int v36 = 1;
    }
    switch(v34)
    {
      case 1:
        a1[v32] = v36;
        return;
      case 2:
        *(_WORD *)&a1[v32] = v36;
        return;
      case 3:
        goto LABEL_67;
      case 4:
        *(_DWORD *)&a1[v32] = v36;
        return;
      default:
        return;
    }
  }
  uint64_t v37 = ~v18;
  uint64_t v38 = ~v26;
  switch(v34)
  {
    case 1:
      a1[v32] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_36;
    case 2:
      *(_WORD *)&a1[v32] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_36;
    case 3:
LABEL_67:
      __break(1u);
      JUMPOUT(0x1ACBCB6C4);
    case 4:
      *(_DWORD *)&a1[v32] = 0;
      goto LABEL_35;
    default:
LABEL_35:
      if (!a2) {
        return;
      }
LABEL_36:
      if (v5 == v33)
      {
        int v41 = *(void (**)(unsigned char *))(v56 + 56);
        int v42 = a1;
        goto LABEL_55;
      }
      int v42 = (unsigned char *)((unint64_t)&a1[v29] & v37);
      if (v55 == v33)
      {
        int v41 = *(void (**)(unsigned char *))(v53 + 56);
        goto LABEL_55;
      }
      int v42 = (unsigned char *)((unint64_t)&v42[v19 + v20] & ~v20);
      if (v54 == v33)
      {
        uint64_t v43 = v51;
LABEL_54:
        int v41 = *(void (**)(unsigned char *))(v43 + 56);
        goto LABEL_55;
      }
      int v42 = (unsigned char *)((unint64_t)&v42[v21 + v22] & ~v22);
      if (v50 == v33)
      {
        uint64_t v43 = v10;
        goto LABEL_54;
      }
      unint64_t v44 = (unint64_t)&v42[v30] & ~v24;
      if (v48 != v33)
      {
        int v42 = (unsigned char *)((v31 + v44) & v38);
        if (v47 != v33)
        {
          int v42 = (unsigned char *)((unint64_t)&v42[v27 + v28] & ~v28);
          int v41 = *(void (**)(unsigned char *))(v16 + 56);
          goto LABEL_57;
        }
        int v41 = *(void (**)(unsigned char *))(v14 + 56);
LABEL_55:
LABEL_57:
        v41(v42);
        return;
      }
      uint64_t v45 = *(void (**)(unint64_t))(v12 + 56);
      v45(v44);
      return;
  }
}

uint64_t sub_1ACBCB6F8()
{
  return sub_1ACBCB808(&OBJC_IVAR___MTRecommendationModule_id);
}

uint64_t sub_1ACBCB710(uint64_t a1, uint64_t a2)
{
  return sub_1ACBCB8E0(a1, a2, &OBJC_IVAR___MTRecommendationModule_id);
}

uint64_t (*sub_1ACBCB71C())()
{
  return j_j__swift_endAccess;
}

id sub_1ACBCB784()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1ACBCB7FC()
{
  return sub_1ACBCB808(&OBJC_IVAR___MTRecommendationModule_type);
}

uint64_t sub_1ACBCB808(void *a1)
{
  unint64_t v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1ACBCB868(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = sub_1ACE761B8();
  uint64_t v8 = v7;
  unsigned int v9 = (uint64_t *)(a1 + *a4);
  swift_beginAccess();
  *unsigned int v9 = v6;
  v9[1] = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBCB8D4(uint64_t a1, uint64_t a2)
{
  return sub_1ACBCB8E0(a1, a2, &OBJC_IVAR___MTRecommendationModule_type);
}

uint64_t sub_1ACBCB8E0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)(v3 + *a3);
  swift_beginAccess();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBCB93C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = (void *)(*a2 + *a5);
  swift_beginAccess();
  *uint64_t v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1ACBCB9A4())()
{
  return j_j__swift_endAccess;
}

void *RecommendationModule.attributes.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___MTRecommendationModule_attributes);
  id v2 = v1;
  return v1;
}

uint64_t sub_1ACBCBA40()
{
  return sub_1ACBCCE10();
}

uint64_t sub_1ACBCBA4C(uint64_t a1)
{
  return sub_1ACBCCE64(a1, &OBJC_IVAR___MTRecommendationModule_categories);
}

uint64_t (*sub_1ACBCBA58())()
{
  return j__swift_endAccess;
}

uint64_t sub_1ACBCBAB4()
{
  return sub_1ACBCCE10();
}

uint64_t sub_1ACBCBAC0(uint64_t a1)
{
  return sub_1ACBCCE64(a1, &OBJC_IVAR___MTRecommendationModule_shows);
}

uint64_t (*sub_1ACBCBACC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1ACBCBB28(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)(*a2 + *a5);
  swift_beginAccess();
  *uint64_t v6 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBCBB90()
{
  return sub_1ACBCCE10();
}

uint64_t sub_1ACBCBB9C(uint64_t a1)
{
  return sub_1ACBCCE64(a1, &OBJC_IVAR___MTRecommendationModule_episodes);
}

uint64_t (*sub_1ACBCBBA8())()
{
  return j_j__swift_endAccess;
}

BOOL sub_1ACBCBC04()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR___MTRecommendationModule_shows);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (v2)
  {
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1ACE77508();
      swift_bridgeObjectRelease();
      if (v4) {
        return 0;
      }
    }
    else if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      return 0;
    }
  }
  uint64_t v5 = (unint64_t *)(v0 + OBJC_IVAR___MTRecommendationModule_episodes);
  swift_beginAccess();
  unint64_t v6 = *v5;
  if (v6)
  {
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1ACE77508();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  return v7 == 0;
}

uint64_t sub_1ACBCBD14()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701869940;
      break;
    case 2:
      uint64_t result = 0x7475626972747461;
      break;
    case 3:
      uint64_t result = 0x69726F6765746163;
      break;
    case 4:
      uint64_t result = 0x73776F6873;
      break;
    case 5:
      uint64_t result = 0x7365646F73697065;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACBCBDC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACBCEE00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACBCBDEC(uint64_t a1)
{
  unint64_t v2 = sub_1ACBCC2E8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACBCBE28(uint64_t a1)
{
  unint64_t v2 = sub_1ACBCC2E8();
  return MEMORY[0x1F41862B0](a1, v2);
}

id RecommendationModule.__deallocating_deinit()
{
  return sub_1ACBCE200(type metadata accessor for RecommendationModule);
}

uint64_t type metadata accessor for RecommendationModule()
{
  return self;
}

uint64_t sub_1ACBCBF34(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F32A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACBCC2E8();
  sub_1ACE77C78();
  swift_beginAccess();
  char v19 = 0;
  swift_bridgeObjectRetain();
  sub_1ACE77748();
  if (v2)
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    LOBYTE(v18) = 1;
    swift_bridgeObjectRetain();
    sub_1ACE77748();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void *)(v3 + OBJC_IVAR___MTRecommendationModule_attributes);
    LOBYTE(v17) = 2;
    type metadata accessor for RecommendationModuleAttributes();
    sub_1ACBCD7E4(&qword_1E99F32B0, v9, (void (*)(uint64_t))type metadata accessor for RecommendationModuleAttributes);
    sub_1ACE77728();
    uint64_t v10 = (uint64_t *)(v3 + OBJC_IVAR___MTRecommendationModule_categories);
    swift_beginAccess();
    uint64_t v17 = *v10;
    LOBYTE(v16) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770B90);
    sub_1ACBBA3DC();
    sub_1ACE77728();
    uint64_t v11 = (uint64_t *)(v3 + OBJC_IVAR___MTRecommendationModule_shows);
    swift_beginAccess();
    uint64_t v16 = *v11;
    LOBYTE(v15) = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F32B8);
    sub_1ACBCC360();
    sub_1ACE77728();
    uint64_t v12 = (uint64_t *)(v3 + OBJC_IVAR___MTRecommendationModule_episodes);
    swift_beginAccess();
    uint64_t v15 = *v12;
    v14[15] = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F32C8);
    sub_1ACBCC408();
    sub_1ACE77728();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

unint64_t sub_1ACBCC2E8()
{
  unint64_t result = qword_1E99F32A8;
  if (!qword_1E99F32A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F32A8);
  }
  return result;
}

uint64_t type metadata accessor for RecommendationModuleAttributes()
{
  return self;
}

unint64_t sub_1ACBCC360()
{
  unint64_t result = qword_1E99F32C0;
  if (!qword_1E99F32C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F32B8);
    sub_1ACBCD7E4((unint64_t *)&qword_1EB766E48, 255, (void (*)(uint64_t))type metadata accessor for ServerPodcast);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F32C0);
  }
  return result;
}

unint64_t sub_1ACBCC408()
{
  unint64_t result = qword_1E99F32D0;
  if (!qword_1E99F32D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F32C8);
    sub_1ACBCD7E4(&qword_1E99F32D8, 255, (void (*)(uint64_t))type metadata accessor for ServerPodcastEpisode);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F32D0);
  }
  return result;
}

id RecommendationModule.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return RecommendationModule.init(from:)(a1);
}

id RecommendationModule.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F32E0);
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v35 = &v1[OBJC_IVAR___MTRecommendationModule_categories];
  *(void *)&v1[OBJC_IVAR___MTRecommendationModule_categories] = 0;
  int v34 = &v1[OBJC_IVAR___MTRecommendationModule_shows];
  *(void *)&v1[OBJC_IVAR___MTRecommendationModule_shows] = 0;
  size_t v32 = a1;
  unsigned int v33 = &v1[OBJC_IVAR___MTRecommendationModule_episodes];
  *(void *)unsigned int v33 = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACBCC2E8();
  uint64_t v7 = v1;
  sub_1ACE77C48();
  if (v2)
  {
    uint64_t v12 = v7;
    id v28 = v34;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    type metadata accessor for RecommendationModule();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = v30;
    uint64_t v8 = v31;
    LOBYTE(v39) = 0;
    uint64_t v10 = v6;
    uint64_t v11 = sub_1ACE77658();
    uint64_t v14 = v7;
    uint64_t v15 = (uint64_t *)&v7[OBJC_IVAR___MTRecommendationModule_id];
    *uint64_t v15 = v11;
    v15[1] = v16;
    LOBYTE(v39) = 1;
    uint64_t v17 = sub_1ACE77658();
    uint64_t v18 = (uint64_t *)&v7[OBJC_IVAR___MTRecommendationModule_type];
    *uint64_t v18 = v17;
    v18[1] = v19;
    type metadata accessor for RecommendationModuleAttributes();
    LOBYTE(v38) = 2;
    sub_1ACBCD7E4(&qword_1E99F32E8, v20, (void (*)(uint64_t))type metadata accessor for RecommendationModuleAttributes);
    sub_1ACE77638();
    uint64_t v21 = v34;
    uint64_t v22 = v35;
    *(void *)&v14[OBJC_IVAR___MTRecommendationModule_attributes] = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770B90);
    LOBYTE(v39) = 3;
    sub_1ACBCC9E8();
    uint64_t v29 = 0;
    sub_1ACE77638();
    uint64_t v23 = v38;
    swift_beginAccess();
    *(void *)uint64_t v22 = v23;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F32B8);
    LOBYTE(v38) = 4;
    sub_1ACBCCA90();
    sub_1ACE77638();
    uint64_t v24 = v37;
    swift_beginAccess();
    *(void *)uint64_t v21 = v24;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F32C8);
    LOBYTE(v37) = 5;
    sub_1ACBCCB38();
    sub_1ACE77638();
    uint64_t v25 = v40;
    uint64_t v26 = v33;
    swift_beginAccess();
    *(void *)uint64_t v26 = v25;

    swift_bridgeObjectRelease();
    uint64_t v27 = (objc_class *)type metadata accessor for RecommendationModule();
    v36.receiver = v14;
    v36.super_class = v27;
    id v28 = objc_msgSendSuper2(&v36, sel_init);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v10, v8);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  }
  return v28;
}

unint64_t sub_1ACBCC9E8()
{
  unint64_t result = qword_1E99F32F0;
  if (!qword_1E99F32F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB770B90);
    sub_1ACBCD7E4(&qword_1E99F3080, 255, (void (*)(uint64_t))type metadata accessor for ServerCategory);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F32F0);
  }
  return result;
}

unint64_t sub_1ACBCCA90()
{
  unint64_t result = qword_1E99F32F8;
  if (!qword_1E99F32F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F32B8);
    sub_1ACBCD7E4(qword_1EB766E50, 255, (void (*)(uint64_t))type metadata accessor for ServerPodcast);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F32F8);
  }
  return result;
}

unint64_t sub_1ACBCCB38()
{
  unint64_t result = qword_1E99F3300;
  if (!qword_1E99F3300)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F32C8);
    sub_1ACBCD7E4(qword_1EB767AA0, 255, (void (*)(uint64_t))type metadata accessor for ServerPodcastEpisode);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3300);
  }
  return result;
}

id sub_1ACBCCBE0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for RecommendationModule());
  id result = RecommendationModule.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1ACBCCC34(void *a1)
{
  return sub_1ACBCBF34(a1);
}

void *RecommendationModuleAttributes.title.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___MTRecommendationModuleAttributes_title);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void RecommendationModuleAttributes.title.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___MTRecommendationModuleAttributes_title);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*RecommendationModuleAttributes.title.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t RecommendationModuleAttributes.resourceTypes.getter()
{
  return sub_1ACBCCE10();
}

uint64_t sub_1ACBCCE10()
{
  return swift_bridgeObjectRetain();
}

uint64_t RecommendationModuleAttributes.resourceTypes.setter(uint64_t a1)
{
  return sub_1ACBCCE64(a1, &OBJC_IVAR___MTRecommendationModuleAttributes_resourceTypes);
}

uint64_t sub_1ACBCCE64(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  void *v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*RecommendationModuleAttributes.resourceTypes.modify())()
{
  return j_j__swift_endAccess;
}

id RecommendationModuleAttributes.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR___MTRecommendationModuleAttributes_title] = 0;
  *(void *)&v0[OBJC_IVAR___MTRecommendationModuleAttributes_resourceTypes] = 0;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t sub_1ACBCCFB8()
{
  if (*v0) {
    return 0x656372756F736572;
  }
  else {
    return 0x656C746974;
  }
}

uint64_t sub_1ACBCCFFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACBCF06C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACBCD024(uint64_t a1)
{
  unint64_t v2 = sub_1ACBCD32C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACBCD060(uint64_t a1)
{
  unint64_t v2 = sub_1ACBCD32C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RecommendationModuleAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3318);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACBCD32C();
  sub_1ACE77C78();
  uint64_t v9 = (uint64_t *)(v3 + OBJC_IVAR___MTRecommendationModuleAttributes_title);
  swift_beginAccess();
  uint64_t v15 = *v9;
  LOBYTE(v14) = 0;
  type metadata accessor for RecommendationModuleTitle();
  sub_1ACBCD7E4(&qword_1E99F3328, v10, (void (*)(uint64_t))type metadata accessor for RecommendationModuleTitle);
  sub_1ACE77728();
  if (!v2)
  {
    uint64_t v11 = (uint64_t *)(v3 + OBJC_IVAR___MTRecommendationModuleAttributes_resourceTypes);
    swift_beginAccess();
    uint64_t v14 = *v11;
    v13[7] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3330);
    sub_1ACBCD3A4(&qword_1E99F3338, (void (*)(void))sub_1ACBCD414);
    sub_1ACE77728();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1ACBCD32C()
{
  unint64_t result = qword_1E99F3320;
  if (!qword_1E99F3320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3320);
  }
  return result;
}

uint64_t type metadata accessor for RecommendationModuleTitle()
{
  return self;
}

uint64_t sub_1ACBCD3A4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F3330);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACBCD414()
{
  unint64_t result = qword_1E99F3340;
  if (!qword_1E99F3340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3340);
  }
  return result;
}

id RecommendationModuleAttributes.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return RecommendationModuleAttributes.init(from:)(a1);
}

id RecommendationModuleAttributes.init(from:)(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3348);
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (id *)&v1[OBJC_IVAR___MTRecommendationModuleAttributes_title];
  *(void *)&v1[OBJC_IVAR___MTRecommendationModuleAttributes_title] = 0;
  uint64_t v7 = &v1[OBJC_IVAR___MTRecommendationModuleAttributes_resourceTypes];
  *(void *)&v1[OBJC_IVAR___MTRecommendationModuleAttributes_resourceTypes] = 0;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACBCD32C();
  uint64_t v9 = v1;
  id v28 = v5;
  id v10 = v8;
  uint64_t v12 = (objc_class *)ObjectType;
  uint64_t v11 = v30;
  unsigned int v13 = v9;
  sub_1ACE77C48();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v30 = v6;
    uint64_t v25 = a1;
    uint64_t v14 = v7;
    uint64_t v15 = v26;
    type metadata accessor for RecommendationModuleTitle();
    char v33 = 0;
    sub_1ACBCD7E4(&qword_1E99F3350, v16, (void (*)(uint64_t))type metadata accessor for RecommendationModuleTitle);
    uint64_t v17 = v27;
    sub_1ACE77638();
    uint64_t v18 = v32;
    uint64_t v19 = v30;
    swift_beginAccess();
    uint64_t v20 = *v19;
    char *v19 = v18;

    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3330);
    LOBYTE(v32) = 1;
    uint64_t v21 = v28;
    sub_1ACBCD3A4(&qword_1E99F3358, (void (*)(void))sub_1ACBCD82C);
    sub_1ACE77638();
    uint64_t v23 = v21;
    uint64_t v24 = v34;
    swift_beginAccess();
    *(void *)uint64_t v14 = v24;

    swift_bridgeObjectRelease();
    v31.receiver = v13;
    v31.super_class = v12;
    id v10 = objc_msgSendSuper2(&v31, sel_init);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v17);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  }
  return v10;
}

uint64_t sub_1ACBCD7E4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACBCD82C()
{
  unint64_t result = qword_1E99F3360;
  if (!qword_1E99F3360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3360);
  }
  return result;
}

uint64_t sub_1ACBCD880@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACBCE098(a1, (uint64_t (*)(uint64_t))RecommendationModuleAttributes.init(from:), a2);
}

uint64_t sub_1ACBCD8AC(void *a1)
{
  return RecommendationModuleAttributes.encode(to:)(a1);
}

uint64_t RecommendationModuleTitle.stringForDisplay.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___MTRecommendationModuleTitle_stringForDisplay);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t RecommendationModuleTitle.stringForDisplay.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___MTRecommendationModuleTitle_stringForDisplay);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*RecommendationModuleTitle.stringForDisplay.modify())()
{
  return j_j__swift_endAccess;
}

id RecommendationModuleTitle.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = &v0[OBJC_IVAR___MTRecommendationModuleTitle_stringForDisplay];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_init);
}

unint64_t sub_1ACBCDB84()
{
  return 0xD000000000000010;
}

uint64_t sub_1ACBCDBA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACBCF17C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1ACBCDBCC(uint64_t a1)
{
  unint64_t v2 = sub_1ACBCDDC4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACBCDC08(uint64_t a1)
{
  unint64_t v2 = sub_1ACBCDDC4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RecommendationModuleTitle.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3370);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACBCDDC4();
  sub_1ACE77C78();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1ACE776E8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1ACBCDDC4()
{
  unint64_t result = qword_1E99F3378;
  if (!qword_1E99F3378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3378);
  }
  return result;
}

id RecommendationModuleTitle.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return RecommendationModuleTitle.init(from:)(a1);
}

id RecommendationModuleTitle.init(from:)(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3380);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t *)&v1[OBJC_IVAR___MTRecommendationModuleTitle_stringForDisplay];
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACBCDDC4();
  uint64_t v8 = v1;
  id v9 = v7;
  id v10 = (objc_class *)ObjectType;
  uint64_t v11 = v20;
  sub_1ACE77C48();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v13 = sub_1ACE775F8();
    uint64_t v15 = v14;
    swift_beginAccess();
    *uint64_t v6 = v13;
    v6[1] = v15;

    swift_bridgeObjectRelease();
    v19.receiver = v8;
    v19.super_class = v10;
    id v9 = objc_msgSendSuper2(&v19, sel_init);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v9;
}

uint64_t sub_1ACBCE06C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACBCE098(a1, (uint64_t (*)(uint64_t))RecommendationModuleTitle.init(from:), a2);
}

uint64_t sub_1ACBCE098@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  id v8 = objc_allocWithZone(v3);
  uint64_t result = a2(a1);
  if (!v4) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1ACBCE0F8(void *a1)
{
  return RecommendationModuleTitle.encode(to:)(a1);
}

id RecentlyPlayedModule.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id RecentlyPlayedModule.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecentlyPlayedModule();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for RecentlyPlayedModule()
{
  return self;
}

id RecentlyPlayedModule.__deallocating_deinit()
{
  return sub_1ACBCE200(type metadata accessor for RecentlyPlayedModule);
}

id sub_1ACBCE200(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1ACBCE238@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___MTRecommendationModule_id, a2);
}

uint64_t sub_1ACBCE244(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACBCB93C(a1, a2, a3, a4, &OBJC_IVAR___MTRecommendationModule_id);
}

uint64_t sub_1ACBCE264@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___MTRecommendationModule_type, a2);
}

uint64_t keypath_getTm@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  uint64_t v4 = (void *)(*a1 + *a2);
  swift_beginAccess();
  uint64_t v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACBCE2C4(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACBCB93C(a1, a2, a3, a4, &OBJC_IVAR___MTRecommendationModule_type);
}

uint64_t sub_1ACBCE2E4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR___MTRecommendationModule_categories, a2);
}

uint64_t sub_1ACBCE2F0(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACBCBB28(a1, a2, a3, a4, &OBJC_IVAR___MTRecommendationModule_categories);
}

uint64_t sub_1ACBCE310@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR___MTRecommendationModule_shows, a2);
}

uint64_t sub_1ACBCE31C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACBCBB28(a1, a2, a3, a4, &OBJC_IVAR___MTRecommendationModule_shows);
}

uint64_t sub_1ACBCE33C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR___MTRecommendationModule_episodes, a2);
}

uint64_t keypath_get_4Tm@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  uint64_t v4 = (void *)(*a1 + *a2);
  swift_beginAccess();
  *a3 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACBCE39C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACBCBB28(a1, a2, a3, a4, &OBJC_IVAR___MTRecommendationModule_episodes);
}

uint64_t method lookup function for RecommendationModule(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecommendationModule);
}

uint64_t dispatch thunk of RecommendationModule.id.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of RecommendationModule.id.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of RecommendationModule.id.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of RecommendationModule.type.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of RecommendationModule.type.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of RecommendationModule.type.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of RecommendationModule.categories.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of RecommendationModule.categories.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of RecommendationModule.categories.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of RecommendationModule.shows.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of RecommendationModule.shows.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of RecommendationModule.shows.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of RecommendationModule.episodes.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of RecommendationModule.episodes.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of RecommendationModule.episodes.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of RecommendationModule.isEmpty.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of RecommendationModule.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of RecommendationModule.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t method lookup function for RecommendationModuleAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecommendationModuleAttributes);
}

uint64_t dispatch thunk of RecommendationModuleAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t method lookup function for RecommendationModuleTitle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecommendationModuleTitle);
}

uint64_t dispatch thunk of RecommendationModuleTitle.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

unsigned char *storeEnumTagSinglePayload for RecommendationModuleTitle.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACBCE8A8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationModuleTitle.CodingKeys()
{
  return &type metadata for RecommendationModuleTitle.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RecommendationModuleAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACBCE9ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationModuleAttributes.CodingKeys()
{
  return &type metadata for RecommendationModuleAttributes.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RecommendationModule.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACBCEAB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationModule.CodingKeys()
{
  return &type metadata for RecommendationModule.CodingKeys;
}

unint64_t sub_1ACBCEAEC()
{
  unint64_t result = qword_1E99F3388;
  if (!qword_1E99F3388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3388);
  }
  return result;
}

unint64_t sub_1ACBCEB44()
{
  unint64_t result = qword_1E99F3390;
  if (!qword_1E99F3390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3390);
  }
  return result;
}

unint64_t sub_1ACBCEB9C()
{
  unint64_t result = qword_1E99F3398;
  if (!qword_1E99F3398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3398);
  }
  return result;
}

unint64_t sub_1ACBCEBF4()
{
  unint64_t result = qword_1E99F33A0;
  if (!qword_1E99F33A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F33A0);
  }
  return result;
}

unint64_t sub_1ACBCEC4C()
{
  unint64_t result = qword_1E99F33A8;
  if (!qword_1E99F33A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F33A8);
  }
  return result;
}

unint64_t sub_1ACBCECA4()
{
  unint64_t result = qword_1E99F33B0;
  if (!qword_1E99F33B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F33B0);
  }
  return result;
}

unint64_t sub_1ACBCECFC()
{
  unint64_t result = qword_1E99F33B8;
  if (!qword_1E99F33B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F33B8);
  }
  return result;
}

unint64_t sub_1ACBCED54()
{
  unint64_t result = qword_1E99F33C0;
  if (!qword_1E99F33C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F33C0);
  }
  return result;
}

unint64_t sub_1ACBCEDAC()
{
  unint64_t result = qword_1E99F33C8;
  if (!qword_1E99F33C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F33C8);
  }
  return result;
}

uint64_t sub_1ACBCEE00(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69726F6765746163 && a2 == 0xEA00000000007365 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73776F6873 && a2 == 0xE500000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7365646F73697065 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1ACBCF06C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656372756F736572 && a2 == 0xED00007365707954)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACBCF17C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001ACECBED0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t MetricsEventVersion.debugDescription.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t sub_1ACBCF2B8()
{
  return MetricsEventVersion.debugDescription.getter();
}

uint64_t MetricsEventVersion.description.getter()
{
  return sub_1ACE770B8();
}

unint64_t sub_1ACBCF300()
{
  unint64_t result = qword_1E99F33D0;
  if (!qword_1E99F33D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F33D0);
  }
  return result;
}

uint64_t sub_1ACBCF354()
{
  return sub_1ACE770B8();
}

uint64_t MetricsEventVersion.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_1ACE77898();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1ACBCF454@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  uint64_t v5 = sub_1ACE77898();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v5;
  return result;
}

uint64_t MetricsEventVersion.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE77928();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t sub_1ACBCF5A8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE77928();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsEventVersion.v1.getter()
{
  return 1;
}

uint64_t static MetricsEventVersion.v2.getter()
{
  return 2;
}

uint64_t static MetricsEventVersion.v3.getter()
{
  return 3;
}

uint64_t static MetricsEventVersion.v4.getter()
{
  return 4;
}

uint64_t static MetricsEventVersion.v5.getter()
{
  return 5;
}

unint64_t sub_1ACBCF668()
{
  unint64_t result = qword_1E99F33D8;
  if (!qword_1E99F33D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F33D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEventVersion()
{
  return &type metadata for MetricsEventVersion;
}

double sub_1ACBCF6CC(uint64_t a1)
{
  v6[1] = *(mach_timebase_info *)MEMORY[0x1E4F143B8];
  uint64_t v2 = mach_absolute_time();
  BOOL v3 = v2 >= a1;
  unint64_t v4 = v2 - a1;
  if (!v3)
  {
    __break(1u);
LABEL_6:
    __break(1u);
LABEL_7:
    __break(1u);
  }
  v6[0] = 0;
  mach_timebase_info(v6);
  if (!is_mul_ok(v4, v6[0].numer)) {
    goto LABEL_6;
  }
  if (!v6[0].denom) {
    goto LABEL_7;
  }
  return (double)(v4 * v6[0].numer / v6[0].denom) / 1000000000.0;
}

uint64_t sub_1ACBCF778@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7726E8);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  char v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  id v8 = (char *)&v14 - v7;
  uint64_t v9 = v1 + OBJC_IVAR____TtC18PodcastsFoundation20PodcastsMediaLibrary____lazy_storage___signpostID;
  swift_beginAccess();
  sub_1ACA3AAD4(v9, (uint64_t)v8, &qword_1EB7726E8);
  uint64_t v10 = sub_1ACE753F8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_1ACA50E78((uint64_t)v8, &qword_1EB7726E8);
  if (qword_1E99F0060 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v12 = (id)qword_1E99F2EA8;
  swift_retain();
  sub_1ACE753B8();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_1ACBD4D3C((uint64_t)v6, v9, &qword_1EB7726E8);
  return swift_endAccess();
}

uint64_t PodcastsMediaLibrary.__allocating_init(config:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + OBJC_IVAR____TtC18PodcastsFoundation20PodcastsMediaLibrary____lazy_storage___signpostID;
  uint64_t v4 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  long long v5 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v2 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v2 + 96) = v5;
  *(void *)(v2 + 112) = *(void *)(a1 + 96);
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v2 + 64) = v7;
  return v2;
}

uint64_t PodcastsMediaLibrary.init(config:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation20PodcastsMediaLibrary____lazy_storage___signpostID;
  uint64_t v4 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  long long v5 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 96) = v5;
  *(void *)(v1 + 112) = *(void *)(a1 + 96);
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 64) = v7;
  return v1;
}

uint64_t sub_1ACBCFB08(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v79 = a2;
  uint64_t v82 = sub_1ACE753F8();
  uint64_t v5 = *(void *)(v82 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v82);
  uint64_t v81 = (uint64_t)v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v77 = (char *)v72 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v76 = (uint64_t)v72 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v72 - v12;
  uint64_t v78 = swift_allocObject();
  uint64_t v73 = a3;
  *(void *)(v78 + 16) = a3;
  long long v14 = *(_OWORD *)(a1 + 176);
  long long v125 = *(_OWORD *)(a1 + 160);
  long long v126 = v14;
  long long v127 = *(_OWORD *)(a1 + 192);
  char v128 = *(unsigned char *)(a1 + 208);
  long long v15 = *(_OWORD *)(a1 + 112);
  long long v121 = *(_OWORD *)(a1 + 96);
  long long v122 = v15;
  long long v16 = *(_OWORD *)(a1 + 144);
  long long v123 = *(_OWORD *)(a1 + 128);
  long long v124 = v16;
  long long v17 = *(_OWORD *)(a1 + 48);
  long long v117 = *(_OWORD *)(a1 + 32);
  long long v118 = v17;
  long long v18 = *(_OWORD *)(a1 + 80);
  long long v119 = *(_OWORD *)(a1 + 64);
  long long v120 = v18;
  long long v19 = *(_OWORD *)(a1 + 16);
  long long v115 = *(_OWORD *)a1;
  long long v116 = v19;
  uint64_t v80 = mach_absolute_time();
  if (qword_1E99EFF10 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1ACE754C8();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1E99F2C40);
  sub_1ACA64A2C((uint64_t)&v115);
  sub_1ACA64A2C((uint64_t)&v115);
  v72[1] = v21;
  uint64_t v22 = sub_1ACE75498();
  os_log_type_t v23 = sub_1ACE76C08();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v75 = v13;
    uint64_t v25 = (uint8_t *)v24;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v74 = v26;
    *(_DWORD *)uint64_t v25 = 136315138;
    v83[0] = v26;
    v72[0] = v25 + 4;
    long long v94 = v125;
    long long v95 = v126;
    long long v96 = v127;
    char v97 = v128;
    long long v90 = v121;
    long long v91 = v122;
    long long v92 = v123;
    long long v93 = v124;
    long long v86 = v117;
    long long v87 = v118;
    long long v88 = v119;
    long long v89 = v120;
    long long v84 = v115;
    long long v85 = v116;
    sub_1ACDD2440();
    uint64_t v27 = MEMORY[0x1AD118740]();
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    *(void *)&long long v84 = sub_1ACA3189C(v27, v29, v83);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACA64E8C((uint64_t)&v115);
    sub_1ACA64E8C((uint64_t)&v115);
    _os_log_impl(&dword_1AC9D5000, v22, v23, "Calling media collection with request: %s", v25, 0xCu);
    uint64_t v30 = v74;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v30, -1, -1);
    objc_super v31 = v25;
    uint64_t v13 = v75;
    MEMORY[0x1AD11B340](v31, -1, -1);
  }
  else
  {
    sub_1ACA64E8C((uint64_t)&v115);
    sub_1ACA64E8C((uint64_t)&v115);
  }

  sub_1ACE76E18();
  if (qword_1E99F0060 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v32 = (id)qword_1E99F2EA8;
  char v33 = v79;
  sub_1ACBCF778((uint64_t)v13);
  sub_1ACE753A8();

  uint64_t v34 = *(char **)(v5 + 8);
  uint64_t v35 = v82;
  uint64_t v74 = v5 + 8;
  uint64_t v75 = v34;
  ((void (*)(char *, uint64_t))v34)(v13, v82);
  uint64_t v36 = v76;
  sub_1ACBCF778(v76);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v38 = v77;
  v37(v77, v36, v35);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(v81, v38, v35);
  unint64_t v39 = (*(unsigned __int8 *)(v5 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v40 = swift_allocObject();
  uint64_t v41 = v78;
  *(void *)(v40 + 16) = sub_1ACBD4C98;
  *(void *)(v40 + 24) = v41;
  *(void *)(v40 + 32) = v80;
  *(void *)(v40 + 40) = "mediaCollection(for:completion:)";
  *(void *)(v40 + 48) = 32;
  *(unsigned char *)(v40 + 56) = 2;
  v37((char *)(v40 + v39), (uint64_t)v38, v35);
  long long v94 = v125;
  long long v95 = v126;
  long long v96 = v127;
  char v97 = v128;
  long long v90 = v121;
  long long v91 = v122;
  long long v92 = v123;
  long long v93 = v124;
  long long v86 = v117;
  long long v87 = v118;
  long long v88 = v119;
  long long v89 = v120;
  int v42 = v33 + 2;
  long long v84 = v115;
  long long v85 = v116;
  swift_retain();
  sub_1ACDF3E54(v33 + 2, (uint64_t)&v101);
  uint64_t v43 = v33[5];
  uint64_t v44 = v33[6];
  __swift_project_boxed_opaque_existential_1(v42, v43);
  int v45 = BYTE8(v111);
  (*(void (**)(long long *__return_ptr, void, uint64_t, uint64_t))(v44 + 8))(&v84, BYTE8(v111), v43, v44);
  if (*((void *)&v85 + 1))
  {
    sub_1ACA3AABC(&v84, (uint64_t)v98);
    uint64_t v46 = v99;
    uint64_t v47 = v100;
    __swift_project_boxed_opaque_existential_1(v98, v99);
    long long v94 = v111;
    long long v95 = v112;
    long long v96 = v113;
    char v97 = v114;
    long long v90 = v107;
    long long v91 = v108;
    long long v92 = v109;
    long long v93 = v110;
    long long v86 = v103;
    long long v87 = v104;
    long long v88 = v105;
    long long v89 = v106;
    long long v84 = v101;
    long long v85 = v102;
    if ((*(uint64_t (**)(long long *, uint64_t, uint64_t))(v47 + 16))(&v84, v46, v47))
    {
      ((void (*)(uint64_t, uint64_t))v75)(v81, v82);
      uint64_t v48 = v99;
      uint64_t v49 = v100;
      __swift_project_boxed_opaque_existential_1(v98, v99);
      long long v94 = v111;
      long long v95 = v112;
      long long v96 = v113;
      char v97 = v114;
      long long v90 = v107;
      long long v91 = v108;
      long long v92 = v109;
      long long v93 = v110;
      long long v86 = v103;
      long long v87 = v104;
      long long v88 = v105;
      long long v89 = v106;
      long long v84 = v101;
      long long v85 = v102;
      uint64_t v50 = swift_allocObject();
      long long v51 = v112;
      *(_OWORD *)(v50 + 184) = v111;
      *(_OWORD *)(v50 + 200) = v51;
      *(_OWORD *)(v50 + 216) = v113;
      long long v52 = v108;
      *(_OWORD *)(v50 + 120) = v107;
      *(_OWORD *)(v50 + 136) = v52;
      long long v53 = v110;
      *(_OWORD *)(v50 + 152) = v109;
      *(_OWORD *)(v50 + 168) = v53;
      long long v54 = v104;
      *(_OWORD *)(v50 + 56) = v103;
      *(_OWORD *)(v50 + 72) = v54;
      long long v55 = v106;
      *(_OWORD *)(v50 + 88) = v105;
      *(_OWORD *)(v50 + 104) = v55;
      long long v56 = v102;
      *(_OWORD *)(v50 + 24) = v101;
      *(void *)(v50 + 16) = v79;
      *(unsigned char *)(v50 + 232) = v114;
      *(_OWORD *)(v50 + 40) = v56;
      *(void *)(v50 + 240) = sub_1ACBD3F9C;
      *(void *)(v50 + 248) = v40;
      *(void *)(v50 + 256) = sub_1ACBD4C98;
      *(void *)(v50 + 264) = v41;
      uint64_t v57 = *(void (**)(long long *, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v49 + 8);
      swift_retain();
      sub_1ACA64A2C((uint64_t)&v101);
      swift_retain();
      swift_retain();
      v57(&v84, sub_1ACBD3FA4, v50, v48, v49);
      swift_release();
      swift_release();
      sub_1ACA64E8C((uint64_t)&v101);
    }
    else
    {
      uint64_t v66 = sub_1ACE75498();
      os_log_type_t v67 = sub_1ACE76BE8();
      if (os_log_type_enabled(v66, v67))
      {
        uint64_t v68 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v68 = 0;
        _os_log_impl(&dword_1AC9D5000, v66, v67, "No provider for request found", v68, 2u);
        MEMORY[0x1AD11B340](v68, -1, -1);
      }

      *(void *)&long long v84 = 1;
      sub_1ACA63458((uint64_t)&v84);
      sub_1ACA50E14((uint64_t)&v84, (uint64_t)v83, &qword_1E99F0F48);
      uint64_t v69 = v81;
      sub_1ACBD1018((uint64_t)v83, v80, (uint64_t)"mediaCollection(for:completion:)", 32, 2, v81, v73);
      swift_release();
      sub_1ACA64E8C((uint64_t)&v101);
      ((void (*)(uint64_t, uint64_t))v75)(v69, v82);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v98);
  }
  else
  {
    sub_1ACA50E78((uint64_t)&v84, (uint64_t *)&unk_1E99F33E8);
    sub_1ACA64A2C((uint64_t)&v101);
    sub_1ACA64A2C((uint64_t)&v101);
    uint64_t v58 = sub_1ACE75498();
    os_log_type_t v59 = sub_1ACE76BE8();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      *(void *)&long long v84 = v61;
      *(_DWORD *)uint64_t v60 = 136446210;
      unint64_t v62 = 0xEC00000079726172;
      uint64_t v63 = 0x62694C6C61636F6CLL;
      if (v45 != 1)
      {
        uint64_t v63 = 0x7265666E69;
        unint64_t v62 = 0xE500000000000000;
      }
      if (v45) {
        uint64_t v64 = v63;
      }
      else {
        uint64_t v64 = 0x495041616964656DLL;
      }
      if (v45) {
        unint64_t v65 = v62;
      }
      else {
        unint64_t v65 = 0xE800000000000000;
      }
      v83[0] = sub_1ACA3189C(v64, v65, (uint64_t *)&v84);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACA64E8C((uint64_t)&v101);
      sub_1ACA64E8C((uint64_t)&v101);
      _os_log_impl(&dword_1AC9D5000, v58, v59, "No provider for %{public}s found", v60, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v61, -1, -1);
      MEMORY[0x1AD11B340](v60, -1, -1);
    }
    else
    {
      sub_1ACA64E8C((uint64_t)&v101);
      sub_1ACA64E8C((uint64_t)&v101);
    }
    *(void *)&long long v84 = 0;
    sub_1ACA63458((uint64_t)&v84);
    sub_1ACA50E14((uint64_t)&v84, (uint64_t)v83, &qword_1E99F0F48);
    uint64_t v70 = v81;
    sub_1ACBD1018((uint64_t)v83, v80, (uint64_t)"mediaCollection(for:completion:)", 32, 2, v81, v73);
    swift_release();
    sub_1ACA64E8C((uint64_t)&v101);
    ((void (*)(uint64_t, uint64_t))v75)(v70, v82);
  }
  return swift_release();
}

uint64_t sub_1ACBD05AC(uint64_t a1, void (*a2)(void *), uint64_t a3)
{
  uint64_t v75 = a3;
  uint64_t v80 = a2;
  uint64_t v79 = sub_1ACE753F8();
  uint64_t v4 = *(void *)(v79 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = MEMORY[0x1F4188790](v79);
  uint64_t v78 = (char *)v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v74 = (char *)v70 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v73 = (uint64_t)v70 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v70 - v11;
  long long v13 = *(_OWORD *)(a1 + 176);
  long long v123 = *(_OWORD *)(a1 + 160);
  long long v124 = v13;
  long long v125 = *(_OWORD *)(a1 + 192);
  char v126 = *(unsigned char *)(a1 + 208);
  long long v14 = *(_OWORD *)(a1 + 112);
  long long v119 = *(_OWORD *)(a1 + 96);
  long long v120 = v14;
  long long v15 = *(_OWORD *)(a1 + 144);
  long long v121 = *(_OWORD *)(a1 + 128);
  long long v122 = v15;
  long long v16 = *(_OWORD *)(a1 + 48);
  long long v115 = *(_OWORD *)(a1 + 32);
  long long v116 = v16;
  long long v17 = *(_OWORD *)(a1 + 80);
  long long v117 = *(_OWORD *)(a1 + 64);
  long long v118 = v17;
  long long v18 = *(_OWORD *)(a1 + 16);
  long long v113 = *(_OWORD *)a1;
  long long v114 = v18;
  uint64_t v77 = mach_absolute_time();
  if (qword_1E99EFF10 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1ACE754C8();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1E99F2C40);
  sub_1ACA64A2C((uint64_t)&v113);
  sub_1ACA64A2C((uint64_t)&v113);
  v70[1] = v20;
  uint64_t v21 = sub_1ACE75498();
  os_log_type_t v22 = sub_1ACE76C08();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v72 = v12;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v71 = v25;
    *(_DWORD *)uint64_t v24 = 136315138;
    v81[0] = v25;
    v70[0] = v24 + 4;
    long long v92 = v123;
    long long v93 = v124;
    long long v94 = v125;
    char v95 = v126;
    long long v88 = v119;
    long long v89 = v120;
    long long v90 = v121;
    long long v91 = v122;
    long long v84 = v115;
    long long v85 = v116;
    long long v86 = v117;
    long long v87 = v118;
    long long v82 = v113;
    long long v83 = v114;
    sub_1ACDD2440();
    uint64_t v26 = MEMORY[0x1AD118740]();
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    *(void *)&long long v82 = sub_1ACA3189C(v26, v28, v81);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACA64E8C((uint64_t)&v113);
    sub_1ACA64E8C((uint64_t)&v113);
    _os_log_impl(&dword_1AC9D5000, v21, v22, "Calling media collection with request: %s", v24, 0xCu);
    uint64_t v29 = v71;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v29, -1, -1);
    uint64_t v30 = v24;
    uint64_t v12 = v72;
    MEMORY[0x1AD11B340](v30, -1, -1);
  }
  else
  {
    sub_1ACA64E8C((uint64_t)&v113);
    sub_1ACA64E8C((uint64_t)&v113);
  }

  sub_1ACE76E18();
  if (qword_1E99F0060 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v31 = (id)qword_1E99F2EA8;
  id v32 = v76;
  sub_1ACBCF778((uint64_t)v12);
  sub_1ACE753A8();

  char v33 = *(char **)(v4 + 8);
  uint64_t v34 = v79;
  uint64_t v71 = v4 + 8;
  uint64_t v72 = v33;
  ((void (*)(char *, uint64_t))v33)(v12, v79);
  uint64_t v35 = v73;
  sub_1ACBCF778(v73);
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  uint64_t v37 = v74;
  v36(v74, v35, v34);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v78, v37, v34);
  unint64_t v38 = (*(unsigned __int8 *)(v4 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v39 = swift_allocObject();
  uint64_t v40 = v75;
  *(void *)(v39 + 16) = v80;
  *(void *)(v39 + 24) = v40;
  *(void *)(v39 + 32) = v77;
  *(void *)(v39 + 40) = "mediaCollection(for:completion:)";
  *(void *)(v39 + 48) = 32;
  *(unsigned char *)(v39 + 56) = 2;
  v36((char *)(v39 + v38), (uint64_t)v37, v34);
  long long v92 = v123;
  long long v93 = v124;
  long long v94 = v125;
  char v95 = v126;
  long long v88 = v119;
  long long v89 = v120;
  long long v90 = v121;
  long long v91 = v122;
  long long v84 = v115;
  long long v85 = v116;
  long long v86 = v117;
  long long v87 = v118;
  long long v82 = v113;
  long long v83 = v114;
  swift_retain();
  sub_1ACDF3E54(v32 + 2, (uint64_t)&v99);
  uint64_t v41 = v32[5];
  uint64_t v42 = v32[6];
  __swift_project_boxed_opaque_existential_1(v32 + 2, v41);
  int v43 = BYTE8(v109);
  (*(void (**)(long long *__return_ptr, void, uint64_t, uint64_t))(v42 + 8))(&v82, BYTE8(v109), v41, v42);
  if (*((void *)&v83 + 1))
  {
    sub_1ACA3AABC(&v82, (uint64_t)v96);
    uint64_t v44 = v97;
    uint64_t v45 = v98;
    __swift_project_boxed_opaque_existential_1(v96, v97);
    long long v92 = v109;
    long long v93 = v110;
    long long v94 = v111;
    char v95 = v112;
    long long v88 = v105;
    long long v89 = v106;
    long long v90 = v107;
    long long v91 = v108;
    long long v84 = v101;
    long long v85 = v102;
    long long v86 = v103;
    long long v87 = v104;
    long long v82 = v99;
    long long v83 = v100;
    if ((*(uint64_t (**)(long long *, uint64_t, uint64_t))(v45 + 16))(&v82, v44, v45))
    {
      ((void (*)(char *, uint64_t))v72)(v78, v79);
      uint64_t v46 = v97;
      uint64_t v47 = v98;
      __swift_project_boxed_opaque_existential_1(v96, v97);
      long long v92 = v109;
      long long v93 = v110;
      long long v94 = v111;
      char v95 = v112;
      long long v88 = v105;
      long long v89 = v106;
      long long v90 = v107;
      long long v91 = v108;
      long long v84 = v101;
      long long v85 = v102;
      long long v86 = v103;
      long long v87 = v104;
      long long v82 = v99;
      long long v83 = v100;
      uint64_t v48 = swift_allocObject();
      long long v49 = v110;
      *(_OWORD *)(v48 + 184) = v109;
      *(_OWORD *)(v48 + 200) = v49;
      *(_OWORD *)(v48 + 216) = v111;
      long long v50 = v106;
      *(_OWORD *)(v48 + 120) = v105;
      *(_OWORD *)(v48 + 136) = v50;
      long long v51 = v108;
      *(_OWORD *)(v48 + 152) = v107;
      *(_OWORD *)(v48 + 168) = v51;
      long long v52 = v102;
      *(_OWORD *)(v48 + 56) = v101;
      *(_OWORD *)(v48 + 72) = v52;
      long long v53 = v104;
      *(_OWORD *)(v48 + 88) = v103;
      *(_OWORD *)(v48 + 104) = v53;
      long long v54 = v100;
      *(_OWORD *)(v48 + 24) = v99;
      *(void *)(v48 + 16) = v76;
      *(unsigned char *)(v48 + 232) = v112;
      *(_OWORD *)(v48 + 40) = v54;
      *(void *)(v48 + 240) = sub_1ACBD3F9C;
      *(void *)(v48 + 248) = v39;
      *(void *)(v48 + 256) = v80;
      *(void *)(v48 + 264) = v40;
      long long v55 = *(void (**)(long long *, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v47 + 8);
      swift_retain();
      swift_retain();
      sub_1ACA64A2C((uint64_t)&v99);
      swift_retain();
      v55(&v82, sub_1ACBD3FA4, v48, v46, v47);
      swift_release();
      swift_release();
      sub_1ACA64E8C((uint64_t)&v99);
    }
    else
    {
      uint64_t v64 = sub_1ACE75498();
      os_log_type_t v65 = sub_1ACE76BE8();
      if (os_log_type_enabled(v64, v65))
      {
        uint64_t v66 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v66 = 0;
        _os_log_impl(&dword_1AC9D5000, v64, v65, "No provider for request found", v66, 2u);
        MEMORY[0x1AD11B340](v66, -1, -1);
      }

      *(void *)&long long v82 = 1;
      sub_1ACA63458((uint64_t)&v82);
      sub_1ACA50E14((uint64_t)&v82, (uint64_t)v81, &qword_1E99F0F48);
      os_log_type_t v67 = v78;
      sub_1ACBD1364((uint64_t)v81, v80, v40, v77);
      swift_release();
      sub_1ACA64E8C((uint64_t)&v99);
      ((void (*)(char *, uint64_t))v72)(v67, v79);
    }
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v96);
  }
  else
  {
    sub_1ACA50E78((uint64_t)&v82, (uint64_t *)&unk_1E99F33E8);
    sub_1ACA64A2C((uint64_t)&v99);
    sub_1ACA64A2C((uint64_t)&v99);
    long long v56 = sub_1ACE75498();
    os_log_type_t v57 = sub_1ACE76BE8();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      *(void *)&long long v82 = v59;
      *(_DWORD *)uint64_t v58 = 136446210;
      unint64_t v60 = 0xEC00000079726172;
      uint64_t v61 = 0x62694C6C61636F6CLL;
      if (v43 != 1)
      {
        uint64_t v61 = 0x7265666E69;
        unint64_t v60 = 0xE500000000000000;
      }
      if (v43) {
        uint64_t v62 = v61;
      }
      else {
        uint64_t v62 = 0x495041616964656DLL;
      }
      if (v43) {
        unint64_t v63 = v60;
      }
      else {
        unint64_t v63 = 0xE800000000000000;
      }
      v81[0] = sub_1ACA3189C(v62, v63, (uint64_t *)&v82);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACA64E8C((uint64_t)&v99);
      sub_1ACA64E8C((uint64_t)&v99);
      _os_log_impl(&dword_1AC9D5000, v56, v57, "No provider for %{public}s found", v58, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v59, -1, -1);
      MEMORY[0x1AD11B340](v58, -1, -1);
    }
    else
    {
      sub_1ACA64E8C((uint64_t)&v99);
      sub_1ACA64E8C((uint64_t)&v99);
    }
    *(void *)&long long v82 = 0;
    sub_1ACA63458((uint64_t)&v82);
    sub_1ACA50E14((uint64_t)&v82, (uint64_t)v81, &qword_1E99F0F48);
    uint64_t v69 = v78;
    sub_1ACBD1364((uint64_t)v81, v80, v40, v77);
    swift_release();
    sub_1ACA64E8C((uint64_t)&v99);
    return ((uint64_t (*)(char *, uint64_t))v72)(v69, v79);
  }
}

void sub_1ACBD1018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1ACA50E14(a1, (uint64_t)v34, &qword_1E99F0F48);
  sub_1ACA50E14((uint64_t)v34, (uint64_t)v35, &qword_1E99F0F48);
  if (sub_1ACAB2754((uint64_t)v35) == 1)
  {
    sub_1ACA50E14((uint64_t)v34, (uint64_t)v33, &qword_1E99F0F48);
    uint64_t v9 = *(void **)nullsub_1(v33);
    sub_1ACAB2A08();
    uint64_t v10 = swift_allocError();
    *uint64_t v11 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    swift_allocError();
    *uint64_t v12 = v10;
    sub_1ACA63448(v9);
    swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_1ACA50E14((uint64_t)v34, (uint64_t)v33, &qword_1E99F0F48);
    long long v13 = (long long *)nullsub_1(v33);
    long long v30 = v13[10];
    long long v31 = v13[11];
    *(_OWORD *)id v32 = v13[12];
    *(_OWORD *)&v32[10] = *(long long *)((char *)v13 + 202);
    long long v26 = v13[6];
    long long v27 = v13[7];
    long long v28 = v13[8];
    long long v29 = v13[9];
    long long v22 = v13[2];
    long long v23 = v13[3];
    long long v24 = v13[4];
    long long v25 = v13[5];
    long long v20 = *v13;
    long long v21 = v13[1];
    sub_1ACA64BF4((uint64_t)v13);
    long long v14 = *(_OWORD **)(*(void *)(a7 + 64) + 40);
    v14[10] = v30;
    v14[11] = v31;
    v14[12] = *(_OWORD *)v32;
    *(_OWORD *)((char *)v14 + 202) = *(_OWORD *)&v32[10];
    void v14[6] = v26;
    v14[7] = v27;
    void v14[8] = v28;
    v14[9] = v29;
    v14[2] = v22;
    void v14[3] = v23;
    void v14[4] = v24;
    v14[5] = v25;
    _OWORD *v14 = v20;
    v14[1] = v21;
    swift_continuation_throwingResume();
  }
  if (qword_1E99EFF10 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1ACE754C8();
  __swift_project_value_buffer(v15, (uint64_t)qword_1E99F2C40);
  long long v16 = sub_1ACE75498();
  os_log_type_t v17 = sub_1ACE76C08();
  if (os_log_type_enabled(v16, v17))
  {
    long long v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)long long v18 = 134217984;
    v33[0] = sub_1ACBCF6CC(a2);
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v16, v17, "PML Total request duration: %fs", v18, 0xCu);
    MEMORY[0x1AD11B340](v18, -1, -1);
  }

  sub_1ACE76E08();
  if (qword_1E99F0060 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v19 = (id)qword_1E99F2EA8;
  sub_1ACE753A8();
}

void sub_1ACBD1364(uint64_t a1, void (*a2)(void *), uint64_t a3, uint64_t a4)
{
  sub_1ACA50E14(a1, (uint64_t)v12, &qword_1E99F0F48);
  sub_1ACA50E14((uint64_t)v12, (uint64_t)v11, &qword_1E99F0F48);
  a2(v11);
  if (qword_1E99EFF10 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1ACE754C8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1E99F2C40);
  uint64_t v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76C08();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 134217984;
    v11[0] = sub_1ACBCF6CC(a4);
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v7, v8, "PML Total request duration: %fs", v9, 0xCu);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }

  sub_1ACE76E08();
  if (qword_1E99F0060 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v10 = (id)qword_1E99F2EA8;
  sub_1ACE753A8();
}

uint64_t sub_1ACBD1568(uint64_t a1, void *a2, uint64_t a3, void (*a4)(long long *), uint64_t a5, void (*a6)(void *), unint64_t a7)
{
  sub_1ACA50E14(a1, (uint64_t)v156, &qword_1E99F0F48);
  sub_1ACA50E14((uint64_t)v156, (uint64_t)v157, &qword_1E99F0F48);
  if (sub_1ACAB2754((uint64_t)v157) == 1)
  {
    uint64_t v12 = *(void *)nullsub_1(v157);
    sub_1ACA50E14((uint64_t)v156, (uint64_t)&v130, &qword_1E99F0F48);
    long long v13 = *(void **)nullsub_1(&v130);
    sub_1ACA63448(v13);
    if (qword_1E99EFF10 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1ACE754C8();
    __swift_project_value_buffer(v14, (uint64_t)qword_1E99F2C40);
    sub_1ACA50E14((uint64_t)v156, (uint64_t)&v143, &qword_1E99F0F48);
    uint64_t v15 = (id *)nullsub_1(&v143);
    sub_1ACA63448(*v15);
    sub_1ACA63448(v13);
    long long v16 = sub_1ACE75498();
    os_log_type_t v17 = sub_1ACE76BE8();
    if (os_log_type_enabled(v16, v17))
    {
      long long v18 = (uint8_t *)swift_slowAlloc();
      id v19 = (void *)swift_slowAlloc();
      *(_DWORD *)long long v18 = 138412290;
      sub_1ACAB2A08();
      swift_allocError();
      void *v20 = v12;
      sub_1ACA63448(v13);
      *(void *)&long long v119 = _swift_stdlib_bridgeErrorToNSError();
      sub_1ACE76FF8();
      void *v19 = v119;
      sub_1ACAB275C((uint64_t)v156);
      sub_1ACAB275C((uint64_t)v156);
      _os_log_impl(&dword_1AC9D5000, v16, v17, "Received error from provider: %@", v18, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v19, -1, -1);
      MEMORY[0x1AD11B340](v18, -1, -1);
    }
    else
    {
      sub_1ACAB275C((uint64_t)v156);
      sub_1ACAB275C((uint64_t)v156);
    }

    *(void *)&long long v119 = v12;
    sub_1ACA63458((uint64_t)&v119);
    sub_1ACA50E14((uint64_t)&v119, (uint64_t)&v111, &qword_1E99F0F48);
    sub_1ACA63448(v13);
    a4(&v111);
    goto LABEL_11;
  }
  long long v102 = a4;
  long long v21 = (long long *)nullsub_1(v157);
  long long v153 = v21[10];
  long long v154 = v21[11];
  *(_OWORD *)uint64_t v155 = v21[12];
  *(_OWORD *)&v155[10] = *(long long *)((char *)v21 + 202);
  long long v149 = v21[6];
  long long v150 = v21[7];
  long long v151 = v21[8];
  long long v152 = v21[9];
  long long v145 = v21[2];
  long long v146 = v21[3];
  long long v147 = v21[4];
  long long v148 = v21[5];
  long long v143 = *v21;
  long long v144 = v21[1];
  sub_1ACA64BF4((uint64_t)v21);
  uint64_t v22 = (uint64_t)a2;
  uint64_t v23 = sub_1ACBD2160((uint64_t *)a3, (uint64_t *)&v143);
  uint64_t v24 = v23;
  if ((v25 & 1) == 0)
  {
    long long v26 = a2 + 2;
    uint64_t v28 = a2[5];
    uint64_t v27 = a2[6];
    __swift_project_boxed_opaque_existential_1(v26, v28);
    unsigned __int8 v29 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v27 + 16))(*(unsigned __int8 *)(a3 + 168), v28, v27);
    uint64_t v30 = *(void *)(a3 + 8);
    uint64_t v31 = *(void *)(a3 + 16);
    uint64_t v32 = *(void *)(a3 + 24);
    uint64_t v33 = *(void *)(a3 + 152);
    *(void *)&long long v111 = *(void *)a3;
    *((void *)&v111 + 1) = v30;
    *(void *)&long long v112 = v31;
    *((void *)&v112 + 1) = v32;
    v113[0] = *(unsigned char *)(a3 + 32);
    memset(&v113[8], 0, 104);
    BYTE2(v114) = 0;
    LOWORD(v114) = 2;
    *((void *)&v114 + 1) = v33;
    *(void *)&long long v115 = v24;
    WORD4(v115) = v29;
    long long v116 = 0u;
    long long v117 = 0u;
    char v118 = -1;
    long long v153 = v115;
    long long v154 = 0u;
    *(_OWORD *)uint64_t v155 = 0u;
    v155[16] = -1;
    long long v149 = *(_OWORD *)&v113[64];
    long long v150 = *(_OWORD *)&v113[80];
    long long v151 = 0uLL;
    long long v152 = v114;
    long long v145 = *(_OWORD *)v113;
    long long v146 = *(_OWORD *)&v113[16];
    long long v147 = *(_OWORD *)&v113[32];
    long long v148 = *(_OWORD *)&v113[48];
    long long v143 = v111;
    long long v144 = v112;
    long long v34 = *(_OWORD *)(a3 + 176);
    long long v140 = *(_OWORD *)(a3 + 160);
    long long v141 = v34;
    *(_OWORD *)char v142 = *(_OWORD *)(a3 + 192);
    v142[16] = *(unsigned char *)(a3 + 208);
    long long v35 = *(_OWORD *)(a3 + 112);
    long long v136 = *(_OWORD *)(a3 + 96);
    long long v137 = v35;
    long long v36 = *(_OWORD *)(a3 + 144);
    long long v138 = *(_OWORD *)(a3 + 128);
    long long v139 = v36;
    long long v37 = *(_OWORD *)(a3 + 48);
    long long v132 = *(_OWORD *)(a3 + 32);
    long long v133 = v37;
    long long v38 = *(_OWORD *)(a3 + 80);
    long long v134 = *(_OWORD *)(a3 + 64);
    long long v135 = v38;
    long long v39 = *(_OWORD *)(a3 + 16);
    long long v130 = *(_OWORD *)a3;
    long long v131 = v39;
    sub_1ACA639E4(v111, v30, v31, v32, v113[0]);
    if (sub_1ACDF4480(&v130))
    {
      *(void *)&long long v143 = 2;
      sub_1ACA63458((uint64_t)&v143);
      sub_1ACA50E14((uint64_t)&v143, (uint64_t)&v130, &qword_1E99F0F48);
      a4(&v130);
      sub_1ACA64E8C((uint64_t)&v111);
      return sub_1ACAB275C((uint64_t)v156);
    }
    uint64_t v63 = *(void *)v21;
    if (v24 >= *(void *)(v63 + 16)) {
      uint64_t v64 = *(void *)(v63 + 16);
    }
    else {
      uint64_t v64 = v24;
    }
    uint64_t v22 = sub_1ACE5ACBC(v64, v63);
    a3 = v65;
    a2 = v66;
    a7 = v67;
    if ((v67 & 1) == 0)
    {
      swift_bridgeObjectRetain();
LABEL_22:
      uint64_t v68 = sub_1ACD0B0F4(v22, a3, (uint64_t)a2, a7);
LABEL_32:
      swift_unknownObjectRelease();
      long long v107 = v115;
      long long v108 = v116;
      long long v109 = v117;
      char v110 = v118;
      *(_OWORD *)&v105[64] = *(_OWORD *)&v113[64];
      *(_OWORD *)&v105[80] = *(_OWORD *)&v113[80];
      *(_OWORD *)&v105[96] = *(_OWORD *)&v113[96];
      long long v106 = v114;
      *(_OWORD *)long long v105 = *(_OWORD *)v113;
      *(_OWORD *)&v105[16] = *(_OWORD *)&v113[16];
      *(_OWORD *)&v105[32] = *(_OWORD *)&v113[32];
      *(_OWORD *)&v105[48] = *(_OWORD *)&v113[48];
      long long v103 = v111;
      long long v104 = v112;
      nullsub_1(&v103);
      sub_1ACA50E14((uint64_t)&v103, (uint64_t)&v143, &qword_1E99F0F40);
      sub_1ACA64A2C((uint64_t)&v111);
      sub_1ACABEBF4(v68, (uint64_t)&v143, 0, &v119);
      long long v153 = *(_OWORD *)&v127[16];
      long long v154 = v128;
      *(_OWORD *)uint64_t v155 = *(_OWORD *)v129;
      *(_OWORD *)&v155[10] = *(_OWORD *)&v129[10];
      long long v149 = v124;
      long long v150 = v125;
      long long v151 = v126;
      long long v152 = *(_OWORD *)v127;
      long long v145 = *(_OWORD *)v121;
      long long v146 = *(_OWORD *)&v121[16];
      long long v147 = v122;
      long long v148 = v123;
      long long v143 = v119;
      long long v144 = v120;
      sub_1ACA63474((uint64_t)&v143);
      sub_1ACA50E14((uint64_t)&v143, (uint64_t)&v130, &qword_1E99F0F48);
      sub_1ACA64BF4((uint64_t)&v119);
      a4(&v130);
      sub_1ACAB275C((uint64_t)v156);
      sub_1ACA6347C((uint64_t)&v119);
      long long v88 = &v111;
      goto LABEL_33;
    }
    sub_1ACE779D8();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v89 = swift_dynamicCastClass();
    if (!v89)
    {
      swift_unknownObjectRelease();
      uint64_t v89 = MEMORY[0x1E4FBC860];
    }
    uint64_t v90 = *(void *)(v89 + 16);
    swift_release();
    if (!__OFSUB__(a7 >> 1, a2))
    {
      if (v90 == (a7 >> 1) - (void)a2)
      {
        uint64_t v68 = swift_dynamicCastClass();
        swift_unknownObjectRelease();
        if (!v68)
        {
          swift_unknownObjectRelease();
          uint64_t v68 = MEMORY[0x1E4FBC860];
        }
        goto LABEL_32;
      }
      goto LABEL_37;
    }
LABEL_36:
    __break(1u);
LABEL_37:
    swift_unknownObjectRelease_n();
    goto LABEL_22;
  }
  if (!v23)
  {
    long long v69 = v21[1];
    long long v130 = *v21;
    long long v131 = v69;
    long long v70 = v21[2];
    long long v71 = v21[3];
    long long v72 = v21[5];
    long long v134 = v21[4];
    long long v135 = v72;
    long long v132 = v70;
    long long v133 = v71;
    long long v73 = v21[6];
    long long v74 = v21[7];
    long long v75 = v21[9];
    long long v138 = v21[8];
    long long v139 = v75;
    long long v136 = v73;
    long long v137 = v74;
    long long v76 = v21[10];
    long long v77 = v21[11];
    long long v78 = v21[12];
    *(_OWORD *)&v142[10] = *(long long *)((char *)v21 + 202);
    long long v141 = v77;
    *(_OWORD *)char v142 = v78;
    long long v140 = v76;
    sub_1ACA63474((uint64_t)&v130);
    sub_1ACA50E14((uint64_t)&v130, (uint64_t)&v119, &qword_1E99F0F48);
    sub_1ACA50E14((uint64_t)v156, (uint64_t)&v143, &qword_1E99F0F48);
    uint64_t v79 = nullsub_1(&v143);
    sub_1ACA64BF4(v79);
    a4(&v119);
LABEL_11:
    sub_1ACAB275C((uint64_t)v156);
    return sub_1ACAB275C((uint64_t)v156);
  }
  if (v23 != 1)
  {
    uint64_t v80 = *(void *)(a3 + 152);
    uint64_t v81 = *(void *)(a3 + 160);
    BOOL v82 = __OFADD__(v81, v80);
    uint64_t v83 = v81 + v80;
    if (!v82)
    {
      uint64_t v84 = *(void *)(a3 + 8);
      uint64_t v85 = *(void *)(a3 + 16);
      uint64_t v86 = *(void *)(a3 + 24);
      *(void *)&long long v103 = *(void *)a3;
      *((void *)&v103 + 1) = v84;
      *(void *)&long long v104 = v85;
      *((void *)&v104 + 1) = v86;
      v105[0] = *(unsigned char *)(a3 + 32);
      memset(&v105[8], 0, 104);
      BYTE2(v106) = 0;
      LOWORD(v106) = 2;
      *((void *)&v106 + 1) = v80;
      *(void *)&long long v107 = v83;
      WORD4(v107) = 2;
      long long v108 = 0u;
      long long v109 = 0u;
      char v110 = -1;
      uint64_t v87 = *(void *)v21;
      long long v117 = 0u;
      char v118 = -1;
      *(_OWORD *)&v113[64] = *(_OWORD *)&v105[64];
      *(_OWORD *)&v113[80] = *(_OWORD *)&v105[80];
      *(_OWORD *)&v113[96] = 0uLL;
      long long v114 = v106;
      *(_OWORD *)long long v113 = *(_OWORD *)v105;
      *(_OWORD *)&v113[16] = *(_OWORD *)&v105[16];
      *(_OWORD *)&v113[32] = *(_OWORD *)&v105[32];
      *(_OWORD *)&v113[48] = *(_OWORD *)&v105[48];
      long long v111 = v103;
      long long v112 = v104;
      long long v115 = v107;
      long long v116 = 0u;
      nullsub_1(&v111);
      sub_1ACA50E14((uint64_t)&v111, (uint64_t)&v143, &qword_1E99F0F40);
      sub_1ACA639E4(v103, v84, v85, v86, v105[0]);
      swift_bridgeObjectRetain();
      sub_1ACA64A2C((uint64_t)&v103);
      sub_1ACABEBF4(v87, (uint64_t)&v143, 0, &v119);
      long long v153 = *(_OWORD *)&v127[16];
      long long v154 = v128;
      *(_OWORD *)uint64_t v155 = *(_OWORD *)v129;
      *(_OWORD *)&v155[10] = *(_OWORD *)&v129[10];
      long long v149 = v124;
      long long v150 = v125;
      long long v151 = v126;
      long long v152 = *(_OWORD *)v127;
      long long v145 = *(_OWORD *)v121;
      long long v146 = *(_OWORD *)&v121[16];
      long long v147 = v122;
      long long v148 = v123;
      long long v143 = v119;
      long long v144 = v120;
      sub_1ACA63474((uint64_t)&v143);
      sub_1ACA50E14((uint64_t)&v143, (uint64_t)&v130, &qword_1E99F0F48);
      a4(&v130);
      sub_1ACAB275C((uint64_t)v156);
      long long v88 = &v103;
LABEL_33:
      sub_1ACA64E8C((uint64_t)v88);
      return sub_1ACA6347C((uint64_t)&v119);
    }
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v41 = a2[5];
  uint64_t v42 = a2[6];
  __swift_project_boxed_opaque_existential_1(a2 + 2, v41);
  char v43 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v42 + 16))(*(unsigned __int8 *)(a3 + 168), v41, v42);
  uint64_t v44 = *(void *)(a3 + 8);
  uint64_t v45 = *(void *)(a3 + 16);
  uint64_t v46 = *(void *)(a3 + 24);
  uint64_t v47 = *(void *)(a3 + 56);
  uint64_t v99 = *(void *)(a3 + 72);
  uint64_t v100 = *(void *)(a3 + 64);
  uint64_t v97 = *(void *)(a3 + 88);
  uint64_t v98 = *(void *)(a3 + 80);
  uint64_t v95 = *(void *)(a3 + 104);
  uint64_t v96 = *(void *)(a3 + 96);
  uint64_t v48 = *(void *)(a3 + 128);
  uint64_t v93 = *(void *)(a3 + 120);
  uint64_t v94 = *(void *)(a3 + 112);
  uint64_t v49 = *(void *)(a3 + 136);
  char v50 = *(unsigned char *)(a3 + 146);
  __int16 v51 = *(_WORD *)(a3 + 144);
  char v101 = v51;
  uint64_t v91 = *(void *)(a3 + 184);
  uint64_t v92 = *(void *)(a3 + 176);
  uint64_t v52 = *(void *)(a3 + 192);
  uint64_t v53 = *(void *)(a3 + 200);
  unsigned __int8 v54 = *(unsigned char *)(a3 + 32);
  unsigned __int8 v55 = *(unsigned char *)(a3 + 208);
  *(void *)&long long v119 = *(void *)a3;
  *((void *)&v119 + 1) = v44;
  *(void *)&long long v120 = v45;
  *((void *)&v120 + 1) = v46;
  v121[0] = v54;
  *(_OWORD *)&v121[8] = *(_OWORD *)(a3 + 40);
  *(void *)&v121[24] = v47;
  *(void *)&long long v122 = v100;
  *((void *)&v122 + 1) = v99;
  *(void *)&long long v123 = v98;
  *((void *)&v123 + 1) = v97;
  *(void *)&long long v124 = v96;
  *((void *)&v124 + 1) = v95;
  *(void *)&long long v125 = v94;
  *((void *)&v125 + 1) = v93;
  *(void *)&long long v126 = v48;
  *((void *)&v126 + 1) = v49;
  v127[2] = v50;
  *(_WORD *)long long v127 = v51;
  *(_OWORD *)&v127[8] = *(_OWORD *)(a3 + 152);
  v127[24] = v43;
  v127[25] = 0;
  *(void *)&long long v128 = v92;
  *((void *)&v128 + 1) = v91;
  *(void *)uint64_t v129 = v52;
  *(void *)&v129[8] = v53;
  v129[16] = v55;
  long long v153 = *(_OWORD *)&v127[16];
  long long v154 = v128;
  *(_OWORD *)uint64_t v155 = *(_OWORD *)v129;
  v155[16] = v55;
  long long v149 = v124;
  long long v150 = v125;
  long long v151 = v126;
  long long v152 = *(_OWORD *)v127;
  long long v145 = *(_OWORD *)v121;
  long long v146 = *(_OWORD *)&v121[16];
  long long v147 = v122;
  long long v148 = v123;
  long long v143 = v119;
  long long v144 = v120;
  long long v56 = *(_OWORD *)(a3 + 176);
  long long v140 = *(_OWORD *)(a3 + 160);
  long long v141 = v56;
  *(_OWORD *)char v142 = *(_OWORD *)(a3 + 192);
  v142[16] = *(unsigned char *)(a3 + 208);
  long long v57 = *(_OWORD *)(a3 + 112);
  long long v136 = *(_OWORD *)(a3 + 96);
  long long v137 = v57;
  long long v58 = *(_OWORD *)(a3 + 144);
  long long v138 = *(_OWORD *)(a3 + 128);
  long long v139 = v58;
  long long v59 = *(_OWORD *)(a3 + 48);
  long long v132 = *(_OWORD *)(a3 + 32);
  long long v133 = v59;
  long long v60 = *(_OWORD *)(a3 + 80);
  long long v134 = *(_OWORD *)(a3 + 64);
  long long v135 = v60;
  long long v61 = *(_OWORD *)(a3 + 16);
  long long v130 = *(_OWORD *)a3;
  long long v131 = v61;
  sub_1ACA639E4(v119, v44, v45, v46, v54);
  swift_bridgeObjectRetain();
  id v62 = *(id *)&v121[8];
  sub_1ACA63A5C(v100, v99, v98, v97, v96, v95, v94, v93, v48, v49, v101);
  sub_1ACA63B84(v92, v91, v52, v53, v55);
  if (sub_1ACDF4480(&v130))
  {
    *(void *)&long long v143 = 3;
    sub_1ACA63458((uint64_t)&v143);
    sub_1ACA50E14((uint64_t)&v143, (uint64_t)&v130, &qword_1E99F0F48);
    v102(&v130);
    sub_1ACA64E8C((uint64_t)&v119);
    return sub_1ACAB275C((uint64_t)v156);
  }
  long long v153 = *(_OWORD *)&v127[16];
  long long v154 = v128;
  *(_OWORD *)uint64_t v155 = *(_OWORD *)v129;
  v155[16] = v129[16];
  long long v149 = v124;
  long long v150 = v125;
  long long v151 = v126;
  long long v152 = *(_OWORD *)v127;
  long long v145 = *(_OWORD *)v121;
  long long v146 = *(_OWORD *)&v121[16];
  long long v147 = v122;
  long long v148 = v123;
  long long v143 = v119;
  long long v144 = v120;
  sub_1ACBD05AC((uint64_t)&v143, a6, a7);
  sub_1ACAB275C((uint64_t)v156);
  return sub_1ACA64E8C((uint64_t)&v119);
}

uint64_t sub_1ACBD2160(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1ACE753F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v49 = a1[2];
  uint64_t v50 = v11;
  uint64_t v48 = a1[3];
  int v12 = *((unsigned __int8 *)a1 + 32);
  long long v13 = *(_OWORD *)((char *)a1 + 113);
  long long v85 = *(_OWORD *)((char *)a1 + 97);
  long long v86 = v13;
  *(_OWORD *)uint64_t v87 = *(_OWORD *)((char *)a1 + 129);
  uint64_t v14 = a1[18];
  uint64_t v52 = a1[19];
  uint64_t v53 = v10;
  *(void *)&v87[15] = v14;
  long long v15 = *(_OWORD *)((char *)a1 + 49);
  long long v81 = *(_OWORD *)((char *)a1 + 33);
  long long v82 = v15;
  long long v16 = *(_OWORD *)((char *)a1 + 81);
  long long v83 = *(_OWORD *)((char *)a1 + 65);
  long long v84 = v16;
  uint64_t v51 = a1[20];
  uint64_t v17 = *((unsigned __int8 *)a1 + 168);
  long long v18 = *(_OWORD *)((char *)a1 + 185);
  long long v78 = *(_OWORD *)((char *)a1 + 169);
  long long v79 = v18;
  uint64_t v80 = *(uint64_t *)((char *)a1 + 201);
  uint64_t v19 = *a2;
  long long v20 = *(_OWORD *)(a2 + 23);
  long long v99 = *(_OWORD *)(a2 + 21);
  long long v100 = v20;
  long long v101 = *(_OWORD *)(a2 + 25);
  char v102 = *((unsigned char *)a2 + 216);
  long long v21 = *(_OWORD *)(a2 + 15);
  long long v95 = *(_OWORD *)(a2 + 13);
  long long v96 = v21;
  long long v22 = *(_OWORD *)(a2 + 19);
  long long v97 = *(_OWORD *)(a2 + 17);
  long long v98 = v22;
  long long v23 = *(_OWORD *)(a2 + 7);
  long long v91 = *(_OWORD *)(a2 + 5);
  long long v92 = v23;
  long long v24 = *(_OWORD *)(a2 + 11);
  long long v93 = *(_OWORD *)(a2 + 9);
  long long v94 = v24;
  long long v25 = *(_OWORD *)(a2 + 3);
  long long v89 = *(_OWORD *)(a2 + 1);
  long long v90 = v25;
  char v88 = *((unsigned char *)a2 + 217);
  sub_1ACE76E28();
  if (qword_1E99F0060 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v26 = (id)qword_1E99F2EA8;
  sub_1ACE753E8();
  sub_1ACE753A8();

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!*(void *)(v19 + 16) && v88 != 1) {
    return 1;
  }
  if (v12 != 1) {
    return 0;
  }
  uint64_t v27 = *(void *)(v3 + 40);
  uint64_t v28 = *(void *)(v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), v27);
  if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 24))(v17, v27, v28) & 1) != 0
    && *(unsigned char *)(v3 + 64) == 1)
  {
    uint64_t v29 = v52 + v51;
    uint64_t v30 = v53;
    if (!__OFADD__(v52, v51)) {
      return 2 * (v29 < *(void *)(v30 + 16));
    }
    __break(1u);
    return 0;
  }
  v75[0] = v99;
  v75[1] = v100;
  v75[2] = v101;
  v73[5] = v95;
  v73[6] = v96;
  v73[7] = v97;
  long long v74 = v98;
  v73[1] = v91;
  v73[2] = v92;
  v73[3] = v93;
  v73[4] = v94;
  long long v72 = v89;
  v73[0] = v90;
  long long v62 = v85;
  long long v63 = v86;
  *(_OWORD *)uint64_t v64 = *(_OWORD *)v87;
  long long v58 = v81;
  long long v59 = v82;
  long long v60 = v83;
  long long v61 = v84;
  long long v68 = v78;
  uint64_t v71 = v19;
  char v76 = v102;
  char v77 = v88;
  uint64_t v32 = v53;
  uint64_t v47 = v19;
  uint64_t v34 = v49;
  uint64_t v33 = v50;
  *(void *)&long long v54 = v53;
  *((void *)&v54 + 1) = v50;
  uint64_t v35 = v48;
  uint64_t v55 = v49;
  uint64_t v56 = v48;
  uint64_t v31 = 1;
  char v57 = 1;
  int v36 = v17;
  uint64_t v37 = v51;
  uint64_t v38 = v52;
  *(void *)&v64[15] = *(void *)&v87[15];
  uint64_t v65 = v52;
  uint64_t v66 = v51;
  int v46 = v36;
  char v67 = v36;
  long long v69 = v79;
  uint64_t v70 = v80;
  uint64_t v39 = sub_1ACABFB14(&v54);
  if (v39 < 1) {
    return v31;
  }
  uint64_t v45 = v39;
  *(_OWORD *)((char *)&v73[4] + 9) = v85;
  *(_OWORD *)((char *)&v73[5] + 9) = v86;
  *(_OWORD *)((char *)&v73[6] + 9) = *(_OWORD *)v87;
  *(_OWORD *)((char *)v73 + 9) = v81;
  *(_OWORD *)((char *)&v73[1] + 9) = v82;
  *(_OWORD *)((char *)&v73[2] + 9) = v83;
  *(_OWORD *)((char *)&v73[3] + 9) = v84;
  *(_OWORD *)((char *)v75 + 1) = v78;
  uint64_t v40 = v33;
  unint64_t v41 = *(void *)(v47 + 16);
  uint64_t v71 = v32;
  *(void *)&long long v72 = v40;
  *((void *)&v72 + 1) = v34;
  *(void *)&v73[0] = v35;
  BYTE8(v73[0]) = 1;
  *((void *)&v73[7] + 1) = *(void *)&v87[15];
  *(void *)&long long v74 = v38;
  *((void *)&v74 + 1) = v37;
  LOBYTE(v75[0]) = v46;
  *(_OWORD *)((char *)&v75[1] + 1) = v79;
  *(void *)((char *)&v75[2] + 1) = v80;
  unint64_t v42 = sub_1ACDD2440()[2];
  uint64_t result = swift_bridgeObjectRelease();
  if (v41 >= v42)
  {
    uint64_t v29 = v38 + v37;
    if (!__OFADD__(v38, v37))
    {
      uint64_t v30 = v53;
      return 2 * (v29 < *(void *)(v30 + 16));
    }
  }
  else
  {
    uint64_t v31 = v45 + v37;
    if (!__OFADD__(v45, v37)) {
      return v31;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACBD260C(uint64_t a1, uint64_t a2)
{
  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v3[24] = v4;
  v3[25] = *(void *)(v4 - 8);
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACBD2738, 0, 0);
}

uint64_t sub_1ACBD2738()
{
  uint64_t v64 = v0;
  if (qword_1E99EFF10 != -1) {
    swift_once();
  }
  uint64_t v1 = (unsigned char *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = sub_1ACE754C8();
  *(void *)(v0 + 224) = __swift_project_value_buffer(v4, (uint64_t)qword_1E99F2C40);
  sub_1ACBD4014(v3, v2, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  uint64_t v5 = sub_1ACE75498();
  os_log_type_t v6 = sub_1ACE76C08();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 216);
  if (v7)
  {
    uint64_t v9 = *(void *)(v0 + 192);
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    int v12 = *(unsigned __int8 *)(v8 + *(int *)(v9 + 172));
    uint64_t v63 = v11;
    if (v12) {
      uint64_t v13 = 0x776F6C6C616873;
    }
    else {
      uint64_t v13 = 0x656C617473;
    }
    if (v12) {
      unint64_t v14 = 0xE700000000000000;
    }
    else {
      unint64_t v14 = 0xE500000000000000;
    }
    *(void *)(v0 + 128) = sub_1ACA3189C(v13, v14, &v63);
    uint64_t v1 = (unsigned char *)(v0 + 240);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACABFED4(v8);
    _os_log_impl(&dword_1AC9D5000, v5, v6, "Reloading item [%s]", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v11, -1, -1);
    MEMORY[0x1AD11B340](v10, -1, -1);
  }
  else
  {
    sub_1ACABFED4(*(void *)(v0 + 216));
  }

  uint64_t v15 = *(void *)(v0 + 192);
  uint64_t v16 = *(void *)(v0 + 200);
  uint64_t v17 = *(void *)(v0 + 184);
  long long v18 = *(void **)(v0 + 152);
  *(unsigned char *)(v0 + 240) = 2;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v17, 1, 1, v15);
  uint64_t v19 = v18 + 2;
  swift_beginAccess();
  uint64_t v20 = v18[5];
  uint64_t v21 = v18[6];
  __swift_project_boxed_opaque_existential_1(v19, v20);
  if ((*(uint64_t (**)(void, uint64_t, uint64_t))(v21 + 24))(*(unsigned __int8 *)(v0 + 240), v20, v21)) {
    goto LABEL_29;
  }
  uint64_t v22 = *(void *)(v0 + 192);
  uint64_t v23 = *(void *)(v0 + 200);
  uint64_t v24 = *(void *)(v0 + 176);
  sub_1ACA3AAD4(*(void *)(v0 + 184), v24, &qword_1EB76EFA0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v24, 1, v22) != 1)
  {
    sub_1ACA50E78(*(void *)(v0 + 176), &qword_1EB76EFA0);
LABEL_29:
    uint64_t v47 = *(void *)(v0 + 200);
    uint64_t v46 = *(void *)(v0 + 208);
    uint64_t v48 = *(void *)(v0 + 192);
    uint64_t v49 = *(void *)(v0 + 160);
    uint64_t v50 = *(void *)(v0 + 144);
    sub_1ACA50E14(*(void *)(v0 + 184), v49, &qword_1EB76EFA0);
    sub_1ACBD4014(v50, v46, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    int v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v49, 1, v48);
    uint64_t v52 = *(void *)(v0 + 208);
    uint64_t v53 = *(void *)(v0 + 160);
    uint64_t v54 = *(void *)(v0 + 136);
    if (v51 == 1)
    {
      sub_1ACBD47F8(v52, *(void *)(v0 + 136), type metadata accessor for PodcastsMediaLibrary.MediaItem);
      sub_1ACA50E78(v53, &qword_1EB76EFA0);
    }
    else
    {
      sub_1ACABFED4(v52);
      sub_1ACBD47F8(v53, v54, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    }
    goto LABEL_32;
  }
  long long v25 = *(void **)(v0 + 152);
  id v26 = v25 + 2;
  sub_1ACA50E78(*(void *)(v0 + 176), &qword_1EB76EFA0);
  uint64_t v27 = v25[5];
  uint64_t v28 = v25[6];
  __swift_project_boxed_opaque_existential_1(v26, v27);
  *(unsigned char *)(v0 + 240) = (*(uint64_t (**)(void, uint64_t, uint64_t))(v28 + 16))(*(unsigned __int8 *)(v0 + 240), v27, v28);
  uint64_t v29 = sub_1ACE75498();
  os_log_type_t v30 = sub_1ACE76C08();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(void *)(v0 + 120) = v32;
    *(_DWORD *)uint64_t v31 = 136315138;
    unint64_t v33 = 0xEC00000079726172;
    uint64_t v34 = 0x62694C6C61636F6CLL;
    if (*v1 != 1)
    {
      uint64_t v34 = 0x7265666E69;
      unint64_t v33 = 0xE500000000000000;
    }
    if (*v1) {
      uint64_t v35 = v34;
    }
    else {
      uint64_t v35 = 0x495041616964656DLL;
    }
    if (*v1) {
      unint64_t v36 = v33;
    }
    else {
      unint64_t v36 = 0xE800000000000000;
    }
    *(void *)(v31 + 4) = sub_1ACA3189C(v35, v36, (uint64_t *)(v0 + 120));
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v29, v30, "Asking for item at source: %s", (uint8_t *)v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v32, -1, -1);
    MEMORY[0x1AD11B340](v31, -1, -1);
  }

  uint64_t v37 = *(void **)(v0 + 152);
  uint64_t v38 = v37[5];
  uint64_t v39 = v37[6];
  __swift_project_boxed_opaque_existential_1(v37 + 2, v38);
  (*(void (**)(void, uint64_t, uint64_t))(v39 + 8))(*(unsigned __int8 *)(v0 + 240), v38, v39);
  if (*(void *)(v0 + 80))
  {
    sub_1ACA3AABC((long long *)(v0 + 56), v0 + 16);
    uint64_t v40 = *(void *)(v0 + 40);
    uint64_t v41 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v40);
    long long v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 + 24) + **(int **)(v41 + 24));
    unint64_t v42 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v42;
    *unint64_t v42 = v0;
    v42[1] = sub_1ACBD2EC4;
    uint64_t v43 = *(void *)(v0 + 168);
    uint64_t v44 = *(void *)(v0 + 144);
    return v62(v43, v44, v40, v41);
  }
  sub_1ACA50E78(v0 + 56, (uint64_t *)&unk_1E99F33E8);
  uint64_t v56 = sub_1ACE75498();
  os_log_type_t v57 = sub_1ACE76C08();
  if (os_log_type_enabled(v56, v57))
  {
    long long v58 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v58 = 0;
    _os_log_impl(&dword_1AC9D5000, v56, v57, "No provider for source found. returning original.", v58, 2u);
    MEMORY[0x1AD11B340](v58, -1, -1);
  }
  uint64_t v59 = *(void *)(v0 + 184);
  uint64_t v61 = *(void *)(v0 + 136);
  uint64_t v60 = *(void *)(v0 + 144);

  sub_1ACA50E78(v59, &qword_1EB76EFA0);
  sub_1ACBD4014(v60, v61, type metadata accessor for PodcastsMediaLibrary.MediaItem);
LABEL_32:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v55 = *(uint64_t (**)(void))(v0 + 8);
  return v55();
}

uint64_t sub_1ACBD2EC4()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1ACBD2FC0, 0, 0);
}

uint64_t sub_1ACBD2FC0()
{
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v2 = v1 + 2;
  sub_1ACBD4D3C(*(void *)(v0 + 168), *(void *)(v0 + 184), &qword_1EB76EFA0);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  if ((*(uint64_t (**)(void, uint64_t, uint64_t))(v4 + 24))(*(unsigned __int8 *)(v0 + 240), v3, v4)) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)(v0 + 192);
  uint64_t v7 = *(void *)(v0 + 200);
  uint64_t v8 = *(void *)(v0 + 176);
  sub_1ACA3AAD4(*(void *)(v0 + 184), v8, &qword_1EB76EFA0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) != 1)
  {
    sub_1ACA50E78(*(void *)(v0 + 176), &qword_1EB76EFA0);
LABEL_18:
    uint64_t v32 = *(void *)(v0 + 200);
    uint64_t v31 = *(void *)(v0 + 208);
    uint64_t v33 = *(void *)(v0 + 192);
    uint64_t v34 = *(void *)(v0 + 160);
    uint64_t v35 = *(void *)(v0 + 144);
    sub_1ACA50E14(*(void *)(v0 + 184), v34, &qword_1EB76EFA0);
    sub_1ACBD4014(v35, v31, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    int v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v34, 1, v33);
    uint64_t v37 = *(void *)(v0 + 208);
    uint64_t v38 = *(void *)(v0 + 160);
    uint64_t v39 = *(void *)(v0 + 136);
    if (v36 == 1)
    {
      sub_1ACBD47F8(v37, *(void *)(v0 + 136), type metadata accessor for PodcastsMediaLibrary.MediaItem);
      sub_1ACA50E78(v38, &qword_1EB76EFA0);
    }
    else
    {
      sub_1ACABFED4(v37);
      sub_1ACBD47F8(v38, v39, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    }
    goto LABEL_21;
  }
  uint64_t v9 = (long long *)(v0 + 56);
  uint64_t v10 = *(void **)(v0 + 152);
  uint64_t v11 = v10 + 2;
  sub_1ACA50E78(*(void *)(v0 + 176), &qword_1EB76EFA0);
  uint64_t v12 = v10[5];
  uint64_t v13 = v10[6];
  __swift_project_boxed_opaque_existential_1(v11, v12);
  *(unsigned char *)(v0 + 240) = (*(uint64_t (**)(void, uint64_t, uint64_t))(v13 + 16))(*(unsigned __int8 *)(v0 + 240), v12, v13);
  unint64_t v14 = sub_1ACE75498();
  os_log_type_t v15 = sub_1ACE76C08();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(void *)(v0 + 120) = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    uint64_t v5 = (unsigned char *)(v0 + 240);
    unint64_t v18 = 0xEC00000079726172;
    uint64_t v19 = 0x62694C6C61636F6CLL;
    if (*(unsigned char *)(v0 + 240) != 1)
    {
      uint64_t v19 = 0x7265666E69;
      unint64_t v18 = 0xE500000000000000;
    }
    if (*v5) {
      uint64_t v20 = v19;
    }
    else {
      uint64_t v20 = 0x495041616964656DLL;
    }
    if (*v5) {
      unint64_t v21 = v18;
    }
    else {
      unint64_t v21 = 0xE800000000000000;
    }
    *(void *)(v16 + 4) = sub_1ACA3189C(v20, v21, (uint64_t *)(v0 + 120));
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v14, v15, "Asking for item at source: %s", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v17, -1, -1);
    MEMORY[0x1AD11B340](v16, -1, -1);
  }

  uint64_t v22 = *(void **)(v0 + 152);
  uint64_t v23 = v22[5];
  uint64_t v24 = v22[6];
  __swift_project_boxed_opaque_existential_1(v22 + 2, v23);
  (*(void (**)(void, uint64_t, uint64_t))(v24 + 8))(*(unsigned __int8 *)(v0 + 240), v23, v24);
  if (*(void *)(v0 + 80))
  {
    sub_1ACA3AABC(v9, v0 + 16);
    uint64_t v25 = *(void *)(v0 + 40);
    uint64_t v26 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v25);
    uint64_t v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 + 24) + **(int **)(v26 + 24));
    uint64_t v27 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v27;
    *uint64_t v27 = v0;
    v27[1] = sub_1ACBD2EC4;
    uint64_t v28 = *(void *)(v0 + 168);
    uint64_t v29 = *(void *)(v0 + 144);
    return v47(v28, v29, v25, v26);
  }
  sub_1ACA50E78((uint64_t)v9, (uint64_t *)&unk_1E99F33E8);
  uint64_t v41 = sub_1ACE75498();
  os_log_type_t v42 = sub_1ACE76C08();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v43 = 0;
    _os_log_impl(&dword_1AC9D5000, v41, v42, "No provider for source found. returning original.", v43, 2u);
    MEMORY[0x1AD11B340](v43, -1, -1);
  }
  uint64_t v44 = *(void *)(v0 + 184);
  uint64_t v46 = *(void *)(v0 + 136);
  uint64_t v45 = *(void *)(v0 + 144);

  sub_1ACA50E78(v44, &qword_1EB76EFA0);
  sub_1ACBD4014(v45, v46, type metadata accessor for PodcastsMediaLibrary.MediaItem);
LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t PodcastsMediaLibrary.deinit()
{
  sub_1ACBD3FA8(v0 + 16);
  sub_1ACA50E78(v0 + OBJC_IVAR____TtC18PodcastsFoundation20PodcastsMediaLibrary____lazy_storage___signpostID, &qword_1EB7726E8);
  return v0;
}

uint64_t PodcastsMediaLibrary.__deallocating_deinit()
{
  sub_1ACBD3FA8(v0 + 16);
  sub_1ACA50E78(v0 + OBJC_IVAR____TtC18PodcastsFoundation20PodcastsMediaLibrary____lazy_storage___signpostID, &qword_1EB7726E8);
  return swift_deallocClassInstance();
}

uint64_t PodcastsMediaLibrary.mediaCollection(for:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 528) = v2;
  *(void *)(v3 + 520) = a1;
  long long v4 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(v3 + 464) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(v3 + 480) = v4;
  *(_OWORD *)(v3 + 496) = *(_OWORD *)(a2 + 192);
  *(unsigned char *)(v3 + 512) = *(unsigned char *)(a2 + 208);
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v3 + 400) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v3 + 416) = v5;
  long long v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v3 + 432) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v3 + 448) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v3 + 336) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v3 + 352) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v3 + 368) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v3 + 384) = v8;
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 304) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 320) = v9;
  return MEMORY[0x1F4188298](sub_1ACBD3674, 0, 0);
}

uint64_t sub_1ACBD3674()
{
  uint64_t v1 = (void *)v0[66];
  v0[2] = v0;
  v0[7] = v0 + 10;
  v0[3] = sub_1ACBD3728;
  uint64_t v2 = swift_continuation_init();
  sub_1ACBCFB08((uint64_t)(v0 + 38), v1, v2);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1ACBD3728()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  if (*(void *)(*v0 + 48))
  {
    swift_willThrow();
  }
  else
  {
    uint64_t v3 = (_OWORD *)(v1 + 80);
    uint64_t v4 = *(_OWORD **)(v1 + 520);
    long long v5 = v3[1];
    _OWORD *v4 = *v3;
    v4[1] = v5;
    long long v6 = v3[2];
    long long v7 = v3[3];
    long long v8 = v3[5];
    v4[4] = v3[4];
    v4[5] = v8;
    v4[2] = v6;
    v4[3] = v7;
    long long v9 = v3[6];
    long long v10 = v3[7];
    long long v11 = v3[9];
    v4[8] = v3[8];
    v4[9] = v11;
    v4[6] = v9;
    v4[7] = v10;
    long long v12 = v3[10];
    long long v13 = v3[11];
    long long v14 = v3[12];
    *(_OWORD *)((char *)v4 + 202) = *(_OWORD *)((char *)v3 + 202);
    v4[11] = v13;
    v4[12] = v14;
    v4[10] = v12;
  }
  os_log_type_t v15 = *(uint64_t (**)(void))(v2 + 8);
  return v15();
}

uint64_t sub_1ACBD3878(uint64_t a1, uint64_t a2)
{
  sub_1ACA50E14(a1, (uint64_t)v24, &qword_1E99F0F48);
  sub_1ACA50E14((uint64_t)v24, (uint64_t)v25, &qword_1E99F0F48);
  if (sub_1ACAB2754((uint64_t)v25) == 1)
  {
    sub_1ACA50E14((uint64_t)v24, (uint64_t)v23, &qword_1E99F0F48);
    uint64_t v3 = *(void **)nullsub_1(v23);
    sub_1ACAB2A08();
    uint64_t v4 = swift_allocError();
    *long long v5 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    swift_allocError();
    *long long v6 = v4;
    sub_1ACA63448(v3);
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_1ACA50E14((uint64_t)v24, (uint64_t)v23, &qword_1E99F0F48);
    long long v8 = (long long *)nullsub_1(v23);
    long long v20 = v8[10];
    long long v21 = v8[11];
    *(_OWORD *)uint64_t v22 = v8[12];
    *(_OWORD *)&v22[10] = *(long long *)((char *)v8 + 202);
    long long v16 = v8[6];
    long long v17 = v8[7];
    long long v18 = v8[8];
    long long v19 = v8[9];
    long long v12 = v8[2];
    long long v13 = v8[3];
    long long v14 = v8[4];
    long long v15 = v8[5];
    long long v10 = *v8;
    long long v11 = v8[1];
    sub_1ACA64BF4((uint64_t)v8);
    long long v9 = *(_OWORD **)(*(void *)(a2 + 64) + 40);
    v9[10] = v20;
    v9[11] = v21;
    v9[12] = *(_OWORD *)v22;
    *(_OWORD *)((char *)v9 + 202) = *(_OWORD *)&v22[10];
    v9[6] = v16;
    void v9[7] = v17;
    v9[8] = v18;
    v9[9] = v19;
    void v9[2] = v12;
    void v9[3] = v13;
    v9[4] = v14;
    v9[5] = v15;
    *long long v9 = v10;
    v9[1] = v11;
    return swift_continuation_throwingResume();
  }
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.resolvedContext()(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  v2[12] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[13] = v4;
  v2[14] = *(void *)(v4 + 64);
  v2[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACBD3AF4, 0, 0);
}

uint64_t sub_1ACBD3AF4()
{
  long long v19 = v0;
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[11];
  v0[2] = v0;
  v0[7] = v4;
  v0[3] = sub_1ACBD3CEC;
  uint64_t v6 = swift_continuation_init();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  uint64_t v8 = *(void *)(v5 + 88);
  long long v16 = *(_OWORD *)(v5 + 72);
  v17[0] = *(_OWORD *)(v5 + 56);
  long long v15 = *(void **)&v17[0];
  v17[1] = v16;
  uint64_t v18 = v8;
  sub_1ACBD4014(v5, v1, (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  sub_1ACBD47F8(v1, v10 + v9, (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  long long v11 = (uint64_t (**)(uint64_t))(v10 + ((v2 + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  *long long v11 = sub_1ACBD400C;
  v11[1] = (uint64_t (*)(uint64_t))v7;
  swift_bridgeObjectRetain();
  swift_retain();
  id v12 = v15;
  swift_bridgeObjectRetain();
  sub_1ACBD98A0((uint64_t)v17, (void (*)(id *))sub_1ACBD4860, v10);
  swift_release();
  long long v13 = *(void **)&v17[0];
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1ACBD3CEC()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48)) {
    swift_willThrow();
  }
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

uint64_t sub_1ACBD3E18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3428);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (uint64_t *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ACA3AAD4(a1, (uint64_t)v9, &qword_1E99F3428);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = *v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    swift_allocError();
    *long long v11 = v10;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_1ACBD47F8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
    sub_1ACBD47F8((uint64_t)v6, *(void *)(*(void *)(a2 + 64) + 40), (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1ACBD3FA8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACBD3FFC()
{
  return swift_deallocObject();
}

uint64_t sub_1ACBD400C(uint64_t a1)
{
  return sub_1ACBD3E18(a1, *(void *)(v1 + 16));
}

uint64_t sub_1ACBD4014(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACBD407C()
{
  uint64_t v1 = (int *)type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (id *)(v0 + ((v2 + 16) & ~v2));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)v3 + v1[11];
  uint64_t v5 = type metadata accessor for PlaybackIntent(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    sub_1ACA63688(*(void *)v4, *((void *)v4 + 1), *((void *)v4 + 2), *((void *)v4 + 3), v4[32]);
    if (v4[120] != 2) {
      sub_1ACA63738(*((void *)v4 + 5), *((void *)v4 + 6), *((void *)v4 + 7), *((void *)v4 + 8), *((void *)v4 + 9), *((void *)v4 + 10), *((void *)v4 + 11), *((void *)v4 + 12), v4[104]);
    }
    uint64_t v6 = &v4[*(int *)(v5 + 24)];
    uint64_t v7 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = &v6[v7[12]];
      uint64_t v8 = sub_1ACE74F28();
      unint64_t v9 = (unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
      uint64_t v28 = *(void *)(v8 - 8);
      uint64_t v29 = *v9;
      if (!(*v9)(v31, 1, v8)) {
        (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v8);
      }
      swift_bridgeObjectRelease();
      uint64_t v10 = &v6[v7[16]];
      if (!v29(v10, 1, v8)) {
        (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
      }
      swift_bridgeObjectRelease();
      swift_release();
      long long v11 = &v6[v7[20]];
      uint64_t v12 = sub_1ACE750A8();
      uint64_t v13 = *(void *)(v12 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
        (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v14 = &v6[v7[36]];
      if (!v29(v14, 1, v8)) {
        (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v8);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  long long v15 = (char *)v3 + v1[14];
  long long v16 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v16 - 1) + 48))(v15, 1, v16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v17 = &v15[v16[12]];
    uint64_t v18 = sub_1ACE74F28();
    uint64_t v30 = *(void *)(v18 - 8);
    long long v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    if (!v19(v17, 1, v18)) {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v18);
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = &v15[v16[16]];
    if (!v19(v20, 1, v18)) {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v18);
    }
    swift_bridgeObjectRelease();
    swift_release();
    long long v21 = &v15[v16[20]];
    uint64_t v22 = sub_1ACE750A8();
    uint64_t v23 = *(void *)(v22 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22)) {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = &v15[v16[36]];
    if (!v19(v24, 1, v18)) {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v18);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v25 = (char *)v3 + v1[19];
  int v26 = v25[32];
  if (v26 != 255) {
    sub_1ACA63688(*(void *)v25, *((void *)v25 + 1), *((void *)v25 + 2), *((void *)v25 + 3), v26);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACBD47F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACBD4860(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + v4;
  uint64_t v6 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(void (**)(uint64_t))v6;
  uint64_t v8 = *(void *)(v6 + 8);
  return sub_1ACCD70C0(a1, v5, v7, v8);
}

uint64_t sub_1ACBD4900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1ACBD4914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1ACBD4928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 24) + **(int **)(a4 + 24));
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unint64_t v9 = v4;
  v9[1] = sub_1ACA51034;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1ACBD4A38()
{
  return type metadata accessor for PodcastsMediaLibrary();
}

uint64_t type metadata accessor for PodcastsMediaLibrary()
{
  uint64_t result = qword_1E99F3410;
  if (!qword_1E99F3410) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1ACBD4A8C()
{
  sub_1ACABE9B0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for PodcastsMediaLibrary(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastsMediaLibrary);
}

uint64_t dispatch thunk of PodcastsMediaLibrary.__allocating_init(config:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of PodcastsMediaLibrary.mediaCollection(for:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of PodcastsMediaLibrary.reloadMediaItem(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 144) + **(int **)(*(void *)v2 + 144));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1ACA50B84;
  return v8(a1, a2);
}

uint64_t sub_1ACBD4C88()
{
  return swift_deallocObject();
}

uint64_t sub_1ACBD4C98(uint64_t a1)
{
  return sub_1ACBD3878(a1, *(void *)(v1 + 16));
}

void sub_1ACBD4CA4(uint64_t a1)
{
  sub_1ACE753F8();
  uint64_t v3 = (void (*)(void *))v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  sub_1ACBD1364(a1, v3, v4, v5);
}

uint64_t sub_1ACBD4D28(uint64_t a1)
{
  return sub_1ACBD1568(a1, *(void **)(v1 + 16), v1 + 24, *(void (**)(long long *))(v1 + 240), *(void *)(v1 + 248), *(void (**)(void *))(v1 + 256), *(void *)(v1 + 264));
}

uint64_t sub_1ACBD4D3C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACBD4DA0()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBD4ED8()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBD5058()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBD51E4()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBD52DC()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBD536C()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBD54C0()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBD5634()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBD5730()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBD5844()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t TTMLRequest.init(remoteUrl:priority:fileName:lifetime:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  char v10 = *a2;
  char v11 = *a5;
  uint64_t v12 = (int *)type metadata accessor for TTMLRequest();
  uint64_t v13 = a6 + v12[9];
  *(void *)(v13 + 32) = 0;
  *(_OWORD *)uint64_t v13 = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  uint64_t result = sub_1ACA7FAC4(a1, a6);
  *(unsigned char *)(a6 + v12[5]) = v10;
  long long v15 = (void *)(a6 + v12[6]);
  *long long v15 = a3;
  v15[1] = a4;
  *(unsigned char *)(a6 + v12[8]) = v11;
  *(unsigned char *)(a6 + v12[7]) = 7;
  return result;
}

uint64_t type metadata accessor for TTMLRequest()
{
  uint64_t result = qword_1EB76A268;
  if (!qword_1EB76A268) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t TTMLRequest.remoteUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA3AAD4(v1, a1, &qword_1EB7731B0);
}

uint64_t TTMLRequest.priority.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for TTMLRequest();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t TTMLRequest.fileFormat.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for TTMLRequest();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t TTMLRequest.lifetime.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for TTMLRequest();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t TTMLRequest.trace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TTMLRequest();
  return sub_1ACA3AAD4(v1 + *(int *)(v3 + 36), a1, &qword_1EB772EA0);
}

uint64_t TTMLRequest.trace.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TTMLRequest() + 36);
  return sub_1ACBB135C(a1, v3);
}

uint64_t (*TTMLRequest.trace.modify())(void)
{
  return nullsub_1;
}

uint64_t _s18PodcastsFoundation11TTMLRequestV8fileNameSSvg_0()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TTMLRequest() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACBD5BD8()
{
  uint64_t result = 0x725565746F6D6572;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x797469726F697270;
      break;
    case 2:
      uint64_t result = 0x656D614E656C6966;
      break;
    case 3:
      uint64_t result = 0x6D726F46656C6966;
      break;
    case 4:
      uint64_t result = 0x656D69746566696CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACBD5C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACBD8230(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACBD5CB4(uint64_t a1)
{
  unint64_t v2 = sub_1ACBD6FB4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACBD5CF0(uint64_t a1)
{
  unint64_t v2 = sub_1ACBD6FB4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TTMLRequest.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA3AAD4(v1, (uint64_t)v8, &qword_1EB7731B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1ACE77B38();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1ACE77B38();
    sub_1ACBD8468(&qword_1E99F1C88, MEMORY[0x1E4F276F0]);
    sub_1ACE760F8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  type metadata accessor for TTMLRequest();
  sub_1ACE77B48();
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  return sub_1ACBD5730();
}

uint64_t TTMLRequest.encode(_:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  sub_1ACA3985C(v1, *(void *)(a1 + 32));
  return v1;
}

void TTMLRequest.decode(_:)(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t TTMLRequest.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3430);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACBD6FB4();
  sub_1ACE77C78();
  v11[15] = 0;
  sub_1ACE74F28();
  sub_1ACBD8468(&qword_1E99F0E98, MEMORY[0x1E4F276F0]);
  sub_1ACE77728();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for TTMLRequest();
    v11[14] = *(unsigned char *)(v3 + v9[5]);
    v11[13] = 1;
    sub_1ACBB1480();
    sub_1ACE77788();
    v11[12] = 2;
    sub_1ACE77748();
    v11[11] = *(unsigned char *)(v3 + v9[7]);
    v11[10] = 3;
    sub_1ACBD7008();
    sub_1ACE77788();
    v11[9] = *(unsigned char *)(v3 + v9[8]);
    v11[8] = 4;
    sub_1ACBB14D4();
    sub_1ACE77788();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t TTMLRequest.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t TTMLRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3448);
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for TTMLRequest();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = &v13[*(int *)(v11 + 36)];
  *((void *)v14 + 4) = 0;
  *(_OWORD *)long long v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  uint64_t v27 = (uint64_t)v14;
  uint64_t v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACBD6FB4();
  sub_1ACE77C48();
  if (v2)
  {
    uint64_t v18 = v27;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    return sub_1ACA50E78(v18, &qword_1EB772EA0);
  }
  else
  {
    uint64_t v15 = v25;
    uint64_t v16 = (uint64_t)v13;
    sub_1ACE74F28();
    char v36 = 0;
    sub_1ACBD8468(&qword_1E99F0ED0, MEMORY[0x1E4F276F0]);
    uint64_t v17 = v26;
    sub_1ACE77638();
    sub_1ACA7FAC4((uint64_t)v6, v16);
    char v34 = 1;
    sub_1ACBB1528();
    sub_1ACE77698();
    *(unsigned char *)(v16 + v10[5]) = v35;
    char v33 = 2;
    uint64_t v19 = sub_1ACE77658();
    uint64_t v20 = (uint64_t *)(v16 + v10[6]);
    uint64_t *v20 = v19;
    v20[1] = v21;
    char v31 = 3;
    sub_1ACBD705C();
    sub_1ACE77698();
    *(unsigned char *)(v16 + v10[7]) = v32;
    char v29 = 4;
    sub_1ACBB157C();
    sub_1ACE77698();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v17);
    *(unsigned char *)(v16 + v10[8]) = v30;
    sub_1ACBD70B0(v16, v24);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    return sub_1ACBD7114(v16);
  }
}

uint64_t sub_1ACBD66A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TTMLRequest.init(from:)(a1, a2);
}

uint64_t sub_1ACBD66BC(void *a1)
{
  return TTMLRequest.encode(to:)(a1);
}

uint64_t sub_1ACBD66D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA3AAD4(v1, a1, &qword_1EB7731B0);
}

uint64_t sub_1ACBD66FC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 20));
  return result;
}

uint64_t sub_1ACBD670C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACBD6750()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACBD678C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(v2 + *(int *)(a1 + 24));
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACBD67A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACA3AAD4(v2 + *(int *)(a1 + 36), a2, &qword_1EB772EA0);
}

uint64_t sub_1ACBD67CC(uint64_t a1, uint64_t a2)
{
  return sub_1ACBB135C(a1, v2 + *(int *)(a2 + 36));
}

uint64_t (*sub_1ACBD67D8())()
{
  return nullsub_1;
}

uint64_t sub_1ACBD67FC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 28));
  return result;
}

uint64_t sub_1ACBD680C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  sub_1ACA3985C(v1, *(void *)(a1 + 32));
  return v1;
}

void sub_1ACBD6850(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t TTMLRequest.inMemorySize.getter()
{
  return 1;
}

BOOL static TTMLError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t TTMLError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t TTMLError.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t _s18PodcastsFoundation11TTMLRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = type metadata accessor for TTMLRequest();
  MEMORY[0x1F4188790](v56);
  uint64_t v59 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  long long v58 = (char *)&v55 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v57 = (uint64_t)&v55 - v8;
  MEMORY[0x1F4188790](v9);
  long long v62 = (char *)&v55 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v61 = (uint64_t)&v55 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v60 = (uint64_t)&v55 - v14;
  uint64_t v15 = sub_1ACE74F28();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v55 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3478);
  uint64_t v19 = v18 - 8;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v55 - v26;
  MEMORY[0x1F4188790](v28);
  char v30 = (char *)&v55 - v29;
  uint64_t v63 = a1;
  sub_1ACA3AAD4(a1, (uint64_t)&v55 - v29, &qword_1EB7731B0);
  uint64_t v64 = a2;
  sub_1ACA3AAD4(a2, (uint64_t)v27, &qword_1EB7731B0);
  uint64_t v31 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_1ACA3AAD4((uint64_t)v30, (uint64_t)v21, &qword_1EB7731B0);
  sub_1ACA3AAD4((uint64_t)v27, v31, &qword_1EB7731B0);
  char v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v32((uint64_t)v21, 1, v15) == 1)
  {
    sub_1ACA50E78((uint64_t)v27, &qword_1EB7731B0);
    sub_1ACA50E78((uint64_t)v30, &qword_1EB7731B0);
    if (v32(v31, 1, v15) == 1)
    {
      sub_1ACA50E78((uint64_t)v21, &qword_1EB7731B0);
      uint64_t v33 = v63;
      uint64_t v34 = v60;
      sub_1ACBD70B0(v63, v60);
      uint64_t v35 = v64;
      uint64_t v36 = v61;
      sub_1ACBD70B0(v64, v61);
      uint64_t v37 = (uint64_t)v62;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1ACA3AAD4((uint64_t)v21, (uint64_t)v24, &qword_1EB7731B0);
  if (v32(v31, 1, v15) == 1)
  {
    sub_1ACA50E78((uint64_t)v27, &qword_1EB7731B0);
    sub_1ACA50E78((uint64_t)v30, &qword_1EB7731B0);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v15);
LABEL_6:
    sub_1ACA50E78((uint64_t)v21, &qword_1E99F3478);
    uint64_t v33 = v63;
    uint64_t v34 = v60;
    sub_1ACBD70B0(v63, v60);
    uint64_t v35 = v64;
    uint64_t v36 = v61;
    sub_1ACBD70B0(v64, v61);
    uint64_t v37 = (uint64_t)v62;
LABEL_12:
    sub_1ACBD7114(v36);
    sub_1ACBD7114(v34);
    sub_1ACBD70B0(v33, v37);
    uint64_t v45 = v57;
    sub_1ACBD70B0(v35, v57);
    uint64_t v47 = (uint64_t)v58;
    uint64_t v46 = (uint64_t)v59;
    goto LABEL_13;
  }
  uint64_t v38 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v55, v31, v15);
  sub_1ACBD8468(&qword_1EB770E98, MEMORY[0x1E4F276F0]);
  char v39 = sub_1ACE76168();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v16 + 8);
  v40(v38, v15);
  sub_1ACA50E78((uint64_t)v27, &qword_1EB7731B0);
  sub_1ACA50E78((uint64_t)v30, &qword_1EB7731B0);
  v40(v24, v15);
  sub_1ACA50E78((uint64_t)v21, &qword_1EB7731B0);
  uint64_t v33 = v63;
  uint64_t v34 = v60;
  sub_1ACBD70B0(v63, v60);
  uint64_t v35 = v64;
  uint64_t v36 = v61;
  sub_1ACBD70B0(v64, v61);
  uint64_t v37 = (uint64_t)v62;
  if ((v39 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_8:
  uint64_t v41 = v56;
  uint64_t v42 = *(int *)(v56 + 20);
  float v43 = flt_1ACE852C0[*(char *)(v34 + v42)];
  float v44 = flt_1ACE852C0[*(char *)(v36 + v42)];
  sub_1ACBD7114(v36);
  sub_1ACBD7114(v34);
  sub_1ACBD70B0(v33, v37);
  uint64_t v45 = v57;
  sub_1ACBD70B0(v35, v57);
  uint64_t v47 = (uint64_t)v58;
  uint64_t v46 = (uint64_t)v59;
  if (v43 != v44)
  {
LABEL_13:
    sub_1ACBD7114(v37);
    sub_1ACBD7114(v45);
    sub_1ACBD70B0(v33, v47);
    sub_1ACBD70B0(v35, v46);
    char v52 = 0;
    goto LABEL_14;
  }
  uint64_t v48 = *(int *)(v41 + 24);
  uint64_t v49 = *(void *)(v37 + v48);
  uint64_t v50 = *(void *)(v37 + v48 + 8);
  int v51 = (void *)(v45 + v48);
  if (v49 == *v51 && v50 == v51[1])
  {
    sub_1ACBD7114(v37);
    sub_1ACBD7114(v45);
    sub_1ACBD70B0(v33, v47);
    sub_1ACBD70B0(v35, v46);
LABEL_16:
    char v52 = sub_1ACCF58E4(*(unsigned char *)(v47 + *(int *)(v41 + 28)), *(unsigned char *)(v46 + *(int *)(v41 + 28)));
    goto LABEL_14;
  }
  char v54 = sub_1ACE77848();
  sub_1ACBD7114(v37);
  sub_1ACBD7114(v45);
  sub_1ACBD70B0(v33, v47);
  sub_1ACBD70B0(v35, v46);
  char v52 = 0;
  if (v54) {
    goto LABEL_16;
  }
LABEL_14:
  sub_1ACBD7114(v46);
  sub_1ACBD7114(v47);
  return v52 & 1;
}

unint64_t sub_1ACBD6FB4()
{
  unint64_t result = qword_1E99F3438;
  if (!qword_1E99F3438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3438);
  }
  return result;
}

unint64_t sub_1ACBD7008()
{
  unint64_t result = qword_1E99F3440;
  if (!qword_1E99F3440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3440);
  }
  return result;
}

unint64_t sub_1ACBD705C()
{
  unint64_t result = qword_1E99F3450;
  if (!qword_1E99F3450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3450);
  }
  return result;
}

uint64_t sub_1ACBD70B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTMLRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACBD7114(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTMLRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ACBD7170()
{
  return sub_1ACBD8468(&qword_1EB76A260, (void (*)(uint64_t))type metadata accessor for TTMLRequest);
}

unint64_t sub_1ACBD71BC()
{
  unint64_t result = qword_1E99F3458;
  if (!qword_1E99F3458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3458);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TTMLRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1ACE74F28();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v12 = (uint64_t *)((char *)a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
    uint64_t v16 = a3[9];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = *((void *)v18 + 3);
    swift_bridgeObjectRetain();
    if (v19)
    {
      uint64_t v20 = *((void *)v18 + 4);
      *((void *)v17 + 3) = v19;
      *((void *)v17 + 4) = v20;
      (**(void (***)(char *, char *, uint64_t))(v19 - 8))(v17, v18, v19);
    }
    else
    {
      long long v21 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v21;
      *((void *)v17 + 4) = *((void *)v18 + 4);
    }
  }
  return a1;
}

uint64_t destroy for TTMLRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t result = a1 + *(int *)(a2 + 36);
  if (*(void *)(result + 24))
  {
    return __swift_destroy_boxed_opaque_existential_0(result);
  }
  return result;
}

char *initializeWithCopy for TTMLRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = v12;
  uint64_t v13 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v13] = a2[v13];
  uint64_t v14 = a3[9];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = *((void *)v16 + 3);
  swift_bridgeObjectRetain();
  if (v17)
  {
    uint64_t v18 = *((void *)v16 + 4);
    *((void *)v15 + 3) = v17;
    *((void *)v15 + 4) = v18;
    (**(void (***)(char *, char *, uint64_t))(v17 - 8))(v15, v16, v17);
  }
  else
  {
    long long v19 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v19;
    *((void *)v15 + 4) = *((void *)v16 + 4);
  }
  return a1;
}

char *assignWithCopy for TTMLRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  a1[a3[5]] = a2[a3[5]];
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  uint64_t v15 = a3[9];
  uint64_t v16 = (uint64_t)&a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *((void *)v17 + 3);
  if (!*(void *)&a1[v15 + 24])
  {
    if (v18)
    {
      *(void *)(v16 + 24) = v18;
      *(void *)(v16 + 32) = *((void *)v17 + 4);
      (**(void (***)(uint64_t, char *))(v18 - 8))(v16, v17);
      return a1;
    }
LABEL_13:
    long long v19 = *(_OWORD *)v17;
    long long v20 = *((_OWORD *)v17 + 1);
    *(void *)(v16 + 32) = *((void *)v17 + 4);
    *(_OWORD *)uint64_t v16 = v19;
    *(_OWORD *)(v16 + 16) = v20;
    return a1;
  }
  if (!v18)
  {
    __swift_destroy_boxed_opaque_existential_0(v16);
    goto LABEL_13;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v16, (uint64_t *)v17);
  return a1;
}

char *initializeWithTake for TTMLRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  uint64_t v10 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v10] = a2[v10];
  uint64_t v11 = a3[9];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((void *)v12 + 4) = *((void *)v13 + 4);
  return a1;
}

char *assignWithTake for TTMLRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v13 = &a1[v12];
  long long v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v17] = a2[v17];
  uint64_t v18 = a3[9];
  long long v19 = &a1[v18];
  if (*(void *)&a1[v18 + 24]) {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&a1[v18]);
  }
  long long v20 = *(_OWORD *)&a2[v18 + 16];
  *(_OWORD *)long long v19 = *(_OWORD *)&a2[v18];
  *((_OWORD *)v19 + 1) = v20;
  *((void *)v19 + 4) = *(void *)&a2[v18 + 32];
  return a1;
}

uint64_t getEnumTagSinglePayload for TTMLRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACBD7C6C);
}

uint64_t sub_1ACBD7C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TTMLRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACBD7D48);
}

uint64_t sub_1ACBD7D48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

void sub_1ACBD7E0C()
{
  sub_1ACBD7EC8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1ACBD7EC8()
{
  if (!qword_1EB7734D0)
  {
    sub_1ACE74F28();
    unint64_t v0 = sub_1ACE76FD8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB7734D0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for TTMLError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACBD7FECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTMLError()
{
  return &type metadata for TTMLError;
}

unsigned char *storeEnumTagSinglePayload for TTMLRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACBD80F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTMLRequest.CodingKeys()
{
  return &type metadata for TTMLRequest.CodingKeys;
}

unint64_t sub_1ACBD812C()
{
  unint64_t result = qword_1E99F3460;
  if (!qword_1E99F3460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3460);
  }
  return result;
}

unint64_t sub_1ACBD8184()
{
  unint64_t result = qword_1E99F3468;
  if (!qword_1E99F3468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3468);
  }
  return result;
}

unint64_t sub_1ACBD81DC()
{
  unint64_t result = qword_1E99F3470;
  if (!qword_1E99F3470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F3470);
  }
  return result;
}

uint64_t sub_1ACBD8230(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x725565746F6D6572 && a2 == 0xE90000000000006CLL;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D614E656C6966 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D726F46656C6966 && a2 == 0xEA00000000007461 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D69746566696CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1ACBD8468(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MTEpisode.transcriptRequest(priority:lifetime:)@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v4 = v3;
  char v6 = *a1;
  char v7 = *a2;
  uint64_t v8 = (uint64_t)objc_msgSend(v3, sel_storeTrackId);
  id v9 = objc_msgSend(v4, sel_priceType);
  if (v9)
  {
    unint64_t v10 = v9;
    uint64_t v11 = sub_1ACE761B8();
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v13 = 0;
  }
  id v14 = objc_msgSend(v4, sel_transcriptIdentifier);
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = sub_1ACE761B8();
    uint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v18 = 0;
  }
  uint64_t v22 = v8 & ~(v8 >> 63);
  uint64_t v23 = v11;
  uint64_t v24 = v13;
  uint64_t v25 = v16;
  uint64_t v26 = v18;
  char v21 = v6;
  char v20 = v7;
  TranscriptEpisodeContext.transcriptRequest(priority:lifetime:)(&v21, &v20, a3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t MTInterest.state.getter()
{
  objc_msgSend(v0, sel_interestValue);
  if (v1 == -1.0) {
    return 0;
  }
  if (v1 == 0.0) {
    return 1;
  }
  if (v1 == 1.0) {
    return 2;
  }
  return 3;
}

uint64_t InterestRepository.__allocating_init(interestStore:syncKeysRepository:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t InterestRepository.init(interestStore:syncKeysRepository:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t InterestRepository.deinit()
{
  swift_release();

  return v0;
}

uint64_t InterestRepository.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1ACBD86F0(uint64_t a1)
{
  return InterestRepository.undoSuggestLess(forAdamID:)(a1);
}

uint64_t InterestRepository.undoSuggestLess(forAdamID:)(uint64_t a1)
{
  return sub_1ACBD878C(a1, (uint64_t)&unk_1F038E880, (unint64_t)sub_1ACBD93B8, (ValueMetadata *)&block_descriptor_35);
}

uint64_t InterestRepository.favoriteInterest(forAdamID:force:)(uint64_t a1, char a2)
{
  return sub_1ACBD8988(a1, a2, (uint64_t)&unk_1F038E8D0, (unint64_t)sub_1ACAF7A9C, (ValueMetadata *)&block_descriptor_10);
}

uint64_t InterestRepository.unfavoriteInterest(forAdamID:)(uint64_t a1)
{
  return sub_1ACBD878C(a1, (uint64_t)&unk_1F038E920, (unint64_t)sub_1ACAF7AE0, (ValueMetadata *)&block_descriptor_17_0);
}

uint64_t sub_1ACBD878C(uint64_t a1, uint64_t a2, unint64_t a3, ValueMetadata *a4)
{
  char v20 = &type metadata for Podcasts;
  unint64_t v8 = sub_1ACA56248();
  unint64_t v21 = v8;
  LOBYTE(aBlock[0]) = 33;
  char v9 = sub_1ACE75298();
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  if (v9)
  {
    uint64_t v11 = *(void **)(*(void *)(v4 + 16) + 16);
    uint64_t v12 = swift_allocObject();
    swift_weakInit();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    *(void *)(v13 + 24) = a1;
    unint64_t v21 = a3;
    uint64_t v22 = v13;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    char v20 = a4;
    id v14 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v11, sel_performBlock_, v14);
    _Block_release(v14);
    char v20 = &type metadata for Podcasts;
    unint64_t v21 = v8;
    LOBYTE(aBlock[0]) = 37;
    char v15 = sub_1ACE75298();
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    if (v15)
    {
      uint64_t v16 = *(void *)(v4 + 24) + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
      swift_beginAccess();
      sub_1ACA3E158(v16, (uint64_t)aBlock);
      uint64_t v17 = v20;
      unint64_t v18 = v21;
      __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v20);
      (*(void (**)(uint64_t, ValueMetadata *, unint64_t))(v18 + 280))(1, v17, v18);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    }
  }
  return result;
}

uint64_t InterestRepository.suggestLess(forAdamID:force:)(uint64_t a1, char a2)
{
  return sub_1ACBD8988(a1, a2, (uint64_t)&unk_1F038E970, (unint64_t)sub_1ACBD9430, (ValueMetadata *)&block_descriptor_24_2);
}

uint64_t sub_1ACBD8988(uint64_t a1, char a2, uint64_t a3, unint64_t a4, ValueMetadata *a5)
{
  uint64_t v22 = &type metadata for Podcasts;
  unint64_t v10 = sub_1ACA56248();
  unint64_t v23 = v10;
  LOBYTE(aBlock[0]) = 33;
  char v11 = sub_1ACE75298();
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  if (v11)
  {
    id v20 = *(id *)(*(void *)(v5 + 16) + 16);
    uint64_t v13 = swift_allocObject();
    swift_weakInit();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = a1;
    *(unsigned char *)(v14 + 32) = a2 & 1;
    unint64_t v23 = a4;
    uint64_t v24 = v14;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    uint64_t v22 = a5;
    char v15 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v20, sel_performBlock_, v15);
    _Block_release(v15);
    uint64_t v22 = &type metadata for Podcasts;
    unint64_t v23 = v10;
    LOBYTE(aBlock[0]) = 37;
    char v16 = sub_1ACE75298();
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    if (v16)
    {
      uint64_t v17 = *(void *)(v5 + 24) + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
      swift_beginAccess();
      sub_1ACA3E158(v17, (uint64_t)aBlock);
      unint64_t v18 = v22;
      unint64_t v19 = v23;
      __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v22);
      (*(void (**)(uint64_t, ValueMetadata *, unint64_t))(v19 + 280))(1, v18, v19);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    }
  }
  return result;
}

uint64_t sub_1ACBD8B6C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

Swift::Void __swiftcall InterestRepository.unsafeFavoriteExistingEntitledChannelsIfNeeded(entitledChannels:)(Swift::OpaquePointer entitledChannels)
{
  uint64_t v2 = sub_1ACE75DC8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE75E48();
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v30 = &type metadata for Podcasts;
  unint64_t v31 = sub_1ACA56248();
  LOBYTE(aBlock) = 33;
  char v9 = sub_1ACE75298();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
  if (v9)
  {
    id v10 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
    char v11 = (void *)sub_1ACE76178();
    unsigned __int8 v12 = objc_msgSend(v10, sel_BOOLForKey_, v11);

    if ((v12 & 1) == 0)
    {
      if ((unint64_t)entitledChannels._rawValue >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_1ACE77508();
        swift_bridgeObjectRelease();
        if (v15 >= 1) {
          goto LABEL_5;
        }
      }
      else if (*(uint64_t *)(((unint64_t)entitledChannels._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
      {
LABEL_5:
        uint64_t v24 = v3;
        InterestStore.unsafeFavoriteExistingEntitledChannelsIfNeeded(entitledChannels:)(entitledChannels);
        if (qword_1EB76E160 != -1) {
          swift_once();
        }
        uint64_t v13 = swift_allocObject();
        swift_weakInit();
        unint64_t v31 = (unint64_t)sub_1ACBD9444;
        uint64_t v32 = v13;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v28 = 1107296256;
        uint64_t v29 = sub_1ACA6DA9C;
        char v30 = (ValueMetadata *)&block_descriptor_34;
        uint64_t v14 = _Block_copy(&aBlock);
        swift_retain();
        sub_1ACE75E08();
        uint64_t v26 = MEMORY[0x1E4FBC860];
        sub_1ACA55D24();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
        sub_1ACA55D7C();
        sub_1ACE770E8();
        MEMORY[0x1AD118ED0](0, v8, v5, v14);
        _Block_release(v14);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v2);
LABEL_16:
        (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v6);
        swift_release();
        swift_release();
        return;
      }
      uint64_t v16 = v3;
      if (qword_1EB76D5E0 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_1ACE754C8();
      __swift_project_value_buffer(v17, (uint64_t)qword_1EB76D5C0);
      unint64_t v18 = sub_1ACE75498();
      os_log_type_t v19 = sub_1ACE76C08();
      if (os_log_type_enabled(v18, v19))
      {
        id v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v20 = 0;
        _os_log_impl(&dword_1AC9D5000, v18, v19, "[Interests] No subscribed channels to sync for interests on first launch.", v20, 2u);
        MEMORY[0x1AD11B340](v20, -1, -1);
      }

      if (qword_1EB76E160 != -1) {
        swift_once();
      }
      uint64_t v21 = swift_allocObject();
      swift_weakInit();
      unint64_t v31 = (unint64_t)sub_1ACBD943C;
      uint64_t v32 = v21;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v28 = 1107296256;
      uint64_t v29 = sub_1ACA6DA9C;
      char v30 = (ValueMetadata *)&block_descriptor_30_1;
      uint64_t v22 = _Block_copy(&aBlock);
      swift_retain();
      sub_1ACE75E08();
      uint64_t v26 = MEMORY[0x1E4FBC860];
      sub_1ACA55D24();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
      sub_1ACA55D7C();
      sub_1ACE770E8();
      MEMORY[0x1AD118ED0](0, v8, v5, v22);
      _Block_release(v22);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v2);
      goto LABEL_16;
    }
  }
}

void sub_1ACBD9164()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    id v0 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
    double v1 = (void *)sub_1ACE76178();
    objc_msgSend(v0, sel_setBool_forKey_, 1, v1);
    swift_release();
  }
}

void sub_1ACBD9224()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    char v9 = &type metadata for Podcasts;
    unint64_t v10 = sub_1ACA56248();
    LOBYTE(v8[0]) = 37;
    char v2 = sub_1ACE75298();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
    if (v2)
    {
      uint64_t v3 = *(void *)(v1 + 24) + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
      swift_beginAccess();
      sub_1ACA3E158(v3, (uint64_t)v8);
      uint64_t v4 = v9;
      unint64_t v5 = v10;
      __swift_project_boxed_opaque_existential_1(v8, (uint64_t)v9);
      (*(void (**)(uint64_t, ValueMetadata *, unint64_t))(v5 + 280))(1, v4, v5);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
    }
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    id v6 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
    uint64_t v7 = (void *)sub_1ACE76178();
    objc_msgSend(v6, sel_setBool_forKey_, 1, v7);
    swift_release();
  }
}

void sub_1ACBD93B8()
{
  sub_1ACC1EB0C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1ACBD93C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACBD93F8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACBD9430()
{
  sub_1ACC1E418(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

void sub_1ACBD943C()
{
}

void sub_1ACBD9444()
{
}

uint64_t dispatch thunk of InterestRepositoryProtocol.undoSuggestLess(forAdamID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for InterestRepository()
{
  return self;
}

uint64_t method lookup function for InterestRepository(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InterestRepository);
}

uint64_t dispatch thunk of InterestRepository.__allocating_init(interestStore:syncKeysRepository:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ArtworkSizeBucketingStrategy.bucketedSize(for:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1ACBD94D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7726E8);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  id v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = v1 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  swift_beginAccess();
  sub_1ACA2EDE8(v9, (uint64_t)v8);
  uint64_t v10 = sub_1ACE753F8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_1ACA50E78((uint64_t)v8, &qword_1EB7726E8);
  if (qword_1E99F0060 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v12 = (id)qword_1E99F2EA8;
  swift_retain();
  sub_1ACE753B8();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_1ACABEA08((uint64_t)v6, v9);
  return swift_endAccess();
}

id AccountResolver.AccountInfo.primaryAccount.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void *AccountResolver.AccountInfo.sharedAccount.getter()
{
  id v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

uint64_t AccountResolver.AccountInfo.privateListeningEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t AccountResolver.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  uint64_t v2 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection;
  *(void *)(v0 + v3) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4E4E8]), sel_init);
  return v0;
}

uint64_t AccountResolver.init()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  uint64_t v2 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection;
  *(void *)(v0 + v3) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4E4E8]), sel_init);
  return v0;
}

void sub_1ACBD98A0(uint64_t a1, void (*a2)(id *), uint64_t a3)
{
  long long v107 = a2;
  uint64_t v121 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1ACE753F8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  long long v108 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  long long v100 = (char *)&v92 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v97 = (uint64_t)&v92 - v13;
  uint64_t v98 = v14;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v92 - v15;
  unint64_t v18 = *(void **)a1;
  uint64_t v17 = *(void *)(a1 + 8);
  long long v105 = *(uint64_t (**)(uint64_t, uint64_t, void *))(a1 + 16);
  uint64_t v106 = v17;
  os_log_type_t v19 = *(void (**)(void *, void *, void *))(a1 + 32);
  long long v104 = *(void **)(a1 + 24);
  sub_1ACE76E18();
  if (qword_1E99F0060 != -1) {
    swift_once();
  }
  uint64_t v101 = a3;
  swift_beginAccess();
  id v20 = (id)qword_1E99F2EA8;
  uint64_t v102 = v3;
  sub_1ACBD94D8((uint64_t)v16);
  sub_1ACE753A8();

  uint64_t v21 = v6;
  long long v95 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v96 = v7 + 8;
  v95(v16, v6);
  if (qword_1E99EFF10 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1ACE754C8();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1E99F2C40);
  swift_bridgeObjectRetain_n();
  id v24 = v18;
  uint64_t v25 = v105;
  swift_bridgeObjectRetain_n();
  id v26 = v24;
  uint64_t v94 = v23;
  uint64_t v27 = v18;
  uint64_t v28 = sub_1ACE75498();
  os_log_type_t v29 = sub_1ACE76C08();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v103 = v21;
  long long v99 = v27;
  if (v30)
  {
    unint64_t v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    v118[0] = v32;
    *(_DWORD *)unint64_t v31 = 136446210;
    id v110 = v27;
    uint64_t v111 = v106;
    long long v112 = v25;
    long long v113 = v104;
    long long v93 = v19;
    long long v114 = v19;
    sub_1ACD5A0E8((uint64_t)v116);
    sub_1ACBDBB20((uint64_t)v116, (uint64_t)v120);
    unint64_t v33 = 0xE700000000000000;
    uint64_t v34 = 0x6E776F6E6B6E75;
    unint64_t v35 = 0xEA00000000004449;
    uint64_t v36 = 0x5344656C676E6973;
    switch(v120[32])
    {
      case 1:
        unint64_t v35 = 0xEC0000004449656DLL;
        uint64_t v36 = 0x6F48656C676E6973;
        goto LABEL_11;
      case 2:
        unint64_t v35 = 0xEB00000000444965;
        uint64_t v36 = 0x6D6F4869746C756DLL;
        goto LABEL_11;
      case 3:
        unint64_t v35 = 0xEE00746E756F6363;
        uint64_t v36 = 0x417972616D697270;
        goto LABEL_11;
      case 4:
        goto LABEL_12;
      default:
LABEL_11:
        sub_1ACBDBC1C((uint64_t)v116);
        uint64_t v34 = v36;
        unint64_t v33 = v35;
LABEL_12:
        id v110 = (id)sub_1ACA3189C(v34, v33, v118);
        sub_1ACE76FF8();
        os_log_type_t v19 = v93;
        swift_bridgeObjectRelease_n();
        uint64_t v25 = v105;
        swift_bridgeObjectRelease_n();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v28, v29, "􀉩 AccountInfo: Using %{public}s", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v32, -1, -1);
        MEMORY[0x1AD11B340](v31, -1, -1);

        uint64_t v38 = v103;
        uint64_t v37 = v108;
        break;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    uint64_t v37 = v108;
    uint64_t v38 = v21;
  }
  uint64_t v39 = v97;
  sub_1ACBD94D8(v97);
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 32);
  uint64_t v41 = v100;
  v40(v100, v39, v38);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v37, v41, v38);
  unint64_t v42 = (*(unsigned __int8 *)(v7 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v43 = swift_allocObject();
  uint64_t v44 = v101;
  *(void *)(v43 + 16) = v107;
  *(void *)(v43 + 24) = v44;
  *(void *)(v43 + 32) = "accounts(for:completion:)";
  *(void *)(v43 + 40) = 25;
  *(unsigned char *)(v43 + 48) = 2;
  v40((char *)(v43 + v42), (uint64_t)v41, v38);
  id v110 = v99;
  uint64_t v111 = v106;
  long long v112 = v25;
  long long v113 = v104;
  long long v114 = v19;
  swift_retain();
  sub_1ACD5A0E8((uint64_t)v117);
  uint64_t v45 = (void *)v117[0];
  sub_1ACBDBB20((uint64_t)v117, (uint64_t)v118);
  switch(v119)
  {
    case 1:
      v95(v108, v103);
      uint64_t v55 = swift_allocObject();
      *(void *)(v55 + 16) = sub_1ACBDBAA4;
      *(void *)(v55 + 24) = v43;
      uint64_t v56 = *(void **)(v102 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection);
      swift_retain();
      uint64_t v57 = (void *)sub_1ACE76178();
      uint64_t v58 = swift_allocObject();
      *(void *)(v58 + 16) = sub_1ACBDBBDC;
      *(void *)(v58 + 24) = v55;
      long long v114 = (void (*)(void *, void *, void *))sub_1ACBDC23C;
      uint64_t v115 = v58;
      id v110 = (id)MEMORY[0x1E4F143A8];
      uint64_t v111 = 1107296256;
      long long v112 = sub_1ACBDB884;
      long long v113 = &block_descriptor_16_0;
      uint64_t v59 = _Block_copy(&v110);
      swift_retain();
      swift_release();
      objc_msgSend(v56, sel_getHomeUserIdForSharedUserId_completion_, v57, v59);
      _Block_release(v59);
      swift_release();
      swift_release();

      sub_1ACBDBC1C((uint64_t)v117);
      return;
    case 2:
      uint64_t v60 = v118[2];
      uint64_t v61 = v118[3];
      v95(v108, v103);
      long long v62 = (void *)swift_allocObject();
      uint64_t v63 = v102;
      v62[2] = v102;
      v62[3] = v60;
      v62[4] = v61;
      v62[5] = sub_1ACBDBAA4;
      v62[6] = v43;
      uint64_t v64 = *(void **)(v63 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection);
      swift_retain();
      swift_retain();
      uint64_t v65 = (void *)sub_1ACE76178();
      uint64_t v66 = swift_allocObject();
      *(void *)(v66 + 16) = sub_1ACBDBBC4;
      *(void *)(v66 + 24) = v62;
      long long v114 = sub_1ACBDBBD4;
      uint64_t v115 = v66;
      id v110 = (id)MEMORY[0x1E4F143A8];
      uint64_t v111 = 1107296256;
      long long v112 = sub_1ACBDB884;
      long long v113 = &block_descriptor_36;
      char v67 = _Block_copy(&v110);
      swift_retain();
      swift_release();
      objc_msgSend(v64, sel_getHomeUserIdForSharedUserId_completion_, v65, v67);
      _Block_release(v67);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      return;
    case 3:
      long long v68 = (void *)v118[0];
      id v110 = (id)v118[0];
      uint64_t v111 = v118[0];
      LOWORD(v112) = 0;
      id v69 = v45;
      v107(&v110);
      sub_1ACE76E08();
      id v70 = (id)qword_1E99F2EA8;
      char v54 = v108;
      sub_1ACE753A8();

      sub_1ACBDBC1C((uint64_t)v117);
      swift_release();
      goto LABEL_21;
    case 4:
      id v110 = 0;
      uint64_t v111 = 0;
      LOWORD(v112) = 256;
      v107(&v110);
      sub_1ACE76E08();
      id v52 = (id)qword_1E99F2EA8;
      char v54 = v108;
      sub_1ACE753A8();
      swift_release();
      goto LABEL_20;
    default:
      uint64_t v46 = v118[0];
      id v47 = objc_msgSend(self, sel_sharedAccountStore);
      id v110 = 0;
      id v48 = objc_msgSend(v47, sel_storeAccountForDSID_error_, v46, &v110);

      id v49 = v110;
      if (v48)
      {
        id v110 = v48;
        uint64_t v111 = (uint64_t)v48;
        LOWORD(v112) = 0;
        id v50 = v48;
        id v51 = v49;
        id v52 = v50;
        v107(&v110);
        sub_1ACE76E08();
        id v53 = (id)qword_1E99F2EA8;
        char v54 = v108;
        sub_1ACE753A8();

        sub_1ACBDBC1C((uint64_t)v117);
        swift_release();

LABEL_20:
LABEL_21:
        uint64_t v71 = v54;
        uint64_t v72 = v103;
      }
      else
      {
        id v73 = v110;
        long long v74 = (void *)sub_1ACE74D78();

        swift_willThrow();
        id v75 = v74;
        id v76 = v74;
        char v77 = sub_1ACE75498();
        os_log_type_t v78 = sub_1ACE76BE8();
        BOOL v79 = os_log_type_enabled(v77, v78);
        uint64_t v80 = v107;
        if (v79)
        {
          long long v81 = (uint8_t *)swift_slowAlloc();
          long long v82 = (void *)swift_slowAlloc();
          id v110 = v82;
          *(_DWORD *)long long v81 = 136446210;
          uint64_t v109 = (uint64_t)v74;
          id v83 = v74;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
          uint64_t v84 = sub_1ACE76228();
          uint64_t v109 = sub_1ACA3189C(v84, v85, (uint64_t *)&v110);
          uint64_t v86 = v103;
          sub_1ACE76FF8();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1AC9D5000, v77, v78, "Unable to resolve DSID: %{public}s", v81, 0xCu);
          swift_arrayDestroy();
          uint64_t v87 = v82;
          uint64_t v88 = v86;
          uint64_t v80 = v107;
          long long v89 = v108;
          MEMORY[0x1AD11B340](v87, -1, -1);
          MEMORY[0x1AD11B340](v81, -1, -1);
        }
        else
        {

          long long v89 = v108;
          uint64_t v88 = v103;
        }
        id v110 = v74;
        uint64_t v111 = 0;
        LOWORD(v112) = 256;
        id v90 = v74;
        v80(&v110);
        sub_1ACE76E08();
        id v91 = (id)qword_1E99F2EA8;
        sub_1ACE753A8();

        sub_1ACBDBC1C((uint64_t)v117);
        swift_release();

        uint64_t v71 = v89;
        uint64_t v72 = v88;
      }
      v95(v71, v72);
      return;
  }
}

void sub_1ACBDA5B0(long long *a1, void (*a2)(long long *))
{
  char v2 = *((unsigned char *)a1 + 16);
  char v3 = *((unsigned char *)a1 + 17);
  long long v5 = *a1;
  char v6 = v2;
  char v7 = v3;
  a2(&v5);
  sub_1ACE76E08();
  if (qword_1E99F0060 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v4 = (id)qword_1E99F2EA8;
  sub_1ACE753A8();
}

uint64_t sub_1ACBDA6A4(void *a1, uint64_t a2, void **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1ACE75DC8();
  uint64_t v22 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1ACE75E48();
  uint64_t v12 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a3;
  sub_1ACA51E1C();
  uint64_t v16 = (void *)sub_1ACE76CF8();
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = a1;
  v17[3] = a4;
  v17[4] = a5;
  v17[5] = v15;
  aBlock[4] = sub_1ACBDC090;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  void aBlock[3] = &block_descriptor_26_2;
  unint64_t v18 = _Block_copy(aBlock);
  id v19 = a1;
  swift_retain();
  sub_1ACBDC09C(v15);
  swift_release();
  sub_1ACE75E08();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1ACBDC0DC((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA55D7C();
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v14, v11, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v21);
}

void sub_1ACBDA978(void *a1, void (*a2)(uint64_t *), uint64_t a3, void *a4)
{
  if (a1)
  {
    uint64_t v8 = (uint64_t)a1;
    uint64_t v9 = a1;
    __int16 v10 = 0;
    id v5 = a1;
    a2(&v8);
  }
  else
  {
    if (a4 == (void *)2) {
      uint64_t v7 = 1;
    }
    else {
      uint64_t v7 = (uint64_t)a4;
    }
    uint64_t v8 = v7;
    uint64_t v9 = 0;
    __int16 v10 = 256;
    sub_1ACBDC09C(a4);
    a2(&v8);
    sub_1ACBDC0BC(a4);
  }
}

void sub_1ACBDAA20(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12 = (void *)swift_allocObject();
  _OWORD v12[2] = a1;
  void v12[3] = a7;
  void v12[4] = a8;
  uint64_t v13 = *(void **)(a4 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection);
  id v14 = a1;
  swift_retain();
  uint64_t v15 = (void *)sub_1ACE76178();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1ACBDC164;
  *(void *)(v16 + 24) = v12;
  v18[4] = sub_1ACBDC23C;
  v18[5] = v16;
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 1107296256;
  v18[2] = sub_1ACBDB884;
  v18[3] = &block_descriptor_36_0;
  uint64_t v17 = _Block_copy(v18);
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_getHomeUserIdForSharedUserId_completion_, v15, v17);
  _Block_release(v17);
  swift_release();
}

uint64_t sub_1ACBDAB88(void *a1, int a2, void **a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a5;
  int v37 = a2;
  uint64_t v10 = sub_1ACE75DC8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1ACE75E48();
  uint64_t v39 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA51E1C();
  if (a4 && a1)
  {
    id v17 = a1;
    id v18 = a4;
    uint64_t v36 = v14;
    uint64_t v19 = v11;
    id v20 = v18;
    id v35 = v17;
    id v21 = v20;
    uint64_t v11 = v19;
    id v22 = v21;
    uint64_t v23 = sub_1ACE76CF8();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v38;
    *(void *)(v24 + 24) = a6;
    *(void *)(v24 + 32) = a4;
    *(void *)(v24 + 40) = a1;
    uint64_t v25 = (void *)v23;
    *(unsigned char *)(v24 + 48) = v37 & 1;
    uint64_t v44 = sub_1ACBDC20C;
    uint64_t v45 = (void *)v24;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v41 = 1107296256;
    unint64_t v42 = sub_1ACA6DA9C;
    uint64_t v43 = &block_descriptor_48_0;
    id v26 = _Block_copy(&aBlock);
    swift_retain();
    id v27 = v22;
    id v28 = v35;
    swift_release();
    sub_1ACE75E08();
    uint64_t aBlock = MEMORY[0x1E4FBC860];
    sub_1ACBDC0DC((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v16, v13, v26);
    os_log_type_t v29 = v26;
    uint64_t v14 = v36;
    _Block_release(v29);
  }
  else
  {
    BOOL v30 = *a3;
    uint64_t v25 = (void *)sub_1ACE76CF8();
    unint64_t v31 = (void *)swift_allocObject();
    _OWORD v31[2] = v38;
    v31[3] = a6;
    v31[4] = v30;
    uint64_t v44 = sub_1ACBDC1B8;
    uint64_t v45 = v31;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v41 = 1107296256;
    unint64_t v42 = sub_1ACA6DA9C;
    uint64_t v43 = &block_descriptor_42_0;
    uint64_t v32 = _Block_copy(&aBlock);
    swift_retain();
    sub_1ACBDC09C(v30);
    swift_release();
    sub_1ACE75E08();
    uint64_t aBlock = MEMORY[0x1E4FBC860];
    sub_1ACBDC0DC((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v16, v13, v32);
    _Block_release(v32);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v16, v14);
}

void sub_1ACBDB014(void (*a1)(void *), uint64_t a2, void *a3)
{
  if (a3 == (void *)2) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = (uint64_t)a3;
  }
  v6[0] = v5;
  v6[1] = 0;
  __int16 v7 = 256;
  sub_1ACBDC09C(a3);
  a1(v6);
  sub_1ACBDC0BC(a3);
}

void sub_1ACBDB088(void (*a1)(void *), uint64_t a2, void *a3, void *a4, char a5)
{
  v9[0] = a3;
  v9[1] = a4;
  char v10 = a5;
  char v11 = 0;
  id v7 = a4;
  id v8 = a3;
  a1(v9);
}

void sub_1ACBDB100(void *a1, void *a2, void *a3, void (*a4)(id, id, id *))
{
  v59[1] = *MEMORY[0x1E4F143B8];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A978);
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE75118();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v17 = (char *)&v53 - v16;
  if (a3)
  {
    v58[0] = a3;
    id v18 = a3;
    a4(0, 0, v58);

    return;
  }
  if (!a2) {
    goto LABEL_6;
  }
  sub_1ACE750B8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1ACA50E78((uint64_t)v10, &qword_1EB76A978);
LABEL_6:
    if (qword_1E99EFF10 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1ACE754C8();
    __swift_project_value_buffer(v19, (uint64_t)qword_1E99F2C40);
    swift_bridgeObjectRetain_n();
    id v20 = sub_1ACE75498();
    os_log_type_t v21 = sub_1ACE76BE8();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      v58[1] = a2;
      v59[0] = v23;
      *(_DWORD *)id v22 = 136446210;
      v58[0] = a1;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
      uint64_t v24 = sub_1ACE76228();
      v58[0] = (id)sub_1ACA3189C(v24, v25, v59);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v20, v21, "Error resolving user. UserIDString missing. %{public}s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v23, -1, -1);
      MEMORY[0x1AD11B340](v22, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v58[0] = 0;
    a4(0, 0, v58);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
  id v26 = objc_msgSend(self, sel_sharedAccountStore);
  id v27 = (void *)sub_1ACE750D8();
  v58[0] = 0;
  id v28 = objc_msgSend(v26, sel_storeAccountForHomeUserIdentifier_error_, v27, v58);

  if (v28)
  {
    id v29 = v58[0];
    id v30 = objc_msgSend(v28, sel_ic_privateListeningEnabled);
    if (v30)
    {
      unint64_t v31 = v30;
      id v32 = objc_msgSend(v30, sel_BOOLValue);
    }
    else
    {
      id v32 = 0;
    }
    v58[0] = (id)2;
    id v51 = v28;
    a4(v28, v32, v58);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  else
  {
    id v33 = v58[0];
    uint64_t v34 = (void *)sub_1ACE74D78();

    swift_willThrow();
    if (qword_1E99EFF10 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1ACE754C8();
    __swift_project_value_buffer(v35, (uint64_t)qword_1E99F2C40);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    id v36 = v34;
    id v37 = v34;
    uint64_t v38 = sub_1ACE75498();
    os_log_type_t v39 = sub_1ACE76BE8();
    int v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v57 = (void *)swift_slowAlloc();
      v58[0] = v57;
      *(_DWORD *)uint64_t v41 = 136446466;
      int v56 = v40;
      sub_1ACBDC0DC(&qword_1EB76A970, MEMORY[0x1E4F27990]);
      os_log_t v55 = v38;
      uint64_t v42 = sub_1ACE777C8();
      v59[0] = sub_1ACA3189C(v42, v43, (uint64_t *)v58);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      char v54 = *(void (**)(char *, uint64_t))(v12 + 8);
      v54(v15, v11);
      *(_WORD *)(v41 + 12) = 2082;
      v59[0] = (uint64_t)v34;
      id v44 = v34;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
      uint64_t v45 = sub_1ACE76228();
      v59[0] = sub_1ACA3189C(v45, v46, (uint64_t *)v58);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();

      os_log_t v47 = v55;
      _os_log_impl(&dword_1AC9D5000, v55, (os_log_type_t)v56, "Error resolving user from home identifier %{public}s - %{public}s", (uint8_t *)v41, 0x16u);
      id v48 = v57;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v48, -1, -1);
      uint64_t v49 = v41;
      id v50 = v54;
      MEMORY[0x1AD11B340](v49, -1, -1);
    }
    else
    {
      id v50 = *(void (**)(char *, uint64_t))(v12 + 8);
      v50(v15, v11);
    }
    v58[0] = v34;
    id v52 = v34;
    a4(0, 0, v58);

    v50(v17, v11);
  }
}

uint64_t sub_1ACBDB884(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    uint64_t v5 = sub_1ACE761B8();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  swift_retain();
  id v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t AccountResolver.deinit()
{
  sub_1ACA50E78(v0 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID, &qword_1EB7726E8);

  return v0;
}

uint64_t AccountResolver.__deallocating_deinit()
{
  sub_1ACA50E78(v0 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID, &qword_1EB7726E8);

  return swift_deallocClassInstance();
}

uint64_t sub_1ACBDB9D8()
{
  uint64_t v1 = sub_1ACE753F8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1ACBDBAA4(long long *a1)
{
  sub_1ACE753F8();
  unint64_t v3 = *(void (**)(long long *))(v1 + 16);
  sub_1ACBDA5B0(a1, v3);
}

uint64_t sub_1ACBDBB20(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ACBDBB7C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1ACBDBBC4(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1ACBDAA20(a1, a2, a3, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

void sub_1ACBDBBD4(void *a1, void *a2, void *a3)
{
  sub_1ACBDB100(a1, a2, a3, *(void (**)(id, id, id *))(v3 + 16));
}

uint64_t sub_1ACBDBBDC(void *a1, uint64_t a2, void **a3)
{
  return sub_1ACBDA6A4(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1ACBDBBE4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACBDBC1C(uint64_t a1)
{
  return a1;
}

void sub_1ACBDBC54(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 3:

      break;
    case 1:
      goto LABEL_7;
    case 2:
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t sub_1ACBDBCF8()
{
  return type metadata accessor for AccountResolver();
}

uint64_t type metadata accessor for AccountResolver()
{
  uint64_t result = qword_1E99F3490;
  if (!qword_1E99F3490) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1ACBDBD4C()
{
  sub_1ACABE9B0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for AccountResolver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccountResolver);
}

uint64_t dispatch thunk of AccountResolver.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of AccountResolver.accounts(for:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t getEnumTagSinglePayload for AccountResolver.Error(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

ValueMetadata *type metadata accessor for AccountResolver.Error()
{
  return &type metadata for AccountResolver.Error;
}

uint64_t initializeBufferWithCopyOfBuffer for AccountResolver.AccountInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for AccountResolver.AccountInfo(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for AccountResolver.AccountInfo(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountResolver.AccountInfo(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 17)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountResolver.AccountInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountResolver.AccountInfo()
{
  return &type metadata for AccountResolver.AccountInfo;
}

uint64_t sub_1ACBDC040()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + 40);
  if ((unint64_t)v1 >= 3) {

  }
  return swift_deallocObject();
}

void sub_1ACBDC090()
{
  sub_1ACBDA978(*(void **)(v0 + 16), *(void (**)(uint64_t *))(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

id sub_1ACBDC09C(id result)
{
  if (result != (id)2) {
    return sub_1ACBDC0AC(result);
  }
  return result;
}

id sub_1ACBDC0AC(id result)
{
  if ((unint64_t)result >= 2) {
    return result;
  }
  return result;
}

void sub_1ACBDC0BC(id a1)
{
  if (a1 != (id)2) {
    sub_1ACBDC0CC(a1);
  }
}

void sub_1ACBDC0CC(id a1)
{
  if ((unint64_t)a1 >= 2) {
}
  }

uint64_t sub_1ACBDC0DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACBDC124()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACBDC164(void *a1, int a2, void **a3)
{
  return sub_1ACBDAB88(a1, a2, a3, *(void **)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_1ACBDC170()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + 32);
  if ((unint64_t)v1 >= 3) {

  }
  return swift_deallocObject();
}

void sub_1ACBDC1B8()
{
  sub_1ACBDB014(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1ACBDC1C4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1ACBDC20C()
{
  sub_1ACBDB088(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(unsigned char *)(v0 + 48));
}

uint64_t MetricsOfferType.rawValue.getter(uint64_t a1)
{
  return a1;
}

unint64_t MetricsOfferType.debugDescription.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_1ACBDC328()
{
  return MetricsOfferType.debugDescription.getter();
}

uint64_t MetricsOfferType.description.getter(uint64_t a1)
{
  return a1;
}

uint64_t MetricsOfferType.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_1ACE77858();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsOfferType.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE778D8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsOfferType.free.getter()
{
  return 1701147238;
}

uint64_t static MetricsOfferType.paid.getter()
{
  return 1684627824;
}

uint64_t static MetricsOfferType.hybrid.getter()
{
  return 0x646972627968;
}

uint64_t static MetricsOfferType.subscribed.getter()
{
  return 0x6269726373627573;
}

unint64_t sub_1ACBDC518()
{
  unint64_t result = qword_1E99F34A0;
  if (!qword_1E99F34A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F34A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsOfferType()
{
  return &type metadata for MetricsOfferType;
}

uint64_t Publisher.bufferedMulticast()(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1ACE76FD8();
  MEMORY[0x1F4188790](v4);
  id v22 = (char *)v20 - v5;
  uint64_t v6 = sub_1ACE75678();
  uint64_t v23 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)v20 - v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = sub_1ACE75918();
  uint64_t WitnessTable = swift_getWitnessTable();
  v20[1] = WitnessTable;
  v20[0] = swift_getWitnessTable();
  uint64_t v25 = v6;
  uint64_t v26 = v9;
  uint64_t v27 = WitnessTable;
  uint64_t v28 = v20[0];
  sub_1ACE75748();
  uint64_t v20[2] = swift_getWitnessTable();
  v20[4] = sub_1ACE755A8();
  v20[3] = swift_getWitnessTable();
  uint64_t v11 = sub_1ACE75598();
  uint64_t v21 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v20 - v12;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  sub_1ACE75B58();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v22, 1, 1);
  sub_1ACE75928();
  uint64_t v15 = sub_1ACE75CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
  uint64_t v25 = v15;
  uint64_t v16 = sub_1ACE75948();
  swift_release();
  uint64_t v25 = v16;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  sub_1ACE75AE8();
  swift_release();
  swift_release();
  swift_getWitnessTable();
  uint64_t v18 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v11);
  return v18;
}

uint64_t Publisher.replayingBufferedMulticast()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1ACE76FD8();
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v20 - v7;
  uint64_t v9 = sub_1ACE75678();
  uint64_t v21 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  sub_1ACE75B58();
  swift_release();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v13 = type metadata accessor for RepublishingValueSubject();
  uint64_t v20 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v8, 1, 1, AssociatedTypeWitness);
  RepublishingValueSubject.__allocating_init(_:)((uint64_t)v8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v16 = sub_1ACE75CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
  uint64_t v26 = v15;
  uint64_t v27 = v16;
  uint64_t v23 = v9;
  uint64_t v24 = v13;
  uint64_t v25 = WitnessTable;
  sub_1ACE75748();
  swift_getWitnessTable();
  uint64_t v17 = sub_1ACE75948();
  swift_release();
  uint64_t v23 = v17;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  sub_1ACE755A8();
  swift_getWitnessTable();
  sub_1ACE75AE8();
  swift_release();
  return swift_release();
}

uint64_t sub_1ACBDCD90()
{
  return swift_deallocObject();
}

uint64_t sub_1ACBDCDA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACBDCDE8(a1, a2);
}

uint64_t sub_1ACBDCDBC()
{
  return swift_deallocObject();
}

uint64_t sub_1ACBDCDCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACBDCED0(a1, a2);
}

uint64_t sub_1ACBDCDE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, AssociatedTypeWitness);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  return v5(a2, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_1ACBDCEC0()
{
  return swift_deallocObject();
}

uint64_t sub_1ACBDCED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1ACE76FD8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a2, a1, v4);
}

uint64_t sub_1ACBDCF64()
{
  return swift_deallocObject();
}

uint64_t sub_1ACBDCF74()
{
  return swift_getWitnessTable();
}

void static DeviceCapabilities.mobileGestaltCapabilities()(void *a1@<X8>)
{
  uint64_t v2 = (void *)sub_1ACE76178();
  unsigned int v3 = MGGetBoolAnswer();

  *a1 = v3;
}

id sub_1ACBDD18C()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ApplicationStateMonitor()), sel_init);
  qword_1EB76F6B0 = (uint64_t)result;
  return result;
}

id ApplicationStateMonitor.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id static ApplicationStateMonitor.shared.getter()
{
  if (qword_1EB76F6C0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB76F6B0;
  return v0;
}

Swift::Void __swiftcall ApplicationStateMonitor.beginListening()()
{
  id v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR___PodcastsApplicationStateMonitor_listenerTask);
  uint64_t v2 = (uint64_t *)&v1[4];
  unsigned int v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACBDD458(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1ACBDD30C(uint64_t *a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1) {
    sub_1ACE76858();
  }
  sub_1ACE76798();
  uint64_t v7 = sub_1ACE767F8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
  id v8 = (void *)swift_allocObject();
  unsigned char v8[2] = 0;
  void v8[3] = 0;
  v8[4] = a2;
  id v9 = a2;
  uint64_t v10 = sub_1ACA47C2C((uint64_t)v6, (uint64_t)&unk_1E99F34C8, (uint64_t)v8);
  uint64_t result = swift_release();
  *a1 = v10;
  return result;
}

uint64_t sub_1ACBDD458(uint64_t *a1)
{
  return sub_1ACBDD30C(a1, *(void **)(v1 + 16));
}

uint64_t sub_1ACBDD474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1ACA51034;
  v6[9] = a4;
  return MEMORY[0x1F4188298](sub_1ACBDD540, 0, 0);
}

uint64_t sub_1ACBDD520()
{
  *(void *)(v1 + 72) = v0;
  return MEMORY[0x1F4188298](sub_1ACBDD540, 0, 0);
}

uint64_t sub_1ACBDD540()
{
  uint64_t v1 = (void *)v0[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7707C8);
  uint64_t inited = swift_initStackObject();
  v0[10] = inited;
  *(_OWORD *)(inited + 16) = xmmword_1ACE84820;
  *(void *)(inited + 32) = @"MTApplicationDidBecomeActiveNotification";
  *(void *)(inited + 40) = @"MTApplicationDidEnterBackgroundNotification";
  unsigned int v3 = self;
  uint64_t v4 = @"MTApplicationDidBecomeActiveNotification";
  uint64_t v5 = @"MTApplicationDidEnterBackgroundNotification";
  id v6 = objc_msgSend(v3, sel_defaultCenter);
  v0[11] = v6;
  uint64_t v7 = swift_allocObject();
  v0[12] = v7;
  *(void *)(v7 + 16) = v1;
  id v8 = v1;
  id v9 = v6;
  uint64_t v10 = sub_1ACE5A648(inited);
  v0[13] = v10;

  uint64_t v11 = swift_allocObject();
  v0[14] = v11;
  *(void *)(v11 + 16) = &unk_1E99F34E0;
  *(void *)(v11 + 24) = v7;
  swift_retain();
  uint64_t v12 = (void *)swift_task_alloc();
  v0[15] = v12;
  _OWORD v12[2] = v10;
  void v12[3] = &unk_1E99F34E8;
  void v12[4] = v11;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[16] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1ACBDD758;
  return MEMORY[0x1F4188080]();
}

uint64_t sub_1ACBDD758()
{
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v1 = sub_1ACBDD91C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v1 = sub_1ACBDD870;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1ACBDD870()
{
  uint64_t v1 = *(void **)(v0 + 88);
  swift_release();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  type metadata accessor for Name(0);
  swift_arrayDestroy();
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1ACBDD91C()
{
  return swift_task_dealloc();
}

Swift::Void __swiftcall ApplicationStateMonitor.endListening()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR___PodcastsApplicationStateMonitor_listenerTask);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACBDD990(v2);
  os_unfair_lock_unlock(v3);
}

void *sub_1ACBDD990(void *result)
{
  uint64_t v1 = result;
  if (*result)
  {
    sub_1ACE76858();
    uint64_t result = (void *)swift_release();
  }
  void *v1 = 0;
  return result;
}

uint64_t ApplicationStateMonitor.currentState()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR___PodcastsApplicationStateMonitor_applicationState);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACA30C84(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

Swift::Bool __swiftcall ApplicationStateMonitor.isActive()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR___PodcastsApplicationStateMonitor_applicationState);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACA30C84(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5 == 1;
}

Swift::Bool __swiftcall ApplicationStateMonitor.isBackground()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR___PodcastsApplicationStateMonitor_applicationState);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACA30C84(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5 == 2;
}

Swift::Bool __swiftcall ApplicationStateMonitor.isUnknown()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR___PodcastsApplicationStateMonitor_applicationState);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACA30C84(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5 == 0;
}

void ApplicationStateMonitor.update(state:)()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR___PodcastsApplicationStateMonitor_applicationState);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACBDE638(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t static ApplicationStateMonitor.description(for:)(uint64_t a1)
{
  uint64_t result = 0x6E776F6E6B6E55;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x657669746341;
      break;
    case 2:
      uint64_t result = 0x756F72676B636142;
      break;
    case 3:
      uint64_t result = 0x6576697463616E49;
      break;
    default:
      sub_1ACE77A18();
      __break(1u);
      JUMPOUT(0x1ACBDDF54);
  }
  return result;
}

uint64_t sub_1ACBDE068(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1ACBDE088, 0, 0);
}

uint64_t sub_1ACBDE088()
{
  uint64_t v1 = (void *)sub_1ACE749C8();
  sub_1ACBDE104(v1);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_1ACBDE104(void *a1)
{
  uint64_t v2 = sub_1ACE761B8();
  uint64_t v4 = v3;
  if (v2 == sub_1ACE761B8() && v4 == v5)
  {
    uint64_t v8 = swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  char v7 = sub_1ACE77848();
  swift_bridgeObjectRelease();
  uint64_t v8 = swift_bridgeObjectRelease();
  if (v7) {
    goto LABEL_18;
  }
  uint64_t v9 = sub_1ACE761B8();
  uint64_t v11 = v10;
  if (v9 == sub_1ACE761B8() && v11 == v12)
  {
    uint64_t v8 = swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  char v14 = sub_1ACE77848();
  swift_bridgeObjectRelease();
  uint64_t v8 = swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_18:
    MEMORY[0x1F4188790](v8);
    uint64_t v24 = v23 + 4;
    uint64_t v25 = v23 + 6;
    os_unfair_lock_lock(v23 + 6);
    sub_1ACBDEA60(v24);
    os_unfair_lock_unlock(v25);
    return;
  }
  if (qword_1E99EFF50 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1ACE754C8();
  __swift_project_value_buffer(v15, (uint64_t)qword_1E99F2CE8);
  id v26 = a1;
  uint64_t v16 = sub_1ACE75498();
  os_log_type_t v17 = sub_1ACE76BE8();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v27 = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    type metadata accessor for Name(0);
    id v20 = v26;
    uint64_t v21 = sub_1ACE76228();
    sub_1ACA3189C(v21, v22, &v27);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v16, v17, "Application monitor received unknown notification: %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v19, -1, -1);
    MEMORY[0x1AD11B340](v18, -1, -1);
  }
  else
  {
  }
}

id ApplicationStateMonitor.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR___PodcastsApplicationStateMonitor_applicationState;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770758);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  *(void *)(v3 + 16) = 0;
  *(void *)&v0[v2] = v3;
  uint64_t v4 = OBJC_IVAR___PodcastsApplicationStateMonitor_listenerTask;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770770);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 24) = 0;
  *(void *)(v5 + 16) = 0;
  *(void *)&v0[v4] = v5;
  v7.receiver = v0;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

id ApplicationStateMonitor.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t PFApplicationState.init(rawValue:)(unint64_t a1)
{
  return sub_1ACBDE644(a1);
}

unint64_t sub_1ACBDE604@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1ACBDE644(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void *sub_1ACBDE638(void *result)
{
  *unint64_t result = *(void *)(v1 + 16);
  return result;
}

unint64_t sub_1ACBDE644(unint64_t result)
{
  if (result > 3) {
    return 0;
  }
  return result;
}

unint64_t sub_1ACBDE658()
{
  unint64_t result = qword_1E99F34B8;
  if (!qword_1E99F34B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E99F34B8);
  }
  return result;
}

uint64_t type metadata accessor for ApplicationStateMonitor()
{
  return self;
}

ValueMetadata *type metadata accessor for PFApplicationState()
{
  return &type metadata for PFApplicationState;
}

uint64_t sub_1ACBDE6E0()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1ACBDE720(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  objc_super v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *objc_super v7 = v2;
  v7[1] = sub_1ACA50B84;
  return sub_1ACBDD474(a1, v4, v5, v6);
}

uint64_t sub_1ACBDE7D4()
{
  return swift_deallocObject();
}

uint64_t sub_1ACBDE80C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1ACA50B84;
  return MEMORY[0x1F4188298](sub_1ACBDE088, 0, 0);
}

uint64_t sub_1ACBDE8BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACBDE8F4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1ACA51034;
  return sub_1ACE5A4A0(a1, v4);
}

uint64_t sub_1ACBDE99C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1ACA51034;
  return sub_1ACE58138(a1, a2, v6, v7, v8);
}

void *sub_1ACBDEA60(void *a1)
{
  return sub_1ACBDE638(a1);
}

PodcastsFoundation::ShowType_optional __swiftcall ShowType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = PodcastsFoundation_ShowType_serial;
  }
  else {
    v2.value = PodcastsFoundation_ShowType_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t ShowType.rawValue.getter(char a1)
{
  if (a1) {
    return 0x6C6169726573;
  }
  else {
    return 0x6369646F73697065;
  }
}

uint64_t sub_1ACBDEB00(unsigned char *a1, unsigned char *a2)
{
  BOOL v2 = *a1 == 0;
  if (*a1) {
    uint64_t v3 = 0x6C6169726573;
  }
  else {
    uint64_t v3 = 0x6369646F73697065;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (*a2) {
    uint64_t v5 = 0x6C6169726573;
  }
  else {
    uint64_t v5 = 0x6369646F73697065;
  }
  if (*a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ACBDEBA8()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACBDEC28()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACBDEC94()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACBDED10@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1ACBDED70(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6369646F73697065;
  if (*v1) {
    uint64_t v2 = 0x6C6169726573;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ACBDEDAC()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACBDEE0C()
{
  return sub_1ACE764C8();
}

uint64_t ShowType.mtPodcastShowType.getter(char a1)
{
  if (a1) {
    return 2;
  }
  else {
    return 1;
  }
}

unint64_t sub_1ACBDEE70()
{
  unint64_t result = qword_1E99F34F8;
  if (!qword_1E99F34F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E99F34F8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ShowType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACBDEF90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowType()
{
  return &type metadata for ShowType;
}

unint64_t sub_1ACBDEFC8()
{
  unint64_t result = qword_1EB76D348;
  if (!qword_1EB76D348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76D348);
  }
  return result;
}

void NSManagedObjectContext.unsafeInterest(forAdamID:)(uint64_t a1)
{
  int v3 = (void *)sub_1ACE76178();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ACE84820;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1ACADC3A8();
  *(void *)(v4 + 32) = 0x44496D616461;
  *(void *)(v4 + 40) = 0xE600000000000000;
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedLongLong_, a1);
  *(void *)(v4 + 96) = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
  *(void *)(v4 + 104) = sub_1ACBDF258();
  *(void *)(v4 + 72) = v5;
  unsigned int v6 = (void *)sub_1ACE76B88();
  id v7 = objc_msgSend(v1, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_limit_, v3, v6, 0, 1, 1);

  if (!v7) {
    goto LABEL_14;
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
  unint64_t v8 = sub_1ACE76578();

  if (!(v8 >> 62))
  {
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v8 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v9 = *(id *)(v8 + 32);
      goto LABEL_7;
    }
    __break(1u);
LABEL_14:
    __break(1u);
    return;
  }
  id v9 = (id)MEMORY[0x1AD119490](0, v8);
LABEL_7:
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  type metadata accessor for MTInterest();
  if (!swift_dynamicCastClass()) {
}
  }

{
  void *v1;
  void *v2;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;

  uint64_t v2 = v1;
  uint64_t v4 = (void *)sub_1ACE76178();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  id v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1ACE84820;
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 64) = sub_1ACADC3A8();
  *(void *)(v5 + 32) = 0x44496D616461;
  *(void *)(v5 + 40) = 0xE600000000000000;
  unsigned int v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedLongLong_, a1 & ~(a1 >> 63));
  *(void *)(v5 + 96) = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
  *(void *)(v5 + 104) = sub_1ACBDF258();
  *(void *)(v5 + 72) = v6;
  id v7 = (void *)sub_1ACE76B88();
  unint64_t v8 = objc_msgSend(v2, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_limit_, v4, v7, 0, 1, 1);

  if (!v8) {
    goto LABEL_14;
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
  id v9 = sub_1ACE76578();

  if (!(v9 >> 62))
  {
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v9 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v10 = *(id *)(v9 + 32);
      goto LABEL_7;
    }
    __break(1u);
LABEL_14:
    __break(1u);
    return;
  }
  uint64_t v10 = (id)MEMORY[0x1AD119490](0, v9);
LABEL_7:
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  type metadata accessor for MTInterest();
  if (!swift_dynamicCastClass()) {
}
  }

unint64_t sub_1ACBDF258()
{
  unint64_t result = qword_1EB768F60;
  if (!qword_1EB768F60)
  {
    sub_1ACA50D4C(255, (unint64_t *)&qword_1EB768F50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB768F60);
  }
  return result;
}

id sub_1ACBDF500(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = a1;
  NSManagedObjectContext.unsafeInterest(forAdamID:)(a3);
  unsigned int v6 = v5;

  return v6;
}

void sub_1ACBDF54C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1ACE77138();
    sub_1ACA6DC4C();
    sub_1ACBDF99C();
    sub_1ACE76A28();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v2 = v20;
    uint64_t v3 = v21;
    unint64_t v4 = v22;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v16 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    uint64_t v8 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!sub_1ACE771A8()) {
      goto LABEL_36;
    }
    sub_1ACA6DC4C();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v11 = v23;
    swift_unknownObjectRelease();
    if (!v23) {
      goto LABEL_36;
    }
LABEL_31:
    if (objc_msgSend(v11, sel_isBookmarked))
    {

LABEL_36:
      sub_1ACA50A70();
      return;
    }
    unsigned __int8 v15 = objc_msgSend(v11, sel_isDownloaded);

    if (v15) {
      goto LABEL_36;
    }
  }
  if (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v3 << 6);
LABEL_30:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v11) {
      goto LABEL_36;
    }
    goto LABEL_31;
  }
  int64_t v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v16) {
      goto LABEL_36;
    }
    unint64_t v13 = *(void *)(v17 + 8 * v12);
    ++v3;
    if (!v13)
    {
      uint64_t v3 = v8 + 2;
      if (v8 + 2 >= v16) {
        goto LABEL_36;
      }
      unint64_t v13 = *(void *)(v17 + 8 * v3);
      if (!v13)
      {
        uint64_t v3 = v8 + 3;
        if (v8 + 3 >= v16) {
          goto LABEL_36;
        }
        unint64_t v13 = *(void *)(v17 + 8 * v3);
        if (!v13)
        {
          uint64_t v3 = v8 + 4;
          if (v8 + 4 >= v16) {
            goto LABEL_36;
          }
          unint64_t v13 = *(void *)(v17 + 8 * v3);
          if (!v13)
          {
            uint64_t v3 = v8 + 5;
            if (v8 + 5 >= v16) {
              goto LABEL_36;
            }
            unint64_t v13 = *(void *)(v17 + 8 * v3);
            if (!v13)
            {
              uint64_t v14 = v8 + 6;
              while (v16 != v14)
              {
                unint64_t v13 = *(void *)(v17 + 8 * v14++);
                if (v13)
                {
                  uint64_t v3 = v14 - 1;
                  goto LABEL_29;
                }
              }
              goto LABEL_36;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v4 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t MTPodcast.shouldBeDeleted.getter()
{
  id v1 = objc_msgSend(v0, sel_episodes);
  if (v1)
  {
    uint64_t v2 = v1;
    sub_1ACA6DC4C();
    sub_1ACBDF99C();
    uint64_t v3 = sub_1ACE76988();

    sub_1ACBDF54C(v3);
    LODWORD(v2) = v4;
    swift_bridgeObjectRelease();
    int v5 = v2 ^ 1;
  }
  else
  {
    int v5 = 1;
  }
  return (objc_msgSend(v0, sel_subscribed) ^ 1) & v5;
}

unint64_t sub_1ACBDF99C()
{
  unint64_t result = qword_1EB7669E8;
  if (!qword_1EB7669E8)
  {
    sub_1ACA6DC4C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7669E8);
  }
  return result;
}

uint64_t Future<>.init(priority:unwrapping:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ACBDFED0(a1, a2, a3);
}

{
  return sub_1ACBDFED0(a1, a2, a3);
}

uint64_t sub_1ACBDFA18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACBDFA80(uint64_t a1, uint64_t a2)
{
  return sub_1ACBE0134(a1, a2, (uint64_t)&unk_1F038F0B8, (uint64_t)&unk_1E99F3518);
}

uint64_t sub_1ACBDFAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int *a6)
{
  void v6[2] = a4;
  v6[3] = a5;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  uint64_t v8 = sub_1ACE77C08();
  v6[4] = v8;
  v6[5] = *(void *)(v8 - 8);
  v6[6] = swift_task_alloc();
  uint64_t v9 = swift_task_alloc();
  v6[7] = v9;
  int64_t v12 = (uint64_t (*)(uint64_t))((char *)a6 + *a6);
  unint64_t v10 = (void *)swift_task_alloc();
  void v6[8] = v10;
  void *v10 = v6;
  v10[1] = sub_1ACBDFC14;
  return v12(v9);
}

uint64_t sub_1ACBDFC14()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1ACBDFDE0;
  }
  else {
    uint64_t v2 = sub_1ACBDFD28;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACBDFD28()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = (void (*)(uint64_t))v0[2];
  swift_storeEnumTagMultiPayload();
  v4(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  int v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1ACBDFDE0()
{
  uint64_t v1 = (void *)v0[9];
  uint64_t v3 = v0[5];
  uint64_t v2 = (void *)v0[6];
  uint64_t v4 = v0[4];
  int v5 = (void (*)(void *))v0[2];
  *uint64_t v2 = v1;
  swift_storeEnumTagMultiPayload();
  id v6 = v1;
  v5(v2);

  (*(void (**)(void *, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1ACBDFED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  sub_1ACBBE50C(a1, (uint64_t)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = *(void *)(v3 + *MEMORY[0x1E4F1AC30]);
  sub_1ACBDFA18((uint64_t)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  int64_t v12 = (void *)(v11 + ((v9 + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  *int64_t v12 = a2;
  v12[1] = a3;
  uint64_t v13 = sub_1ACE75A08();
  sub_1ACBBE574(a1);
  return v13;
}

uint64_t sub_1ACBE0014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACBBE50C(a3, (uint64_t)v17);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = a6;
  v18[5] = a1;
  void v18[6] = a2;
  v18[7] = a4;
  v18[8] = a5;
  swift_retain();
  swift_retain();
  sub_1ACA47C2C((uint64_t)v17, a8, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_1ACBE0114(uint64_t a1, uint64_t a2)
{
  return sub_1ACBE0134(a1, a2, (uint64_t)&unk_1F038F090, (uint64_t)&unk_1E99F3508);
}

uint64_t sub_1ACBE0134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 16);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0) - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v12 = (*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1ACBE0014(a1, a2, v4 + v11, *(void *)(v4 + v12), *(void *)(v4 + v12 + 8), v9, a3, a4);
}

uint64_t sub_1ACBE01FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int *a6)
{
  void v6[2] = a4;
  v6[3] = a5;
  uint64_t v8 = sub_1ACE77C08();
  v6[4] = v8;
  v6[5] = *(void *)(v8 - 8);
  uint64_t v9 = swift_task_alloc();
  v6[6] = v9;
  unint64_t v12 = (uint64_t (*)(uint64_t))((char *)a6 + *a6);
  uint64_t v10 = (void *)swift_task_alloc();
  v6[7] = v10;
  void *v10 = v6;
  v10[1] = sub_1ACBE0354;
  return v12(v9);
}

uint64_t sub_1ACBE0354()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1ACBE0450, 0, 0);
}

uint64_t sub_1ACBE0450()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = (void (*)(uint64_t))v0[2];
  swift_storeEnumTagMultiPayload();
  v4(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  int v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1ACBE0504(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = (int *)v1[7];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1ACA51034;
  return sub_1ACBE01FC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1ACBE05E4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = (int *)v1[7];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1ACA50B84;
  return sub_1ACBDFAA0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1ACBE06C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 48);
  if (*(void *)(v10 + 16))
  {
    char v11 = a4 & 1;
    sub_1ACA72530(a2, a3, v11);
    unint64_t v12 = sub_1ACA664F4(a2, a3, v11);
    if (v13)
    {
      unint64_t v14 = v12;
      uint64_t v15 = *(void *)(v10 + 56);
      uint64_t v16 = type metadata accessor for EpisodePlayState();
      uint64_t v17 = *(void *)(v16 - 8);
      sub_1ACAFDB90(v15 + *(void *)(v17 + 72) * v14, a5);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(a5, 0, 1, v16);
    }
    else
    {
      uint64_t v19 = type metadata accessor for EpisodePlayState();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a5, 1, 1, v19);
    }
    sub_1ACA91B68(a2, a3, v11);
  }
  else
  {
    uint64_t v18 = type metadata accessor for EpisodePlayState();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a5, 1, 1, v18);
  }
  return swift_endAccess();
}

uint64_t OnDemandLibraryEpisodeStateDataSource<>.estimatedPlayState(for:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1ACE754C8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v5 + 56))
  {
    char v18 = a3 & 1;
    MEMORY[0x1F4188790](v15);
    *(&v27 - 4) = v5;
    *(&v27 - 3) = a1;
    *(&v27 - 2) = a2;
    *((unsigned char *)&v27 - 8) = v19;
    sub_1ACE76D08();
    uint64_t v20 = type metadata accessor for EpisodePlayState();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v17, 1, v20) == 1) {
      EpisodeStateRepository.enqueueEpisodeStateFetch(for:)(a1, a2, v18);
    }
    return sub_1ACBE0C00((uint64_t)v17, a4);
  }
  else
  {
    if (qword_1E99F0038 != -1) {
      swift_once();
    }
    uint64_t v22 = __swift_project_value_buffer(v10, (uint64_t)qword_1E99F2E70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v22, v10);
    os_log_type_t v23 = sub_1ACE76BE8();
    uint64_t v24 = sub_1ACE75498();
    if (os_log_type_enabled(v24, v23))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_1AC9D5000, v24, v23, "You are using an instance of OnDemandLibraryEpisodeStateDataSource that never received startObservingChanges()!! This means estimatedPlayState(for:) will never return any state at all, just nils. This is not the way this was supposed to be used. You should be using the same shared instance of OnDemandLibraryEpisodeStateDataSource than the FSM system is using.", v25, 2u);
      MEMORY[0x1AD11B340](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v26 = type metadata accessor for EpisodePlayState();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(a4, 1, 1, v26);
  }
}

uint64_t sub_1ACBE0BB4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  return OnDemandLibraryEpisodeStateDataSource<>.estimatedPlayState(for:)(a1, a2, a3 & 1, a4);
}

uint64_t sub_1ACBE0BDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBE06C0(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), a1);
}

uint64_t sub_1ACBE0C00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Swift::String __swiftcall PFLocalizedString(_:comment:)(Swift::String _, Swift::String comment)
{
  if (qword_1EB7730A8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1ACE74C48();
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

id sub_1ACBE0D00()
{
  type metadata accessor for PodcastsFoundationBundle();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1EB773098 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for PodcastsFoundationBundle()
{
  return self;
}

uint64_t Publisher.ignoreValue()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1ACE75B58();
  return swift_release();
}

uint64_t sub_1ACBE0E14()
{
  return swift_deallocObject();
}

uint64_t dispatch thunk of EpisodeAndShowStorage.episodeChanges.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EpisodeAndShowStorage.showChanges.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EpisodeAndShowStorage.limitShowNotifications(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of EpisodeAndShowStorage.limitEpisodeNotifications(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of EpisodeAndShowStorage.fetchShowIDs(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of EpisodeAndShowStorage.fetchEpisodeIDs(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of EpisodeAndShowStorage.fetchEpisodeManagedIDs(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

void MediaIdentifier.init(episodeID:)(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  if (a3)
  {
    if (a3 == 1)
    {
      sub_1ACA50D28(a1, a2, 1);
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      char v7 = -1;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1ACE843F0;
      *(void *)(v9 + 32) = a1;
      *(void *)(v9 + 40) = a2;
      *(void *)a4 = v9;
      *(void *)(a4 + 8) = 0;
      *(void *)(a4 + 16) = 0;
      *(void *)(a4 + 24) = 0;
      char v7 = 2;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7694A0);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1ACE843F0;
    *(void *)(v8 + 32) = a1;
    *(void *)a4 = v8;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    *(void *)(a4 + 24) = 0;
    char v7 = 1;
  }
  *(unsigned char *)(a4 + 32) = v7;
}

void MediaIdentifier.init(showID:)(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  if (a3)
  {
    if (a3 == 1)
    {
      sub_1ACA50D28(a1, a2, 1);
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      char v5 = -1;
    }
    else
    {
      *(void *)a4 = a1;
      *(void *)(a4 + 8) = a2;
      *(void *)(a4 + 16) = 0;
      *(void *)(a4 + 24) = 0;
      char v5 = 3;
    }
    *(unsigned char *)(a4 + 32) = v5;
  }
  else
  {
    *(void *)a4 = a1;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    *(void *)(a4 + 24) = 0;
    *(unsigned char *)(a4 + 32) = 0;
  }
}

uint64_t sub_1ACBE1060()
{
  sub_1ACA76F34(*(void *)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EpisodeRemovalManagingMock()
{
  return self;
}

uint64_t sub_1ACBE10BC(uint64_t a1)
{
  uint64_t v2 = sub_1ACE75F88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACBEAD78((unint64_t *)&unk_1EB772FC8, MEMORY[0x1E4F25200]);
  uint64_t v6 = sub_1ACE763A8();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1ACC82D44(0, v6 & ~(v6 >> 63), 0);
  uint64_t v7 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t result = sub_1ACE76398();
  if ((v6 & 0x8000000000000000) == 0)
  {
    unint64_t v9 = v36;
    if (v6)
    {
      uint64_t v10 = *(void *)(v35 + 16);
      uint64_t v33 = v35;
      *(void *)&long long v34 = v10;
      uint64_t v32 = v35 + 32;
      long long v31 = xmmword_1ACE843F0;
      unint64_t v11 = v36;
      while ((void)v34 != v11)
      {
        if ((v9 & 0x8000000000000000) != 0) {
          goto LABEL_21;
        }
        if (v11 >= *(void *)(v33 + 16)) {
          goto LABEL_22;
        }
        char v12 = *(unsigned char *)(v32 + v11);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = v31;
        *(void *)(v13 + 56) = MEMORY[0x1E4FBC358];
        *(void *)(v13 + 64) = MEMORY[0x1E4FBC3B0];
        *(unsigned char *)(v13 + 32) = v12;
        uint64_t result = sub_1ACE761F8();
        uint64_t v14 = result;
        uint64_t v16 = v15;
        uint64_t v37 = v7;
        unint64_t v18 = *(void *)(v7 + 16);
        unint64_t v17 = *(void *)(v7 + 24);
        if (v18 >= v17 >> 1)
        {
          uint64_t result = sub_1ACC82D44(v17 > 1, v18 + 1, 1);
          uint64_t v7 = v37;
        }
        *(void *)(v7 + 16) = v18 + 1;
        uint64_t v19 = v7 + 16 * v18;
        *(void *)(v19 + 32) = v14;
        *(void *)(v19 + 40) = v16;
        ++v11;
        if (!--v6)
        {
          unint64_t v36 = v11;
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    else
    {
      unint64_t v11 = v36;
LABEL_12:
      uint64_t v20 = v35;
      unint64_t v21 = *(void *)(v35 + 16);
      if (v11 == v21)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        return v7;
      }
      long long v34 = xmmword_1ACE843F0;
      while (v11 < v21)
      {
        char v22 = *(unsigned char *)(v20 + 32 + v11);
        unint64_t v36 = v11 + 1;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = v34;
        *(void *)(v23 + 56) = MEMORY[0x1E4FBC358];
        *(void *)(v23 + 64) = MEMORY[0x1E4FBC3B0];
        *(unsigned char *)(v23 + 32) = v22;
        uint64_t result = sub_1ACE761F8();
        uint64_t v24 = result;
        uint64_t v26 = v25;
        uint64_t v37 = v7;
        unint64_t v28 = *(void *)(v7 + 16);
        unint64_t v27 = *(void *)(v7 + 24);
        if (v28 >= v27 >> 1)
        {
          uint64_t result = sub_1ACC82D44(v27 > 1, v28 + 1, 1);
          uint64_t v7 = v37;
        }
        *(void *)(v7 + 16) = v28 + 1;
        uint64_t v29 = v7 + 16 * v28;
        *(void *)(v29 + 32) = v24;
        *(void *)(v29 + 40) = v26;
        unint64_t v11 = v36;
        unint64_t v21 = *(void *)(v20 + 16);
        if (v36 == v21) {
          goto LABEL_13;
        }
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACBE144C()
{
  uint64_t v1 = sub_1ACE75DC8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE75E48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_workQueue);
  aBlock[4] = sub_1ACBEAD24;
  uint64_t v13 = v0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  void aBlock[3] = &block_descriptor_32_1;
  unint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACE75E08();
  v11[1] = MEMORY[0x1E4FBC860];
  sub_1ACBEAD78((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

int8x16_t *sub_1ACBE16F8(int8x16_t *result)
{
  int8x16_t v1 = vorrq_s8(result[1], result[2]);
  if (*(void *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) || result[3].u8[0] != 160)
  {
    __break(1u);
  }
  else
  {
    FeedUpdateType.beginInterval(for:)((uint64_t)result->i64 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_signpostID);
    long long v2 = 1uLL;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    char v5 = -96;
    return (int8x16_t *)sub_1ACBE1784(&v2);
  }
  return result;
}

uint64_t sub_1ACBE1784(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1ACE75DC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE75E48();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_workQueue);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v2;
  sub_1ACBE79D4(a1, v12 + 24);
  aBlock[4] = sub_1ACBEACF8;
  void aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  void aBlock[3] = &block_descriptor_29;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACBE7A48((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1ACBE3074);
  sub_1ACE75E08();
  v15[1] = MEMORY[0x1E4FBC860];
  sub_1ACBEAD78((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

void sub_1ACBE1A7C(long long *a1)
{
  uint64_t v2 = v1;
  sub_1ACBE79D4(a1, (uint64_t)v55);
  uint64_t v4 = (void *)v55[0];
  unint64_t v5 = v55[1];
  uint64_t v50 = v55[3];
  uint64_t v52 = v55[2];
  char v49 = v56;
  uint64_t v6 = v1;
  uint64_t v7 = *(void **)(v1 + 16);
  uint64_t v8 = *(void *)(v6 + 24);
  v6 += 16;
  uint64_t v9 = *(void *)(v6 + 16);
  uint64_t v10 = *(void *)(v6 + 24);
  unsigned __int8 v11 = *(unsigned char *)(v6 + 32);
  sub_1ACBE79D4(a1, v6);
  sub_1ACBE7A48((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1ACBE3074);
  sub_1ACBE315C(v7, v8, v9, v10, v11);
  if (qword_1EB769568 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1ACE754C8();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB76D4C8);
  sub_1ACBE7A48((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1ACBE3074);
  swift_retain();
  sub_1ACBE7A48((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1ACBE3074);
  swift_retain();
  uint64_t v13 = sub_1ACE75498();
  os_log_type_t v14 = sub_1ACE76C08();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v48 = v5;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v54 = v16;
    *(_DWORD *)uint64_t v15 = 141558531;
    v65[0] = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v15 + 12) = 2081;
    type metadata accessor for FeedUpdateRequest();
    uint64_t v17 = sub_1ACE74DD8();
    v65[0] = sub_1ACA3189C(v17, v18, &v54);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2082;
    sub_1ACBE79D4(a1, (uint64_t)v62);
    switch(v63 >> 5)
    {
      case 1:
        v63 &= 0x1Fu;
        unint64_t v19 = 0xEC00000064656546;
        uint64_t v20 = 0x20737365636F7250;
        break;
      case 2:
        v63 &= 0x1Fu;
        unint64_t v19 = 0x80000001ACEC8930;
        uint64_t v20 = 0xD000000000000014;
        break;
      case 3:
        v63 &= 0x1Fu;
        unint64_t v19 = 0xE600000000000000;
        uint64_t v20 = 0x64656C696146;
        break;
      case 4:
        v63 &= 0x1Fu;
        sub_1ACBE79EC((uint64_t)v62, (uint64_t)v64);
        id v57 = (id)0x64656873696E6946;
        uint64_t v58 = 0xEA0000000000203ALL;
        sub_1ACBE79EC((uint64_t)v64, (uint64_t)v65);
        sub_1ACBE7A48((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1ACBE3074);
        sub_1ACBE313C(v4, v48, v52, v50, v49 & 1);
        sub_1ACBE313C(v4, v48, v52, v50, v49 & 1);
        sub_1ACE76228();
        sub_1ACE762C8();
        swift_bridgeObjectRelease();
        sub_1ACBE7A48((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1ACBE315C);
        sub_1ACBE7A48((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1ACBE315C);
        uint64_t v20 = (uint64_t)v57;
        unint64_t v19 = v58;
        break;
      case 5:
        int8x16_t v21 = vorrq_s8(v62[0], v62[1]);
        BOOL v22 = vorr_s8(*(int8x8_t *)v21.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v21, v21, 8uLL)) == 0;
        BOOL v23 = v63 == 160;
        if (v23 && v22) {
          uint64_t v20 = 0x206C616974696E49;
        }
        else {
          uint64_t v20 = 0x64616F6C6E776F44;
        }
        if (v23 && v22) {
          unint64_t v19 = 0xED00006574617453;
        }
        else {
          unint64_t v19 = 0xED00006465654620;
        }
        break;
      default:
        v63 &= 0x1Fu;
        unint64_t v19 = 0xEA00000000006465;
        uint64_t v20 = 0x6546206573726150;
        break;
    }
    v65[0] = sub_1ACA3189C(v20, v19, &v54);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACBE7A48((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1ACBE315C);
    sub_1ACBE7A48((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1ACBE315C);
    _os_log_impl(&dword_1AC9D5000, v13, v14, "Job %{private,mask.hash}s: %{public}s", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v16, -1, -1);
    MEMORY[0x1AD11B340](v15, -1, -1);

    unint64_t v5 = v48;
  }
  else
  {
    swift_release_n();
    sub_1ACBE7A48((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1ACBE315C);
    sub_1ACBE7A48((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1ACBE315C);
  }
  sub_1ACBE79D4(a1, (uint64_t)&v57);
  id v24 = v57;
  switch(v61 >> 5)
  {
    case 1:
      v61 &= 0x1Fu;
      id v25 = v4;
      sub_1ACBE2A68(v24);
      goto LABEL_25;
    case 2:
      v61 &= 0x1Fu;
      sub_1ACBE2C60((uint64_t)v57, v58);
      return;
    case 3:
      v61 &= 0x1Fu;
      uint64_t v26 = (void *)v58;
      id v27 = v57;
      swift_retain();
      id v28 = v24;
      swift_retain();
      id v29 = v24;
      id v30 = v26;
      long long v31 = sub_1ACE75498();
      os_log_type_t v32 = sub_1ACE76BE8();
      if (os_log_type_enabled(v31, v32))
      {
        id v53 = v30;
        uint64_t v33 = swift_slowAlloc();
        long long v34 = (void *)swift_slowAlloc();
        id v51 = v26;
        uint64_t v35 = swift_slowAlloc();
        v65[0] = v35;
        *(_DWORD *)uint64_t v33 = 141558531;
        uint64_t v54 = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v33 + 12) = 2081;
        type metadata accessor for FeedUpdateRequest();
        uint64_t v36 = sub_1ACE74DD8();
        uint64_t v54 = sub_1ACA3189C(v36, v37, v65);
        sub_1ACE76FF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v33 + 22) = 2112;
        uint64_t v38 = sub_1ACE74D68();
        uint64_t v54 = v38;
        sub_1ACE76FF8();
        *long long v34 = v38;

        _os_log_impl(&dword_1AC9D5000, v31, v32, "Job %{private,mask.hash}s: Failed with error %@", (uint8_t *)v33, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v34, -1, -1);
        swift_arrayDestroy();
        uint64_t v39 = v35;
        uint64_t v26 = v51;
        MEMORY[0x1AD11B340](v39, -1, -1);
        uint64_t v40 = v33;
        id v30 = v53;
        MEMORY[0x1AD11B340](v40, -1, -1);
      }
      else
      {
        swift_release_n();
      }
      LOBYTE(v65[0]) = 2;
      FeedUpdateType.endInterval(for:success:)(v2 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_signpostID, 0);
      uint64_t v43 = v2 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_request;
      id v44 = *(void (**)(id, void *))(v43 + *(int *)(type metadata accessor for FeedUpdateRequest() + 56));
      if (v44)
      {
        id v45 = v24;
        v44(v24, v26);
      }
      unint64_t v46 = *(void (**)(uint64_t, uint64_t *))(v2
                                                      + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_completion);
      v65[0] = (uint64_t)v24;
      memset(&v65[1], 0, 24);
      char v66 = 1;
      id v47 = v24;
      v46(v43, v65);

      return;
    case 4:
      v61 &= 0x1Fu;
      sub_1ACBE79EC((uint64_t)&v57, (uint64_t)v65);
      unsigned __int8 v41 = v61;
      LOBYTE(v54) = 2;
      uint64_t v42 = v2 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_signpostID;
      sub_1ACBE313C(v4, v5, v52, v50, v49 & 1);
      FeedUpdateType.endInterval(for:success:)(v42, (v41 & 1) == 0);
      (*(void (**)(uint64_t, uint64_t *))(v2
                                                 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_completion))(v2 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_request, v65);
      goto LABEL_25;
    case 5:
      if (v61 == 160 && !(v59 | v60 | (unint64_t)v57 | v58))
      {
        __break(1u);
        JUMPOUT(0x1ACBE241CLL);
      }
      sub_1ACBE244C();
      return;
    default:
      v61 &= 0x1Fu;
      sub_1ACA3985C((uint64_t)v4, v5);
      sub_1ACBE2678();
LABEL_25:
      sub_1ACBE7A48((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1ACBE315C);
      return;
  }
}

void sub_1ACBE244C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
  aBlock[4] = sub_1ACBE83EC;
  void aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  void aBlock[3] = &block_descriptor_37;
  uint64_t v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_performBlock_, v7);
  _Block_release(v7);
  uint64_t v8 = v1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_request;
  updated = (int *)type metadata accessor for FeedUpdateRequest();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8 + updated[5], v2);
  id v10 = objc_allocWithZone((Class)type metadata accessor for DownloadableURLOptions());
  sub_1ACE74DD8();
  unsigned __int8 v11 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v10, sel_init_nonAppInitiated_, v11, 1);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_externalFeedDownloader), sel_startDownloadTaskForFeedURL_userInitiated_useBackgroundFetch_, v12, *(unsigned __int8 *)(v8 + updated[9]), *(unsigned __int8 *)(v8 + updated[11]));
}

void sub_1ACBE2678()
{
  id v20 = objc_msgSend(objc_allocWithZone((Class)IMPodcastParser), sel_init);
  uint64_t v0 = (void *)sub_1ACE74F68();
  id v1 = objc_msgSend(v20, sel_parseWithData_, v0);

  id v2 = objc_msgSend(v20, sel_parseError);
  if (v2)
  {
    uint64_t v21 = (uint64_t)v2;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    char v25 = 96;
    id v19 = v2;
    sub_1ACBE1784(&v21);

LABEL_3:
    uint64_t v3 = v19;
LABEL_4:

    return;
  }
  if (!v1)
  {
    sub_1ACB18F1C();
    os_log_type_t v14 = (void *)swift_allocError();
    *uint64_t v15 = 6;
    uint64_t v21 = (uint64_t)v14;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    char v25 = 96;
    sub_1ACBE1784(&v21);

    uint64_t v3 = v20;
    goto LABEL_4;
  }
  id v19 = v1;
  id v4 = objc_msgSend(v19, sel_items);
  if (!v4)
  {
    __break(1u);
    return;
  }
  unint64_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_count);

  if (!v6)
  {
    sub_1ACB18F1C();
    uint64_t v16 = (void *)swift_allocError();
    unsigned char *v17 = 8;
    uint64_t v21 = (uint64_t)v16;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    char v25 = 96;
    sub_1ACBE1784(&v21);

    goto LABEL_3;
  }
  if (qword_1EB769568 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1ACE754C8();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EB76D4C8);
  swift_retain_n();
  uint64_t v8 = sub_1ACE75498();
  os_log_type_t v9 = sub_1ACE76C08();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 141558275;
    uint64_t v21 = v11;
    sub_1ACE76FF8();
    *(_WORD *)(v10 + 12) = 2081;
    type metadata accessor for FeedUpdateRequest();
    uint64_t v12 = sub_1ACE74DD8();
    sub_1ACA3189C(v12, v13, &v21);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v8, v9, "Job %{private,mask.hash}s: Successfully parsed feed.", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v11, -1, -1);
    MEMORY[0x1AD11B340](v10, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v21 = (uint64_t)v1;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  char v25 = 32;
  id v18 = v19;
  sub_1ACBE1784(&v21);
}

void sub_1ACBE2A68(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_request;
  unint64_t v5 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v4
                                                          + *(int *)(type metadata accessor for FeedUpdateRequest() + 60));
  if (!v5) {
    goto LABEL_4;
  }
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
  swift_retain();
  uint64_t v7 = (void *)v5(a1, 1, v6);
  if (objc_msgSend(v7, sel_shouldContinue))
  {

    sub_1ACA76F34((uint64_t)v5);
LABEL_4:
    uint64_t v8 = *(void **)(v2 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v2;
    *(void *)(v9 + 24) = a1;
    id v18 = sub_1ACBE8434;
    uint64_t v19 = v9;
    os_log_type_t v14 = (void *)MEMORY[0x1E4F143A8];
    uint64_t v15 = 1107296256;
    uint64_t v16 = sub_1ACA6DA9C;
    uint64_t v17 = &block_descriptor_20_0;
    uint64_t v10 = _Block_copy(&v14);
    swift_retain();
    id v11 = a1;
    swift_release();
    objc_msgSend(v8, sel_performBlock_, v10);
    _Block_release(v10);
    return;
  }
  sub_1ACB18F1C();
  uint64_t v12 = (void *)swift_allocError();
  *unint64_t v13 = 11;
  os_log_type_t v14 = v12;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  LOBYTE(v18) = 96;
  sub_1ACBE1784(&v14);

  sub_1ACA76F34((uint64_t)v5);
}

void sub_1ACBE2C60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = v3 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_request;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6
                                                        + *(int *)(type metadata accessor for FeedUpdateRequest() + 64));
  if (v7)
  {
    uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
    swift_retain();
    v7(a1, a2, v8);
    sub_1ACA76F34((uint64_t)v7);
  }
  uint64_t v9 = *(void **)(v3 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
  void v11[4] = sub_1ACBEACA8;
  v11[5] = v3;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  void v11[2] = sub_1ACA6DA9C;
  void v11[3] = &block_descriptor_23_0;
  uint64_t v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_performBlock_, v10);
  _Block_release(v10);
}

uint64_t sub_1ACBE2DA4()
{
  sub_1ACBE315C(*(id *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  sub_1ACAC5FA0(v0 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_request);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ingesterProvider);

  uint64_t v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_signpostID;
  uint64_t v2 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1ACBE2EA4()
{
  sub_1ACBE2DA4();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACBE2EFC()
{
  return type metadata accessor for RSSFeedUpdaterJob();
}

uint64_t type metadata accessor for RSSFeedUpdaterJob()
{
  uint64_t result = qword_1E99F3578;
  if (!qword_1E99F3578) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACBE2F50()
{
  uint64_t result = type metadata accessor for FeedUpdateRequest();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1ACE753F8();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

id sub_1ACBE3074(id result, id a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  switch(a5 >> 5)
  {
    case 0:
      uint64_t result = (id)sub_1ACA3985C((uint64_t)result, (unint64_t)a2);
      break;
    case 1:
      goto LABEL_7;
    case 2:
      uint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 3:
      id v6 = result;
      uint64_t result = a2;
LABEL_7:
      uint64_t result = result;
      break;
    case 4:
      char v7 = a5 & 1;
      uint64_t result = sub_1ACBE313C(result, (uint64_t)a2, a3, a4, v7);
      break;
    default:
      return result;
  }
  return result;
}

id sub_1ACBE313C(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    return result;
  }
  return result;
}

void destroy for RSSFeedUpdaterJob.State(uint64_t a1)
{
}

void sub_1ACBE315C(id a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  switch(a5 >> 5)
  {
    case 0:
      sub_1ACA50850((uint64_t)a1, a2);
      break;
    case 1:
      goto LABEL_7;
    case 2:
      swift_bridgeObjectRelease();
      break;
    case 3:

      a1 = (id)a2;
LABEL_7:

      break;
    case 4:
      char v6 = a5 & 1;
      sub_1ACBE3224(a1, a2, a3, a4, v6);
      break;
    default:
      return;
  }
}

void sub_1ACBE3224(id a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
}
  }

uint64_t initializeWithCopy for RSSFeedUpdaterJob.State(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1ACBE3074(*(id *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for RSSFeedUpdaterJob.State(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1ACBE3074(*(id *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1ACBE315C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for RSSFeedUpdaterJob.State(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1ACBE315C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for RSSFeedUpdaterJob.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7B && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 123);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 32) >> 5) & 0xFFFFFF87 | (8 * ((*(unsigned __int8 *)(a1 + 32) >> 1) & 0xF))) ^ 0x7F;
  if (v3 >= 0x7A) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RSSFeedUpdaterJob.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7A)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 123;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(_OWORD *)uint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1ACBE3404(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 32);
  if (v1 <= 0x9F) {
    return v1 >> 5;
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_1ACBE3420(uint64_t result)
{
  *(unsigned char *)(result + 32) &= 0x1Fu;
  return result;
}

uint64_t sub_1ACBE3430(uint64_t result, unsigned int a2)
{
  if (a2 < 5)
  {
    *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 1 | (32 * a2);
  }
  else
  {
    *(void *)uint64_t result = a2 - 5;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = -96;
  }
  return result;
}

ValueMetadata *type metadata accessor for RSSFeedUpdaterJob.State()
{
  return &type metadata for RSSFeedUpdaterJob.State;
}

void sub_1ACBE3470(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  if (a1)
  {
    id v8 = a1;
    if (qword_1EB769568 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1ACE754C8();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB76D4C8);
    id v10 = a1;
    swift_retain();
    id v11 = a1;
    swift_retain();
    unsigned __int8 v12 = sub_1ACE75498();
    os_log_type_t v13 = sub_1ACE76BE8();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 141558531;
      *(void *)&long long aBlock = v15;
      sub_1ACE76FF8();
      *(_WORD *)(v14 + 12) = 2081;
      type metadata accessor for FeedUpdateRequest();
      uint64_t v16 = sub_1ACE74DD8();
      sub_1ACA3189C(v16, v17, (uint64_t *)&aBlock);
      sub_1ACE76FF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 22) = 2080;
      swift_getErrorValue();
      uint64_t v18 = sub_1ACE77A98();
      sub_1ACA3189C(v18, v19, (uint64_t *)&aBlock);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AC9D5000, v12, v13, "Job %{private,mask.hash}s: Error downloading feed: %s", (uint8_t *)v14, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v15, -1, -1);
      MEMORY[0x1AD11B340](v14, -1, -1);
    }
    else
    {
      swift_release_n();
    }
    *(void *)&long long aBlock = a1;
    *((void *)&aBlock + 1) = a4;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    LOBYTE(v37) = 96;
    sub_1ACBE1784(&aBlock);
  }
  else if (a3 >> 60 == 15)
  {
    sub_1ACB18F1C();
    uint64_t v21 = (void *)swift_allocError();
    *uint64_t v22 = 9;
    *(void *)&long long aBlock = v21;
    *((void *)&aBlock + 1) = a4;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    LOBYTE(v37) = 96;
    sub_1ACBE1784(&aBlock);
  }
  else
  {
    sub_1ACA3985C(a2, a3);
    if (qword_1EB769568 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1ACE754C8();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EB76D4C8);
    swift_retain_n();
    char v25 = sub_1ACE75498();
    os_log_type_t v26 = sub_1ACE76C08();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 141558275;
      *(void *)&long long aBlock = v28;
      sub_1ACE76FF8();
      *(_WORD *)(v27 + 12) = 2081;
      type metadata accessor for FeedUpdateRequest();
      uint64_t v29 = sub_1ACE74DD8();
      sub_1ACA3189C(v29, v30, (uint64_t *)&aBlock);
      sub_1ACE76FF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v25, v26, "Job %{private,mask.hash}s: Successfully downloaded feed.", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v28, -1, -1);
      MEMORY[0x1AD11B340](v27, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    long long v31 = *(void **)(v4 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
    os_log_type_t v32 = (void *)swift_allocObject();
    void v32[2] = v5;
    v32[3] = a2;
    v32[4] = a3;
    unint64_t v37 = sub_1ACBEAD6C;
    uint64_t v38 = v32;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v35 = sub_1ACA6DA9C;
    uint64_t v36 = &block_descriptor_38_1;
    uint64_t v33 = _Block_copy(&aBlock);
    swift_retain();
    sub_1ACA39848(a2, a3);
    swift_release();
    objc_msgSend(v31, sel_performBlock_, v33);
    _Block_release(v33);
    sub_1ACAB2EF0(a2, a3);
  }
}

void sub_1ACBE3A20(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v48 = a1;
  uint64_t v54 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1ACE75F78();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1ACE75F88();
  uint64_t v9 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  id v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACBEAD78(&qword_1EB772FC0, MEMORY[0x1E4F251D8]);
  sub_1ACE75F48();
  unint64_t v49 = a3;
  uint64_t v46 = a2;
  switch(a3 >> 62)
  {
    case 1uLL:
      if (a2 >> 32 < (int)a2) {
        __break(1u);
      }
      uint64_t v44 = 0;
      uint64_t v45 = v6;
      unint64_t v15 = v49;
      sub_1ACA3985C(a2, v49);
      sub_1ACB4368C((int)a2, a2 >> 32);
      uint64_t v13 = a2;
      unint64_t v14 = v15;
      uint64_t v6 = v45;
      break;
    case 2uLL:
      unint64_t v16 = v49;
      uint64_t v45 = v6;
      uint64_t v17 = a2;
      uint64_t v18 = *(void *)(a2 + 16);
      uint64_t v44 = *(void *)(v17 + 24);
      sub_1ACA3985C(v17, v49);
      swift_retain();
      swift_retain();
      sub_1ACB4368C(v18, v44);
      swift_release();
      swift_release();
      uint64_t v13 = v17;
      uint64_t v6 = v45;
      unint64_t v14 = v16;
      break;
    case 3uLL:
      *(void *)((char *)&v51 + 6) = 0;
      *(void *)&long long v51 = 0;
      sub_1ACE75F28();
      uint64_t v13 = a2;
      unint64_t v14 = v49;
      break;
    default:
      *(void *)&long long v51 = a2;
      unint64_t v12 = v49;
      DWORD2(v51) = v49;
      WORD6(v51) = WORD2(v49);
      sub_1ACE75F28();
      uint64_t v13 = a2;
      unint64_t v14 = v12;
      break;
  }
  sub_1ACA50850(v13, v14);
  sub_1ACE75F38();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v19 = sub_1ACBE10BC((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v47);
  *(void *)&long long v51 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
  sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
  uint64_t v20 = sub_1ACE76138();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v48;
  uint64_t v24 = (uint64_t *)(v48 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_feedUniquenessHash);
  uint64_t *v24 = v20;
  v24[1] = v22;
  swift_bridgeObjectRelease();
  char v25 = *(void **)(v23 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
  type metadata accessor for FeedUpdateRequest();
  sub_1ACE74DD8();
  os_log_type_t v26 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(v25, sel_podcastForFeedUrl_, v26);

  if (!v27) {
    goto LABEL_18;
  }
  id v28 = objc_msgSend(v27, sel_feedUniquenessHash);
  if (!v28)
  {
    uint64_t v33 = v24[1];
LABEL_15:
    if (!v33) {
      goto LABEL_20;
    }
    goto LABEL_16;
  }
  uint64_t v29 = v28;
  uint64_t v30 = sub_1ACE761B8();
  uint64_t v32 = v31;

  uint64_t v33 = v24[1];
  if (!v32) {
    goto LABEL_15;
  }
  if (!v33)
  {

    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  if (v30 != *v24 || v33 != v32)
  {
    char v34 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v34) {
      goto LABEL_20;
    }
LABEL_16:

LABEL_18:
    *(void *)&long long v51 = v46;
    *((void *)&v51 + 1) = v49;
    long long v52 = 0uLL;
    char v53 = 0;
    sub_1ACBE1784(&v51);
    return;
  }
  swift_bridgeObjectRelease();
LABEL_20:
  if (qword_1EB769568 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_1ACE754C8();
  __swift_project_value_buffer(v35, (uint64_t)qword_1EB76D4C8);
  swift_retain_n();
  uint64_t v36 = sub_1ACE75498();
  os_log_type_t v37 = sub_1ACE76C08();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(void *)&long long v51 = v39;
    *(_DWORD *)uint64_t v38 = 141558275;
    uint64_t v50 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v38 + 12) = 2081;
    uint64_t v40 = sub_1ACE74DD8();
    uint64_t v50 = sub_1ACA3189C(v40, v41, (uint64_t *)&v51);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v36, v37, "Job %{private,mask.hash}s: Feed has not changed since last feed update. Not doing feed update.", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v39, -1, -1);
    MEMORY[0x1AD11B340](v38, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  long long v42 = *(_OWORD *)(v23 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_metricsData + 16);
  long long v51 = *(_OWORD *)(v23 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_metricsData);
  long long v52 = v42;
  char v53 = 0x80;
  sub_1ACBE1784(&v51);
}

id sub_1ACBE4150(uint64_t a1)
{
  unsigned int v1 = *(void **)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
  type metadata accessor for FeedUpdateRequest();
  sub_1ACE74DD8();
  unint64_t v2 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_podcastForFeedUrl_, v2);

  if (v3)
  {
    objc_msgSend(self, sel_timeIntervalSinceReferenceDate);
    objc_msgSend(v3, sel_setLastFetchedDate_);
  }
  return objc_msgSend(v1, sel_saveInCurrentBlock);
}

void sub_1ACBE4224(uint64_t a1, void *a2)
{
  v251 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v3 - 8);
  v232 = (char *)v206 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v241 = sub_1ACE750A8();
  uint64_t v5 = *(char **)(v241 - 8);
  MEMORY[0x1F4188790](v241);
  v235 = (char *)v206 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  char v219 = (char *)v206 - v8;
  uint64_t v247 = sub_1ACE754C8();
  v249 = *(void (***)(char *, uint64_t))(v247 - 8);
  MEMORY[0x1F4188790](v247);
  uint64_t v10 = (char *)v206 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v206 - v12;
  MEMORY[0x1F4188790](v14);
  v240 = (char *)v206 - v15;
  unint64_t v16 = *(void **)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
  uint64_t v17 = a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_request;
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  uint64_t v246 = v17 + *(int *)(updated + 20);
  sub_1ACE74DD8();
  uint64_t v19 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v231 = v16;
  id v20 = objc_msgSend(v16, sel_podcastForFeedUrl_, v19);

  if (!v20) {
    goto LABEL_112;
  }
  id v21 = objc_msgSend(v20, sel_uuid);
  if (!v21)
  {

LABEL_112:
    sub_1ACB18F1C();
    uint64_t v181 = (void *)swift_allocError();
    *uint64_t v182 = 10;
    uint64_t v255 = (uint64_t)v181;
    uint64_t v256 = 0;
    uint64_t v257 = 0;
    uint64_t v258 = 0;
    char v259 = 96;
    sub_1ACBE1784(&v255);

    return;
  }
  uint64_t v22 = v21;
  v248 = v5;
  v234 = v13;
  uint64_t v213 = v10;
  uint64_t v212 = sub_1ACE761B8();
  uint64_t v24 = v23;

  uint64_t v25 = *(void *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ingesterProvider + 24);
  uint64_t v26 = *(void *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ingesterProvider + 32);
  __swift_project_boxed_opaque_existential_1((void *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ingesterProvider), v25);
  uint64_t v27 = *(void *)(v17 + *(int *)(updated + 48));
  uint64_t v28 = *(void *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_updaterJobUUID);
  uint64_t v29 = *(void *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_updaterJobUUID + 8);
  uint64_t v236 = a1;
  uint64_t v30 = *(uint64_t (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8);
  swift_bridgeObjectRetain();
  uint64_t v31 = v30(v20, v27, v28, v29, v25, v26);
  uint64_t v32 = v236;
  swift_bridgeObjectRelease();
  uint64_t v33 = v251;
  objc_msgSend((id)v31, sel_unsafeIngestShow_, v251);
  objc_msgSend(v231, sel_saveInCurrentBlock);
  uint64_t v34 = sub_1ACBE6178(v33);
  if (!v34)
  {

    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return;
  }
  unint64_t v35 = v34;
  id v208 = v20;
  uint64_t v207 = v24;
  int64_t v229 = sub_1ACBE6588();
  unint64_t v253 = 0;
  uint64_t v254 = MEMORY[0x1E4FBC870];
  unint64_t v237 = v35;
  uint64_t v223 = v35 & 0xFFFFFFFFFFFFFF8;
  if (v35 >> 62) {
    goto LABEL_143;
  }
  uint64_t v37 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_6:
  uint64_t v38 = v247;
  uint64_t v39 = v240;
  uint64_t v40 = "PodcastsFoundation";
  id v216 = (id)v31;
  if (v37 <= 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_120;
  }
  uint64_t v41 = 0;
  uint64_t v211 = v32 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_metricsData;
  unint64_t v244 = v237 & 0xC000000000000001;
  unint64_t v220 = v237 + 32;
  unint64_t v42 = v229 & 0xFFFFFFFFFFFFFF8;
  unint64_t v221 = v229 & 0xFFFFFFFFFFFFFF8;
  if (v229 < 0) {
    unint64_t v42 = v229;
  }
  v206[1] = v42;
  unint64_t v228 = v229 & 0xC000000000000001;
  int64_t v215 = v229 + 32;
  uint64_t v43 = v249++;
  v250 = (void (**)(char *, uint64_t, uint64_t))(v43 + 2);
  long long v214 = &v253;
  uint64_t v222 = v248 + 32;
  uint64_t v225 = v248 + 56;
  uint64_t v218 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v248 + 48);
  long long v217 = (void (**)(char *, uint64_t))(v248 + 8);
  v233 = &v256;
  uint64_t v31 = (uint64_t)&selRef_addBagKey_valueType_;
  *(void *)&long long v36 = 141558787;
  long long v230 = v36;
  uint64_t v226 = MEMORY[0x1E4FBC840] + 8;
  *(void *)&long long v36 = 141558531;
  long long v227 = v36;
  uint64_t v243 = v37;
  while (1)
  {
    v251 = (void *)v41;
    if (v244)
    {
      id v44 = (id)MEMORY[0x1AD119490]();
    }
    else
    {
      if (v41 < 0) {
        goto LABEL_133;
      }
      if ((unint64_t)v41 >= *(void *)(v223 + 16))
      {
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_1ACE77508();
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      id v44 = *(id *)(v220 + 8 * v41);
    }
    uint64_t v45 = v44;
    id v46 = [v44 *(SEL *)(v31 + 2184)];
    if (v46)
    {

      id v47 = [v45 *(SEL *)(v31 + 2184)];
      if (v47)
      {
        uint64_t v48 = v47;
        uint64_t v49 = sub_1ACE761B8();
        unint64_t v51 = v50;

        if (v51)
        {
          swift_bridgeObjectRelease();
          uint64_t v52 = HIBYTE(v51) & 0xF;
          if ((v51 & 0x2000000000000000) == 0) {
            uint64_t v52 = v49 & 0xFFFFFFFFFFFFLL;
          }
          if (v52)
          {
            unint64_t v53 = v253;
            if ((unint64_t)v229 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v54 = sub_1ACE77508();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v54 = *(void *)(v221 + 16);
            }
            v245 = v45;
            if ((uint64_t)v53 >= v54)
            {
              id v73 = 0;
LABEL_39:
              id v74 = v45;
              v248 = (char *)objc_msgSend(v216, sel_unsafeIngestNewEpisode_, v74);

              if (qword_1EB769568 != -1) {
                swift_once();
              }
              uint64_t v75 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB76D4C8);
              id v76 = v213;
              (*v250)(v213, v75, v38);
              swift_retain_n();
              unsigned __int8 v63 = v74;
              char v77 = sub_1ACE75498();
              os_log_type_t v78 = sub_1ACE76C08();
              if (os_log_type_enabled(v77, v78))
              {
                uint64_t v79 = swift_slowAlloc();
                uint64_t v80 = swift_slowAlloc();
                uint64_t v255 = v80;
                *(_DWORD *)uint64_t v79 = v230;
                *(void *)(v79 + 4) = 1752392040;
                *(_WORD *)(v79 + 12) = 2081;
                uint64_t v81 = sub_1ACE74DD8();
                *(void *)(v79 + 14) = sub_1ACA3189C(v81, v82, &v255);
                swift_release_n();
                swift_bridgeObjectRelease();
                *(_WORD *)(v79 + 22) = 2160;
                *(void *)(v79 + 24) = 1752392040;
                *(_WORD *)(v79 + 32) = 2081;
                id v83 = objc_msgSend(v63, sel_title);
                if (!v83) {
                  goto LABEL_146;
                }
                uint64_t v84 = v83;
                uint64_t v85 = sub_1ACE761B8();
                unint64_t v87 = v86;

                *(void *)(v79 + 34) = sub_1ACA3189C(v85, v87, &v255);
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1AC9D5000, v77, v78, "Job %{private,mask.hash}s: inserting new episode for server episode: %{private,mask.hash}s", (uint8_t *)v79, 0x2Au);
                swift_arrayDestroy();
                MEMORY[0x1AD11B340](v80, -1, -1);
                MEMORY[0x1AD11B340](v79, -1, -1);

                uint64_t v38 = v247;
                (*v249)(v213, v247);
                uint64_t v32 = v236;
                uint64_t v37 = v243;
                uint64_t v45 = v245;
              }
              else
              {

                swift_release_n();
                (*v249)(v76, v38);
              }
              uint64_t v88 = *(void *)(v211 + 8);
              BOOL v89 = __OFADD__(v88, 1);
              uint64_t v90 = v88 + 1;
              uint64_t v39 = v240;
              uint64_t v40 = "PodcastsFoundation";
              id v91 = v248;
              if (v89) {
                goto LABEL_138;
              }
              *(void *)(v211 + 8) = v90;
              uint64_t v58 = v91;
              if (!v91) {
                goto LABEL_102;
              }
              goto LABEL_98;
            }
            if (v228)
            {
              os_log_t v55 = (char *)MEMORY[0x1AD119490](v53, v229);
            }
            else
            {
              if ((v53 & 0x8000000000000000) != 0) {
                goto LABEL_139;
              }
              if (v53 >= *(void *)(v221 + 16)) {
                goto LABEL_140;
              }
              os_log_t v55 = (char *)*(id *)(v215 + 8 * v53);
            }
            char v56 = v55;
            id v57 = v55;
            if (sub_1ACBEA594(v57, v45))
            {
LABEL_32:

              unint64_t v253 = v53 + 1;
              uint64_t v58 = v56;
LABEL_88:
              v248 = v56;

              if (qword_1EB769568 != -1) {
                swift_once();
              }
              __swift_project_value_buffer(v38, (uint64_t)qword_1EB76D4C8);
              swift_retain_n();
              int v158 = v57;
              uint64_t v159 = sub_1ACE75498();
              os_log_type_t v160 = sub_1ACE76C08();
              if (os_log_type_enabled(v159, v160))
              {
                uint64_t v161 = swift_slowAlloc();
                uint64_t v162 = swift_slowAlloc();
                uint64_t v252 = v162;
                *(_DWORD *)uint64_t v161 = v227;
                uint64_t v255 = 1752392040;
                sub_1ACE76FF8();
                *(_WORD *)(v161 + 12) = 2081;
                uint64_t v163 = sub_1ACE74DD8();
                uint64_t v255 = sub_1ACA3189C(v163, v164, &v252);
                sub_1ACE76FF8();
                swift_release_n();
                swift_bridgeObjectRelease();
                *(_WORD *)(v161 + 22) = 2082;
                id v165 = objc_msgSend(v158, sel_uuid);
                if (v165)
                {
                  uint64_t v166 = v165;
                  uint64_t v167 = sub_1ACE761B8();
                  uint64_t v169 = v168;
                }
                else
                {
                  uint64_t v167 = 0;
                  uint64_t v169 = 0;
                }
                uint64_t v31 = 0x1E5E66000;
                uint64_t v255 = v167;
                uint64_t v256 = v169;
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
                uint64_t v170 = sub_1ACE76228();
                uint64_t v255 = sub_1ACA3189C(v170, v171, &v252);
                sub_1ACE76FF8();
                uint64_t v172 = v248;

                id v91 = v172;
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1AC9D5000, v159, v160, "Job %{private,mask.hash}s: updating episode: %{public}s", (uint8_t *)v161, 0x20u);
                swift_arrayDestroy();
                MEMORY[0x1AD11B340](v162, -1, -1);
                MEMORY[0x1AD11B340](v161, -1, -1);

                uint64_t v32 = v236;
                uint64_t v38 = v247;
                uint64_t v37 = v243;
                uint64_t v45 = v245;
              }
              else
              {

                swift_release_n();
                id v91 = v248;
              }
              uint64_t v173 = *(void *)(v211 + 16);
              BOOL v89 = __OFADD__(v173, 1);
              uint64_t v174 = v173 + 1;
              uint64_t v39 = v240;
              uint64_t v40 = "PodcastsFoundation";
              if (v89) {
                goto LABEL_141;
              }
              *(void *)(v211 + 16) = v174;
LABEL_98:
              uint64_t v175 = v91;
              int v176 = v235;
              sub_1ACE75098();
              sub_1ACE74FB8();
              double v178 = v177;
              (*v217)(v176, v241);
              objc_msgSend(v175, sel_firstTimeAvailable);
              if (v178 < v179)
              {
                objc_msgSend(v175, sel_firstTimeAvailableAsFree);
                if (v180 == 0.0)
                {
                  objc_msgSend(v175, sel_setFirstTimeAvailable_, v178);
                  objc_msgSend(v175, sel_setFirstTimeAvailableAsFree_, v178);
                }
              }

LABEL_102:
              if (__ROR8__(0x8F5C28F5C28F5C29 * v253 + 0x51EB851EB851EB8, 3) <= 0x147AE147AE147AEuLL)
              {
                objc_msgSend(v231, sel_saveInCurrentBlock);

                uint64_t v41 = (uint64_t)v251 + 1;
                if (__OFADD__(v251, 1)) {
                  goto LABEL_142;
                }
              }
              else
              {

                uint64_t v41 = (uint64_t)v251 + 1;
                if (__OFADD__(v251, 1)) {
                  goto LABEL_137;
                }
              }
              goto LABEL_12;
            }
            int64_t v224 = v54;
            if (qword_1EB769568 != -1) {
              swift_once();
            }
            uint64_t v92 = v56;
            while (1)
            {
              v248 = v57;
              uint64_t v94 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB76D4C8);
              long long v95 = *v250;
              uint64_t v96 = v234;
              uint64_t v242 = v94;
              ((void (*)(char *))v95)(v234);
              swift_retain_n();
              uint64_t v65 = v45;
              uint64_t v97 = sub_1ACE75498();
              os_log_type_t v98 = sub_1ACE76C08();
              BOOL v99 = os_log_type_enabled(v97, v98);
              v239 = v92;
              if (v99)
              {
                unsigned __int8 v63 = (_DWORD *)swift_slowAlloc();
                uint64_t v100 = swift_slowAlloc();
                uint64_t v255 = v100;
                *unsigned __int8 v63 = v227;
                uint64_t v252 = 1752392040;
                sub_1ACE76FF8();
                *((_WORD *)v63 + 6) = 2081;
                uint64_t v101 = sub_1ACE74DD8();
                uint64_t v252 = sub_1ACA3189C(v101, v102, &v255);
                sub_1ACE76FF8();
                swift_release_n();
                swift_bridgeObjectRelease();
                *((_WORD *)v63 + 11) = 2080;
                id v103 = objc_msgSend((id)v65, sel_title);
                if (!v103) {
                  goto LABEL_145;
                }
                long long v104 = v103;
                uint64_t v105 = sub_1ACE761B8();
                unint64_t v107 = v106;

                uint64_t v252 = sub_1ACA3189C(v105, v107, &v255);
                sub_1ACE76FF8();

                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1AC9D5000, v97, v98, "Job %{private,mask.hash}s: did not find a local episode match for server episode: %s", (uint8_t *)v63, 0x20u);
                swift_arrayDestroy();
                MEMORY[0x1AD11B340](v100, -1, -1);
                MEMORY[0x1AD11B340](v63, -1, -1);

                uint64_t v38 = v247;
                (*v249)(v234, v247);
                uint64_t v32 = v236;
                uint64_t v37 = v243;
                uint64_t v31 = 0x1E5E66000;
              }
              else
              {

                swift_release_n();
                (*v249)(v96, v38);
              }
              id v108 = objc_msgSend((id)v65, sel_pubDate);
              uint64_t v109 = (uint64_t)v232;
              uint64_t v45 = v245;
              if (v108)
              {
                id v110 = v108;
                uint64_t v111 = v235;
                sub_1ACE75078();

                long long v112 = *(void (**)(char *, uint64_t, uint64_t))v222;
                long long v113 = v111;
                uint64_t v114 = v241;
                (*(void (**)(uint64_t, char *, uint64_t))v222)(v109, v113, v241);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))v225)(v109, 0, 1, v114);
                if ((*v218)(v109, 1, v114) != 1)
                {
                  uint64_t v115 = v219;
                  uint64_t v116 = v241;
                  v112(v219, v109, v241);
                  objc_msgSend(v248, sel_pubDate);
                  long long v117 = v235;
                  sub_1ACE74FA8();
                  char v118 = sub_1ACE75028();
                  char v119 = *v217;
                  (*v217)(v117, v116);
                  long long v120 = v115;
                  uint64_t v45 = v245;
                  v119(v120, v116);
                  uint64_t v31 = 0x1E5E66000;
                  if (v118) {
                    goto LABEL_86;
                  }
                  goto LABEL_64;
                }
              }
              else
              {
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v225)(v232, 1, 1, v241);
              }
              sub_1ACA50E78(v109, (uint64_t *)&unk_1EB773140);
              id v121 = objc_msgSend(v248, sel_guid);
              if (!v121)
              {
LABEL_86:

                id v73 = v239;
                goto LABEL_39;
              }

LABEL_64:
              v238 = (void *)v65;
              long long v122 = v248;
              id v123 = objc_msgSend(v248, sel_uuid);
              if (v123)
              {
                long long v124 = v123;
                uint64_t v125 = sub_1ACE761B8();
                uint64_t v127 = v126;

                sub_1ACD3007C(&v255, v125, v127);
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_retain_n();
                long long v128 = v122;
                uint64_t v129 = sub_1ACE75498();
                int v130 = sub_1ACE76BE8();
                if (os_log_type_enabled(v129, (os_log_type_t)v130))
                {
                  int v210 = v130;
                  uint64_t v131 = swift_slowAlloc();
                  uint64_t v209 = swift_slowAlloc();
                  uint64_t v252 = v209;
                  *(_DWORD *)uint64_t v131 = v230;
                  uint64_t v255 = 1752392040;
                  sub_1ACE76FF8();
                  *(_WORD *)(v131 + 12) = 2081;
                  uint64_t v132 = sub_1ACE74DD8();
                  uint64_t v255 = sub_1ACA3189C(v132, v133, &v252);
                  sub_1ACE76FF8();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v131 + 22) = 2160;
                  uint64_t v255 = 1752392040;
                  sub_1ACE76FF8();
                  *(_WORD *)(v131 + 32) = 2081;
                  id v134 = objc_msgSend(v128, sel_title);
                  if (v134)
                  {
                    long long v135 = v134;
                    uint64_t v136 = sub_1ACE761B8();
                    uint64_t v138 = v137;
                  }
                  else
                  {
                    uint64_t v136 = 0;
                    uint64_t v138 = 0;
                  }
                  os_log_type_t v139 = v210;
                  uint64_t v255 = v136;
                  uint64_t v256 = v138;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
                  uint64_t v140 = sub_1ACE76228();
                  uint64_t v255 = sub_1ACA3189C(v140, v141, &v252);
                  sub_1ACE76FF8();

                  swift_bridgeObjectRelease();
                  _os_log_impl(&dword_1AC9D5000, v129, v139, "Job %{private,mask.hash}s: nil UUID for localEpisode no longer in server feed: %{private,mask.hash}s", (uint8_t *)v131, 0x2Au);
                  uint64_t v142 = v209;
                  swift_arrayDestroy();
                  MEMORY[0x1AD11B340](v142, -1, -1);
                  MEMORY[0x1AD11B340](v131, -1, -1);

                  uint64_t v32 = v236;
                  uint64_t v38 = v247;
                  uint64_t v37 = v243;
                }
                else
                {

                  swift_release_n();
                }
              }
              uint64_t v31 = v253 + 1;
              if (__OFADD__(v253, 1))
              {
                __break(1u);
LABEL_133:
                __break(1u);
                goto LABEL_134;
              }
              ++v253;
              swift_retain_n();
              long long v143 = v122;
              long long v144 = sub_1ACE75498();
              os_log_type_t v145 = sub_1ACE76C08();
              if (os_log_type_enabled(v144, v145))
              {
                uint64_t v146 = swift_slowAlloc();
                uint64_t v147 = swift_slowAlloc();
                uint64_t v252 = v147;
                *(_DWORD *)uint64_t v146 = v227;
                uint64_t v255 = 1752392040;
                sub_1ACE76FF8();
                *(_WORD *)(v146 + 12) = 2081;
                uint64_t v148 = sub_1ACE74DD8();
                uint64_t v255 = sub_1ACA3189C(v148, v149, &v252);
                sub_1ACE76FF8();
                swift_release_n();
                swift_bridgeObjectRelease();
                *(_WORD *)(v146 + 22) = 2082;
                id v150 = objc_msgSend(v143, sel_uuid);
                if (v150)
                {
                  long long v151 = v150;
                  uint64_t v152 = sub_1ACE761B8();
                  uint64_t v154 = v153;
                }
                else
                {
                  uint64_t v152 = 0;
                  uint64_t v154 = 0;
                }
                uint64_t v38 = v247;
                uint64_t v255 = v152;
                uint64_t v256 = v154;
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
                uint64_t v155 = sub_1ACE76228();
                uint64_t v255 = sub_1ACA3189C(v155, v156, &v252);
                sub_1ACE76FF8();

                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1AC9D5000, v144, v145, "Job %{private,mask.hash}s: marking episode for deletion: %{public}s", (uint8_t *)v146, 0x20u);
                swift_arrayDestroy();
                MEMORY[0x1AD11B340](v147, -1, -1);
                MEMORY[0x1AD11B340](v146, -1, -1);

                uint64_t v32 = v236;
                uint64_t v37 = v243;
              }
              else
              {

                swift_release_n();
              }
              uint64_t v45 = v245;
              uint64_t v58 = v239;
              uint64_t v157 = v238;
              if (__ROR8__(0x8F5C28F5C28F5C29 * v31 + 0x51EB851EB851EB8, 3) <= 0x147AE147AE147AEuLL) {
                objc_msgSend(v231, sel_saveInCurrentBlock);
              }

              unint64_t v53 = v253;
              uint64_t v31 = 0x1E5E66000;
              if ((uint64_t)v253 >= v224)
              {
                char v56 = v58;
                id v57 = v58;
                goto LABEL_88;
              }
              if (v228)
              {
                long long v93 = (char *)MEMORY[0x1AD119490](v253, v229);
              }
              else
              {
                if ((v253 & 0x8000000000000000) != 0) {
                  goto LABEL_135;
                }
                if (v253 >= *(void *)(v221 + 16)) {
                  goto LABEL_136;
                }
                long long v93 = (char *)*(id *)(v215 + 8 * v253);
              }
              char v56 = v93;

              id v57 = v56;
              uint64_t v92 = v56;
              if (sub_1ACBEA594(v57, v157)) {
                goto LABEL_32;
              }
            }
          }
        }
      }
    }
    if (qword_1EB769568 != -1) {
      swift_once();
    }
    uint64_t v59 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB76D4C8);
    (*v250)(v39, v59, v38);
    swift_retain_n();
    id v60 = v45;
    unsigned __int8 v61 = sub_1ACE75498();
    os_log_type_t v62 = sub_1ACE76C08();
    if (os_log_type_enabled(v61, v62)) {
      break;
    }

    swift_release_n();
    (*v249)(v39, v38);
LABEL_11:
    uint64_t v41 = (uint64_t)v251 + 1;
LABEL_12:
    if (v41 >= v37)
    {
      swift_bridgeObjectRelease();
      uint64_t v31 = (uint64_t)v216;
LABEL_120:
      objc_msgSend(v231, sel_saveInCurrentBlock);
      sub_1ACBE6754((uint64_t *)&v253, v229, (uint64_t)&v254);
      swift_bridgeObjectRelease();
      sub_1ACBE6D00(v254, (void *)v31);
      swift_bridgeObjectRelease();
      objc_msgSend((id)v31, sel_unsafeFinalizeIngestion);
      id v183 = v208;
      objc_msgSend(v208, sel_setImporting_, 0);
      objc_msgSend(v183, sel_setIsTransitioningFromImplicit_, 0);
      if (qword_1EB769568 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v38, (uint64_t)qword_1EB76D4C8);
      swift_retain_n();
      id v184 = v183;
      uint64_t v185 = sub_1ACE75498();
      os_log_type_t v186 = sub_1ACE76C08();
      if (os_log_type_enabled(v185, v186))
      {
        uint64_t v187 = swift_slowAlloc();
        uint64_t v188 = swift_slowAlloc();
        char v189 = v40;
        uint64_t v190 = v188;
        uint64_t v252 = v188;
        *(_DWORD *)uint64_t v187 = *((void *)v189 + 196);
        uint64_t v255 = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v187 + 12) = 2081;
        uint64_t v191 = sub_1ACE74DD8();
        uint64_t v255 = sub_1ACA3189C(v191, v192, &v252);
        sub_1ACE76FF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v187 + 22) = 2082;
        id v193 = objc_msgSend(v184, sel_uuid);
        if (v193)
        {
          uint64_t v194 = v193;
          uint64_t v195 = sub_1ACE761B8();
          uint64_t v197 = v196;
        }
        else
        {
          uint64_t v195 = 0;
          uint64_t v197 = 0;
        }
        uint64_t v255 = v195;
        uint64_t v256 = v197;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
        uint64_t v198 = sub_1ACE76228();
        uint64_t v255 = sub_1ACA3189C(v198, v199, &v252);
        sub_1ACE76FF8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v185, v186, "Job %{private,mask.hash}s: finalized ingestion for show: %{public}s", (uint8_t *)v187, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v190, -1, -1);
        MEMORY[0x1AD11B340](v187, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      objc_msgSend(v231, sel_saveInCurrentBlock);
      swift_retain_n();
      uint64_t v200 = sub_1ACE75498();
      os_log_type_t v201 = sub_1ACE76C08();
      if (os_log_type_enabled(v200, v201))
      {
        uint64_t v202 = swift_slowAlloc();
        uint64_t v203 = swift_slowAlloc();
        uint64_t v255 = v203;
        *(_DWORD *)uint64_t v202 = 141558275;
        uint64_t v252 = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v202 + 12) = 2081;
        uint64_t v204 = sub_1ACE74DD8();
        uint64_t v252 = sub_1ACA3189C(v204, v205, &v255);
        sub_1ACE76FF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v200, v201, "Job %{private,mask.hash}s: Processing fully completed.", (uint8_t *)v202, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v203, -1, -1);
        MEMORY[0x1AD11B340](v202, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      uint64_t v255 = v212;
      uint64_t v256 = v207;
      uint64_t v257 = 0;
      uint64_t v258 = 0;
      char v259 = 64;
      sub_1ACBE1784(&v255);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      return;
    }
  }
  unsigned __int8 v63 = (_DWORD *)swift_slowAlloc();
  uint64_t v64 = swift_slowAlloc();
  uint64_t v255 = v64;
  *unsigned __int8 v63 = v230;
  uint64_t v65 = 1752392040;
  *(void *)(v63 + 1) = 1752392040;
  *((_WORD *)v63 + 6) = 2081;
  uint64_t v66 = sub_1ACE74DD8();
  *(void *)((char *)v63 + 14) = sub_1ACA3189C(v66, v67, &v255);
  swift_release_n();
  swift_bridgeObjectRelease();
  *((_WORD *)v63 + 11) = 2160;
  *((void *)v63 + 3) = 1752392040;
  *((_WORD *)v63 + 16) = 2081;
  id v68 = objc_msgSend(v60, sel_title);
  if (v68)
  {
    id v69 = v68;
    uint64_t v70 = sub_1ACE761B8();
    unint64_t v72 = v71;

    *(void *)((char *)v63 + 34) = sub_1ACA3189C(v70, v72, &v255);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v61, v62, "Job %{private,mask.hash}s: feed item without an enclosure: %{private,mask.hash}s", (uint8_t *)v63, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v64, -1, -1);
    MEMORY[0x1AD11B340](v63, -1, -1);

    uint64_t v39 = v240;
    uint64_t v38 = v247;
    (*v249)(v240, v247);
    uint64_t v40 = "PodcastsFoundation";
    uint64_t v37 = v243;
    goto LABEL_11;
  }

  __break(1u);
LABEL_145:

  __break(1u);
LABEL_146:

  __break(1u);
}

uint64_t sub_1ACBE6178(void *a1)
{
  id v1 = objc_msgSend(a1, sel_items);
  if (v1)
  {
    unint64_t v2 = v1;
    v6[0] = 0;
    sub_1ACA50D4C(0, &qword_1EB768ED0);
    sub_1ACE76568();
  }
  sub_1ACB18F1C();
  uint64_t v3 = (void *)swift_allocError();
  unsigned char *v4 = 5;
  v6[0] = v3;
  memset(&v6[1], 0, 24);
  char v7 = 96;
  sub_1ACBE1784(v6);

  return 0;
}

uint64_t sub_1ACBE6588()
{
  sub_1ACE761B8();
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  uint64_t v3 = self;
  uint64_t v4 = (void *)sub_1ACE76178();
  id v5 = objc_msgSend(v3, sel_predicateForAllEpisodesIncludingHiddenOnPodcastUuid_, v4);

  objc_msgSend(v2, sel_setPredicate_, v5);
  sub_1ACBEA468();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  uint64_t v6 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setSortDescriptors_, v6);

  objc_msgSend(v2, sel_setReturnsObjectsAsFaults_, 0);
  objc_msgSend(v2, sel_setFetchBatchSize_, 200);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  uint64_t v7 = sub_1ACE76EE8();

  return v7;
}

void sub_1ACBE6754(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = a2;
  id v5 = a1;
  uint64_t v6 = *a1;
  if (a2 >> 62) {
    goto LABEL_34;
  }
  uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v6 < v7)
  {
    unint64_t v51 = v4 & 0xC000000000000001;
    unint64_t v46 = v4 + 32;
    uint64_t v47 = v4 & 0xFFFFFFFFFFFFFF8;
    uint64_t v45 = a3;
    unint64_t v48 = v4;
    uint64_t v49 = v7;
    unint64_t v50 = v5;
    while (1)
    {
      if (v51)
      {
        id v8 = (id)MEMORY[0x1AD119490](v6, v4);
      }
      else
      {
        if (v6 < 0) {
          goto LABEL_32;
        }
        if ((unint64_t)v6 >= *(void *)(v47 + 16)) {
          goto LABEL_33;
        }
        id v8 = *(id *)(v46 + 8 * v6);
      }
      uint64_t v9 = v8;
      id v10 = objc_msgSend(v8, sel_uuid);
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = sub_1ACE761B8();
        uint64_t v14 = v13;

        sub_1ACD3007C(&v52, v12, v14);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1EB769568 != -1) {
          swift_once();
        }
        uint64_t v15 = sub_1ACE754C8();
        __swift_project_value_buffer(v15, (uint64_t)qword_1EB76D4C8);
        swift_retain_n();
        id v16 = v9;
        uint64_t v17 = sub_1ACE75498();
        os_log_type_t v18 = sub_1ACE76BE8();
        if (os_log_type_enabled(v17, v18))
        {
          uint64_t v19 = swift_slowAlloc();
          uint64_t v20 = swift_slowAlloc();
          uint64_t v54 = v20;
          *(_DWORD *)uint64_t v19 = 141558787;
          *(void *)(v19 + 4) = 1752392040;
          *(_WORD *)(v19 + 12) = 2081;
          type metadata accessor for FeedUpdateRequest();
          uint64_t v21 = sub_1ACE74DD8();
          *(void *)(v19 + 14) = sub_1ACA3189C(v21, v22, &v54);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v19 + 22) = 2160;
          *(void *)(v19 + 24) = 1752392040;
          *(_WORD *)(v19 + 32) = 2081;
          id v23 = objc_msgSend(v16, sel_title);
          if (v23)
          {
            uint64_t v24 = v23;
            uint64_t v25 = sub_1ACE761B8();
            uint64_t v27 = v26;
          }
          else
          {
            uint64_t v25 = 0;
            uint64_t v27 = 0;
          }
          unint64_t v4 = v48;
          uint64_t v52 = v25;
          uint64_t v53 = v27;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
          uint64_t v28 = sub_1ACE76228();
          *(void *)(v19 + 34) = sub_1ACA3189C(v28, v29, &v54);

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1AC9D5000, v17, v18, "Job %{private,mask.hash}s: nil UUID for localEpisode no longer in server feed: %{private,mask.hash}s", (uint8_t *)v19, 0x2Au);
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v20, -1, -1);
          MEMORY[0x1AD11B340](v19, -1, -1);

          a3 = v45;
        }
        else
        {

          swift_release_n();
        }
        uint64_t v7 = v49;
        id v5 = v50;
      }
      if (qword_1EB769568 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_1ACE754C8();
      __swift_project_value_buffer(v30, (uint64_t)qword_1EB76D4C8);
      swift_retain_n();
      id v31 = v9;
      uint64_t v32 = sub_1ACE75498();
      os_log_type_t v33 = sub_1ACE76C08();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = swift_slowAlloc();
        uint64_t v35 = swift_slowAlloc();
        uint64_t v54 = v35;
        *(_DWORD *)uint64_t v34 = 141558787;
        *(void *)(v34 + 4) = 1752392040;
        *(_WORD *)(v34 + 12) = 2081;
        type metadata accessor for FeedUpdateRequest();
        uint64_t v36 = sub_1ACE74DD8();
        *(void *)(v34 + 14) = sub_1ACA3189C(v36, v37, &v54);
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 22) = 2160;
        *(void *)(v34 + 24) = 1752392040;
        *(_WORD *)(v34 + 32) = 2081;
        id v38 = objc_msgSend(v31, sel_uuid);
        if (v38)
        {
          uint64_t v39 = v38;
          uint64_t v40 = sub_1ACE761B8();
          uint64_t v42 = v41;
        }
        else
        {
          uint64_t v40 = 0;
          uint64_t v42 = 0;
        }
        unint64_t v4 = v48;
        uint64_t v52 = v40;
        uint64_t v53 = v42;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
        uint64_t v43 = sub_1ACE76228();
        *(void *)(v34 + 34) = sub_1ACA3189C(v43, v44, &v54);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v32, v33, "Job %{private,mask.hash}s: marking episode for deletion from tail end: %{private,mask.hash}s", (uint8_t *)v34, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v35, -1, -1);
        MEMORY[0x1AD11B340](v34, -1, -1);

        uint64_t v7 = v49;
        id v5 = v50;
      }
      else
      {

        swift_release_n();
      }
      uint64_t v6 = *v5 + 1;
      if (__OFADD__(*v5, 1)) {
        break;
      }
      *id v5 = v6;
      if (v6 >= v7) {
        return;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
}

void sub_1ACBE6D00(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  sub_1ACE761B8();
  id v5 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v6 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  id v8 = self;
  uint64_t v9 = (void *)sub_1ACE76978();
  id v10 = objc_msgSend(v8, sel_predicateForEpisodeUuids_, v9);

  objc_msgSend(v7, sel_setPredicate_, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1ACE84830;
  sub_1ACE761B8();
  id v12 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v13 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_initWithKey_ascending_, v13, 0);

  *(void *)(v11 + 32) = v14;
  v60[0] = v11;
  sub_1ACE76598();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  uint64_t v15 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setSortDescriptors_, v15);

  objc_msgSend(v7, sel_setReturnsObjectsAsFaults_, 0);
  objc_msgSend(v7, sel_setFetchBatchSize_, 200);
  uint64_t v58 = v3;
  id v16 = *(void **)(v3 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  id v52 = v16;
  uint64_t v53 = v7;
  unint64_t v17 = sub_1ACE76EE8();
  uint64_t v18 = v3;
  if (qword_1EB769568 != -1) {
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v19 = sub_1ACE754C8();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EB76D4C8);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_1ACE75498();
    os_log_type_t v21 = sub_1ACE76C08();
    unint64_t v22 = "PodcastsFoundation";
    unint64_t v23 = v17 >> 62;
    unint64_t v57 = v17;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      v60[0] = v25;
      *(_DWORD *)uint64_t v24 = 141558531;
      v61[0] = 1752392040;
      sub_1ACE76FF8();
      *(_WORD *)(v24 + 12) = 2081;
      type metadata accessor for FeedUpdateRequest();
      uint64_t v26 = sub_1ACE74DD8();
      v61[0] = sub_1ACA3189C(v26, v27, v60);
      uint64_t v18 = v58;
      sub_1ACE76FF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 22) = 2048;
      if (v23)
      {
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_1ACE77508();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v28 = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v61[0] = v28;
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v20, v21, "Job %{private,mask.hash}s: deleting %ld feed deleted episodes", (uint8_t *)v24, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v25, -1, -1);
      MEMORY[0x1AD11B340](v24, -1, -1);

      unint64_t v17 = v57;
      unint64_t v22 = "PodcastsFoundation";
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v29 = *(void *)(a1 + 16);
    uint64_t v30 = *(void *)(v18 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_metricsData + 24);
    BOOL v31 = __OFADD__(v30, v29);
    uint64_t v32 = v30 + v29;
    if (v31) {
      break;
    }
    *(void *)(v18 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_metricsData + 24) = v32;
    if (v23) {
      goto LABEL_25;
    }
    uint64_t v33 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v33) {
      goto LABEL_26;
    }
LABEL_10:
    unint64_t v34 = v17 & 0xC000000000000001;
    uint64_t v35 = 4;
    int v54 = *((void *)v22 + 196);
    uint64_t v56 = v33;
    unint64_t v55 = v17 & 0xC000000000000001;
    while (1)
    {
      id v36 = v34 ? (id)MEMORY[0x1AD119490](v35 - 4, v17) : *(id *)(v17 + 8 * v35);
      unint64_t v37 = v36;
      a1 = v35 - 3;
      if (__OFADD__(v35 - 4, 1)) {
        break;
      }
      objc_msgSend(a2, sel_unsafeDeleteFeedDeletedEpisode_, v36);
      swift_retain_n();
      id v38 = v37;
      uint64_t v39 = sub_1ACE75498();
      os_log_type_t v40 = sub_1ACE76C08();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        v61[0] = v42;
        *(_DWORD *)uint64_t v41 = v54;
        *(void *)(v41 + 4) = 1752392040;
        *(_WORD *)(v41 + 12) = 2081;
        type metadata accessor for FeedUpdateRequest();
        uint64_t v43 = sub_1ACE74DD8();
        *(void *)(v41 + 14) = sub_1ACA3189C(v43, v44, v61);
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v41 + 22) = 2082;
        id v45 = objc_msgSend(v38, sel_uuid);
        if (v45)
        {
          unint64_t v46 = v45;
          uint64_t v47 = sub_1ACE761B8();
          uint64_t v49 = v48;
        }
        else
        {
          uint64_t v47 = 0;
          uint64_t v49 = 0;
        }
        unint64_t v34 = v55;
        v60[0] = v47;
        v60[1] = v49;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
        uint64_t v50 = sub_1ACE76228();
        *(void *)(v41 + 24) = sub_1ACA3189C(v50, v51, v61);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v39, v40, "Job %{private,mask.hash}s: deleting episode %{public}s", (uint8_t *)v41, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v42, -1, -1);
        MEMORY[0x1AD11B340](v41, -1, -1);

        unint64_t v17 = v57;
        uint64_t v18 = v58;
        uint64_t v33 = v56;
      }
      else
      {

        swift_release_n();
      }
      ++v35;
      if (a1 == v33) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_23:
    swift_once();
  }
  __break(1u);
LABEL_25:
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (v33) {
    goto LABEL_10;
  }
LABEL_26:
  swift_bridgeObjectRelease();
  objc_msgSend(v52, sel_saveInCurrentBlock);
}

uint64_t sub_1ACBE7498(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx);
  type metadata accessor for FeedUpdateRequest();
  sub_1ACE74DD8();
  uint64_t v3 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_podcastForFeedUrl_, v3);

  if (v4)
  {
    if (*(void *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_feedUniquenessHash + 8))
    {
      swift_bridgeObjectRetain();
      id v5 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v5 = 0;
    }
    objc_msgSend(v4, sel_setFeedUniquenessHash_, v5);

    objc_msgSend(v2, sel_saveInCurrentBlock);
  }
  else
  {
    if (qword_1EB769568 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1ACE754C8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EB76D4C8);
    swift_retain_n();
    id v7 = sub_1ACE75498();
    os_log_type_t v8 = sub_1ACE76BE8();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 141558275;
      *(void *)&v15[0] = v10;
      sub_1ACE76FF8();
      *(_WORD *)(v9 + 12) = 2081;
      uint64_t v11 = sub_1ACE74DD8();
      sub_1ACA3189C(v11, v12, (uint64_t *)v15);
      sub_1ACE76FF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v7, v8, "Job %{private,mask.hash}s: Unable to save data uniqueness hash.", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v10, -1, -1);
      MEMORY[0x1AD11B340](v9, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
  long long v13 = *(_OWORD *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_metricsData + 16);
  v15[0] = *(_OWORD *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_metricsData);
  v15[1] = v13;
  char v16 = 0x80;
  return sub_1ACBE1784(v15);
}

unint64_t sub_1ACBE776C()
{
  id v1 = v0;
  sub_1ACBE79D4(v0, (uint64_t)v12);
  uint64_t v2 = (void *)v12[0];
  uint64_t v3 = v12[1];
  uint64_t v4 = v12[2];
  uint64_t v5 = v12[3];
  char v6 = v13;
  sub_1ACBE79D4(v1, (uint64_t)v14);
  unint64_t result = 0x6546206573726150;
  switch(v15 >> 5)
  {
    case 1:
      unint64_t result = 0x20737365636F7250;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x64656C696146;
      break;
    case 4:
      v15 &= 0x1Fu;
      sub_1ACBE79EC((uint64_t)v14, (uint64_t)v16);
      uint64_t v10 = 0x64656873696E6946;
      unint64_t v11 = 0xEA0000000000203ALL;
      sub_1ACBE79EC((uint64_t)v16, (uint64_t)&v9);
      sub_1ACBE7A48((uint64_t)v1, (void (*)(void, void, void, void, void))sub_1ACBE3074);
      sub_1ACBE313C(v2, v3, v4, v5, v6 & 1);
      sub_1ACE76228();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      sub_1ACBE7A48((uint64_t)v1, (void (*)(void, void, void, void, void))sub_1ACBE315C);
      unint64_t result = v10;
      break;
    case 5:
      int8x16_t v8 = vorrq_s8(v14[0], v14[1]);
      if (((v15 == 160) & (vorr_s8(*(int8x8_t *)v8.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL)) == 0)) != 0) {
        unint64_t result = 0x206C616974696E49;
      }
      else {
        unint64_t result = 0x64616F6C6E776F44;
      }
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACBE799C()
{
  sub_1ACBE79D4(v0, (uint64_t)v2);
  return sub_1ACBE776C();
}

uint64_t sub_1ACBE79D4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1ACBE79EC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ACBE7A48(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

char *sub_1ACBE7A88(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F35A0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  char v13 = v10 + 32;
  id v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1ACBE7B84(void **a1, const void **a2, void *a3)
{
  long long v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -40)
  {
    unint64_t result = (char *)sub_1ACE77568();
    __break(1u);
  }
  else
  {
    unint64_t result = (char *)*a1;
    size_t v6 = 40 * (v4 / 40);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_1ACBE7C50(void **a1, const void **a2, void *a3)
{
  long long v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 31;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -32)
  {
    unint64_t result = (char *)sub_1ACE77568();
    __break(1u);
  }
  else
  {
    unint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
    {
      return (char *)memmove(result, v3, 32 * v7);
    }
  }
  return result;
}

char *sub_1ACBE7D0C(void **a1, const void **a2, void *a3)
{
  long long v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    unint64_t result = (char *)sub_1ACE77568();
    __break(1u);
  }
  else
  {
    unint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_1ACBE7DCC(void **a1, const void **a2, void *a3)
{
  long long v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -48)
  {
    unint64_t result = (char *)sub_1ACE77568();
    __break(1u);
  }
  else
  {
    unint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
    {
      return (char *)memmove(result, v3, 48 * v6);
    }
  }
  return result;
}

char *sub_1ACBE7E9C(void **a1, const void **a2, void *a3)
{
  long long v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    unint64_t result = (char *)sub_1ACE77568();
    __break(1u);
  }
  else
  {
    unint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_1ACBE7F58(void **a1, const void **a2, void *a3)
{
  long long v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    unint64_t result = (char *)sub_1ACE77568();
    __break(1u);
  }
  else
  {
    unint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

char *sub_1ACBE8028(uint64_t a1)
{
  return sub_1ACBE7A88(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1ACBE803C(uint64_t a1)
{
  return sub_1ACC843EC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1ACBE8050(uint64_t a1)
{
  return sub_1ACC84558(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1ACBE8064(uint64_t a1)
{
  return sub_1ACC846C0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1ACBE8078(uint64_t a1)
{
  return sub_1ACC84820(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1ACBE808C(void *a1)
{
  return sub_1ACC84DAC(0, a1[2], 0, a1);
}

uint64_t sub_1ACBE80A0(void *a1)
{
  return sub_1ACC84DC0(0, a1[2], 0, a1);
}

uint64_t sub_1ACBE80B4(void *a1)
{
  return sub_1ACC850B4(0, a1[2], 0, a1);
}

uint64_t sub_1ACBE80C8(uint64_t a1)
{
  return sub_1ACC83FA8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1ACBE80DC(uint64_t a1)
{
  return sub_1ACC834F4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1ACBE80F0(void *a1)
{
  return sub_1ACC86678(0, a1[2], 0, a1);
}

uint64_t sub_1ACBE8104(void *a1)
{
  return sub_1ACC8668C(0, a1[2], 0, a1);
}

uint64_t sub_1ACBE8118(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v33 = a6;
  uint64_t v15 = sub_1ACE753F8();
  uint64_t v37 = *(void *)(v15 - 8);
  uint64_t v38 = v15;
  MEMORY[0x1F4188790](v15);
  unint64_t v34 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1ACE75118();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(unsigned char *)(v8 + 48) = -96;
  os_log_type_t v21 = (void *)(v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_feedUniquenessHash);
  *os_log_type_t v21 = 0;
  v21[1] = 0;
  uint64_t v36 = a1;
  sub_1ACAC5F3C(a1, v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_request);
  *(void *)(v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ctx) = a2;
  uint64_t v35 = a3;
  sub_1ACA3E158(a3, v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_ingesterProvider);
  *(void *)(v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_externalFeedDownloader) = a4;
  *(void *)(v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_workQueue) = a5;
  unint64_t v22 = (void *)(v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_completion);
  *unint64_t v22 = v33;
  v22[1] = a7;
  unint64_t v23 = (_OWORD *)(v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_metricsData);
  _OWORD *v23 = 0u;
  v23[1] = 0u;
  id v24 = a2;
  swift_unknownObjectRetain();
  id v25 = a5;
  swift_retain();
  sub_1ACE75108();
  uint64_t v26 = sub_1ACE750C8();
  uint64_t v28 = v27;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v29 = (uint64_t *)(v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_updaterJobUUID);
  uint64_t *v29 = v26;
  v29[1] = v28;
  if (qword_1EB76D390 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1ACE75438();
  __swift_project_value_buffer(v30, (uint64_t)qword_1EB76D378);
  sub_1ACE75428();
  BOOL v31 = v34;
  sub_1ACE753C8();
  __swift_destroy_boxed_opaque_existential_0(v35);
  sub_1ACAC5FA0(v36);
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v8 + OBJC_IVAR____TtC18PodcastsFoundation17RSSFeedUpdaterJob_signpostID, v31, v38);
  return v8;
}

id sub_1ACBE83EC()
{
  return sub_1ACBE4150(v0);
}

uint64_t sub_1ACBE83F4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1ACBE8434()
{
  sub_1ACBE4224(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1ACBE843C(void *a1, id a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v45 - v8;
  uint64_t v10 = sub_1ACE750A8();
  int64_t v11 = *(void **)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v45 - v15;
  *(void *)&double v18 = MEMORY[0x1F4188790](v17).n128_u64[0];
  uint64_t v20 = (char *)&v45 - v19;
  id v21 = objc_msgSend(a1, sel_pubDate, v18);
  if (v21)
  {
    unint64_t v22 = v21;
    uint64_t v48 = v13;
    uint64_t v50 = a1;
    unint64_t v51 = v20;
    id v52 = a2;
    sub_1ACE75078();

    uint64_t v49 = (void (*)(char *, char *, uint64_t))v11[4];
    v49(v9, v16, v10);
    unint64_t v23 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v11[7];
    v23(v9, 0, 1, v10);
    id v24 = (unsigned int (*)(char *, uint64_t, uint64_t))v11[6];
    if (v24(v9, 1, v10) == 1)
    {
      uint64_t v6 = v9;
    }
    else
    {
      unint64_t v46 = v24;
      uint64_t v47 = v23;
      id v25 = v49;
      v49(v51, v9, v10);
      id v26 = objc_msgSend(v52, sel_pubDate);
      if (v26)
      {
        uint64_t v27 = v26;
        sub_1ACE75078();

        v25(v6, v16, v10);
        v47(v6, 0, 1, v10);
        if (v46(v6, 1, v10) != 1)
        {
          uint64_t v28 = v48;
          v25(v48, v6, v10);
          sub_1ACBEAD78((unint64_t *)&unk_1EB76A940, MEMORY[0x1E4F27928]);
          uint64_t v29 = v51;
          char v30 = sub_1ACE76148() ^ 1;
          BOOL v31 = (void (*)(char *, uint64_t))v11[1];
          v31(v28, v10);
          v31(v29, v10);
          return v30 & 1;
        }
      }
      else
      {
        v47(v6, 1, 1, v10);
      }
      ((void (*)(char *, uint64_t))v11[1])(v51, v10);
    }
    a2 = v52;
    a1 = v50;
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v11[7])(v9, 1, 1, v10);
    uint64_t v6 = v9;
  }
  sub_1ACA50E78((uint64_t)v6, (uint64_t *)&unk_1EB773140);
  id v32 = objc_msgSend(a1, sel_guid);
  if (!v32) {
    goto LABEL_17;
  }
  uint64_t v33 = v32;
  uint64_t v34 = sub_1ACE761B8();
  uint64_t v36 = v35;

  id v37 = objc_msgSend(a2, sel_guid);
  if (!v37)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    id v42 = objc_msgSend(a2, sel_guid);
    if (v42)
    {

      char v30 = 0;
    }
    else
    {
      char v30 = 1;
    }
    return v30 & 1;
  }
  uint64_t v38 = v37;
  uint64_t v39 = sub_1ACE761B8();
  uint64_t v41 = v40;

  if (v34 == v39 && v36 == v41)
  {
    swift_bridgeObjectRelease_n();
    char v30 = 1;
  }
  else
  {
    char v43 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v30 = v43 ^ 1;
  }
  return v30 & 1;
}

uint64_t sub_1ACBE8900(id *a1, id *__src, unint64_t a3, char *a4)
{
  uint64_t v33 = a1;
  uint64_t v5 = __src;
  uint64_t v6 = (char *)__src - (char *)a1;
  uint64_t v7 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0) {
    uint64_t v7 = (char *)__src - (char *)a1;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)__src;
  uint64_t v10 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v10 = a3 - (void)__src;
  }
  uint64_t v11 = v10 >> 3;
  id v32 = (void **)a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != (char *)__src || &__src[v11] <= (id *)a4) {
        memmove(a4, __src, 8 * v11);
      }
      uint64_t v20 = &a4[8 * v11];
      BOOL v31 = v20;
      uint64_t v33 = v5;
      if (a1 < v5 && v9 >= 8)
      {
        id v21 = (id *)(a3 - 8);
        unint64_t v22 = v5;
        do
        {
          unint64_t v23 = v21 + 1;
          id v24 = *--v22;
          id v25 = *((id *)v20 - 1);
          id v26 = v24;
          char v27 = sub_1ACBE843C(v25, v26);

          if (v27)
          {
            if (v23 != v5 || v21 >= v5) {
              *id v21 = *v22;
            }
            uint64_t v33 = v22;
          }
          else
          {
            BOOL v31 = v20 - 8;
            if (v23 < (id *)v20 || v21 >= (id *)v20 || v23 != (id *)v20) {
              *id v21 = (id)*((void *)v20 - 1);
            }
            unint64_t v22 = v5;
            v20 -= 8;
          }
          if (v22 <= a1) {
            break;
          }
          --v21;
          uint64_t v5 = v22;
        }
        while (v20 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != (char *)a1 || &a1[v8] <= (id *)a4) {
      memmove(a4, a1, 8 * v8);
    }
    uint64_t v12 = (void **)&a4[8 * v8];
    BOOL v31 = (char *)v12;
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      char v13 = (void **)a4;
      uint64_t v14 = a1;
      do
      {
        uint64_t v15 = *v13;
        id v16 = *v5;
        id v17 = v15;
        char v18 = sub_1ACBE843C(v16, v17);

        if (v18)
        {
          uint64_t v19 = v5 + 1;
          if (v14 < v5 || v14 >= v19 || v14 != v5) {
            char *v14 = *v5;
          }
        }
        else
        {
          if (v14 != v13) {
            char *v14 = *v13;
          }
          id v32 = ++v13;
          uint64_t v19 = v5;
        }
        ++v14;
        if (v13 >= v12) {
          break;
        }
        uint64_t v5 = v19;
      }
      while ((unint64_t)v19 < a3);
      uint64_t v33 = v14;
    }
LABEL_43:
    sub_1ACBE7D0C((void **)&v33, (const void **)&v32, &v31);
    return 1;
  }
  swift_release();
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

void sub_1ACBE8BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v58 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v7 - 8);
  unsigned __int8 v63 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v72 = (char *)&v56 - v10;
  uint64_t v11 = sub_1ACE750A8();
  MEMORY[0x1F4188790](v11);
  uint64_t v59 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v67 = (char *)&v56 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v64 = (char *)&v56 - v17;
  uint64_t v57 = a2;
  if (a3 != a2)
  {
    char v18 = (void (**)(char *, char *, uint64_t))(v16 + 32);
    uint64_t v19 = *a4;
    unint64_t v71 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
    uint64_t v65 = (void (**)(char *, char *, uint64_t))(v16 + 32);
    uint64_t v66 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    os_log_type_t v62 = (void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v68 = v11;
    uint64_t v69 = v19;
    uint64_t v20 = v19 + 8 * a3 - 8;
LABEL_5:
    id v21 = *(void **)(v69 + 8 * a3);
    uint64_t v22 = v58;
    uint64_t v60 = v20;
    uint64_t v70 = a3;
    while (1)
    {
      unint64_t v23 = *(void **)v20;
      id v24 = v21;
      id v73 = v23;
      id v25 = objc_msgSend(v24, sel_pubDate);
      if (v25)
      {
        id v26 = v25;
        char v27 = v67;
        sub_1ACE75078();

        uint64_t v28 = *v18;
        uint64_t v29 = (uint64_t)v72;
        (*v18)(v72, v27, v11);
        char v30 = *v71;
        (*v71)(v29, 0, 1, v11);
        BOOL v31 = *v66;
        if ((*v66)(v29, 1, v11) != 1)
        {
          v28(v64, v72, v11);
          id v32 = objc_msgSend(v73, sel_pubDate);
          if (v32)
          {
            uint64_t v33 = v32;
            uint64_t v34 = v67;
            sub_1ACE75078();

            uint64_t v29 = (uint64_t)v63;
            uint64_t v35 = v34;
            char v18 = v65;
            v28(v63, v35, v11);
            v30(v29, 0, 1, v11);
            if (v31(v29, 1, v11) != 1)
            {
              uint64_t v36 = v59;
              v28(v59, (char *)v29, v11);
              sub_1ACBEAD78((unint64_t *)&unk_1EB76A940, MEMORY[0x1E4F27928]);
              id v37 = v64;
              int v38 = sub_1ACE76148();
              uint64_t v11 = v68;
              int v61 = v38;
              uint64_t v39 = *v62;
              (*v62)(v36, v68);
              v39(v37, v11);

              uint64_t v40 = v70;
              if (v61) {
                goto LABEL_4;
              }
              goto LABEL_24;
            }
          }
          else
          {
            uint64_t v29 = (uint64_t)v63;
            v30((uint64_t)v63, 1, 1, v11);
          }
          (*v62)(v64, v11);
        }
      }
      else
      {
        uint64_t v29 = (uint64_t)v72;
        (*v71)((uint64_t)v72, 1, 1, v11);
      }
      sub_1ACA50E78(v29, (uint64_t *)&unk_1EB773140);
      id v41 = objc_msgSend(v24, sel_guid);
      uint64_t v40 = v70;
      if (v41)
      {
        id v42 = v41;
        uint64_t v43 = v70;
        uint64_t v44 = sub_1ACE761B8();
        uint64_t v46 = v45;

        id v47 = objc_msgSend(v73, sel_guid);
        if (v47)
        {
          uint64_t v48 = v47;
          uint64_t v49 = sub_1ACE761B8();
          uint64_t v51 = v50;

          if (v44 == v49 && v46 == v51)
          {

            swift_bridgeObjectRelease_n();
            uint64_t v40 = v43;
            uint64_t v11 = v68;
            char v18 = v65;
          }
          else
          {
            char v54 = sub_1ACE77848();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v40 = v43;
            uint64_t v11 = v68;
            char v18 = v65;
            if (v54) {
              goto LABEL_4;
            }
          }
          goto LABEL_24;
        }
        swift_bridgeObjectRelease();
        uint64_t v40 = v43;
        uint64_t v11 = v68;
        char v18 = v65;
      }
      id v52 = v73;
      id v53 = objc_msgSend(v73, sel_guid);

      if (v53)
      {

LABEL_4:
        a3 = v40 + 1;
        uint64_t v20 = v60 + 8;
        if (a3 == v57) {
          return;
        }
        goto LABEL_5;
      }
LABEL_24:
      if (!v69)
      {
        __break(1u);
        return;
      }
      unint64_t v55 = *(void **)v20;
      id v21 = *(void **)(v20 + 8);
      *(void *)uint64_t v20 = v21;
      *(void *)(v20 + 8) = v55;
      v20 -= 8;
      if (v40 == ++v22) {
        goto LABEL_4;
      }
    }
  }
}

uint64_t sub_1ACBE91A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v213 = (char *)&v197 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v222 = (char *)&v197 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v197 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v204 = (char *)&v197 - v13;
  uint64_t v14 = sub_1ACE750A8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v207 = (char *)&v197 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  long long v217 = (char *)&v197 - v18;
  MEMORY[0x1F4188790](v19);
  unint64_t v199 = (char *)&v197 - v20;
  MEMORY[0x1F4188790](v21);
  unint64_t v220 = (char *)&v197 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v202 = (char *)&v197 - v24;
  uint64_t v200 = a1;
  uint64_t v25 = a1[1];
  uint64_t v210 = a2;
  swift_retain_n();
  uint64_t v26 = sub_1ACE777B8();
  if (v26 >= v25)
  {
    if (v25 < 0) {
      goto LABEL_175;
    }
    if (v25) {
      sub_1ACBE8BCC(0, v25, 1, v200);
    }
    return swift_release_n();
  }
  else
  {
    if (v25 >= 0) {
      uint64_t v27 = v25;
    }
    else {
      uint64_t v27 = v25 + 1;
    }
    if (v25 < -1)
    {
LABEL_183:
      swift_release_n();
      uint64_t result = sub_1ACE77488();
      __break(1u);
      return result;
    }
    uint64_t v205 = v25;
    uint64_t v198 = v26;
    uint64_t v211 = v2;
    if (v25 >= 2)
    {
      uint64_t v28 = v27 >> 1;
      sub_1ACA50D4C(0, &qword_1EB768ED0);
      uint64_t v29 = sub_1ACE76608();
      *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) = v28;
      uint64_t v209 = (char *)((v29 & 0xFFFFFFFFFFFFFF8) + 32);
      uint64_t v226 = v29;
      goto LABEL_13;
    }
    uint64_t v226 = MEMORY[0x1E4FBC860];
    uint64_t v209 = (char *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v25 == 1)
    {
LABEL_13:
      uint64_t v31 = 0;
      uint64_t v32 = *v200;
      uint64_t v33 = (void (**)(char *, char *, uint64_t))(v15 + 32);
      uint64_t v223 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      char v219 = (uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
      long long v214 = (void (**)(char *, uint64_t))(v15 + 8);
      uint64_t v197 = v32 - 8;
      uint64_t v34 = (char *)MEMORY[0x1E4FBC860];
      os_log_type_t v201 = v11;
      uint64_t v218 = v14;
      uint64_t v35 = v205;
      uint64_t v215 = v32;
      unint64_t v221 = v33;
      while (1)
      {
        uint64_t v37 = v31 + 1;
        uint64_t v212 = v34;
        uint64_t v206 = v31;
        if (v31 + 1 >= v35)
        {
          uint64_t v76 = v31 + 1;
          goto LABEL_56;
        }
        uint64_t v38 = v31;
        uint64_t v39 = *(void **)(v32 + 8 * v31);
        id v40 = *(id *)(v32 + 8 * v37);
        id v41 = v39;
        LODWORD(v224) = sub_1ACBE843C(v40, v41);

        uint64_t v42 = v38 + 2;
        if (v42 < v35)
        {
          while (1)
          {
            uint64_t v43 = *(void **)(v32 + 8 * v37);
            id v44 = *(id *)(v32 + 8 * v42);
            uint64_t v225 = v43;
            id v45 = objc_msgSend(v44, sel_pubDate);
            if (!v45)
            {
              unsigned __int8 v63 = v204;
              (*v223)(v204, 1, 1, v14);
              uint64_t v53 = (uint64_t)v63;
              goto LABEL_26;
            }
            uint64_t v46 = v45;
            id v47 = v220;
            sub_1ACE75078();

            uint64_t v48 = *v33;
            uint64_t v49 = v204;
            (*v33)(v204, v47, v14);
            uint64_t v50 = *v223;
            (*v223)(v49, 0, 1, v14);
            uint64_t v51 = *v219;
            int v52 = (*v219)(v49, 1, v14);
            uint64_t v53 = (uint64_t)v49;
            if (v52 == 1) {
              goto LABEL_26;
            }
            v48(v202, v204, v14);
            id v54 = objc_msgSend(v225, sel_pubDate);
            if (!v54) {
              break;
            }
            unint64_t v55 = v54;
            uint64_t v56 = v220;
            sub_1ACE75078();

            uint64_t v57 = (uint64_t)v201;
            uint64_t v58 = v56;
            uint64_t v33 = v221;
            v48(v201, v58, v14);
            v50((char *)v57, 0, 1, v14);
            if (v51((char *)v57, 1, v14) == 1)
            {
LABEL_25:
              (*v214)(v202, v14);
              uint64_t v53 = v57;
LABEL_26:
              sub_1ACA50E78(v53, (uint64_t *)&unk_1EB773140);
              id v64 = objc_msgSend(v44, sel_guid);
              if (v64)
              {
                uint64_t v65 = v64;
                uint64_t v66 = sub_1ACE761B8();
                uint64_t v68 = v67;

                id v69 = objc_msgSend(v225, sel_guid);
                if (v69)
                {
                  uint64_t v70 = v69;
                  uint64_t v71 = sub_1ACE761B8();
                  uint64_t v73 = v72;

                  if (v66 == v71 && v68 == v73) {
                    int v61 = 0;
                  }
                  else {
                    int v61 = sub_1ACE77848();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v14 = v218;
                  goto LABEL_41;
                }
                swift_bridgeObjectRelease();
              }
              id v74 = v225;
              id v75 = objc_msgSend(v225, sel_guid, v197);

              if (v75)
              {

                uint64_t v34 = v212;
                if (v224)
                {
                  uint64_t v76 = v42;
                  goto LABEL_47;
                }
                uint64_t v76 = v42 + 1;
                uint64_t v37 = v42;
                uint64_t v42 = v76;
                if (v76 >= v205) {
                  goto LABEL_56;
                }
              }
              else
              {
                uint64_t v34 = v212;
                if ((v224 & 1) == 0)
                {
                  uint64_t v76 = v42;
                  goto LABEL_56;
                }
                uint64_t v76 = v42 + 1;
                uint64_t v37 = v42;
                uint64_t v42 = v76;
                if (v76 >= v205) {
                  goto LABEL_47;
                }
              }
            }
            else
            {
              uint64_t v59 = v57;
              uint64_t v60 = v199;
              v48(v199, (char *)v59, v14);
              sub_1ACBEAD78((unint64_t *)&unk_1EB76A940, MEMORY[0x1E4F27928]);
              int v61 = sub_1ACE76148();
              uint64_t v32 = v215;
              os_log_type_t v62 = *v214;
              (*v214)(v60, v14);
              v62(v202, v14);
LABEL_41:

              if (((v224 ^ v61) & 1) == 0) {
                goto LABEL_45;
              }
              uint64_t v76 = v42 + 1;
              uint64_t v37 = v42;
              uint64_t v42 = v76;
              uint64_t v34 = v212;
              if (v76 >= v205) {
                goto LABEL_46;
              }
            }
          }
          uint64_t v57 = (uint64_t)v201;
          v50(v201, 1, 1, v14);
          goto LABEL_25;
        }
LABEL_45:
        uint64_t v76 = v42;
        uint64_t v34 = v212;
LABEL_46:
        if (v224)
        {
LABEL_47:
          if (v76 < v206) {
            goto LABEL_176;
          }
          if (v206 < v76)
          {
            char v77 = (uint64_t *)(v197 + 8 * v76);
            uint64_t v78 = v76;
            uint64_t v79 = v206;
            uint64_t v80 = (uint64_t *)(v32 + 8 * v206);
            do
            {
              if (v79 != --v78)
              {
                if (!v32) {
                  goto LABEL_181;
                }
                uint64_t v81 = *v80;
                *uint64_t v80 = *v77;
                *char v77 = v81;
              }
              ++v79;
              --v77;
              ++v80;
            }
            while (v79 < v78);
          }
        }
LABEL_56:
        if (v76 >= v205)
        {
          uint64_t v82 = v206;
LABEL_89:
          if (v76 < v82) {
            goto LABEL_169;
          }
          goto LABEL_90;
        }
        uint64_t v82 = v206;
        if (__OFSUB__(v76, v206)) {
          goto LABEL_174;
        }
        if (v76 - v206 >= v198) {
          goto LABEL_89;
        }
        if (__OFADD__(v206, v198)) {
          goto LABEL_177;
        }
        uint64_t v83 = v205;
        if (v206 + v198 < v205) {
          uint64_t v83 = v206 + v198;
        }
        if (v83 < v206) {
          break;
        }
        if (v76 == v83) {
          goto LABEL_89;
        }
        uint64_t v84 = v197 + 8 * v76;
        uint64_t v203 = v83;
        while (2)
        {
          uint64_t v85 = *(void **)(v32 + 8 * v76);
          uint64_t v86 = v82;
          uint64_t v208 = v84;
          uint64_t v216 = v76;
          while (1)
          {
            unint64_t v87 = *(void **)v84;
            id v88 = v85;
            BOOL v89 = v87;
            id v224 = v88;
            uint64_t v225 = v89;
            id v90 = objc_msgSend(v88, sel_pubDate);
            if (v90)
            {
              id v91 = v90;
              uint64_t v92 = v220;
              sub_1ACE75078();

              long long v93 = v222;
              uint64_t v94 = *v221;
              (*v221)(v222, v92, v14);
              long long v95 = *v223;
              (*v223)(v93, 0, 1, v14);
              uint64_t v96 = *v219;
              int v97 = (*v219)(v93, 1, v14);
              uint64_t v98 = (uint64_t)v93;
              if (v97 != 1)
              {
                v94(v217, v222, v14);
                id v99 = objc_msgSend(v225, sel_pubDate);
                if (v99)
                {
                  uint64_t v100 = v99;
                  uint64_t v101 = v220;
                  sub_1ACE75078();

                  unint64_t v102 = v213;
                  id v103 = v101;
                  uint64_t v32 = v215;
                  v94(v213, v103, v14);
                  v95(v102, 0, 1, v14);
                  if (v96(v102, 1, v14) != 1)
                  {
                    long long v104 = v207;
                    v94(v207, v102, v14);
                    sub_1ACBEAD78((unint64_t *)&unk_1EB76A940, MEMORY[0x1E4F27928]);
                    uint64_t v105 = v217;
                    char v106 = sub_1ACE76148();
                    uint64_t v107 = v215;
                    char v108 = v106;
                    uint64_t v109 = *v214;
                    (*v214)(v104, v14);
                    v109(v105, v14);
                    uint64_t v32 = v107;

                    uint64_t v76 = v216;
                    if (v108) {
                      goto LABEL_65;
                    }
                    goto LABEL_85;
                  }
                }
                else
                {
                  unint64_t v102 = v213;
                  v95(v213, 1, 1, v14);
                }
                (*v214)(v217, v14);
                uint64_t v98 = (uint64_t)v102;
                uint64_t v76 = v216;
              }
            }
            else
            {
              id v110 = v222;
              (*v223)(v222, 1, 1, v14);
              uint64_t v98 = (uint64_t)v110;
            }
            sub_1ACA50E78(v98, (uint64_t *)&unk_1EB773140);
            id v111 = v224;
            id v112 = objc_msgSend(v224, sel_guid);
            if (v112)
            {
              long long v113 = v112;
              uint64_t v114 = sub_1ACE761B8();
              uint64_t v116 = v115;

              id v117 = objc_msgSend(v225, sel_guid);
              if (v117)
              {
                char v118 = v117;
                uint64_t v119 = sub_1ACE761B8();
                uint64_t v121 = v120;

                if (v114 == v119 && v116 == v121)
                {

                  swift_bridgeObjectRelease_n();
                  uint64_t v14 = v218;
                }
                else
                {
                  char v124 = sub_1ACE77848();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v14 = v218;
                  if (v124) {
                    goto LABEL_65;
                  }
                }
                goto LABEL_85;
              }
              swift_bridgeObjectRelease();
              uint64_t v14 = v218;
            }
            id v122 = v225;
            id v123 = objc_msgSend(v225, sel_guid, v197);

            if (v123) {
              break;
            }
LABEL_85:
            if (!v32) {
              goto LABEL_179;
            }
            uint64_t v125 = *(void **)v84;
            uint64_t v85 = *(void **)(v84 + 8);
            *(void *)uint64_t v84 = v85;
            *(void *)(v84 + 8) = v125;
            v84 -= 8;
            if (v76 == ++v86) {
              goto LABEL_65;
            }
          }

LABEL_65:
          ++v76;
          uint64_t v84 = v208 + 8;
          uint64_t v82 = v206;
          if (v76 != v203) {
            continue;
          }
          break;
        }
        uint64_t v76 = v203;
        uint64_t v34 = v212;
        uint64_t v33 = v221;
        if (v203 < v206) {
          goto LABEL_169;
        }
LABEL_90:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v216 = v76;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v34 = sub_1ACBE7A88(0, *((void *)v34 + 2) + 1, 1, v34);
        }
        uint64_t v127 = v34;
        unint64_t v128 = *((void *)v34 + 2);
        uint64_t v212 = v127;
        unint64_t v129 = *((void *)v127 + 3);
        unint64_t v36 = v128 + 1;
        if (v128 >= v129 >> 1) {
          uint64_t v212 = sub_1ACBE7A88((char *)(v129 > 1), v128 + 1, 1, v212);
        }
        int v130 = v212;
        *((void *)v212 + 2) = v36;
        uint64_t v131 = v130 + 32;
        uint64_t v132 = &v130[16 * v128 + 32];
        uint64_t v133 = v216;
        *(void *)uint64_t v132 = v206;
        *((void *)v132 + 1) = v133;
        if (v128)
        {
          uint64_t v34 = v212;
          uint64_t v225 = v131;
          while (1)
          {
            unint64_t v134 = v36 - 1;
            if (v36 >= 4)
            {
              os_log_type_t v139 = &v131[16 * v36];
              uint64_t v140 = *((void *)v139 - 8);
              uint64_t v141 = *((void *)v139 - 7);
              BOOL v145 = __OFSUB__(v141, v140);
              uint64_t v142 = v141 - v140;
              if (v145) {
                goto LABEL_158;
              }
              uint64_t v144 = *((void *)v139 - 6);
              uint64_t v143 = *((void *)v139 - 5);
              BOOL v145 = __OFSUB__(v143, v144);
              uint64_t v137 = v143 - v144;
              char v138 = v145;
              if (v145) {
                goto LABEL_159;
              }
              unint64_t v146 = v36 - 2;
              uint64_t v147 = &v131[16 * v36 - 32];
              uint64_t v149 = *(void *)v147;
              uint64_t v148 = *((void *)v147 + 1);
              BOOL v145 = __OFSUB__(v148, v149);
              uint64_t v150 = v148 - v149;
              if (v145) {
                goto LABEL_161;
              }
              BOOL v145 = __OFADD__(v137, v150);
              uint64_t v151 = v137 + v150;
              if (v145) {
                goto LABEL_164;
              }
              if (v151 >= v142)
              {
                uint64_t v169 = &v131[16 * v134];
                uint64_t v171 = *(void *)v169;
                uint64_t v170 = *((void *)v169 + 1);
                BOOL v145 = __OFSUB__(v170, v171);
                uint64_t v172 = v170 - v171;
                if (v145) {
                  goto LABEL_168;
                }
                BOOL v162 = v137 < v172;
                goto LABEL_127;
              }
            }
            else
            {
              if (v36 != 3)
              {
                uint64_t v163 = *((void *)v34 + 4);
                uint64_t v164 = *((void *)v34 + 5);
                BOOL v145 = __OFSUB__(v164, v163);
                uint64_t v156 = v164 - v163;
                char v157 = v145;
                goto LABEL_121;
              }
              uint64_t v136 = *((void *)v34 + 4);
              uint64_t v135 = *((void *)v34 + 5);
              BOOL v145 = __OFSUB__(v135, v136);
              uint64_t v137 = v135 - v136;
              char v138 = v145;
            }
            if (v138) {
              goto LABEL_160;
            }
            unint64_t v146 = v36 - 2;
            uint64_t v152 = &v131[16 * v36 - 32];
            uint64_t v154 = *(void *)v152;
            uint64_t v153 = *((void *)v152 + 1);
            BOOL v155 = __OFSUB__(v153, v154);
            uint64_t v156 = v153 - v154;
            char v157 = v155;
            if (v155) {
              goto LABEL_163;
            }
            int v158 = &v131[16 * v134];
            uint64_t v160 = *(void *)v158;
            uint64_t v159 = *((void *)v158 + 1);
            BOOL v145 = __OFSUB__(v159, v160);
            uint64_t v161 = v159 - v160;
            if (v145) {
              goto LABEL_166;
            }
            if (__OFADD__(v156, v161)) {
              goto LABEL_167;
            }
            if (v156 + v161 >= v137)
            {
              BOOL v162 = v137 < v161;
LABEL_127:
              if (v162) {
                unint64_t v134 = v146;
              }
              goto LABEL_129;
            }
LABEL_121:
            if (v157) {
              goto LABEL_162;
            }
            id v165 = &v131[16 * v134];
            uint64_t v167 = *(void *)v165;
            uint64_t v166 = *((void *)v165 + 1);
            BOOL v145 = __OFSUB__(v166, v167);
            uint64_t v168 = v166 - v167;
            if (v145) {
              goto LABEL_165;
            }
            if (v168 < v156) {
              goto LABEL_15;
            }
LABEL_129:
            unint64_t v173 = v134 - 1;
            if (v134 - 1 >= v36)
            {
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              __break(1u);
LABEL_168:
              __break(1u);
LABEL_169:
              __break(1u);
LABEL_170:
              __break(1u);
LABEL_171:
              __break(1u);
LABEL_172:
              __break(1u);
LABEL_173:
              __break(1u);
LABEL_174:
              __break(1u);
LABEL_175:
              __break(1u);
LABEL_176:
              __break(1u);
LABEL_177:
              __break(1u);
              goto LABEL_178;
            }
            if (!v32) {
              goto LABEL_180;
            }
            uint64_t v174 = v32;
            uint64_t v175 = &v131[16 * v173];
            uint64_t v176 = *(void *)v175;
            unint64_t v177 = v134;
            double v178 = &v131[16 * v134];
            uint64_t v179 = *((void *)v178 + 1);
            double v180 = (id *)(v174 + 8 * *(void *)v175);
            uint64_t v181 = (id *)(v174 + 8 * *(void *)v178);
            unint64_t v182 = v174 + 8 * v179;
            swift_retain();
            id v183 = v180;
            uint64_t v184 = v211;
            sub_1ACBE8900(v183, v181, v182, v209);
            if (v184)
            {
LABEL_139:
              swift_bridgeObjectRelease();
              swift_release();
              *(void *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
              sub_1ACE76598();
              swift_release_n();
              return swift_bridgeObjectRelease();
            }
            swift_release();
            if (v179 < v176) {
              goto LABEL_155;
            }
            uint64_t v34 = v212;
            if (v177 > *((void *)v212 + 2)) {
              goto LABEL_156;
            }
            *(void *)uint64_t v175 = v176;
            *(void *)&v225[16 * v173 + 8] = v179;
            unint64_t v185 = *((void *)v34 + 2);
            if (v177 >= v185) {
              goto LABEL_157;
            }
            uint64_t v211 = 0;
            unint64_t v36 = v185 - 1;
            memmove(v178, v178 + 16, 16 * (v185 - 1 - v177));
            uint64_t v131 = v225;
            *((void *)v34 + 2) = v185 - 1;
            uint64_t v14 = v218;
            uint64_t v32 = v215;
            uint64_t v33 = v221;
            if (v185 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v36 = 1;
        uint64_t v34 = v212;
LABEL_15:
        uint64_t v35 = v205;
        uint64_t v31 = v216;
        if (v216 >= v205) {
          goto LABEL_141;
        }
      }
LABEL_178:
      __break(1u);
LABEL_179:
      swift_release_n();
      __break(1u);
LABEL_180:
      swift_release_n();
      __break(1u);
LABEL_181:
      swift_release_n();
      __break(1u);
LABEL_182:
      swift_release_n();
      __break(1u);
      goto LABEL_183;
    }
    unint64_t v36 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    uint64_t v34 = (char *)MEMORY[0x1E4FBC860];
LABEL_141:
    uint64_t v212 = v34;
    if (v36 >= 2)
    {
      uint64_t v186 = *v200;
      do
      {
        unint64_t v187 = v36 - 2;
        if (v36 < 2) {
          goto LABEL_170;
        }
        if (!v186) {
          goto LABEL_182;
        }
        uint64_t v188 = *(void *)&v212[16 * v187 + 32];
        uint64_t v189 = *(void *)&v212[16 * v36 + 24];
        uint64_t v190 = (id *)(v186 + 8 * *(void *)&v212[16 * v36 + 16]);
        swift_retain();
        uint64_t v191 = v211;
        sub_1ACBE8900((id *)(v186 + 8 * v188), v190, v186 + 8 * v189, v209);
        uint64_t v211 = v191;
        if (v191) {
          goto LABEL_139;
        }
        swift_release();
        if (v189 < v188) {
          goto LABEL_171;
        }
        unint64_t v192 = v212;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v192 = sub_1ACBE8028((uint64_t)v192);
        }
        if (v187 >= *((void *)v192 + 2)) {
          goto LABEL_172;
        }
        id v193 = v192 + 32;
        uint64_t v194 = &v192[16 * v187 + 32];
        *(void *)uint64_t v194 = v188;
        *((void *)v194 + 1) = v189;
        uint64_t v195 = v192;
        unint64_t v196 = *((void *)v192 + 2);
        if (v36 > v196) {
          goto LABEL_173;
        }
        memmove(&v193[16 * v36 - 16], &v193[16 * v36], 16 * (v196 - v36));
        uint64_t v212 = v195;
        *((void *)v195 + 2) = v196 - 1;
        unint64_t v36 = v196 - 1;
      }
      while (v196 > 2);
    }
    swift_bridgeObjectRelease();
    *(void *)((v226 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_1ACE76598();
    swift_release_n();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACBEA3B0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_retain_n();
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v4;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v4 < 0 || (v4 & 0x4000000000000000) != 0)
  {
    uint64_t v4 = sub_1ACDE6EC8(v4);
    *a1 = v4;
  }
  uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v8[0] = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
  v8[1] = v6;
  swift_retain();
  sub_1ACBE91A8(v8, a2);
  swift_release();
  sub_1ACE76598();
  return swift_release_n();
}

uint64_t sub_1ACBEA468()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1ACE8F1F0;
  sub_1ACE761B8();
  id v1 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v2 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithKey_ascending_, v2, 0);

  *(void *)(v0 + 32) = v3;
  sub_1ACE761B8();
  id v4 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v5 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithKey_ascending_, v5, 0);

  *(void *)(v0 + 40) = v6;
  sub_1ACE76598();
  return v0;
}

uint64_t sub_1ACBEA594(void *a1, void *a2)
{
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v65 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned __int8 v63 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A968);
  MEMORY[0x1F4188790](v67);
  uint64_t v66 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v62 - v11;
  *(void *)&double v14 = MEMORY[0x1F4188790](v13).n128_u64[0];
  uint64_t v16 = (char *)&v62 - v15;
  id v17 = objc_msgSend(a2, sel_guid, v14);
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = sub_1ACE761B8();
    uint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v21 = 0;
  }
  id v64 = v9;
  id v22 = objc_msgSend(a1, sel_guid);
  if (!v22)
  {
    if (!v21) {
      return 1;
    }
    goto LABEL_13;
  }
  uint64_t v23 = v22;
  uint64_t v24 = sub_1ACE761B8();
  uint64_t v26 = v25;

  if (!v21)
  {
    if (!v26) {
      return 1;
    }
    goto LABEL_13;
  }
  if (!v26)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (v19 == v24 && v21 == v26) {
    goto LABEL_22;
  }
  char v48 = sub_1ACE77848();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v48) {
    return 1;
  }
LABEL_14:
  id v27 = objc_msgSend(a2, sel_resolvedEnclosureUrl);
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = sub_1ACE761B8();
    uint64_t v31 = v30;
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v31 = 0;
  }
  id v32 = objc_msgSend(a1, sel_enclosureURL);
  if (!v32)
  {
    if (!v31) {
      return 1;
    }
    goto LABEL_26;
  }
  uint64_t v33 = v32;
  uint64_t v34 = sub_1ACE761B8();
  uint64_t v36 = v35;

  if (!v31)
  {
    if (!v36) {
      return 1;
    }
    goto LABEL_26;
  }
  if (!v36)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  if (v29 == v34 && v31 == v36)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  char v49 = sub_1ACE77848();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v49) {
    return 1;
  }
LABEL_27:
  uint64_t result = (uint64_t)objc_msgSend(a2, sel_title);
  if (result)
  {
    uint64_t v38 = (void *)result;
    id v39 = objc_msgSend((id)result, sel_stringByStrippingHTML);

    if (v39)
    {
      uint64_t v40 = sub_1ACE761B8();
      uint64_t v42 = v41;
    }
    else
    {
      uint64_t v40 = 0;
      uint64_t v42 = 0;
    }
    id v43 = objc_msgSend(a1, sel_title);
    if (v43)
    {
      id v44 = v43;
      uint64_t v45 = sub_1ACE761B8();
      uint64_t v47 = v46;

      if (v42)
      {
        if (v47)
        {
          if (v40 == v45 && v42 == v47)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_46:
            id v51 = objc_msgSend(a2, sel_pubDate);
            if (v51)
            {
              int v52 = v51;
              sub_1ACE75078();

              uint64_t v53 = v65;
              id v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56);
              v54(v16, 0, 1, v4);
            }
            else
            {
              uint64_t v53 = v65;
              id v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56);
              v54(v16, 1, 1, v4);
            }
            uint64_t v55 = (uint64_t)v66;
            uint64_t v56 = (uint64_t)v64;
            objc_msgSend(a1, sel_pubDate);
            sub_1ACE74FA8();
            v54(v12, 0, 1, v4);
            uint64_t v57 = v55 + *(int *)(v67 + 48);
            sub_1ACA72A5C((uint64_t)v16, v55);
            sub_1ACA72A5C((uint64_t)v12, v57);
            uint64_t v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
            if (v58(v55, 1, v4) == 1)
            {
              sub_1ACA50E78((uint64_t)v12, (uint64_t *)&unk_1EB773140);
              sub_1ACA50E78((uint64_t)v16, (uint64_t *)&unk_1EB773140);
              if (v58(v57, 1, v4) == 1)
              {
                sub_1ACA50E78(v55, (uint64_t *)&unk_1EB773140);
                return 1;
              }
              goto LABEL_54;
            }
            sub_1ACA72A5C(v55, v56);
            if (v58(v57, 1, v4) == 1)
            {
              sub_1ACA50E78((uint64_t)v12, (uint64_t *)&unk_1EB773140);
              sub_1ACA50E78((uint64_t)v16, (uint64_t *)&unk_1EB773140);
              (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v56, v4);
LABEL_54:
              sub_1ACA50E78(v55, &qword_1EB76A968);
              return 0;
            }
            uint64_t v59 = v63;
            (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v63, v57, v4);
            sub_1ACBEAD78((unint64_t *)&unk_1E99F3590, MEMORY[0x1E4F27928]);
            char v60 = sub_1ACE76168();
            int v61 = *(void (**)(char *, uint64_t))(v53 + 8);
            v61(v59, v4);
            sub_1ACA50E78((uint64_t)v12, (uint64_t *)&unk_1EB773140);
            sub_1ACA50E78((uint64_t)v16, (uint64_t *)&unk_1EB773140);
            v61((char *)v56, v4);
            sub_1ACA50E78(v55, (uint64_t *)&unk_1EB773140);
            return (v60 & 1) != 0;
          }
          char v50 = sub_1ACE77848();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v50) {
            goto LABEL_46;
          }
          return 0;
        }
      }
      else if (!v47)
      {
        goto LABEL_46;
      }
    }
    else if (!v42)
    {
      goto LABEL_46;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACBEACA8()
{
  return sub_1ACBE7498(v0);
}

uint64_t sub_1ACBEACB0()
{
  swift_release();
  sub_1ACBE315C(*(id *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  return swift_deallocObject();
}

void sub_1ACBEACF8()
{
  sub_1ACBE1A7C((long long *)(v0 + 24));
}

int8x16_t *sub_1ACBEAD24()
{
  return sub_1ACBE16F8(v0);
}

uint64_t sub_1ACBEAD2C()
{
  swift_release();
  sub_1ACA50850(*(void *)(v0 + 24), *(void *)(v0 + 32));
  return swift_deallocObject();
}

void sub_1ACBEAD6C()
{
  sub_1ACBE3A20(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1ACBEAD78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PendingPlaybackStore.publisher.getter()
{
  return swift_retain();
}

uint64_t PendingPlaybackStore.publisher.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*PendingPlaybackStore.publisher.modify())()
{
  return j__swift_endAccess;
}

uint64_t PendingPlaybackStore.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE68);
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1ACE75938();
  return v0;
}

uint64_t PendingPlaybackStore.init()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE68);
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1ACE75938();
  return v0;
}

uint64_t PendingPlaybackStore.pendingEpisode.getter()
{
  return swift_release();
}

uint64_t PendingPlaybackStore.update(_:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *((unsigned __int8 *)a1 + 8);
  uint64_t v4 = a1[2];
  id v3 = (ValueMetadata *)a1[3];
  unint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v11 = &type metadata for Podcasts;
  unint64_t v12 = sub_1ACA56248();
  LOBYTE(v10[0]) = 25;
  char v8 = sub_1ACE75298();
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  if (v8)
  {
    swift_beginAccess();
    v10[0] = v1;
    v10[1] = v2;
    _OWORD v10[2] = v4;
    uint64_t v11 = v3;
    unint64_t v12 = v5;
    uint64_t v13 = v6;
    uint64_t v14 = v7;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1ACE758E8();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall PendingPlaybackStore.reset()()
{
  uint64_t v2 = (uint64_t)&type metadata for Podcasts;
  unint64_t v3 = sub_1ACA56248();
  LOBYTE(v1[0]) = 25;
  char v0 = sub_1ACE75298();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v1);
  if (v0)
  {
    swift_beginAccess();
    memset(v1, 0, sizeof(v1));
    uint64_t v2 = 1;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    unint64_t v3 = 0;
    swift_retain();
    sub_1ACE758E8();
    swift_release();
  }
}

uint64_t PendingPlaybackStore.deinit()
{
  swift_release();
  return v0;
}

uint64_t PendingPlaybackStore.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

double EpisodePlayState.duration.getter()
{
  uint64_t v1 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1F4188790](v1);
  unint64_t v3 = (double *)((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ACAFDB90(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload || EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 1) {
    return v3[1];
  }
  sub_1ACAFDCDC((uint64_t)v3);
  return 0.0;
}

double EpisodePlayState.position.getter()
{
  uint64_t v1 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1F4188790](v1);
  unint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACAFDB90(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload || EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 1) {
    return *(double *)v3;
  }
  sub_1ACAFDCDC((uint64_t)v3);
  return 0.0;
}

uint64_t PendingPlaybackMetadata.adamId.getter()
{
  return *(void *)v0;
}

uint64_t PendingPlaybackMetadata.uuid.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double PendingPlaybackMetadata.timestamp.getter()
{
  return *(double *)(v0 + 32);
}

double PendingPlaybackMetadata.duration.getter()
{
  return *(double *)(v0 + 40);
}

double PendingPlaybackMetadata.position.getter()
{
  return *(double *)(v0 + 48);
}

double PendingPlaybackMetadata.init(adamId:uuid:)@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v9 = a2 & 1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for EpisodePlayState();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_1ACBEB46C(a1, v9, a3, a4, 0, 1, (uint64_t)v12, v18);
  uint64_t v14 = v19;
  double result = *(double *)v18;
  long long v16 = v18[1];
  long long v17 = v18[2];
  *(_OWORD *)a5 = v18[0];
  *(_OWORD *)(a5 + 16) = v16;
  *(_OWORD *)(a5 + 32) = v17;
  *(void *)(a5 + 48) = v14;
  return result;
}

uint64_t sub_1ACBEB46C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v44 = a3;
  uint64_t v45 = a7;
  int v42 = a6;
  uint64_t v41 = a5;
  uint64_t v43 = a1;
  uint64_t v11 = sub_1ACE750A8();
  uint64_t v39 = *(void *)(v11 - 8);
  uint64_t v40 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v37[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for EpisodePlayState();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (uint64_t *)&v37[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = &v37[-v19];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  uint64_t v24 = &v37[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = &v37[-v25];
  if ((a2 & 1) != 0 && !a4)
  {
    uint64_t result = sub_1ACBF32E8(v45);
    *a8 = 0;
    a8[1] = 0;
    a8[2] = 0;
    a8[3] = 1;
    a8[5] = 0;
    a8[6] = 0;
    a8[4] = 0;
    return result;
  }
  int v38 = a2 & 1;
  unsigned __int8 v46 = a2 & 1;
  sub_1ACBF21D4(v45, (uint64_t)&v37[-v25]);
  uint64_t v28 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48);
  if (v28(v26, 1, v14) == 1)
  {
    sub_1ACBF32E8((uint64_t)v26);
    uint64_t v29 = 0;
  }
  else
  {
    sub_1ACAFDB90((uint64_t)v26, (uint64_t)v20);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload || EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 1)
    {
      uint64_t v29 = *((void *)v20 + 1);
    }
    else
    {
      sub_1ACAFDCDC((uint64_t)v20);
      uint64_t v29 = 0;
    }
    sub_1ACAFDCDC((uint64_t)v26);
  }
  sub_1ACBF21D4(v45, (uint64_t)v24);
  if (v28(v24, 1, v14) != 1)
  {
    sub_1ACAFDB90((uint64_t)v24, (uint64_t)v18);
    int v36 = swift_getEnumCaseMultiPayload();
    if (!v36 || v36 == 3 || v36 == 1)
    {
      uint64_t v31 = *v18;
    }
    else
    {
      sub_1ACAFDCDC((uint64_t)v18);
      uint64_t v31 = 0;
    }
    sub_1ACAFDCDC((uint64_t)v24);
    if (v42) {
      goto LABEL_14;
    }
LABEL_21:
    uint64_t result = sub_1ACBF32E8(v45);
    uint64_t v34 = v41;
    unsigned int v35 = v38;
    goto LABEL_22;
  }
  sub_1ACBF32E8((uint64_t)v24);
  uint64_t v31 = 0;
  if ((v42 & 1) == 0) {
    goto LABEL_21;
  }
LABEL_14:
  sub_1ACE75098();
  sub_1ACE74FB8();
  uint64_t v33 = v32;
  sub_1ACBF32E8(v45);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v39 + 8))(v13, v40);
  uint64_t v34 = v33;
  unsigned int v35 = v46;
LABEL_22:
  *a8 = v43;
  a8[1] = v35;
  a8[2] = v44;
  a8[3] = a4;
  a8[4] = v34;
  a8[5] = v29;
  a8[6] = v31;
  return result;
}

Swift::Bool __swiftcall PendingPlaybackMetadata.isWithinTimeInterval(seconds:)(Swift::Double seconds)
{
  uint64_t v3 = sub_1ACE750A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = *(double *)(v1 + 32);
  sub_1ACE75098();
  sub_1ACE74FB8();
  double v9 = v8;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9 - v7 < seconds;
}

Swift::Double __swiftcall PendingPlaybackMetadata.timeRemaining(timeToLive:)(Swift::Double timeToLive)
{
  uint64_t v3 = sub_1ACE750A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = *(double *)(v1 + 32) + timeToLive;
  sub_1ACE75098();
  sub_1ACE74FB8();
  double v9 = v8;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  Swift::Double result = v7 - v9;
  if (v7 - v9 <= 0.0) {
    return 0.0;
  }
  return result;
}

uint64_t PendingPlaybackMetadata.identifierSet.getter()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = MEMORY[0x1E4FBC870];
  if ((*(unsigned char *)(v0 + 8) & 1) == 0)
  {
    unint64_t v4 = *(void *)v0;
    sub_1ACE77B18();
    sub_1ACE77B28();
    sub_1ACE77B58();
    uint64_t v5 = sub_1ACE77B78();
    uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v7 = v5 & ~v6;
    if ((*(void *)(v3 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v7))
    {
      uint64_t v8 = ~v6;
      while (1)
      {
        uint64_t v9 = *(void *)(v3 + 48) + 24 * v7;
        if ((*(unsigned char *)(v9 + 16) & 1) == 0 && *(void *)v9 == v4) {
          break;
        }
        unint64_t v7 = (v7 + 1) & v8;
        if (((*(void *)(v3 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v7) & 1) == 0) {
          goto LABEL_8;
        }
      }
    }
    else
    {
LABEL_8:
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (*(void *)(v3 + 24) <= *(void *)(v3 + 16))
      {
        if (result) {
          sub_1ACBEDA94();
        }
        else {
          sub_1ACBF1ED0();
        }
        sub_1ACE77B18();
        sub_1ACE77B28();
        sub_1ACE77B58();
        uint64_t result = sub_1ACE77B78();
        uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v7 = result & ~v11;
        if ((*(void *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
        {
          uint64_t v12 = ~v11;
          do
          {
            uint64_t v13 = *(void *)(v3 + 48) + 24 * v7;
            if ((*(unsigned char *)(v13 + 16) & 1) == 0 && *(void *)v13 == v4) {
              goto LABEL_49;
            }
            unint64_t v7 = (v7 + 1) & v12;
          }
          while (((*(void *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
        }
      }
      else if (result)
      {
        uint64_t v3 = MEMORY[0x1E4FBC870];
      }
      else
      {
        uint64_t result = (uint64_t)sub_1ACBEFB38();
      }
      *(void *)(v3 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v7;
      uint64_t v14 = *(void *)(v3 + 48) + 24 * v7;
      *(void *)uint64_t v14 = v4;
      *(void *)(v14 + 8) = 0;
      *(unsigned char *)(v14 + 16) = 0;
      uint64_t v15 = *(void *)(v3 + 16);
      BOOL v16 = __OFADD__(v15, 1);
      uint64_t v17 = v15 + 1;
      if (v16) {
        goto LABEL_55;
      }
      *(void *)(v3 + 16) = v17;
      swift_bridgeObjectRelease();
    }
  }
  if (!v1) {
    return v3;
  }
  sub_1ACE77B18();
  sub_1ACE77B28();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  uint64_t v18 = sub_1ACE77B78();
  uint64_t v19 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v4 = v18 & ~v19;
  if ((*(void *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v20 = ~v19;
    uint64_t v21 = *(void *)(v3 + 48);
    while (1)
    {
      uint64_t v22 = v21 + 24 * v4;
      if (*(unsigned char *)(v22 + 16) == 1)
      {
        BOOL v23 = *(void *)v22 == v2 && *(void *)(v22 + 8) == v1;
        if (v23 || (sub_1ACE77848() & 1) != 0) {
          break;
        }
      }
      unint64_t v4 = (v4 + 1) & v20;
      if (((*(void *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_34;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }
LABEL_34:
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v25 = *(void *)(v3 + 16);
  unint64_t v26 = *(void *)(v3 + 24);
  uint64_t result = swift_bridgeObjectRetain();
  if (v26 > v25)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t result = (uint64_t)sub_1ACBEFB38();
    }
    goto LABEL_50;
  }
  if (isUniquelyReferenced_nonNull_native) {
    sub_1ACBEDA94();
  }
  else {
    sub_1ACBF1ED0();
  }
  sub_1ACE77B18();
  sub_1ACE77B28();
  sub_1ACE76108();
  uint64_t result = sub_1ACE77B78();
  uint64_t v27 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v4 = result & ~v27;
  if (((*(void *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
    goto LABEL_50;
  }
  uint64_t v28 = ~v27;
  uint64_t v29 = *(void *)(v3 + 48);
  while (1)
  {
    uint64_t v30 = v29 + 24 * v4;
    if (*(unsigned char *)(v30 + 16) == 1)
    {
      if (*(void *)v30 == v2 && *(void *)(v30 + 8) == v1) {
        break;
      }
      uint64_t result = sub_1ACE77848();
      if (result) {
        break;
      }
    }
    unint64_t v4 = (v4 + 1) & v28;
    if (((*(void *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
      goto LABEL_50;
    }
  }
LABEL_49:
  uint64_t result = sub_1ACE77A58();
  __break(1u);
LABEL_50:
  *(void *)(v3 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v4;
  uint64_t v32 = *(void *)(v3 + 48) + 24 * v4;
  *(void *)uint64_t v32 = v2;
  *(void *)(v32 + 8) = v1;
  *(unsigned char *)(v32 + 16) = 1;
  uint64_t v33 = *(void *)(v3 + 16);
  BOOL v16 = __OFADD__(v33, 1);
  uint64_t v34 = v33 + 1;
  if (!v16)
  {
    *(void *)(v3 + 16) = v34;
    swift_bridgeObjectRelease();
LABEL_52:
    swift_bridgeObjectRelease();
    return v3;
  }
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

uint64_t PendingPlaybackMetadata.withPlayState(with:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)v2;
  char v9 = *(unsigned char *)(v2 + 8);
  uint64_t v10 = *(void *)(v2 + 16);
  uint64_t v11 = *(void *)(v2 + 24);
  uint64_t v12 = *(void *)(v2 + 32);
  sub_1ACBF21D4(a1, (uint64_t)v7);
  swift_bridgeObjectRetain();
  return sub_1ACBEB46C(v8, v9, v10, v11, v12, 0, (uint64_t)v7, a2);
}

uint64_t sub_1ACBEBF5C(uint64_t a1)
{
  return sub_1ACBEE140(a1, (uint64_t *)&unk_1E99F5300);
}

uint64_t sub_1ACBEBF68()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769008);
  uint64_t v3 = sub_1ACE77218();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1ACE77B18();
      sub_1ACE76108();
      uint64_t result = sub_1ACE77B78();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1ACBEC248()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A848);
  uint64_t result = sub_1ACE77218();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_1ACE77B18();
      sub_1ACE77B58();
      uint64_t result = sub_1ACE77B78();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1ACBEC4F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F35A8);
  uint64_t v3 = sub_1ACE77218();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_35;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_35;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_35;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_35:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_41;
                  }
                  if (v11 >= v8) {
                    goto LABEL_35;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      sub_1ACE77B18();
      sub_1ACE77B38();
      if (v20)
      {
        swift_bridgeObjectRetain();
        sub_1ACE76108();
        swift_bridgeObjectRelease();
      }
      uint64_t result = sub_1ACE77B78();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v21;
      v13[1] = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1ACBEC800()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2AE8);
  uint64_t result = sub_1ACE77218();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    BOOL v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_1ACE77B08();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1ACBECA84(uint64_t a1)
{
  return sub_1ACBEE140(a1, &qword_1EB770730);
}

uint64_t sub_1ACBECA90()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1ACE75118();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770728);
  uint64_t v5 = sub_1ACE77218();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    int v38 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    int v36 = v0;
    int64_t v37 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v39 = v4;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v37) {
          goto LABEL_33;
        }
        unint64_t v20 = v38[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v37) {
            goto LABEL_33;
          }
          unint64_t v20 = v38[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v37) {
              goto LABEL_33;
            }
            unint64_t v20 = v38[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v37)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v36;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v38 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v38[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v37) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v38[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v2 + 72);
      uint64_t v25 = v2;
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 32);
      v26(v14, v23 + v24 * v18, v15);
      sub_1ACBF3348();
      uint64_t result = sub_1ACE760E8();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v39;
      int64_t v13 = v40;
      uint64_t v2 = v25;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

void sub_1ACBECE50()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771920);
  uint64_t v3 = sub_1ACE77218();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1;
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    swift_retain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v15 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return;
        }
        if (v15 >= v8) {
          goto LABEL_22;
        }
        unint64_t v16 = v5[v15];
        ++v9;
        if (!v16)
        {
          int64_t v9 = v15 + 1;
          if (v15 + 1 >= v8) {
            goto LABEL_22;
          }
          unint64_t v16 = v5[v9];
          if (!v16)
          {
            int64_t v9 = v15 + 2;
            if (v15 + 2 >= v8) {
              goto LABEL_22;
            }
            unint64_t v16 = v5[v9];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_22:
                swift_release();
                uint64_t v18 = 1 << *(unsigned char *)(v2 + 32);
                if (v18 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v18 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v5 = -1 << v18;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v5[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v9 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_28;
                  }
                  if (v9 >= v8) {
                    goto LABEL_22;
                  }
                  unint64_t v16 = v5[v9];
                  ++v17;
                  if (v16) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v9 = v17;
            }
          }
        }
LABEL_21:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v11 = __clz(__rbit64(v16)) + (v9 << 6);
      }
      uint64_t v12 = *(void *)(v2 + 48) + 72 * v11;
      long long v13 = *(_OWORD *)(v12 + 48);
      v19[2] = *(_OWORD *)(v12 + 32);
      v19[3] = v13;
      uint64_t v20 = *(void *)(v12 + 64);
      long long v14 = *(_OWORD *)(v12 + 16);
      v19[0] = *(_OWORD *)v12;
      v19[1] = v14;
      sub_1ACD32850((uint64_t)v19, v3);
    }
  }
  swift_release();
  uint64_t *v1 = v3;
}