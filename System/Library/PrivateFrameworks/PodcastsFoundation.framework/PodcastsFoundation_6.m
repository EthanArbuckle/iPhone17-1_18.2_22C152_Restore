uint64_t _s6CachesVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACDB55E4);
}

uint64_t sub_1ACDB55E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t _s6CachesVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACDB56F8);
}

uint64_t sub_1ACDB56F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1ACDB5804()
{
  sub_1ACDB58CC();
  if (v0 <= 0x3F)
  {
    sub_1ACDB5958();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1ACDB58CC()
{
  if (!qword_1EB76F040)
  {
    type metadata accessor for TTMLRequest();
    unint64_t v0 = type metadata accessor for CacheDomain();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB76F040);
    }
  }
}

void sub_1ACDB5958()
{
  if (!qword_1EB76F058)
  {
    type metadata accessor for ShazamSignatureRequest();
    unint64_t v0 = type metadata accessor for CacheDomain();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB76F058);
    }
  }
}

uint64_t sub_1ACDB59E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v102 = a3;
  uint64_t v4 = sub_1ACE75118();
  uint64_t v83 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE754C8();
  uint64_t v82 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v10 - 8);
  v101 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5D58);
  uint64_t v84 = *(void *)(v12 - 8);
  uint64_t v85 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E4F0);
  uint64_t v86 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D640);
  uint64_t v87 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  v18 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76DA28);
  uint64_t v92 = *(void *)(v19 - 8);
  uint64_t v93 = v19;
  MEMORY[0x1F4188790](v19);
  v91 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB769478);
  uint64_t v95 = *(void *)(v21 - 8);
  uint64_t v96 = v21;
  MEMORY[0x1F4188790](v21);
  v94 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5D60);
  uint64_t v99 = *(void *)(v23 - 8);
  uint64_t v100 = v23;
  MEMORY[0x1F4188790](v23);
  v97 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  v98 = (char *)&v78 - v26;
  sub_1ACA69E2C(a1, (uint64_t)&v103);
  sub_1ACA3AAD4((uint64_t)&v116 + 8, (uint64_t)&v119, &qword_1EB772EA0);
  sub_1ACA69E88((uint64_t)&v103);
  if (v120)
  {
    sub_1ACA3AABC(&v119, (uint64_t)v121);
  }
  else
  {
    v27 = v9;
    uint64_t v80 = v4;
    uint64_t v81 = a1;
    uint64_t v29 = v82;
    uint64_t v28 = v83;
    if (qword_1EB772EF0 != -1) {
      swift_once();
    }
    uint64_t v30 = __swift_project_value_buffer(v7, (uint64_t)qword_1EB772ED0);
    v31 = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v27, v30, v7);
    int v79 = sub_1ACE76BC8();
    sub_1ACE75108();
    uint64_t v32 = sub_1ACE750C8();
    uint64_t v78 = v7;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v80);
    uint64_t v36 = type metadata accessor for LoggerTrace(0);
    v121[3] = v36;
    v121[4] = (uint64_t)&protocol witness table for LoggerTrace;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v121);
    uint64_t *boxed_opaque_existential_1 = v33;
    boxed_opaque_existential_1[1] = v35;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))((char *)boxed_opaque_existential_1 + *(int *)(v36 + 20), v31, v78);
    *((unsigned char *)boxed_opaque_existential_1 + *(int *)(v36 + 24)) = v79;
    sub_1ACA50E78((uint64_t)&v119, &qword_1EB772EA0);
    a1 = v81;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A878);
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 24) = 0;
  *(void *)(v38 + 32) = 0;
  *(void *)(v38 + 16) = 0;
  *(_DWORD *)(v38 + 40) = 0;
  sub_1ACA69E2C(a1, (uint64_t)&v103);
  sub_1ACE759C8();
  uint64_t v83 = sub_1ACE74F28();
  uint64_t v39 = v85;
  sub_1ACE759A8();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v14, v39);
  *(void *)&long long v103 = v90;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E000);
  sub_1ACA51EA4(&qword_1EB76E4E8, (uint64_t *)&unk_1EB76E4F0);
  sub_1ACA51EA4(&qword_1EB76DFF8, &qword_1EB76E000);
  uint64_t v40 = v88;
  sub_1ACE75B18();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v16, v40);
  sub_1ACA51EA4(&qword_1EB76D638, &qword_1EB76D640);
  v41 = v91;
  uint64_t v42 = v89;
  sub_1ACE75C18();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v18, v42);
  sub_1ACA69E2C(a1, (uint64_t)&v103);
  sub_1ACA3E158((uint64_t)v121, (uint64_t)&v119);
  uint64_t v43 = swift_allocObject();
  long long v44 = v116;
  *(_OWORD *)(v43 + 208) = v115;
  *(_OWORD *)(v43 + 224) = v44;
  long long v45 = v118;
  *(_OWORD *)(v43 + 240) = v117;
  *(_OWORD *)(v43 + 256) = v45;
  long long v46 = v112;
  *(_OWORD *)(v43 + 144) = v111;
  *(_OWORD *)(v43 + 160) = v46;
  long long v47 = v114;
  *(_OWORD *)(v43 + 176) = v113;
  *(_OWORD *)(v43 + 192) = v47;
  long long v48 = v108;
  *(_OWORD *)(v43 + 80) = v107;
  *(_OWORD *)(v43 + 96) = v48;
  long long v49 = v110;
  *(_OWORD *)(v43 + 112) = v109;
  *(_OWORD *)(v43 + 128) = v49;
  long long v50 = v104;
  *(_OWORD *)(v43 + 16) = v103;
  *(_OWORD *)(v43 + 32) = v50;
  long long v51 = v105;
  long long v52 = v106;
  *(void *)(v43 + 272) = v38;
  *(void *)(v43 + 280) = "ForegroundNetworkFetch";
  *(void *)(v43 + 288) = 22;
  *(unsigned char *)(v43 + 296) = 2;
  *(_OWORD *)(v43 + 48) = v51;
  *(_OWORD *)(v43 + 64) = v52;
  sub_1ACA3AABC(&v119, v43 + 304);
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = sub_1ACDC006C;
  *(void *)(v53 + 24) = v43;
  swift_retain();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A310);
  sub_1ACA51EA4(&qword_1EB76DA20, (uint64_t *)&unk_1EB76DA28);
  sub_1ACA51EA4(&qword_1EB76A308, &qword_1EB76A310);
  uint64_t v54 = v93;
  v55 = v94;
  sub_1ACE75C78();
  swift_release();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v41, v54);
  sub_1ACA3E158((uint64_t)v121, (uint64_t)&v119);
  sub_1ACA69E2C(a1, (uint64_t)&v103);
  uint64_t v56 = swift_allocObject();
  sub_1ACA3AABC(&v119, v56 + 16);
  long long v57 = v116;
  *(_OWORD *)(v56 + 248) = v115;
  long long v58 = v117;
  long long v59 = v118;
  *(_OWORD *)(v56 + 264) = v57;
  *(_OWORD *)(v56 + 280) = v58;
  *(_OWORD *)(v56 + 296) = v59;
  long long v60 = v112;
  *(_OWORD *)(v56 + 184) = v111;
  *(_OWORD *)(v56 + 200) = v60;
  long long v61 = v114;
  *(_OWORD *)(v56 + 216) = v113;
  *(_OWORD *)(v56 + 232) = v61;
  long long v62 = v108;
  *(_OWORD *)(v56 + 120) = v107;
  *(_OWORD *)(v56 + 136) = v62;
  long long v63 = v110;
  *(_OWORD *)(v56 + 152) = v109;
  *(_OWORD *)(v56 + 168) = v63;
  long long v64 = v104;
  *(_OWORD *)(v56 + 56) = v103;
  *(_OWORD *)(v56 + 72) = v64;
  long long v65 = v106;
  *(_OWORD *)(v56 + 88) = v105;
  *(_OWORD *)(v56 + 104) = v65;
  type metadata accessor for ArtworkContent();
  sub_1ACA51EA4(&qword_1EB76A6D8, (uint64_t *)&unk_1EB769478);
  v66 = v98;
  uint64_t v67 = v96;
  sub_1ACE75C28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v55, v67);
  sub_1ACA3E158((uint64_t)v121, (uint64_t)&v103);
  uint64_t v68 = (uint64_t)v101;
  uint64_t v69 = v83;
  ArtworkRequest.remoteUrl.getter();
  uint64_t v70 = *(void *)(v69 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69) == 1)
  {
    sub_1ACA50E78(v68, &qword_1EB7731B0);
    uint64_t v71 = 0;
    unint64_t v72 = 0;
  }
  else
  {
    uint64_t v71 = sub_1ACE74EC8();
    unint64_t v72 = v73;
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v68, v69);
  }
  uint64_t v75 = v99;
  uint64_t v74 = v100;
  uint64_t v76 = (uint64_t)v97;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v97, v66, v100);
  sub_1ACA3AAD4((uint64_t)&v103, (uint64_t)&v119, &qword_1EB772EA0);
  sub_1ACDB33E8(v76, (uint64_t)&v119, (uint64_t)"ForegroundDownload", 18, 2, 0, v71, v72, v102, 1, &qword_1E99F5D60, &qword_1E99F54A0);
  swift_release();
  sub_1ACA50E78((uint64_t)&v103, &qword_1EB772EA0);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v66, v74);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v121);
}

uint64_t sub_1ACDB6668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v91 = a3;
  uint64_t v4 = (uint64_t (*)(void))sub_1ACE75118();
  uint64_t v69 = *((void *)v4 - 1);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v66[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1ACE754C8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v66[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v90 = &v66[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5BB8);
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v14 = &v66[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E4F0);
  uint64_t v75 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v71 = &v66[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D640);
  uint64_t v76 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  unint64_t v72 = &v66[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76DA28);
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  v18 = &v66[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB769478);
  uint64_t v84 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  uint64_t v83 = &v66[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5BC0);
  uint64_t v88 = *(void *)(v20 - 8);
  uint64_t v89 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v86 = &v66[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v22);
  uint64_t v87 = &v66[-v23];
  uint64_t v24 = type metadata accessor for ShazamSignatureRequest();
  uint64_t v70 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v79 = v25;
  uint64_t v26 = &v66[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ACDBCBEC(a1, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  sub_1ACA3AAD4((uint64_t)&v26[*(int *)(v24 + 36)], (uint64_t)&v95, &qword_1EB772EA0);
  sub_1ACDBEF70((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  uint64_t v92 = a1;
  uint64_t v93 = v18;
  if (v96)
  {
    sub_1ACA3AABC(&v95, (uint64_t)v97);
  }
  else
  {
    uint64_t v68 = (uint64_t (*)())v4;
    uint64_t v27 = v7;
    if (qword_1EB772EF0 != -1) {
      swift_once();
    }
    uint64_t v28 = __swift_project_value_buffer(v7, (uint64_t)qword_1EB772ED0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, v28, v7);
    int v67 = sub_1ACE76BC8();
    sub_1ACE75108();
    uint64_t v29 = sub_1ACE750C8();
    uint64_t v31 = v30;
    (*(void (**)(unsigned char *, uint64_t (*)()))(v69 + 8))(v6, v68);
    uint64_t v32 = type metadata accessor for LoggerTrace(0);
    v97[3] = v32;
    v97[4] = (uint64_t)&protocol witness table for LoggerTrace;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v97);
    uint64_t *boxed_opaque_existential_1 = v29;
    boxed_opaque_existential_1[1] = v31;
    (*(void (**)(char *, unsigned char *, uint64_t))(v8 + 32))((char *)boxed_opaque_existential_1 + *(int *)(v32 + 20), v10, v27);
    *((unsigned char *)boxed_opaque_existential_1 + *(int *)(v32 + 24)) = v67;
    sub_1ACA50E78((uint64_t)&v95, &qword_1EB772EA0);
    a1 = v92;
  }
  uint64_t v34 = v80;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A878);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 24) = 0;
  *(void *)(v35 + 32) = 0;
  *(void *)(v35 + 16) = 0;
  *(_DWORD *)(v35 + 40) = 0;
  uint64_t v68 = type metadata accessor for ShazamSignatureRequest;
  sub_1ACDBCBEC(a1, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  sub_1ACE759C8();
  uint64_t v69 = sub_1ACE74F28();
  uint64_t v36 = v71;
  uint64_t v37 = v74;
  sub_1ACE759A8();
  (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v14, v37);
  *(void *)&long long v95 = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E000);
  sub_1ACA51EA4(&qword_1EB76E4E8, (uint64_t *)&unk_1EB76E4F0);
  sub_1ACA51EA4(&qword_1EB76DFF8, &qword_1EB76E000);
  uint64_t v38 = v72;
  uint64_t v39 = v77;
  sub_1ACE75B18();
  (*(void (**)(unsigned char *, uint64_t))(v75 + 8))(v36, v39);
  sub_1ACA51EA4(&qword_1EB76D638, &qword_1EB76D640);
  uint64_t v40 = v78;
  sub_1ACE75C18();
  (*(void (**)(unsigned char *, uint64_t))(v76 + 8))(v38, v40);
  sub_1ACDBCBEC(a1, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  sub_1ACA3E158((uint64_t)v97, (uint64_t)&v95);
  uint64_t v41 = *(unsigned __int8 *)(v70 + 80);
  uint64_t v42 = (v41 + 16) & ~v41;
  uint64_t v78 = v41 | 7;
  unint64_t v43 = (v79 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v44 = swift_allocObject();
  sub_1ACDBED20((uint64_t)v26, v44 + v42, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  *(void *)(v44 + v43) = v35;
  unint64_t v45 = v44 + ((v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v45 = "ForegroundNetworkFetch";
  *(void *)(v45 + 8) = 22;
  *(unsigned char *)(v45 + 16) = 2;
  sub_1ACA3AABC(&v95, v44 + ((v43 + 39) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = sub_1ACDBCC6C;
  *(void *)(v46 + 24) = v44;
  uint64_t v80 = v35;
  swift_retain();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A310);
  sub_1ACA51EA4(&qword_1EB76DA20, (uint64_t *)&unk_1EB76DA28);
  sub_1ACA51EA4(&qword_1EB76A308, &qword_1EB76A310);
  long long v47 = v83;
  long long v48 = v93;
  uint64_t v49 = v82;
  sub_1ACE75C78();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v48, v49);
  sub_1ACA3E158((uint64_t)v97, (uint64_t)&v95);
  uint64_t v50 = v92;
  sub_1ACDBCBEC(v92, (uint64_t)v26, (uint64_t (*)(void))v68);
  uint64_t v51 = (v41 + 56) & ~v41;
  uint64_t v52 = swift_allocObject();
  sub_1ACA3AABC(&v95, v52 + 16);
  uint64_t v53 = (uint64_t)v26;
  uint64_t v54 = v69;
  sub_1ACDBED20(v53, v52 + v51, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  sub_1ACA50D4C(0, &qword_1E99F13D0);
  sub_1ACA51EA4(&qword_1EB76A6D8, (uint64_t *)&unk_1EB769478);
  v55 = v87;
  uint64_t v56 = v85;
  sub_1ACE75C28();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v84 + 8))(v47, v56);
  sub_1ACA3E158((uint64_t)v97, (uint64_t)&v95);
  long long v57 = v90;
  sub_1ACA3AAD4(v50, (uint64_t)v90, &qword_1EB7731B0);
  uint64_t v58 = *(void *)(v54 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v58 + 48))(v57, 1, v54) == 1)
  {
    sub_1ACA50E78((uint64_t)v57, &qword_1EB7731B0);
    uint64_t v59 = 0;
    unint64_t v60 = 0;
  }
  else
  {
    uint64_t v59 = sub_1ACE74EC8();
    unint64_t v60 = v61;
    (*(void (**)(unsigned char *, uint64_t))(v58 + 8))(v57, v54);
  }
  uint64_t v63 = v88;
  uint64_t v62 = v89;
  uint64_t v64 = (uint64_t)v86;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v88 + 16))(v86, v55, v89);
  sub_1ACA3AAD4((uint64_t)&v95, (uint64_t)v94, &qword_1EB772EA0);
  sub_1ACDB33E8(v64, (uint64_t)v94, (uint64_t)"ForegroundDownload", 18, 2, 0, v59, v60, v91, 1, &qword_1E99F5BC0, &qword_1E99F5BA8);
  swift_release();
  sub_1ACA50E78((uint64_t)&v95, &qword_1EB772EA0);
  (*(void (**)(unsigned char *, uint64_t))(v63 + 8))(v55, v62);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v97);
}

uint64_t sub_1ACDB73E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v91 = a3;
  uint64_t v4 = (uint64_t (*)(void))sub_1ACE75118();
  uint64_t v69 = *((void *)v4 - 1);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v66[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1ACE754C8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v66[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v90 = &v66[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5BE8);
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v14 = &v66[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E4F0);
  uint64_t v75 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v71 = &v66[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D640);
  uint64_t v76 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  unint64_t v72 = &v66[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76DA28);
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  v18 = &v66[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB769478);
  uint64_t v84 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  uint64_t v83 = &v66[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5BF0);
  uint64_t v88 = *(void *)(v20 - 8);
  uint64_t v89 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v86 = &v66[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v22);
  uint64_t v87 = &v66[-v23];
  uint64_t v24 = type metadata accessor for TTMLRequest();
  uint64_t v70 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v79 = v25;
  uint64_t v26 = &v66[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ACDBCBEC(a1, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  sub_1ACA3AAD4((uint64_t)&v26[*(int *)(v24 + 36)], (uint64_t)&v95, &qword_1EB772EA0);
  sub_1ACDBEF70((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  uint64_t v92 = a1;
  uint64_t v93 = v18;
  if (v96)
  {
    sub_1ACA3AABC(&v95, (uint64_t)v97);
  }
  else
  {
    uint64_t v68 = (uint64_t (*)())v4;
    uint64_t v27 = v7;
    if (qword_1EB772EF0 != -1) {
      swift_once();
    }
    uint64_t v28 = __swift_project_value_buffer(v7, (uint64_t)qword_1EB772ED0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, v28, v7);
    int v67 = sub_1ACE76BC8();
    sub_1ACE75108();
    uint64_t v29 = sub_1ACE750C8();
    uint64_t v31 = v30;
    (*(void (**)(unsigned char *, uint64_t (*)()))(v69 + 8))(v6, v68);
    uint64_t v32 = type metadata accessor for LoggerTrace(0);
    v97[3] = v32;
    v97[4] = (uint64_t)&protocol witness table for LoggerTrace;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v97);
    uint64_t *boxed_opaque_existential_1 = v29;
    boxed_opaque_existential_1[1] = v31;
    (*(void (**)(char *, unsigned char *, uint64_t))(v8 + 32))((char *)boxed_opaque_existential_1 + *(int *)(v32 + 20), v10, v27);
    *((unsigned char *)boxed_opaque_existential_1 + *(int *)(v32 + 24)) = v67;
    sub_1ACA50E78((uint64_t)&v95, &qword_1EB772EA0);
    a1 = v92;
  }
  uint64_t v34 = v80;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A878);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 24) = 0;
  *(void *)(v35 + 32) = 0;
  *(void *)(v35 + 16) = 0;
  *(_DWORD *)(v35 + 40) = 0;
  uint64_t v68 = type metadata accessor for TTMLRequest;
  sub_1ACDBCBEC(a1, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  sub_1ACE759C8();
  uint64_t v69 = sub_1ACE74F28();
  uint64_t v36 = v71;
  uint64_t v37 = v74;
  sub_1ACE759A8();
  (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v14, v37);
  *(void *)&long long v95 = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E000);
  sub_1ACA51EA4(&qword_1EB76E4E8, (uint64_t *)&unk_1EB76E4F0);
  sub_1ACA51EA4(&qword_1EB76DFF8, &qword_1EB76E000);
  uint64_t v38 = v72;
  uint64_t v39 = v77;
  sub_1ACE75B18();
  (*(void (**)(unsigned char *, uint64_t))(v75 + 8))(v36, v39);
  sub_1ACA51EA4(&qword_1EB76D638, &qword_1EB76D640);
  uint64_t v40 = v78;
  sub_1ACE75C18();
  (*(void (**)(unsigned char *, uint64_t))(v76 + 8))(v38, v40);
  sub_1ACDBCBEC(a1, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  sub_1ACA3E158((uint64_t)v97, (uint64_t)&v95);
  uint64_t v41 = *(unsigned __int8 *)(v70 + 80);
  uint64_t v42 = (v41 + 16) & ~v41;
  uint64_t v78 = v41 | 7;
  unint64_t v43 = (v79 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v44 = swift_allocObject();
  sub_1ACDBED20((uint64_t)v26, v44 + v42, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  *(void *)(v44 + v43) = v35;
  unint64_t v45 = v44 + ((v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v45 = "ForegroundNetworkFetch";
  *(void *)(v45 + 8) = 22;
  *(unsigned char *)(v45 + 16) = 2;
  sub_1ACA3AABC(&v95, v44 + ((v43 + 39) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = sub_1ACDBCE7C;
  *(void *)(v46 + 24) = v44;
  uint64_t v80 = v35;
  swift_retain();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A310);
  sub_1ACA51EA4(&qword_1EB76DA20, (uint64_t *)&unk_1EB76DA28);
  sub_1ACA51EA4(&qword_1EB76A308, &qword_1EB76A310);
  long long v47 = v83;
  long long v48 = v93;
  uint64_t v49 = v82;
  sub_1ACE75C78();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v48, v49);
  sub_1ACA3E158((uint64_t)v97, (uint64_t)&v95);
  uint64_t v50 = v92;
  sub_1ACDBCBEC(v92, (uint64_t)v26, (uint64_t (*)(void))v68);
  uint64_t v51 = (v41 + 56) & ~v41;
  uint64_t v52 = swift_allocObject();
  sub_1ACA3AABC(&v95, v52 + 16);
  uint64_t v53 = (uint64_t)v26;
  uint64_t v54 = v69;
  sub_1ACDBED20(v53, v52 + v51, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  sub_1ACA51EA4(&qword_1EB76A6D8, (uint64_t *)&unk_1EB769478);
  v55 = v87;
  uint64_t v56 = v85;
  sub_1ACE75C28();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v84 + 8))(v47, v56);
  sub_1ACA3E158((uint64_t)v97, (uint64_t)&v95);
  long long v57 = v90;
  sub_1ACA3AAD4(v50, (uint64_t)v90, &qword_1EB7731B0);
  uint64_t v58 = *(void *)(v54 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v58 + 48))(v57, 1, v54) == 1)
  {
    sub_1ACA50E78((uint64_t)v57, &qword_1EB7731B0);
    uint64_t v59 = 0;
    unint64_t v60 = 0;
  }
  else
  {
    uint64_t v59 = sub_1ACE74EC8();
    unint64_t v60 = v61;
    (*(void (**)(unsigned char *, uint64_t))(v58 + 8))(v57, v54);
  }
  uint64_t v63 = v88;
  uint64_t v62 = v89;
  uint64_t v64 = (uint64_t)v86;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v88 + 16))(v86, v55, v89);
  sub_1ACA3AAD4((uint64_t)&v95, (uint64_t)v94, &qword_1EB772EA0);
  sub_1ACDB33E8(v64, (uint64_t)v94, (uint64_t)"ForegroundDownload", 18, 2, 0, v59, v60, v91, 1, &qword_1E99F5BF0, &qword_1E99F5BD8);
  swift_release();
  sub_1ACA50E78((uint64_t)&v95, &qword_1EB772EA0);
  (*(void (**)(unsigned char *, uint64_t))(v63 + 8))(v55, v62);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v97);
}

uint64_t sub_1ACDB8140@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  ArtworkRequest.remoteUrl.getter();
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  }
  sub_1ACA50E78((uint64_t)v4, &qword_1EB7731B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5D68);
  sub_1ACA51EA4(&qword_1E99F5D70, &qword_1E99F5D68);
  swift_allocError();
  *uint64_t v7 = 0;
  return swift_willThrow();
}

uint64_t sub_1ACDB82BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACDB830C(a1, &qword_1E99F5BC8, &qword_1E99F5BD0, a2);
}

uint64_t sub_1ACDB82E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACDB830C(a1, &qword_1E99F5BF8, &qword_1E99F5C00, a2);
}

uint64_t sub_1ACDB830C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA3AAD4(a1, (uint64_t)v10, &qword_1EB7731B0);
  uint64_t v11 = sub_1ACE74F28();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a4, v10, v11);
  }
  sub_1ACA50E78((uint64_t)v10, &qword_1EB7731B0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1ACA51EA4(a3, a2);
  swift_allocError();
  *uint64_t v13 = 0;
  return swift_willThrow();
}

uint64_t sub_1ACDB8498@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v80 = a8;
  int v68 = a7;
  uint64_t v66 = a5;
  uint64_t v67 = a6;
  uint64_t v65 = a4;
  uint64_t v70 = a3;
  uint64_t v78 = a9;
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A310);
  MEMORY[0x1F4188790](v77);
  uint64_t v76 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1ACE74F28();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A770);
  uint64_t v71 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v64 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A678);
  uint64_t v74 = *(void *)(v18 - 8);
  uint64_t v75 = v18;
  MEMORY[0x1F4188790](v18);
  unint64_t v72 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v21 = MEMORY[0x1F4188790](v20);
  uint64_t v79 = (char *)&v63 - v22;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16);
  uint64_t v73 = a1;
  v23(v16, a1, v13, v21);
  sub_1ACA69E2C(a3, (uint64_t)v85);
  unint64_t v24 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v25 = (v15 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v26 + v24, v16, v13);
  *(void *)(v26 + v25) = a2;
  uint64_t v27 = (_OWORD *)(v26 + ((v25 + 15) & 0xFFFFFFFFFFFFFFF8));
  long long v28 = v85[3];
  v27[2] = v85[2];
  v27[3] = v28;
  long long v29 = v85[1];
  _OWORD *v27 = v85[0];
  v27[1] = v29;
  long long v30 = v85[5];
  long long v31 = v85[7];
  long long v32 = v85[8];
  v27[6] = v85[6];
  v27[7] = v31;
  v27[4] = v85[4];
  v27[5] = v30;
  long long v33 = v85[9];
  long long v34 = v85[11];
  long long v35 = v85[12];
  v27[10] = v85[10];
  v27[11] = v34;
  v27[8] = v32;
  v27[9] = v33;
  long long v36 = v85[15];
  long long v37 = v85[13];
  v27[14] = v85[14];
  v27[15] = v36;
  v27[12] = v35;
  v27[13] = v37;
  id v38 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A670);
  sub_1ACA51EA4(&qword_1EB76A668, &qword_1EB76A670);
  uint64_t v39 = v64;
  sub_1ACE75A38();
  sub_1ACA3E158(v80, (uint64_t)v85);
  uint64_t v40 = swift_allocObject();
  uint64_t v41 = v65;
  uint64_t v42 = v66;
  *(void *)(v40 + 16) = v65;
  *(void *)(v40 + 24) = v42;
  uint64_t v43 = v67;
  *(void *)(v40 + 32) = v67;
  LOBYTE(v14) = v68;
  *(unsigned char *)(v40 + 40) = v68;
  sub_1ACA3AABC(v85, v40 + 48);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v41;
  *(void *)(v44 + 24) = v42;
  *(void *)(v44 + 32) = v43;
  *(unsigned char *)(v44 + 40) = v14;
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = v41;
  *(void *)(v45 + 24) = v42;
  *(void *)(v45 + 32) = v43;
  *(unsigned char *)(v45 + 40) = v14;
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v41;
  *(void *)(v46 + 24) = v42;
  *(void *)(v46 + 32) = v43;
  *(unsigned char *)(v46 + 40) = v14;
  sub_1ACA51EA4(&qword_1EB76A768, &qword_1EB76A770);
  swift_retain_n();
  uint64_t v47 = v69;
  long long v48 = v79;
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v39, v47);
  sub_1ACA3E158(v80, (uint64_t)v85);
  uint64_t v83 = 0;
  unint64_t v84 = 0xE000000000000000;
  sub_1ACE77268();
  swift_bridgeObjectRelease();
  uint64_t v83 = 60;
  unint64_t v84 = 0xE100000000000000;
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  sub_1ACE74DF8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v49 = v83;
  unint64_t v50 = v84;
  uint64_t v52 = v74;
  uint64_t v51 = v75;
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  uint64_t v54 = v72;
  v53(v72, v48, v75);
  sub_1ACA3AAD4((uint64_t)v85, (uint64_t)&v83, &qword_1EB772EA0);
  uint64_t v55 = (uint64_t)v76;
  v53(v76, v54, v51);
  uint64_t v56 = (int *)v77;
  sub_1ACA3AAD4((uint64_t)&v83, v55 + *(int *)(v77 + 36), &qword_1EB772EA0);
  uint64_t v57 = v55 + v56[10];
  *(void *)uint64_t v57 = "DOWNLOAD";
  *(void *)(v57 + 8) = 8;
  *(unsigned char *)(v57 + 16) = 2;
  *(unsigned char *)(v55 + v56[12]) = 0;
  uint64_t v81 = v49;
  unint64_t v82 = v50;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v58 = v81;
  unint64_t v59 = v82;
  sub_1ACA50E78((uint64_t)&v83, &qword_1EB772EA0);
  unint64_t v60 = *(void (**)(char *, uint64_t))(v52 + 8);
  v60(v54, v51);
  unint64_t v61 = (uint64_t *)(v55 + v56[11]);
  *unint64_t v61 = v58;
  v61[1] = v59;
  *(unsigned char *)(v55 + v56[13]) = 0;
  sub_1ACA50E14(v55, v78, &qword_1EB76A310);
  sub_1ACA50E78((uint64_t)v85, &qword_1EB772EA0);
  return ((uint64_t (*)(char *, uint64_t))v60)(v79, v51);
}

uint64_t sub_1ACDB8C48@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v59 = a8;
  int v64 = a7;
  uint64_t v63 = a6;
  uint64_t v62 = a5;
  uint64_t v61 = a4;
  uint64_t v65 = a3;
  uint64_t v58 = a2;
  uint64_t v74 = a9;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A310);
  MEMORY[0x1F4188790](v73);
  unint64_t v72 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ShazamSignatureRequest();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v67 = v12 - 8;
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = sub_1ACE74F28();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A770);
  uint64_t v66 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v57 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A678);
  uint64_t v70 = *(void *)(v20 - 8);
  uint64_t v71 = v20;
  MEMORY[0x1F4188790](v20);
  int v68 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v23 = MEMORY[0x1F4188790](v22);
  uint64_t v75 = (char *)&v57 - v24;
  unint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16);
  uint64_t v69 = a1;
  v25(v18, a1, v15, v23);
  sub_1ACDBCBEC(a3, (uint64_t)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  unint64_t v26 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v27 = (v17 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (*(unsigned __int8 *)(v13 + 80) + v27 + 8) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v29 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v29 + v26, v18, v15);
  long long v30 = v58;
  *(void *)(v29 + v27) = v58;
  sub_1ACDBED20((uint64_t)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v29 + v28, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  id v31 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A670);
  sub_1ACA51EA4(&qword_1EB76A668, &qword_1EB76A670);
  long long v32 = v57;
  sub_1ACE75A38();
  uint64_t v33 = v59;
  sub_1ACA3E158(v59, (uint64_t)v80);
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = v61;
  uint64_t v36 = v62;
  *(void *)(v34 + 16) = v61;
  *(void *)(v34 + 24) = v36;
  uint64_t v37 = v63;
  *(void *)(v34 + 32) = v63;
  LOBYTE(v18) = v64;
  *(unsigned char *)(v34 + 40) = v64;
  sub_1ACA3AABC(v80, v34 + 48);
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v35;
  *(void *)(v38 + 24) = v36;
  *(void *)(v38 + 32) = v37;
  *(unsigned char *)(v38 + 40) = (_BYTE)v18;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v35;
  *(void *)(v39 + 24) = v36;
  *(void *)(v39 + 32) = v37;
  *(unsigned char *)(v39 + 40) = (_BYTE)v18;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v35;
  *(void *)(v40 + 24) = v36;
  *(void *)(v40 + 32) = v37;
  *(unsigned char *)(v40 + 40) = (_BYTE)v18;
  sub_1ACA51EA4(&qword_1EB76A768, &qword_1EB76A770);
  swift_retain_n();
  uint64_t v41 = v60;
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v32, v41);
  sub_1ACA3E158(v33, (uint64_t)v80);
  uint64_t v78 = 0;
  unint64_t v79 = 0xE000000000000000;
  sub_1ACE77268();
  swift_bridgeObjectRelease();
  uint64_t v78 = 60;
  unint64_t v79 = 0xE100000000000000;
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  sub_1ACE74DF8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v42 = v78;
  unint64_t v43 = v79;
  uint64_t v45 = v70;
  uint64_t v44 = v71;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
  uint64_t v47 = v68;
  long long v48 = v75;
  v46(v68, v75, v71);
  sub_1ACA3AAD4((uint64_t)v80, (uint64_t)&v78, &qword_1EB772EA0);
  uint64_t v49 = (uint64_t)v72;
  v46(v72, v47, v44);
  unint64_t v50 = (int *)v73;
  sub_1ACA3AAD4((uint64_t)&v78, v49 + *(int *)(v73 + 36), &qword_1EB772EA0);
  uint64_t v51 = v49 + v50[10];
  *(void *)uint64_t v51 = "DOWNLOAD";
  *(void *)(v51 + 8) = 8;
  *(unsigned char *)(v51 + 16) = 2;
  *(unsigned char *)(v49 + v50[12]) = 0;
  uint64_t v76 = v42;
  unint64_t v77 = v43;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v52 = v76;
  unint64_t v53 = v77;
  sub_1ACA50E78((uint64_t)&v78, &qword_1EB772EA0);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v45 + 8);
  v54(v47, v44);
  uint64_t v55 = (uint64_t *)(v49 + v50[11]);
  uint64_t *v55 = v52;
  v55[1] = v53;
  *(unsigned char *)(v49 + v50[13]) = 0;
  sub_1ACA50E14(v49, v74, &qword_1EB76A310);
  sub_1ACA50E78((uint64_t)v80, &qword_1EB772EA0);
  return ((uint64_t (*)(char *, uint64_t))v54)(v48, v44);
}

uint64_t sub_1ACDB94C0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v59 = a8;
  int v64 = a7;
  uint64_t v63 = a6;
  uint64_t v62 = a5;
  uint64_t v61 = a4;
  uint64_t v65 = a3;
  uint64_t v58 = a2;
  uint64_t v74 = a9;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A310);
  MEMORY[0x1F4188790](v73);
  unint64_t v72 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTMLRequest();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v67 = v12 - 8;
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = sub_1ACE74F28();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A770);
  uint64_t v66 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v57 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A678);
  uint64_t v70 = *(void *)(v20 - 8);
  uint64_t v71 = v20;
  MEMORY[0x1F4188790](v20);
  int v68 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v23 = MEMORY[0x1F4188790](v22);
  uint64_t v75 = (char *)&v57 - v24;
  unint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16);
  uint64_t v69 = a1;
  v25(v18, a1, v15, v23);
  sub_1ACDBCBEC(a3, (uint64_t)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  unint64_t v26 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v27 = (v17 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (*(unsigned __int8 *)(v13 + 80) + v27 + 8) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v29 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v29 + v26, v18, v15);
  long long v30 = v58;
  *(void *)(v29 + v27) = v58;
  sub_1ACDBED20((uint64_t)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v29 + v28, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  id v31 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A670);
  sub_1ACA51EA4(&qword_1EB76A668, &qword_1EB76A670);
  long long v32 = v57;
  sub_1ACE75A38();
  uint64_t v33 = v59;
  sub_1ACA3E158(v59, (uint64_t)v80);
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = v61;
  uint64_t v36 = v62;
  *(void *)(v34 + 16) = v61;
  *(void *)(v34 + 24) = v36;
  uint64_t v37 = v63;
  *(void *)(v34 + 32) = v63;
  LOBYTE(v18) = v64;
  *(unsigned char *)(v34 + 40) = v64;
  sub_1ACA3AABC(v80, v34 + 48);
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v35;
  *(void *)(v38 + 24) = v36;
  *(void *)(v38 + 32) = v37;
  *(unsigned char *)(v38 + 40) = (_BYTE)v18;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v35;
  *(void *)(v39 + 24) = v36;
  *(void *)(v39 + 32) = v37;
  *(unsigned char *)(v39 + 40) = (_BYTE)v18;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v35;
  *(void *)(v40 + 24) = v36;
  *(void *)(v40 + 32) = v37;
  *(unsigned char *)(v40 + 40) = (_BYTE)v18;
  sub_1ACA51EA4(&qword_1EB76A768, &qword_1EB76A770);
  swift_retain_n();
  uint64_t v41 = v60;
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v32, v41);
  sub_1ACA3E158(v33, (uint64_t)v80);
  uint64_t v78 = 0;
  unint64_t v79 = 0xE000000000000000;
  sub_1ACE77268();
  swift_bridgeObjectRelease();
  uint64_t v78 = 60;
  unint64_t v79 = 0xE100000000000000;
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  sub_1ACE74DF8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v42 = v78;
  unint64_t v43 = v79;
  uint64_t v45 = v70;
  uint64_t v44 = v71;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
  uint64_t v47 = v68;
  long long v48 = v75;
  v46(v68, v75, v71);
  sub_1ACA3AAD4((uint64_t)v80, (uint64_t)&v78, &qword_1EB772EA0);
  uint64_t v49 = (uint64_t)v72;
  v46(v72, v47, v44);
  unint64_t v50 = (int *)v73;
  sub_1ACA3AAD4((uint64_t)&v78, v49 + *(int *)(v73 + 36), &qword_1EB772EA0);
  uint64_t v51 = v49 + v50[10];
  *(void *)uint64_t v51 = "DOWNLOAD";
  *(void *)(v51 + 8) = 8;
  *(unsigned char *)(v51 + 16) = 2;
  *(unsigned char *)(v49 + v50[12]) = 0;
  uint64_t v76 = v42;
  unint64_t v77 = v43;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v52 = v76;
  unint64_t v53 = v77;
  sub_1ACA50E78((uint64_t)&v78, &qword_1EB772EA0);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v45 + 8);
  v54(v47, v44);
  uint64_t v55 = (uint64_t *)(v49 + v50[11]);
  uint64_t *v55 = v52;
  v55[1] = v53;
  *(unsigned char *)(v49 + v50[13]) = 0;
  sub_1ACA50E14(v49, v74, &qword_1EB76A310);
  sub_1ACA50E78((uint64_t)v80, &qword_1EB772EA0);
  return ((uint64_t (*)(char *, uint64_t))v54)(v48, v44);
}

uint64_t sub_1ACDB9D38@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v28 = a2;
  uint64_t v29 = a4;
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_1ACA69E2C(a3, (uint64_t)v30);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v12 = (v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v11, v9, v6);
  uint64_t v15 = v28;
  *(void *)(v14 + v12) = v28;
  uint64_t v16 = (_OWORD *)(v14 + v13);
  long long v17 = v30[3];
  v16[2] = v30[2];
  v16[3] = v17;
  long long v18 = v30[1];
  _OWORD *v16 = v30[0];
  v16[1] = v18;
  long long v19 = v30[7];
  v16[6] = v30[6];
  v16[7] = v19;
  long long v20 = v30[5];
  v16[4] = v30[4];
  v16[5] = v20;
  long long v21 = v30[11];
  v16[10] = v30[10];
  v16[11] = v21;
  long long v22 = v30[9];
  v16[8] = v30[8];
  v16[9] = v22;
  long long v23 = v30[15];
  v16[14] = v30[14];
  v16[15] = v23;
  long long v24 = v30[13];
  v16[12] = v30[12];
  v16[13] = v24;
  *(void *)(v14 + ((v13 + 263) & 0xFFFFFFFFFFFFFFF8)) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DF30);
  swift_allocObject();
  id v25 = v15;
  swift_retain();
  *(void *)&v30[0] = sub_1ACE75A18();
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DF20, &qword_1EB76DF30);
  swift_retain();
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ACDBA004@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  long long v22 = a2;
  uint64_t v23 = a4;
  uint64_t v6 = type metadata accessor for ShazamSignatureRequest();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = sub_1ACE74F28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  sub_1ACDBCBEC(a3, (uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v15 = (v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + v15 + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v14, v12, v9);
  long long v18 = v22;
  *(void *)(v17 + v15) = v22;
  sub_1ACDBED20((uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  *(void *)(v17 + ((v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DF30);
  swift_allocObject();
  id v19 = v18;
  swift_retain();
  uint64_t v24 = sub_1ACE75A18();
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DF20, &qword_1EB76DF30);
  swift_retain();
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ACDBA318@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  long long v22 = a2;
  uint64_t v23 = a4;
  uint64_t v6 = type metadata accessor for TTMLRequest();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = sub_1ACE74F28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  sub_1ACDBCBEC(a3, (uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v15 = (v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + v15 + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v14, v12, v9);
  long long v18 = v22;
  *(void *)(v17 + v15) = v22;
  sub_1ACDBED20((uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  *(void *)(v17 + ((v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DF30);
  swift_allocObject();
  id v19 = v18;
  swift_retain();
  uint64_t v24 = sub_1ACE75A18();
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DF20, &qword_1EB76DF30);
  swift_retain();
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1ACDBA62C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = a5;
  id v25 = a4;
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1ACE74898();
  uint64_t v14 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  unint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  swift_retain();
  sub_1ACE74848();
  long long v18 = (void *)sub_1ACE74818();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1ACDC1DA4;
  *(void *)(v19 + 24) = v17;
  aBlock[4] = sub_1ACDC0600;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACE23904;
  aBlock[3] = &block_descriptor_306;
  long long v20 = _Block_copy(aBlock);
  swift_release();
  id v21 = objc_msgSend(v25, sel_dataTaskWithRequest_completionHandler_, v18, v20);
  _Block_release(v20);

  *(float *)&double v22 = flt_1ACE852C0[*(char *)(v27 + 203)];
  objc_msgSend(v21, sel_setPriority_, v22);
  objc_msgSend(v21, sel_resume);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v26);
  swift_beginAccess();
  uint64_t v23 = *(void **)(a6 + 16);
  *(void *)(a6 + 16) = v21;
}

void sub_1ACDBA90C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = a5;
  id v25 = a4;
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1ACE74898();
  uint64_t v14 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  unint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  swift_retain();
  sub_1ACE74848();
  long long v18 = (void *)sub_1ACE74818();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1ACCE7EC8;
  *(void *)(v19 + 24) = v17;
  aBlock[4] = sub_1ACDBCE38;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACE23904;
  aBlock[3] = &block_descriptor_77;
  long long v20 = _Block_copy(aBlock);
  swift_release();
  id v21 = objc_msgSend(v25, sel_dataTaskWithRequest_completionHandler_, v18, v20);
  _Block_release(v20);

  *(float *)&double v22 = flt_1ACE852C0[*(char *)(v27 + *(int *)(type metadata accessor for ShazamSignatureRequest() + 20))];
  objc_msgSend(v21, sel_setPriority_, v22);
  objc_msgSend(v21, sel_resume);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v26);
  swift_beginAccess();
  uint64_t v23 = *(void **)(a6 + 16);
  *(void *)(a6 + 16) = v21;
}

void sub_1ACDBABF8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = a5;
  id v25 = a4;
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1ACE74898();
  uint64_t v14 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  unint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  swift_retain();
  sub_1ACE74848();
  long long v18 = (void *)sub_1ACE74818();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1ACDC1DA4;
  *(void *)(v19 + 24) = v17;
  aBlock[4] = sub_1ACDBD4C0;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACE23904;
  aBlock[3] = &block_descriptor_78;
  long long v20 = _Block_copy(aBlock);
  swift_release();
  id v21 = objc_msgSend(v25, sel_dataTaskWithRequest_completionHandler_, v18, v20);
  _Block_release(v20);

  *(float *)&double v22 = flt_1ACE852C0[*(char *)(v27 + *(int *)(type metadata accessor for TTMLRequest() + 20))];
  objc_msgSend(v21, sel_setPriority_, v22);
  objc_msgSend(v21, sel_resume);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v26);
  swift_beginAccess();
  uint64_t v23 = *(void **)(a6 + 16);
  *(void *)(a6 + 16) = v21;
}

void sub_1ACDBAEE4(uint64_t a1, unint64_t a2, int a3, id a4, void (*a5)(id, unint64_t, uint64_t), uint64_t a6, uint64_t *a7, unint64_t *a8)
{
  if (a2 >> 60 == 15)
  {
    if (a4)
    {
      id v10 = a4;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(a7);
      sub_1ACA51EA4(a8, a7);
      id v10 = (id)swift_allocError();
      *uint64_t v15 = 1;
    }
    id v16 = a4;
    a5(v10, 0, 1);
  }
  else
  {
    sub_1ACA3985C(a1, a2);
    a5((id)a1, a2, 0);
    sub_1ACAB2EF0(a1, a2);
  }
}

double sub_1ACDBB010@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = a3[3];
  uint64_t v10 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v9);
  Trace.emit(event:)((uint64_t)"DECODE", 6, 2, v9, v10);
  TranscriptParser.parse(ttmlData:)(a1, a2, (uint64_t)&v17);
  if (v4)
  {
    uint64_t v11 = a3[3];
    uint64_t v12 = a3[4];
    __swift_project_boxed_opaque_existential_1(a3, v11);
    Trace.emit(event:)((uint64_t)"DECODE-FAILED", 13, 2, v11, v12);
    swift_willThrow();
  }
  else
  {
    uint64_t v14 = a3[3];
    uint64_t v15 = a3[4];
    __swift_project_boxed_opaque_existential_1(a3, v14);
    Trace.emit(event:)((uint64_t)"DECODED", 7, 2, v14, v15);
    char v16 = v18;
    *(_OWORD *)a4 = v17;
    *(unsigned char *)(a4 + 16) = v16;
    *(_OWORD *)(a4 + 24) = v19;
    double result = v20[0];
    *(_OWORD *)(a4 + 40) = *(_OWORD *)v20;
  }
  return result;
}

uint64_t sub_1ACDBB148(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v6 = sub_1ACA3828C(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5D80);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 40) = 0;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = 0;
  *(void *)(v7 + 32) = v6;
  *(void *)(v3 + 16) = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB772738);
  uint64_t v8 = swift_allocObject();
  *(void *)(v3 + 24) = v8;
  *(_DWORD *)(v8 + 24) = 0;
  uint64_t v9 = (os_unfair_lock_s *)(v8 + 24);
  *(void *)(v8 + 16) = 0;
  uint64_t v10 = (uint64_t *)(v8 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v8 + 24));
  sub_1ACDC062C(v10);
  os_unfair_lock_unlock(v9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a2, v11);
  return v3;
}

uint64_t sub_1ACDBB250(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v6 = sub_1ACA3828C(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5D80);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 40) = 0;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = 0;
  *(void *)(v7 + 32) = v6;
  *(void *)(v3 + 16) = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB772738);
  uint64_t v8 = swift_allocObject();
  *(void *)(v3 + 24) = v8;
  *(_DWORD *)(v8 + 24) = 0;
  uint64_t v9 = (os_unfair_lock_s *)(v8 + 24);
  *(void *)(v8 + 16) = 0;
  uint64_t v10 = (uint64_t *)(v8 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v8 + 24));
  sub_1ACDC0664(v10);
  os_unfair_lock_unlock(v9);
  uint64_t v11 = sub_1ACE76E78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a2, v11);
  return v3;
}

uint64_t sub_1ACDBB354(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v6 = sub_1ACA38398(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770750);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 40) = 0;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = 0;
  *(void *)(v7 + 32) = v6;
  *(void *)(v3 + 16) = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB772738);
  uint64_t v8 = swift_allocObject();
  *(void *)(v3 + 24) = v8;
  *(_DWORD *)(v8 + 24) = 0;
  uint64_t v9 = (os_unfair_lock_s *)(v8 + 24);
  *(void *)(v8 + 16) = 0;
  uint64_t v10 = (uint64_t *)(v8 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v8 + 24));
  sub_1ACDBFE9C(v10);
  os_unfair_lock_unlock(v9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a2, v11);
  return v3;
}

uint64_t sub_1ACDBB45C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v6 = sub_1ACA38398(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770750);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 40) = 0;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = 0;
  *(void *)(v7 + 32) = v6;
  *(void *)(v3 + 16) = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB772738);
  uint64_t v8 = swift_allocObject();
  *(void *)(v3 + 24) = v8;
  *(_DWORD *)(v8 + 24) = 0;
  uint64_t v9 = (os_unfair_lock_s *)(v8 + 24);
  *(void *)(v8 + 16) = 0;
  uint64_t v10 = (uint64_t *)(v8 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v8 + 24));
  sub_1ACDBFED4(v10);
  os_unfair_lock_unlock(v9);
  uint64_t v11 = sub_1ACE76E78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a2, v11);
  return v3;
}

uint64_t sub_1ACDBB560(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v6 = sub_1ACA383A4(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770738);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 40) = 0;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = 0;
  *(void *)(v7 + 32) = v6;
  *(void *)(v3 + 16) = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB772738);
  uint64_t v8 = swift_allocObject();
  *(void *)(v3 + 24) = v8;
  *(_DWORD *)(v8 + 24) = 0;
  uint64_t v9 = (os_unfair_lock_s *)(v8 + 24);
  *(void *)(v8 + 16) = 0;
  uint64_t v10 = (uint64_t *)(v8 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v8 + 24));
  sub_1ACDBFF14(v10);
  os_unfair_lock_unlock(v9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a2, v11);
  return v3;
}

uint64_t sub_1ACDBB668(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v6 = sub_1ACA383A4(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770738);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 40) = 0;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = 0;
  *(void *)(v7 + 32) = v6;
  *(void *)(v3 + 16) = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB772738);
  uint64_t v8 = swift_allocObject();
  *(void *)(v3 + 24) = v8;
  *(_DWORD *)(v8 + 24) = 0;
  uint64_t v9 = (os_unfair_lock_s *)(v8 + 24);
  *(void *)(v8 + 16) = 0;
  uint64_t v10 = (uint64_t *)(v8 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v8 + 24));
  sub_1ACDBFF4C(v10);
  os_unfair_lock_unlock(v9);
  uint64_t v11 = sub_1ACE76E78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a2, v11);
  return v3;
}

uint64_t sub_1ACDBB76C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v6 = sub_1ACA383B0(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770748);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 40) = 0;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = 0;
  *(void *)(v7 + 32) = v6;
  *(void *)(v3 + 16) = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB772738);
  uint64_t v8 = swift_allocObject();
  *(void *)(v3 + 24) = v8;
  *(_DWORD *)(v8 + 24) = 0;
  uint64_t v9 = (os_unfair_lock_s *)(v8 + 24);
  *(void *)(v8 + 16) = 0;
  uint64_t v10 = (uint64_t *)(v8 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v8 + 24));
  sub_1ACDBDEBC(v10);
  os_unfair_lock_unlock(v9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a2, v11);
  return v3;
}

uint64_t sub_1ACDBB874(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v6 = sub_1ACA383BC(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770740);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 40) = 0;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = 0;
  *(void *)(v7 + 32) = v6;
  *(void *)(v3 + 16) = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB772738);
  uint64_t v8 = swift_allocObject();
  *(void *)(v3 + 24) = v8;
  *(_DWORD *)(v8 + 24) = 0;
  uint64_t v9 = (os_unfair_lock_s *)(v8 + 24);
  *(void *)(v8 + 16) = 0;
  uint64_t v10 = (uint64_t *)(v8 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v8 + 24));
  sub_1ACDBF7B8(v10);
  os_unfair_lock_unlock(v9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a2, v11);
  return v3;
}

uint64_t sub_1ACDBB97C(uint64_t *a1)
{
  swift_release();
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEF0);
  sub_1ACA51EA4(&qword_1EB76DEE8, &qword_1EB76DEF0);
  uint64_t v2 = sub_1ACE75D58();
  uint64_t result = swift_release_n();
  *a1 = v2;
  return result;
}

uint64_t sub_1ACDBBA60(uint64_t *a1)
{
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1ACE76E78();
  sub_1ACDBD8E8((unint64_t *)&qword_1EB768EF8, MEMORY[0x1E4F27FC8]);
  swift_retain();
  uint64_t v2 = sub_1ACE75D58();
  uint64_t result = swift_release_n();
  *a1 = v2;
  return result;
}

uint64_t sub_1ACDBBB48()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(os_unfair_lock_s **)(result + 16);
    uint64_t v2 = (uint64_t)&v1[4];
    uint64_t v3 = v1 + 10;
    os_unfair_lock_lock(v1 + 10);
    sub_1ACDBE194(v2);
    os_unfair_lock_unlock(v3);
    return swift_release();
  }
  return result;
}

id sub_1ACDBBBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ShazamSignatureRequest();
  uint64_t v9 = *(void *)(a1 + 16);
  if (!*(void *)(v9 + 16)) {
    return 0;
  }
  uint64_t v10 = (uint64_t *)(a2 + *(int *)(v8 + 24));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1ACA657FC(v11, v12);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v15 = *(id **)(*(void *)(v9 + 56) + 8 * v13);
  swift_retain();
  swift_bridgeObjectRelease();
  sub_1ACE75088();
  char v16 = (char *)v15 + *((void *)*v15 + 17);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(v16, v7, v4);
  swift_endAccess();
  id v17 = v15[2];
  swift_release();
  return v17;
}

uint64_t sub_1ACDBBD60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = type metadata accessor for TTMLRequest();
  uint64_t v11 = *(void *)(a1 + 16);
  if (*(void *)(v11 + 16))
  {
    uint64_t v12 = (uint64_t *)(a2 + *(int *)(result + 24));
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1ACA657FC(v13, v14);
    if (v16)
    {
      uint64_t v17 = *(void *)(*(void *)(v11 + 56) + 8 * v15);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1ACE75088();
      uint64_t v18 = v17 + *(void *)(*(void *)v17 + 136);
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v18, v9, v6);
      swift_endAccess();
      char v19 = *(unsigned char *)(v17 + 32);
      uint64_t v20 = *(void *)(v17 + 40);
      unint64_t v21 = *(void *)(v17 + 48);
      uint64_t v22 = *(void *)(v17 + 56);
      uint64_t v23 = *(void *)(v17 + 64);
      *(_OWORD *)a3 = *(_OWORD *)(v17 + 16);
      *(unsigned char *)(a3 + 16) = v19;
      *(void *)(a3 + 24) = v20;
      *(void *)(a3 + 32) = v21;
      *(void *)(a3 + 40) = v22;
      *(void *)(a3 + 48) = v23;
      sub_1ACA3985C(v20, v21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return swift_release();
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  *(void *)(a3 + 48) = 0;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  return result;
}

uint64_t sub_1ACDBBF28@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v7);
  Trace.emit(event:)((uint64_t)"DECODE", 6, 2, v7, v8);
  *a3 = v5;
  a3[1] = v6;
  type metadata accessor for ArtworkContent();
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v9);
  sub_1ACA3985C(v5, v6);
  return Trace.emit(event:)((uint64_t)"DECODED", 7, 2, v9, v10);
}

uint64_t sub_1ACDBC000@<X0>(void *a1@<X8>)
{
  swift_retain();
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1ACDBC074(uint64_t a1, void *a2, uint64_t *a3, void (*a4)(uint64_t, void, void, __n128), unint64_t *a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4(a1, *a2, a2[1], v12);
  sub_1ACA51EA4(a5, a3);
  uint64_t v15 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v15;
}

void sub_1ACDBC19C(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 10;
  os_unfair_lock_lock(v3 + 10);
  sub_1ACDBF83C(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

uint64_t sub_1ACDBC20C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*(void *)a2 + 16);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 10;
  os_unfair_lock_lock(v2 + 10);
  sub_1ACDBF80C(v3, &v6);
  os_unfair_lock_unlock(v4);
  return v6;
}

void sub_1ACDBC274(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a2 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 10;
  os_unfair_lock_lock(v3 + 10);
  sub_1ACDBF7F0(v4);
  os_unfair_lock_unlock(v5);
  if (v2) {
    __break(1u);
  }
}

void sub_1ACDBC2F0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a1 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 10;
  os_unfair_lock_lock(v3 + 10);
  sub_1ACDBF8A0(v4, a2);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1ACDBC358(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*(void *)a2 + 16);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 10;
  os_unfair_lock_lock(v2 + 10);
  sub_1ACDBF870(v3, &v6);
  os_unfair_lock_unlock(v4);
  return v6;
}

void sub_1ACDBC3C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)a2 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 10;
  os_unfair_lock_lock(v3 + 10);
  sub_1ACDBF854(v4);
  os_unfair_lock_unlock(v5);
  if (v2) {
    __break(1u);
  }
}

uint64_t sub_1ACDBC43C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t result = a3(0);
  if (*(void *)(v6 + 16))
  {
    uint64_t v8 = (uint64_t *)(a2 + *(int *)(result + 24));
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1ACA657FC(v9, v10);
    char v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = 0;
  }
  *a4 = v12 & 1;
  return result;
}

uint64_t sub_1ACDBC4E0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v4[0] = *(_OWORD *)a1;
  v4[1] = v2;
  v4[2] = *(_OWORD *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  return sub_1ACDC6BC4((uint64_t)v4, a2);
}

id sub_1ACDBC51C(uint64_t a1, void *a2, void (*a3)(uint64_t, __n128))
{
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(*a2 + qword_1EB7859C8, v7);
  id v10 = objc_msgSend(self, sel_defaultManager);
  sub_1ACE74EC8();
  char v11 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v10, sel_fileExistsAtPath_, v11);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v12;
}

unint64_t sub_1ACDBC670(uint64_t a1)
{
  return (unint64_t)sub_1ACDBC51C(a1, &v2, (void (*)(uint64_t, __n128))sub_1ACDC8478) & 1;
}

uint64_t sub_1ACDBC6B0(uint64_t a1)
{
  return sub_1ACDAAB08(a1, (uint64_t (*)(void))type metadata accessor for TTMLRequest, (void (*)(uint64_t, __n128))sub_1ACDC8478, (uint64_t (*)(void))type metadata accessor for TTMLRequest, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
}

id sub_1ACDBC718@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = sub_1ACDA9528(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1ACDBC740(void **a1, uint64_t a2)
{
  return sub_1ACDC7114(*a1, a2);
}

unint64_t sub_1ACDBC748(uint64_t a1)
{
  return (unint64_t)sub_1ACDBC51C(a1, &v2, (void (*)(uint64_t, __n128))sub_1ACDC8490) & 1;
}

uint64_t sub_1ACDBC788(uint64_t a1)
{
  return sub_1ACDAAB08(a1, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, (void (*)(uint64_t, __n128))sub_1ACDC8490, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
}

void sub_1ACDBC7F0(uint64_t a1@<X8>)
{
  sub_1ACDBC2F0((uint64_t)&v1, a1);
}

uint64_t sub_1ACDBC818(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v4[0] = *(_OWORD *)a1;
  v4[1] = v2;
  v4[2] = *(_OWORD *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  return sub_1ACDC878C((uint64_t)v4, a2);
}

uint64_t sub_1ACDBC854(uint64_t a1)
{
  return sub_1ACDBC358(a1, (uint64_t)&v2) & 1;
}

void sub_1ACDBC880(uint64_t a1)
{
  sub_1ACDBC3C0(a1, (uint64_t)&v1);
}

void sub_1ACDBC8A8(void *a1@<X8>)
{
  sub_1ACDBC19C((uint64_t)&v1, a1);
}

uint64_t sub_1ACDBC8D0(void **a1, uint64_t a2)
{
  return sub_1ACDC8920(*a1, a2);
}

uint64_t sub_1ACDBC8D8(uint64_t a1)
{
  return sub_1ACDBC20C(a1, (uint64_t)&v2) & 1;
}

void sub_1ACDBC904(uint64_t a1)
{
  sub_1ACDBC274(a1, (uint64_t)&v1);
}

uint64_t _s11DownloadersVMa(uint64_t a1)
{
  return sub_1ACA31990(a1, qword_1EB76FCB0);
}

uint64_t sub_1ACDBC94C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v8);
  Trace.emit(event:)((uint64_t)"DECODE", 6, 2, v8, v9);
  id v10 = ShazamSignatureRequest.decode(_:)(v6, v7);
  if (v3)
  {
    uint64_t v11 = a2[3];
    uint64_t v12 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v11);
    Trace.emit(event:)((uint64_t)"DECODE-FAILED", 13, 2, v11, v12);
    return swift_willThrow();
  }
  else
  {
    id v14 = v10;
    uint64_t v15 = a2[3];
    uint64_t v16 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v15);
    uint64_t result = Trace.emit(event:)((uint64_t)"DECODED", 7, 2, v15, v16);
    *a3 = v14;
  }
  return result;
}

uint64_t sub_1ACDBCA64(uint64_t a1, void *a2, uint64_t *a3, void (*a4)(uint64_t, void, __n128), unint64_t *a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a3);
  __n128 v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4(a1, *a2, v11);
  sub_1ACA51EA4(a5, a3);
  uint64_t v14 = sub_1ACE75AD8();
  sub_1ACA50E78((uint64_t)v13, a3);
  return v14;
}

uint64_t sub_1ACDBCB54(uint64_t a1)
{
  return sub_1ACDBCA64(a1, &v2, &qword_1E99F5BD8, (void (*)(uint64_t, void, __n128))sub_1ACDB73E0, &qword_1E99F5BE0);
}

uint64_t sub_1ACDBCBA0(uint64_t a1)
{
  return sub_1ACDBCA64(a1, &v2, &qword_1E99F5BA8, (void (*)(uint64_t, void, __n128))sub_1ACDB6668, &qword_1E99F5BB0);
}

uint64_t sub_1ACDBCBEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACDBCC54()
{
  return objectdestroyTm_21((uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
}

uint64_t sub_1ACDBCC6C(uint64_t a1, uint64_t a2)
{
  return sub_1ACDBCEA8(a1, a2, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))sub_1ACDB8C48);
}

uint64_t sub_1ACDBCC98(uint64_t a1)
{
  return sub_1ACE255B8(a1, *(uint64_t (**)(uint64_t, void))(v1 + 16));
}

uint64_t sub_1ACDBCCA0()
{
  return objectdestroy_6Tm_0((uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
}

uint64_t sub_1ACDBCCB8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  type metadata accessor for ShazamSignatureRequest();
  return sub_1ACDBC94C(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_1ACDBCD38()
{
  return objectdestroy_9Tm((uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
}

uint64_t sub_1ACDBCD50()
{
  return sub_1ACDBD234((uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, (uint64_t (*)(unint64_t, uint64_t, uint64_t))sub_1ACDBA004);
}

uint64_t sub_1ACDBCD84()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACDBCDBC(uint64_t a1)
{
  sub_1ACE23F68(a1, *(os_unfair_lock_s **)(v1 + 16));
}

void sub_1ACDBCDCC(uint64_t a1)
{
  sub_1ACE24590(a1, *(os_unfair_lock_s **)(v1 + 16));
}

void sub_1ACDBCDDC()
{
  sub_1ACE24F90(*(os_unfair_lock_s **)(v0 + 16));
}

uint64_t sub_1ACDBCDEC()
{
  return objectdestroy_27Tm_0((uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
}

uint64_t sub_1ACDBCE04(uint64_t a1, uint64_t a2)
{
  return sub_1ACDBD384(a1, a2, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t))sub_1ACDBA90C);
}

id sub_1ACDBCE30()
{
  return sub_1ACE239CC(v0);
}

void sub_1ACDBCE38(uint64_t a1, unint64_t a2, int a3, void *a4)
{
  sub_1ACDBAEE4(a1, a2, a3, a4, *(void (**)(id, unint64_t, uint64_t))(v4 + 16), *(void *)(v4 + 24), &qword_1E99F5BC8, &qword_1E99F5BD0);
}

uint64_t sub_1ACDBCE64()
{
  return objectdestroyTm_21((uint64_t (*)(void))type metadata accessor for TTMLRequest);
}

uint64_t sub_1ACDBCE7C(uint64_t a1, uint64_t a2)
{
  return sub_1ACDBCEA8(a1, a2, (uint64_t (*)(void))type metadata accessor for TTMLRequest, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))sub_1ACDB94C0);
}

uint64_t sub_1ACDBCEA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))
{
  uint64_t v7 = *(void *)(a3(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(v4 + v9);
  uint64_t v12 = *(void *)(v4 + v10);
  uint64_t v13 = *(void *)(v4 + v10 + 8);
  uint64_t v14 = *(unsigned __int8 *)(v4 + v10 + 16);
  return a4(a1, a2, v4 + v8, v11, v12, v13, v14, v4 + ((v9 + 39) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1ACDBCF94()
{
  return objectdestroy_6Tm_0((uint64_t (*)(void))type metadata accessor for TTMLRequest);
}

double sub_1ACDBCFAC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for TTMLRequest();
  return sub_1ACDBB010(*(void *)a1, *(void *)(a1 + 8), (void *)(v2 + 16), a2);
}

uint64_t sub_1ACDBD02C()
{
  return objectdestroy_9Tm((uint64_t (*)(void))type metadata accessor for TTMLRequest);
}

uint64_t objectdestroy_9Tm(uint64_t (*a1)(void))
{
  uint64_t v3 = sub_1ACE74F28();
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = a1(0);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  unint64_t v9 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
  v9(v1 + v5, v3);

  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v1 + v8, 1, v3)) {
    v9(v1 + v8, v3);
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = v1 + v8 + *(int *)(v7 + 36);
  if (*(void *)(v10 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v10);
  }
  return swift_deallocObject();
}

uint64_t sub_1ACDBD208()
{
  return sub_1ACDBD234((uint64_t (*)(void))type metadata accessor for TTMLRequest, (uint64_t (*)(unint64_t, uint64_t, uint64_t))sub_1ACDBA318);
}

uint64_t sub_1ACDBD234(uint64_t (*a1)(void), uint64_t (*a2)(unint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(sub_1ACE74F28() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(a1(0) - 8);
  uint64_t v8 = *(void *)(v2 + v6);
  uint64_t v9 = v2 + ((v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a2(v2 + v5, v8, v9);
}

uint64_t sub_1ACDBD340()
{
  return objectdestroy_27Tm_0((uint64_t (*)(void))type metadata accessor for TTMLRequest);
}

uint64_t sub_1ACDBD358(uint64_t a1, uint64_t a2)
{
  return sub_1ACDBD384(a1, a2, (uint64_t (*)(void))type metadata accessor for TTMLRequest, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t))sub_1ACDBABF8);
}

uint64_t sub_1ACDBD384(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v8 = *(void *)(sub_1ACE74F28() - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(a3(0) - 8);
  unint64_t v12 = (v10 + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(v4 + v10);
  uint64_t v14 = *(void *)(v4 + ((*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a4(a1, a2, v4 + v9, v13, v4 + v12, v14);
}

void sub_1ACDBD4C0(uint64_t a1, unint64_t a2, int a3, void *a4)
{
  sub_1ACDBAEE4(a1, a2, a3, a4, *(void (**)(id, unint64_t, uint64_t))(v4 + 16), *(void *)(v4 + 24), &qword_1E99F5BF8, &qword_1E99F5C00);
}

uint64_t sub_1ACDBD4EC()
{
  return objectdestroy_80Tm(&qword_1EB76F5F0, &qword_1EB76F038, &qword_1EB76EFA8);
}

uint64_t sub_1ACDBD508(uint64_t a1, uint64_t a2)
{
  return sub_1ACDBD6D8(a1, a2, &qword_1EB76F5F0, sub_1ACDAF448);
}

uint64_t sub_1ACDBD528()
{
  return objectdestroy_80Tm(&qword_1EB76F600, &qword_1EB76F050, qword_1EB76EFB0);
}

uint64_t objectdestroy_80Tm(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  unint64_t v6 = (int *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  uint64_t v7 = v3
     + ((*(unsigned __int8 *)(*(void *)v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v6 + 80));
  swift_release();
  uint64_t v8 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a2) + 60);
  uint64_t v9 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDBD6B8(uint64_t a1, uint64_t a2)
{
  return sub_1ACDBD6D8(a1, a2, &qword_1EB76F600, sub_1ACDAECD4);
}

uint64_t sub_1ACDBD6D8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  return a4(a1, a2);
}

uint64_t sub_1ACDBD754()
{
  return objectdestroy_93Tm(&qword_1EB76F600, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, &qword_1EB76F050, qword_1EB76EFB0);
}

uint64_t sub_1ACDBD784(uint64_t *a1)
{
  return sub_1ACDBE518(a1, &qword_1EB76F600, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))sub_1ACDAFBBC);
}

uint64_t sub_1ACDBD7B8()
{
  return objectdestroy_96Tm(&qword_1EB76F600, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, &qword_1EB76F050, qword_1EB76EFB0);
}

uint64_t sub_1ACDBD7E8(uint64_t *a1)
{
  return sub_1ACDBE978(a1, &qword_1EB76F600, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, (void (*)(uint64_t, void *))sub_1ACDC7608);
}

uint64_t sub_1ACDBD81C(void *a1)
{
  return sub_1ACDB0A8C(a1);
}

uint64_t sub_1ACDBD840()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDBD878@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1ACDBD8AC()
{
  return swift_deallocObject();
}

uint64_t sub_1ACDBD8E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACDBD930@<X0>(void *a1@<X8>)
{
  return sub_1ACDBC000(a1);
}

uint64_t sub_1ACDBD94C()
{
  return swift_deallocObject();
}

uint64_t sub_1ACDBD98C()
{
  return objectdestroy_111Tm((uint64_t (*)(void))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor, &qword_1EB76F050, qword_1EB76EFB0);
}

uint64_t sub_1ACDBD9B4(uint64_t a1, uint64_t a2)
{
  return sub_1ACDBEDB4(a1, a2, (uint64_t (*)(void))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor, sub_1ACDACD8C);
}

id sub_1ACDBD9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  ObjectType = (objc_class *)swift_getObjectType();
  unint64_t v10 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v11 = (void *)((char *)v4 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v4) + 0x88));
  *uint64_t v11 = 0;
  v11[1] = 0;
  unint64_t v12 = (void *)((char *)v4 + *(void *)((*v10 & *v4) + 0x80));
  *unint64_t v12 = a2;
  v12[1] = a3;
  *(void *)((char *)v4 + *(void *)((*v10 & *v4) + 0x90)) = a1;
  uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  *(void *)((char *)v4 + *(void *)((*v10 & *v4) + 0x98)) = a4(MEMORY[0x1E4FBC860]);
  swift_retain();
  uint64_t v14 = v4;
  swift_retain();
  *(void *)((char *)v14 + *(void *)((*v10 & *v14) + 0xA0)) = sub_1ACA36BE4((uint64_t)v13);
  *(void *)((char *)v14 + *(void *)((*v10 & *v14) + 0xA8)) = sub_1ACA3A158((uint64_t)v13);
  *(void *)((char *)v14 + *(void *)((*v10 & *v14) + 0xB0)) = sub_1ACA3A320(v13);
  *(void *)((char *)v14 + *(void *)((*v10 & *v14) + 0xB8)) = dispatch_group_create();

  v16.receiver = v14;
  v16.super_class = ObjectType;
  return objc_msgSendSuper2(&v16, sel_init);
}

uint64_t sub_1ACDBDBA8()
{
  return objectdestroy_114Tm((uint64_t (*)(void))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor, &qword_1EB76F050, qword_1EB76EFB0);
}

uint64_t sub_1ACDBDBD0(uint64_t a1, uint64_t a2)
{
  return sub_1ACDBEEA0(a1, a2, (uint64_t (*)(void))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_1ACDAE384);
}

uint64_t sub_1ACDBDBFC()
{
  return objectdestroy_120Tm((uint64_t (*)(void))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor, &qword_1EB76F050, qword_1EB76EFB0);
}

void sub_1ACDBDC24()
{
}

uint64_t sub_1ACDBDC3C()
{
  return objectdestroy_126Tm(MEMORY[0x1E4FBD318]);
}

uint64_t sub_1ACDBDC58()
{
  return objectdestroy_129Tm((uint64_t (*)(void))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, &qword_1EB76F050, qword_1EB76EFB0);
}

uint64_t sub_1ACDBDC94@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ShazamSignatureBackgroundSessionDescriptor() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for ShazamSignatureRequest() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_1ACE74F28() - 8);
  unint64_t v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64);
  uint64_t v14 = *(void *)(sub_1ACE753F8() - 8);
  uint64_t result = sub_1ACDB17E8(*a1, v2 + v6, v2 + v9, v2 + v12, v2 + ((v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)));
  *a2 = result;
  return result;
}

uint64_t sub_1ACDBDE2C()
{
  return objectdestroy_126Tm(MEMORY[0x1E4FBD318]);
}

uint64_t sub_1ACDBDE44(uint64_t a1)
{
  return sub_1ACDBF734(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1ACAAA998);
}

uint64_t sub_1ACDBDE5C()
{
  return objectdestroy_126Tm(MEMORY[0x1E4F276F0]);
}

id sub_1ACDBDE74()
{
  return sub_1ACAAC254();
}

uint64_t sub_1ACDBDE8C()
{
  return objectdestroy_126Tm(MEMORY[0x1E4FBD318]);
}

uint64_t sub_1ACDBDEA4(uint64_t a1)
{
  return sub_1ACDBF734(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1ACAAAA8C);
}

uint64_t sub_1ACDBDEBC(uint64_t *a1)
{
  return sub_1ACDBB97C(a1);
}

uint64_t sub_1ACDBDEF4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACDBDF2C()
{
  return sub_1ACDBE110();
}

void sub_1ACDBDF34(uint64_t a1)
{
  uint64_t v2 = sub_1ACE753F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB771BE8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1ACE75438();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB771BD0);
  unint64_t v12 = sub_1ACE75428();
  os_signpost_type_t v7 = sub_1ACE76E28();
  if (sub_1ACE76FA8())
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    os_signpost_id_t v9 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v12, v7, v9, "Loaded asset from URL", "", v8, 2u);
    MEMORY[0x1AD11B340](v8, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    uint64_t v10 = v12;
  }
}

uint64_t sub_1ACDBE110()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(os_unfair_lock_s **)(result + 16);
    uint64_t v2 = (uint64_t)&v1[4];
    uint64_t v3 = v1 + 10;
    os_unfair_lock_lock(v1 + 10);
    sub_1ACDBE194(v2);
    os_unfair_lock_unlock(v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACDBE194(uint64_t a1)
{
  return sub_1ACDC069C(a1);
}

uint64_t sub_1ACDBE1AC()
{
  return objectdestroy_93Tm(&qword_1EB76F5F0, (uint64_t (*)(void))type metadata accessor for TTMLRequest, &qword_1EB76F038, &qword_1EB76EFA8);
}

uint64_t objectdestroy_93Tm(uint64_t *a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t *a4)
{
  uint64_t v8 = (int *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v8 + 80);
  uint64_t v10 = *(void *)(*(void *)v8 + 64);
  uint64_t v11 = sub_1ACE74898();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v24 = (v9 + v10 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v25 = v11;
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = a2(0);
  unint64_t v22 = (v24 + v13 + *(unsigned __int8 *)(*(void *)(v14 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
  uint64_t v15 = v4 + v9;
  swift_release();
  unint64_t v16 = v4 + v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a3) + 60);
  uint64_t v17 = sub_1ACE74F28();
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v21 = *(void (**)(unint64_t, uint64_t))(v18 + 8);
  v21(v16, v17);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v23 + v24, v25);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v18 + 48))(v23 + v22, 1, v17)) {
    v21(v23 + v22, v17);
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = v23 + v22 + *(int *)(v14 + 36);
  if (*(void *)(v19 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v19);
  }
  return swift_deallocObject();
}

uint64_t sub_1ACDBE4E4(uint64_t *a1)
{
  return sub_1ACDBE518(a1, &qword_1EB76F5F0, (uint64_t (*)(void))type metadata accessor for TTMLRequest, (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))sub_1ACDB000C);
}

uint64_t sub_1ACDBE518(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, unint64_t, unint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(sub_1ACE74898() - 8);
  unint64_t v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v10 + 64);
  uint64_t v13 = *(void *)(a3(0) - 8);
  uint64_t v14 = v4 + ((v11 + v12 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v15 = *a1;
  return a4(v15, v4 + v8, v4 + v11, v14);
}

uint64_t sub_1ACDBE67C()
{
  return objectdestroy_96Tm(&qword_1EB76F5F0, (uint64_t (*)(void))type metadata accessor for TTMLRequest, &qword_1EB76F038, &qword_1EB76EFA8);
}

uint64_t objectdestroy_96Tm(uint64_t *a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t *a4)
{
  unint64_t v8 = (int *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v8 + 80);
  uint64_t v10 = *(void *)(*(void *)v8 + 64);
  uint64_t v11 = a2(0);
  uint64_t v12 = *(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
  unint64_t v20 = (v9 + v10 + v12) & ~v12;
  uint64_t v21 = *(void *)(*(void *)(v11 - 8) + 64);
  uint64_t v13 = v4 + v9;
  swift_release();
  unint64_t v14 = v4 + v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a3) + 60);
  uint64_t v15 = sub_1ACE74F28();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v19 = *(void (**)(unint64_t, uint64_t))(v16 + 8);
  v19(v14, v15);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v16 + 48))(v4 + v20, 1, v15)) {
    v19(v4 + v20, v15);
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = v4 + v20 + *(int *)(v11 + 36);
  if (*(void *)(v17 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v17);
  }

  return swift_deallocObject();
}

uint64_t sub_1ACDBE944(uint64_t *a1)
{
  return sub_1ACDBE978(a1, &qword_1EB76F5F0, (uint64_t (*)(void))type metadata accessor for TTMLRequest, (void (*)(uint64_t, void *))sub_1ACDC7CC4);
}

uint64_t sub_1ACDBE978(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), void (*a4)(uint64_t, void *))
{
  uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(a3(0) - 8);
  unint64_t v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  return sub_1ACDB0928(*a1, v4 + v10, v4 + v13, *(void **)(v4 + ((*(void *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8)), a2, a4);
}

uint64_t sub_1ACDBEA94(void *a1)
{
  return sub_1ACDB1120(a1);
}

uint64_t sub_1ACDBEAB8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1ACDB2CF0(*a1, *(void **)(v2 + 16));
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1ACDBEAE8(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_1ACA51EA4(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1ACDBEB7C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = sub_1ACDB2DA4(a1, *(void **)(v2 + 16), *(void **)(v2 + 24));
  *a2 = result;
  return result;
}

uint64_t sub_1ACDBEBA8()
{
  return objectdestroy_111Tm((uint64_t (*)(void))type metadata accessor for TranscriptsBackgroundSessionDescriptor, &qword_1EB76F038, &qword_1EB76EFA8);
}

uint64_t objectdestroy_111Tm(uint64_t (*a1)(void), uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(a1(0) - 8) + 80);
  uint64_t v7 = v3 + ((v6 + 16) & ~v6);
  swift_release();
  uint64_t v8 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a2) + 60);
  uint64_t v9 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDBED20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACDBED88(uint64_t a1, uint64_t a2)
{
  return sub_1ACDBEDB4(a1, a2, (uint64_t (*)(void))type metadata accessor for TranscriptsBackgroundSessionDescriptor, sub_1ACDAD888);
}

uint64_t sub_1ACDBEDB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(a3(0) - 8);
  uint64_t v8 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a4(a2, a1, v8);
}

uint64_t sub_1ACDBEE4C()
{
  return objectdestroy_114Tm((uint64_t (*)(void))type metadata accessor for TranscriptsBackgroundSessionDescriptor, &qword_1EB76F038, &qword_1EB76EFA8);
}

uint64_t sub_1ACDBEE74(uint64_t a1, uint64_t a2)
{
  return sub_1ACDBEEA0(a1, a2, (uint64_t (*)(void))type metadata accessor for TranscriptsBackgroundSessionDescriptor, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_1ACDAE7A4);
}

uint64_t sub_1ACDBEEA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(a3(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(v4 + v9);
  uint64_t v11 = *(void *)(v4 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8));
  return a4(a1, a2, v4 + v8, v10, v11);
}

uint64_t sub_1ACDBEF70(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1ACDBEFD0()
{
  return objectdestroy_120Tm((uint64_t (*)(void))type metadata accessor for TranscriptsBackgroundSessionDescriptor, &qword_1EB76F038, &qword_1EB76EFA8);
}

void sub_1ACDBEFF8()
{
}

void sub_1ACDBF010(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(a1(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1ACDAEC04(v1 + v3, *(id *)(v1 + v4), *(void *)(v1 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(void))(v1 + ((((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1ACDBF0B4()
{
  return objectdestroy_126Tm(MEMORY[0x1E4FBD318]);
}

void sub_1ACDBF0CC()
{
  uint64_t v1 = *(void *)(sub_1ACE753F8() - 8);
  sub_1ACDBDF34(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_1ACDBF120()
{
  return objectdestroy_129Tm((uint64_t (*)(void))type metadata accessor for TranscriptsBackgroundSessionDescriptor, (uint64_t (*)(void))type metadata accessor for TTMLRequest, &qword_1EB76F038, &qword_1EB76EFA8);
}

uint64_t objectdestroy_129Tm(uint64_t (*a1)(void), uint64_t (*a2)(void), uint64_t *a3, uint64_t *a4)
{
  uint64_t v8 = *(void *)(a1(0) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = a2(0);
  uint64_t v26 = *(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
  unint64_t v22 = (v9 + v10 + v26) & ~v26;
  uint64_t v25 = *(void *)(*(void *)(v11 - 8) + 64);
  uint64_t v12 = sub_1ACE74F28();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v23 = *(void *)(v13 + 64);
  uint64_t v24 = sub_1ACE753F8();
  uint64_t v15 = *(void *)(v24 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  swift_release();
  unint64_t v17 = v4 + v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a3) + 60);
  uint64_t v27 = *(void (**)(unint64_t, uint64_t))(v13 + 8);
  v27(v17, v12);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v4 + v22, 1, v12)) {
    v27(v4 + v22, v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = v4 + v22 + *(int *)(v11 + 36);
  if (*(void *)(v18 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v18);
  }
  unint64_t v19 = (v22 + v25 + v14) & ~v14;
  unint64_t v20 = (v19 + v23 + v16) & ~v16;
  v27(v4 + v19, v12);
  (*(void (**)(unint64_t, uint64_t))(v15 + 8))(v4 + v20, v24);
  return swift_deallocObject();
}

uint64_t sub_1ACDBF49C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for TranscriptsBackgroundSessionDescriptor() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for TTMLRequest() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_1ACE74F28() - 8);
  unint64_t v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64);
  uint64_t v14 = *(void *)(sub_1ACE753F8() - 8);
  uint64_t v15 = v2 + ((v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  long long v16 = *(_OWORD *)(a1 + 16);
  v18[0] = *(_OWORD *)a1;
  v18[1] = v16;
  v18[2] = *(_OWORD *)(a1 + 32);
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t result = sub_1ACDB226C((void (*)(char *, uint64_t, uint64_t))v18, v2 + v6, v2 + v9, v2 + v12, v15);
  *a2 = result;
  return result;
}

uint64_t sub_1ACDBF654()
{
  return objectdestroy_126Tm(MEMORY[0x1E4FBD318]);
}

uint64_t sub_1ACDBF66C()
{
  return objectdestroy_126Tm(MEMORY[0x1E4F276F0]);
}

uint64_t sub_1ACDBF684()
{
  return objectdestroy_126Tm(MEMORY[0x1E4FBD318]);
}

uint64_t objectdestroy_126Tm(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_1ACDBF734(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(sub_1ACE753F8() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a2(a1, v5);
}

uint64_t sub_1ACDBF7B8(uint64_t *a1)
{
  return sub_1ACDBB97C(a1);
}

uint64_t sub_1ACDBF7F0(uint64_t a1)
{
  return sub_1ACDCB7A8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1ACDBF80C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1ACDBC43C(a1, *(void *)(v2 + 16), (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, a2);
}

id sub_1ACDBF83C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1ACDBF8BC(a1, a2);
}

uint64_t sub_1ACDBF854(uint64_t a1)
{
  return sub_1ACDCB688(a1, *(void *)(v1 + 16));
}

uint64_t sub_1ACDBF870@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1ACDBC43C(a1, *(void *)(v2 + 16), (uint64_t (*)(void))type metadata accessor for TTMLRequest, a2);
}

uint64_t sub_1ACDBF8A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACDBBD60(a1, *(void *)(v2 + 16), a2);
}

id sub_1ACDBF8BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = sub_1ACDBBBCC(a1, *(void *)(v2 + 16));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1ACDBF8EC(uint64_t a1)
{
  return sub_1ACDBC074(a1, (void *)(v1 + 16), &qword_1E99F5D48, (void (*)(uint64_t, void, void, __n128))sub_1ACDAB7A0, &qword_1E99F5D50);
}

uint64_t sub_1ACDBF92C(uint64_t a1)
{
  return sub_1ACDBC074(a1, (void *)(v1 + 16), &qword_1E99F5D38, (void (*)(uint64_t, void, void, __n128))sub_1ACDAB084, &qword_1E99F5D40);
}

uint64_t sub_1ACDBF96C()
{
  return objectdestroy_225Tm((uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
}

uint64_t sub_1ACDBF984@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACDBFC1C(a1, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, a2);
}

uint64_t sub_1ACDBF9A0()
{
  return objectdestroy_231Tm((uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
}

id sub_1ACDBF9B8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  type metadata accessor for ShazamSignatureRequest();
  id result = ShazamSignatureRequest.decode(_:)(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

void *sub_1ACDBFA48@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id result = (*(void *(**)(uint64_t *__return_ptr, void, void))(v2 + 16))(&v6, *a1, a1[1]);
  if (!v3) {
    *a2 = v6;
  }
  return result;
}

uint64_t sub_1ACDBFA94()
{
  return objectdestroy_225Tm((uint64_t (*)(void))type metadata accessor for TTMLRequest);
}

uint64_t objectdestroy_225Tm(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  swift_release();
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v1 + v3, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v1 + v3, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = v1 + v3 + *(int *)(v2 + 36);
  if (*(void *)(v6 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v6);
  }
  return swift_deallocObject();
}

uint64_t sub_1ACDBFC04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACDBFC1C(a1, (uint64_t (*)(void))type metadata accessor for TTMLRequest, a2);
}

uint64_t sub_1ACDBFC1C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2(0) - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t))(v3 + 16))(a1, v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
  *a3 = result;
  return result;
}

uint64_t objectdestroy_228Tm()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  }
  return swift_deallocObject();
}

uint64_t sub_1ACDBFCE4()
{
  return objectdestroy_231Tm((uint64_t (*)(void))type metadata accessor for TTMLRequest);
}

uint64_t objectdestroy_231Tm(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v1 + v3, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v1 + v3, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = v1 + v3 + *(int *)(v2 + 36);
  if (*(void *)(v6 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v6);
  }
  return swift_deallocObject();
}

void sub_1ACDBFE4C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t sub_1ACDBFE9C(uint64_t *a1)
{
  return sub_1ACDBB97C(a1);
}

uint64_t sub_1ACDBFED4(uint64_t *a1)
{
  return sub_1ACDBBA60(a1);
}

uint64_t sub_1ACDBFF0C()
{
  return sub_1ACDBBB48();
}

uint64_t sub_1ACDBFF14(uint64_t *a1)
{
  return sub_1ACDBB97C(a1);
}

uint64_t sub_1ACDBFF4C(uint64_t *a1)
{
  return sub_1ACDBBA60(a1);
}

uint64_t sub_1ACDBFF84()
{
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255) {
    sub_1ACA74630(*(void *)(v0 + 32), *(void *)(v0 + 40), v1);
  }
  int v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 != 255) {
    sub_1ACA74648(*(id *)(v0 + 72), v2);
  }
  int v3 = *(unsigned __int8 *)(v0 + 96);
  if (v3 != 255) {
    sub_1ACA74648(*(id *)(v0 + 88), v3);
  }
  int v4 = *(unsigned __int8 *)(v0 + 112);
  if (v4 != 255) {
    sub_1ACA74648(*(id *)(v0 + 104), v4);
  }
  int v5 = *(unsigned __int8 *)(v0 + 128);
  if (v5 != 255) {
    sub_1ACA74648(*(id *)(v0 + 120), v5);
  }
  int v6 = *(unsigned __int8 *)(v0 + 144);
  if (v6 != 255) {
    sub_1ACA74648(*(id *)(v0 + 136), v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 256)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 232);
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 304);
  return swift_deallocObject();
}

uint64_t sub_1ACDC006C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1ACDB8498(a1, a2, v3 + 16, *(void *)(v3 + 272), *(void *)(v3 + 280), *(void *)(v3 + 288), *(unsigned __int8 *)(v3 + 296), v3 + 304, a3);
}

uint64_t sub_1ACDC0084()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 88);
  if (v1 != 255) {
    sub_1ACA74630(*(void *)(v0 + 72), *(void *)(v0 + 80), v1);
  }
  int v2 = *(unsigned __int8 *)(v0 + 120);
  if (v2 != 255) {
    sub_1ACA74648(*(id *)(v0 + 112), v2);
  }
  int v3 = *(unsigned __int8 *)(v0 + 136);
  if (v3 != 255) {
    sub_1ACA74648(*(id *)(v0 + 128), v3);
  }
  int v4 = *(unsigned __int8 *)(v0 + 152);
  if (v4 != 255) {
    sub_1ACA74648(*(id *)(v0 + 144), v4);
  }
  int v5 = *(unsigned __int8 *)(v0 + 168);
  if (v5 != 255) {
    sub_1ACA74648(*(id *)(v0 + 160), v5);
  }
  int v6 = *(unsigned __int8 *)(v0 + 184);
  if (v6 != 255) {
    sub_1ACA74648(*(id *)(v0 + 176), v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 296)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 272);
  }
  return swift_deallocObject();
}

uint64_t sub_1ACDC0164@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACDBBF28(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_1ACDC0184()
{
  uint64_t v1 = sub_1ACE74F28();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  uint64_t v5 = v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  int v6 = *(unsigned __int8 *)(v5 + 32);
  if (v6 != 255) {
    sub_1ACA74630(*(void *)(v5 + 16), *(void *)(v5 + 24), v6);
  }
  int v7 = *(unsigned __int8 *)(v5 + 64);
  if (v7 != 255) {
    sub_1ACA74648(*(id *)(v5 + 56), v7);
  }
  int v8 = *(unsigned __int8 *)(v5 + 80);
  if (v8 != 255) {
    sub_1ACA74648(*(id *)(v5 + 72), v8);
  }
  int v9 = *(unsigned __int8 *)(v5 + 96);
  if (v9 != 255) {
    sub_1ACA74648(*(id *)(v5 + 88), v9);
  }
  int v10 = *(unsigned __int8 *)(v5 + 112);
  if (v10 != 255) {
    sub_1ACA74648(*(id *)(v5 + 104), v10);
  }
  int v11 = *(unsigned __int8 *)(v5 + 128);
  if (v11 != 255) {
    sub_1ACA74648(*(id *)(v5 + 120), v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + 240)) {
    __swift_destroy_boxed_opaque_existential_0(v5 + 216);
  }
  return swift_deallocObject();
}

uint64_t sub_1ACDC02D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_1ACE74F28() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  int v6 = *(void **)(v1 + v5);
  return sub_1ACDB9D38(v1 + v4, v6, v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8), a1);
}

uint64_t objectdestroy_12Tm()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  return swift_deallocObject();
}

void sub_1ACDC03C0(uint64_t a1)
{
  sub_1ACE23A1C(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_1ACDC03D4()
{
  uint64_t v1 = sub_1ACE74F28();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  uint64_t v5 = v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  int v6 = *(unsigned __int8 *)(v5 + 32);
  if (v6 != 255) {
    sub_1ACA74630(*(void *)(v5 + 16), *(void *)(v5 + 24), v6);
  }
  int v7 = *(unsigned __int8 *)(v5 + 64);
  if (v7 != 255) {
    sub_1ACA74648(*(id *)(v5 + 56), v7);
  }
  int v8 = *(unsigned __int8 *)(v5 + 80);
  if (v8 != 255) {
    sub_1ACA74648(*(id *)(v5 + 72), v8);
  }
  int v9 = *(unsigned __int8 *)(v5 + 96);
  if (v9 != 255) {
    sub_1ACA74648(*(id *)(v5 + 88), v9);
  }
  int v10 = *(unsigned __int8 *)(v5 + 112);
  if (v10 != 255) {
    sub_1ACA74648(*(id *)(v5 + 104), v10);
  }
  int v11 = *(unsigned __int8 *)(v5 + 128);
  if (v11 != 255) {
    sub_1ACA74648(*(id *)(v5 + 120), v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + 240)) {
    __swift_destroy_boxed_opaque_existential_0(v5 + 216);
  }
  swift_release();
  return swift_deallocObject();
}

void sub_1ACDC053C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1ACE74F28() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  int v9 = *(void **)(v2 + v7);
  uint64_t v10 = *(void *)(v2 + ((v8 + 263) & 0xFFFFFFFFFFFFFFF8));
  sub_1ACDBA62C(a1, a2, v2 + v6, v9, v2 + v8, v10);
}

void sub_1ACDC0600(uint64_t a1, unint64_t a2, int a3, void *a4)
{
  sub_1ACDBAEE4(a1, a2, a3, a4, *(void (**)(id, unint64_t, uint64_t))(v4 + 16), *(void *)(v4 + 24), &qword_1E99F5D68, &qword_1E99F5D70);
}

uint64_t sub_1ACDC062C(uint64_t *a1)
{
  return sub_1ACDBB97C(a1);
}

uint64_t sub_1ACDC0664(uint64_t *a1)
{
  return sub_1ACDBBA60(a1);
}

uint64_t sub_1ACDC069C(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v3 = MEMORY[0x1E4FBC868];
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v3;
  return result;
}

uint64_t *sub_1ACDC06D8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    unint64_t v20 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a3[5];
    unint64_t v8 = (char *)a1 + v7;
    int v9 = (char *)a2 + v7;
    *(uint64_t *)((char *)a1 + v7) = *(uint64_t *)((char *)a2 + v7);
    swift_retain();
    swift_retain();
    uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038) + 60);
    int v11 = &v8[v10];
    unint64_t v12 = &v9[v10];
    uint64_t v13 = sub_1ACE74F28();
    unint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    v43(v11, v12, v13);
    uint64_t v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
    *(void *)&v11[v14[15]] = *(void *)&v12[v14[15]];
    *(void *)&v11[v14[16]] = *(void *)&v12[v14[16]];
    *(void *)&v11[v14[17]] = *(void *)&v12[v14[17]];
    *(void *)&v11[v14[18]] = *(void *)&v12[v14[18]];
    *(void *)&v11[v14[19]] = *(void *)&v12[v14[19]];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F5F0);
    uint64_t v16 = v15[11];
    unint64_t v17 = *(void **)&v9[v16];
    *(void *)&v8[v16] = v17;
    *(void *)&v8[v15[12]] = *(void *)&v9[v15[12]];
    uint64_t v18 = v15[13];
    uint64_t v19 = *(void *)&v9[v18];
    unint64_t v20 = a1;
    *(void *)&v8[v18] = v19;
    uint64_t v21 = a3[6];
    uint64_t v22 = a3[7];
    uint64_t v23 = (uint64_t *)((char *)a1 + v21);
    uint64_t v24 = (uint64_t *)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    *(uint64_t *)((char *)a1 + v22) = *(uint64_t *)((char *)a2 + v22);
    uint64_t v26 = a3[8];
    uint64_t v27 = a3[9];
    unint64_t v28 = (uint64_t *)((char *)a1 + v26);
    uint64_t v29 = (uint64_t *)((char *)a2 + v26);
    uint64_t v30 = v29[1];
    *unint64_t v28 = *v29;
    v28[1] = v30;
    id v31 = (char *)a1 + v27;
    long long v32 = (char *)a2 + v27;
    *(uint64_t *)((char *)a1 + v27) = *(uint64_t *)((char *)a2 + v27);
    id v33 = v17;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050) + 60);
    uint64_t v35 = &v31[v34];
    uint64_t v36 = &v32[v34];
    v43(&v31[v34], &v32[v34], v13);
    uint64_t v37 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
    *(void *)&v35[v37[15]] = *(void *)&v36[v37[15]];
    *(void *)&v35[v37[16]] = *(void *)&v36[v37[16]];
    *(void *)&v35[v37[17]] = *(void *)&v36[v37[17]];
    *(void *)&v35[v37[18]] = *(void *)&v36[v37[18]];
    *(void *)&v35[v37[19]] = *(void *)&v36[v37[19]];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v38 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F600);
    uint64_t v39 = v38[11];
    uint64_t v40 = *(void **)&v32[v39];
    *(void *)&v31[v39] = v40;
    *(void *)&v31[v38[12]] = *(void *)&v32[v38[12]];
    *(void *)&v31[v38[13]] = *(void *)&v32[v38[13]];
    id v41 = v40;
    swift_retain();
  }
  swift_retain();
  return v20;
}

uint64_t sub_1ACDC09F8(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  uint64_t v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038) + 60);
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = a1 + *(int *)(a2 + 36);
  swift_release();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050);
  v7(v8 + *(int *)(v9 + 60), v6);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return swift_release();
}

void *sub_1ACDC0C0C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v5 = a3[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  *(void *)((char *)a1 + v5) = *(void *)((char *)a2 + v5);
  swift_retain();
  swift_retain();
  uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038) + 60);
  uint64_t v9 = &v6[v8];
  uint64_t v10 = &v7[v8];
  uint64_t v11 = sub_1ACE74F28();
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  v39(v9, v10, v11);
  unint64_t v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  *(void *)&v9[v12[15]] = *(void *)&v10[v12[15]];
  *(void *)&v9[v12[16]] = *(void *)&v10[v12[16]];
  *(void *)&v9[v12[17]] = *(void *)&v10[v12[17]];
  *(void *)&v9[v12[18]] = *(void *)&v10[v12[18]];
  *(void *)&v9[v12[19]] = *(void *)&v10[v12[19]];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F5F0);
  uint64_t v14 = v13[11];
  uint64_t v15 = *(void **)&v7[v14];
  *(void *)&v6[v14] = v15;
  *(void *)&v6[v13[12]] = *(void *)&v7[v13[12]];
  *(void *)&v6[v13[13]] = *(void *)&v7[v13[13]];
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)((char *)a1 + v16);
  uint64_t v19 = (void *)((char *)a2 + v16);
  uint64_t v20 = v19[1];
  void *v18 = *v19;
  v18[1] = v20;
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)((char *)a1 + v21);
  uint64_t v24 = (void *)((char *)a2 + v21);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = (char *)a1 + v22;
  uint64_t v27 = (char *)a2 + v22;
  *(void *)((char *)a1 + v22) = *(void *)((char *)a2 + v22);
  id v28 = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050) + 60);
  uint64_t v30 = &v26[v29];
  id v31 = &v27[v29];
  v39(&v26[v29], &v27[v29], v11);
  long long v32 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  *(void *)&v30[v32[15]] = *(void *)&v31[v32[15]];
  *(void *)&v30[v32[16]] = *(void *)&v31[v32[16]];
  *(void *)&v30[v32[17]] = *(void *)&v31[v32[17]];
  *(void *)&v30[v32[18]] = *(void *)&v31[v32[18]];
  *(void *)&v30[v32[19]] = *(void *)&v31[v32[19]];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v33 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F600);
  uint64_t v34 = v33[11];
  uint64_t v35 = *(void **)&v27[v34];
  *(void *)&v26[v34] = v35;
  *(void *)&v26[v33[12]] = *(void *)&v27[v33[12]];
  *(void *)&v26[v33[13]] = *(void *)&v27[v33[13]];
  id v36 = v35;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1ACDC0EE8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038) + 60);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = sub_1ACE74F28();
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24);
  v40(v10, v11, v12);
  uint64_t v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  *(void *)&v10[v13[15]] = *(void *)&v11[v13[15]];
  swift_retain();
  swift_release();
  *(void *)&v10[v13[16]] = *(void *)&v11[v13[16]];
  swift_retain();
  swift_release();
  *(void *)&v10[v13[17]] = *(void *)&v11[v13[17]];
  swift_retain();
  swift_release();
  *(void *)&v10[v13[18]] = *(void *)&v11[v13[18]];
  swift_retain();
  swift_release();
  *(void *)&v10[v13[19]] = *(void *)&v11[v13[19]];
  swift_retain();
  swift_release();
  uint64_t v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F5F0);
  uint64_t v15 = v14[11];
  uint64_t v16 = *(void **)&v8[v15];
  uint64_t v17 = *(void **)&v7[v15];
  *(void *)&v7[v15] = v16;
  id v18 = v16;

  *(void *)&v7[v14[12]] = *(void *)&v8[v14[12]];
  swift_retain();
  swift_release();
  *(void *)&v7[v14[13]] = *(void *)&v8[v14[13]];
  swift_retain();
  swift_release();
  uint64_t v19 = a3[6];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  swift_retain();
  swift_release();
  uint64_t v27 = a3[9];
  id v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);
  swift_retain();
  swift_release();
  uint64_t v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050) + 60);
  id v31 = &v28[v30];
  long long v32 = &v29[v30];
  v40(&v28[v30], &v29[v30], v12);
  id v33 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  *(void *)&v31[v33[15]] = *(void *)&v32[v33[15]];
  swift_retain();
  swift_release();
  *(void *)&v31[v33[16]] = *(void *)&v32[v33[16]];
  swift_retain();
  swift_release();
  *(void *)&v31[v33[17]] = *(void *)&v32[v33[17]];
  swift_retain();
  swift_release();
  *(void *)&v31[v33[18]] = *(void *)&v32[v33[18]];
  swift_retain();
  swift_release();
  *(void *)&v31[v33[19]] = *(void *)&v32[v33[19]];
  swift_retain();
  swift_release();
  uint64_t v34 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F600);
  uint64_t v35 = v34[11];
  id v36 = *(void **)&v29[v35];
  uint64_t v37 = *(void **)&v28[v35];
  *(void *)&v28[v35] = v36;
  id v38 = v36;

  *(void *)&v28[v34[12]] = *(void *)&v29[v34[12]];
  swift_retain();
  swift_release();
  *(void *)&v28[v34[13]] = *(void *)&v29[v34[13]];
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1ACDC1288(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038) + 60);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = sub_1ACE74F28();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  uint64_t v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  *(void *)&v10[v14[15]] = *(void *)&v11[v14[15]];
  *(void *)&v10[v14[16]] = *(void *)&v11[v14[16]];
  *(void *)&v10[v14[17]] = *(void *)&v11[v14[17]];
  *(void *)&v10[v14[18]] = *(void *)&v11[v14[18]];
  *(void *)&v10[v14[19]] = *(void *)&v11[v14[19]];
  uint64_t v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F5F0);
  *(void *)&v7[v15[11]] = *(void *)&v8[v15[11]];
  *(void *)&v7[v15[12]] = *(void *)&v8[v15[12]];
  *(void *)&v7[v15[13]] = *(void *)&v8[v15[13]];
  uint64_t v16 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  uint64_t v17 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  id v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050) + 60);
  uint64_t v21 = &v18[v20];
  uint64_t v22 = &v19[v20];
  v13(&v18[v20], &v19[v20], v12);
  uint64_t v23 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  *(void *)&v21[v23[15]] = *(void *)&v22[v23[15]];
  *(void *)&v21[v23[16]] = *(void *)&v22[v23[16]];
  *(void *)&v21[v23[17]] = *(void *)&v22[v23[17]];
  *(void *)&v21[v23[18]] = *(void *)&v22[v23[18]];
  *(void *)&v21[v23[19]] = *(void *)&v22[v23[19]];
  uint64_t v24 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F600);
  *(void *)&v18[v24[11]] = *(void *)&v19[v24[11]];
  *(void *)&v18[v24[12]] = *(void *)&v19[v24[12]];
  *(void *)&v18[v24[13]] = *(void *)&v19[v24[13]];
  return a1;
}

void *sub_1ACDC1498(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  swift_release();
  uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038) + 60);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = sub_1ACE74F28();
  id v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40);
  v28(v10, v11, v12);
  uint64_t v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  *(void *)&v10[v13[15]] = *(void *)&v11[v13[15]];
  swift_release();
  *(void *)&v10[v13[16]] = *(void *)&v11[v13[16]];
  swift_release();
  *(void *)&v10[v13[17]] = *(void *)&v11[v13[17]];
  swift_release();
  *(void *)&v10[v13[18]] = *(void *)&v11[v13[18]];
  swift_release();
  *(void *)&v10[v13[19]] = *(void *)&v11[v13[19]];
  swift_release();
  uint64_t v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F5F0);
  uint64_t v15 = v14[11];
  uint64_t v16 = *(void **)&v7[v15];
  *(void *)&v7[v15] = *(void *)&v8[v15];

  *(void *)&v7[v14[12]] = *(void *)&v8[v14[12]];
  swift_release();
  *(void *)&v7[v14[13]] = *(void *)&v8[v14[13]];
  swift_release();
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  swift_release();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_release();
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  swift_release();
  uint64_t v17 = a3[9];
  id v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  swift_release();
  uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050) + 60);
  uint64_t v21 = &v18[v20];
  uint64_t v22 = &v19[v20];
  v28(&v18[v20], &v19[v20], v12);
  uint64_t v23 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  *(void *)&v21[v23[15]] = *(void *)&v22[v23[15]];
  swift_release();
  *(void *)&v21[v23[16]] = *(void *)&v22[v23[16]];
  swift_release();
  *(void *)&v21[v23[17]] = *(void *)&v22[v23[17]];
  swift_release();
  *(void *)&v21[v23[18]] = *(void *)&v22[v23[18]];
  swift_release();
  *(void *)&v21[v23[19]] = *(void *)&v22[v23[19]];
  swift_release();
  uint64_t v24 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F600);
  uint64_t v25 = v24[11];
  uint64_t v26 = *(void **)&v18[v25];
  *(void *)&v18[v25] = *(void *)&v19[v25];

  *(void *)&v18[v24[12]] = *(void *)&v19[v24[12]];
  swift_release();
  *(void *)&v18[v24[13]] = *(void *)&v19[v24[13]];
  swift_release();
  return a1;
}

uint64_t sub_1ACDC1788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACDC179C);
}

uint64_t sub_1ACDC179C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F5F0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F600);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1ACDC18D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACDC18E4);
}

void *sub_1ACDC18E4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F5F0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F600);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 36);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1ACDC1A18()
{
  sub_1ACDC1B00();
  if (v0 <= 0x3F)
  {
    sub_1ACDC1B9C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1ACDC1B00()
{
  if (!qword_1EB76F5F8)
  {
    type metadata accessor for TranscriptsBackgroundSessionDescriptor();
    sub_1ACDBD8E8(&qword_1EB770090, (void (*)(uint64_t))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
    unint64_t v0 = type metadata accessor for AssetBackgroundSession();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB76F5F8);
    }
  }
}

void sub_1ACDC1B9C()
{
  if (!qword_1EB76F608)
  {
    type metadata accessor for ShazamSignatureBackgroundSessionDescriptor();
    sub_1ACDBD8E8(&qword_1EB770118, (void (*)(uint64_t))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
    unint64_t v0 = type metadata accessor for AssetBackgroundSession();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB76F608);
    }
  }
}

void sub_1ACDC1C4C(uint64_t a1)
{
}

void sub_1ACDC1C68(uint64_t a1)
{
}

uint64_t sub_1ACDC1D1C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACAA50A8(a1, a2);
}

uint64_t sub_1ACDC1D6C(uint64_t a1)
{
  return sub_1ACDBC6B0(a1);
}

uint64_t sub_1ACDC1D84(uint64_t a1)
{
  return sub_1ACDBC788(a1);
}

uint64_t sub_1ACDC1DA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACDBF8A0(a1, a2);
}

uint64_t StorageChangeStream.init()@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for StorageChangeStream.StorageChange();
  sub_1ACE758C8();
  uint64_t v2 = sub_1ACE758A8();
  swift_retain();
  swift_getWitnessTable();
  sub_1ACE75BE8();
  sub_1ACE756C8();
  swift_getWitnessTable();
  uint64_t v3 = sub_1ACE75AD8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  a1[1] = v3;
  return result;
}

uint64_t type metadata accessor for StorageChangeStream.StorageChange()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t StorageChangeStream.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(v4 + 8);
  uint64_t v9 = type metadata accessor for StorageChangeStream.StorageChange();
  uint64_t v10 = MEMORY[0x1E4FBC248];
  return MEMORY[0x1F40D6910](a1, v8, v9, v10, a3, a4);
}

uint64_t StorageChangeStream.added(element:)(uint64_t a1, uint64_t a2)
{
  return sub_1ACDC1F70(a1, a2);
}

uint64_t StorageChangeStream.removed(element:)(uint64_t a1, uint64_t a2)
{
  return sub_1ACDC1F70(a1, a2);
}

uint64_t StorageChangeStream.updated(element:)(uint64_t a1, uint64_t a2)
{
  return sub_1ACDC1F70(a1, a2);
}

uint64_t sub_1ACDC1F70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = type metadata accessor for StorageChangeStream.StorageChange();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(v3 - 8) + 16))((char *)&v10 - v7, a1, v3, v6);
  swift_storeEnumTagMultiPayload();
  sub_1ACE75898();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t StorageChangeStream.added<A>(elements:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACDC20C8(a1, a2, a3, a4, (void (*)(char *, uint64_t))StorageChangeStream.added(element:));
}

uint64_t StorageChangeStream.removed<A>(elements:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACDC20C8(a1, a2, a3, a4, (void (*)(char *, uint64_t))StorageChangeStream.removed(element:));
}

uint64_t sub_1ACDC20C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t))
{
  uint64_t v27 = a5;
  uint64_t v29 = a1;
  uint64_t v26 = a2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE76FD8();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v19 = (char *)&v23 - v18;
  long long v25 = *v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v29, a3);
  sub_1ACE76398();
  swift_getAssociatedConformanceWitness();
  id v28 = (long long *)v19;
  uint64_t v29 = AssociatedTypeWitness;
  sub_1ACE76FE8();
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v20(v12, 1, v6) != 1)
  {
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    do
    {
      v21(v9, v12, v6);
      long long v30 = v25;
      v27(v9, v26);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      sub_1ACE76FE8();
    }
    while (v20(v12, 1, v6) != 1);
  }
  return (*(uint64_t (**)(long long *, uint64_t))(v24 + 8))(v28, v29);
}

uint64_t StorageChangeStream.updated<A>(elements:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACDC20C8(a1, a2, a3, a4, (void (*)(char *, uint64_t))StorageChangeStream.updated(element:));
}

uint64_t sub_1ACDC2420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return StorageChangeStream.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t type metadata accessor for StorageChangeStream()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACDC244C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1ACDC24DC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(_DWORD *)(v4 + 80);
  if (v6 <= 7 && (unint64_t)(v5 + 1) <= 0x18 && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    unsigned int v10 = a2[v5];
    unsigned int v11 = v10 - 3;
    if (v10 >= 3)
    {
      if (v5 <= 3) {
        uint64_t v12 = v5;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a2;
          goto LABEL_18;
        case 2:
          int v13 = *(unsigned __int16 *)a2;
          goto LABEL_18;
        case 3:
          int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_18;
        case 4:
          int v13 = *(_DWORD *)a2;
LABEL_18:
          int v14 = (v13 | (v11 << (8 * v5))) + 3;
          unsigned int v10 = v13 + 3;
          if (v5 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 2)
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 2;
    }
    else if (v10 == 1)
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 0;
    }
  }
  else
  {
    uint64_t v9 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1ACDC2678(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 24) - 8) + 8))();
}

uint64_t sub_1ACDC26A4(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  unsigned int v5 = a2[v4];
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a2;
        goto LABEL_10;
      case 2:
        int v7 = *(unsigned __int16 *)a2;
        goto LABEL_10;
      case 3:
        int v7 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_10;
      case 4:
        int v7 = *(_DWORD *)a2;
LABEL_10:
        int v8 = (v7 | ((v5 - 3) << (8 * v4))) + 3;
        char v9 = v7 + 3;
        if (v4 >= 4) {
          LOBYTE(v5) = v9;
        }
        else {
          LOBYTE(v5) = v8;
        }
        break;
      default:
        break;
    }
  }
  (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 24) - 8) + 16))(a1);
  *(unsigned char *)(a1 + v4) = v5;
  return a1;
}

unsigned __int8 *sub_1ACDC27BC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 + 64);
    (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    unsigned int v9 = a2[v8];
    if (v9 >= 3)
    {
      if (v8 <= 3) {
        uint64_t v10 = v8;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a2;
          goto LABEL_11;
        case 2:
          int v11 = *(unsigned __int16 *)a2;
          goto LABEL_11;
        case 3:
          int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_11;
        case 4:
          int v11 = *(_DWORD *)a2;
LABEL_11:
          int v12 = (v11 | ((v9 - 3) << (8 * v8))) + 3;
          char v13 = v11 + 3;
          if (v8 >= 4) {
            LOBYTE(v9) = v13;
          }
          else {
            LOBYTE(v9) = v12;
          }
          break;
        default:
          break;
      }
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v5);
    a1[v8] = v9;
  }
  return a1;
}

uint64_t sub_1ACDC291C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  unsigned int v5 = a2[v4];
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a2;
        goto LABEL_10;
      case 2:
        int v7 = *(unsigned __int16 *)a2;
        goto LABEL_10;
      case 3:
        int v7 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_10;
      case 4:
        int v7 = *(_DWORD *)a2;
LABEL_10:
        int v8 = (v7 | ((v5 - 3) << (8 * v4))) + 3;
        char v9 = v7 + 3;
        if (v4 >= 4) {
          LOBYTE(v5) = v9;
        }
        else {
          LOBYTE(v5) = v8;
        }
        break;
      default:
        break;
    }
  }
  (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 24) - 8) + 32))(a1);
  *(unsigned char *)(a1 + v4) = v5;
  return a1;
}

unsigned __int8 *sub_1ACDC2A34(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 + 64);
    (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    unsigned int v9 = a2[v8];
    if (v9 >= 3)
    {
      if (v8 <= 3) {
        uint64_t v10 = v8;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a2;
          goto LABEL_11;
        case 2:
          int v11 = *(unsigned __int16 *)a2;
          goto LABEL_11;
        case 3:
          int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_11;
        case 4:
          int v11 = *(_DWORD *)a2;
LABEL_11:
          int v12 = (v11 | ((v9 - 3) << (8 * v8))) + 3;
          char v13 = v11 + 3;
          if (v8 >= 4) {
            LOBYTE(v9) = v13;
          }
          else {
            LOBYTE(v9) = v12;
          }
          break;
        default:
          break;
      }
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v5);
    a1[v8] = v9;
  }
  return a1;
}

uint64_t sub_1ACDC2B94(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_20;
  }
  uint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
    if (v8 < 2)
    {
LABEL_20:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 3) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_20;
  }
LABEL_12:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 254;
}

void sub_1ACDC2CBC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_32:
        __break(1u);
        JUMPOUT(0x1ACDC2E78);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_21;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_20;
      case 3:
        goto LABEL_32;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_21;
      default:
LABEL_20:
        if (a2) {
LABEL_21:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1ACDC2EA0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  uint64_t v3 = a1[v2];
  int v4 = v3 - 3;
  if (v3 >= 3)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_10;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_10;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_10;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_10:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 3;
        LODWORD(v3) = v6 + 3;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_1ACDC2F4C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (a2 > 2)
  {
    unsigned int v5 = a2 - 3;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

void NSManagedObjectContext.unsafeCategory(forAdamID:)(uint64_t a1)
{
  uint64_t v2 = v1;
  size_t v4 = (void *)sub_1ACE76178();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1ACE84820;
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v6 = sub_1ACADC3A8();
  *(void *)(v5 + 32) = 0x44496D616461;
  *(void *)(v5 + 40) = 0xE600000000000000;
  uint64_t v7 = MEMORY[0x1E4FBC598];
  *(void *)(v5 + 96) = MEMORY[0x1E4FBC538];
  *(void *)(v5 + 104) = v7;
  *(void *)(v5 + 64) = v6;
  *(void *)(v5 + 72) = a1;
  unsigned int v8 = (void *)sub_1ACE76B88();
  id v9 = objc_msgSend(v2, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_limit_, v4, v8, 0, 1, 1);

  if (!v9) {
    goto LABEL_14;
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
  unint64_t v10 = sub_1ACE76578();

  if (!(v10 >> 62))
  {
    if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v10 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v11 = *(id *)(v10 + 32);
      goto LABEL_7;
    }
    __break(1u);
LABEL_14:
    __break(1u);
    return;
  }
  id v11 = (id)MEMORY[0x1AD119490](0, v10);
LABEL_7:
  int v12 = v11;
  swift_bridgeObjectRelease();
  type metadata accessor for MTCategory();
  if (!swift_dynamicCastClass()) {
}
  }

Swift::OpaquePointer_optional __swiftcall NSManagedObjectContext.unsafeCategories(withRelationshipToPodcastAdamID:)(Swift::Int64 withRelationshipToPodcastAdamID)
{
  uint64_t v3 = (void *)sub_1ACE76178();
  size_t v4 = (void *)_s18PodcastsFoundation10MTCategoryC47predicateForCategoriesWithRelationshipToPodcast10withAdamIDSo11NSPredicateCs5Int64V_tFZ_0(withRelationshipToPodcastAdamID);
  id v5 = objc_msgSend(v1, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_, v3, v4, 0, 1);

  if (v5)
  {
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
    unint64_t v7 = sub_1ACE76578();

    uint64_t v8 = sub_1ACC2C134(v7);
    swift_bridgeObjectRelease();
    id v9 = (void *)v8;
  }
  else
  {
    id v9 = 0;
  }
  result.value._rawValue = v9;
  result.is_nil = v6;
  return result;
}

id sub_1ACDC3300(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = a1;
  id v5 = (void *)sub_1ACE76178();
  Swift::Bool v6 = (void *)_s18PodcastsFoundation10MTCategoryC47predicateForCategoriesWithRelationshipToPodcast10withAdamIDSo11NSPredicateCs5Int64V_tFZ_0(a3);
  id v7 = objc_msgSend(v4, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_, v5, v6, 0, 1);

  if (v7)
  {
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
    unint64_t v8 = sub_1ACE76578();

    uint64_t v9 = sub_1ACC2C134(v8);
    swift_bridgeObjectRelease();
    if (v9)
    {
      type metadata accessor for MTCategory();
      unint64_t v10 = (void *)sub_1ACE76558();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
  }
  unint64_t v10 = 0;
LABEL_6:
  return v10;
}

uint64_t NSManagedObjectContext.unsafeFromYourShowsEpisodeIdentifiers(forCategoryAdamID:)(uint64_t a1)
{
  uint64_t v3 = sub_1ACE74F28();
  uint64_t v70 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v69 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v65 - v6;
  NSManagedObjectContext.unsafeCategory(forAdamID:)(a1);
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  if (!v8) {
    return (uint64_t)v9;
  }
  uint64_t v65 = v1;
  id v66 = v8;
  id v10 = objc_msgSend(v8, sel_podcasts);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F80);
  sub_1ACC1F124();
  uint64_t v11 = sub_1ACE76988();

  uint64_t v71 = v11;
  unint64_t v12 = v11 & 0xC000000000000001;
  if ((v11 & 0xC000000000000001) != 0)
  {
    uint64_t v13 = sub_1ACE77178();
    if (v13) {
      goto LABEL_4;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x1E4FBC860];
LABEL_24:
    int64_t v38 = *(void *)(v17 + 16);
    if (v38)
    {
      uint64_t v74 = MEMORY[0x1E4FBC860];
      sub_1ACC82D84(0, v38, 0);
      uint64_t v39 = v70 + 16;
      uint64_t v40 = *(void *)(v70 + 16);
      uint64_t v41 = *(unsigned __int8 *)(v70 + 80);
      uint64_t v68 = v17;
      uint64_t v42 = v17 + ((v41 + 32) & ~v41);
      uint64_t v70 = *(void *)(v70 + 72);
      uint64_t v71 = v40;
      unint64_t v43 = (void (**)(char *, uint64_t))(v39 - 8);
      uint64_t v44 = v3;
      do
      {
        uint64_t v45 = v69;
        ((void (*)(char *, uint64_t, uint64_t))v71)(v69, v42, v3);
        uint64_t v46 = sub_1ACE74DD8();
        uint64_t v73 = MEMORY[0x1E4FBB1A0];
        *(void *)&long long v72 = v46;
        *((void *)&v72 + 1) = v47;
        (*v43)(v45, v3);
        uint64_t v48 = v74;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1ACC82D84(0, *(void *)(v48 + 16) + 1, 1);
          uint64_t v48 = v74;
        }
        unint64_t v50 = *(void *)(v48 + 16);
        unint64_t v49 = *(void *)(v48 + 24);
        if (v50 >= v49 >> 1)
        {
          sub_1ACC82D84(v49 > 1, v50 + 1, 1);
          uint64_t v48 = v74;
        }
        *(void *)(v48 + 16) = v50 + 1;
        sub_1ACA3AA44(&v72, (_OWORD *)(v48 + 32 * v50 + 32));
        v42 += v70;
        --v38;
        uint64_t v3 = v44;
      }
      while (v38);
    }
    swift_bridgeObjectRelease();
    uint64_t v51 = self;
    id v52 = objc_allocWithZone(MEMORY[0x1E4F1CAA0]);
    unint64_t v53 = (void *)sub_1ACE76558();
    swift_bridgeObjectRelease();
    id v54 = objc_msgSend(v52, sel_initWithArray_, v53);

    uint64_t v55 = v65;
    id v56 = objc_msgSend(v51, sel_predicateForCategoryPageFromYourShows_ctx_, v54, v65);

    uint64_t v57 = @"MTEpisode";
    id v58 = v56;
    id v59 = objc_msgSend(v51, sel_sortDescriptorsForPubDateAscending_, 0);
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
    unint64_t v60 = sub_1ACE76578();

    sub_1ACA4E408(v60);
    swift_bridgeObjectRelease();
    uint64_t v61 = (void *)sub_1ACE76558();
    swift_bridgeObjectRelease();
    id v62 = objc_msgSend(v55, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_limit_, v57, v58, v61, 1, 15);

    if (v62
      && (sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590),
          unint64_t v63 = sub_1ACE76578(),
          v62,
          unint64_t v64 = sub_1ACC2BAC4(v63),
          swift_bridgeObjectRelease(),
          v64))
    {
      uint64_t v9 = sub_1ACC66478(v64);

      swift_bridgeObjectRelease();
    }
    else
    {

      return MEMORY[0x1E4FBC860];
    }
    return (uint64_t)v9;
  }
  uint64_t v13 = *(void *)(v71 + 16);
  if (!v13) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v77 = MEMORY[0x1E4FBC860];
  sub_1ACC833CC(0, v13 & ~(v13 >> 63), 0);
  if (v12)
  {
    uint64_t result = sub_1ACE77128();
    char v16 = 1;
  }
  else
  {
    uint64_t result = sub_1ACDC4148(v71);
    char v16 = v18 & 1;
  }
  uint64_t v74 = result;
  uint64_t v75 = v15;
  char v76 = v16;
  if ((v13 & 0x8000000000000000) == 0)
  {
    uint64_t v19 = v71 & 0xFFFFFFFFFFFFFF8;
    if (v71 < 0) {
      uint64_t v19 = v71;
    }
    uint64_t v67 = v3;
    uint64_t v68 = v19;
    do
    {
      while (1)
      {
        sub_1ACDC3ED4(v74, v75, v76, v71, (unint64_t *)&qword_1EB768F80);
        id v31 = v30;
        id v32 = objc_msgSend(v30, sel_objectID);
        id v33 = objc_msgSend(v32, sel_URIRepresentation);

        sub_1ACE74E98();
        uint64_t v34 = v77;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1ACC833CC(0, *(void *)(v34 + 16) + 1, 1);
          uint64_t v34 = v77;
        }
        unint64_t v36 = *(void *)(v34 + 16);
        unint64_t v35 = *(void *)(v34 + 24);
        if (v36 >= v35 >> 1)
        {
          sub_1ACC833CC(v35 > 1, v36 + 1, 1);
          uint64_t v34 = v77;
        }
        *(void *)(v34 + 16) = v36 + 1;
        uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v70 + 32))(v34+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(void *)(v70 + 72) * v36, v7, v3);
        uint64_t v77 = v34;
        if (v12) {
          break;
        }
        uint64_t v20 = v74;
        uint64_t v21 = v75;
        char v22 = v76;
        int64_t v23 = sub_1ACDC3B70(v74, v75, v76, v71);
        uint64_t v24 = v7;
        uint64_t v26 = v25;
        char v28 = v27;
        sub_1ACA6D674(v20, v21, v22);
        uint64_t v74 = v23;
        uint64_t v75 = v26;
        id v7 = v24;
        uint64_t v3 = v67;
        char v29 = v28 & 1;
        unint64_t v12 = 0;
        char v76 = v29;
        if (!--v13) {
          goto LABEL_23;
        }
      }
      if ((v76 & 1) == 0) {
        goto LABEL_37;
      }
      if (sub_1ACE77148()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5D88);
      uint64_t v37 = (void (*)(long long *, void))sub_1ACE769E8();
      sub_1ACE771C8();
      v37(&v72, 0);
      --v13;
    }
    while (v13);
LABEL_23:
    sub_1ACA6D674(v74, v75, v76);
    swift_bridgeObjectRelease();
    uint64_t v17 = v77;
    goto LABEL_24;
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

int64_t sub_1ACDC3B70(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1ACDC3C54(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1ACDC3C68(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v7 = a4;
      }
      else {
        uint64_t v7 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x1AD119350](a1, a2, v7);
      type metadata accessor for MTCategory();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_1ACE77158() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1ACE77168();
  type metadata accessor for MTCategory();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  unint64_t v4 = v17;
  swift_unknownObjectRelease();
  uint64_t v8 = sub_1ACE76F58();
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v10 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v11 = sub_1ACE76F68();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v6 = (v6 + 1) & v12;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_26;
      }
      id v13 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v14 = sub_1ACE76F68();
    }
    while ((v14 & 1) == 0);
  }

LABEL_20:
  uint64_t v15 = *(void **)(*(void *)(a4 + 48) + 8 * v6);
  id v16 = v15;
}

void sub_1ACDC3EC0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1ACDC3ED4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v8 = a4;
      }
      else {
        uint64_t v8 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x1AD119350](a1, a2, v8);
      sub_1ACA50D4C(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_1ACE77158() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1ACE77168();
  sub_1ACA50D4C(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  a5 = v18;
  swift_unknownObjectRelease();
  uint64_t v9 = sub_1ACE76F58();
  uint64_t v10 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v7 = v9 & ~v10;
  if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v11 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
  char v12 = sub_1ACE76F68();

  if ((v12 & 1) == 0)
  {
    uint64_t v13 = ~v10;
    do
    {
      unint64_t v7 = (v7 + 1) & v13;
      if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_26;
      }
      id v14 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
      char v15 = sub_1ACE76F68();
    }
    while ((v15 & 1) == 0);
  }

LABEL_20:
  id v16 = *(void **)(*(void *)(a4 + 48) + 8 * v7);
  id v17 = v16;
}

uint64_t sub_1ACDC4148(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t dispatch thunk of ImageContentProvider.content(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1ACA50B84;
  return v11(a1, a2, a3, a4);
}

uint64_t Set<>.firstEpisodeUUID.getter(uint64_t result)
{
  int64_t v1 = 0;
  uint64_t v2 = result + 56;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(result + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v8 = v7 | (v1 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v1 + 1;
    if (__OFADD__(v1, 1)) {
      break;
    }
    if (v10 >= v6) {
      return 0;
    }
    unint64_t v11 = *(void *)(v2 + 8 * v10);
    ++v1;
    if (!v11)
    {
      int64_t v1 = v10 + 1;
      if (v10 + 1 >= v6) {
        return 0;
      }
      unint64_t v11 = *(void *)(v2 + 8 * v1);
      if (!v11)
      {
        int64_t v1 = v10 + 2;
        if (v10 + 2 >= v6) {
          return 0;
        }
        unint64_t v11 = *(void *)(v2 + 8 * v1);
        if (!v11)
        {
          int64_t v12 = v10 + 3;
          if (v12 >= v6) {
            return 0;
          }
          unint64_t v11 = *(void *)(v2 + 8 * v12);
          if (!v11)
          {
            while (1)
            {
              int64_t v1 = v12 + 1;
              if (__OFADD__(v12, 1)) {
                goto LABEL_25;
              }
              if (v1 >= v6) {
                return 0;
              }
              unint64_t v11 = *(void *)(v2 + 8 * v1);
              ++v12;
              if (v11) {
                goto LABEL_20;
              }
            }
          }
          int64_t v1 = v12;
        }
      }
    }
LABEL_20:
    unint64_t v13 = __clz(__rbit64(v11));
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v8 = v13 + (v1 << 6);
LABEL_5:
    uint64_t v9 = *(void *)(result + 48) + 24 * v8;
    if (*(unsigned char *)(v9 + 16) == 1)
    {
      uint64_t v14 = *(void *)v9;
      swift_bridgeObjectRetain();
      return v14;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t static MTEpisode.contentId(from:)(uint64_t a1)
{
  if (objc_msgSend(self, sel_isEmpty_, a1)) {
    return 0;
  }
  else {
    return a1 & ~(a1 >> 63);
  }
}

uint64_t MTEpisode.allEpisodeStateIdentifiers.getter()
{
  int64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_uuid);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = sub_1ACE761B8();
    unint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v6 = 0;
  }
  uint64_t v7 = (uint64_t)objc_msgSend(v1, sel_storeTrackId);
  id v8 = objc_msgSend(self, sel_isEmpty_, v7);
  if (v8) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v7 & ~(v7 >> 63);
  }
  uint64_t v10 = sub_1ACDFCF58(v4, v6, v9, (unint64_t)v8);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t MTEpisode.contentId.getter()
{
  uint64_t v1 = (uint64_t)objc_msgSend(v0, sel_storeTrackId);
  if (objc_msgSend(self, sel_isEmpty_, v1)) {
    return 0;
  }
  else {
    return v1 & ~(v1 >> 63);
  }
}

uint64_t MTEpisode.artworkModel.getter@<X0>(uint64_t a1@<X8>)
{
  id v2 = v1;
  id v4 = objc_msgSend(v1, sel_uuid);
  if (!v4)
  {
    if (qword_1EB768C20 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1ACE754C8();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EB768C00);
    int64_t v23 = sub_1ACE75498();
    os_log_type_t v24 = sub_1ACE76BE8();
    if (!os_log_type_enabled(v23, v24)) {
      goto LABEL_17;
    }
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl(&dword_1AC9D5000, v23, v24, "Critical issue: Show with nil UUID", v25, 2u);
    uint64_t v26 = v25;
LABEL_16:
    MEMORY[0x1AD11B340](v26, -1, -1);
LABEL_17:

LABEL_19:
    sub_1ACDC4C30(&v77);
    return sub_1ACDC4C50((uint64_t)&v77, a1);
  }
  unint64_t v5 = v4;
  uint64_t v6 = sub_1ACE761B8();
  unint64_t v8 = v7;

  id v9 = objc_msgSend(v2, sel_artworkTemplateURL);
  if (!v9)
  {
LABEL_12:
    if (qword_1EB772F18 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1ACE754C8();
    __swift_project_value_buffer(v27, (uint64_t)qword_1EB772EF8);
    swift_bridgeObjectRetain();
    int64_t v23 = sub_1ACE75498();
    os_log_type_t v28 = sub_1ACE76BD8();
    if (!os_log_type_enabled(v23, v28))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_19;
    }
    char v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(void *)&long long v77 = v30;
    *(_DWORD *)char v29 = 136315138;
    swift_bridgeObjectRetain();
    sub_1ACA3189C(v6, v8, (uint64_t *)&v77);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v23, v28, "Unable to construct artwork model, episode (%s) does not have an artworkTemplateURL or invalid size", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v30, -1, -1);
    uint64_t v26 = v29;
    goto LABEL_16;
  }
  uint64_t v10 = v9;
  uint64_t v11 = sub_1ACE761B8();
  uint64_t v13 = v12;

  objc_msgSend(v2, sel_artworkWidth);
  if (v14 <= 10.0 || (objc_msgSend(v2, sel_artworkHeight), v15 <= 10.0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v76 = v11;
  id v16 = objc_msgSend(v2, sel_artworkBackgroundColor);
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = sub_1ACE761B8();
    unint64_t v20 = v19;

    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1ACDDBDBC(v18, v20);
    char v74 = v32;
    uint64_t v75 = v21;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v75 = 0;
    char v74 = -1;
  }
  id v33 = objc_msgSend(v2, sel_artworkTextPrimaryColor);
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = sub_1ACE761B8();
    unint64_t v37 = v36;

    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1ACDDBDBC(v35, v37);
    char v72 = v39;
    uint64_t v73 = v38;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v73 = 0;
    char v72 = -1;
  }
  id v40 = objc_msgSend(v2, sel_artworkTextSecondaryColor);
  if (v40)
  {
    uint64_t v41 = v40;
    uint64_t v42 = sub_1ACE761B8();
    unint64_t v44 = v43;

    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1ACDDBDBC(v42, v44);
    char v70 = v46;
    uint64_t v71 = v45;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v71 = 0;
    char v70 = -1;
  }
  id v47 = objc_msgSend(v2, sel_artworkTextTertiaryColor);
  if (v47)
  {
    uint64_t v48 = v47;
    uint64_t v49 = sub_1ACE761B8();
    unint64_t v51 = v50;

    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1ACDDBDBC(v49, v51);
    char v68 = v53;
    uint64_t v69 = v52;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v69 = 0;
    char v68 = -1;
  }
  id v54 = objc_msgSend(v2, sel_artworkTextQuaternaryColor);
  if (v54)
  {
    uint64_t v55 = v54;
    uint64_t v56 = sub_1ACE761B8();
    unint64_t v58 = v57;

    swift_bridgeObjectRetain();
    uint64_t v59 = sub_1ACDDBDBC(v56, v58);
    char v61 = v60;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v59 = 0;
    char v61 = -1;
  }
  id v62 = objc_msgSend(v2, sel_title);
  if (v62)
  {
    unint64_t v63 = v62;
    uint64_t v64 = sub_1ACE761B8();
    uint64_t v66 = v65;
  }
  else
  {
    uint64_t v64 = 0;
    uint64_t v66 = 0;
  }
  uint64_t v67 = qword_1EB773090;
  swift_bridgeObjectRetain();
  if (v67 != -1) {
    swift_once();
  }
  *(void *)&long long v77 = v76;
  *((void *)&v77 + 1) = v13;
  uint64_t v78 = v6;
  unint64_t v79 = v8;
  char v80 = 0;
  uint64_t v81 = 0x4082C00000000000;
  uint64_t v82 = 0x4082C00000000000;
  uint64_t v83 = v75;
  char v84 = v74;
  uint64_t v85 = v73;
  char v86 = v72;
  uint64_t v87 = v71;
  char v88 = v70;
  uint64_t v89 = v69;
  char v90 = v68;
  uint64_t v91 = v59;
  char v92 = v61;
  __int16 v93 = 0;
  char v94 = 1;
  uint64_t v95 = v64;
  uint64_t v96 = v66;
  char v97 = byte_1EB773080;
  __int16 v98 = 0;
  uint64_t v99 = v6;
  unint64_t v100 = v8;
  nullsub_1(&v77);
  return sub_1ACDC4C50((uint64_t)&v77, a1);
}

double sub_1ACDC4C30(_OWORD *a1)
{
  double result = 0.0;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_1ACDC4C50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB773078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t static MTPodcast.importedShowArtworkURL(for:)()
{
  return 0xD000000000000016;
}

uint64_t MTPodcast.artworkModel.getter@<X0>(uint64_t a1@<X8>)
{
  id v2 = v1;
  id v4 = objc_msgSend(v1, sel_uuid);
  if (v4)
  {
    unint64_t v5 = v4;
    uint64_t v6 = sub_1ACE761B8();
    uint64_t v8 = v7;

    id v9 = objc_msgSend(v2, sel_artworkTemplateURL);
    uint64_t v44 = v6;
    if (v9 || (id v9 = objc_msgSend(v2, sel_imageURL)) != 0)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_1ACE761B8();
      unint64_t v39 = v12;
      unint64_t v40 = v11;
    }
    else
    {
      sub_1ACE77268();
      swift_bridgeObjectRelease();
      sub_1ACE762C8();
      unint64_t v39 = 0x80000001ACED1E30;
      unint64_t v40 = 0xD000000000000016;
    }
    id v13 = objc_msgSend(v2, sel_artworkPrimaryColor);
    uint64_t v45 = a1;
    if (v13)
    {
      double v14 = v13;
      uint64_t v15 = sub_1ACE761B8();
      unint64_t v17 = v16;

      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1ACDDBDBC(v15, v17);
      char v37 = v24;
      uint64_t v38 = v18;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v38 = 0;
      char v37 = -1;
    }
    MTPodcast.artworkTextColors.getter((uint64_t)&v70);
    uint64_t v43 = v70;
    char v25 = v71;
    uint64_t v26 = v72;
    uint64_t v27 = v74;
    char v28 = v75;
    uint64_t v29 = v76;
    char v41 = v77;
    char v42 = v73;
    id v30 = objc_msgSend(v2, sel_title);
    if (v30)
    {
      id v31 = v30;
      uint64_t v32 = sub_1ACE761B8();
      uint64_t v34 = v33;
    }
    else
    {
      uint64_t v32 = 0;
      uint64_t v34 = 0;
    }
    uint64_t v35 = qword_1EB773090;
    swift_bridgeObjectRetain();
    if (v35 != -1) {
      swift_once();
    }
    *(void *)&long long v46 = v40;
    *((void *)&v46 + 1) = v39;
    uint64_t v47 = v44;
    uint64_t v48 = v8;
    char v49 = 1;
    uint64_t v50 = 0x4082C00000000000;
    uint64_t v51 = 0x4082C00000000000;
    uint64_t v52 = v38;
    char v53 = v37;
    uint64_t v54 = v43;
    char v55 = v25;
    uint64_t v56 = v26;
    char v57 = v42;
    uint64_t v58 = v27;
    char v59 = v28;
    uint64_t v60 = v29;
    char v61 = v41;
    __int16 v62 = 0;
    char v63 = 1;
    uint64_t v64 = v32;
    uint64_t v65 = v34;
    char v66 = byte_1EB773080;
    __int16 v67 = 0;
    uint64_t v68 = v44;
    uint64_t v69 = v8;
    nullsub_1(&v46);
    uint64_t v23 = v45;
  }
  else
  {
    if (qword_1EB768C20 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1ACE754C8();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EB768C00);
    unint64_t v20 = sub_1ACE75498();
    os_log_type_t v21 = sub_1ACE76BE8();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_1AC9D5000, v20, v21, "Critical issue: Show with nil UUID", v22, 2u);
      MEMORY[0x1AD11B340](v22, -1, -1);
    }

    sub_1ACDC4C30(&v46);
    uint64_t v23 = a1;
  }
  return sub_1ACDC4C50((uint64_t)&v46, v23);
}

id MTPodcast.artworkTextColors.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACDC5698((SEL *)&selRef_artworkTextPrimaryColor, (SEL *)&selRef_artworkTextSecondaryColor, (SEL *)&selRef_artworkTextTertiaryColor, (SEL *)&selRef_artworkTextQuaternaryColor, a1);
}

uint64_t MTPodcast.uberBackgroundArtworkModel.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_uuid);
  if (!v3)
  {
    if (qword_1EB768C20 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1ACE754C8();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EB768C00);
    unint64_t v20 = sub_1ACE75498();
    os_log_type_t v21 = sub_1ACE76BE8();
    if (!os_log_type_enabled(v20, v21)) {
      goto LABEL_15;
    }
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_1AC9D5000, v20, v21, "Critical issue: Show with nil UUID", v22, 2u);
    uint64_t v23 = v22;
LABEL_14:
    MEMORY[0x1AD11B340](v23, -1, -1);
LABEL_15:

LABEL_16:
    sub_1ACDC4C30(&v51);
    uint64_t v28 = a1;
    return sub_1ACDC4C50((uint64_t)&v51, v28);
  }
  id v4 = v3;
  uint64_t v5 = sub_1ACE761B8();
  unint64_t v7 = v6;

  id v8 = objc_msgSend(v1, sel_uberBackgroundImageURL);
  if (!v8)
  {
    if (qword_1EB772F18 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1ACE754C8();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EB772EF8);
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_1ACE75498();
    os_log_type_t v25 = sub_1ACE76BD8();
    if (!os_log_type_enabled(v20, v25))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_16;
    }
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(void *)&long long v51 = v27;
    *(_DWORD *)uint64_t v26 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v75 = sub_1ACA3189C(v5, v7, (uint64_t *)&v51);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v20, v25, "Unable to construct artwork model, show (%s) does not have required uber background image url", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v27, -1, -1);
    uint64_t v23 = v26;
    goto LABEL_14;
  }
  id v9 = v8;
  uint64_t v49 = v5;
  uint64_t v10 = sub_1ACE761B8();
  uint64_t v12 = v11;

  id v13 = objc_msgSend(v1, sel_uberBackgroundJoeColor);
  uint64_t v50 = a1;
  uint64_t v47 = v12;
  uint64_t v48 = v10;
  if (v13)
  {
    double v14 = v13;
    uint64_t v15 = sub_1ACE761B8();
    unint64_t v17 = v16;

    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1ACDDBDBC(v15, v17);
    char v42 = v29;
    uint64_t v43 = v18;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v43 = 0;
    char v42 = -1;
  }
  MTPodcast.uberBackgroundTextColors.getter((uint64_t)&v75);
  uint64_t v30 = v75;
  char v46 = v76;
  uint64_t v45 = v77;
  char v31 = v78;
  uint64_t v32 = v79;
  char v33 = v80;
  uint64_t v34 = v81;
  char v44 = v82;
  id v35 = objc_msgSend(v1, sel_title);
  if (v35)
  {
    unint64_t v36 = v35;
    uint64_t v37 = sub_1ACE761B8();
    uint64_t v39 = v38;
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t v39 = 0;
  }
  uint64_t v40 = qword_1EB773090;
  swift_bridgeObjectRetain();
  if (v40 != -1) {
    swift_once();
  }
  *(void *)&long long v51 = v48;
  *((void *)&v51 + 1) = v47;
  uint64_t v52 = v49;
  unint64_t v53 = v7;
  char v54 = 1;
  uint64_t v55 = 0x40A0000000000000;
  uint64_t v56 = 0x40A5580000000000;
  uint64_t v57 = v43;
  char v58 = v42;
  uint64_t v59 = v30;
  char v60 = v46;
  uint64_t v61 = v45;
  char v62 = v31;
  uint64_t v63 = v32;
  char v64 = v33;
  uint64_t v65 = v34;
  char v66 = v44;
  __int16 v67 = 3;
  char v68 = 1;
  uint64_t v69 = v37;
  uint64_t v70 = v39;
  char v71 = byte_1EB773080;
  __int16 v72 = 0;
  uint64_t v73 = v48;
  uint64_t v74 = v47;
  nullsub_1(&v51);
  uint64_t v28 = v50;
  return sub_1ACDC4C50((uint64_t)&v51, v28);
}

id MTPodcast.uberBackgroundTextColors.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACDC5698((SEL *)&selRef_uberArtworkTextPrimaryColor, (SEL *)&selRef_uberArtworkTextSecondaryColor, (SEL *)&selRef_uberArtworkTextTertiaryColor, (SEL *)&selRef_uberArtworkTextQuaternaryColor, a1);
}

id sub_1ACDC5698@<X0>(SEL *a1@<X0>, SEL *a2@<X1>, SEL *a3@<X2>, SEL *a4@<X3>, uint64_t a5@<X8>)
{
  id v8 = v5;
  id v10 = [v5 *a1];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = sub_1ACE761B8();
    unint64_t v14 = v13;

    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1ACDDBDBC(v12, v14);
    char v17 = v16;
    uint64_t v41 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v41 = 0;
    char v17 = -1;
  }
  id v18 = [v8 *a2];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = sub_1ACE761B8();
    unint64_t v22 = v21;

    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1ACDDBDBC(v20, v22);
    char v25 = v24;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = 0;
    char v25 = -1;
  }
  id v26 = [v8 *a3];
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = sub_1ACE761B8();
    unint64_t v30 = v29;

    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1ACDDBDBC(v28, v30);
    char v33 = v32;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = 0;
    char v33 = -1;
  }
  id result = [v8 *a4];
  id v35 = result;
  if (result)
  {
    uint64_t v36 = sub_1ACE761B8();
    unint64_t v38 = v37;

    swift_bridgeObjectRetain();
    id v35 = (void *)sub_1ACDDBDBC(v36, v38);
    char v40 = v39;
    id result = (id)swift_bridgeObjectRelease();
  }
  else
  {
    char v40 = -1;
  }
  *(void *)a5 = v41;
  *(unsigned char *)(a5 + 8) = v17;
  *(void *)(a5 + 16) = v23;
  *(unsigned char *)(a5 + 24) = v25;
  *(void *)(a5 + 32) = v31;
  *(unsigned char *)(a5 + 40) = v33;
  *(void *)(a5 + 48) = v35;
  *(unsigned char *)(a5 + 56) = v40;
  return result;
}

uint64_t sub_1ACDC58FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1ACDC5910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1ACDC5924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

ValueMetadata *type metadata accessor for MediaAPIProviderFactory()
{
  return &type metadata for MediaAPIProviderFactory;
}

ValueMetadata *type metadata accessor for DefaultProviderFactory()
{
  return &type metadata for DefaultProviderFactory;
}

void sub_1ACDC5958(char a1@<W0>, uint64_t a2@<X8>)
{
  if (a1 == 1)
  {
    if (qword_1E99EFF10 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1ACE754C8();
    __swift_project_value_buffer(v3, (uint64_t)qword_1E99F2C40);
    os_log_type_t v4 = sub_1ACE76BE8();
    uint64_t v5 = sub_1ACE75498();
    os_log_type_t v6 = v4;
    if (os_log_type_enabled(v5, v4))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v11 = v8;
      *(_DWORD *)unint64_t v7 = 136446210;
      sub_1ACA3189C(0x62694C6C61636F6CLL, 0xEC00000079726172, &v11);
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v5, v6, "Asking for %{public}s in a MAPI-only configuration. This is not supported.", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v8, -1, -1);
      MEMORY[0x1AD11B340](v7, -1, -1);
    }

    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    id v9 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MediaRequestController()), sel_init);
    id v10 = objc_msgSend(objc_allocWithZone((Class)_s19TaskMetricsDelegateCMa()), sel_init);
    *(void *)(a2 + 24) = &_s16MediaAPIProviderVN;
    *(void *)(a2 + 32) = &off_1F03857C0;
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
  }
}

uint64_t sub_1ACDC5B44(char a1)
{
  if (a1) {
    char v1 = sub_1ACE77848();
  }
  else {
    char v1 = 1;
  }
  swift_bridgeObjectRelease();
  return v1 & 1;
}

id sub_1ACDC5BDC@<X0>(unsigned __int8 a1@<W0>, void *a2@<X8>)
{
  if (a1 - 1 >= 2)
  {
    id v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MediaRequestController()), sel_init);
    id result = objc_msgSend(objc_allocWithZone((Class)_s19TaskMetricsDelegateCMa()), sel_init);
    a2[1] = result;
    os_log_type_t v6 = &off_1F03857C0;
    uint64_t v3 = &_s16MediaAPIProviderVN;
  }
  else
  {
    uint64_t v3 = (ValueMetadata *)_s20LocalLibraryProviderCMa();
    id result = (id)swift_allocObject();
    id v5 = result;
    os_log_type_t v6 = &off_1F0382A20;
  }
  a2[3] = v3;
  a2[4] = v6;
  *a2 = v5;
  return result;
}

BOOL sub_1ACDC5C88(char a1)
{
  return a1 == 2;
}

uint64_t sub_1ACDC5C9C(char a1)
{
  if (a1) {
    char v1 = sub_1ACE77848();
  }
  else {
    char v1 = 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

void sub_1ACDC5D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  _OWORD v4[3] = a1;
  v4[4] = a2;
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACDC6B98, (uint64_t)v4, a3);
}

uint64_t sub_1ACDC5DA0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACDC5DE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 128);
  swift_beginAccess();
  uint64_t v4 = sub_1ACE76FD8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1ACDC5E98(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 128);
  swift_beginAccess();
  uint64_t v4 = sub_1ACE76FD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

void sub_1ACDC5F50()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v3 = sub_1ACE76FD8();
  uint64_t v4 = sub_1ACDC5FF0;
  uint64_t v5 = v0;
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACDC6B98, (uint64_t)v2, v1);
}

uint64_t sub_1ACDC5FF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACDC5DE8(a1);
}

char *SubscriptionSubject.__allocating_init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  os_log_type_t v6 = sub_1ACDC67B0(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v6;
}

char *SubscriptionSubject.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1ACDC67B0(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v5;
}

uint64_t sub_1ACDC610C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1ACDC6568(a1);
    return swift_release();
  }
  return result;
}

void *SubscriptionSubject.deinit()
{
  uint64_t v1 = v0;
  if (v0[3])
  {
    swift_retain();
    sub_1ACE75848();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  id v2 = (char *)v0 + *(void *)(*v0 + 128);
  uint64_t v3 = sub_1ACE76FD8();
  (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return v1;
}

uint64_t SubscriptionSubject.__deallocating_deinit()
{
  SubscriptionSubject.deinit();
  return swift_deallocClassInstance();
}

void sub_1ACDC62A0(uint64_t a1, uint64_t a2)
{
  v17[0] = a1;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 80);
  uint64_t v6 = sub_1ACE76FD8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v17 - v8;
  uint64_t v10 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)v17 - v12;
  unint64_t v14 = (os_unfair_lock_s *)(v2[2] + 16);
  os_unfair_lock_lock(v14);
  sub_1ACDC5DE8((uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = v5;
    v15[3] = *(void *)(v4 + 88);
    uint64_t v16 = v17[0];
    v15[4] = *(void *)(v4 + 96);
    v15[5] = v16;
    v15[6] = a2;
    v17[4] = sub_1ACDC69D0;
    v17[5] = v15;
    swift_beginAccess();
    swift_getFunctionTypeMetadata1();
    sub_1ACE76688();
    swift_retain();
    sub_1ACE76648();
    swift_endAccess();
    os_unfair_lock_unlock(v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v9, v5);
    os_unfair_lock_unlock(v14);
    ((void (*)(char *))v17[0])(v13);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v5);
  }
}

uint64_t sub_1ACDC6568(uint64_t a1)
{
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = sub_1ACE76FD8();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v19[-v5];
  uint64_t v7 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v7);
  uint64_t v8 = *(void *)(v3 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v3);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v3);
  sub_1ACDC5E98((uint64_t)v6);
  swift_beginAccess();
  uint64_t v9 = v1[4];
  FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1ACE765F8();
  swift_beginAccess();
  v1[4] = v11;
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);
  if (!MEMORY[0x1AD118820](v9, FunctionTypeMetadata1)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v12 = 0;
  for (uint64_t i = v9 + 40; ; i += 16)
  {
    char v14 = sub_1ACE76618();
    sub_1ACE765B8();
    if ((v14 & 1) == 0) {
      break;
    }
    uint64_t v15 = *(void (**)(uint64_t))(i - 8);
    uint64_t v16 = v12 + 1;
    BOOL v17 = __OFADD__(v12, 1);
    uint64_t result = swift_retain();
    if (v17) {
      goto LABEL_11;
    }
    v15(a1);
    swift_release();
    ++v12;
    if (v16 == MEMORY[0x1AD118820](v9, FunctionTypeMetadata1)) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t result = sub_1ACE772C8();
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_1ACDC67B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *(void *)v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  *((void *)v4 + 2) = v8;
  *((void *)v4 + 3) = 0;
  uint64_t v9 = *(void *)(v7 + 80);
  swift_getFunctionTypeMetadata1();
  *((void *)v4 + 4) = sub_1ACE75FA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(&v4[*(void *)(*(void *)v4 + 128)], 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  uint64_t v11 = *(void *)(v7 + 88);
  v10[3] = v11;
  v10[4] = a2;
  v10[5] = a3;
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  unint64_t v13 = (void *)swift_allocObject();
  v13[2] = v9;
  v13[3] = v11;
  v13[4] = a2;
  v13[5] = a3;
  v13[6] = v12;
  swift_retain();
  uint64_t v14 = sub_1ACE75B88();
  swift_release();
  swift_release();
  swift_release();
  *((void *)v4 + 3) = v14;
  swift_release();
  return v4;
}

uint64_t sub_1ACDC6998()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDC69D0()
{
  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_1ACDC69F8()
{
  uint64_t result = sub_1ACE76FD8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SubscriptionSubject()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for SubscriptionSubject(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SubscriptionSubject);
}

uint64_t dispatch thunk of SubscriptionSubject.value.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of SubscriptionSubject.__allocating_init<A>(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of SubscriptionSubject.getValue(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t sub_1ACDC6B40()
{
  return swift_deallocObject();
}

uint64_t sub_1ACDC6B50()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACDC6B88(uint64_t a1)
{
  return sub_1ACDC610C(a1);
}

uint64_t sub_1ACDC6B98()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1ACDC6BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = sub_1ACE75DC8();
  uint64_t v40 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v36 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE75E48();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  MEMORY[0x1F4188790](v6);
  id v35 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTMLRequest();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v32 + 64);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1ACE74F28();
  uint64_t v30 = *(void *)(v31 - 8);
  uint64_t v11 = *(void *)(v30 + 64);
  MEMORY[0x1F4188790](v31);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v29 = v2;
  uint64_t v34 = (char *)&v28 - v14;
  sub_1ACDC84A8((uint64_t (*)(void, __n128))type metadata accessor for TTMLRequest, (uint64_t)&v28 - v14);
  sub_1ACDC878C(a1, a2);
  uint64_t v33 = *(void *)(v2 + qword_1EB772C00);
  long long v16 = *(_OWORD *)(a1 + 16);
  long long v43 = *(_OWORD *)a1;
  long long v44 = v16;
  long long v45 = *(_OWORD *)(a1 + 32);
  uint64_t v46 = *(void *)(a1 + 48);
  sub_1ACA69EDC(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  uint64_t v17 = v30;
  uint64_t v18 = v31;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v12, v15, v31);
  unint64_t v19 = (*(unsigned __int8 *)(v32 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v20 = (v9 + *(unsigned __int8 *)(v17 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v29;
  long long v22 = v44;
  *(_OWORD *)(v21 + 24) = v43;
  *(_OWORD *)(v21 + 40) = v22;
  *(_OWORD *)(v21 + 56) = v45;
  *(void *)(v21 + 72) = v46;
  sub_1ACC75CDC((uint64_t)v10, v21 + v19, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v21 + v20, v12, v18);
  aBlock[4] = sub_1ACDCDB70;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_78;
  uint64_t v23 = _Block_copy(aBlock);
  sub_1ACC79B90(a1);
  swift_retain();
  char v24 = v35;
  sub_1ACE75E08();
  uint64_t v41 = MEMORY[0x1E4FBC860];
  sub_1ACDCD0F0((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  char v25 = v36;
  uint64_t v26 = v37;
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v24, v25, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v24, v39);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v34, v18);
  return swift_release();
}

uint64_t sub_1ACDC7114(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v40 = sub_1ACE75DC8();
  uint64_t v43 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v39 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE75E48();
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v38 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ShazamSignatureRequest();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v34 = *(void *)(v35 + 64);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE74F28();
  uint64_t v32 = *(void *)(v12 - 8);
  uint64_t v33 = v12;
  uint64_t v13 = *(void *)(v32 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v31 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  long long v16 = (char *)&v30 - v15;
  uint64_t v37 = (char *)&v30 - v15;
  sub_1ACDC84A8((uint64_t (*)(void, __n128))type metadata accessor for ShazamSignatureRequest, (uint64_t)&v30 - v15);
  uint64_t v17 = a1;
  sub_1ACDC8920(a1, a2);
  uint64_t v36 = *(void *)(v3 + qword_1EB772C00);
  sub_1ACA69EDC(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  uint64_t v18 = v32;
  unint64_t v19 = v16;
  uint64_t v20 = v33;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))((char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v19, v33);
  unint64_t v21 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  unint64_t v22 = (v34 + *(unsigned __int8 *)(v18 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v3;
  *(void *)(v23 + 24) = v17;
  sub_1ACC75CDC((uint64_t)v11, v23 + v21, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v23 + v22, v31, v20);
  aBlock[4] = sub_1ACDCE214;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_7_3;
  char v24 = _Block_copy(aBlock);
  id v25 = v17;
  swift_retain();
  uint64_t v26 = v38;
  sub_1ACE75E08();
  uint64_t v44 = MEMORY[0x1E4FBC860];
  sub_1ACDCD0F0((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  uint64_t v27 = v39;
  uint64_t v28 = v40;
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v26, v27, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v28);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v42);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v37, v20);
  return swift_release();
}

uint64_t sub_1ACDC7608(uint64_t a1, uint64_t a2)
{
  uint64_t v49 = a1;
  uint64_t v52 = sub_1ACE75DC8();
  uint64_t v55 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  long long v51 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE75E48();
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v50 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ShazamSignatureRequest();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v45 = *(void *)(v46 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v43 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE74DB8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1ACE74F28();
  uint64_t v12 = *(void *)(v56 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v56);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v57 = (char *)&v41 - v16;
  sub_1ACC8F8B8(a2);
  unint64_t v17 = sub_1ACDC8380();
  uint64_t v19 = v18;
  sub_1ACC8F900(a2);
  unint64_t aBlock = v17;
  uint64_t v60 = v19;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F276C0], v8);
  sub_1ACA4F4AC();
  sub_1ACE74F18();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease();
  uint64_t v20 = v57;
  sub_1ACE74E48();
  unint64_t v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v47 = v12 + 8;
  uint64_t v48 = v21;
  uint64_t v22 = v56;
  v21(v14, v56);
  uint64_t v23 = v41;
  uint64_t v24 = v49;
  uint64_t v25 = a2;
  sub_1ACDC8A84(v49, a2);
  uint64_t v44 = *(void *)(v23 + qword_1EB772C00);
  uint64_t v26 = v23;
  uint64_t v27 = v43;
  sub_1ACA69EDC(v24, v43, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  uint64_t v42 = v25;
  long long v28 = *(_OWORD *)(v25 + 16);
  long long v65 = *(_OWORD *)v25;
  long long v66 = v28;
  uint64_t v67 = *(void *)(v25 + 32);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v20, v22);
  unint64_t v29 = (*(unsigned __int8 *)(v46 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  unint64_t v30 = (v45 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (*(unsigned __int8 *)(v12 + 80) + v30 + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v26;
  sub_1ACC75CDC(v27, v32 + v29, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  unint64_t v33 = v32 + v30;
  long long v34 = v66;
  *(_OWORD *)unint64_t v33 = v65;
  *(_OWORD *)(v33 + 16) = v34;
  *(void *)(v33 + 32) = v67;
  uint64_t v35 = v56;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v32 + v31, v14, v56);
  uint64_t v63 = sub_1ACDCE584;
  uint64_t v64 = v32;
  unint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v60 = 1107296256;
  uint64_t v61 = sub_1ACA6DA9C;
  char v62 = &block_descriptor_13_1;
  uint64_t v36 = _Block_copy(&aBlock);
  sub_1ACC8F8B8(v42);
  swift_retain();
  uint64_t v37 = v50;
  sub_1ACE75E08();
  uint64_t v58 = MEMORY[0x1E4FBC860];
  sub_1ACDCD0F0((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  uint64_t v38 = v51;
  uint64_t v39 = v52;
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v37, v38, v36);
  _Block_release(v36);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v54);
  v48(v57, v35);
  return swift_release();
}

uint64_t sub_1ACDC7CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v49 = a1;
  uint64_t v52 = sub_1ACE75DC8();
  uint64_t v55 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  long long v51 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE75E48();
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v50 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTMLRequest();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v45 = *(void *)(v46 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v43 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE74DB8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1ACE74F28();
  uint64_t v12 = *(void *)(v56 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v56);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v57 = (char *)&v41 - v16;
  sub_1ACC8F8B8(a2);
  unint64_t v17 = sub_1ACDC8380();
  uint64_t v19 = v18;
  sub_1ACC8F900(a2);
  unint64_t aBlock = v17;
  uint64_t v60 = v19;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F276C0], v8);
  sub_1ACA4F4AC();
  sub_1ACE74F18();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease();
  uint64_t v20 = v57;
  sub_1ACE74E48();
  unint64_t v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v47 = v12 + 8;
  uint64_t v48 = v21;
  uint64_t v22 = v56;
  v21(v14, v56);
  uint64_t v23 = v41;
  uint64_t v24 = v49;
  uint64_t v25 = a2;
  sub_1ACDC8C8C(v49, a2);
  uint64_t v44 = *(void *)(v23 + qword_1EB772C00);
  uint64_t v26 = v23;
  uint64_t v27 = v43;
  sub_1ACA69EDC(v24, v43, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  uint64_t v42 = v25;
  long long v28 = *(_OWORD *)(v25 + 16);
  long long v65 = *(_OWORD *)v25;
  long long v66 = v28;
  uint64_t v67 = *(void *)(v25 + 32);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v20, v22);
  unint64_t v29 = (*(unsigned __int8 *)(v46 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  unint64_t v30 = (v45 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (*(unsigned __int8 *)(v12 + 80) + v30 + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v26;
  sub_1ACC75CDC(v27, v32 + v29, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  unint64_t v33 = v32 + v30;
  long long v34 = v66;
  *(_OWORD *)unint64_t v33 = v65;
  *(_OWORD *)(v33 + 16) = v34;
  *(void *)(v33 + 32) = v67;
  uint64_t v35 = v56;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v32 + v31, v14, v56);
  uint64_t v63 = sub_1ACDCEA9C;
  uint64_t v64 = v32;
  unint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v60 = 1107296256;
  uint64_t v61 = sub_1ACA6DA9C;
  char v62 = &block_descriptor_19_1;
  uint64_t v36 = _Block_copy(&aBlock);
  sub_1ACC8F8B8(v42);
  swift_retain();
  uint64_t v37 = v50;
  sub_1ACE75E08();
  uint64_t v58 = MEMORY[0x1E4FBC860];
  sub_1ACDCD0F0((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  uint64_t v38 = v51;
  uint64_t v39 = v52;
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v37, v38, v36);
  _Block_release(v36);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v54);
  v48(v57, v35);
  return swift_release();
}

unint64_t sub_1ACDC8380()
{
  return 0xD000000000000014;
}

uint64_t sub_1ACDC8478@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACDC84A8((uint64_t (*)(void, __n128))type metadata accessor for TTMLRequest, a1);
}

uint64_t sub_1ACDC8490@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACDC84A8((uint64_t (*)(void, __n128))type metadata accessor for ShazamSignatureRequest, a1);
}

uint64_t sub_1ACDC84A8@<X0>(uint64_t (*a1)(void, __n128)@<X1>, uint64_t a2@<X8>)
{
  v15[1] = a2;
  uint64_t v4 = sub_1ACE74DB8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = sub_1ACE74F28();
  uint64_t v8 = *(void *)(v15[0] - 8);
  __n128 v9 = MEMORY[0x1F4188790](v15[0]);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)(v2 + *(int *)(a1(0, v9) + 24));
  uint64_t v13 = v12[1];
  v15[2] = *v12;
  v15[3] = v13;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F276C0], v4);
  sub_1ACA4F4AC();
  swift_bridgeObjectRetain();
  sub_1ACE74F18();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  sub_1ACE74E48();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, void))(v8 + 8))(v11, v15[0]);
}

uint64_t sub_1ACDC878C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  __n128 v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v10 = *(_OWORD *)(a1 + 16);
  long long v22 = *(_OWORD *)a1;
  long long v23 = v10;
  long long v24 = *(_OWORD *)(a1 + 32);
  uint64_t v25 = *(void *)(a1 + 48);
  sub_1ACC79B90(a1);
  uint64_t v11 = TranscriptModel.inMemorySize.getter();
  sub_1ACE75088();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5DC8);
  uint64_t v12 = swift_allocObject();
  long long v13 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v12 + 32) = v13;
  *(_OWORD *)(v12 + 48) = *(_OWORD *)(a1 + 32);
  *(void *)(v12 + 64) = *(void *)(a1 + 48);
  *(void *)(v12 + 72) = v11;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v7 + 32))(v12 + *(void *)(*(void *)v12 + 136), v9, v6);
  uint64_t v14 = *(os_unfair_lock_s **)(v3 + 16);
  uint64_t v19 = a2;
  uint64_t v20 = v3;
  uint64_t v21 = v12;
  p_os_unfair_lock_opaque = (unint64_t *)&v14[4]._os_unfair_lock_opaque;
  uint64_t v16 = v14 + 10;
  os_unfair_lock_lock(v14 + 10);
  sub_1ACDCDC44(p_os_unfair_lock_opaque);
  os_unfair_lock_unlock(v16);
  return swift_release();
}

uint64_t sub_1ACDC8920(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  __n128 v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v10 = a1;
  uint64_t v11 = SHSignature.inMemorySize.getter();
  sub_1ACE75088();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5DD0);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = v10;
  *((void *)v12 + 3) = v11;
  (*(void (**)(char *, unsigned char *, uint64_t))(v7 + 32))(&v12[*(void *)(*(void *)v12 + 136)], v9, v6);
  long long v13 = *(os_unfair_lock_s **)(v3 + 16);
  uint64_t v18 = a2;
  uint64_t v19 = v3;
  uint64_t v20 = v12;
  p_os_unfair_lock_opaque = (unint64_t *)&v13[4]._os_unfair_lock_opaque;
  uint64_t v15 = v13 + 10;
  os_unfair_lock_lock(v13 + 10);
  sub_1ACDCE2E8(p_os_unfair_lock_opaque);
  os_unfair_lock_unlock(v15);
  return swift_release();
}

uint64_t sub_1ACDC8A84(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1ACE750A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for ShazamSignatureRequest();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v12 = *(_OWORD *)(a2 + 16);
  v22[0] = *(_OWORD *)a2;
  v22[1] = v12;
  uint64_t v23 = *(void *)(a2 + 32);
  sub_1ACA69EDC(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  sub_1ACE75088();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5DD8);
  uint64_t v13 = swift_allocObject();
  sub_1ACC75CDC((uint64_t)v11, v13 + *(void *)(*(void *)v13 + 120), (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  *(void *)(v13 + *(void *)(*(void *)v13 + 128)) = 1;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(v13 + *(void *)(*(void *)v13 + 136), v8, v5);
  uint64_t v14 = *(os_unfair_lock_s **)(v2 + 16);
  uint64_t v19 = v22;
  uint64_t v20 = v2;
  uint64_t v21 = v13;
  uint64_t v15 = (uint64_t)&v14[4];
  uint64_t v16 = v14 + 10;
  os_unfair_lock_lock(v14 + 10);
  sub_1ACDCE5E0(v15);
  os_unfair_lock_unlock(v16);
  return swift_release();
}

uint64_t sub_1ACDC8C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1ACE750A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for TTMLRequest();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v12 = *(_OWORD *)(a2 + 16);
  v22[0] = *(_OWORD *)a2;
  v22[1] = v12;
  uint64_t v23 = *(void *)(a2 + 32);
  sub_1ACA69EDC(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  sub_1ACE75088();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5DE0);
  uint64_t v13 = swift_allocObject();
  sub_1ACC75CDC((uint64_t)v11, v13 + *(void *)(*(void *)v13 + 120), (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  *(void *)(v13 + *(void *)(*(void *)v13 + 128)) = 1;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(v13 + *(void *)(*(void *)v13 + 136), v8, v5);
  uint64_t v14 = *(os_unfair_lock_s **)(v2 + 16);
  uint64_t v19 = v22;
  uint64_t v20 = v2;
  uint64_t v21 = v13;
  uint64_t v15 = (uint64_t)&v14[4];
  uint64_t v16 = v14 + 10;
  os_unfair_lock_lock(v14 + 10);
  sub_1ACDCEBF4(v15);
  os_unfair_lock_unlock(v16);
  return swift_release();
}

uint64_t sub_1ACDC8E94(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v3 = type metadata accessor for TTMLRequest();
  MEMORY[0x1F4188790](v3);
  uint64_t v20 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v21 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v17 - v9;
  sub_1ACE74E58();
  id v11 = objc_msgSend(self, sel_defaultManager);
  sub_1ACE74EC8();
  long long v12 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  unsigned __int8 v13 = objc_msgSend(v11, sel_fileExistsAtPath_, v12);

  if ((v13 & 1) == 0) {
    NSFileManager.createDirectory(url:createIntermediates:)((uint64_t)v10, 1);
  }
  v17[2] = v3;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);

  uint64_t v15 = *(void *)(a1 + 24);
  unint64_t v14 = *(void *)(a1 + 32);
  sub_1ACA3985C(v15, v14);
  sub_1ACE74F98();
  if ((*(unsigned char *)(v18 + qword_1EB7859D0 + 4) & 1) == 0) {
    sub_1ACCA0F8C(*(_DWORD *)(v18 + qword_1EB7859D0));
  }
  return sub_1ACA50850(v15, v14);
}

uint64_t sub_1ACDC95C4(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a2;
  uint64_t v3 = type metadata accessor for ShazamSignatureRequest();
  MEMORY[0x1F4188790](v3);
  uint64_t v20 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v21 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v18 - v9;
  sub_1ACE74E58();
  id v11 = objc_msgSend(self, sel_defaultManager);
  sub_1ACE74EC8();
  long long v12 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  unsigned __int8 v13 = objc_msgSend(v11, sel_fileExistsAtPath_, v12);

  if ((v13 & 1) == 0) {
    NSFileManager.createDirectory(url:createIntermediates:)((uint64_t)v10, 1);
  }
  v18[2] = v3;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);

  unint64_t v14 = ShazamSignatureRequest.encode(_:)(a1);
  unint64_t v16 = v15;
  sub_1ACE74F98();
  if ((*(unsigned char *)(v19 + qword_1EB7859D0 + 4) & 1) == 0) {
    sub_1ACCA0F8C(*(_DWORD *)(v19 + qword_1EB7859D0));
  }
  return sub_1ACA50850((uint64_t)v14, v16);
}

uint64_t sub_1ACDC9CF8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), unint64_t *a5, void (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v26 = a1;
  uint64_t v27 = a7;
  long long v24 = a5;
  uint64_t v25 = a6;
  uint64_t v8 = sub_1ACE74F28();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v23 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unsigned __int8 v13 = (char *)&v21 - v12;
  sub_1ACE74E58();
  id v14 = objc_msgSend(self, sel_defaultManager);
  sub_1ACE74EC8();
  unint64_t v15 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  unsigned __int8 v16 = objc_msgSend(v14, sel_fileExistsAtPath_, v15);

  if ((v16 & 1) == 0) {
    NSFileManager.createDirectory(url:createIntermediates:)((uint64_t)v13, 1);
  }
  uint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v13, v8);

  a4(0);
  sub_1ACDCD0F0(v24, v25);
  uint64_t v17 = sub_1ACE74CD8();
  unint64_t v19 = v18;
  sub_1ACE74F98();
  if ((*(unsigned char *)(v21 + qword_1EB7859D0 + 4) & 1) == 0) {
    sub_1ACCA0F8C(*(_DWORD *)(v21 + qword_1EB7859D0));
  }
  return sub_1ACA50850(v17, v19);
}

uint64_t sub_1ACDCA3E8(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t *a3, uint64_t a4)
{
  uint64_t v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = a2(v8);
  }
  uint64_t v9 = *(void *)(v8 + 16);
  v11[0] = v8 + 32;
  v11[1] = v9;
  uint64_t result = sub_1ACDCB8C8(v11, a3, a4);
  *a1 = v8;
  return result;
}

uint64_t ShazamSignatureBackgroundSessionDescriptor.init(caches:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACDCA47C(a1, a2);
}

uint64_t sub_1ACDCA47C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ShazamSignatureBackgroundSessionDescriptor.caches.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACDCA4F0(v1, a1);
}

uint64_t sub_1ACDCA4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id ShazamSignatureBackgroundSessionDescriptor.create(session:delegate:)(void *a1, uint64_t a2)
{
  swift_getObjectType();
  return sub_1ACDCCFF4(a1, a2);
}

uint64_t ShazamSignatureBackgroundSessionDescriptor.load(data:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEB0);
  uint64_t v9 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DC50);
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5D98);
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  unsigned __int8 v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5DA0);
  uint64_t v32 = *(void *)(v34 - 8);
  __n128 v17 = MEMORY[0x1F4188790](v34);
  unint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, a1, v5, v17);
  sub_1ACE759C8();
  if (qword_1E99EFEA8 != -1) {
    swift_once();
  }
  uint64_t v20 = (void *)qword_1E99F2630;
  id v36 = (id)qword_1E99F2630;
  uint64_t v21 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v4, 1, 1, v21);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1EB76DEA8, &qword_1EB76DEB0);
  sub_1ACA93A6C();
  id v22 = v20;
  uint64_t v23 = v29;
  sub_1ACE75CA8();
  sub_1ACAFA0D0((uint64_t)v4);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v23);
  sub_1ACA50D4C(0, &qword_1E99F13D0);
  sub_1ACA51EA4(&qword_1EB76DC48, &qword_1EB76DC50);
  uint64_t v24 = v31;
  sub_1ACE75C28();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5DA8);
  sub_1ACA51EA4(&qword_1E99F5DB0, &qword_1E99F5D98);
  sub_1ACA51EA4(&qword_1E99F5DB8, &qword_1E99F5DA8);
  uint64_t v25 = v35;
  sub_1ACE75B98();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v25);
  sub_1ACA51EA4(&qword_1E99F5DC0, &qword_1E99F5DA0);
  uint64_t v26 = v34;
  uint64_t v27 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v26);
  return v27;
}

uint64_t sub_1ACDCAB94@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1ACE74F38();
  if (!v1)
  {
    uint64_t v5 = result;
    unint64_t v6 = v4;
    id v7 = objc_allocWithZone(MEMORY[0x1E4F3BEA8]);
    id v8 = sub_1ACC4ED00();
    uint64_t result = sub_1ACA50850(v5, v6);
    *a1 = v8;
  }
  return result;
}

uint64_t sub_1ACDCAC1C(void **a1)
{
  uint64_t v1 = *a1;
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1ACE754C8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB768C28);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1ACE75498();
  os_log_type_t v6 = sub_1ACE76BE8();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)id v7 = 136315138;
    id v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    uint64_t v10 = sub_1ACE76228();
    sub_1ACA3189C(v10, v11, &v13);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AC9D5000, v5, v6, "Received background wakeup for non-signature (or malformed) content from shazamsignature session; error: %s",
      v7,
      0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v8, -1, -1);
    MEMORY[0x1AD11B340](v7, -1, -1);
  }
  else
  {
  }
  sub_1ACA50D4C(0, &qword_1E99F13D0);
  return sub_1ACE759D8();
}

uint64_t ShazamSignatureBackgroundSessionDescriptor.stash(asset:for:)(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771708);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5C98);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  sub_1ACDC7114(a1, a2);
  sub_1ACE759C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
  sub_1ACE75998();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1ACA51EA4(&qword_1E99F5CA0, &qword_1E99F5C98);
  uint64_t v12 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v12;
}

id sub_1ACDCB048(void *a1, uint64_t a2)
{
  swift_getObjectType();
  return sub_1ACDCCFF4(a1, a2);
}

uint64_t sub_1ACDCB09C(uint64_t a1)
{
  return ShazamSignatureBackgroundSessionDescriptor.load(data:)(a1);
}

uint64_t sub_1ACDCB0B4(void **a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771708);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5C98);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  sub_1ACDC7114(v12, a2);
  sub_1ACE759C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
  sub_1ACE75998();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1ACA51EA4(&qword_1E99F5CA0, &qword_1E99F5C98);
  uint64_t v13 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

uint64_t sub_1ACDCB2D8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t *)(a2 + *(int *)(type metadata accessor for TTMLRequest() + 24));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1ACA69334(v8, v7);
  swift_bridgeObjectRelease();
  if (v9)
  {
    unint64_t v10 = *(void *)(v9 + 72);
    uint64_t result = swift_release();
    unint64_t v12 = a1[1];
    BOOL v13 = v12 >= v10;
    unint64_t v14 = v12 - v10;
    if (!v13)
    {
      __break(1u);
LABEL_9:
      __break(1u);
      return result;
    }
    a1[1] = v14;
  }
  uint64_t result = sub_1ACDCDE00(*(void *)(a4 + 72), a1);
  if (result)
  {
    uint64_t v15 = *(void *)(a4 + 72);
    unint64_t v16 = a1[1];
    BOOL v13 = __CFADD__(v16, v15);
    unint64_t v17 = v16 + v15;
    if (v13) {
      goto LABEL_9;
    }
    a1[1] = v17;
    swift_bridgeObjectRetain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v19 = a1[2];
    a1[2] = 0x8000000000000000;
    sub_1ACD0C6A0(a4, v8, v7, isUniquelyReferenced_nonNull_native);
    a1[2] = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACDCB400(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ShazamSignatureRequest() + 24));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1ACA69360(v8, v7);
  swift_bridgeObjectRelease();
  if (v9)
  {
    unint64_t v10 = *(void *)(v9 + 24);
    uint64_t result = swift_release();
    unint64_t v12 = a1[1];
    BOOL v13 = v12 >= v10;
    unint64_t v14 = v12 - v10;
    if (!v13)
    {
      __break(1u);
LABEL_9:
      __break(1u);
      return result;
    }
    a1[1] = v14;
  }
  uint64_t result = sub_1ACDCE308(*(void *)(a4 + 24), a1);
  if (result)
  {
    uint64_t v15 = *(void *)(a4 + 24);
    unint64_t v16 = a1[1];
    BOOL v13 = __CFADD__(v16, v15);
    unint64_t v17 = v16 + v15;
    if (v13) {
      goto LABEL_9;
    }
    a1[1] = v17;
    swift_bridgeObjectRetain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v19 = a1[2];
    a1[2] = 0x8000000000000000;
    sub_1ACD0C6AC(a4, v8, v7, isUniquelyReferenced_nonNull_native);
    a1[2] = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACDCB528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(unint64_t), uint64_t (*a6)(void, uint64_t), void (*a7)(uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v12 = sub_1ACDC8380();
  uint64_t v13 = a5(v12);
  swift_bridgeObjectRelease();
  if (v13)
  {
    unint64_t v14 = *(void *)(v13 + *(void *)(*(void *)v13 + 128));
    uint64_t result = swift_release();
    unint64_t v16 = *(void *)(a1 + 8);
    BOOL v17 = v16 >= v14;
    unint64_t v18 = v16 - v14;
    if (!v17)
    {
      __break(1u);
LABEL_9:
      __break(1u);
      return result;
    }
    *(void *)(a1 + 8) = v18;
  }
  uint64_t v19 = *(void *)(*(void *)a4 + 128);
  uint64_t result = a6(*(void *)(a4 + v19), a1);
  if (result)
  {
    uint64_t v20 = *(void *)(a4 + v19);
    uint64_t v21 = *(void *)(a1 + 8);
    BOOL v17 = __CFADD__(v21, v20);
    uint64_t v22 = v21 + v20;
    if (v17) {
      goto LABEL_9;
    }
    *(void *)(a1 + 8) = v22;
    unint64_t v23 = sub_1ACDC8380();
    uint64_t v25 = v24;
    swift_retain();
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = 0x8000000000000000;
    a7(a4, v23, v25, isUniquelyReferenced_nonNull_native);
    *(void *)(a1 + 16) = v27;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACDCB688(uint64_t a1, uint64_t a2)
{
  id v3 = (uint64_t *)(a2 + *(int *)(type metadata accessor for TTMLRequest() + 24));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1ACA657FC(v4, v5);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1ACD06108();
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(*(void *)(v10 + 56) + 8 * v6);
  sub_1ACB1B6A4(v6, v10);
  *(void *)(a1 + 16) = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v12 = *(void *)(v11 + 72);
  uint64_t result = swift_release();
  unint64_t v14 = *(void *)(a1 + 8);
  BOOL v15 = v14 >= v12;
  unint64_t v16 = v14 - v12;
  if (v15) {
    *(void *)(a1 + 8) = v16;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACDCB7A8(uint64_t a1, uint64_t a2)
{
  id v3 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ShazamSignatureRequest() + 24));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1ACA657FC(v4, v5);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1ACD06114();
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(*(void *)(v10 + 56) + 8 * v6);
  sub_1ACB1B6A4(v6, v10);
  *(void *)(a1 + 16) = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v12 = *(void *)(v11 + 24);
  uint64_t result = swift_release();
  unint64_t v14 = *(void *)(a1 + 8);
  BOOL v15 = v14 >= v12;
  unint64_t v16 = v14 - v12;
  if (v15) {
    *(void *)(a1 + 8) = v16;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACDCB8C8(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v157 = a3;
  uint64_t v166 = sub_1ACE750A8();
  uint64_t v6 = *(void *)(v166 - 8);
  MEMORY[0x1F4188790](v166);
  v165 = (char *)&v147 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  v164 = (char *)&v147 - v9;
  uint64_t v10 = a1[1];
  uint64_t result = sub_1ACE777B8();
  v158 = (char *)v10;
  if (result < v10)
  {
    if (v10 >= 0) {
      uint64_t v12 = v10;
    }
    else {
      uint64_t v12 = v10 + 1;
    }
    if (v10 >= -1)
    {
      uint64_t v151 = result;
      uint64_t v159 = v3;
      if (v10 < 2)
      {
        BOOL v15 = (char *)(MEMORY[0x1E4FBC860] + 32);
        uint64_t v150 = MEMORY[0x1E4FBC860];
        if (v10 != 1)
        {
          unint64_t v36 = *(void *)(MEMORY[0x1E4FBC860] + 16);
          uint64_t v34 = (char *)MEMORY[0x1E4FBC860];
          if (v36 < 2) {
            goto LABEL_118;
          }
          goto LABEL_105;
        }
      }
      else
      {
        uint64_t v13 = v12 >> 1;
        __swift_instantiateConcreteTypeFromMangledName(a2);
        uint64_t v14 = sub_1ACE76608();
        *(void *)(v14 + 16) = v13;
        uint64_t v150 = v14;
        BOOL v15 = (char *)(v14 + 32);
      }
      uint64_t v32 = 0;
      v148 = a1;
      uint64_t v33 = (void (**)(char *, uint64_t, uint64_t))*a1;
      v161 = (void (**)(char *, uint64_t))(v6 + 16);
      v160 = (void (**)(char *, uint64_t))(v6 + 8);
      v149 = (void (**)(void, void, void))(v33 + 8);
      uint64_t v34 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v35 = v158;
      v162 = v33;
      v152 = v15;
      while (1)
      {
        uint64_t v37 = v32;
        uint64_t v38 = v32 + 1;
        uint64_t v155 = v32;
        if (v32 + 1 < (uint64_t)v35)
        {
          v153 = v34;
          uint64_t v39 = &v33[3 * v38];
          uint64_t v40 = v39[2];
          v170 = (void (*)(char *, uint64_t))v39[1];
          uint64_t v41 = &v33[3 * v32];
          uint64_t v42 = v41[2];
          v169 = v41[1];
          uint64_t v43 = (uint64_t)v40 + *(void *)(*(void *)v40 + 136);
          swift_beginAccess();
          uint64_t v44 = *v161;
          uint64_t v45 = v164;
          uint64_t v46 = v166;
          ((void (*)(char *, uint64_t, uint64_t))*v161)(v164, v43, v166);
          uint64_t v47 = (uint64_t)v42 + *(void *)(*(void *)v42 + 136);
          swift_beginAccess();
          uint64_t v48 = v165;
          uint64_t v35 = v158;
          v156 = (char *)v44;
          ((void (*)(char *, uint64_t, uint64_t))v44)(v165, v47, v46);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          LODWORD(v167) = sub_1ACE75028();
          uint64_t v49 = *v160;
          (*v160)(v48, v46);
          uint64_t v50 = v45;
          uint64_t v37 = v155;
          v154 = v49;
          v49(v50, v46);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v38 = v37 + 2;
          if (v37 + 2 < (uint64_t)v35)
          {
            long long v51 = (uint64_t *)&v149[3 * v37];
            while (1)
            {
              uint64_t v163 = v38;
              uint64_t v52 = *v51;
              v170 = (void (*)(char *, uint64_t))*(v51 - 1);
              uint64_t v53 = *(v51 - 3);
              v169 = (void (*)(char *, uint64_t, uint64_t))*(v51 - 4);
              uint64_t v54 = v52 + *(void *)(*(void *)v52 + 136);
              swift_beginAccess();
              uint64_t v55 = v164;
              uint64_t v56 = v166;
              uint64_t v57 = (void (*)(char *, uint64_t, uint64_t))v156;
              ((void (*)(char *, uint64_t, uint64_t))v156)(v164, v54, v166);
              uint64_t v58 = v53 + *(void *)(*(void *)v53 + 136);
              swift_beginAccess();
              uint64_t v59 = v165;
              v57(v165, v58, v56);
              swift_bridgeObjectRetain();
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain();
              int v168 = sub_1ACE75028();
              uint64_t v60 = v154;
              v154(v59, v56);
              v60(v55, v56);
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              if ((v167 ^ v168)) {
                break;
              }
              uint64_t v38 = v163 + 1;
              v51 += 3;
              uint64_t v35 = v158;
              if (v158 == (char *)(v163 + 1))
              {
                uint64_t v38 = (uint64_t)v158;
                goto LABEL_29;
              }
            }
            uint64_t v35 = v158;
            uint64_t v38 = v163;
LABEL_29:
            uint64_t v37 = v155;
          }
          BOOL v15 = v152;
          uint64_t v34 = v153;
          uint64_t v33 = v162;
          if (v167)
          {
            if (v38 < v37) {
              goto LABEL_142;
            }
            if (v37 < v38)
            {
              uint64_t v61 = 3 * v38;
              uint64_t v62 = 3 * v37;
              uint64_t v63 = v38;
              uint64_t v64 = v37;
              do
              {
                if (v64 != --v63)
                {
                  if (!v33) {
                    goto LABEL_148;
                  }
                  long long v65 = &v33[v62];
                  long long v66 = &v33[v61];
                  uint64_t v67 = v33[v62];
                  long long v68 = *(_OWORD *)&v33[v62 + 1];
                  long long v69 = *(_OWORD *)&v33[v61 - 3];
                  v65[2] = v33[v61 - 1];
                  *(_OWORD *)long long v65 = v69;
                  *(v66 - 3) = v67;
                  *((_OWORD *)v66 - 1) = v68;
                }
                ++v64;
                v61 -= 3;
                v62 += 3;
              }
              while (v64 < v63);
            }
          }
        }
        if (v38 < (uint64_t)v35)
        {
          if (__OFSUB__(v38, v37)) {
            goto LABEL_140;
          }
          if (v38 - v37 < v151)
          {
            if (__OFADD__(v37, v151)) {
              goto LABEL_143;
            }
            if (v37 + v151 >= (uint64_t)v35) {
              uint64_t v70 = v35;
            }
            else {
              uint64_t v70 = (char *)(v37 + v151);
            }
            if ((uint64_t)v70 < v37)
            {
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
              break;
            }
            if ((char *)v38 != v70)
            {
              v153 = v34;
              char v71 = (char *)&v33[3 * v38];
              v154 = (void (*)(char *, uint64_t))v70;
              do
              {
                uint64_t v73 = &v33[3 * v38];
                uint64_t v74 = (void (*)(char *, uint64_t))v73[1];
                uint64_t v75 = v73[2];
                v156 = v71;
                uint64_t v163 = v38;
                while (1)
                {
                  v170 = v74;
                  uint64_t v167 = v37;
                  uint64_t v76 = *((void *)v71 - 1);
                  v169 = (void (*)(char *, uint64_t, uint64_t))*((void *)v71 - 2);
                  uint64_t v77 = (uint64_t)v75 + *(void *)(*(void *)v75 + 136);
                  swift_beginAccess();
                  char v78 = *v161;
                  uint64_t v79 = v164;
                  uint64_t v80 = v166;
                  ((void (*)(char *, uint64_t, uint64_t))*v161)(v164, v77, v166);
                  uint64_t v81 = v76 + *(void *)(*(void *)v76 + 136);
                  swift_beginAccess();
                  char v82 = v165;
                  ((void (*)(char *, uint64_t, uint64_t))v78)(v165, v81, v80);
                  swift_bridgeObjectRetain();
                  swift_retain();
                  swift_bridgeObjectRetain();
                  swift_retain();
                  int v168 = sub_1ACE75028();
                  uint64_t v83 = *v160;
                  (*v160)(v82, v80);
                  v83(v79, v80);
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_bridgeObjectRelease();
                  if ((v168 & 1) == 0) {
                    break;
                  }
                  uint64_t v33 = v162;
                  if (!v162) {
                    goto LABEL_146;
                  }
                  uint64_t v84 = *(void *)v71;
                  uint64_t v74 = (void (*)(char *, uint64_t))*((void *)v71 + 1);
                  uint64_t v75 = (void (*)(char *, uint64_t, uint64_t))*((void *)v71 + 2);
                  *(_OWORD *)char v71 = *(_OWORD *)(v71 - 24);
                  *((void *)v71 + 2) = *((void *)v71 - 1);
                  *((void *)v71 - 2) = v74;
                  *((void *)v71 - 1) = v75;
                  *((void *)v71 - 3) = v84;
                  v71 -= 24;
                  uint64_t v37 = v167 + 1;
                  uint64_t v72 = v163;
                  if (v163 == v167 + 1) {
                    goto LABEL_49;
                  }
                }
                uint64_t v33 = v162;
                uint64_t v72 = v163;
LABEL_49:
                uint64_t v38 = v72 + 1;
                char v71 = v156 + 24;
                uint64_t v37 = v155;
              }
              while ((void (*)(char *, uint64_t))v38 != v154);
              uint64_t v38 = (uint64_t)v154;
              BOOL v15 = v152;
              uint64_t v34 = v153;
            }
          }
        }
        if (v38 < v37) {
          goto LABEL_135;
        }
        uint64_t v163 = v38;
        uint64_t v85 = v34;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v34 = v85;
        }
        else {
          uint64_t v34 = sub_1ACBE7A88(0, *((void *)v85 + 2) + 1, 1, v85);
        }
        unint64_t v87 = *((void *)v34 + 2);
        unint64_t v86 = *((void *)v34 + 3);
        unint64_t v36 = v87 + 1;
        uint64_t v33 = v162;
        if (v87 >= v86 >> 1)
        {
          v138 = sub_1ACBE7A88((char *)(v86 > 1), v87 + 1, 1, v34);
          uint64_t v33 = v162;
          uint64_t v34 = v138;
        }
        *((void *)v34 + 2) = v36;
        char v88 = v34 + 32;
        uint64_t v89 = &v34[16 * v87 + 32];
        uint64_t v90 = v163;
        *(void *)uint64_t v89 = v37;
        *((void *)v89 + 1) = v90;
        if (v87)
        {
          while (1)
          {
            unint64_t v91 = v36 - 1;
            if (v36 >= 4)
            {
              uint64_t v96 = &v88[16 * v36];
              uint64_t v97 = *((void *)v96 - 8);
              uint64_t v98 = *((void *)v96 - 7);
              BOOL v102 = __OFSUB__(v98, v97);
              uint64_t v99 = v98 - v97;
              if (v102) {
                goto LABEL_124;
              }
              uint64_t v101 = *((void *)v96 - 6);
              uint64_t v100 = *((void *)v96 - 5);
              BOOL v102 = __OFSUB__(v100, v101);
              uint64_t v94 = v100 - v101;
              char v95 = v102;
              if (v102) {
                goto LABEL_125;
              }
              unint64_t v103 = v36 - 2;
              long long v104 = &v88[16 * v36 - 32];
              uint64_t v106 = *(void *)v104;
              uint64_t v105 = *((void *)v104 + 1);
              BOOL v102 = __OFSUB__(v105, v106);
              uint64_t v107 = v105 - v106;
              if (v102) {
                goto LABEL_127;
              }
              BOOL v102 = __OFADD__(v94, v107);
              uint64_t v108 = v94 + v107;
              if (v102) {
                goto LABEL_130;
              }
              if (v108 >= v99)
              {
                v126 = &v88[16 * v91];
                uint64_t v128 = *(void *)v126;
                uint64_t v127 = *((void *)v126 + 1);
                BOOL v102 = __OFSUB__(v127, v128);
                uint64_t v129 = v127 - v128;
                if (v102) {
                  goto LABEL_134;
                }
                BOOL v119 = v94 < v129;
                goto LABEL_93;
              }
            }
            else
            {
              if (v36 != 3)
              {
                uint64_t v120 = *((void *)v34 + 4);
                uint64_t v121 = *((void *)v34 + 5);
                BOOL v102 = __OFSUB__(v121, v120);
                uint64_t v113 = v121 - v120;
                char v114 = v102;
                goto LABEL_87;
              }
              uint64_t v93 = *((void *)v34 + 4);
              uint64_t v92 = *((void *)v34 + 5);
              BOOL v102 = __OFSUB__(v92, v93);
              uint64_t v94 = v92 - v93;
              char v95 = v102;
            }
            if (v95) {
              goto LABEL_126;
            }
            unint64_t v103 = v36 - 2;
            long long v109 = &v88[16 * v36 - 32];
            uint64_t v111 = *(void *)v109;
            uint64_t v110 = *((void *)v109 + 1);
            BOOL v112 = __OFSUB__(v110, v111);
            uint64_t v113 = v110 - v111;
            char v114 = v112;
            if (v112) {
              goto LABEL_129;
            }
            long long v115 = &v88[16 * v91];
            uint64_t v117 = *(void *)v115;
            uint64_t v116 = *((void *)v115 + 1);
            BOOL v102 = __OFSUB__(v116, v117);
            uint64_t v118 = v116 - v117;
            if (v102) {
              goto LABEL_132;
            }
            if (__OFADD__(v113, v118)) {
              goto LABEL_133;
            }
            if (v113 + v118 >= v94)
            {
              BOOL v119 = v94 < v118;
LABEL_93:
              if (v119) {
                unint64_t v91 = v103;
              }
              goto LABEL_95;
            }
LABEL_87:
            if (v114) {
              goto LABEL_128;
            }
            v122 = &v88[16 * v91];
            uint64_t v124 = *(void *)v122;
            uint64_t v123 = *((void *)v122 + 1);
            BOOL v102 = __OFSUB__(v123, v124);
            uint64_t v125 = v123 - v124;
            if (v102) {
              goto LABEL_131;
            }
            if (v125 < v113) {
              goto LABEL_21;
            }
LABEL_95:
            unint64_t v130 = v91 - 1;
            if (v91 - 1 >= v36)
            {
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
              goto LABEL_144;
            }
            if (!v33) {
              goto LABEL_147;
            }
            v131 = v34;
            v132 = &v88[16 * v130];
            uint64_t v133 = *(void *)v132;
            v134 = &v88[16 * v91];
            uint64_t v135 = *((void *)v134 + 1);
            uint64_t v136 = v159;
            sub_1ACDCC788((char *)&v33[3 * *(void *)v132], (char *)&v33[3 * *(void *)v134], (unint64_t)&v33[3 * v135], v15, v157);
            uint64_t v159 = v136;
            if (v136) {
              goto LABEL_118;
            }
            if (v135 < v133) {
              goto LABEL_121;
            }
            if (v91 > *((void *)v131 + 2)) {
              goto LABEL_122;
            }
            *(void *)v132 = v133;
            *(void *)&v88[16 * v130 + 8] = v135;
            unint64_t v137 = *((void *)v131 + 2);
            if (v91 >= v137) {
              goto LABEL_123;
            }
            unint64_t v36 = v137 - 1;
            memmove(&v88[16 * v91], v134 + 16, 16 * (v137 - 1 - v91));
            uint64_t v34 = v131;
            *((void *)v131 + 2) = v137 - 1;
            uint64_t v33 = v162;
            if (v137 <= 2) {
              goto LABEL_21;
            }
          }
        }
        unint64_t v36 = 1;
LABEL_21:
        uint64_t v35 = v158;
        uint64_t v32 = v163;
        if (v163 >= (uint64_t)v158)
        {
          a1 = v148;
          if (v36 < 2)
          {
LABEL_118:
            swift_bridgeObjectRelease();
            *(void *)(v150 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
LABEL_105:
          uint64_t v139 = *a1;
          while (1)
          {
            unint64_t v140 = v36 - 2;
            if (v36 < 2) {
              goto LABEL_136;
            }
            if (!v139) {
              goto LABEL_149;
            }
            v141 = v34;
            uint64_t v142 = *(void *)&v34[16 * v140 + 32];
            uint64_t v143 = *(void *)&v34[16 * v36 + 24];
            uint64_t v144 = v159;
            sub_1ACDCC788((char *)(v139 + 24 * v142), (char *)(v139 + 24 * *(void *)&v34[16 * v36 + 16]), v139 + 24 * v143, v15, v157);
            uint64_t v159 = v144;
            if (v144) {
              goto LABEL_118;
            }
            if (v143 < v142) {
              goto LABEL_137;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              v141 = sub_1ACBE8028((uint64_t)v141);
            }
            if (v140 >= *((void *)v141 + 2)) {
              goto LABEL_138;
            }
            v145 = &v141[16 * v140 + 32];
            *(void *)v145 = v142;
            *((void *)v145 + 1) = v143;
            unint64_t v146 = *((void *)v141 + 2);
            if (v36 > v146) {
              goto LABEL_139;
            }
            memmove(&v141[16 * v36 + 16], &v141[16 * v36 + 32], 16 * (v146 - v36));
            uint64_t v34 = v141;
            *((void *)v141 + 2) = v146 - 1;
            unint64_t v36 = v146 - 1;
            if (v146 <= 2) {
              goto LABEL_118;
            }
          }
        }
      }
    }
    uint64_t result = sub_1ACE77488();
    __break(1u);
    return result;
  }
  if (v10 < 0) {
    goto LABEL_141;
  }
  if ((unint64_t)v10 >= 2)
  {
    uint64_t v159 = v3;
    v162 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v161 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v163 = *a1;
    unint64_t v16 = (void (**)(char *, uint64_t))(v163 + 24);
    uint64_t v17 = -1;
    uint64_t v18 = 1;
    uint64_t v19 = v164;
    uint64_t v20 = v166;
    uint64_t v21 = v165;
    do
    {
      v156 = (char *)v18;
      uint64_t v22 = v163 + 24 * v18;
      unint64_t v23 = *(void (**)(char *, uint64_t))(v22 + 8);
      uint64_t v24 = *(void (**)(char *, uint64_t))(v22 + 16);
      uint64_t v157 = v17;
      uint64_t v167 = v17;
      v160 = v16;
      do
      {
        v170 = v23;
        uint64_t v25 = (uint64_t)*(v16 - 1);
        v169 = (void (*)(char *, uint64_t, uint64_t))*(v16 - 2);
        uint64_t v26 = (uint64_t)v24 + *(void *)(*(void *)v24 + 136);
        swift_beginAccess();
        uint64_t v27 = *v162;
        (*v162)(v19, v26, v20);
        uint64_t v28 = v25 + *(void *)(*(void *)v25 + 136);
        swift_beginAccess();
        v27(v21, v28, v20);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        int v168 = sub_1ACE75028();
        uint64_t v29 = *v161;
        (*v161)(v21, v20);
        v29(v19, v20);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t result = swift_bridgeObjectRelease();
        if ((v168 & 1) == 0) {
          break;
        }
        if (!v163) {
          goto LABEL_145;
        }
        uint64_t v30 = *v16;
        unint64_t v23 = v16[1];
        uint64_t v24 = v16[2];
        *(_OWORD *)unint64_t v16 = *(_OWORD *)(v16 - 3);
        v16[2] = *(v16 - 1);
        *(v16 - 2) = v23;
        *(v16 - 1) = v24;
        *(v16 - 3) = v30;
        v16 -= 3;
      }
      while (!__CFADD__(v167++, 1));
      uint64_t v18 = (uint64_t)(v156 + 1);
      unint64_t v16 = v160 + 3;
      uint64_t v17 = v157 - 1;
    }
    while (v156 + 1 != v158);
  }
  return result;
}

uint64_t sub_1ACDCC788(char *a1, char *a2, unint64_t a3, char *a4, uint64_t a5)
{
  v53[0] = a5;
  uint64_t v63 = sub_1ACE750A8();
  uint64_t v9 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v62 = (char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v61 = (char *)v53 - v12;
  uint64_t v13 = a2 - a1;
  uint64_t v14 = (a2 - a1) / 24;
  unint64_t v58 = a3;
  uint64_t v15 = a3 - (void)a2;
  uint64_t v16 = v15 / 24;
  long long v69 = a1;
  long long v68 = a4;
  if (v14 >= v15 / 24)
  {
    if (v15 >= -23)
    {
      if (a4 != a2 || &a2[24 * v16] <= a4) {
        memmove(a4, a2, 24 * v16);
      }
      uint64_t v31 = &a4[24 * v16];
      uint64_t v67 = v31;
      long long v69 = a2;
      if (v15 >= 24 && a1 < a2)
      {
        uint64_t v54 = (void (**)(char *, uint64_t))(v9 + 8);
        uint64_t v55 = (void (**)(char *, uint64_t))(v9 + 16);
        uint64_t v32 = (char *)(v58 - 24);
        uint64_t v64 = a4;
        long long v65 = a1;
        uint64_t v34 = v61;
        uint64_t v33 = v62;
        uint64_t v35 = v63;
        while (1)
        {
          long long v66 = a2;
          unint64_t v58 = (unint64_t)v32;
          uint64_t v59 = v31;
          uint64_t v60 = v32 + 24;
          uint64_t v39 = *((void *)v31 - 1);
          uint64_t v40 = (char *)*((void *)a2 - 2);
          uint64_t v41 = *((void *)a2 - 1);
          uint64_t v57 = v40;
          uint64_t v42 = v39 + *(void *)(*(void *)v39 + 136);
          swift_beginAccess();
          uint64_t v43 = *v55;
          ((void (*)(char *, uint64_t, uint64_t))*v55)(v34, v42, v35);
          uint64_t v44 = v41 + *(void *)(*(void *)v41 + 136);
          swift_beginAccess();
          ((void (*)(char *, uint64_t, uint64_t))v43)(v33, v44, v35);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          LODWORD(v56) = sub_1ACE75028();
          uint64_t v45 = *v54;
          (*v54)(v33, v35);
          v45(v34, v35);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          if (v56)
          {
            uint64_t v46 = v59;
            uint64_t v37 = v66 - 24;
            uint64_t v47 = (_OWORD *)v58;
            if (v60 != v66 || v58 >= (unint64_t)v66)
            {
              long long v48 = *(_OWORD *)v37;
              *(void *)(v58 + 16) = *((void *)v66 - 1);
              *uint64_t v47 = v48;
            }
            long long v69 = v37;
            unint64_t v38 = (unint64_t)v65;
            uint64_t v31 = v46;
            if (v46 <= v64) {
              goto LABEL_41;
            }
          }
          else
          {
            uint64_t v49 = v66;
            uint64_t v31 = v59 - 24;
            uint64_t v67 = v59 - 24;
            uint64_t v47 = (_OWORD *)v58;
            if (v60 < v59 || v58 >= (unint64_t)v59)
            {
              long long v36 = *(_OWORD *)v31;
              *(void *)(v58 + 16) = *((void *)v59 - 1);
              *uint64_t v47 = v36;
              uint64_t v37 = v49;
              unint64_t v38 = (unint64_t)v65;
              if (v31 <= v64) {
                goto LABEL_41;
              }
            }
            else
            {
              unint64_t v50 = (unint64_t)v64;
              unint64_t v38 = (unint64_t)v65;
              if (v60 != v59)
              {
                long long v51 = *(_OWORD *)v31;
                *(void *)(v58 + 16) = *((void *)v59 - 1);
                *uint64_t v47 = v51;
              }
              uint64_t v37 = v49;
              if ((unint64_t)v31 <= v50) {
                goto LABEL_41;
              }
            }
          }
          uint64_t v32 = (char *)v47 - 24;
          a2 = v37;
          if ((unint64_t)v37 <= v38) {
            goto LABEL_41;
          }
        }
      }
      goto LABEL_41;
    }
  }
  else if (v13 >= -23)
  {
    if (a4 != a1 || &a1[24 * v14] <= a4) {
      memmove(a4, a1, 24 * v14);
    }
    uint64_t v57 = &a4[24 * v14];
    uint64_t v67 = v57;
    if (v13 >= 24 && (unint64_t)a2 < v58)
    {
      uint64_t v55 = (void (**)(char *, uint64_t))(v9 + 8);
      uint64_t v56 = (void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      uint64_t v17 = v62;
      do
      {
        long long v65 = a1;
        long long v66 = a2;
        uint64_t v64 = a4;
        uint64_t v18 = *((void *)a2 + 2);
        uint64_t v19 = *((void *)a4 + 2);
        uint64_t v60 = (char *)*((void *)a4 + 1);
        uint64_t v20 = v18 + *(void *)(*(void *)v18 + 136);
        swift_beginAccess();
        uint64_t v21 = *v56;
        uint64_t v22 = v61;
        uint64_t v23 = v63;
        (*v56)(v61, v20, v63);
        uint64_t v24 = v19 + *(void *)(*(void *)v19 + 136);
        swift_beginAccess();
        v21(v17, v24, v23);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        LODWORD(v59) = sub_1ACE75028();
        uint64_t v25 = *v55;
        (*v55)(v17, v23);
        v25(v22, v23);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        if (v59)
        {
          a4 = v64;
          uint64_t v26 = v65;
          uint64_t v27 = v66 + 24;
          if (v65 < v66 || v65 >= v27 || v65 != v66)
          {
            long long v28 = *(_OWORD *)v66;
            *((void *)v65 + 2) = *((void *)v66 + 2);
            *uint64_t v26 = v28;
          }
        }
        else
        {
          uint64_t v26 = v65;
          uint64_t v29 = v66;
          a4 = v64 + 24;
          if (v65 != v64 || v65 >= a4)
          {
            long long v30 = *(_OWORD *)v64;
            *((void *)v65 + 2) = *((void *)v64 + 2);
            *uint64_t v26 = v30;
          }
          long long v68 = a4;
          uint64_t v27 = v29;
        }
        a1 = (char *)v26 + 24;
        long long v69 = a1;
        if (a4 >= v57) {
          break;
        }
        a2 = v27;
      }
      while ((unint64_t)v27 < v58);
    }
LABEL_41:
    ((void (*)(char **, char **, char **))v53[0])(&v69, &v68, &v67);
    return 1;
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

void sub_1ACDCCDF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v4;
  v8[2] = *(_OWORD *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 48);
  sub_1ACDC8E94((uint64_t)v8, a3);
  uint64_t v5 = *(os_unfair_lock_s **)(*(void *)(a1 + qword_1EB772BF8) + 16);
  uint64_t v6 = (uint64_t)&v5[4];
  uint64_t v7 = v5 + 10;
  os_unfair_lock_lock(v5 + 10);
  sub_1ACDBF854(v6);
  os_unfair_lock_unlock(v7);
}

void sub_1ACDCCE88(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_1ACDC95C4(*a2, a3);
  long long v4 = *(os_unfair_lock_s **)(*(void *)(a1 + qword_1EB772BF8) + 16);
  uint64_t v5 = (uint64_t)&v4[4];
  uint64_t v6 = v4 + 10;
  os_unfair_lock_lock(v4 + 10);
  sub_1ACDBF7F0(v5);
  os_unfair_lock_unlock(v6);
}

void sub_1ACDCCF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v5 = *(_OWORD *)(a3 + 16);
  v9[0] = *(_OWORD *)a3;
  v9[1] = v5;
  uint64_t v10 = *(void *)(a3 + 32);
  sub_1ACDC9CF8(a2, (uint64_t)v9, a4, (void (*)(void))type metadata accessor for ShazamSignatureRequest, &qword_1E99F5C40, (void (*)(uint64_t))type metadata accessor for ShazamSignatureRequest, (uint64_t)&protocol conformance descriptor for ShazamSignatureRequest);
  uint64_t v6 = *(os_unfair_lock_s **)(*(void *)(a1 + qword_1EB772BF8) + 16);
  uint64_t v7 = (uint64_t)&v6[4];
  uint64_t v8 = v6 + 10;
  os_unfair_lock_lock(v6 + 10);
  sub_1ACDCE5B0(v7);
  os_unfair_lock_unlock(v8);
}

id sub_1ACDCCFF4(void *a1, uint64_t a2)
{
  objc_msgSend(a1, sel_setSessionSendsLaunchEvents_, 1);
  objc_msgSend(a1, sel_setDiscretionary_, 1);
  objc_msgSend(a1, sel_setSharedContainerIdentifier_, @"243LU875E5.groups.com.apple.podcasts");
  id v4 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, a1, a2, 0);
  return v4;
}

_UNKNOWN **sub_1ACDCD090()
{
  return &protocol witness table for ShazamSignatureRequest;
}

_UNKNOWN **sub_1ACDCD09C()
{
  return &protocol witness table for ShazamSignatureRequest;
}

uint64_t sub_1ACDCD0A8()
{
  return sub_1ACDCD0F0(&qword_1E99F5C38, (void (*)(uint64_t))type metadata accessor for ShazamSignatureRequest);
}

uint64_t sub_1ACDCD0F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACDCD138()
{
  return sub_1ACDCD0F0(&qword_1E99F5C40, (void (*)(uint64_t))type metadata accessor for ShazamSignatureRequest);
}

uint64_t *initializeBufferWithCopyOfBuffer for ShazamSignatureBackgroundSessionDescriptor(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = *(int *)(v4 + 60);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1ACE74F28();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
    uint64_t v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
    *(void *)&v8[v12[15]] = *(void *)&v9[v12[15]];
    *(void *)&v8[v12[16]] = *(void *)&v9[v12[16]];
    *(void *)&v8[v12[17]] = *(void *)&v9[v12[17]];
    *(void *)&v8[v12[18]] = *(void *)&v9[v12[18]];
    *(void *)&v8[v12[19]] = *(void *)&v9[v12[19]];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return a1;
}

uint64_t destroy for ShazamSignatureBackgroundSessionDescriptor(uint64_t a1)
{
  swift_release();
  uint64_t v2 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050) + 60);
  uint64_t v3 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for ShazamSignatureBackgroundSessionDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050) + 60);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  uint64_t v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  *(void *)&v5[v8[15]] = *(void *)&v6[v8[15]];
  *(void *)&v5[v8[16]] = *(void *)&v6[v8[16]];
  *(void *)&v5[v8[17]] = *(void *)&v6[v8[17]];
  *(void *)&v5[v8[18]] = *(void *)&v6[v8[18]];
  *(void *)&v5[v8[19]] = *(void *)&v6[v8[19]];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ShazamSignatureBackgroundSessionDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050) + 60);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  uint64_t v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  *(void *)&v5[v8[15]] = *(void *)&v6[v8[15]];
  swift_retain();
  swift_release();
  *(void *)&v5[v8[16]] = *(void *)&v6[v8[16]];
  swift_retain();
  swift_release();
  *(void *)&v5[v8[17]] = *(void *)&v6[v8[17]];
  swift_retain();
  swift_release();
  *(void *)&v5[v8[18]] = *(void *)&v6[v8[18]];
  swift_retain();
  swift_release();
  *(void *)&v5[v8[19]] = *(void *)&v6[v8[19]];
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for ShazamSignatureBackgroundSessionDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050) + 60);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  *(void *)&v5[v8[15]] = *(void *)&v6[v8[15]];
  *(void *)&v5[v8[16]] = *(void *)&v6[v8[16]];
  *(void *)&v5[v8[17]] = *(void *)&v6[v8[17]];
  *(void *)&v5[v8[18]] = *(void *)&v6[v8[18]];
  *(void *)&v5[v8[19]] = *(void *)&v6[v8[19]];
  return a1;
}

void *assignWithTake for ShazamSignatureBackgroundSessionDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050) + 60);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  uint64_t v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  *(void *)&v5[v8[15]] = *(void *)&v6[v8[15]];
  swift_release();
  *(void *)&v5[v8[16]] = *(void *)&v6[v8[16]];
  swift_release();
  *(void *)&v5[v8[17]] = *(void *)&v6[v8[17]];
  swift_release();
  *(void *)&v5[v8[18]] = *(void *)&v6[v8[18]];
  swift_release();
  *(void *)&v5[v8[19]] = *(void *)&v6[v8[19]];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShazamSignatureBackgroundSessionDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACDCD7E0);
}

uint64_t sub_1ACDCD7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ShazamSignatureBackgroundSessionDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACDCD864);
}

uint64_t sub_1ACDCD864(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ShazamSignatureBackgroundSessionDescriptor()
{
  uint64_t result = qword_1EB770120;
  if (!qword_1EB770120) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1ACDCD924()
{
  sub_1ACDB5958();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1ACDCD9B0()
{
  uint64_t v1 = type metadata accessor for TTMLRequest();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  swift_release();
  sub_1ACA50850(*(void *)(v0 + 48), *(void *)(v0 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v2 + *(int *)(v1 + 36);
  if (*(void *)(v7 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v7);
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v2 + v3 + v6) & ~v6), v4);
  return swift_deallocObject();
}

void sub_1ACDCDB70()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTMLRequest() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1ACE74F28();
  uint64_t v3 = *(void *)(v0 + 16);
  sub_1ACDCCDF0(v3, v0 + 24, v0 + v2);
}

uint64_t sub_1ACDCDC44(unint64_t *a1)
{
  return sub_1ACDCB2D8(a1, v1[2], v1[3], v1[4]);
}

void sub_1ACDCDC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v5 = *(_OWORD *)(a3 + 16);
  v9[0] = *(_OWORD *)a3;
  v9[1] = v5;
  uint64_t v10 = *(void *)(a3 + 32);
  sub_1ACDC9CF8(a2, (uint64_t)v9, a4, (void (*)(void))type metadata accessor for TTMLRequest, &qword_1E99F5CE0, (void (*)(uint64_t))type metadata accessor for TTMLRequest, (uint64_t)&protocol conformance descriptor for TTMLRequest);
  uint64_t v6 = *(os_unfair_lock_s **)(*(void *)(a1 + qword_1EB772BF8) + 16);
  uint64_t v7 = (uint64_t)&v6[4];
  uint64_t v8 = v6 + 10;
  os_unfair_lock_lock(v6 + 10);
  sub_1ACDCEBC4(v7);
  os_unfair_lock_unlock(v8);
}

uint64_t sub_1ACDCDD50(uint64_t a1, uint64_t a2, uint64_t (*a3)(unint64_t))
{
  unint64_t v5 = sub_1ACDC8380();
  uint64_t v6 = a3(v5);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6)
  {
    unint64_t v8 = *(void *)(v6 + *(void *)(*(void *)v6 + 128));
    uint64_t result = swift_release();
    unint64_t v9 = *(void *)(a1 + 8);
    BOOL v10 = v9 >= v8;
    unint64_t v11 = v9 - v8;
    if (v10) {
      *(void *)(a1 + 8) = v11;
    }
    else {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1ACDCDE00(unint64_t a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a2 < a1) {
    return v3 >= a1;
  }
  uint64_t v5 = a2[2];
  if (*a2 == a1)
  {
    swift_bridgeObjectRelease();
    unint64_t v6 = MEMORY[0x1E4FBC868];
    a2[1] = 0;
    a2[2] = v6;
    return v3 >= a1;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1ACD0AC70(v5);
  swift_bridgeObjectRelease();
  uint64_t v29 = v7;
  sub_1ACDCA3E8((uint64_t *)&v29, (uint64_t (*)(uint64_t))sub_1ACBE808C, &qword_1E99F4688, (uint64_t)sub_1ACBE7DC8);
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t)v29;
  uint64_t v9 = v29[2];
  if (!v9)
  {
LABEL_20:
    swift_release();
    return v3 >= a1;
  }
  unint64_t v10 = a2[1];
  BOOL v11 = __CFADD__(v10, a1);
  unint64_t v12 = v10 + a1;
  if (!v11)
  {
    if (v3 < v12)
    {
      uint64_t v13 = 0;
      uint64_t v14 = v29 + 6;
      unint64_t v27 = v3;
      uint64_t v28 = v9 - 1;
      while (1)
      {
        uint64_t v16 = *(v14 - 1);
        uint64_t v15 = *v14;
        uint64_t v17 = *(v14 - 2);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_1ACA657FC(v17, v16);
        LOBYTE(v17) = v19;
        swift_bridgeObjectRelease();
        if (v17)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v21 = a2[2];
          uint64_t v29 = (void *)v21;
          a2[2] = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1ACD06108();
            uint64_t v21 = (uint64_t)v29;
          }
          swift_bridgeObjectRelease();
          sub_1ACB1B6A4(v18, v21);
          a2[2] = v21;
          swift_bridgeObjectRelease();
          swift_release();
        }
        swift_bridgeObjectRelease();
        unint64_t v22 = *(void *)(v15 + 72);
        swift_release();
        unint64_t v23 = a2[1];
        BOOL v11 = v23 >= v22;
        unint64_t v24 = v23 - v22;
        if (!v11) {
          break;
        }
        a2[1] = v24;
        if (v28 == v13) {
          goto LABEL_21;
        }
        if ((unint64_t)++v13 >= *(void *)(v8 + 16)) {
          goto LABEL_23;
        }
        BOOL v11 = __CFADD__(v24, a1);
        unint64_t v25 = v24 + a1;
        if (v11) {
          goto LABEL_24;
        }
        v14 += 3;
        if (*a2 >= v25)
        {
LABEL_21:
          swift_release();
          unint64_t v3 = v27;
          return v3 >= a1;
        }
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1ACDCE064()
{
  uint64_t v1 = type metadata accessor for ShazamSignatureRequest();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  swift_release();

  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v2 + *(int *)(v1 + 36);
  if (*(void *)(v7 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v7);
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v2 + v3 + v6) & ~v6), v4);
  return swift_deallocObject();
}

void sub_1ACDCE214()
{
  uint64_t v1 = *(void *)(type metadata accessor for ShazamSignatureRequest() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1ACE74F28();
  uint64_t v3 = *(void *)(v0 + 16);
  sub_1ACDCCE88(v3, (uint64_t *)(v0 + 24), v0 + v2);
}

uint64_t sub_1ACDCE2E8(unint64_t *a1)
{
  return sub_1ACDCB400(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1ACDCE308(unint64_t a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a2 < a1) {
    return v3 >= a1;
  }
  uint64_t v5 = a2[2];
  if (*a2 == a1)
  {
    swift_bridgeObjectRelease();
    unint64_t v6 = MEMORY[0x1E4FBC868];
    a2[1] = 0;
    a2[2] = v6;
    return v3 >= a1;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1ACD0AC7C(v5);
  swift_bridgeObjectRelease();
  uint64_t v29 = v7;
  sub_1ACDCA3E8((uint64_t *)&v29, (uint64_t (*)(uint64_t))sub_1ACBE80A0, &qword_1E99F46B0, (uint64_t)sub_1ACBE7DC8);
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t)v29;
  uint64_t v9 = v29[2];
  if (!v9)
  {
LABEL_20:
    swift_release();
    return v3 >= a1;
  }
  unint64_t v10 = a2[1];
  BOOL v11 = __CFADD__(v10, a1);
  unint64_t v12 = v10 + a1;
  if (!v11)
  {
    if (v3 < v12)
    {
      uint64_t v13 = 0;
      uint64_t v14 = v29 + 6;
      unint64_t v27 = v3;
      uint64_t v28 = v9 - 1;
      while (1)
      {
        uint64_t v16 = *(v14 - 1);
        uint64_t v15 = *v14;
        uint64_t v17 = *(v14 - 2);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_1ACA657FC(v17, v16);
        LOBYTE(v17) = v19;
        swift_bridgeObjectRelease();
        if (v17)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v21 = a2[2];
          uint64_t v29 = (void *)v21;
          a2[2] = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1ACD06114();
            uint64_t v21 = (uint64_t)v29;
          }
          swift_bridgeObjectRelease();
          sub_1ACB1B6A4(v18, v21);
          a2[2] = v21;
          swift_bridgeObjectRelease();
          swift_release();
        }
        swift_bridgeObjectRelease();
        unint64_t v22 = *(void *)(v15 + 24);
        swift_release();
        unint64_t v23 = a2[1];
        BOOL v11 = v23 >= v22;
        unint64_t v24 = v23 - v22;
        if (!v11) {
          break;
        }
        a2[1] = v24;
        if (v28 == v13) {
          goto LABEL_21;
        }
        if ((unint64_t)++v13 >= *(void *)(v8 + 16)) {
          goto LABEL_23;
        }
        BOOL v11 = __CFADD__(v24, a1);
        unint64_t v25 = v24 + a1;
        if (v11) {
          goto LABEL_24;
        }
        v14 += 3;
        if (*a2 >= v25)
        {
LABEL_21:
          swift_release();
          unint64_t v3 = v27;
          return v3 >= a1;
        }
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1ACDCE56C()
{
  return objectdestroy_9Tm_0((uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
}

uint64_t sub_1ACDCE584()
{
  return sub_1ACDCEAC8((uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))sub_1ACDCCF08);
}

uint64_t sub_1ACDCE5B0(uint64_t a1)
{
  return sub_1ACDCDD50(a1, *(void *)(v1 + 16), (uint64_t (*)(unint64_t))sub_1ACA69A94);
}

uint64_t sub_1ACDCE5E0(uint64_t a1)
{
  return sub_1ACDCEC48(a1, (uint64_t (*)(unint64_t))sub_1ACA69A94, (uint64_t (*)(void, uint64_t))sub_1ACDCE634, (void (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_1ACD0F398);
}

uint64_t sub_1ACDCE634(unint64_t a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a2 < a1) {
    return v3 >= a1;
  }
  uint64_t v5 = a2[2];
  if (*a2 == a1)
  {
    swift_bridgeObjectRelease();
    unint64_t v6 = MEMORY[0x1E4FBC868];
    a2[1] = 0;
    a2[2] = v6;
    return v3 >= a1;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1ACD0B514(v5);
  swift_bridgeObjectRelease();
  uint64_t v29 = v7;
  sub_1ACDCA3E8((uint64_t *)&v29, (uint64_t (*)(uint64_t))sub_1ACBE80F0, &qword_1E99F46C0, (uint64_t)sub_1ACBE7DC8);
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t)v29;
  uint64_t v9 = v29[2];
  if (!v9)
  {
LABEL_20:
    swift_release();
    return v3 >= a1;
  }
  unint64_t v10 = a2[1];
  BOOL v11 = __CFADD__(v10, a1);
  unint64_t v12 = v10 + a1;
  if (!v11)
  {
    if (v3 < v12)
    {
      uint64_t v13 = 0;
      uint64_t v14 = v29 + 6;
      unint64_t v27 = v3;
      uint64_t v28 = v9 - 1;
      while (1)
      {
        uint64_t v16 = *(v14 - 1);
        uint64_t v15 = *v14;
        uint64_t v17 = *(v14 - 2);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_1ACA657FC(v17, v16);
        LOBYTE(v17) = v19;
        swift_bridgeObjectRelease();
        if (v17)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v21 = a2[2];
          uint64_t v29 = (void *)v21;
          a2[2] = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1ACD09BEC();
            uint64_t v21 = (uint64_t)v29;
          }
          swift_bridgeObjectRelease();
          sub_1ACB1B6A4(v18, v21);
          a2[2] = v21;
          swift_bridgeObjectRelease();
          swift_release();
        }
        swift_bridgeObjectRelease();
        unint64_t v22 = *(void *)(v15 + *(void *)(*(void *)v15 + 128));
        swift_release();
        unint64_t v23 = a2[1];
        BOOL v11 = v23 >= v22;
        unint64_t v24 = v23 - v22;
        if (!v11) {
          break;
        }
        a2[1] = v24;
        if (v28 == v13) {
          goto LABEL_21;
        }
        if ((unint64_t)++v13 >= *(void *)(v8 + 16)) {
          goto LABEL_23;
        }
        BOOL v11 = __CFADD__(v24, a1);
        unint64_t v25 = v24 + a1;
        if (v11) {
          goto LABEL_24;
        }
        v14 += 3;
        if (*a2 >= v25)
        {
LABEL_21:
          swift_release();
          unint64_t v3 = v27;
          return v3 >= a1;
        }
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1ACDCE8AC()
{
  return objectdestroy_9Tm_0((uint64_t (*)(void))type metadata accessor for TTMLRequest);
}

uint64_t objectdestroy_9Tm_0(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(*(void *)(v2 - 8) + 64);
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  swift_release();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v1 + v4, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1 + v4, v6);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = v1 + v4 + *(int *)(v2 + 36);
  if (*(void *)(v9 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v9);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v1 + ((((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + v8 + 40) & ~v8), v6);
  return swift_deallocObject();
}

uint64_t sub_1ACDCEA9C()
{
  return sub_1ACDCEAC8((uint64_t (*)(void))type metadata accessor for TTMLRequest, (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))sub_1ACDCDC64);
}

uint64_t sub_1ACDCEAC8(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t, unint64_t, unint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(sub_1ACE74F28() - 8);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = v2 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a2(v7, v2 + v4, v2 + v5, v8);
}

uint64_t sub_1ACDCEBC4(uint64_t a1)
{
  return sub_1ACDCDD50(a1, *(void *)(v1 + 16), (uint64_t (*)(unint64_t))sub_1ACA69AC0);
}

uint64_t sub_1ACDCEBF4(uint64_t a1)
{
  return sub_1ACDCEC48(a1, (uint64_t (*)(unint64_t))sub_1ACA69AC0, (uint64_t (*)(void, uint64_t))sub_1ACDCEC90, (void (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_1ACD0F3A4);
}

uint64_t sub_1ACDCEC48(uint64_t a1, uint64_t (*a2)(unint64_t), uint64_t (*a3)(void, uint64_t), void (*a4)(uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = v4[2];
  uint64_t v7 = v4[3];
  uint64_t v9 = v4[4];
  long long v10 = *(_OWORD *)(v8 + 16);
  v12[0] = *(_OWORD *)v8;
  v12[1] = v10;
  uint64_t v13 = *(void *)(v8 + 32);
  return sub_1ACDCB528(a1, (uint64_t)v12, v7, v9, a2, a3, a4);
}

uint64_t sub_1ACDCEC90(unint64_t a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a2 < a1) {
    return v3 >= a1;
  }
  uint64_t v5 = a2[2];
  if (*a2 == a1)
  {
    swift_bridgeObjectRelease();
    unint64_t v6 = MEMORY[0x1E4FBC868];
    a2[1] = 0;
    a2[2] = v6;
    return v3 >= a1;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1ACD0B520(v5);
  swift_bridgeObjectRelease();
  uint64_t v29 = v7;
  sub_1ACDCA3E8((uint64_t *)&v29, (uint64_t (*)(uint64_t))sub_1ACBE8104, &qword_1E99F46D0, (uint64_t)sub_1ACBE7DC8);
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t)v29;
  uint64_t v9 = v29[2];
  if (!v9)
  {
LABEL_20:
    swift_release();
    return v3 >= a1;
  }
  unint64_t v10 = a2[1];
  BOOL v11 = __CFADD__(v10, a1);
  unint64_t v12 = v10 + a1;
  if (!v11)
  {
    if (v3 < v12)
    {
      uint64_t v13 = 0;
      uint64_t v14 = v29 + 6;
      unint64_t v27 = v3;
      uint64_t v28 = v9 - 1;
      while (1)
      {
        uint64_t v16 = *(v14 - 1);
        uint64_t v15 = *v14;
        uint64_t v17 = *(v14 - 2);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_1ACA657FC(v17, v16);
        LOBYTE(v17) = v19;
        swift_bridgeObjectRelease();
        if (v17)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v21 = a2[2];
          uint64_t v29 = (void *)v21;
          a2[2] = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1ACD09BF8();
            uint64_t v21 = (uint64_t)v29;
          }
          swift_bridgeObjectRelease();
          sub_1ACB1B6A4(v18, v21);
          a2[2] = v21;
          swift_bridgeObjectRelease();
          swift_release();
        }
        swift_bridgeObjectRelease();
        unint64_t v22 = *(void *)(v15 + *(void *)(*(void *)v15 + 128));
        swift_release();
        unint64_t v23 = a2[1];
        BOOL v11 = v23 >= v22;
        unint64_t v24 = v23 - v22;
        if (!v11) {
          break;
        }
        a2[1] = v24;
        if (v28 == v13) {
          goto LABEL_21;
        }
        if ((unint64_t)++v13 >= *(void *)(v8 + 16)) {
          goto LABEL_23;
        }
        BOOL v11 = __CFADD__(v24, a1);
        unint64_t v25 = v24 + a1;
        if (v11) {
          goto LABEL_24;
        }
        v14 += 3;
        if (*a2 >= v25)
        {
LABEL_21:
          swift_release();
          unint64_t v3 = v27;
          return v3 >= a1;
        }
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t EpisodeDownloadStateRule<>.eraseToAnyEpisodeDownloadStateRule()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)(long long *a1, long long *a2)@<X8>)
{
  __n128 v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v9, v3, a1, v7);
  return sub_1ACDCEFE8((uint64_t)v9, a1, a2, a3);
}

uint64_t sub_1ACDCEFE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)(long long *a1, long long *a2)@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v10 + v9, a1, a2);
  *a4 = sub_1ACDCFA74;
  a4[1] = (uint64_t (*)(long long *, long long *))v10;
  return result;
}

uint64_t AnyEpisodeDownloadStateRule.canMove(from:to:)(long long *a1, long long *a2)
{
  char v3 = *((unsigned char *)a1 + 16);
  char v4 = *((unsigned char *)a2 + 16);
  uint64_t v5 = *v2;
  long long v9 = *a1;
  char v10 = v3;
  long long v7 = *a2;
  char v8 = v4;
  return v5(&v9, &v7) & 1;
}

uint64_t sub_1ACDCF124(long long *a1, long long *a2)
{
  char v3 = *((unsigned char *)a1 + 16);
  char v4 = *((unsigned char *)a2 + 16);
  uint64_t v5 = *v2;
  long long v9 = *a1;
  char v10 = v3;
  long long v7 = *a2;
  char v8 = v4;
  return v5(&v9, &v7) & 1;
}

unint64_t sub_1ACDCF180()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769170);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84630;
  *(void *)(inited + 32) = 0x6E776F6E6B6E75;
  *(void *)(inited + 40) = 0xE700000000000000;
  *(void *)(inited + 48) = sub_1ACA317E4;
  *(void *)(inited + 56) = 0;
  strcpy((char *)(inited + 64), "downloadable");
  *(unsigned char *)(inited + 77) = 0;
  *(_WORD *)(inited + 78) = -5120;
  *(void *)(inited + 80) = sub_1ACA317E4;
  *(void *)(inited + 88) = 0;
  *(void *)(inited + 96) = 0x64616F6C6E776F64;
  *(void *)(inited + 104) = 0xEB00000000676E69;
  *(void *)(inited + 112) = sub_1ACDCF854;
  *(void *)(inited + 120) = 0;
  *(void *)(inited + 128) = 0x64616F6C6E776F64;
  *(void *)(inited + 136) = 0xEA00000000006465;
  *(void *)(inited + 144) = sub_1ACDCF870;
  *(void *)(inited + 152) = 0;
  unint64_t result = sub_1ACA384E0(inited);
  qword_1EB768B30 = result;
  return result;
}

uint64_t defaultEpisodeDownloadTransitionRules.getter()
{
  if (qword_1EB768B38 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t AlwaysEpisodeStateRule.canMove(from:to:)()
{
  return 1;
}

uint64_t DownloadingRules.canMove(from:to:)(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(unsigned __int8 *)(a2 + 16);
  if ((v2 & 0xC0) != 0x40) {
    goto LABEL_9;
  }
  uint64_t v4 = *(uint64_t *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned int v5 = *(char *)(a1 + 16);
  uint64_t v7 = *(uint64_t *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v8 = *(unsigned char *)(a1 + 16) >> 6;
  BOOL v9 = v8 == 3 && *(_OWORD *)a1 == 0;
  if (v9 && v5 == -64)
  {
    sub_1ACB7BB6C(0, 0, 0xC0u);
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    unsigned int v13 = 192;
LABEL_13:
    sub_1ACB7BB6C(v11, v12, v13);
    char v10 = 1;
    return v10 & 1;
  }
  sub_1ACB7BB40(*(void *)a1, v3, v5);
  sub_1ACB7BB6C(0, 0, 0xC0u);
  sub_1ACB7BB6C(v4, v3, v5);
  if ((v5 & 0x80000000) != 0)
  {
LABEL_9:
    char v10 = 0;
  }
  else
  {
    if (v8 != 1)
    {
      sub_1ACB7BB40(v4, v3, v5);
      sub_1ACB7BB6C(v4, v3, v5);
      uint64_t v11 = v7;
      uint64_t v12 = v6;
      unsigned int v13 = v2;
      goto LABEL_13;
    }
    sub_1ACB7BB6C(v4, v3, v5);
    sub_1ACB7BB6C(v7, v6, v2);
    char v10 = (((v3 & 1) == 0) | v6) ^ 1 | ((v3 & 1) == 0) & v6 | (*(double *)&v4 < *(double *)&v7);
  }
  return v10 & 1;
}

uint64_t sub_1ACDCF430(uint64_t a1, uint64_t a2)
{
  return DownloadingRules.canMove(from:to:)(a1, a2) & 1;
}

BOOL DownloadedRules.canMove(from:to:)(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a2 + 16) & 0xC0) != 0x80) {
    return 0;
  }
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
  BOOL v5 = v4 >> 6 == 3 && *(_OWORD *)a1 == 0;
  if (v5 && v4 == 192)
  {
    sub_1ACB7BB6C(0, 0, 0xC0u);
    sub_1ACB7BB6C(0, 0, 0xC0u);
    return 1;
  }
  else
  {
    sub_1ACB7BB40(*(void *)a1, v3, v4);
    sub_1ACB7BB6C(0, 0, 0xC0u);
    sub_1ACB7BB6C(v2, v3, v4);
    return v4 >> 6 != 3;
  }
}

unint64_t sub_1ACDCF50C(uint64_t a1)
{
  unint64_t result = sub_1ACDCF534();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1ACDCF534()
{
  unint64_t result = qword_1E99F5DE8;
  if (!qword_1E99F5DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5DE8);
  }
  return result;
}

unint64_t sub_1ACDCF58C()
{
  unint64_t result = qword_1EB7679C8;
  if (!qword_1EB7679C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7679C8);
  }
  return result;
}

unint64_t sub_1ACDCF5E0(uint64_t a1)
{
  unint64_t result = sub_1ACDCF608();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1ACDCF608()
{
  unint64_t result = qword_1E99F5DF0;
  if (!qword_1E99F5DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5DF0);
  }
  return result;
}

unint64_t sub_1ACDCF65C(uint64_t a1)
{
  unint64_t result = sub_1ACDCF684();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1ACDCF684()
{
  unint64_t result = qword_1E99F5DF8;
  if (!qword_1E99F5DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5DF8);
  }
  return result;
}

unint64_t sub_1ACDCF6D8(uint64_t a1)
{
  unint64_t result = sub_1ACDCF700();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1ACDCF700()
{
  unint64_t result = qword_1E99F5E00;
  if (!qword_1E99F5E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5E00);
  }
  return result;
}

BOOL sub_1ACDCF754(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a2 + 16) & 0xC0) != 0x80) {
    return 0;
  }
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
  BOOL v5 = v4 >> 6 == 3 && *(_OWORD *)a1 == 0;
  if (v5 && v4 == 192)
  {
    sub_1ACB7BB6C(0, 0, 0xC0u);
    sub_1ACB7BB6C(0, 0, 0xC0u);
    return 1;
  }
  else
  {
    sub_1ACB7BB40(*(void *)a1, v3, v4);
    sub_1ACB7BB6C(0, 0, 0xC0u);
    sub_1ACB7BB6C(v2, v3, v4);
    return v4 >> 6 != 3;
  }
}

ValueMetadata *type metadata accessor for AnyEpisodeDownloadStateRule()
{
  return &type metadata for AnyEpisodeDownloadStateRule;
}

ValueMetadata *type metadata accessor for AlwaysEpisodeStateRule()
{
  return &type metadata for AlwaysEpisodeStateRule;
}

ValueMetadata *type metadata accessor for DownloadingRules()
{
  return &type metadata for DownloadingRules;
}

ValueMetadata *type metadata accessor for DownloadedRules()
{
  return &type metadata for DownloadedRules;
}

uint64_t sub_1ACDCF854(uint64_t a1, uint64_t a2)
{
  return sub_1ACDCF874(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
}

uint64_t sub_1ACDCF874(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  if ((a6 & 0xC0) != 0x40) {
    return 0;
  }
  int v12 = a3 >> 6;
  if (v12 == 3 && !(a2 | a1) && a3 == 192)
  {
    sub_1ACB7BB6C(0, 0, 0xC0u);
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    unsigned int v15 = 192;
LABEL_12:
    sub_1ACB7BB6C(v13, v14, v15);
    char v17 = 1;
    return v17 & 1;
  }
  sub_1ACB7BB40(a1, a2, a3);
  sub_1ACB7BB6C(0, 0, 0xC0u);
  sub_1ACB7BB6C(a1, a2, a3);
  if ((a3 & 0x80) != 0)
  {
    char v17 = 0;
  }
  else
  {
    if (v12 != 1)
    {
      sub_1ACB7BB40(a1, a2, a3);
      sub_1ACB7BB6C(a1, a2, a3);
      uint64_t v13 = a4;
      uint64_t v14 = a5;
      unsigned int v15 = a6;
      goto LABEL_12;
    }
    sub_1ACB7BB6C(a1, a2, a3);
    sub_1ACB7BB6C(a4, a5, a6);
    char v17 = (((a2 & 1) == 0) | a5) ^ 1 | ((a2 & 1) == 0) & a5 | (*(double *)&a1 < *(double *)&a4);
  }
  return v17 & 1;
}

uint64_t sub_1ACDCF9EC()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1ACDCFA74(long long *a1, long long *a2)
{
  uint64_t v3 = *(void *)(v2 + 24);
  char v4 = *((unsigned char *)a1 + 16);
  char v5 = *((unsigned char *)a2 + 16);
  long long v9 = *a1;
  char v10 = v4;
  long long v7 = *a2;
  char v8 = v5;
  return (*(uint64_t (**)(long long *, long long *))(*(void *)(v3 + 8) + 24))(&v9, &v7) & 1;
}

uint64_t PageContextTracker.value.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACA6BBEC(v2, &v6);
  os_unfair_lock_unlock(v3);
  if (*(void *)(v6 + 16))
  {
    uint64_t v4 = *(void *)(v6 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = 0;
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t PageContextTracker.__allocating_init(historySize:)(uint64_t a1, char a2)
{
  if (a2) {
    a1 = 64;
  }
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 24) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EDD8);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 16) = v4;
  return v3;
}

uint64_t static PageContextTracker.defaultHistorySize.getter()
{
  return 64;
}

uint64_t sub_1ACDCFC28()
{
  type metadata accessor for PageContextTracker();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 24) = 64;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EDD8);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 16) = result;
  qword_1EB76EF88 = v0;
  return result;
}

uint64_t static PageContextTracker.shared.getter()
{
  if (qword_1EB76EDD0 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t PageContextTracker.historySize.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t PageContextTracker.copy()()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v3 = v2 + 4;
  uint64_t v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_1ACA6BBEC(v3, &v10);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = v10;
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 24) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EDD8);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 24) = 0;
  *(void *)(v8 + 16) = v5;
  *(void *)(v7 + 16) = v8;
  return v7;
}

Swift::Void __swiftcall PageContextTracker.push(_:)(PodcastsFoundation::MetricsPageContext a1)
{
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_1ACDD00A8(v3);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_1ACDCFE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  sub_1ACAC9058(0, 0, a2, a3);
  uint64_t v8 = *(void *)(*(void *)a1 + 16);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t result = v8 - v9;
  if (__OFSUB__(v8, v9))
  {
    __break(1u);
  }
  else if (result >= 1)
  {
    return sub_1ACDCFEB8(result);
  }
  return result;
}

unint64_t sub_1ACDCFEB8(unint64_t result)
{
  if (result)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t v2 = *(void *)(*(void *)v1 + 16);
      BOOL v3 = v2 >= result;
      uint64_t result = v2 - result;
      if (v3) {
        return sub_1ACACA570(result, v2);
      }
    }
    __break(1u);
  }
  return result;
}

PodcastsFoundation::MetricsPageContext_optional __swiftcall PageContextTracker.pop()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  BOOL v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACDCFF40(v2, v7);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v7[0];
  uint64_t v5 = (void *)v7[1];
  result.value.rawValue._object = v5;
  result.value.rawValue._countAndFlagsBits = v4;
  return result;
}

uint64_t sub_1ACDCFF40@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)result;
  if (*(void *)(*(void *)result + 16))
  {
    uint64_t v5 = *(void *)(v3 + 32);
    uint64_t v4 = *(void *)(v3 + 40);
    swift_bridgeObjectRetain();
    PodcastsFoundation::MetricsPageContext_optional result = sub_1ACACA570(0, 1);
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v4 = 0;
  }
  *a2 = v5;
  a2[1] = v4;
  return result;
}

Swift::Void __swiftcall PageContextTracker.reset()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACDD0014(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1ACDD0014(void *a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t PageContextTracker.deinit()
{
  swift_release();
  return v0;
}

uint64_t PageContextTracker.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACDD00A8(uint64_t a1)
{
  return sub_1ACDCFE3C(a1, v1[2], v1[3], v1[4]);
}

uint64_t type metadata accessor for PageContextTracker()
{
  return self;
}

uint64_t method lookup function for PageContextTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PageContextTracker);
}

void sub_1ACDD0104()
{
  uint64_t v0 = (void *)sub_1ACE76178();
  id v1 = objc_msgSend(self, sel_bundleWithIdentifier_, v0);

  if (v1) {
    qword_1EB7706F8 = (uint64_t)v1;
  }
  else {
    __break(1u);
  }
}

id static NSBundle.podcastsFoundation.getter()
{
  if (qword_1EB770708 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB7706F8;
  return v0;
}

uint64_t sub_1ACDD01D8(void *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

uint64_t sub_1ACDD0204(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3 = a1;
  return a2(&v3);
}

uint64_t sub_1ACDD023C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_retain();
  swift_retain();
  return v1;
}

uint64_t sub_1ACDD0288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  sub_1ACDD02E0(a1, a2, a3);
  return v6;
}

uint64_t *sub_1ACDD02E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(v9, a1, a2);
  uint64_t v10 = (void *)swift_allocObject();
  uint64_t v11 = *(void *)(v7 + 80);
  v10[2] = v11;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = v8;
  v3[2] = (uint64_t)sub_1ACDD0F88;
  v3[3] = (uint64_t)v10;
  int v12 = (void *)swift_allocObject();
  _OWORD v12[2] = v11;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = v8;
  v3[4] = (uint64_t)sub_1ACDD0F94;
  v3[5] = (uint64_t)v12;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v11;
  v13[3] = a2;
  v13[4] = a3;
  v13[5] = v8;
  v3[6] = (uint64_t)sub_1ACDD0FD8;
  v3[7] = (uint64_t)v13;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v11;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = v8;
  v3[8] = (uint64_t)sub_1ACDD0FE4;
  v3[9] = (uint64_t)v14;
  swift_retain_n();
  return v3;
}

uint64_t sub_1ACDD0440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, a3);
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a3);
}

uint64_t sub_1ACDD0554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_projectBox();
  swift_beginAccess();
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  swift_endAccess();
  return v6;
}

uint64_t sub_1ACDD05D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_projectBox();
  swift_beginAccess();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 40);
  sub_1ACA6DEC8(a1);
  v10(a1, a2, a5, a6);
  return swift_endAccess();
}

uint64_t sub_1ACDD0678(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = *(void *)(a6 - 8);
  uint64_t v12 = a3 & 1;
  MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v15, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 56))(a1, a2, v12, a6, a7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, a6);
}

uint64_t sub_1ACDD07C4@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1ACDD08C4();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = v3;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    *(void *)(result + 24) = v5;
    uint64_t v6 = sub_1ACDD0F5C;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a1 = v6;
  a1[1] = result;
  return result;
}

uint64_t sub_1ACDD0834(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_1ACDD0F24;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_1ACA6DEC8(v1);
  return sub_1ACDD091C((uint64_t)v4, v3);
}

uint64_t sub_1ACDD08C4()
{
  uint64_t v0 = (uint64_t (*)(uint64_t))sub_1ACDD023C();
  uint64_t v1 = swift_release();
  uint64_t v2 = v0(v1);
  swift_release();
  return v2;
}

uint64_t sub_1ACDD091C(uint64_t a1, uint64_t a2)
{
  sub_1ACDD023C();
  uint64_t v5 = v4;
  swift_release();
  v5(a1, a2);
  sub_1ACA76F34(a1);
  return swift_release();
}

uint64_t (*sub_1ACDD098C(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  *a1 = sub_1ACDD08C4();
  a1[1] = v3;
  return sub_1ACDD09D4;
}

uint64_t sub_1ACDD09D4(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if ((a2 & 1) == 0) {
    return sub_1ACDD091C(*a1, v3);
  }
  sub_1ACA6DEC8(*a1);
  sub_1ACDD091C(v2, v3);
  return sub_1ACA76F34(v2);
}

uint64_t sub_1ACDD0A50(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 64))(a1, a2, a3 & 1);
}

uint64_t AnyEpisodeStateDataSource.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t AnyEpisodeStateDataSource.__deallocating_deinit()
{
  AnyEpisodeStateDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACDD0AF4()
{
  return sub_1ACB5C124();
}

uint64_t sub_1ACDD0B18()
{
  return sub_1ACDD08C4();
}

uint64_t sub_1ACDD0B3C(uint64_t a1, uint64_t a2)
{
  return sub_1ACDD091C(a1, a2);
}

void (*sub_1ACDD0B60(uint64_t **a1))(void *a1)
{
  uint64_t v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_1ACDD098C(v2);
  return sub_1ACA8E534;
}

uint64_t sub_1ACDD0BBC(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1ACDD0A50(a1, a2, a3 & 1);
}

uint64_t EpisodeStateDataSourceProtocol.eraseToAnyEpisodeStateDataSource()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for AnyEpisodeStateDataSource();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, a1);
  uint64_t v9 = swift_allocObject();
  sub_1ACDD02E0((uint64_t)v8, a1, a2);
  return v9;
}

uint64_t type metadata accessor for AnyEpisodeStateDataSource()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACDD0D48()
{
  return 16;
}

__n128 sub_1ACDD0D54(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of EpisodeStateDataSourceProtocol.startObservingChanges()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EpisodeStateDataSourceProtocol.refreshControllerStates.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EpisodeStateDataSourceProtocol.refreshControllerStates.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of EpisodeStateDataSourceProtocol.refreshControllerStates.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of EpisodeStateDataSourceProtocol.state(for:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a5 + 56))(a1, a2, a3 & 1);
}

uint64_t sub_1ACDD0DC8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for AnyEpisodeStateDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AnyEpisodeStateDataSource);
}

uint64_t dispatch thunk of AnyEpisodeStateDataSource.startObservingChanges()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of AnyEpisodeStateDataSource.refreshControllerStates.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of AnyEpisodeStateDataSource.refreshControllerStates.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of AnyEpisodeStateDataSource.refreshControllerStates.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of AnyEpisodeStateDataSource.state(for:)(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v3 + 184))(a1, a2, a3 & 1);
}

uint64_t sub_1ACDD0EEC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDD0F24(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_1ACDD0F5C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1ACDD0F88()
{
  return sub_1ACDD0440(v0[5], v0[2], v0[3], v0[4]);
}

uint64_t sub_1ACDD0F94()
{
  return sub_1ACDD0554(v0[5], v0[2], v0[3], v0[4]);
}

uint64_t sub_1ACDD0FA0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDD0FD8(uint64_t a1, uint64_t a2)
{
  return sub_1ACDD05D4(a1, a2, v2[5], v2[2], v2[3], v2[4]);
}

uint64_t sub_1ACDD0FE4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1ACDD0678(a1, a2, a3 & 1, v3[5], v3[2], v3[3], v3[4]);
}

uint64_t *initializeBufferWithCopyOfBuffer for FairPlayServerURLConfiguration(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1ACE74F28();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v8((uint64_t *)((char *)a1 + a3[6]), (uint64_t *)((char *)a2 + a3[6]), v7);
    v8((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]), v7);
    v8((uint64_t *)((char *)a1 + a3[8]), (uint64_t *)((char *)a2 + a3[8]), v7);
  }
  return a1;
}

uint64_t destroy for FairPlayServerURLConfiguration(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  v7(a1 + a2[5], v4);
  v7(a1 + a2[6], v4);
  v7(a1 + a2[7], v4);
  uint64_t v5 = a1 + a2[8];
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(v5, v4);
}

uint64_t initializeWithCopy for FairPlayServerURLConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  return a1;
}

uint64_t assignWithCopy for FairPlayServerURLConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  return a1;
}

uint64_t initializeWithTake for FairPlayServerURLConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  return a1;
}

uint64_t assignWithTake for FairPlayServerURLConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FairPlayServerURLConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACDD15F8);
}

uint64_t sub_1ACDD15F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FairPlayServerURLConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACDD1678);
}

uint64_t sub_1ACDD1678(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for FairPlayServerURLConfiguration()
{
  uint64_t result = qword_1E99F5E08;
  if (!qword_1E99F5E08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACDD1734()
{
  uint64_t result = sub_1ACE74F28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1ACDD17C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v2 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v25 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v25 - v16;
  sub_1ACDD1B38();
  uint64_t result = sub_1ACDD1B78(kBagKeyLicenseStreamingStart, (uint64_t)v17);
  if (!v1)
  {
    unint64_t v27 = v6;
    uint64_t v28 = v3;
    char v19 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 32);
    v19(v29, v17, v2);
    sub_1ACDD1B78(kBagKeyLicenseStreamingStop, (uint64_t)v15);
    uint64_t v26 = (int *)type metadata accessor for FairPlayServerURLConfiguration();
    v19(v29 + v26[5], v15, v2);
    sub_1ACDD1B78(kBagKeyLicenseOfflineStart, (uint64_t)v12);
    uint64_t v20 = v19;
    uint64_t v21 = v29;
    unint64_t v22 = v20;
    v20(v29 + v26[6], v12, v2);
    sub_1ACDD1B78(kBagKeyLicenseOfflineStop, (uint64_t)v9);
    uint64_t v23 = v21;
    v22(v21 + v26[7], v9, v2);
    uint64_t v24 = (uint64_t)v27;
    sub_1ACDD1B78(kBagKeyLicenseOfflineStopNonce, (uint64_t)v27);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v22)(v23 + v26[8], v24, v2);
  }
  return result;
}

unint64_t sub_1ACDD1B38()
{
  unint64_t result = qword_1E99F6C00;
  if (!qword_1E99F6C00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E99F6C00);
  }
  return result;
}

uint64_t sub_1ACDD1B78@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_sharedInstance);
  id v8 = objc_msgSend(v7, sel_syncValueForKey_, *a1);

  if (v8)
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v15, 0, sizeof(v15));
  }
  sub_1ACA9D6FC((uint64_t)v15, (uint64_t)v16);
  if (v17)
  {
    uint64_t v9 = sub_1ACE74F28();
    int v10 = swift_dynamicCast();
    uint64_t v11 = *(void *)(v9 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, v10 ^ 1u, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v9) != 1) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v6, v9);
    }
  }
  else
  {
    sub_1ACA50E78((uint64_t)v16, qword_1EB7725E0);
    uint64_t v13 = sub_1ACE74F28();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  }
  sub_1ACA50E78((uint64_t)v6, &qword_1EB7731B0);
  sub_1ACDD1DD4();
  swift_allocError();
  *uint64_t v14 = 4;
  return swift_willThrow();
}

unint64_t sub_1ACDD1DD4()
{
  unint64_t result = qword_1E99F5E18;
  if (!qword_1E99F5E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5E18);
  }
  return result;
}

uint64_t sub_1ACDD1E28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = v1[11];
  long long v70 = v1[10];
  long long v71 = v6;
  long long v72 = v1[12];
  char v73 = *((unsigned char *)v1 + 208);
  long long v7 = v1[7];
  long long v66 = v1[6];
  long long v67 = v7;
  long long v8 = v1[9];
  long long v68 = v1[8];
  long long v69 = v8;
  long long v9 = v1[3];
  long long v62 = v1[2];
  long long v63 = v9;
  long long v10 = v1[5];
  long long v64 = v1[4];
  long long v65 = v10;
  long long v11 = v1[1];
  long long v60 = *v1;
  long long v61 = v11;
  *(_OWORD *)uint64_t v12 = v60;
  *(_OWORD *)&v12[16] = v11;
  int v13 = v62;
  switch((char)v62)
  {
    case 2:
    case 3:
    case 6:
    case 7:
    case 8:
      char v14 = 1;
      *(void *)unint64_t v58 = 1;
      memset(&v58[8], 0, 32);
      char v59 = 4;
      break;
    case 4:
      sub_1ACA64A2C((uint64_t)&v60);
      sub_1ACA639E4(*(uint64_t *)v12, *(uint64_t *)&v12[8], *(uint64_t *)&v12[16], *(uint64_t *)&v12[24], 4u);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1ACA64E8C((uint64_t)&v60);
      *(void *)unint64_t v58 = 1;
      memset(&v58[8], 0, 32);
      char v59 = 4;
LABEL_5:
      sub_1ACA64A2C((uint64_t)&v60);
      sub_1ACA639E4(*(uint64_t *)v12, *(uint64_t *)&v12[8], *(uint64_t *)&v12[16], *(uint64_t *)&v12[24], 4u);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1ACA64E8C((uint64_t)&v60);
      char v14 = 1;
      break;
    default:
      memset(v58, 0, sizeof(v58));
      char v59 = 4;
      char v14 = 1;
      switch((char)v62)
      {
        case 1:
        case 5:
          char v14 = 0;
          break;
        case 4:
          goto LABEL_5;
        default:
          goto LABEL_7;
      }
      break;
  }
LABEL_7:
  char v57 = v14;
  BOOL v56 = v13 == 1;
  char v55 = 4;
  long long v51 = v70;
  long long v52 = v71;
  long long v53 = v72;
  char v54 = v73;
  long long v47 = v66;
  long long v48 = v67;
  long long v49 = v68;
  long long v50 = v69;
  long long v43 = v62;
  long long v44 = v63;
  long long v45 = v64;
  long long v46 = v65;
  long long v41 = v60;
  long long v42 = v61;
  unint64_t v38 = sub_1ACDD31C4();
  long long v51 = v70;
  long long v52 = v71;
  long long v53 = v72;
  char v54 = v73;
  long long v47 = v66;
  long long v48 = v67;
  long long v49 = v68;
  long long v50 = v69;
  long long v43 = v62;
  long long v44 = v63;
  long long v45 = v64;
  long long v46 = v65;
  long long v41 = v60;
  long long v42 = v61;
  unint64_t v37 = sub_1ACDD33F4();
  long long v51 = v70;
  long long v52 = v71;
  long long v53 = v72;
  char v54 = v73;
  long long v47 = v66;
  long long v48 = v67;
  long long v49 = v68;
  long long v50 = v69;
  long long v43 = v62;
  long long v44 = v63;
  long long v45 = v64;
  long long v46 = v65;
  long long v41 = v60;
  long long v42 = v61;
  unint64_t v36 = sub_1ACDD32BC();
  long long v51 = v70;
  long long v52 = v71;
  long long v53 = v72;
  char v54 = v73;
  long long v47 = v66;
  long long v48 = v67;
  long long v49 = v68;
  long long v50 = v69;
  long long v43 = v62;
  long long v44 = v63;
  long long v45 = v64;
  long long v46 = v65;
  long long v41 = v60;
  long long v42 = v61;
  uint64_t v15 = sub_1ACDD2440();
  LOBYTE(v41) = 1;
  uint64_t v39 = a1;
  uint64_t v35 = v15;
  switch(v13)
  {
    case 4:
      uint64_t v17 = (uint64_t)v5;
      sub_1ACA64A2C((uint64_t)&v60);
      sub_1ACA64A2C((uint64_t)&v60);
      uint64_t v16 = *(void *)&v12[16];
      sub_1ACA639E4(*(uint64_t *)v12, *(uint64_t *)&v12[8], *(uint64_t *)&v12[16], *(uint64_t *)&v12[24], 4u);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1ACA64E8C((uint64_t)&v60);
      goto LABEL_9;
    case 8:
      uint64_t v16 = *(void *)&v12[16];
      uint64_t v17 = (uint64_t)v5;
      sub_1ACA64A2C((uint64_t)&v60);
      uint64_t v28 = *((void *)&v69 + 1);
      if (*((uint64_t *)&v69 + 1) <= 0) {
        goto LABEL_9;
      }
      char v18 = (*(_OWORD *)&v12[16] | *(_OWORD *)&v12[8]) != 0;
      if ((*(_OWORD *)&v12[16] | *(_OWORD *)&v12[8]) != 0) {
        uint64_t v28 = 0;
      }
      uint64_t v34 = v28;
      break;
    default:
      uint64_t v16 = *(void *)&v12[16];
      uint64_t v17 = (uint64_t)v5;
      sub_1ACA64A2C((uint64_t)&v60);
LABEL_9:
      uint64_t v34 = 0;
      char v18 = 1;
      break;
  }
  uint64_t v19 = v70;
  if ((uint64_t)v70 <= 0 || v13 && (v13 != 8 || v16 | *(void *)&v12[8] | *(void *)&v12[16] | *(void *)&v12[24]))
  {
    uint64_t v19 = 0;
    char v20 = 1;
  }
  else
  {
    char v20 = 0;
  }
  sub_1ACA64E8C((uint64_t)&v60);
  char v40 = 1;
  uint64_t v21 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v17, 1, 1, v21);
  uint64_t v22 = MEMORY[0x1E4FBC860];
  unint64_t v23 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v24 = sub_1ACA35F90(v22);
  unint64_t v25 = sub_1ACA35FB0(v22);
  unint64_t v26 = sub_1ACA360DC(v22);
  *((void *)&v32 + 1) = sub_1ACA360FC(v22);
  *(void *)&long long v32 = v26;
  *((void *)&v31 + 1) = v22;
  *((void *)&v30 + 1) = v22;
  *(void *)&long long v31 = &unk_1F0380240;
  *(void *)&long long v30 = v36;
  *(void *)&long long v29 = v22;
  *((void *)&v29 + 1) = v37;
  return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)((long long *)v58, &v57, (char *)&v56, &v55, v23, v24, v25, (uint64_t)v38, v39, v29, v30, v31, (uint64_t)v35, (char *)&v41, v34, v18, v32, v19, v20,
           &v40,
           0,
           v17,
           0,
           0,
           0,
           0,
           0,
           v22,
           0,
           0,
           2);
}

void *sub_1ACDD2440()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2A20);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1ACE74A28();
  uint64_t v91 = *(void *)(v100 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v100);
  uint64_t v96 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v90 = (char *)&v75 - v6;
  uint64_t v83 = sub_1ACE74B18();
  int64_t v7 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  uint64_t v92 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = *(void **)v0;
  uint64_t v10 = *(void *)(v0 + 8);
  uint64_t v11 = *(void *)(v0 + 16);
  uint64_t v12 = *(void *)(v0 + 24);
  uint64_t v14 = *(void *)(v0 + 152);
  uint64_t v13 = *(void *)(v0 + 160);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  switch(*(unsigned char *)(v0 + 32))
  {
    case 1:
      uint64_t v17 = v9[2];
      if (v17)
      {
        uint64_t v100 = *(void *)(v0 + 160);
        uint64_t v76 = v11;
        uint64_t v77 = v12;
        uint64_t v78 = v10;
        char v18 = v9 + 4;
        int64_t v7 = sub_1ACA55E4C();
        uint64_t v79 = v9;
        swift_bridgeObjectRetain();
        long long v9 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          uint64_t v19 = (void *)*v18++;
          uint64_t v101 = v19;
          uint64_t v20 = sub_1ACE770B8();
          uint64_t v22 = v21;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v9 = sub_1ACA41EA0(0, v9[2] + 1, 1, v9);
          }
          unint64_t v24 = v9[2];
          unint64_t v23 = v9[3];
          if (v24 >= v23 >> 1) {
            long long v9 = sub_1ACA41EA0((void *)(v23 > 1), v24 + 1, 1, v9);
          }
          _OWORD v9[2] = v24 + 1;
          unint64_t v25 = &v9[2 * v24];
          v25[4] = v20;
          v25[5] = v22;
          --v17;
        }
        while (v17);
        sub_1ACA63688((uint64_t)v79, v78, v76, v77, 1u);
        uint64_t v13 = v100;
        if (v14 <= 0) {
          return v9;
        }
      }
      else
      {
        long long v9 = (void *)MEMORY[0x1E4FBC860];
        if (v14 <= 0) {
          return v9;
        }
      }
      if (__OFADD__(v13, v14)) {
        goto LABEL_82;
      }
      uint64_t v71 = v9[2];
      if (v13 + v14 >= v71) {
        int64_t v7 = v9[2];
      }
      else {
        int64_t v7 = v13 + v14;
      }
      if (v13 >= v71) {
        return v9;
      }
      if (v7 < v13) {
        goto LABEL_83;
      }
      if (v13 < 0) {
        goto LABEL_84;
      }
      sub_1ACE779D8();
      swift_unknownObjectRetain_n();
      uint64_t v72 = swift_dynamicCastClass();
      if (!v72)
      {
        swift_bridgeObjectRelease();
        uint64_t v72 = MEMORY[0x1E4FBC860];
      }
      uint64_t v73 = *(void *)(v72 + 16);
      swift_release();
      if (v73 != v7 - v13) {
        goto LABEL_85;
      }
      uint64_t v15 = swift_dynamicCastClass();
      swift_bridgeObjectRelease_n();
      if (!v15)
      {
        swift_bridgeObjectRelease();
        return (void *)MEMORY[0x1E4FBC860];
      }
      return (void *)v15;
    case 2:
      swift_bridgeObjectRetain();
      return v9;
    case 3:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1ACE843F0;
      *(void *)(v15 + 32) = v9;
      *(void *)(v15 + 40) = v10;
      swift_bridgeObjectRetain();
      return (void *)v15;
    case 4:
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1ACE843F0;
      *(void *)(v15 + 32) = v9;
      *(void *)(v15 + 40) = v10;
      return (void *)v15;
    case 5:
    case 8:
      return (void *)v15;
    case 6:
      int64_t v26 = v9[2];
      if (v26)
      {
        uint64_t v76 = *(void *)(v0 + 16);
        uint64_t v77 = v12;
        uint64_t v78 = v10;
        uint64_t v101 = (void *)MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1ACC82D44(0, v26, 0);
        uint64_t v15 = (uint64_t)v101;
        uint64_t v79 = v9;
        unint64_t v27 = v9 + 4;
        do
        {
          uint64_t v28 = *v27++;
          uint64_t v106 = v28;
          uint64_t v29 = sub_1ACE777C8();
          uint64_t v31 = v30;
          uint64_t v101 = (void *)v15;
          unint64_t v33 = *(void *)(v15 + 16);
          unint64_t v32 = *(void *)(v15 + 24);
          if (v33 >= v32 >> 1)
          {
            sub_1ACC82D44(v32 > 1, v33 + 1, 1);
            uint64_t v15 = (uint64_t)v101;
          }
          *(void *)(v15 + 16) = v33 + 1;
          uint64_t v34 = v15 + 16 * v33;
          *(void *)(v34 + 32) = v29;
          *(void *)(v34 + 40) = v31;
          --v26;
        }
        while (v26);
        sub_1ACA63688((uint64_t)v79, v78, v76, v77, 6u);
      }
      return (void *)v15;
    case 7:
      uint64_t v82 = v9[2];
      if (!v82) {
        return (void *)v15;
      }
      uint64_t v81 = v9 + 4;
      uint64_t v78 = v10;
      uint64_t v76 = v11;
      uint64_t v77 = v12;
      sub_1ACA639E4((uint64_t)v9, v10, v11, v12, 7u);
      uint64_t v35 = (uint64_t)v9;
      long long v9 = (void *)(v91 + 56);
      uint64_t v13 = v91 + 48;
      char v95 = (void (**)(char *, char *, uint64_t))(v91 + 32);
      uint64_t v80 = (void (**)(char *, uint64_t))(v7 + 8);
      uint64_t v79 = (void *)v35;
      swift_bridgeObjectRetain();
      uint64_t v36 = 0;
      uint64_t v93 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v94 = "okmarkState";
      break;
    default:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1ACE843F0;
      uint64_t v101 = v9;
      sub_1ACA55E4C();
      *(void *)(v15 + 32) = sub_1ACE770B8();
      *(void *)(v15 + 40) = v16;
      return (void *)v15;
  }
  while (2)
  {
    unint64_t v38 = &v81[5 * v36];
    uint64_t v39 = *v38;
    uint64_t v40 = v38[1];
    uint64_t v41 = v38[2];
    uint64_t v42 = v38[3];
    int v43 = *((unsigned __int8 *)v38 + 32);
    uint64_t v84 = v36 + 1;
    uint64_t v101 = (void *)v39;
    uint64_t v102 = v40;
    uint64_t v103 = v41;
    uint64_t v104 = v42;
    char v105 = v43;
    uint64_t v88 = v40;
    uint64_t v89 = v39;
    uint64_t v87 = v41;
    uint64_t v86 = v42;
    int v85 = v43;
    sub_1ACA626E4(v39, v40, v41, v42, v43);
    UniversalEpisodeIdentifier.urlTrackIdentifier()();
    uint64_t v44 = v106;
    int64_t v7 = v107;
    sub_1ACE74B08();
    sub_1ACE74AC8();
    MEMORY[0x1AD116C40](*(void *)&aPlaypodcplaypo_1[8 * v7], *(void *)&aPlaypodcplaypo_1[8 * v7 + 40]);
    uint64_t v45 = *(void *)(v44 + 64);
    uint64_t v98 = v44 + 64;
    uint64_t v46 = 1 << *(unsigned char *)(v44 + 32);
    if (v46 < 64) {
      uint64_t v47 = ~(-1 << v46);
    }
    else {
      uint64_t v47 = -1;
    }
    uint64_t v48 = v47 & v45;
    int64_t v99 = (unint64_t)(v46 + 63) >> 6;
    swift_bridgeObjectRetain_n();
    int64_t v49 = 0;
    unint64_t v97 = MEMORY[0x1E4FBC860];
    if (v48)
    {
LABEL_28:
      v48 &= v48 - 1;
      goto LABEL_29;
    }
    while (1)
    {
      int64_t v50 = v49 + 1;
      if (__OFADD__(v49, 1))
      {
        __break(1u);
        goto LABEL_81;
      }
      if (v50 >= v99) {
        goto LABEL_55;
      }
      uint64_t v51 = *(void *)(v98 + 8 * v50);
      ++v49;
      if (!v51)
      {
        int64_t v49 = v50 + 1;
        if (v50 + 1 >= v99) {
          goto LABEL_55;
        }
        uint64_t v51 = *(void *)(v98 + 8 * v49);
        if (!v51)
        {
          int64_t v49 = v50 + 2;
          if (v50 + 2 >= v99) {
            goto LABEL_55;
          }
          uint64_t v51 = *(void *)(v98 + 8 * v49);
          if (!v51)
          {
            int64_t v49 = v50 + 3;
            if (v50 + 3 >= v99) {
              goto LABEL_55;
            }
            uint64_t v51 = *(void *)(v98 + 8 * v49);
            if (!v51)
            {
              int64_t v49 = v50 + 4;
              if (v50 + 4 >= v99) {
                goto LABEL_55;
              }
              uint64_t v51 = *(void *)(v98 + 8 * v49);
              if (!v51) {
                break;
              }
            }
          }
        }
      }
LABEL_54:
      uint64_t v48 = (v51 - 1) & v51;
LABEL_29:
      swift_bridgeObjectRetain();
      sub_1ACE749F8();
      swift_bridgeObjectRelease();
      int64_t v7 = v100;
      ((void (*)(char *, void, uint64_t, uint64_t))*v9)(v3, 0, 1, v100);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, int64_t))v13)(v3, 1, v7) == 1)
      {
        sub_1ACDD3500((uint64_t)v3);
        if (v48) {
          goto LABEL_28;
        }
      }
      else
      {
        long long v53 = *v95;
        char v54 = v90;
        uint64_t v55 = v100;
        (*v95)(v90, v3, v100);
        v53(v96, v54, v55);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v97 = sub_1ACA42334(0, *(void *)(v97 + 16) + 1, 1, v97);
        }
        unint64_t v57 = *(void *)(v97 + 16);
        unint64_t v56 = *(void *)(v97 + 24);
        int64_t v7 = v57 + 1;
        if (v57 >= v56 >> 1) {
          unint64_t v97 = sub_1ACA42334(v56 > 1, v57 + 1, 1, v97);
        }
        unint64_t v58 = v96;
        unint64_t v59 = v97;
        *(void *)(v97 + 16) = v7;
        v53((char *)(v59+ ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(void *)(v91 + 72) * v57), v58, v100);
        if (v48) {
          goto LABEL_28;
        }
      }
    }
    int64_t v52 = v50 + 5;
    if (v52 >= v99)
    {
LABEL_55:
      swift_release();
      swift_bridgeObjectRelease();
      long long v60 = v92;
      sub_1ACE74A58();
      uint64_t v61 = sub_1ACE74AE8();
      uint64_t v63 = v62;
      (*v80)(v60, v83);
      swift_bridgeObjectRelease();
      sub_1ACA633B0(v89, v88, v87, v86, v85);
      if (v63)
      {
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v37 = v93;
        }
        else {
          unint64_t v37 = sub_1ACA41EA0(0, v93[2] + 1, 1, v93);
        }
        unint64_t v65 = v37[2];
        unint64_t v64 = v37[3];
        if (v65 >= v64 >> 1) {
          unint64_t v37 = sub_1ACA41EA0((void *)(v64 > 1), v65 + 1, 1, v37);
        }
        v37[2] = v65 + 1;
        long long v66 = &v37[2 * v65];
        v66[4] = v61;
        v66[5] = v63;
      }
      else
      {
        unint64_t v37 = v93;
      }
      uint64_t v36 = v84;
      uint64_t v93 = v37;
      if (v84 == v82)
      {
        uint64_t v67 = (uint64_t)v79;
        uint64_t v68 = v78;
        uint64_t v69 = v76;
        uint64_t v70 = v77;
        sub_1ACA63688((uint64_t)v79, v78, v76, v77, 7u);
        sub_1ACA63688(v67, v68, v69, v70, 7u);
        return v93;
      }
      continue;
    }
    break;
  }
  uint64_t v51 = *(void *)(v98 + 8 * v52);
  if (v51)
  {
    int64_t v49 = v52;
    goto LABEL_54;
  }
  while (1)
  {
    int64_t v49 = v52 + 1;
    if (__OFADD__(v52, 1)) {
      break;
    }
    if (v49 >= v99) {
      goto LABEL_55;
    }
    uint64_t v51 = *(void *)(v98 + 8 * v49);
    ++v52;
    if (v51) {
      goto LABEL_54;
    }
  }
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  swift_bridgeObjectRelease_n();
  uint64_t v15 = sub_1ACD0AD7C((uint64_t)v9, (uint64_t)(v9 + 4), v13, (2 * v7) | 1);
  swift_bridgeObjectRelease();
  return (void *)v15;
}

char *sub_1ACDD31C4()
{
  uint64_t v1 = (char *)&unk_1F0380100;
  switch(*(unsigned char *)(v0 + 32))
  {
    case 1:
    case 5:
      uint64_t v1 = (char *)&unk_1F0380128;
      break;
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
    case 8:
      uint64_t v1 = (char *)MEMORY[0x1E4FBC860];
      break;
    default:
      break;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_1ACA42328(0, *((void *)v1 + 2) + 1, 1, v1);
  }
  unint64_t v3 = *((void *)v1 + 2);
  unint64_t v2 = *((void *)v1 + 3);
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_1ACA42328((char *)(v2 > 1), v3 + 1, 1, v1);
  }
  *((void *)v1 + 2) = v3 + 1;
  v1[v3 + 32] = 7;
  return v1;
}

unint64_t sub_1ACDD32BC()
{
  switch(*(unsigned char *)(v0 + 32))
  {
    case 1:
    case 5:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7725D0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1ACE84820;
      *(unsigned char *)(inited + 32) = 3;
      *(void *)(inited + 40) = &unk_1F03801F0;
      *(unsigned char *)(inited + 48) = 1;
      uint64_t v4 = &unk_1F0380218;
      goto LABEL_8;
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
      goto LABEL_2;
    case 8:
      if ((*(_OWORD *)v0 | *(_OWORD *)(v0 + 16)) == 0) {
        goto LABEL_7;
      }
LABEL_2:
      uint64_t v1 = MEMORY[0x1E4FBC860];
      unint64_t result = sub_1ACA364C4(v1);
      break;
    default:
LABEL_7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7725D0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1ACE84820;
      *(unsigned char *)(inited + 32) = 3;
      *(void *)(inited + 40) = &unk_1F03801A0;
      *(unsigned char *)(inited + 48) = 1;
      uint64_t v4 = &unk_1F03801C8;
LABEL_8:
      *(void *)(inited + 56) = v4;
      unint64_t result = sub_1ACA364C4(inited);
      break;
  }
  return result;
}

unint64_t sub_1ACDD33F4()
{
  switch(*(unsigned char *)(v0 + 32))
  {
    case 1:
    case 5:
      goto LABEL_7;
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
      goto LABEL_2;
    case 8:
      if ((*(_OWORD *)v0 | *(_OWORD *)(v0 + 16)) == 0)
      {
LABEL_7:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7725D0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
        *(unsigned char *)(inited + 32) = 1;
        uint64_t v4 = &unk_1F0380178;
LABEL_8:
        *(void *)(inited + 40) = v4;
        return sub_1ACA364C4(inited);
      }
      else
      {
LABEL_2:
        uint64_t v1 = MEMORY[0x1E4FBC860];
        return sub_1ACA364C4(v1);
      }
    default:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7725D0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
      *(unsigned char *)(inited + 32) = 0;
      uint64_t v4 = &unk_1F0380150;
      goto LABEL_8;
  }
}

uint64_t sub_1ACDD3500(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL MTPodcast.shouldBeHiddenFromUpNext.getter()
{
  objc_msgSend(v0, sel_lastRemovedFromUpNextDate);
  BOOL result = 0;
  if (v1 != 0.0)
  {
    if (!objc_msgSend(v0, sel_subscribed)) {
      return 1;
    }
    objc_msgSend(v0, sel_latestEpisodeAvailabilityTime);
    double v4 = v3;
    objc_msgSend(v0, sel_lastRemovedFromUpNextDate);
    if (v5 >= v4)
    {
      objc_msgSend(v0, sel_addedDate);
      double v7 = v6;
      objc_msgSend(v0, sel_lastRemovedFromUpNextDate);
      if (v8 >= v7) {
        return 1;
      }
    }
  }
  return result;
}

uint64_t TranscriptData.TimeBombedURLs.init(shazamSignatureURL:ttmlURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1ACA7FAC4(a1, a3);
  uint64_t v5 = a3 + *(int *)(type metadata accessor for TranscriptData.TimeBombedURLs() + 20);
  return sub_1ACA7FAC4(a2, v5);
}

uint64_t type metadata accessor for TranscriptData.TimeBombedURLs()
{
  uint64_t result = qword_1EB76A328;
  if (!qword_1EB76A328) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t TranscriptData.TimeBombedURLs.shazamSignatureURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA615AC(v1, a1);
}

uint64_t TranscriptData.TimeBombedURLs.ttmlURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TranscriptData.TimeBombedURLs() + 20);
  return sub_1ACA615AC(v3, a1);
}

uint64_t TranscriptData.TimeBombedURLs.inMemorySize.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v2 - 8);
  double v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  double v7 = (char *)&v33 - v6;
  uint64_t v8 = sub_1ACE74F28();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v33 - v13;
  sub_1ACA615AC(v1, (uint64_t)v7);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v15(v7, 1, v8) == 1)
  {
    sub_1ACA7FA64((uint64_t)v7);
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v34 = v1;
    uint64_t v35 = v11;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    unint64_t v17 = sub_1ACE74EC8();
    uint64_t v19 = sub_1ACA5780C(v17, v18);
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v21 = 0;
      uint64_t v16 = 0;
      do
      {
        uint64_t v22 = *(void *)(v19 + 8 * v21 + 32);
        BOOL v23 = __OFADD__(v16, v22);
        v16 += v22;
        if (v23)
        {
          __break(1u);
          goto LABEL_23;
        }
        ++v21;
      }
      while (v20 != v21);
      swift_bridgeObjectRelease();
      if (v16 < 0) {
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = 0;
    }
    uint64_t v1 = v34;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    uint64_t v11 = v35;
  }
  uint64_t v24 = type metadata accessor for TranscriptData.TimeBombedURLs();
  sub_1ACA615AC(v1 + *(int *)(v24 + 20), (uint64_t)v4);
  if (v15(v4, 1, v8) == 1)
  {
    sub_1ACA7FA64((uint64_t)v4);
    return v16;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v4, v8);
  unint64_t v25 = sub_1ACE74EC8();
  uint64_t v27 = sub_1ACA5780C(v25, v26);
  uint64_t v28 = *(void *)(v27 + 16);
  if (!v28)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = 0;
LABEL_20:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v16 += v30;
    return v16;
  }
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  while (1)
  {
    uint64_t v31 = *(void *)(v27 + 8 * v29 + 32);
    BOOL v23 = __OFADD__(v30, v31);
    v30 += v31;
    if (v23) {
      break;
    }
    if (v28 == ++v29)
    {
      swift_bridgeObjectRelease();
      if (v30 < 0) {
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

uint64_t sub_1ACDD3ABC()
{
  if (*v0) {
    return 0x4C52556C6D7474;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_1ACDD3AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACDD52A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACDD3B24(uint64_t a1)
{
  unint64_t v2 = sub_1ACDD3D48();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACDD3B60(uint64_t a1)
{
  unint64_t v2 = sub_1ACDD3D48();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TranscriptData.TimeBombedURLs.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5E20);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACDD3D48();
  sub_1ACE77C78();
  v8[15] = 0;
  sub_1ACE74F28();
  sub_1ACA57B98(&qword_1E99F0E98);
  sub_1ACE77728();
  if (!v1)
  {
    type metadata accessor for TranscriptData.TimeBombedURLs();
    v8[14] = 1;
    sub_1ACE77728();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1ACDD3D48()
{
  unint64_t result = qword_1E99F5E28;
  if (!qword_1E99F5E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5E28);
  }
  return result;
}

uint64_t TranscriptData.TimeBombedURLs.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v26 = (char *)&v21 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5E30);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v27 = v9;
  uint64_t v28 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptData.TimeBombedURLs();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACDD3D48();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v22 = v13;
  BOOL v23 = v15;
  uint64_t v24 = v6;
  sub_1ACE74F28();
  char v30 = 0;
  sub_1ACA57B98(&qword_1E99F0ED0);
  uint64_t v16 = (uint64_t)v26;
  uint64_t v17 = v27;
  sub_1ACE77638();
  uint64_t v18 = (uint64_t)v23;
  sub_1ACA7FAC4(v16, (uint64_t)v23);
  char v29 = 1;
  uint64_t v19 = (uint64_t)v24;
  sub_1ACE77638();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v17);
  sub_1ACA7FAC4(v19, v18 + *(int *)(v22 + 20));
  sub_1ACDD40A0(v18, v25);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_1ACDD4104(v18);
}

uint64_t sub_1ACDD40A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptData.TimeBombedURLs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACDD4104(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranscriptData.TimeBombedURLs();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ACDD4160@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TranscriptData.TimeBombedURLs.init(from:)(a1, a2);
}

uint64_t sub_1ACDD4178(void *a1)
{
  return TranscriptData.TimeBombedURLs.encode(to:)(a1);
}

uint64_t TranscriptDataError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t static TranscriptDataError.== infix(_:_:)()
{
  return 1;
}

uint64_t TranscriptDataError.hashValue.getter()
{
  return sub_1ACE77B78();
}

unint64_t sub_1ACDD420C()
{
  unint64_t result = qword_1E99F5E38;
  if (!qword_1E99F5E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5E38);
  }
  return result;
}

uint64_t dispatch thunk of TranscriptTimeBombedURLProvider.timeBombedURLs(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t *initializeBufferWithCopyOfBuffer for ServerTranscript.Attributes.AssetUrls(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1ACE74F28();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)v14, 1, v7))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for ServerTranscript.Attributes.AssetUrls(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v9 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v6, 1, v4);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v6, v4);
  }
  return result;
}

char *initializeWithCopy for ServerTranscript.Attributes.AssetUrls(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(v12, 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for ServerTranscript.Attributes.AssetUrls(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  return a1;
}

char *initializeWithTake for ServerTranscript.Attributes.AssetUrls(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(v12, 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for ServerTranscript.Attributes.AssetUrls(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  return a1;
}

uint64_t _s14TimeBombedURLsVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACDD4E3C);
}

uint64_t sub_1ACDD4E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t _s14TimeBombedURLsVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACDD4EC0);
}

uint64_t sub_1ACDD4EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

void sub_1ACDD4F34()
{
  sub_1ACBD7EC8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for TranscriptDataError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACDD505CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptDataError()
{
  return &type metadata for TranscriptDataError;
}

unsigned char *_s14TimeBombedURLsV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACDD5160);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14TimeBombedURLsV10CodingKeysOMa()
{
  return &_s14TimeBombedURLsV10CodingKeysON;
}

unint64_t sub_1ACDD519C()
{
  unint64_t result = qword_1E99F5E40;
  if (!qword_1E99F5E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5E40);
  }
  return result;
}

unint64_t sub_1ACDD51F4()
{
  unint64_t result = qword_1E99F5E48;
  if (!qword_1E99F5E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5E48);
  }
  return result;
}

unint64_t sub_1ACDD524C()
{
  unint64_t result = qword_1E99F5E50;
  if (!qword_1E99F5E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5E50);
  }
  return result;
}

uint64_t sub_1ACDD52A0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001ACED1F80 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C52556C6D7474 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id AnalyticsEvent.__allocating_init(name:payload:)(void *a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  v10[4] = sub_1ACCBC7A8;
  v10[5] = v6;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  v10[2] = sub_1ACDD55C4;
  v10[3] = &block_descriptor_79;
  uint64_t v7 = _Block_copy(v10);
  swift_release();
  id v8 = objc_msgSend(v5, sel_initWithName_generator_, a1, v7);

  _Block_release(v7);
  return v8;
}

id AnalyticsEvent.name.getter()
{
  return *(id *)(v0 + OBJC_IVAR___PFAnalyticsEvent_name);
}

uint64_t sub_1ACDD556C()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___PFAnalyticsEvent_payloadGenerator);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_retain();
  return v2;
}

id sub_1ACDD55C4(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1ACAA3690();
    unsigned int v4 = (void *)sub_1ACE75FC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v4 = 0;
  }
  return v4;
}

uint64_t sub_1ACDD56E4(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + OBJC_IVAR___PFAnalyticsEvent_payloadGenerator);
  swift_beginAccess();
  *id v5 = a1;
  v5[1] = a2;
  return swift_release();
}

uint64_t sub_1ACDD5744@<X0>(void *a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR___PFAnalyticsEvent_payloadGenerator);
  swift_beginAccess();
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  *a2 = sub_1ACDD60AC;
  a2[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v6;
  return swift_retain();
}

uint64_t sub_1ACDD57D0(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = (uint64_t (**)())(*a2 + OBJC_IVAR___PFAnalyticsEvent_payloadGenerator);
  swift_beginAccess();
  *uint64_t v6 = sub_1ACDD6074;
  v6[1] = (uint64_t (*)())v5;
  swift_retain();
  return swift_release();
}

uint64_t (*sub_1ACDD586C())()
{
  return j__swift_endAccess;
}

id AnalyticsEvent.__allocating_init(name:generator:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  *(void *)&v7[OBJC_IVAR___PFAnalyticsEvent_name] = a1;
  id v8 = &v7[OBJC_IVAR___PFAnalyticsEvent_payloadGenerator];
  *(void *)id v8 = a2;
  *((void *)v8 + 1) = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

id AnalyticsEvent.init(name:generator:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR___PFAnalyticsEvent_name] = a1;
  uint64_t v4 = &v3[OBJC_IVAR___PFAnalyticsEvent_payloadGenerator];
  *(void *)uint64_t v4 = a2;
  *((void *)v4 + 1) = a3;
  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for AnalyticsEvent();
  return objc_msgSendSuper2(&v6, sel_init);
}

id AnalyticsEvent.init(name:payload:)(void *a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  v9[4] = sub_1ACDD60F0;
  v9[5] = v5;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  _OWORD v9[2] = sub_1ACDD55C4;
  v9[3] = &block_descriptor_7_4;
  objc_super v6 = _Block_copy(v9);
  swift_release();
  id v7 = objc_msgSend(v2, sel_initWithName_generator_, a1, v6);

  _Block_release(v6);
  return v7;
}

uint64_t sub_1ACDD5B14()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t type metadata accessor for AnalyticsEvent()
{
  return self;
}

unint64_t sub_1ACDD5CF4()
{
  sub_1ACE77268();
  swift_bridgeObjectRelease();
  sub_1ACE761B8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  uint64_t v1 = (void (**)(uint64_t))(v0 + OBJC_IVAR___PFAnalyticsEvent_payloadGenerator);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = swift_retain();
  v2(v3);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5E68);
  sub_1ACE76228();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  return 0xD000000000000011;
}

id AnalyticsEvent.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AnalyticsEvent.init()()
{
}

id AnalyticsEvent.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnalyticsEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for AnalyticsEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AnalyticsEvent);
}

uint64_t dispatch thunk of AnalyticsEvent.payloadGenerator.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of AnalyticsEvent.payloadGenerator.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AnalyticsEvent.payloadGenerator.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of AnalyticsEvent.__allocating_init(name:generator:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1ACDD5FFC()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1ACDD6034()
{
  return sub_1ACDD81B4(*(void *)(v0 + 16));
}

uint64_t sub_1ACDD603C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDD6074()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_1ACDD60AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

id DownloadableURLOptions.__allocating_init(_:nonAppInitiated:)(uint64_t a1, char a2)
{
  id v5 = objc_allocWithZone(v2);
  sub_1ACE74DD8();
  objc_super v6 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_init_nonAppInitiated_, v6, a2 & 1);

  uint64_t v8 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
  return v7;
}

Swift::Void __swiftcall NSMutableURLRequest.setNonAppInitiated(_:)(Swift::Bool a1)
{
  objc_msgSend(v1, sel__setNonAppInitiated_, a1);
}

id sub_1ACDD61C8(void *a1)
{
  return objc_msgSend(a1, sel__setNonAppInitiated_);
}

uint64_t DownloadableURLOptions.urlRawString.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation22DownloadableURLOptions_urlRawString);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DownloadableURLOptions.url.getter()
{
  return sub_1ACE74EF8();
}

uint64_t DownloadableURLOptions.nonAppInitiated.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation22DownloadableURLOptions_nonAppInitiated);
  swift_beginAccess();
  return *v1;
}

uint64_t DownloadableURLOptions.nonAppInitiated.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation22DownloadableURLOptions_nonAppInitiated);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*DownloadableURLOptions.nonAppInitiated.modify())()
{
  return j__swift_endAccess;
}

id DownloadableURLOptions.init(_:nonAppInitiated:)(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  sub_1ACE74DD8();
  objc_super v6 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v3, sel_init_nonAppInitiated_, v6, a2 & 1);

  uint64_t v8 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
  return v7;
}

id DownloadableURLOptions.__allocating_init(_:nonAppInitiated:)(uint64_t a1, uint64_t a2, char a3)
{
  id v7 = objc_allocWithZone(v3);
  uint64_t v8 = &v7[OBJC_IVAR____TtC18PodcastsFoundation22DownloadableURLOptions_urlRawString];
  *uint64_t v8 = a1;
  v8[1] = a2;
  v7[OBJC_IVAR____TtC18PodcastsFoundation22DownloadableURLOptions_nonAppInitiated] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

id DownloadableURLOptions.init(_:nonAppInitiated:)(uint64_t a1, uint64_t a2, char a3)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = &v3[OBJC_IVAR____TtC18PodcastsFoundation22DownloadableURLOptions_urlRawString];
  *uint64_t v8 = a1;
  v8[1] = a2;
  v3[OBJC_IVAR____TtC18PodcastsFoundation22DownloadableURLOptions_nonAppInitiated] = a3;
  v10.receiver = v3;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_init);
}

id DownloadableURLOptions.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DownloadableURLOptions.init()()
{
}

id DownloadableURLOptions.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DownloadableURLOptions()
{
  return self;
}

uint64_t method lookup function for DownloadableURLOptions(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DownloadableURLOptions);
}

uint64_t dispatch thunk of DownloadableURLOptions.__allocating_init(_:nonAppInitiated:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t NSManagedObjectContext.shows<A>(for:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  int v9 = (void *)swift_allocObject();
  _OWORD v9[2] = a4;
  v9[3] = v8;
  v9[4] = a2;
  v9[5] = a3;
  void v9[6] = a1;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  objc_super v10 = (void *)sub_1ACE76CF8();
  uint64_t v11 = NSManagedObjectContext.performAndPublish<A>(queue:_:)(v10, (uint64_t)sub_1ACDD6CFC, (uint64_t)v9, a4);
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_1ACDD6AA4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACDD6ADC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1AD11B470](v3);
  if (!v4) {
    return a2(MEMORY[0x1E4FBC860]);
  }
  id v5 = (void *)v4;
  objc_super v6 = self;
  id v7 = @"MTPodcast";
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_1ACB02BC0(v8);
  swift_bridgeObjectRelease();
  int v9 = (void *)sub_1ACE76978();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v6, sel_predicateForPodcastUuids_, v9);

  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v12 = (void *)sub_1ACE76558();
  id v13 = objc_msgSend(v5, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_, v7, v10, v12, 1);

  if (v13)
  {
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
    unint64_t v14 = sub_1ACE76578();

    uint64_t v15 = sub_1ACC2C314(v14);
    swift_bridgeObjectRelease();
    if (v15) {
      uint64_t v11 = v15;
    }
  }
  a2(v11);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACDD6CB4()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACDD6CFC()
{
  return sub_1ACDD6ADC(*(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t NSManagedObjectContext.unsafeShows(for:sortDescriptors:limit:)(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  sub_1ACE761B8();
  id v7 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v8 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  id v10 = Array<A>.showCoreDataPredicate()(a1);
  objc_msgSend(v9, sel_setPredicate_, v10);

  if (!(a2 >> 62))
  {
    if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_3:
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
    uint64_t v11 = (void *)sub_1ACE76558();
    objc_msgSend(v9, sel_setSortDescriptors_, v11);
  }
LABEL_4:
  if ((a4 & 1) == 0) {
    objc_msgSend(v9, sel_setFetchLimit_, a3);
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F80);
  uint64_t v12 = sub_1ACE76EE8();

  return v12;
}

uint64_t NSManagedObjectContext.unsafeShow(for:sortDescriptors:)(void *a1, uint64_t a2, char a3, unint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7707B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  *(unsigned char *)(inited + 48) = a3;
  sub_1ACA50CB8(a1, a2, a3);
  unint64_t v10 = NSManagedObjectContext.unsafeShows(for:sortDescriptors:limit:)(inited, a4, 1, 0);
  swift_setDeallocating();
  uint64_t result = swift_arrayDestroy();
  if (v4) {
    return a4;
  }
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    a4 = sub_1ACE77508();
    uint64_t result = swift_bridgeObjectRelease();
    if (!a4) {
      goto LABEL_8;
    }
  }
  else
  {
    a4 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!a4)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return a4;
    }
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
    id v12 = (id)MEMORY[0x1AD119490](0, v10);
    goto LABEL_7;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(v10 + 32);
LABEL_7:
    a4 = (unint64_t)v12;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

{
  uint64_t v4;
  uint64_t result;

  uint64_t result = NSManagedObjectContext.unsafeShow(for:sortDescriptors:)(a1, a2, a3, a4);
  if (!v4 && !result)
  {
    sub_1ACDD7070();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1ACDD7070()
{
  unint64_t result = qword_1E99F5E78;
  if (!qword_1E99F5E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5E78);
  }
  return result;
}

uint64_t NSManagedObjectContext.unsafeShowUUID(for:)(void *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (uint64_t)a1;
  if (a3 == 2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    id v5 = NSManagedObjectContext.unsafeShow(for:sortDescriptors:)(a1, a2, a3, MEMORY[0x1E4FBC860]);
    if (!v3)
    {
      id v7 = v5;
      if (v5)
      {
        id v8 = objc_msgSend(v5, sel_uuid);
        if (v8)
        {
          id v9 = v8;
          uint64_t v4 = sub_1ACE761B8();
        }
        else
        {

          return 0;
        }
      }
      else
      {
        sub_1ACDD7070();
        swift_allocError();
        swift_willThrow();
      }
    }
  }
  return v4;
}

uint64_t static ShowFetchError.== infix(_:_:)()
{
  return 1;
}

uint64_t ShowFetchError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t ShowFetchError.hashValue.getter()
{
  return sub_1ACE77B78();
}

unint64_t sub_1ACDD7234()
{
  unint64_t result = qword_1E99F5E80;
  if (!qword_1E99F5E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5E80);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ShowFetchError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACDD7324);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowFetchError()
{
  return &type metadata for ShowFetchError;
}

uint64_t AnyAssetCache.containsAsset(for:)()
{
  return (*(uint64_t (**)(void))(v0 + 32))() & 1;
}

uint64_t AnyAssetCache.invalidate(at:)()
{
  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t AnyAssetCache.asset(at:)()
{
  return (*v0)();
}

uint64_t AnyAssetCache.store(asset:at:)()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t AssetCache.eraseToAnyAssetCache()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  __n128 v7 = MEMORY[0x1F4188790](a1);
  id v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v9, v3, a1, v7);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  return AnyAssetCache.init<A>(source:)((uint64_t)v9, AssociatedTypeWitness, v12, a1, a2, a3);
}

uint64_t AnyAssetCache.init<A>(source:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (**a6)()@<X8>)
{
  uint64_t v37 = a5;
  uint64_t v38 = a1;
  unint64_t v32 = a6;
  uint64_t v33 = a3;
  uint64_t v31 = a2;
  uint64_t v8 = *(void *)(a4 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __n128 v10 = MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void (**)(char *, __n128))(v8 + 16);
  v12(v11, v10);
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = ((v13 + 48) & ~v13) + v9;
  uint64_t v15 = (v13 + 48) & ~v13;
  char v29 = (void (*)(char *, uint64_t, uint64_t))v12;
  uint64_t v30 = v15;
  uint64_t v35 = v13 | 7;
  uint64_t v36 = v14;
  int v16 = (uint64_t (*)())swift_allocObject();
  *((void *)v16 + 2) = a2;
  uint64_t v17 = v33;
  *((void *)v16 + 3) = v33;
  *((void *)v16 + 4) = a4;
  *((void *)v16 + 5) = v37;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v34((char *)v16 + v15, v11, a4);
  ((void (*)(char *, uint64_t, uint64_t))v12)(v11, v38, a4);
  uint64_t v18 = (uint64_t (*)())swift_allocObject();
  uint64_t v20 = v30;
  uint64_t v19 = v31;
  *((void *)v18 + 2) = v31;
  *((void *)v18 + 3) = v17;
  uint64_t v21 = v37;
  *((void *)v18 + 4) = a4;
  *((void *)v18 + 5) = v21;
  v34((char *)v18 + v20, v11, a4);
  v29(v11, v38, a4);
  uint64_t v22 = (uint64_t (*)())swift_allocObject();
  *((void *)v22 + 2) = v19;
  *((void *)v22 + 3) = v17;
  *((void *)v22 + 4) = a4;
  *((void *)v22 + 5) = v21;
  BOOL v23 = (void (*)(char *, uint64_t, uint64_t))v34;
  v34((char *)v22 + v20, v11, a4);
  v23(v11, v38, a4);
  uint64_t v24 = (uint64_t (*)())swift_allocObject();
  uint64_t v25 = v33;
  *((void *)v24 + 2) = v19;
  *((void *)v24 + 3) = v25;
  uint64_t v26 = v37;
  *((void *)v24 + 4) = a4;
  *((void *)v24 + 5) = v26;
  uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v23)((char *)v24 + v20, v11, a4);
  uint64_t v28 = v32;
  *unint64_t v32 = sub_1ACDD77D0;
  v28[1] = v16;
  v28[2] = sub_1ACDD7840;
  v28[3] = v18;
  v28[4] = sub_1ACDD78B0;
  v28[5] = v22;
  v28[6] = sub_1ACDD7924;
  v28[7] = v24;
  return result;
}

uint64_t sub_1ACDD77D0()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 40) + 24))();
}

uint64_t sub_1ACDD7840()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 40) + 32))();
}

uint64_t sub_1ACDD78B0()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 40) + 40))() & 1;
}

uint64_t sub_1ACDD7924()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 40) + 48))();
}

uint64_t sub_1ACDD799C()
{
  return AnyAssetCache.invalidate(at:)();
}

uint64_t sub_1ACDD79B4()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ACDD7A00(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1ACDD7A84(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1ACDD7B14(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  return a1;
}

uint64_t sub_1ACDD7B7C(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1ACDD7BC4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AnyAssetCache()
{
  return __swift_instantiateGenericMetadata();
}

id MTPodcast.applyFollowedShowSettings(for:)(uint64_t a1)
{
  objc_msgSend(v1, sel_setNotifications_, 1);
  objc_msgSend(v1, sel_setShowTypeSetting_, a1);
  objc_msgSend(v1, sel_setHidesPlayedEpisodes_, 0);
  objc_msgSend(v1, sel_setEpisodeLimit_, 0x100000001);
  return objc_msgSend(v1, sel_setDeletePlayedEpisodes_, 0xFFFFFFFFLL);
}

Swift::Void __swiftcall MTPodcast.applyUnfollowedShowSettings()()
{
  id v1 = self;
  id v2 = objc_msgSend(v0, sel_showTypeInFeed);
  id v3 = objc_msgSend(v1, sel_showTypeFromString_, v2);

  objc_msgSend(v0, sel_applyFollowedShowSettingsFor_, v3);
  objc_msgSend(v0, sel_setEpisodeLimit_, 0x100000000);
  objc_msgSend(v0, sel_setNotifications_, 0);
}

uint64_t getEnumTagSinglePayload for ShowSettings(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ShowSettings(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowSettings()
{
  return &type metadata for ShowSettings;
}

unint64_t sub_1ACDD7F80()
{
  return static MAPIRepresentable.typedIncludes.getter();
}

unint64_t static MAPIRepresentable.typedIncludes.getter()
{
  return sub_1ACA364C4(MEMORY[0x1E4FBC860]);
}

uint64_t dispatch thunk of MAPIRepresentable.init(mediaObject:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of static MAPIRepresentable.serverContentType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static MAPIRepresentable.typedIncludes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MAPIRepresentable.adamID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MAPIRepresentable.alignID(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

id static AnalyticsEvent.drmKeyRecovered(payload:)(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  v8[4] = sub_1ACB19A38;
  v8[5] = v3;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  v8[2] = sub_1ACDD55C4;
  _OWORD v8[3] = &block_descriptor_80;
  BOOL v4 = _Block_copy(v8);
  int v5 = @"com.apple.podcasts.DRMKeysRecovered";
  swift_bridgeObjectRetain();
  swift_release();
  id v6 = objc_msgSend(v2, sel_initWithName_generator_, v5, v4);

  _Block_release(v4);
  return v6;
}

id static AnalyticsEvent.globalRetentionPolicy.getter()
{
  uint64_t v0 = (objc_class *)type metadata accessor for AnalyticsEvent();
  id v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR___PFAnalyticsEvent_name] = @"com.apple.podcasts.downloads.settings.global.retention-policy";
  id v2 = (id (**)())&v1[OBJC_IVAR___PFAnalyticsEvent_payloadGenerator];
  *id v2 = sub_1ACDD8678;
  v2[1] = 0;
  v5.receiver = v1;
  v5.super_class = v0;
  uint64_t v3 = @"com.apple.podcasts.downloads.settings.global.retention-policy";
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t sub_1ACDD81B4(uint64_t a1)
{
  id v1 = (id)(*(uint64_t (**)(void))(a1 + 16))();
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  sub_1ACAA3690();
  uint64_t v3 = sub_1ACE75FF8();

  return v3;
}

uint64_t sub_1ACDD8224()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id static AnalyticsEvent.drmKeyRecovered(generator:)(uint64_t a1, uint64_t a2)
{
  BOOL v4 = (objc_class *)type metadata accessor for AnalyticsEvent();
  objc_super v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR___PFAnalyticsEvent_name] = @"com.apple.podcasts.DRMKeysRecovered";
  id v6 = &v5[OBJC_IVAR___PFAnalyticsEvent_payloadGenerator];
  *(void *)id v6 = a1;
  *((void *)v6 + 1) = a2;
  v9.receiver = v5;
  v9.super_class = v4;
  uint64_t v7 = @"com.apple.podcasts.DRMKeysRecovered";
  swift_retain();
  return objc_msgSendSuper2(&v9, sel_init);
}

id sub_1ACDD8678()
{
  id result = PFAnalyticsNumberForGlobalEpisodeLimit();
  if (result)
  {
    id v1 = result;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E4A0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
    *(void *)(inited + 32) = 0xD000000000000015;
    *(void *)(inited + 40) = 0x80000001ACED21A0;
    *(void *)(inited + 48) = v1;
    return (id)sub_1ACA36DD8(inited);
  }
  return result;
}

id static AnalyticsEvent.episodeMissingDownload()()
{
  uint64_t v0 = @"com.apple.podcastsEpisodeMissingAsset";
  unint64_t v1 = sub_1ACA36DD8(MEMORY[0x1E4FBC860]);
  id v2 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  v7[4] = sub_1ACDD968C;
  v7[5] = v3;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  void v7[2] = sub_1ACDD55C4;
  v7[3] = &block_descriptor_7_5;
  BOOL v4 = _Block_copy(v7);
  swift_release();
  id v5 = objc_msgSend(v2, sel_initWithName_generator_, v0, v4);

  _Block_release(v4);
  return v5;
}

id AnalyticsEvent.__allocating_init(cacheDeletedMediaFiles:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E4A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(void *)(inited + 32) = 0x45646574656C6564;
  *(void *)(inited + 40) = 0xEF7365646F736970;
  id v4 = objc_allocWithZone(MEMORY[0x1E4F28ED0]);
  id v5 = @"com.apple.podcasts.mediaFilesCacheDeleted";
  *(void *)(inited + 48) = objc_msgSend(v4, sel_initWithInteger_, a1);
  unint64_t v6 = sub_1ACA36DD8(inited);
  id v7 = objc_allocWithZone(v1);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v6;
  aBlock[4] = sub_1ACDD968C;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACDD55C4;
  aBlock[3] = &block_descriptor_14_0;
  objc_super v9 = _Block_copy(aBlock);
  swift_release();
  id v10 = objc_msgSend(v7, sel_initWithName_generator_, v5, v9);

  _Block_release(v9);
  return v10;
}

id AnalyticsEvent.__allocating_init(cacheDeletedFilesRestored:failed:)(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E4A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84820;
  *(void *)(inited + 32) = 0xD000000000000010;
  *(void *)(inited + 40) = 0x80000001ACED2140;
  id v6 = objc_allocWithZone(MEMORY[0x1E4F28ED0]);
  id v7 = @"com.apple.podcasts.cacheDeleteRedownloaded";
  *(void *)(inited + 48) = objc_msgSend(v6, sel_initWithInteger_, a1);
  strcpy((char *)(inited + 56), "failedEpisodes");
  *(unsigned char *)(inited + 71) = -18;
  *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, a2);
  unint64_t v8 = sub_1ACA36DD8(inited);
  id v9 = objc_allocWithZone(v2);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  v14[4] = sub_1ACDD968C;
  v14[5] = v10;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  v14[2] = sub_1ACDD55C4;
  v14[3] = &block_descriptor_21_4;
  uint64_t v11 = _Block_copy(v14);
  swift_release();
  id v12 = objc_msgSend(v9, sel_initWithName_generator_, v7, v11);

  _Block_release(v11);
  return v12;
}

id _s18PodcastsFoundation14AnalyticsEventC25transcriptAlignmentFailed6reasonACSS_tFZ_0()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E4A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(void *)(inited + 32) = 0x6E6F73616572;
  *(void *)(inited + 40) = 0xE600000000000000;
  unint64_t v1 = @"com.apple.podcasts.transcriptAlignmentFailed";
  *(void *)(inited + 48) = sub_1ACE76178();
  unint64_t v2 = sub_1ACA36DD8(inited);
  id v3 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  aBlock[4] = sub_1ACDD968C;
  aBlock[5] = v4;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACDD55C4;
  aBlock[3] = &block_descriptor_66_2;
  id v5 = _Block_copy(aBlock);
  swift_release();
  id v6 = objc_msgSend(v3, sel_initWithName_generator_, v1, v5);

  _Block_release(v5);
  return v6;
}

id _s18PodcastsFoundation14AnalyticsEventC31downloadedFileHasiPodLibraryURL14discoveryPoint4path6sourceACSS_S2SSgtFZ_0()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E4A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84470;
  *(void *)(inited + 32) = 0x7265766F63736944;
  *(void *)(inited + 40) = 0xEF746E696F502079;
  unint64_t v1 = @"com.apple.podcasts.DownloadedFileHasiPodLibraryURL";
  *(void *)(inited + 48) = sub_1ACE76178();
  *(void *)(inited + 56) = 1752457552;
  *(void *)(inited + 64) = 0xE400000000000000;
  *(void *)(inited + 72) = sub_1ACE76178();
  *(void *)(inited + 80) = 0x656372756F53;
  *(void *)(inited + 88) = 0xE600000000000000;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1ACE76178();
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = v2;
  unint64_t v3 = sub_1ACA36DD8(inited);
  id v4 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  aBlock[4] = sub_1ACDD968C;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACDD55C4;
  aBlock[3] = &block_descriptor_59_0;
  id v6 = _Block_copy(aBlock);
  swift_release();
  id v7 = objc_msgSend(v4, sel_initWithName_generator_, v1, v6);

  _Block_release(v6);
  return v7;
}

id _s18PodcastsFoundation14AnalyticsEventC25episodeDurationComparison0E6AdamId8durationACs5Int64V_SdtFZ_0(uint64_t a1, double a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E4A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84820;
  strcpy((char *)(inited + 32), "episodeAdamId");
  *(_WORD *)(inited + 46) = -4864;
  id v5 = objc_allocWithZone(MEMORY[0x1E4F28ED0]);
  id v6 = @"com.apple.podcasts.dynamicAdAssessmentByEpisode";
  *(void *)(inited + 48) = objc_msgSend(v5, sel_initWithLongLong_, a1);
  *(void *)(inited + 56) = 0x4465646F73697065;
  *(void *)(inited + 64) = 0xEF6E6F6974617275;
  *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithDouble_, a2);
  unint64_t v7 = sub_1ACA36DD8(inited);
  id v8 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  v13[4] = sub_1ACDD968C;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1ACDD55C4;
  v13[3] = &block_descriptor_52_0;
  uint64_t v10 = _Block_copy(v13);
  swift_release();
  id v11 = objc_msgSend(v8, sel_initWithName_generator_, v6, v10);

  _Block_release(v10);
  return v11;
}

id _s18PodcastsFoundation14AnalyticsEventC25episodeDurationComparison012mapiProvidedF0010playerItemF0ACSd_SdtFZ_0(double a1, double a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E4A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84820;
  *(void *)(inited + 32) = 0xD000000000000014;
  *(void *)(inited + 40) = 0x80000001ACED2200;
  id v5 = objc_allocWithZone(MEMORY[0x1E4F28ED0]);
  id v6 = @"com.apple.podcasts.dynamicAdAssessmentByDurationComparison";
  *(void *)(inited + 48) = objc_msgSend(v5, sel_initWithDouble_, a1);
  *(void *)(inited + 56) = 0xD000000000000012;
  *(void *)(inited + 64) = 0x80000001ACED2220;
  *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithDouble_, a2);
  unint64_t v7 = sub_1ACA36DD8(inited);
  id v8 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  v13[4] = sub_1ACDD968C;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1ACDD55C4;
  v13[3] = &block_descriptor_45_3;
  uint64_t v10 = _Block_copy(v13);
  swift_release();
  id v11 = objc_msgSend(v8, sel_initWithName_generator_, v6, v10);

  _Block_release(v10);
  return v11;
}

id _s18PodcastsFoundation14AnalyticsEventC19darkDownloadsChange7wasDark02isI06reason12previousExitACSb_SbSo06PFDarkG6ReasonV0B04DateVtFZ_0(char a1, char a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E4A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84630;
  *(void *)(inited + 32) = 0x6B726144736177;
  *(void *)(inited + 40) = 0xE700000000000000;
  id v7 = objc_allocWithZone(MEMORY[0x1E4F28ED0]);
  id v8 = @"com.apple.podcasts.darkDownloadChange";
  *(void *)(inited + 48) = objc_msgSend(v7, sel_initWithBool_, a1 & 1);
  *(void *)(inited + 56) = 0x6B7261447369;
  *(void *)(inited + 64) = 0xE600000000000000;
  *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, a2 & 1);
  *(void *)(inited + 80) = 0x656372756F73;
  *(void *)(inited + 88) = 0xE600000000000000;
  *(void *)(inited + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedInteger_, a3);
  *(void *)(inited + 104) = 0xD000000000000010;
  *(void *)(inited + 112) = 0x80000001ACED21E0;
  sub_1ACE75048();
  *(void *)(inited + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithDouble_, v9);
  unint64_t v10 = sub_1ACA36DD8(inited);
  id v11 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  v16[4] = sub_1ACDD968C;
  v16[5] = v12;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  v16[2] = sub_1ACDD55C4;
  v16[3] = &block_descriptor_38_3;
  uint64_t v13 = _Block_copy(v16);
  swift_release();
  id v14 = objc_msgSend(v11, sel_initWithName_generator_, v8, v13);

  _Block_release(v13);
  return v14;
}

uint64_t sub_1ACDD9620()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1ACDD96A4(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(a2 + 16))(a2, a1 & 1);
}

id sub_1ACDD96BC()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FairPlayRolloutController()), sel_init);
  qword_1EB76C578 = (uint64_t)result;
  return result;
}

id FairPlayRolloutController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id static FairPlayRolloutController.shared.getter()
{
  if (qword_1EB76C580 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB76C578;
  return v0;
}

uint64_t FairPlayRolloutController.didRollbackStatusChange(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1ACE75DC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = sub_1ACE75E48();
  uint64_t v9 = *(void *)(v16[0] - 8);
  MEMORY[0x1F4188790](v16[0]);
  id v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = sub_1ACDD9AB8();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = ObjectType;
  aBlock[4] = sub_1ACDDAB08;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_81;
  id v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACE75E08();
  v16[1] = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, void))(v9 + 8))(v11, v16[0]);
  return swift_release();
}

id sub_1ACDD9AB8()
{
  uint64_t v1 = sub_1ACE76CE8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = OBJC_IVAR___PFFairPlayRolloutController____lazy_storage___internalQueue;
  id v8 = *(void **)(v0 + OBJC_IVAR___PFFairPlayRolloutController____lazy_storage___internalQueue);
  if (v8)
  {
    id v9 = *(id *)(v0 + OBJC_IVAR___PFFairPlayRolloutController____lazy_storage___internalQueue);
  }
  else
  {
    unint64_t v16 = sub_1ACA51E1C();
    sub_1ACE75E18();
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t v14 = sub_1ACB23198((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
    uint64_t v15 = v0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
    sub_1ACAC5D64((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
    sub_1ACE770E8();
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCC58], v1);
    uint64_t v10 = (void *)sub_1ACE76D28();
    id v11 = *(void **)(v15 + v7);
    *(void *)(v15 + v7) = v10;
    id v9 = v10;

    id v8 = 0;
  }
  id v12 = v8;
  return v9;
}

uint64_t sub_1ACDD9D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(self, sel_sharedInstance);
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1ACDDAB88;
  *(void *)(v8 + 24) = v7;
  v11[4] = sub_1ACAA3908;
  v11[5] = v8;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  void v11[2] = sub_1ACAA3910;
  v11[3] = &block_descriptor_13_2;
  id v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_createSnapshotWithCompletion_, v9);
  _Block_release(v9);

  return swift_release();
}

void sub_1ACDD9E84(id a1, char a2, void (*a3)(uint64_t))
{
  if (a2)
  {
    id v6 = a1;
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1ACE754C8();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB76D598);
    id v8 = a1;
    id v9 = a1;
    uint64_t v10 = sub_1ACE75498();
    os_log_type_t v11 = sub_1ACE76BE8();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v45 = v44;
      *(_DWORD *)uint64_t v12 = 136315394;
      sub_1ACA3189C(0xD00000000000002FLL, 0x80000001ACED22B0, &v45);
      sub_1ACE76FF8();
      *(_WORD *)(v12 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v13 = sub_1ACE77A98();
      sub_1ACA3189C(v13, v14, &v45);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACDDABD0(a1, 1);
      sub_1ACDDABD0(a1, 1);
      _os_log_impl(&dword_1AC9D5000, v10, v11, "%s Unable to create local bag snapshot, cannot determine rollback status %{public}s.", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v44, -1, -1);
      MEMORY[0x1AD11B340](v12, -1, -1);
    }
    else
    {
      sub_1ACDDABD0(a1, 1);
      sub_1ACDDABD0(a1, 1);
    }

LABEL_16:
    a3(0);
    goto LABEL_17;
  }
  uint64_t v15 = (void *)*((void *)a1 + 2);
  swift_retain();
  id v16 = objc_msgSend(v15, sel_BOOLForKey_, @"fairplay-v2-enabled");
  id v17 = objc_msgSend(v16, sel_unsafeSnapshotSyncValue);

  if (!v17)
  {
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1ACE754C8();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EB76D598);
    uint64_t v26 = sub_1ACE75498();
    os_log_type_t v27 = sub_1ACE76BE8();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v45 = v29;
      *(_DWORD *)uint64_t v28 = 136315138;
      sub_1ACA3189C(0xD00000000000002FLL, 0x80000001ACED22B0, &v45);
      sub_1ACE76FF8();
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v29, -1, -1);
      MEMORY[0x1AD11B340](v28, -1, -1);
    }

    goto LABEL_16;
  }
  unsigned int v18 = objc_msgSend(v17, sel_BOOLValue);

  uint64_t v19 = self;
  id v20 = objc_msgSend(v19, sel__applePodcastsFoundationSharedUserDefaults);
  char v21 = sub_1ACABCA90();
  if (v21 == 2)
  {
    uint64_t v22 = qword_1E99F1900;
    BOOL v23 = off_1E99F1908;
    swift_bridgeObjectRetain();
    char v24 = sub_1ACABCBA4(v22, (uint64_t)v23, 1);

    swift_bridgeObjectRelease();
  }
  else
  {
    char v30 = v21;

    char v24 = v30 & 1;
  }
  if (v18 == (v24 & 1))
  {
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_1ACE754C8();
    __swift_project_value_buffer(v39, (uint64_t)qword_1EB76D598);
    uint64_t v40 = sub_1ACE75498();
    os_log_type_t v41 = sub_1ACE76BE8();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v45 = v43;
      *(_DWORD *)uint64_t v42 = 136315138;
      sub_1ACA3189C(0xD00000000000002FLL, 0x80000001ACED22B0, &v45);
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v40, v41, "%s Rollback status unchanged.", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v43, -1, -1);
      MEMORY[0x1AD11B340](v42, -1, -1);
    }

    a3(0);
  }
  else
  {
    id v31 = objc_msgSend(v19, sel__applePodcastsFoundationSharedUserDefaults);
    unint64_t v32 = (void *)sub_1ACE766C8();
    swift_bridgeObjectRetain();
    uint64_t v33 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    objc_msgSend(v31, sel_setValue_forKey_, v32, v33);

    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1ACE754C8();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EB76D598);
    uint64_t v35 = sub_1ACE75498();
    os_log_type_t v36 = sub_1ACE76BE8();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v45 = v38;
      *(_DWORD *)uint64_t v37 = 136315138;
      sub_1ACA3189C(0xD00000000000002FLL, 0x80000001ACED22B0, &v45);
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v35, v36, "%s Rollback status changed.", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v38, -1, -1);
      MEMORY[0x1AD11B340](v37, -1, -1);

      a3(1);
    }
    else
    {

      a3(1);
    }
  }
LABEL_17:
  sub_1ACDDABD0(a1, a2 & 1);
}

id FairPlayRolloutController.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR___PFFairPlayRolloutController____lazy_storage___internalQueue] = 0;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_init);
}

id FairPlayRolloutController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s18PodcastsFoundation25FairPlayRolloutControllerC9isEnabledSbyF_0()
{
  unsigned int v18 = &type metadata for Podcasts;
  unint64_t v0 = sub_1ACA56248();
  unint64_t v19 = v0;
  LOBYTE(v17[0]) = 18;
  char v1 = sub_1ACE75298();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
  if (v1)
  {
    unsigned int v18 = &type metadata for Podcasts;
    unint64_t v19 = v0;
    LOBYTE(v17[0]) = 8;
    unsigned __int8 v2 = sub_1ACE75298();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
  }
  else
  {
    unsigned __int8 v2 = 0;
  }
  id v3 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
  char v4 = sub_1ACABCA90();
  if (v4 == 2)
  {
    uint64_t v5 = qword_1E99F1900;
    id v6 = off_1E99F1908;
    swift_bridgeObjectRetain();
    unsigned __int8 v7 = sub_1ACABCBA4(v5, (uint64_t)v6, 1);

    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = v4;

    unsigned __int8 v7 = v8 & 1;
  }
  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1ACE754C8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB76D598);
  uint64_t v10 = sub_1ACE75498();
  os_log_type_t v11 = sub_1ACE76BD8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v17[0] = v13;
    *(_DWORD *)uint64_t v12 = 136315906;
    sub_1ACA3189C(0xD00000000000002FLL, 0x80000001ACED22B0, v17);
    sub_1ACE76FF8();
    *(_WORD *)(v12 + 12) = 2080;
    if (v2 & v7) {
      uint64_t v14 = 0;
    }
    else {
      uint64_t v14 = 542396238;
    }
    if (v2 & v7) {
      unint64_t v15 = 0xE000000000000000;
    }
    else {
      unint64_t v15 = 0xE400000000000000;
    }
    sub_1ACA3189C(v14, v15, v17);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 22) = 1024;
    sub_1ACE76FF8();
    *(_WORD *)(v12 + 28) = 1024;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v10, v11, "%s FairPlay V2 is %srolled out, local feature enabled %{BOOL}d, rollback enabled %{BOOL}d.", (uint8_t *)v12, 0x22u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v13, -1, -1);
    MEMORY[0x1AD11B340](v12, -1, -1);
  }

  return v2 & v7 & 1;
}

uint64_t sub_1ACDDAAD0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDDAB08()
{
  return sub_1ACDD9D30(v0[2], v0[3], v0[4]);
}

uint64_t type metadata accessor for FairPlayRolloutController()
{
  return self;
}

uint64_t sub_1ACDDAB38()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1ACDDAB70(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

void sub_1ACDDAB88(void *a1, char a2)
{
  sub_1ACDD9E84(a1, a2 & 1, *(void (**)(uint64_t))(v2 + 16));
}

uint64_t sub_1ACDDAB98()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACDDABD0(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_release();
  }
}

uint64_t MTPodcast.adamId.getter()
{
  if (objc_msgSend(self, sel_isEmpty_, objc_msgSend(v0, sel_storeCollectionId))) {
    return 0;
  }
  uint64_t v2 = (uint64_t)objc_msgSend(v0, sel_storeCollectionId);
  return v2 & ~(v2 >> 63);
}

void sub_1ACDDAC5C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned __int8 v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 1)
  {
    sub_1ACE75098();
    sub_1ACE74FB8();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(void *)(v2 + 160) = v12;
    uint64_t v10 = (unsigned char *)(v2 + 168);
  }
  else
  {
    if (a1) {
      return;
    }
    sub_1ACE75098();
    sub_1ACE74FB8();
    uint64_t v9 = v8;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(void *)(v2 + 144) = v9;
    uint64_t v10 = (unsigned char *)(v2 + 152);
  }
  *uint64_t v10 = 0;
}

uint64_t sub_1ACDDAD88()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SyncKeysInMemoryStore()
{
  return self;
}

uint64_t sub_1ACDDAE04()
{
  return *(unsigned __int8 *)(*(void *)v0 + 56);
}

uint64_t sub_1ACDDAE10(uint64_t result)
{
  *(unsigned char *)(*(void *)v1 + 56) = result;
  return result;
}

uint64_t sub_1ACDDAE1C()
{
  return *(unsigned __int8 *)(*(void *)v0 + 57);
}

uint64_t sub_1ACDDAE28(uint64_t result)
{
  *(unsigned char *)(*(void *)v1 + 57) = result;
  return result;
}

uint64_t sub_1ACDDAE34()
{
  return *(unsigned __int8 *)(*(void *)v0 + 58);
}

uint64_t sub_1ACDDAE40(uint64_t result)
{
  *(unsigned char *)(*(void *)v1 + 58) = result;
  return result;
}

uint64_t sub_1ACDDAE4C(uint64_t a1)
{
  uint64_t v2 = *v1;
  if (a1 == 1) {
    return *(unsigned __int8 *)(v2 + 17);
  }
  if (a1) {
    return 0;
  }
  return *(unsigned __int8 *)(v2 + 16);
}

uint64_t sub_1ACDDAE74(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *v2;
  if (a2 == 1)
  {
    *(unsigned char *)(v3 + 17) = result & 1;
  }
  else if (!a2)
  {
    *(unsigned char *)(v3 + 16) = result & 1;
  }
  return result;
}

uint64_t sub_1ACDDAE9C(uint64_t a1)
{
  uint64_t v2 = *v1;
  if (a1 == 1)
  {
    uint64_t v3 = (uint64_t *)(v2 + 40);
  }
  else
  {
    if (a1) {
      return 0;
    }
    uint64_t v3 = (uint64_t *)(v2 + 24);
  }
  uint64_t v4 = *v3;
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_1ACDDAF00(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)*v3;
  if (result == 1)
  {
    uint64_t v5 = v4 + 5;
    uint64_t v6 = v4 + 6;
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v5 = v4 + 3;
    uint64_t v6 = v4 + 4;
  }
  *uint64_t v5 = a2;
  *uint64_t v6 = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACDDAF74(uint64_t result)
{
  uint64_t v2 = *v1;
  if (result == 1)
  {
    uint64_t v3 = (void *)(v2 + 40);
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = (void *)(v2 + 24);
  }
  *uint64_t v3 = 0;
  v3[1] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACDDAFA8(uint64_t a1)
{
  uint64_t v2 = *v1;
  if (a1 == 1) {
    return *(unsigned __int8 *)(v2 + 60);
  }
  if (a1) {
    return 0;
  }
  return *(unsigned __int8 *)(v2 + 59);
}

uint64_t sub_1ACDDAFD0(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *v2;
  if (a2 == 1)
  {
    *(unsigned char *)(v3 + 60) = result & 1;
  }
  else if (!a2)
  {
    *(unsigned char *)(v3 + 59) = result & 1;
  }
  return result;
}

uint64_t sub_1ACDDAFF8()
{
  return *(unsigned __int8 *)(*(void *)v0 + 61);
}

uint64_t sub_1ACDDB004(uint64_t result)
{
  *(unsigned char *)(*(void *)v1 + 61) = result;
  return result;
}

uint64_t sub_1ACDDB010()
{
  return *(void *)(*(void *)v0 + 64);
}

uint64_t sub_1ACDDB020(uint64_t result, char a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 64) = result;
  *(unsigned char *)(v3 + 72) = a2 & 1;
  return result;
}

uint64_t sub_1ACDDB034()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACDDB068(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 80) = a1;
  *(void *)(v3 + 88) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACDDB07C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACDDB0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 128) = a1;
  *(void *)(v3 + 136) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACDDB0C4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACDDB0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACDDB10C()
{
  return *(void *)(*(void *)v0 + 96);
}

uint64_t sub_1ACDDB11C(uint64_t result, char a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = result;
  *(unsigned char *)(v3 + 104) = a2 & 1;
  return result;
}

uint64_t sub_1ACDDB130(uint64_t a1)
{
  uint64_t v2 = *v1;
  if (a1 == 1)
  {
    uint64_t v3 = v2 + 160;
    return *(void *)v3;
  }
  if (!a1)
  {
    uint64_t v3 = v2 + 144;
    return *(void *)v3;
  }
  return 0;
}

void sub_1ACDDB16C(uint64_t a1)
{
}

uint64_t sub_1ACDDB190(uint64_t result)
{
  uint64_t v2 = *v1;
  if (result == 1)
  {
    *(void *)(v2 + 160) = 0;
    uint64_t v3 = (unsigned char *)(v2 + 168);
  }
  else
  {
    if (result) {
      return result;
    }
    *(void *)(v2 + 144) = 0;
    uint64_t v3 = (unsigned char *)(v2 + 152);
  }
  *uint64_t v3 = 1;
  return result;
}

uint64_t Color.init(descriptor:)(uint64_t a1, unint64_t a2)
{
  return sub_1ACDDBDBC(a1, a2);
}

BOOL sub_1ACDDB1DC(uint64_t a1, uint64_t a2)
{
  return _s18PodcastsFoundation5ColorO2eeoiySbAC_ACtFZ_0(*(void **)a1, *(unsigned char *)(a1 + 8), *(void **)a2, *(unsigned char *)(a2 + 8));
}

uint64_t static Color.custom(_:)(uint64_t result)
{
  return result;
}

void *static Color.custom(_:)(void *a1)
{
  id v2 = a1;
  return a1;
}

uint64_t Color.description.getter(void *a1, char a2)
{
  if (!a2) {
    return HexColor.description.getter(a1);
  }
  if (a2 == 1)
  {
    uint64_t v3 = a1;
    sub_1ACE77268();
    swift_bridgeObjectRelease();
    uint64_t v4 = CGColorGetColorSpace(v3);
    if (v4)
    {
      uint64_t v5 = v4;
      CGColorSpaceCopyName(v4);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5E90);
    sub_1ACE76228();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    CGColorGetAlpha(v3);
    sub_1ACE76928();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    sub_1ACE76B38();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5E98);
    sub_1ACE76228();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACA74648(a1, 1);
    return 0x28726F6C6F434743;
  }
  else
  {
    uint64_t result = 0x756F72676B636162;
    switch((unint64_t)a1)
    {
      case 1uLL:
        uint64_t result = 0xD000000000000013;
        break;
      case 2uLL:
        uint64_t result = 0xD000000000000012;
        break;
      case 3uLL:
        uint64_t result = 0x7261656C63;
        break;
      case 4uLL:
        uint64_t result = 0xD000000000000010;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t sub_1ACDDB484()
{
  return Color.description.getter(*(void **)v0, *(unsigned char *)(v0 + 8));
}

unint64_t Color.debugDescription.getter(void *a1, char a2)
{
  if (!a2)
  {
    sub_1ACE77268();
    swift_bridgeObjectRelease();
    v4[0] = 0x65682E726F6C6F43;
    v4[1] = 0xEF28726F6C6F4378;
    HexColor.debugDescription.getter();
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    sub_1ACE77268();
    swift_bridgeObjectRelease();
    strcpy((char *)v4, "Color.cgColor(");
    HIBYTE(v4[1]) = -18;
    Color.description.getter(a1, 1);
LABEL_5:
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    return v4[0];
  }
  unint64_t result = 0xD000000000000010;
  switch((unint64_t)a1)
  {
    case 1uLL:
      unint64_t result = 0xD000000000000019;
      break;
    case 2uLL:
      unint64_t result = 0xD000000000000018;
      break;
    case 3uLL:
      unint64_t result = 0x6C632E726F6C6F43;
      break;
    case 4uLL:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACDDB630()
{
  return Color.debugDescription.getter(*(void **)v0, *(unsigned char *)(v0 + 8));
}

uint64_t Color.init(from:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  uint64_t v2 = sub_1ACE77858();
  uint64_t v4 = sub_1ACDDBDBC(v2, v3);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v4;
}

uint64_t sub_1ACDDB71C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(v11, v11[3]);
  uint64_t v5 = sub_1ACE77858();
  uint64_t v7 = sub_1ACDDBDBC(v5, v6);
  char v9 = v8;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *(void *)a2 = v7;
  *(unsigned char *)(a2 + 8) = v9;
  return result;
}

uint64_t Color.encode(to:)(void *a1, void *a2, char a3)
{
  uint64_t v6 = sub_1ACE77348();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  if (a3)
  {
    if (a3 != 1)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
      sub_1ACE778D8();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
    }
    sub_1ACA7516C(a2, 1);
    sub_1ACC0B7D8((CGColor *)a2);
    if ((v10 & 0x100000000) != 0)
    {
      __swift_project_boxed_opaque_existential_1(v21, v22);
      sub_1ACE778C8();
      uint64_t v19 = 0;
      unint64_t v20 = 0xE000000000000000;
      sub_1ACE77268();
      sub_1ACE762C8();
      BOOL v23 = a2;
      type metadata accessor for CGColor(0);
      uint64_t v12 = v11;
      sub_1ACE77458();
      sub_1ACE762C8();
      sub_1ACE77308();
      uint64_t v13 = sub_1ACE77358();
      swift_allocError();
      unint64_t v15 = v14;
      id v16 = (char *)v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4610) + 48);
      v15[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5EA0);
      *unint64_t v15 = v12;
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v16, v9, v6);
      (*(void (**)(void *, void, uint64_t))(*(void *)(v13 - 8) + 104))(v15, *MEMORY[0x1E4FBBAA0], v13);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
    }
    LODWORD(v19) = v10;
  }
  else
  {
    LODWORD(v19) = a2;
  }
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
  sub_1ACDDBFF4();
  sub_1ACE77938();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
}

uint64_t sub_1ACDDBC2C(void *a1)
{
  return Color.encode(to:)(a1, *(void **)v1, *(unsigned char *)(v1 + 8));
}

BOOL _s18PodcastsFoundation5ColorO2eeoiySbAC_ACtFZ_0(void *a1, char a2, void *a3, char a4)
{
  if (a2)
  {
    if (a2 == 1)
    {
      if (a4 == 1)
      {
        type metadata accessor for CGColor(0);
        sub_1ACA7516C(a1, 1);
        sub_1ACA7516C(a3, 1);
        sub_1ACDDC144();
        char v6 = sub_1ACE752A8();
        sub_1ACA74648(a3, 1);
        sub_1ACA74648(a1, 1);
        return v6 & 1;
      }
      return 0;
    }
    switch((unint64_t)a1)
    {
      case 1uLL:
        if (a4 != 2 || a3 != (void *)1) {
          return 0;
        }
        break;
      case 2uLL:
        if (a4 != 2 || a3 != (void *)2) {
          return 0;
        }
        break;
      case 3uLL:
        if (a4 != 2 || a3 != (void *)3) {
          return 0;
        }
        break;
      case 4uLL:
        if (a4 != 2 || a3 != (void *)4) {
          return 0;
        }
        break;
      default:
        if (a4 != 2 || a3) {
          return 0;
        }
        break;
    }
    return 1;
  }
  else
  {
    if (a4) {
      return 0;
    }
    return a1 == a3;
  }
}

uint64_t sub_1ACDDBDBC(uint64_t a1, unint64_t a2)
{
  BOOL v3 = a1 == 0x756F72676B636162 && a2 == 0xEA0000000000646ELL;
  if (v3 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001ACED2500 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ACED24E0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7261656C63 && a2 == 0xE500000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ACED24C0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    uint64_t result = sub_1ACC0B428(a1, a2);
    if (!v2) {
      return result;
    }
  }
  return result;
}

unint64_t sub_1ACDDBFF4()
{
  unint64_t result = qword_1E99F5EA8;
  if (!qword_1E99F5EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5EA8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Color(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1ACA7516C(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for Color(uint64_t a1)
{
}

uint64_t assignWithCopy for Color(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1ACA7516C(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1ACA74648(v5, v6);
  return a1;
}

uint64_t assignWithTake for Color(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1ACA74648(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for Color()
{
  return &type metadata for Color;
}

unint64_t sub_1ACDDC144()
{
  unint64_t result = qword_1E99F5EB0;
  if (!qword_1E99F5EB0)
  {
    type metadata accessor for CGColor(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5EB0);
  }
  return result;
}

uint64_t PodcastsContentKeySession.__allocating_init(storeTrackAdamID:)(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_ams_sharedAccountStore);
  id v3 = objc_msgSend(v2, sel_ams_activeiTunesAccount);

  type metadata accessor for PodcastsContentKeySession();
  swift_allocObject();
  return PodcastsContentKeySession.init(storeTrackAdamID:account:)(a1, v3);
}

uint64_t PodcastsContentKeySession.__allocating_init(storeTrackAdamID:account:)(uint64_t a1, void *a2)
{
  return PodcastsContentKeySession.init(storeTrackAdamID:account:)(a1, a2);
}

uint64_t type metadata accessor for PodcastsContentKeySession()
{
  return self;
}

uint64_t PodcastsContentKeySession.init(storeTrackAdamID:account:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v57 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v57 - v13;
  uint64_t v15 = sub_1ACE74F28();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v72 = (char *)&v57 - v20;
  MEMORY[0x1F4188790](v21);
  BOOL v23 = (char *)&v57 - v22;
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedLongLong_, a1);
  if (!v24)
  {

LABEL_30:
    type metadata accessor for PodcastsContentKeySession();
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v25 = v24;
  if (!a2)
  {

    goto LABEL_30;
  }
  id v26 = objc_msgSend(a2, sel_ams_DSID);
  if (!v26)
  {

    goto LABEL_30;
  }
  uint64_t v71 = v16;
  os_log_type_t v27 = v26;
  uint64_t v28 = self;
  id v69 = v27;
  id v29 = objc_msgSend(v28, sel_specificAccountWithDSID_, v27);
  id v30 = objc_allocWithZone(MEMORY[0x1E4FB8758]);
  id v68 = v29;
  id v67 = objc_msgSend(v30, sel_initWithIdentity_, v29);
  id v70 = objc_msgSend(self, sel_sharedInstance);
  id v31 = objc_msgSend(v70, sel_syncValueForKey_, @"fps-cert");
  unint64_t v64 = v18;
  if (v31)
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v73 = 0u;
    long long v74 = 0u;
  }
  uint64_t v32 = v71;
  sub_1ACA9D6FC((uint64_t)&v73, (uint64_t)v75);
  id v65 = a2;
  id v66 = v25;
  if (!v76)
  {
    sub_1ACA50E78((uint64_t)v75, qword_1EB7725E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v14, 1, 1, v15);
    goto LABEL_15;
  }
  uint64_t v63 = v8;
  int v33 = swift_dynamicCast();
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
  v34(v14, v33 ^ 1u, 1, v15);
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (v35(v14, 1, v15) == 1)
  {
LABEL_15:

    uint64_t v38 = (uint64_t)v14;
LABEL_29:
    sub_1ACA50E78(v38, &qword_1EB7731B0);
    goto LABEL_30;
  }
  long long v60 = v35;
  uint64_t v61 = v23;
  uint64_t v62 = v34;
  os_log_type_t v36 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  uint64_t v59 = v32 + 32;
  unint64_t v58 = v36;
  v36(v23, v14, v15);
  id v37 = v70;
  if (objc_msgSend(v70, sel_syncValueForKey_, @"podcasts-license-streaming-start"))
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v73 = 0u;
    long long v74 = 0u;
  }
  uint64_t v39 = (uint64_t)v63;
  sub_1ACA9D6FC((uint64_t)&v73, (uint64_t)v75);
  id v41 = v65;
  id v40 = v66;
  if (!v76)
  {
    sub_1ACA50E78((uint64_t)v75, qword_1EB7725E0);
    v62(v11, 1, 1, v15);
    goto LABEL_22;
  }
  int v42 = swift_dynamicCast();
  v62(v11, v42 ^ 1u, 1, v15);
  if (v60(v11, 1, v15) == 1)
  {
LABEL_22:

    (*(void (**)(char *, uint64_t))(v71 + 8))(v61, v15);
    uint64_t v38 = (uint64_t)v11;
    goto LABEL_29;
  }
  v58(v72, v11, v15);
  if (objc_msgSend(v37, sel_syncValueForKey_, @"podcasts-license-streaming-stop"))
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v73 = 0u;
    long long v74 = 0u;
  }
  sub_1ACA9D6FC((uint64_t)&v73, (uint64_t)v75);
  uint64_t v43 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v62;
  if (!v76)
  {
    sub_1ACA50E78((uint64_t)v75, qword_1EB7725E0);
    v43(v39, 1, 1, v15);
    goto LABEL_28;
  }
  int v44 = swift_dynamicCast();
  v43(v39, v44 ^ 1u, 1, v15);
  if (v60((char *)v39, 1, v15) == 1)
  {
LABEL_28:

    uint64_t v55 = *(void (**)(char *, uint64_t))(v71 + 8);
    v55(v72, v15);
    v55(v61, v15);
    uint64_t v38 = v39;
    goto LABEL_29;
  }
  uint64_t v45 = v64;
  v58(v64, (char *)v39, v15);
  id v46 = objc_allocWithZone(MEMORY[0x1E4FB85F8]);
  id v47 = v67;
  id v48 = objc_msgSend(v46, sel_initWithRequestContext_, v67);
  objc_msgSend(v48, sel_setAdamID_, v40);
  int64_t v49 = v72;
  int64_t v50 = (void *)sub_1ACE74E18();
  objc_msgSend(v48, sel_setKeyServerURL_, v50);

  uint64_t v51 = (void *)sub_1ACE74E18();
  objc_msgSend(v48, sel_setStreamingleaseStopURL_, v51);

  int64_t v52 = v61;
  long long v53 = (void *)sub_1ACE74E18();
  objc_msgSend(v48, sel_setKeyCertificateURL_, v53);

  objc_msgSend(v48, sel_setKeyServerProtocolType_, 2);
  char v54 = *(void (**)(char *, uint64_t))(v71 + 8);
  v54(v45, v15);
  v54(v49, v15);
  v54(v52, v15);
  *(void *)(v3 + 16) = v48;
  return v3;
}

id sub_1ACDDCACC(uint64_t a1, char a2, char a3)
{
  return objc_msgSend(*(id *)(v3 + 16), sel_addAsset_shouldPreloadKeys_waitForKeyIdentifiers_, a1, a2 & 1, a3 & 1);
}

void sub_1ACDDCAF0(uint64_t a1, uint64_t a2)
{
  char v5 = *(void **)(v2 + 16);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  v8[4] = sub_1ACDDCECC;
  v8[5] = v6;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  v8[2] = sub_1ACCB9FCC;
  _OWORD v8[3] = &block_descriptor_82;
  uint64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_stopSessionInvalidatingKeys_withCompletion_, 1, v7);
  _Block_release(v7);
}

uint64_t sub_1ACDDCBD8(id a1, uint64_t (*a2)(id))
{
  if (a1)
  {
    id v4 = a1;
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1ACE754C8();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EB76D598);
    id v6 = a1;
    id v7 = a1;
    uint64_t v8 = sub_1ACE75498();
    os_log_type_t v9 = sub_1ACE76BE8();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v19 = v11;
      *(_DWORD *)uint64_t v10 = 136446210;
      swift_getErrorValue();
      uint64_t v12 = sub_1ACE77A98();
      sub_1ACA3189C(v12, v13, &v19);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AC9D5000, v8, v9, "[PodcastsContentKeySession]: Unable to invalidate and stop session with error: %{public}s.", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v11, -1, -1);
      MEMORY[0x1AD11B340](v10, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1ACE754C8();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EB76D598);
    uint64_t v15 = sub_1ACE75498();
    os_log_type_t v16 = sub_1ACE76C08();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_1AC9D5000, v15, v16, "[PodcastsContentKeySession]: Successfully invalidated and stopped session.", v17, 2u);
      MEMORY[0x1AD11B340](v17, -1, -1);
    }
  }
  return a2(a1);
}

uint64_t sub_1ACDDCE94()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDDCECC(void *a1)
{
  return sub_1ACDDCBD8(a1, *(uint64_t (**)(id))(v1 + 16));
}

id sub_1ACDDCED4()
{
  return sub_1ACDDCEFC("[PodcastsContentKeySession]: Pausing FairPlay key session.", (const char **)&selRef_pauseAutomaticKeyRenewal);
}

id sub_1ACDDCEE8()
{
  return sub_1ACDDCEFC("[PodcastsContentKeySession]: Resuming FairPlay key session.", (const char **)&selRef_resumeAutomaticKeyRenewal);
}

id sub_1ACDDCEFC(const char *a1, const char **a2)
{
  uint64_t v5 = v2;
  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1ACE754C8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB76D598);
  id v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76C08();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v9 = 0;
    _os_log_impl(&dword_1AC9D5000, v7, v8, a1, v9, 2u);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }

  uint64_t v10 = *(void **)(v5 + 16);
  uint64_t v11 = *a2;
  return [v10 v11];
}

uint64_t PodcastsContentKeySession.deinit()
{
  return v0;
}

uint64_t PodcastsContentKeySession.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for PodcastsContentKeySession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastsContentKeySession);
}

uint64_t dispatch thunk of PodcastsContentKeySession.__allocating_init(storeTrackAdamID:account:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PodcastsContentKeySession.add(_:shouldPreloadKeys:waitForKeyIdentifiers:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of PodcastsContentKeySession.invalidate(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of PodcastsContentKeySession.pause()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of PodcastsContentKeySession.resume()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t InterestObserverProvider.favoritedInterestsPublisher.getter()
{
  return swift_retain();
}

uint64_t InterestObserverProvider.favoritedInterestsCountPublisher.getter()
{
  return swift_retain();
}

uint64_t InterestObserverProvider.favoritedInterestsCategoriesPublisher.getter()
{
  return swift_retain();
}

uint64_t InterestObserverProvider.dislikedInterestsCategoriesPublisher.getter()
{
  return swift_retain();
}

uint64_t InterestObserverProvider.favoritedInterestsChannelsPublisher.getter()
{
  return swift_retain();
}

uint64_t InterestObserverProvider.dislikedInterestsChannelsPublisher.getter()
{
  return swift_retain();
}

uint64_t InterestObserverProvider.dislikedInterestsShowsPublisher.getter()
{
  return swift_retain();
}

uint64_t InterestObserverProvider.userAppSessionsCountPublisher.getter()
{
  return swift_retain();
}

uint64_t InterestObserverProvider.dismissedInlineSelectionModulePublisher.getter()
{
  return swift_retain();
}

unint64_t static InterestObserverProvider.alreadyDismissedInlineSelectionModuleUserDefaultKey.getter()
{
  return 0xD000000000000027;
}

uint64_t InterestObserverProvider.__allocating_init(ctx:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  InterestObserverProvider.init(ctx:)(a1);
  return v2;
}

void *InterestObserverProvider.init(ctx:)(void *a1)
{
  uint64_t v97 = sub_1ACE76E78();
  uint64_t v99 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  uint64_t v96 = (char *)v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = v1;
  v1[12] = MEMORY[0x1E4FBC870];
  uint64_t v98 = v1 + 12;
  v1[2] = a1;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v4 = swift_allocObject();
  long long v93 = xmmword_1ACE843F0;
  *(_OWORD *)(v4 + 16) = xmmword_1ACE843F0;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v5 = sub_1ACADC3A8();
  *(void *)(v4 + 64) = v5;
  strcpy((char *)(v4 + 32), "interestValue");
  *(_WORD *)(v4 + 46) = -4864;
  id v6 = a1;
  id v7 = (void *)sub_1ACE76B88();
  uint64_t v101 = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  uint64_t v8 = sub_1ACE76CF8();
  id v9 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v10 = v6;
  uint64_t v11 = (void *)sub_1ACE76178();
  id v12 = objc_msgSend(v9, sel_initWithEntityName_, v11);

  objc_msgSend(v12, sel_setPredicate_, v7);
  uint64_t v13 = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  uint64_t v14 = (void *)sub_1ACE76558();
  objc_msgSend(v12, sel_setSortDescriptors_, v14);

  objc_msgSend(v12, sel_setFetchBatchSize_, 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A500);
  swift_allocObject();
  uint64_t v94 = sub_1ACA8E710;
  *(void *)&long long v85 = 0;
  *((void *)&v85 + 1) = sub_1ACA8E710;
  uint64_t v15 = sub_1ACA97690(0xD000000000000032, 0x80000001ACED2650, (uint64_t)v12, (uint64_t)v10, v8, (uint64_t)sub_1ACDDDFE0, 0, (uint64_t)sub_1ACDDDFE4, v85, 0);
  uint64_t v16 = sub_1ACA96144(v15);
  swift_release();
  uint64_t v17 = v100;
  v100[3] = v16;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = v93;
  *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v18 + 64) = v5;
  strcpy((char *)(v18 + 32), "interestValue");
  *(_WORD *)(v18 + 46) = -4864;
  uint64_t v19 = (void *)sub_1ACE76B88();
  id v20 = v10;
  uint64_t v21 = sub_1ACE76CF8();
  id v22 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  BOOL v23 = (void *)sub_1ACE76178();
  id v24 = objc_msgSend(v22, sel_initWithEntityName_, v23);

  objc_msgSend(v24, sel_setPredicate_, v19);
  uint64_t v25 = (void *)sub_1ACE76558();
  objc_msgSend(v24, sel_setSortDescriptors_, v25);

  objc_msgSend(v24, sel_setFetchBatchSize_, 1);
  objc_msgSend(v24, sel_setIncludesSubentities_, 0);
  objc_msgSend(v24, sel_setIncludesPropertyValues_, 0);
  objc_msgSend(v24, sel_setReturnsObjectsAsFaults_, 1);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D338);
  swift_allocObject();
  *((void *)&v86 + 1) = sub_1ACA8E710;
  *(void *)&long long v86 = 0;
  uint64_t v102 = sub_1ACA97690(0xD000000000000020, 0x80000001ACED2690, (uint64_t)v24, (uint64_t)v20, v21, (uint64_t)sub_1ACA56B68, 0, (uint64_t)sub_1ACA58428, v86, 0);
  sub_1ACA97860();
  uint64_t v26 = sub_1ACE75AD8();
  swift_release();
  v17[4] = v26;
  id v27 = sub_1ACD1F804();
  uint64_t v28 = sub_1ACE76CF8();
  id v29 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v30 = v20;
  id v31 = (void *)sub_1ACE76178();
  id v32 = objc_msgSend(v29, sel_initWithEntityName_, v31);

  objc_msgSend(v32, sel_setPredicate_, v27);
  int v33 = (void *)sub_1ACE76558();
  objc_msgSend(v32, sel_setSortDescriptors_, v33);

  objc_msgSend(v32, sel_setFetchBatchSize_, 0x7FFFFFFFFFFFFFFFLL);
  swift_allocObject();
  uint64_t v34 = v94;
  *(void *)&long long v87 = 0;
  *((void *)&v87 + 1) = v94;
  uint64_t v35 = sub_1ACA97690(0xD00000000000003DLL, 0x80000001ACED26C0, (uint64_t)v32, (uint64_t)v30, v28, (uint64_t)sub_1ACDDDFE0, 0, (uint64_t)sub_1ACDDDFE4, v87, 0);
  uint64_t v36 = sub_1ACA96144(v35);
  swift_release();
  v17[5] = v36;
  id v37 = sub_1ACD1F828();
  uint64_t v38 = sub_1ACE76CF8();
  id v39 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v40 = v30;
  id v41 = (void *)sub_1ACE76178();
  id v42 = objc_msgSend(v39, sel_initWithEntityName_, v41);

  objc_msgSend(v42, sel_setPredicate_, v37);
  v92[1] = v13;
  uint64_t v43 = (void *)sub_1ACE76558();
  objc_msgSend(v42, sel_setSortDescriptors_, v43);

  objc_msgSend(v42, sel_setFetchBatchSize_, 0x7FFFFFFFFFFFFFFFLL);
  swift_allocObject();
  *((void *)&v88 + 1) = v34;
  *(void *)&long long v88 = 0;
  uint64_t v44 = sub_1ACA97690(0xD00000000000003CLL, 0x80000001ACED2700, (uint64_t)v42, (uint64_t)v40, v38, (uint64_t)sub_1ACDDDFE0, 0, (uint64_t)sub_1ACDDDFE4, v88, 0);
  uint64_t v45 = sub_1ACA96144(v44);
  swift_release();
  void v17[6] = v45;
  id v46 = sub_1ACD1F66C();
  id v47 = v40;
  uint64_t v48 = sub_1ACE76CF8();
  id v49 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  int64_t v50 = (void *)sub_1ACE76178();
  id v51 = objc_msgSend(v49, sel_initWithEntityName_, v50);

  objc_msgSend(v51, sel_setPredicate_, v46);
  int64_t v52 = (void *)sub_1ACE76558();
  objc_msgSend(v51, sel_setSortDescriptors_, v52);

  objc_msgSend(v51, sel_setFetchBatchSize_, 50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7714B0);
  swift_allocObject();
  *((void *)&v89 + 1) = sub_1ACA8E710;
  *(void *)&long long v89 = 0;
  uint64_t v53 = sub_1ACA97690(0xD00000000000003BLL, 0x80000001ACED2740, (uint64_t)v51, (uint64_t)v47, v48, (uint64_t)sub_1ACDDE19C, 0, (uint64_t)sub_1ACDDFE0C, v89, 0);
  uint64_t v54 = sub_1ACA96500(v53);
  swift_release();
  v17[7] = v54;
  id v55 = sub_1ACD1F7E0();
  id v56 = v47;
  uint64_t v57 = sub_1ACE76CF8();
  id v58 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v59 = (void *)sub_1ACE76178();
  id v60 = objc_msgSend(v58, sel_initWithEntityName_, v59);

  objc_msgSend(v60, sel_setPredicate_, v55);
  uint64_t v61 = (void *)sub_1ACE76558();
  objc_msgSend(v60, sel_setSortDescriptors_, v61);

  objc_msgSend(v60, sel_setFetchBatchSize_, 50);
  swift_allocObject();
  *((void *)&v90 + 1) = sub_1ACA8E710;
  *(void *)&long long v90 = 0;
  uint64_t v62 = sub_1ACA97690(0xD00000000000003ALL, 0x80000001ACED2780, (uint64_t)v60, (uint64_t)v56, v57, (uint64_t)sub_1ACDDE19C, 0, (uint64_t)sub_1ACDDFE0C, v90, 0);
  uint64_t v63 = sub_1ACA96500(v62);
  swift_release();
  unint64_t v64 = v100;
  v100[8] = v63;
  id v65 = sub_1ACD1F648();
  id v66 = v56;
  uint64_t v67 = sub_1ACE76CF8();
  id v68 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v69 = (void *)sub_1ACE76178();
  id v70 = objc_msgSend(v68, sel_initWithEntityName_, v69);

  objc_msgSend(v70, sel_setPredicate_, v65);
  uint64_t v71 = (void *)sub_1ACE76558();
  objc_msgSend(v70, sel_setSortDescriptors_, v71);

  objc_msgSend(v70, sel_setFetchBatchSize_, 50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7714A8);
  swift_allocObject();
  *((void *)&v91 + 1) = sub_1ACA8E710;
  *(void *)&long long v91 = 0;
  uint64_t v72 = sub_1ACA97690(0xD000000000000040, 0x80000001ACED27C0, (uint64_t)v70, (uint64_t)v66, v67, (uint64_t)sub_1ACDDE334, 0, (uint64_t)sub_1ACDDE4C8, v91, 0);
  uint64_t v73 = sub_1ACA968BC(v72);
  swift_release();
  v64[9] = v73;
  long long v74 = self;
  id v75 = objc_msgSend(v74, sel__applePodcastsFoundationSharedUserDefaults);
  uint64_t v76 = NSUserDefaults.BOOLPublisher(forKey:)((void *)0xD000000000000027, (void *)0x80000001ACED2620);

  v64[11] = v76;
  id v77 = objc_msgSend(v74, sel__applePodcastsFoundationSharedUserDefaults);
  uint64_t v78 = (void *)sub_1ACE761B8();
  uint64_t v80 = NSUserDefaults.integerPublisher(forKey:)(v78, v79);

  swift_bridgeObjectRelease();
  v64[10] = v80;
  id v81 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v82 = v96;
  sub_1ACE76E88();

  swift_allocObject();
  swift_weakInit();
  sub_1ACDDF298((unint64_t *)&qword_1EB768EF8, MEMORY[0x1E4F27FC8]);
  uint64_t v83 = v97;
  sub_1ACE75D58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v82, v83);
  swift_beginAccess();
  sub_1ACE75828();
  swift_endAccess();
  swift_release();

  return v64;
}

uint64_t sub_1ACDDDFE8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  type metadata accessor for MTInterest();
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    unint64_t v5 = (void *)v4;
    id v6 = a1;
    id v7 = objc_msgSend(v5, sel_adamID);
    objc_msgSend(v5, sel_interestValue);
    uint64_t v9 = v8;
    id v10 = objc_msgSend(v5, sel_lastUpdatedDate);
    uint64_t v11 = type metadata accessor for InterestModel();
    sub_1ACE75078();

    *a2 = v7;
    a2[1] = v9;
    id v12 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = type metadata accessor for InterestModel();
    id v12 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }
  return v12(v13, v14, 1, v15);
}

uint64_t sub_1ACDDE130(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8))
  {
    type metadata accessor for InterestModel();
    char v2 = sub_1ACE75068() ^ 1;
  }
  else
  {
    char v2 = 1;
  }
  return v2 & 1;
}

void sub_1ACDDE1A0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = a1;
  id v9 = objc_msgSend(v8, sel_channel);
  if (v9)
  {
    id v10 = v9;
    unint64_t v11 = (unint64_t)objc_msgSend(v9, sel_storeId);
    if ((v11 & 0x8000000000000000) == 0)
    {
      unint64_t v12 = v11;
      if (v11 != 1000000000000 && v11 != 0)
      {
        id v14 = objc_msgSend(v8, sel_lastUpdatedDate);
        sub_1ACE75078();

        sub_1ACE75058();
        double v16 = v15 * 1000.0;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

        *(void *)a2 = v12;
        *(double *)(a2 + 8) = floor(v16);
        *(unsigned char *)(a2 + 16) = 0;
        return;
      }
    }
  }
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
}

void sub_1ACDDE334(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = a1;
  id v9 = objc_msgSend(v8, sel_podcast);
  if (v9)
  {
    id v10 = v9;
    unint64_t v11 = (unint64_t)objc_msgSend(v9, sel_storeCollectionId);
    if ((v11 & 0x8000000000000000) == 0)
    {
      unint64_t v12 = v11;
      if (v11 != 1000000000000 && v11 != 0)
      {
        id v14 = objc_msgSend(v8, sel_lastUpdatedDate);
        sub_1ACE75078();

        sub_1ACE75058();
        double v16 = v15 * 1000.0;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

        *(void *)a2 = v12;
        *(double *)(a2 + 8) = floor(v16);
        *(unsigned char *)(a2 + 16) = 0;
        return;
      }
    }
  }
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
}

BOOL sub_1ACDDE4C8(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 != *(void *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8);
}

uint64_t sub_1ACDDE4F4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1ACDDF36C();
    return swift_release();
  }
  return result;
}

uint64_t InterestObserverProvider.userIsColdStartUserPublisher<A>()@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771738);
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_1ACE75A18();
  *a1 = result;
  return result;
}

uint64_t sub_1ACDDE5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1ACB2DC40;
  *(void *)(v5 + 24) = v4;
  swift_retain();
  InterestObserverProvider.determineIfUserIsColdStartUser(completion:)((uint64_t)sub_1ACDDFDF0, v5);
  return swift_release();
}

void sub_1ACDDE66C(id a1, char a2, void (*a3)(id, uint64_t))
{
  if (a2)
  {
    id v5 = a1;
    a3(a1, 1);
    sub_1ACAC5D40(a1, 1);
  }
  else
  {
    a3(a1, 0);
  }
}

void InterestObserverProvider.determineIfUserIsColdStartUser(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1ACE75DC8();
  uint64_t v20 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE75E48();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v24 = &type metadata for Podcasts;
  unint64_t v25 = sub_1ACA56248();
  LOBYTE(aBlock) = 34;
  char v12 = sub_1ACE75298();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
  if (v12)
  {
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
    uint64_t v13 = (void *)sub_1ACE76CF8();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a1;
    *(void *)(v14 + 24) = a2;
    unint64_t v25 = (unint64_t)sub_1ACDDF268;
    uint64_t v26 = (void *)v14;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v22 = 1107296256;
    BOOL v23 = sub_1ACA6DA9C;
    id v24 = (ValueMetadata *)&block_descriptor_9_4;
    double v15 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    sub_1ACE75E08();
    uint64_t aBlock = MEMORY[0x1E4FBC860];
    sub_1ACDDF298((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v11, v7, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    double v16 = *(void **)(v2 + 16);
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = v2;
    uint64_t v17[3] = a1;
    v17[4] = a2;
    unint64_t v25 = (unint64_t)sub_1ACDDF25C;
    uint64_t v26 = v17;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v22 = 1107296256;
    BOOL v23 = sub_1ACA6DA9C;
    id v24 = (ValueMetadata *)&block_descriptor_83;
    uint64_t v18 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v16, sel_performBlock_, v18);
    _Block_release(v18);
  }
}

uint64_t sub_1ACDDEACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a3;
  uint64_t v4 = sub_1ACE75DC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE75E48();
  uint64_t v22 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v11 = sub_1ACDDF544();
  BOOL v12 = sub_1ACDDF81C();
  uint64_t v14 = a2;
  LOBYTE(a2) = (v11 || v12) | sub_1ACDDFAB4();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  uint64_t v20 = sub_1ACE76CF8();
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = v21;
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = v16;
  *(unsigned char *)(v15 + 32) = (a2 & 1) == 0;
  aBlock[4] = sub_1ACDDFD84;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_24_6;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1ACE75E08();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1ACDDF298((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  uint64_t v18 = (void *)v20;
  MEMORY[0x1AD118ED0](0, v10, v7, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v10, v8);
}

uint64_t InterestObserverProvider.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InterestObserverProvider.__deallocating_deinit()
{
  InterestObserverProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACDDF1D4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACDDF20C()
{
  return sub_1ACDDE4F4();
}

uint64_t sub_1ACDDF214(uint64_t a1, uint64_t a2)
{
  return sub_1ACDDE5BC(a1, a2);
}

uint64_t sub_1ACDDF21C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDDF25C()
{
  return sub_1ACDDEACC(v0[2], v0[3], v0[4]);
}

uint64_t sub_1ACDDF268()
{
  return (*(uint64_t (**)(uint64_t, void))(v0 + 16))(1, 0);
}

uint64_t sub_1ACDDF298(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for InterestObserverProvider()
{
  return self;
}

uint64_t method lookup function for InterestObserverProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InterestObserverProvider);
}

uint64_t dispatch thunk of InterestObserverProvider.__allocating_init(ctx:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_1ACDDF330()
{
  return sub_1ACA51EA4(&qword_1EB771730, &qword_1EB771738);
}

void sub_1ACDDF36C()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel__applePodcastsFoundationSharedUserDefaults);
  uint64_t v2 = (char *)objc_msgSend(v1, sel_integerForKey_, kMTUserAppSessionsUserDefaultKey);

  if (qword_1EB76A5E8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1ACE754C8();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB76A5D0);
  uint64_t v4 = sub_1ACE75498();
  os_log_type_t v5 = sub_1ACE76C08();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134218240;
    sub_1ACE76FF8();
    *(_WORD *)(v6 + 12) = 2048;
    BOOL v7 = __OFADD__(v2, 1);
    uint64_t v8 = v2 + 1;
    if (v7) {
      goto LABEL_12;
    }
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v4, v5, "Increasing user app session count from: %ld to %ld.", (uint8_t *)v6, 0x16u);
    MEMORY[0x1AD11B340](v6, -1, -1);

    char v9 = 0;
  }
  else
  {

    BOOL v7 = __OFADD__(v2, 1);
    uint64_t v8 = v2 + 1;
    char v9 = v7;
  }
  id v10 = objc_msgSend(v0, sel__applePodcastsFoundationSharedUserDefaults);
  if ((v9 & 1) == 0)
  {
    BOOL v11 = v10;
    objc_msgSend(v10, sel_setInteger_forKey_, v8, kMTUserAppSessionsUserDefaultKey);

    return;
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

BOOL sub_1ACDDF544()
{
  sub_1ACE761B8();
  id v1 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v2 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithEntityName_, v2);

  id v4 = objc_msgSend(self, sel_predicateForSubscribedChannel);
  objc_msgSend(v3, sel_setPredicate_, v4);

  objc_msgSend(v3, sel_setFetchLimit_, 1);
  sub_1ACA50D4C(0, (unint64_t *)&unk_1EB768F70);
  uint64_t v5 = sub_1ACE76ED8();
  if (v0)
  {
    if (qword_1EB76A5E8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1ACE754C8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EB76A5D0);
    id v7 = v0;
    uint64_t v8 = sub_1ACE75498();
    os_log_type_t v9 = sub_1ACE76BE8();
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      BOOL v11 = (void *)swift_slowAlloc();
      *(_DWORD *)id v10 = 138412290;
      uint64_t v15 = sub_1ACE74D68();
      sub_1ACE76FF8();
      *BOOL v11 = v15;

      _os_log_impl(&dword_1AC9D5000, v8, v9, "Could not determine if user has channels with error: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v11, -1, -1);
      MEMORY[0x1AD11B340](v10, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
  }
  else
  {
    uint64_t v12 = v5;

    return v12 > 0;
  }
  return v13;
}

uint64_t sub_1ACDDF7DC()
{
  swift_release();

  return swift_deallocObject();
}

BOOL sub_1ACDDF81C()
{
  sub_1ACE761B8();
  id v1 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v2 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithEntityName_, v2);

  id v4 = objc_msgSend(self, sel_predicateForNotHiddenNotImplicitlyFollowedPodcasts);
  objc_msgSend(v3, sel_setPredicate_, v4);

  objc_msgSend(v3, sel_setFetchLimit_, 1);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F80);
  uint64_t v5 = sub_1ACE76ED8();
  if (v0)
  {
    if (qword_1EB76A5E8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1ACE754C8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EB76A5D0);
    id v7 = v0;
    uint64_t v8 = sub_1ACE75498();
    os_log_type_t v9 = sub_1ACE76BE8();
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      BOOL v11 = (void *)swift_slowAlloc();
      *(_DWORD *)id v10 = 138412290;
      uint64_t v15 = sub_1ACE74D68();
      sub_1ACE76FF8();
      *BOOL v11 = v15;

      _os_log_impl(&dword_1AC9D5000, v8, v9, "Could not determine if user has shows with error: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v11, -1, -1);
      MEMORY[0x1AD11B340](v10, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
  }
  else
  {
    uint64_t v12 = v5;

    return v12 > 0;
  }
  return v13;
}

BOOL sub_1ACDDFAB4()
{
  sub_1ACE761B8();
  id v1 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v2 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithEntityName_, v2);

  id v4 = objc_msgSend(self, sel_predicateForPreviouslyPlayedHidingFutureTimestamps);
  objc_msgSend(v3, sel_setPredicate_, v4);

  objc_msgSend(v3, sel_setFetchLimit_, 1);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  uint64_t v5 = sub_1ACE76ED8();
  if (v0)
  {
    if (qword_1EB76A5E8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1ACE754C8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EB76A5D0);
    id v7 = v0;
    uint64_t v8 = sub_1ACE75498();
    os_log_type_t v9 = sub_1ACE76BE8();
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      BOOL v11 = (void *)swift_slowAlloc();
      *(_DWORD *)id v10 = 138412290;
      uint64_t v15 = sub_1ACE74D68();
      sub_1ACE76FF8();
      *BOOL v11 = v15;

      _os_log_impl(&dword_1AC9D5000, v8, v9, "Could not determine if user has episodes with error: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v11, -1, -1);
      MEMORY[0x1AD11B340](v10, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
  }
  else
  {
    uint64_t v12 = v5;

    return v12 > 0;
  }
  return v13;
}

uint64_t sub_1ACDDFD4C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDDFD84()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(*(unsigned __int8 *)(v0 + 32), 0);
}

uint64_t sub_1ACDDFDB8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACDDFDF0(void *a1, char a2)
{
  sub_1ACDDE66C(a1, a2 & 1, *(void (**)(id, uint64_t))(v2 + 16));
}

id MediaCacheDeleteProcessorDelegate.managedObjectContext.getter()
{
  return *v0;
}

id MediaCacheDeleteProcessorDelegate.workQueue.getter()
{
  return *(id *)(v0 + 8);
}

uint64_t MediaCacheDeleteProcessorDelegate.didMatch(episodes:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7704B8);
  uint64_t v6 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7703B0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v29 = v9;
  uint64_t v30 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void **)v1;
  BOOL v13 = *(void **)(v1 + 8);
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a1;
  v15[3] = v14;
  void v15[4] = v13;
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = v14;
  v16[3] = sub_1ACDE0758;
  v16[4] = v15;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76DF98);
  swift_allocObject();
  swift_bridgeObjectRetain();
  id v17 = v14;
  id v18 = v13;
  id v19 = v17;
  uint64_t v20 = sub_1ACE75A18();
  id v31 = v18;
  uint64_t v32 = v20;
  uint64_t v21 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v5, 1, 1, v21);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1EB76DF90, (uint64_t *)&unk_1EB76DF98);
  sub_1ACA93A6C();
  id v22 = v18;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v5, &qword_1EB7669C8);

  swift_release();
  sub_1ACA51EA4(&qword_1EB7704B0, &qword_1EB7704B8);
  uint64_t v23 = v28;
  sub_1ACE75B58();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v23);
  sub_1ACA51EA4(&qword_1EB7703A8, &qword_1EB7703B0);
  uint64_t v24 = v29;
  uint64_t v25 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v24);
  return v25;
}

void sub_1ACDE0208(uint64_t a1@<X1>, void *a2@<X8>)
{
  sub_1ACE761B8();
  id v5 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v6 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1ACE84820;
  uint64_t v9 = sub_1ACE761B8();
  uint64_t v11 = v10;
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 64) = sub_1ACADC3A8();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v11;
  *(void *)(v8 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772580);
  *(void *)(v8 + 104) = sub_1ACA51EA4(&qword_1EB771CB8, &qword_1EB772580);
  *(void *)(v8 + 72) = a1;
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_1ACE76B88();
  objc_msgSend(v7, sel_setPredicate_, v12);

  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  uint64_t v13 = sub_1ACE76EE8();
  if (v2)
  {

    return;
  }
  unint64_t v14 = v13;
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1ACE754C8();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EB768C28);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_1ACE75498();
  os_log_type_t v17 = sub_1ACE76BE8();
  if (!os_log_type_enabled(v16, v17))
  {

    swift_bridgeObjectRelease_n();
LABEL_25:
    uint64_t v35 = sub_1ACAC03FC(v14);
    swift_bridgeObjectRelease();

    *a2 = v35;
    return;
  }
  id v40 = a2;
  id v18 = (uint8_t *)swift_slowAlloc();
  uint64_t v36 = swift_slowAlloc();
  uint64_t v41 = v36;
  uint64_t v38 = v18;
  *(_DWORD *)id v18 = 136315138;
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1ACE77508();
  }
  else
  {
    uint64_t v19 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  log = v16;
  os_log_type_t v37 = v17;
  if (!v19)
  {
    uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
LABEL_24:
    swift_bridgeObjectRelease();
    uint64_t v32 = MEMORY[0x1AD118740](v21, MEMORY[0x1E4FBB1A0]);
    unint64_t v34 = v33;
    swift_bridgeObjectRelease();
    sub_1ACA3189C(v32, v34, &v41);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, log, v37, "Marking episodes for purgeability: %s", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v36, -1, -1);
    MEMORY[0x1AD11B340](v38, -1, -1);

    a2 = v40;
    goto LABEL_25;
  }
  if (v19 >= 1)
  {
    uint64_t v20 = 0;
    uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v14 & 0xC000000000000001) != 0) {
        id v22 = (id)MEMORY[0x1AD119490](v20, v14);
      }
      else {
        id v22 = *(id *)(v14 + 8 * v20 + 32);
      }
      id v23 = v22;
      id v24 = objc_msgSend(v23, sel_uuid);
      if (v24)
      {
        uint64_t v25 = v24;
        uint64_t v26 = sub_1ACE761B8();
        uint64_t v28 = v27;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = sub_1ACA41EA0(0, v21[2] + 1, 1, v21);
        }
        unint64_t v30 = v21[2];
        unint64_t v29 = v21[3];
        if (v30 >= v29 >> 1) {
          uint64_t v21 = sub_1ACA41EA0((void *)(v29 > 1), v30 + 1, 1, v21);
        }
        v21[2] = v30 + 1;
        id v31 = &v21[2 * v30];
        v31[4] = v26;
        v31[5] = v28;
      }
      else
      {
      }
      ++v20;
    }
    while (v19 != v20);
    goto LABEL_24;
  }
  __break(1u);
}

uint64_t sub_1ACDE0710()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1ACDE0758(void *a1@<X8>)
{
  sub_1ACDE0208(*(void *)(v1 + 16), a1);
}

uint64_t sub_1ACDE0778()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACDE07B8(uint64_t a1, uint64_t a2)
{
  sub_1ACAC1AA8(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1ACDE07C4(uint64_t *a1)
{
  v63[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE74F28();
  MEMORY[0x1F4188790](v5);
  uint64_t v57 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v61 = (char *)&v45 - v9;
  uint64_t result = *a1;
  uint64_t v11 = *(void *)(*a1 + 16);
  if (v11)
  {
    uint64_t v12 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v59 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    unint64_t v52 = 3221768772;
    uint64_t v51 = *MEMORY[0x1E4F289D0];
    id v60 = (void (**)(uint64_t *, char *, uint64_t))(v8 + 16);
    id v58 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v46 = swift_bridgeObjectRetain();
    uint64_t v13 = v46 + 40;
    *(void *)&long long v14 = 136315394;
    long long v49 = v14;
    uint64_t v48 = MEMORY[0x1E4FBC840] + 8;
    long long v50 = xmmword_1ACE843F0;
    id v55 = v12;
    id v56 = v4;
    uint64_t v47 = v5;
    while (1)
    {
      swift_bridgeObjectRetain();
      sub_1ACE74EF8();
      swift_bridgeObjectRelease();
      if ((*v12)(v4, 1, v5) != 1) {
        break;
      }
      sub_1ACA50E78((uint64_t)v4, &qword_1EB7731B0);
LABEL_4:
      v13 += 16;
      if (!--v11) {
        return swift_bridgeObjectRelease();
      }
    }
    (*v59)(v61, v4, v5);
    uint64_t v15 = (void *)sub_1ACE74E18();
    uint64_t v16 = self;
    v63[0] = 0;
    id v17 = objc_msgSend(v16, sel_fileHandleForReadingFromURL_error_, v15, v63);

    if (v17)
    {
      id v18 = v63[0];
      int v19 = objc_msgSend(v17, sel_fileDescriptor);
      v63[0] = (id)98310;
      int v20 = ffsctl(v19, v52, v63, 0);
      if (!v20)
      {
        objc_msgSend(v17, sel_closeFile);

        id v39 = *v58;
LABEL_16:
        v39(v61, v5);
        goto LABEL_4;
      }
      Swift::Int32 v21 = v20;
      sub_1ACA50D4C(0, &qword_1EB771CC0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4B0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v50;
      *(void *)(inited + 32) = sub_1ACE761B8();
      *(void *)(inited + 40) = v23;
      *(void *)(inited + 72) = v5;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
      (*v60)(boxed_opaque_existential_1, v61, v5);
      v64.value._rawValue = (void *)sub_1ACA3625C(inited);
      NSError.init(fsctlCode:userInfo:)(v25, v21, v64);
      uint64_t v27 = v26;
      swift_willThrow();
      objc_msgSend(v17, sel_closeFile);
    }
    else
    {
      id v28 = v63[0];
      uint64_t v27 = (void *)sub_1ACE74D78();

      swift_willThrow();
    }
    unint64_t v29 = v57;
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1ACE754C8();
    __swift_project_value_buffer(v30, (uint64_t)qword_1EB768C28);
    (*v60)((uint64_t *)v29, v61, v5);
    id v31 = v27;
    id v32 = v27;
    unint64_t v33 = sub_1ACE75498();
    uint64_t v34 = v5;
    os_log_type_t v35 = sub_1ACE76BE8();
    if (os_log_type_enabled(v33, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v54 = (void *)swift_slowAlloc();
      v63[0] = v54;
      *(_DWORD *)uint64_t v36 = v49;
      os_log_t v53 = v33;
      uint64_t v37 = sub_1ACE74EC8();
      *(void *)(v36 + 4) = sub_1ACA3189C(v37, v38, (uint64_t *)v63);
      swift_bridgeObjectRelease();
      id v39 = *v58;
      (*v58)(v29, v34);
      *(_WORD *)(v36 + 12) = 2080;
      uint64_t v62 = v27;
      id v40 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
      uint64_t v41 = sub_1ACE76228();
      *(void *)(v36 + 14) = sub_1ACA3189C(v41, v42, (uint64_t *)v63);
      swift_bridgeObjectRelease();

      os_log_t v43 = v53;
      _os_log_impl(&dword_1AC9D5000, v53, v35, "Failed to mark episode asset for purgeability (%s): %s", (uint8_t *)v36, 0x16u);
      uint64_t v44 = v54;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v44, -1, -1);
      MEMORY[0x1AD11B340](v36, -1, -1);

      uint64_t v12 = v55;
      uint64_t v4 = v56;
      uint64_t v5 = v47;
    }
    else
    {

      id v39 = *v58;
      (*v58)(v29, v34);

      uint64_t v12 = v55;
      uint64_t v4 = v56;
      uint64_t v5 = v34;
    }
    goto LABEL_16;
  }
  return result;
}

void markForPurgeability(_:)()
{
  uint64_t v0 = sub_1ACE74F28();
  MEMORY[0x1F4188790](v0);
  sub_1ACCA0F8C(0x8000);
}

ValueMetadata *type metadata accessor for MediaCacheDeleteProcessorDelegate()
{
  return &type metadata for MediaCacheDeleteProcessorDelegate;
}

uint64_t FeedUpdateType.beginInterval()()
{
  uint64_t v1 = sub_1ACE753F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v20[-v6];
  char v8 = *v0;
  if (qword_1EB76D390 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1ACE75438();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB76D378);
  char v22 = v8;
  uint64_t v10 = sub_1ACDE1EB8();
  char v12 = v11;
  sub_1ACE75428();
  sub_1ACE753C8();
  uint64_t v13 = sub_1ACE75428();
  int v14 = sub_1ACE76E18();
  uint64_t result = sub_1ACE76FA8();
  if ((result & 1) == 0) {
    goto LABEL_7;
  }
  int v21 = v14;
  if ((v12 & 1) == 0)
  {
    if (!v10)
    {
      __break(1u);
LABEL_7:

      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
LABEL_13:
      sub_1ACE75478();
      swift_allocObject();
      uint64_t v19 = sub_1ACE75468();
      (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
      return v19;
    }
LABEL_12:
    uint64_t v16 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16);
    v16(v5, v7, v1);
    id v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v17 = 0;
    os_signpost_id_t v18 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v13, (os_signpost_type_t)v21, v18, v10, "Begin Interval", v17, 2u);
    MEMORY[0x1AD11B340](v17, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v5, v1);
    v16(v5, v7, v1);
    goto LABEL_13;
  }
  if ((unint64_t)v10 >> 32)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v10 >> 11 != 27)
  {
    if (v10 >> 16 <= 0x10)
    {
      uint64_t v10 = sub_1ACA31704();
      goto LABEL_12;
    }
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t FeedUpdateType.endInterval(for:)()
{
  uint64_t v1 = sub_1ACE75448();
  uint64_t v25 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = &v23[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1ACE753F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v26 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v23[-v8];
  char v10 = *v0;
  if (qword_1EB76D390 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1ACE75438();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EB76D378);
  char v27 = v10;
  char v12 = sub_1ACDE1EB8();
  char v14 = v13;
  uint64_t v15 = sub_1ACE75428();
  sub_1ACE75458();
  int v24 = sub_1ACE76E08();
  uint64_t result = sub_1ACE76FA8();
  if ((result & 1) == 0) {
    goto LABEL_7;
  }
  if ((v14 & 1) == 0)
  {
    if (!v12)
    {
      __break(1u);
LABEL_7:

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v9, v4);
    }
    goto LABEL_12;
  }
  if ((unint64_t)v12 >> 32)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v12 >> 11 == 27)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  if (v12 >> 16 > 0x10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  char v12 = sub_1ACA31704();
LABEL_12:
  swift_retain();
  sub_1ACE75488();
  swift_release();
  uint64_t v17 = v25;
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v25 + 88))(v3, v1) == *MEMORY[0x1E4FBD340])
  {
    os_signpost_id_t v18 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v3, v1);
    os_signpost_id_t v18 = "";
  }
  uint64_t v19 = v26;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v26, v9, v4);
  int v20 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)int v20 = 0;
  os_signpost_id_t v21 = sub_1ACE753D8();
  _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v15, (os_signpost_type_t)v24, v21, v12, v18, v20, 2u);
  MEMORY[0x1AD11B340](v20, -1, -1);

  char v22 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v22(v9, v4);
  return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v19, v4);
}

uint64_t FeedUpdateType.beginInterval(for:)(uint64_t a1)
{
  uint64_t v3 = sub_1ACE753F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  if (qword_1EB76D390 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1ACE75438();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EB76D378);
  char v21 = v7;
  uint64_t v9 = sub_1ACDE1EB8();
  char v11 = v10;
  char v12 = sub_1ACE75428();
  int v13 = sub_1ACE76E18();
  uint64_t result = sub_1ACE76FA8();
  if ((result & 1) == 0)
  {

    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
LABEL_13:
    sub_1ACE75478();
    swift_allocObject();
    sub_1ACE75468();
    return swift_release();
  }
  int v20 = v13;
  if ((v11 & 1) == 0)
  {
    if (v9)
    {
      uint64_t v15 = a1;
LABEL_12:
      uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      v16(v6, v15, v3);
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      os_signpost_id_t v18 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v12, (os_signpost_type_t)v20, v18, v9, "Begin Update", v17, 2u);
      MEMORY[0x1AD11B340](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v16(v6, v15, v3);
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)v9 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v9 >> 11 != 27)
  {
    if (v9 >> 16 <= 0x10)
    {
      uint64_t v15 = a1;
      uint64_t v9 = sub_1ACA31704();
      goto LABEL_12;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t FeedUpdateType.endInterval(for:success:)(uint64_t a1, int a2)
{
  int v43 = a2;
  uint64_t v4 = (const char *)sub_1ACE75448();
  uint64_t v41 = *((void *)v4 - 1);
  unint64_t v42 = v4;
  MEMORY[0x1F4188790](v4);
  id v40 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE753F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v35 - v11;
  __n128 v14 = MEMORY[0x1F4188790](v13);
  char v15 = *v2;
  unint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16);
  v38((char *)&v35 - v16, a1, v6, v14);
  sub_1ACE75478();
  swift_allocObject();
  sub_1ACE75468();
  if (qword_1EB76D390 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1ACE75438();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EB76D378);
  LOBYTE(v45) = v15;
  os_signpost_id_t v18 = (char *)sub_1ACDE1EB8();
  char v20 = v19;
  char v21 = sub_1ACE75428();
  sub_1ACE75458();
  int v39 = sub_1ACE76E08();
  uint64_t result = sub_1ACE76FA8();
  if ((result & 1) == 0)
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    return swift_release();
  }
  if (v20)
  {
    if (!((unint64_t)v18 >> 32))
    {
      if (v18 >> 11 == 27)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      if (v18 >> 16 <= 0x10)
      {
        uint64_t v36 = sub_1ACA31704();
        goto LABEL_12;
      }
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (!v18)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v36 = v18;
LABEL_12:
  uint64_t v23 = v6;
  swift_retain();
  int v24 = v40;
  sub_1ACE75488();
  swift_release();
  uint64_t v26 = v41;
  uint64_t v25 = v42;
  if ((*(unsigned int (**)(char *, const char *))(v41 + 88))(v24, v42) == *MEMORY[0x1E4FBD340])
  {
    char v27 = 0;
    char v28 = 0;
    unint64_t v42 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, const char *))(v26 + 8))(v24, v25);
    unint64_t v42 = "Status: %s";
    char v28 = 2;
    char v27 = 1;
  }
  uint64_t v37 = v12;
  ((void (*)(char *, char *, uint64_t))v38)(v9, v12, v23);
  uint64_t v29 = swift_slowAlloc();
  uint64_t v30 = swift_slowAlloc();
  uint64_t v45 = v30;
  *(unsigned char *)uint64_t v29 = v28;
  *(unsigned char *)(v29 + 1) = v27;
  *(_WORD *)(v29 + 2) = 2080;
  if (v43) {
    uint64_t v31 = 0x6673736563637553;
  }
  else {
    uint64_t v31 = 0x64656C696146;
  }
  if (v43) {
    unint64_t v32 = 0xEA00000000006C75;
  }
  else {
    unint64_t v32 = 0xE600000000000000;
  }
  uint64_t v44 = sub_1ACA3189C(v31, v32, &v45);
  sub_1ACE76FF8();
  swift_bridgeObjectRelease();
  os_signpost_id_t v33 = sub_1ACE753D8();
  _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v21, (os_signpost_type_t)v39, v33, v36, v42, (uint8_t *)v29, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1AD11B340](v30, -1, -1);
  MEMORY[0x1AD11B340](v29, -1, -1);

  uint64_t v34 = *(void (**)(char *, uint64_t))(v7 + 8);
  v34(v37, v23);
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v34)(v9, v23);
}

const char *sub_1ACDE1EB8()
{
  uint64_t result = "Delta Feed Update";
  switch(*v0)
  {
    case 1:
      uint64_t result = "Boostrap Update";
      break;
    case 2:
      uint64_t result = "RSS Update";
      break;
    case 3:
      uint64_t result = "Batch Update";
      break;
    case 4:
      uint64_t result = "Delta Show Request";
      break;
    case 5:
      uint64_t result = "Delta Initial Sync Request Context Perform";
      break;
    case 6:
      uint64_t result = "Delta Pre Process Hook";
      break;
    case 7:
      uint64_t result = "Delta Post Process Hook";
      break;
    case 8:
      uint64_t result = "Delta Show Ingestion";
      break;
    case 9:
      uint64_t result = "Delta Episodes Request";
      break;
    case 0xA:
      uint64_t result = "Delta Parse Episodes";
      break;
    case 0xB:
      uint64_t result = "Delta Parse Episodes Context Perform";
      break;
    case 0xC:
      uint64_t result = "Delta Process Episodes";
      break;
    case 0xD:
      uint64_t result = "Delta Finalize Ingestion";
      break;
    case 0xE:
      uint64_t result = "Delta Ingest Episodes";
      break;
    case 0xF:
      uint64_t result = "Delta Delete Episodes";
      break;
    case 0x10:
      uint64_t result = "Delta Ingest Page";
      break;
    case 0x11:
      uint64_t result = "Delta Full Failure";
      break;
    case 0x12:
      uint64_t result = "Delta Partial Success Context Perform";
      break;
    case 0x13:
      uint64_t result = "Delta Partial Success";
      break;
    case 0x14:
      uint64_t result = "Delta Prepare for Initial Sync Request";
      break;
    default:
      return result;
  }
  return result;
}

PodcastsFoundation::FeedUpdateType_optional __swiftcall FeedUpdateType.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 0;
  char v3 = 3;
  switch(rawValue)
  {
    case 0:
      goto LABEL_5;
    case 1:
      char v2 = 1;
      goto LABEL_5;
    case 2:
      char v2 = 2;
LABEL_5:
      char v3 = v2;
      goto LABEL_6;
    case 3:
LABEL_6:
      *uint64_t v1 = v3;
      break;
    case 4:
      *uint64_t v1 = 4;
      break;
    case 5:
      *uint64_t v1 = 5;
      break;
    case 6:
      *uint64_t v1 = 6;
      break;
    case 7:
      *uint64_t v1 = 7;
      break;
    case 8:
      *uint64_t v1 = 8;
      break;
    case 9:
      *uint64_t v1 = 9;
      break;
    case 10:
      *uint64_t v1 = 10;
      break;
    case 11:
      *uint64_t v1 = 11;
      break;
    case 12:
      *uint64_t v1 = 12;
      break;
    case 13:
      *uint64_t v1 = 13;
      break;
    case 14:
      *uint64_t v1 = 14;
      break;
    case 15:
      *uint64_t v1 = 15;
      break;
    case 16:
      *uint64_t v1 = 16;
      break;
    case 17:
      *uint64_t v1 = 17;
      break;
    case 18:
      *uint64_t v1 = 18;
      break;
    case 19:
      *uint64_t v1 = 19;
      break;
    case 20:
      *uint64_t v1 = 20;
      break;
    default:
      *uint64_t v1 = 21;
      break;
  }
  return (PodcastsFoundation::FeedUpdateType_optional)rawValue;
}

uint64_t FeedUpdateType.rawValue.getter()
{
  return *v0;
}

PodcastsFoundation::FeedUpdateType_optional sub_1ACDE221C(Swift::Int *a1)
{
  return FeedUpdateType.init(rawValue:)(*a1);
}

unint64_t sub_1ACDE2228()
{
  unint64_t result = qword_1E99F5EB8;
  if (!qword_1E99F5EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5EB8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FeedUpdateType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEC) {
    goto LABEL_17;
  }
  if (a2 + 20 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 20) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 20;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x15;
  int v8 = v6 - 21;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FeedUpdateType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 20 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 20) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEB)
  {
    unsigned int v6 = ((a2 - 236) >> 8) + 1;
    *unint64_t result = a2 + 20;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACDE23D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 20;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedUpdateType()
{
  return &type metadata for FeedUpdateType;
}

uint64_t static NSThread.performOnMain(_:)(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v4 = sub_1ACE75DC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE75E48();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_isMainThread)) {
    return a1();
  }
  sub_1ACA51E1C();
  uint64_t v13 = (void *)sub_1ACE76CF8();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  aBlock[4] = sub_1ACB5C124;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_84;
  char v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1ACE75E08();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1ACA55D24();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA55D7C();
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v11, v7, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1ACDE26BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDE26F4()
{
  uint64_t v0 = sub_1ACE754C8();
  __swift_allocate_value_buffer(v0, qword_1EB772DE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB772DE0);
  return sub_1ACE754A8();
}

id sub_1ACDE2778()
{
  id result = objc_msgSend(objc_allocWithZone((Class)PFCoreAnalyticsChannel), sel_init);
  qword_1EB76C888 = (uint64_t)result;
  return result;
}

uint64_t sub_1ACDE27AC()
{
  uint64_t v0 = sub_1ACE76CE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACE75E08();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1ACDE75FC((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_1ACE76D28();
  qword_1EB772DA0 = result;
  return result;
}

BOOL sub_1ACDE29FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1ACDE2A10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1ACDE2A24(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1ACDE2A38(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

void *ManagedObjectContextMonitor.__allocating_init(context:label:sentryLogger:pingInterval:shortHangDuration:severeHangDuration:criticalHangDuration:criticalHangRepeatInterval:)(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8, double a9, double a10)
{
  id v21 = objc_allocWithZone(v10);
  return ManagedObjectContextMonitor.init(context:label:sentryLogger:pingInterval:shortHangDuration:severeHangDuration:criticalHangDuration:criticalHangRepeatInterval:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void *ManagedObjectContextMonitor.init(context:label:sentryLogger:pingInterval:shortHangDuration:severeHangDuration:criticalHangDuration:criticalHangRepeatInterval:)(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v60 = a5;
  uint64_t v56 = sub_1ACE75DC8();
  uint64_t v61 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  id v55 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1ACE75E48();
  uint64_t v54 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  os_log_t v53 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1ACE754C8();
  uint64_t v57 = *(void *)(v22 - 8);
  uint64_t v58 = v22;
  MEMORY[0x1F4188790](v22);
  long long v50 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = (void (*)(char *, uint64_t))sub_1ACE75438();
  long long v49 = (void (**)(uint64_t, char *, void *))*((void *)v51 - 1);
  MEMORY[0x1F4188790](v51);
  uint64_t v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1ACE76D48();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (char *)&v48 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = OBJC_IVAR___PFManagedObjectContextMonitor_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v31 = swift_allocObject();
  *(_DWORD *)(v31 + 16) = 0;
  *(void *)&v10[v30] = v31;
  v10[OBJC_IVAR___PFManagedObjectContextMonitor_status] = 0;
  *(void *)&v10[OBJC_IVAR___PFManagedObjectContextMonitor_multiTimer] = 0;
  v10[OBJC_IVAR___PFManagedObjectContextMonitor_loggedFault] = 0;
  *(void *)&v10[OBJC_IVAR___PFManagedObjectContextMonitor_context] = a1;
  unint64_t v32 = &v10[OBJC_IVAR___PFManagedObjectContextMonitor_label];
  *(void *)unint64_t v32 = a2;
  *((void *)v32 + 1) = a3;
  v32[16] = a4;
  *(double *)&v10[OBJC_IVAR___PFManagedObjectContextMonitor_pingInterval] = a6;
  *(double *)&v10[OBJC_IVAR___PFManagedObjectContextMonitor_shortHangDuration] = a7;
  *(double *)&v10[OBJC_IVAR___PFManagedObjectContextMonitor_severeHangDuration] = a8;
  *(double *)&v10[OBJC_IVAR___PFManagedObjectContextMonitor_criticalHangDuration] = a9;
  *(double *)&v10[OBJC_IVAR___PFManagedObjectContextMonitor_criticalHangRepeatInterval] = a10;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772720);
  uint64_t v33 = qword_1EB772DA8;
  uint64_t v34 = v10;
  id v52 = a1;
  if (v33 != -1) {
    swift_once();
  }
  uint64_t aBlock = MEMORY[0x1E4FBC860];
  sub_1ACDE75FC(&qword_1EB772F70, MEMORY[0x1E4FBCC70]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F58);
  sub_1ACAC5D64((unint64_t *)&unk_1EB772F60, &qword_1EB772F58);
  sub_1ACE770E8();
  uint64_t v35 = sub_1ACE76D58();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  *(void *)&v34[OBJC_IVAR___PFManagedObjectContextMonitor_pingTimer] = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v50, v60, v58);
  sub_1ACE75418();
  ((void (**)(uint64_t, char *, void (*)(char *, uint64_t)))v49)[4]((uint64_t)&v34[OBJC_IVAR___PFManagedObjectContextMonitor_signpost], v25, v51);

  uint64_t v36 = (objc_class *)type metadata accessor for ManagedObjectContextMonitor(0);
  v69.receiver = v34;
  v69.super_class = v36;
  id v37 = objc_msgSendSuper2(&v69, sel_init);
  swift_getObjectType();
  uint64_t v38 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v67 = sub_1ACDE3434;
  uint64_t v68 = v38;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v64 = 1107296256;
  id v65 = sub_1ACA6DA9C;
  id v66 = &block_descriptor_85;
  int v39 = _Block_copy(&aBlock);
  long long v49 = (void (**)(uint64_t, char *, void *))v37;
  swift_unknownObjectRetain();
  swift_retain();
  id v40 = v53;
  sub_1ACCB7374();
  uint64_t v41 = v55;
  sub_1ACCB7378();
  sub_1ACE76DB8();
  _Block_release(v39);
  swift_unknownObjectRelease();
  unint64_t v42 = *(void (**)(char *, uint64_t))(v61 + 8);
  v61 += 8;
  uint64_t v51 = v42;
  uint64_t v43 = v56;
  v42(v41, v56);
  uint64_t v54 = *(void *)(v54 + 8);
  ((void (*)(char *, uint64_t))v54)(v40, v59);
  swift_release();
  swift_release();
  long long v50 = (char *)qword_1EB772DA0;
  uint64_t v44 = swift_allocObject();
  uint64_t v45 = v49;
  swift_unknownObjectWeakInit();
  uint64_t v67 = sub_1ACDE34B4;
  uint64_t v68 = v44;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v64 = 1107296256;
  id v65 = sub_1ACA6DA9C;
  id v66 = &block_descriptor_4_0;
  uint64_t v46 = _Block_copy(&aBlock);
  swift_retain();
  sub_1ACE75E08();
  uint64_t v62 = MEMORY[0x1E4FBC860];
  sub_1ACDE75FC((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v40, v41, v46);

  _Block_release(v46);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v60, v58);
  v51(v41, v43);
  ((void (*)(char *, uint64_t))v54)(v40, v59);
  swift_release();
  swift_release();
  return v45;
}

uint64_t type metadata accessor for ManagedObjectContextMonitor(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1EB772E20);
}

uint64_t sub_1ACDE3398()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1ACDE33D0(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1AD11B470](v1);
  if (v2)
  {
    int v3 = (void *)v2;
    if (!*(void *)(v2 + OBJC_IVAR___PFManagedObjectContextMonitor_multiTimer)) {
      sub_1ACDE3FF8();
    }
  }
}

void sub_1ACDE3434()
{
  sub_1ACDE33D0(v0);
}

uint64_t sub_1ACDE343C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1AD11B470](v1);
  if (result)
  {
    int v3 = (void *)result;
    swift_unknownObjectRetain();

    swift_getObjectType();
    sub_1ACE76DF8();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1ACDE34B4()
{
  return sub_1ACDE343C(v0);
}

BOOL ManagedObjectContextMonitor.ContextLabel.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

uint64_t ManagedObjectContextMonitor.__allocating_init(context:label:pingInterval:shortHangDuration:severeHangDuration:criticalHangDuration:criticalHangRepeatInterval:)(void *a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  id v15 = objc_allocWithZone(v7);
  return ManagedObjectContextMonitor.init(context:label:pingInterval:shortHangDuration:severeHangDuration:criticalHangDuration:criticalHangRepeatInterval:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t ManagedObjectContextMonitor.init(context:label:pingInterval:shortHangDuration:severeHangDuration:criticalHangDuration:criticalHangRepeatInterval:)(void *a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  uint64_t v14 = sub_1ACE754C8();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 1)
  {
    uint64_t v17 = "ImportContext";
    uint64_t v18 = 13;
LABEL_5:
    sub_1ACE754A8();
    id v19 = objc_allocWithZone((Class)type metadata accessor for ManagedObjectContextMonitor(0));
    uint64_t v20 = ManagedObjectContextMonitor.init(context:label:sentryLogger:pingInterval:shortHangDuration:severeHangDuration:criticalHangDuration:criticalHangRepeatInterval:)(a1, (uint64_t)v17, v18, 2, (uint64_t)v16, a3, a4, a5, a6, a7);
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return (uint64_t)v20;
  }
  if (!a2)
  {
    uint64_t v17 = "PrivateContext";
    uint64_t v18 = 14;
    goto LABEL_5;
  }
  v22[1] = a2;
  uint64_t result = sub_1ACE77A18();
  __break(1u);
  return result;
}

void sub_1ACDE37B8()
{
  uint64_t v1 = sub_1ACE75DA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (uint64_t *)((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_1ACE75E88();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (os_unfair_lock_s *)(*(void *)&v0[OBJC_IVAR___PFManagedObjectContextMonitor_lock] + 16);
  os_unfair_lock_lock(v9);
  if (!v0[OBJC_IVAR___PFManagedObjectContextMonitor_status])
  {
    v0[OBJC_IVAR___PFManagedObjectContextMonitor_status] = 1;
    uint64_t ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1ACE75E78();
    double v20 = *(double *)&v0[OBJC_IVAR___PFManagedObjectContextMonitor_pingInterval];
    *uint64_t v4 = 0;
    (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCAA8], v1);
    MEMORY[0x1AD1190C0](v8, v4, ObjectType, v20);
    swift_unknownObjectRelease();
    (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (qword_1EB7727D8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1ACE754C8();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB772DE0);
    uint64_t v11 = v0;
    char v12 = sub_1ACE75498();
    os_log_type_t v13 = sub_1ACE76C08();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v25 = v15;
      *(_DWORD *)uint64_t v14 = 136446210;
      uint64_t v22 = sub_1ACE772A8();
      uint64_t v24 = sub_1ACA3189C(v22, v23, &v25);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      uint64_t v18 = "%{public}s - Monitoring Core Data queue hangs";
      goto LABEL_10;
    }
LABEL_11:

    goto LABEL_12;
  }
  if (qword_1EB7727D8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1ACE754C8();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EB772DE0);
  uint64_t v11 = v0;
  char v12 = sub_1ACE75498();
  os_log_type_t v13 = sub_1ACE76BE8();
  if (!os_log_type_enabled(v12, v13)) {
    goto LABEL_11;
  }
  uint64_t v14 = (uint8_t *)swift_slowAlloc();
  uint64_t v15 = swift_slowAlloc();
  uint64_t v25 = v15;
  *(_DWORD *)uint64_t v14 = 136446210;
  uint64_t v16 = sub_1ACE772A8();
  uint64_t v24 = sub_1ACA3189C(v16, v17, &v25);
  sub_1ACE76FF8();

  swift_bridgeObjectRelease();
LABEL_10:
  _os_log_impl(&dword_1AC9D5000, v12, v13, v18, v14, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1AD11B340](v15, -1, -1);
  MEMORY[0x1AD11B340](v14, -1, -1);

LABEL_12:
  os_unfair_lock_unlock(v9);
}

void sub_1ACDE3CA8()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)&v0[OBJC_IVAR___PFManagedObjectContextMonitor_lock] + 16);
  os_unfair_lock_lock(v1);
  if (!v0[OBJC_IVAR___PFManagedObjectContextMonitor_status])
  {
    if (qword_1EB7727D8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1ACE754C8();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB772DE0);
    uint64_t v3 = v0;
    uint64_t v4 = sub_1ACE75498();
    os_log_type_t v5 = sub_1ACE76BE8();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      uint64_t v14 = v7;
      *(_DWORD *)uint64_t v6 = 136446210;
      uint64_t v12 = sub_1ACE772A8();
      sub_1ACA3189C(v12, v13, &v14);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
LABEL_11:

    goto LABEL_12;
  }
  v0[OBJC_IVAR___PFManagedObjectContextMonitor_status] = 0;
  sub_1ACDE529C();
  if (qword_1EB7727D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1ACE754C8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB772DE0);
  uint64_t v3 = v0;
  uint64_t v4 = sub_1ACE75498();
  os_log_type_t v5 = sub_1ACE76C08();
  if (!os_log_type_enabled(v4, v5)) {
    goto LABEL_11;
  }
  uint64_t v6 = (uint8_t *)swift_slowAlloc();
  uint64_t v7 = swift_slowAlloc();
  uint64_t v14 = v7;
  *(_DWORD *)uint64_t v6 = 136446210;
  uint64_t v8 = sub_1ACE772A8();
  sub_1ACA3189C(v8, v9, &v14);
  sub_1ACE76FF8();

  swift_bridgeObjectRelease();
  uint64_t v10 = " %{public}s - Stopping Core Data hang monitoring.";
LABEL_10:
  _os_log_impl(&dword_1AC9D5000, v4, v5, v10, v6, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1AD11B340](v7, -1, -1);
  MEMORY[0x1AD11B340](v6, -1, -1);

LABEL_12:
  os_unfair_lock_unlock(v1);
}

void sub_1ACDE3FF8()
{
  uint64_t v1 = v0;
  aBlock[13] = *MEMORY[0x1E4F143B8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1ACE75438();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3);
  uint64_t v46 = &v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1ACE753F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v37[-v11];
  os_unfair_lock_t v47 = (os_unfair_lock_t)(*(void *)(v1 + OBJC_IVAR___PFManagedObjectContextMonitor_lock) + 16);
  os_unfair_lock_lock(v47);
  if (*(unsigned char *)(v1 + OBJC_IVAR___PFManagedObjectContextMonitor_status) == 1
    && (uint64_t v13 = OBJC_IVAR___PFManagedObjectContextMonitor_multiTimer,
        !*(void *)(v1 + OBJC_IVAR___PFManagedObjectContextMonitor_multiTimer)))
  {
    uint64_t v40 = v7;
    uint64_t v42 = v4;
    uint64_t v43 = v3;
    uint64_t v44 = ObjectType;
    if (qword_1EB772DA8 != -1) {
      swift_once();
    }
    uint64_t v15 = (void *)qword_1EB772DA0;
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MultiTimer(0);
    swift_allocObject();
    id v17 = v15;
    uint64_t v18 = sub_1ACDE7000(v17, (uint64_t)sub_1ACDE7470, v16);

    swift_release();
    *(void *)(v1 + v13) = v18;
    uint64_t v45 = v18;
    swift_retain();
    swift_release();
    uint64_t v19 = v1 + OBJC_IVAR___PFManagedObjectContextMonitor_signpost;
    sub_1ACE753E8();
    uint64_t v41 = v19;
    double v20 = sub_1ACE75428();
    int v21 = sub_1ACE76E18();
    if (sub_1ACE76FA8())
    {
      int v38 = v21;
      uint64_t v22 = v40;
      int v39 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v40 + 16);
      v39(v9, v12, v6);
      unint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v23 = 0;
      os_signpost_id_t v24 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v20, (os_signpost_type_t)v38, v24, "Ping", "", v23, 2u);
      MEMORY[0x1AD11B340](v23, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v22 + 8))(v9, v6);
      v39(v9, v12, v6);
    }
    else
    {

      uint64_t v22 = v40;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v40 + 16))(v9, v12, v6);
    }
    sub_1ACE75478();
    swift_allocObject();
    uint64_t v40 = sub_1ACE75468();
    (*(void (**)(unsigned char *, uint64_t))(v22 + 8))(v12, v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772728);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1ACE84470;
    *(void *)(inited + 32) = *(void *)(v1 + OBJC_IVAR___PFManagedObjectContextMonitor_shortHangDuration);
    *(void *)(inited + 40) = *(void *)(v1 + OBJC_IVAR___PFManagedObjectContextMonitor_severeHangDuration);
    *(void *)(inited + 48) = *(void *)(v1 + OBJC_IVAR___PFManagedObjectContextMonitor_criticalHangDuration);
    sub_1ACDE5FE0((void *)inited, *(double *)(v1 + OBJC_IVAR___PFManagedObjectContextMonitor_criticalHangRepeatInterval));
    swift_setDeallocating();
    int v39 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + OBJC_IVAR___PFManagedObjectContextMonitor_context);
    uint64_t v26 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v27 = v42;
    uint64_t v28 = v46;
    uint64_t v29 = v43;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v42 + 16))(v46, v41, v43);
    unint64_t v30 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    unint64_t v31 = (v5 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v34 = swift_allocObject();
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v27 + 32))(v34 + v30, v28, v29);
    *(void *)(v34 + v31) = v40;
    *(void *)(v34 + v32) = v26;
    uint64_t v35 = v44;
    *(void *)(v34 + v33) = v45;
    *(void *)(v34 + ((v33 + 15) & 0xFFFFFFFFFFFFFFF8)) = v35;
    aBlock[4] = sub_1ACDE754C;
    aBlock[5] = v34;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = &block_descriptor_58_1;
    uint64_t v36 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v39, sel_performBlock_, v36);
    _Block_release(v36);
    swift_release();
    swift_release();
    os_unfair_lock_unlock(v47);
  }
  else
  {
    uint64_t v14 = v47;
    os_unfair_lock_unlock(v14);
  }
}

void sub_1ACDE4660(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1AD11B470](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    sub_1ACDE540C(a1, a3);
  }
}

uint64_t sub_1ACDE46CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v57 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v55 = (uint64_t)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE750A8();
  uint64_t v59 = *(void *)(v7 - 8);
  uint64_t v60 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v54 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v61 = (char *)&v54 - v10;
  uint64_t v11 = sub_1ACE75448();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1ACE753F8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  int v21 = (char *)&v54 - v20;
  uint64_t v58 = a3 + 16;
  uint64_t v22 = sub_1ACE75428();
  sub_1ACE75458();
  int v56 = sub_1ACE76E08();
  if (sub_1ACE76FA8())
  {
    swift_retain();
    sub_1ACE75488();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v14, v11) == *MEMORY[0x1E4FBD340])
    {
      unint64_t v23 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      unint64_t v23 = "";
    }
    uint64_t v25 = v59;
    uint64_t v24 = v60;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    os_signpost_id_t v27 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v22, (os_signpost_type_t)v56, v27, "Ping", v23, v26, 2u);
    MEMORY[0x1AD11B340](v26, -1, -1);

    uint64_t v28 = *(void (**)(char *, uint64_t))(v16 + 8);
    v28(v21, v15);
    v28(v18, v15);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
    uint64_t v25 = v59;
    uint64_t v24 = v60;
  }
  uint64_t v29 = v61;
  sub_1ACE75088();
  uint64_t v30 = v58;
  swift_beginAccess();
  uint64_t v31 = MEMORY[0x1AD11B470](v30);
  if (v31)
  {
    unint64_t v32 = (unsigned char *)v31;
    uint64_t v33 = OBJC_IVAR___PFManagedObjectContextMonitor_lock;
    uint64_t v34 = *(os_unfair_lock_s **)(v31 + OBJC_IVAR___PFManagedObjectContextMonitor_lock);
    swift_retain();
    os_unfair_lock_lock(v34 + 4);
    swift_release();
    uint64_t v35 = *(void *)&v32[OBJC_IVAR___PFManagedObjectContextMonitor_multiTimer];
    if (v35 && v35 == v57)
    {
      uint64_t v36 = v57 + OBJC_IVAR____TtC18PodcastsFoundationP33_ACA32E4676063C24D8CDAE723F3FF8C510MultiTimer_startDate;
      swift_beginAccess();
      uint64_t v37 = v55;
      sub_1ACA72A5C(v36, v55);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v37, 1, v24) != 1)
      {
        uint64_t v51 = v54;
        (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v54, v37, v24);
        sub_1ACE74FE8();
        sub_1ACDE4E94(v52);
        v32[OBJC_IVAR___PFManagedObjectContextMonitor_status] = 1;
        sub_1ACDE529C();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v51, v24);
        goto LABEL_22;
      }
      sub_1ACA3E034(v37);
      if (qword_1EB7727D8 != -1) {
        swift_once();
      }
      uint64_t v38 = sub_1ACE754C8();
      __swift_project_value_buffer(v38, (uint64_t)qword_1EB772DE0);
      int v39 = v32;
      uint64_t v40 = sub_1ACE75498();
      os_log_type_t v41 = sub_1ACE76BE8();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        uint64_t v64 = v43;
        *(_DWORD *)uint64_t v42 = 136446210;
        uint64_t v44 = sub_1ACE772A8();
        uint64_t v62 = sub_1ACA3189C(v44, v45, &v64);
        uint64_t v24 = v60;
        sub_1ACE76FF8();

        uint64_t v25 = v59;
        swift_bridgeObjectRelease();
        uint64_t v46 = "%{public}s - Timer was never started. Be sure the timer is always started before scheduling the block.";
LABEL_19:
        _os_log_impl(&dword_1AC9D5000, v40, v41, v46, v42, 0xCu);
        swift_arrayDestroy();
        uint64_t v50 = v43;
        uint64_t v29 = v61;
        MEMORY[0x1AD11B340](v50, -1, -1);
        MEMORY[0x1AD11B340](v42, -1, -1);

LABEL_22:
        os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)&v32[v33] + 16));

        return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v29, v24);
      }
    }
    else
    {
      if (qword_1EB7727D8 != -1) {
        swift_once();
      }
      uint64_t v47 = sub_1ACE754C8();
      __swift_project_value_buffer(v47, (uint64_t)qword_1EB772DE0);
      int v39 = v32;
      uint64_t v40 = sub_1ACE75498();
      os_log_type_t v41 = sub_1ACE76BE8();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        v63[0] = v43;
        *(_DWORD *)uint64_t v42 = 136446210;
        uint64_t v48 = sub_1ACE772A8();
        uint64_t v64 = sub_1ACA3189C(v48, v49, v63);
        uint64_t v24 = v60;
        sub_1ACE76FF8();

        uint64_t v25 = v59;
        swift_bridgeObjectRelease();
        uint64_t v46 = "%{public}s - ManagedObjectContextMonitor switched to a new multitimer ";
        goto LABEL_19;
      }
    }

    goto LABEL_22;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v29, v24);
}

void sub_1ACDE4E94(double a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(*(void *)&v1[OBJC_IVAR___PFManagedObjectContextMonitor_lock]
                                                     + 16));
  if (v1[OBJC_IVAR___PFManagedObjectContextMonitor_status])
  {
    if (v1[OBJC_IVAR___PFManagedObjectContextMonitor_status] == 1)
    {
      if (a1 > 0.1)
      {
        if (qword_1EB7727D8 != -1) {
          swift_once();
        }
        uint64_t v3 = sub_1ACE754C8();
        __swift_project_value_buffer(v3, (uint64_t)qword_1EB772DE0);
        uint64_t v18 = v1;
        uint64_t v4 = sub_1ACE75498();
        os_log_type_t v5 = sub_1ACE76BC8();
        if (os_log_type_enabled(v4, v5))
        {
          uint64_t v6 = swift_slowAlloc();
          uint64_t v7 = swift_slowAlloc();
          uint64_t v19 = v7;
          *(_DWORD *)uint64_t v6 = 136446466;
          uint64_t v8 = sub_1ACE772A8();
          sub_1ACA3189C(v8, v9, &v19);
          sub_1ACE76FF8();

          swift_bridgeObjectRelease();
          *(_WORD *)(v6 + 12) = 2050;
          sub_1ACE76FF8();
          _os_log_impl(&dword_1AC9D5000, v4, v5, "%{public}s - Ping end after %{public}fs", (uint8_t *)v6, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v7, -1, -1);
          MEMORY[0x1AD11B340](v6, -1, -1);
        }
        else
        {
        }
      }
    }
    else
    {
      if (qword_1EB7727D8 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1ACE754C8();
      __swift_project_value_buffer(v10, (uint64_t)qword_1EB772DE0);
      uint64_t v11 = v1;
      uint64_t v12 = sub_1ACE75498();
      os_log_type_t v13 = sub_1ACE76BE8();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        uint64_t v19 = v15;
        *(_DWORD *)uint64_t v14 = 136446466;
        uint64_t v16 = sub_1ACE772A8();
        sub_1ACA3189C(v16, v17, &v19);
        sub_1ACE76FF8();

        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2050;
        sub_1ACE76FF8();
        _os_log_impl(&dword_1AC9D5000, v12, v13, "[CD HANG] [RESOLVED] %{public}s is no longer hanging after %{public}fs.", (uint8_t *)v14, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v15, -1, -1);
        MEMORY[0x1AD11B340](v14, -1, -1);
      }
      else
      {
      }
      sub_1ACDE7208(a1);
    }
  }
}

uint64_t sub_1ACDE529C()
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(*(void *)(v0 + OBJC_IVAR___PFManagedObjectContextMonitor_lock)
                                                     + 16));
  uint64_t v1 = OBJC_IVAR___PFManagedObjectContextMonitor_multiTimer;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___PFManagedObjectContextMonitor_multiTimer);
  if (!v2) {
    goto LABEL_13;
  }
  swift_beginAccess();
  unint64_t v3 = *(void *)(v2 + 48);
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    uint64_t result = swift_retain();
    if (v4) {
      goto LABEL_4;
    }
LABEL_12:
    swift_bridgeObjectRelease_n();
    swift_getObjectType();
    sub_1ACE76DE8();
    swift_release();
LABEL_13:
    *(void *)(v0 + v1) = 0;
    uint64_t result = swift_release();
    *(unsigned char *)(v0 + OBJC_IVAR___PFManagedObjectContextMonitor_loggedFault) = 0;
    return result;
  }
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t result = sub_1ACE77508();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_12;
  }
LABEL_4:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        MEMORY[0x1AD119490](i, v3);
      }
      else {
        swift_retain();
      }
      sub_1ACE75EA8();
      swift_release();
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_1ACDE540C(uint64_t a1, double a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = (os_unfair_lock_s *)(*(void *)&v3[OBJC_IVAR___PFManagedObjectContextMonitor_lock] + 16);
  os_unfair_lock_lock(v6);
  uint64_t v7 = *(void *)&v3[OBJC_IVAR___PFManagedObjectContextMonitor_multiTimer];
  if (v7) {
    BOOL v8 = v7 == a1;
  }
  else {
    BOOL v8 = 0;
  }
  if (v8)
  {
    if (*(double *)&v3[OBJC_IVAR___PFManagedObjectContextMonitor_criticalHangDuration] + -2.22044605e-16 >= a2)
    {
      if (*(double *)&v3[OBJC_IVAR___PFManagedObjectContextMonitor_severeHangDuration] + -2.22044605e-16 >= a2)
      {
        if (*(double *)&v3[OBJC_IVAR___PFManagedObjectContextMonitor_shortHangDuration] + -2.22044605e-16 >= a2)
        {
          char v34 = 1;
        }
        else
        {
          if (qword_1EB7727D8 != -1) {
            swift_once();
          }
          uint64_t v35 = sub_1ACE754C8();
          __swift_project_value_buffer(v35, (uint64_t)qword_1EB772DE0);
          uint64_t v36 = v3;
          uint64_t v37 = sub_1ACE75498();
          os_log_type_t v38 = sub_1ACE76BE8();
          if (os_log_type_enabled(v37, v38))
          {
            uint64_t v39 = swift_slowAlloc();
            uint64_t v40 = swift_slowAlloc();
            uint64_t v51 = v40;
            *(_DWORD *)uint64_t v39 = 136446466;
            uint64_t v41 = sub_1ACE772A8();
            sub_1ACA3189C(v41, v42, &v51);
            sub_1ACE76FF8();

            swift_bridgeObjectRelease();
            *(_WORD *)(v39 + 12) = 2050;
            sub_1ACE76FF8();
            _os_log_impl(&dword_1AC9D5000, v37, v38, "[CD HANG] %{public}s is hanging after %{public}fs.", (uint8_t *)v39, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1AD11B340](v40, -1, -1);
            MEMORY[0x1AD11B340](v39, -1, -1);
          }
          else
          {
          }
          char v34 = 2;
        }
      }
      else
      {
        if (qword_1EB7727D8 != -1) {
          swift_once();
        }
        uint64_t v26 = sub_1ACE754C8();
        __swift_project_value_buffer(v26, (uint64_t)qword_1EB772DE0);
        os_signpost_id_t v27 = v3;
        uint64_t v28 = sub_1ACE75498();
        os_log_type_t v29 = sub_1ACE76BE8();
        if (os_log_type_enabled(v28, v29))
        {
          uint64_t v30 = swift_slowAlloc();
          uint64_t v31 = swift_slowAlloc();
          uint64_t v51 = v31;
          *(_DWORD *)uint64_t v30 = 136446466;
          uint64_t v32 = sub_1ACE772A8();
          sub_1ACA3189C(v32, v33, &v51);
          sub_1ACE76FF8();

          swift_bridgeObjectRelease();
          *(_WORD *)(v30 + 12) = 2050;
          sub_1ACE76FF8();
          _os_log_impl(&dword_1AC9D5000, v28, v29, "[CD HANG] [SEVERE] %{public}s is still hanging after %{public}fs.", (uint8_t *)v30, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v31, -1, -1);
          MEMORY[0x1AD11B340](v30, -1, -1);
        }
        else
        {
        }
        char v34 = 3;
      }
    }
    else
    {
      uint64_t v17 = OBJC_IVAR___PFManagedObjectContextMonitor_loggedFault;
      if ((v3[OBJC_IVAR___PFManagedObjectContextMonitor_loggedFault] & 1) == 0)
      {
        if (qword_1EB7727D8 != -1) {
          swift_once();
        }
        uint64_t v18 = sub_1ACE754C8();
        __swift_project_value_buffer(v18, (uint64_t)qword_1EB772DE0);
        uint64_t v19 = v3;
        uint64_t v20 = sub_1ACE75498();
        os_log_type_t v21 = sub_1ACE76BF8();
        if (os_log_type_enabled(v20, v21))
        {
          uint64_t v22 = (uint8_t *)swift_slowAlloc();
          uint64_t v23 = swift_slowAlloc();
          uint64_t v51 = v23;
          *(_DWORD *)uint64_t v22 = 136446210;
          uint64_t v24 = sub_1ACE772A8();
          sub_1ACA3189C(v24, v25, &v51);
          sub_1ACE76FF8();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1AC9D5000, v20, v21, "Core data hang in %{public}s reached critical duration", v22, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v23, -1, -1);
          MEMORY[0x1AD11B340](v22, -1, -1);
        }
        else
        {
        }
        v3[v17] = 1;
      }
      if (qword_1EB7727D8 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_1ACE754C8();
      __swift_project_value_buffer(v43, (uint64_t)qword_1EB772DE0);
      uint64_t v44 = v3;
      unint64_t v45 = sub_1ACE75498();
      os_log_type_t v46 = sub_1ACE76BE8();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        uint64_t v51 = v48;
        *(_DWORD *)uint64_t v47 = 136446466;
        uint64_t v49 = sub_1ACE772A8();
        sub_1ACA3189C(v49, v50, &v51);
        sub_1ACE76FF8();

        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 12) = 2050;
        sub_1ACE76FF8();
        _os_log_impl(&dword_1AC9D5000, v45, v46, "[CD HANG] [CRITICAL] %{public}s is still hanging after %{public}fs.", (uint8_t *)v47, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v48, -1, -1);
        MEMORY[0x1AD11B340](v47, -1, -1);
      }
      else
      {
      }
      char v34 = 4;
    }
    v3[OBJC_IVAR___PFManagedObjectContextMonitor_status] = v34;
  }
  else
  {
    if (qword_1EB7727D8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1ACE754C8();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB772DE0);
    uint64_t v10 = v3;
    uint64_t v11 = sub_1ACE75498();
    os_log_type_t v12 = sub_1ACE76C08();
    if (os_log_type_enabled(v11, v12))
    {
      os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v51 = v14;
      *(_DWORD *)os_log_type_t v13 = 136315138;
      uint64_t v15 = sub_1ACE772A8();
      sub_1ACA3189C(v15, v16, &v51);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v11, v12, "%s - Timer fired after the ping ended.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v14, -1, -1);
      MEMORY[0x1AD11B340](v13, -1, -1);
    }
    else
    {
    }
  }
  os_unfair_lock_unlock(v6);
}

id ManagedObjectContextMonitor.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ManagedObjectContextMonitor.init()()
{
}

id ManagedObjectContextMonitor.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedObjectContextMonitor(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACDE5E4C()
{
  swift_beginAccess();
  unint64_t v1 = *(void *)(v0 + 48);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v2) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    swift_getObjectType();
    sub_1ACE76DE8();
    os_log_type_t v5 = *(void **)(v0 + 16);
    swift_unknownObjectRelease();

    swift_release();
    swift_bridgeObjectRelease();
    sub_1ACA3E034(v0 + OBJC_IVAR____TtC18PodcastsFoundationP33_ACA32E4676063C24D8CDAE723F3FF8C510MultiTimer_startDate);
    return v0;
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_1ACE77508();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        MEMORY[0x1AD119490](i, v1);
      }
      else {
        swift_retain();
      }
      sub_1ACE75EA8();
      swift_release();
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACDE5F8C()
{
  sub_1ACDE5E4C();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACDE5FE0(void *a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v64 = a1;
  uint64_t v66 = sub_1ACE75DC8();
  uint64_t v59 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  id v65 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1ACE75E48();
  uint64_t v6 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  BOOL v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE75DA8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  os_log_type_t v12 = (uint64_t *)((char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_1ACE75E88();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v68 = v13;
  uint64_t v69 = v14;
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v54 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  unint64_t v25 = (char *)&v54 - v24;
  sub_1ACE75088();
  uint64_t v26 = sub_1ACE750A8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
  sub_1ACA909B4((uint64_t)v25, (uint64_t)v22);
  uint64_t v27 = v3 + OBJC_IVAR____TtC18PodcastsFoundationP33_ACA32E4676063C24D8CDAE723F3FF8C510MultiTimer_startDate;
  swift_beginAccess();
  uint64_t v28 = v27;
  os_log_type_t v29 = v19;
  uint64_t v30 = v64;
  sub_1ACA9CFB0((uint64_t)v22, v28);
  swift_endAccess();
  sub_1ACE75E78();
  uint64_t v31 = v30[2];
  uint64_t v67 = v3;
  uint64_t v57 = v8;
  if (v31)
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1ACDE6F98(v30);
      uint64_t v30 = (void *)result;
    }
    uint64_t v3 = v67;
    uint64_t v33 = v30[2];
    if (!v33)
    {
      __break(1u);
      return result;
    }
    uint64_t v34 = v33 - 1;
    unint64_t v35 = v30[v34 + 4];
    v30[2] = v34;
    uint64_t v36 = *(void *)(v3 + 24);
    uint64_t ObjectType = swift_getObjectType();
    os_log_type_t v38 = v29;
    v39.n128_u64[0] = v35;
  }
  else
  {
    uint64_t v36 = *(void *)(v3 + 24);
    uint64_t ObjectType = swift_getObjectType();
    swift_bridgeObjectRetain();
    os_log_type_t v38 = v29;
    v39.n128_f64[0] = a2;
  }
  MEMORY[0x1AD1180A0](v38, v39);
  *os_log_type_t v12 = 0;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCAA8], v9);
  uint64_t v56 = v36;
  MEMORY[0x1AD1190C0](v16, v12, ObjectType, a2);
  uint64_t v64 = v29;
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v69 + 8);
  v69 += 8;
  uint64_t v63 = v40;
  v40(v16, v68);
  uint64_t v42 = v58;
  uint64_t v41 = v59;
  uint64_t v62 = v30[2];
  if (v62)
  {
    uint64_t v55 = v6;
    uint64_t v43 = *(void *)(v3 + 16);
    uint64_t v60 = &v73;
    uint64_t v61 = v43;
    swift_bridgeObjectRetain();
    uint64_t v44 = 0;
    uint64_t v45 = v67;
    do
    {
      double v46 = *(double *)&v30[v44 + 4];
      uint64_t v47 = swift_allocObject();
      swift_weakInit();
      id v75 = sub_1ACDE6FE4;
      uint64_t v76 = v47;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v72 = 1107296256;
      uint64_t v73 = sub_1ACA6DA9C;
      long long v74 = &block_descriptor_40_2;
      _Block_copy(&aBlock);
      uint64_t v70 = MEMORY[0x1E4FBC860];
      sub_1ACDE75FC((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
      sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
      sub_1ACE770E8();
      sub_1ACE75EB8();
      swift_allocObject();
      sub_1ACE75E98();
      swift_release();
      swift_release();
      MEMORY[0x1AD1180A0](v64, v46);
      sub_1ACE76C98();
      v63(v16, v68);
      swift_beginAccess();
      uint64_t v48 = swift_retain();
      MEMORY[0x1AD118700](v48);
      if (*(void *)((*(void *)(v45 + 48) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v45 + 48) & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
        sub_1ACE765C8();
      ++v44;
      sub_1ACE76628();
      sub_1ACE76598();
      swift_endAccess();
      swift_release();
    }
    while (v62 != v44);
    swift_bridgeObjectRelease();
    uint64_t v42 = v58;
    uint64_t v41 = v59;
    uint64_t v6 = v55;
  }
  swift_bridgeObjectRelease();
  uint64_t v49 = v41;
  swift_getObjectType();
  uint64_t v50 = swift_allocObject();
  swift_weakInit();
  id v75 = sub_1ACDE6FE4;
  uint64_t v76 = v50;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v72 = 1107296256;
  uint64_t v73 = sub_1ACA6DA9C;
  long long v74 = &block_descriptor_44_3;
  uint64_t v51 = _Block_copy(&aBlock);
  swift_retain();
  double v52 = v57;
  sub_1ACCB7374();
  os_log_t v53 = v65;
  sub_1ACCB7378();
  sub_1ACE76DB8();
  _Block_release(v51);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v53, v66);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v52, v42);
  swift_release();
  swift_release();
  sub_1ACE76DF8();
  return ((uint64_t (*)(void *, uint64_t))v63)(v64, v68);
}

uint64_t sub_1ACDE682C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = &v17[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_1ACE750A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v17[-v8];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v12 = result + OBJC_IVAR____TtC18PodcastsFoundationP33_ACA32E4676063C24D8CDAE723F3FF8C510MultiTimer_startDate;
    swift_beginAccess();
    sub_1ACA72A5C(v12, (uint64_t)v2);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      sub_1ACA3E034((uint64_t)v2);
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 32))(v9, v2, v3);
      uint64_t v13 = *(void (**)(uint64_t, double))(v11 + 32);
      sub_1ACE75088();
      sub_1ACE74FE8();
      double v15 = v14;
      unint64_t v16 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
      v16(v6, v3);
      v13(v11, v15);
      v16(v9, v3);
    }
    return swift_release();
  }
  return result;
}

unint64_t sub_1ACDE6A6C()
{
  unint64_t result = qword_1E99F5EC0;
  if (!qword_1E99F5EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5EC0);
  }
  return result;
}

uint64_t sub_1ACDE6AC0()
{
  return type metadata accessor for ManagedObjectContextMonitor(0);
}

uint64_t sub_1ACDE6AC8()
{
  uint64_t result = sub_1ACE75438();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for ManagedObjectContextMonitor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ManagedObjectContextMonitor);
}

uint64_t dispatch thunk of ManagedObjectContextMonitor.__allocating_init(context:label:sentryLogger:pingInterval:shortHangDuration:severeHangDuration:criticalHangDuration:criticalHangRepeatInterval:)()
{
  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t dispatch thunk of ManagedObjectContextMonitor.beginMonitoring()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ManagedObjectContextMonitor.endMonitoring()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

ValueMetadata *type metadata accessor for ManagedObjectContextMonitor.ContextLabel()
{
  return &type metadata for ManagedObjectContextMonitor.ContextLabel;
}

uint64_t sub_1ACDE6C6C()
{
  return type metadata accessor for MultiTimer(0);
}

uint64_t type metadata accessor for MultiTimer(uint64_t a1)
{
  return sub_1ACA31990(a1, qword_1EB772990);
}

void sub_1ACDE6C94()
{
  sub_1ACA73D00();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unsigned char *storeEnumTagSinglePayload for ManagedObjectContextMonitor.Status(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACDE6E24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedObjectContextMonitor.Status()
{
  return &type metadata for ManagedObjectContextMonitor.Status;
}

unint64_t sub_1ACDE6E60()
{
  unint64_t result = qword_1E99F5EC8;
  if (!qword_1E99F5EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5EC8);
  }
  return result;
}

void *sub_1ACDE6EB4(void *a1)
{
  return sub_1ACA41608(0, a1[2], 0, a1);
}

void *sub_1ACDE6ECC(void *a1)
{
  return sub_1ACA41EA0(0, a1[2], 0, a1);
}

void *sub_1ACDE6EE0(void *a1)
{
  return sub_1ACA414E4(0, a1[2], 0, a1);
}

void *sub_1ACDE6EF4(void *a1)
{
  return sub_1ACA424E0(0, a1[2], 0, a1);
}

uint64_t sub_1ACDE6F08(unint64_t a1)
{
  return sub_1ACA42C00(0, *(void *)(a1 + 16), 0, a1);
}

void sub_1ACDE6F1C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1AD1194A0);
}

void *sub_1ACDE6F98(void *a1)
{
  return sub_1ACA43384(0, a1[2], 0, a1);
}

uint64_t sub_1ACDE6FAC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACDE6FE4()
{
  return sub_1ACDE682C();
}

void *sub_1ACDE7000(void *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  uint64_t v8 = sub_1ACE76D48();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  void v4[6] = MEMORY[0x1E4FBC860];
  uint64_t v13 = (char *)v4 + OBJC_IVAR____TtC18PodcastsFoundationP33_ACA32E4676063C24D8CDAE723F3FF8C510MultiTimer_startDate;
  uint64_t v14 = sub_1ACE750A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  void v4[2] = a1;
  v4[4] = a2;
  v4[5] = a3;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772720);
  v18[1] = v12;
  sub_1ACDE75FC(&qword_1EB772F70, MEMORY[0x1E4FBCC70]);
  id v15 = a1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F58);
  sub_1ACAC5D64((unint64_t *)&unk_1EB772F60, &qword_1EB772F58);
  sub_1ACE770E8();
  uint64_t v16 = sub_1ACE76D58();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  _OWORD v4[3] = v16;
  return v4;
}

void sub_1ACDE7208(double a1)
{
  if (qword_1EB76C890 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EB76C888;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E4A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84820;
  *(void *)(inited + 32) = 0x6E6F697461727564;
  *(void *)(inited + 40) = 0xE800000000000000;
  id v4 = objc_allocWithZone(MEMORY[0x1E4F28ED0]);
  uint64_t v5 = @"com.apple.podcasts.CoreDataHang";
  *(void *)(inited + 48) = objc_msgSend(v4, sel_initWithDouble_, a1);
  *(void *)(inited + 56) = 0x747865746E6F63;
  *(void *)(inited + 64) = 0xE700000000000000;
  sub_1ACA50D4C(0, &qword_1EB76E320);
  *(void *)(inited + 72) = sub_1ACE76F98();
  unint64_t v6 = sub_1ACA36DD8(inited);
  id v7 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v6;
  void v11[4] = sub_1ACB19A38;
  v11[5] = v8;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  void v11[2] = sub_1ACDD55C4;
  v11[3] = &block_descriptor_50_0;
  uint64_t v9 = _Block_copy(v11);
  swift_release();
  id v10 = objc_msgSend(v7, sel_initWithName_generator_, v5, v9);

  _Block_release(v9);
  objc_msgSend(v2, sel_sendEvent_, v10);
}

uint64_t sub_1ACDE7438()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACDE7470(uint64_t a1, double a2)
{
  sub_1ACDE4660(a1, v2, a2);
}

uint64_t sub_1ACDE7478()
{
  uint64_t v1 = sub_1ACE75438();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDE754C()
{
  uint64_t v1 = *(void *)(sub_1ACE75438() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + v3);
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = *(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  return sub_1ACDE46CC(v0 + v2, v5, v6, v7);
}

uint64_t sub_1ACDE75FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACDE7644(uint64_t result)
{
  if (*(void *)(result + 16))
  {
    uint64_t v1 = result;
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1ACE754C8();
    __swift_project_value_buffer(v2, (uint64_t)qword_1E99F2BF8);
    swift_bridgeObjectRetain();
    unint64_t v3 = sub_1ACE75498();
    os_log_type_t v4 = sub_1ACE76BC8();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v15 = v6;
      *(_DWORD *)uint64_t v5 = 136315138;
      uint64_t v7 = sub_1ACB6C470(v1);
      uint64_t v8 = MEMORY[0x1AD118740](v7);
      unint64_t v10 = v9;
      swift_bridgeObjectRelease();
      sub_1ACA3189C(v8, v10, &v15);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v3, v4, "Registering remote states: %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v6, -1, -1);
      MEMORY[0x1AD11B340](v5, -1, -1);
    }
    else
    {

      uint64_t v11 = swift_bridgeObjectRelease();
    }
    MEMORY[0x1F4188790](v11);
    uint64_t v13 = (uint64_t)&v12[4];
    uint64_t v14 = v12 + 8;
    os_unfair_lock_lock(v12 + 8);
    sub_1ACDED19C(v13, &v15);
    os_unfair_lock_unlock(v14);
    sub_1ACE75898();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1ACDE78A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5ED8);
  MEMORY[0x1F4188790](v51);
  uint64_t v5 = (uint64_t *)((char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v50 = (uint64_t *)((char *)&v42 - v7);
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (uint64_t *)((char *)&v42 - v9);
  if (*(void *)(a1 + 16))
  {
    if (qword_1E99EFEE8 != -1) {
      goto LABEL_25;
    }
    while (1)
    {
      uint64_t v11 = sub_1ACE754C8();
      __swift_project_value_buffer(v11, (uint64_t)qword_1E99F2BF8);
      swift_bridgeObjectRetain_n();
      uint64_t v12 = sub_1ACE75498();
      int v13 = sub_1ACE76BC8();
      if (!os_log_type_enabled(v12, (os_log_type_t)v13))
      {

        uint64_t v33 = swift_bridgeObjectRelease_n();
        goto LABEL_20;
      }
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v56 = v15;
      uint64_t v47 = v14;
      *(_DWORD *)uint64_t v14 = 136315138;
      int64_t v16 = *(void *)(a1 + 16);
      int v46 = v13;
      uint64_t v45 = v15;
      if (!v16) {
        break;
      }
      uint64_t v43 = v12;
      uint64_t v44 = v2;
      uint64_t v55 = MEMORY[0x1E4FBC860];
      sub_1ACC82D44(0, v16, 0);
      uint64_t v2 = sub_1ACC25F20(a1);
      int v18 = v17;
      uint64_t v48 = a1 + 64;
      uint64_t v49 = a1;
      char v20 = v19 & 1;
      for (int64_t i = v16 - 1; ; --i)
      {
        uint64_t v22 = v51;
        uint64_t v23 = (uint64_t)v10 + *(int *)(v51 + 48);
        uint64_t v24 = sub_1ACDEC3B4(v23, v2, v18, v20 & 1, a1);
        *unint64_t v10 = v24;
        uint64_t v25 = (uint64_t)v50;
        *uint64_t v50 = v24;
        sub_1ACDED06C(v23, v25 + *(int *)(v22 + 48), (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
        sub_1ACA50E14(v25, (uint64_t)v5, &qword_1E99F5ED8);
        sub_1ACA50E78((uint64_t)v10, &qword_1E99F5ED8);
        uint64_t v53 = 0;
        unint64_t v54 = 0xE000000000000000;
        uint64_t v52 = *v5;
        sub_1ACA55E4C();
        sub_1ACE770B8();
        sub_1ACE762C8();
        swift_bridgeObjectRelease();
        sub_1ACE762C8();
        type metadata accessor for EpisodePlayState();
        sub_1ACE77458();
        uint64_t v26 = v53;
        unint64_t v27 = v54;
        sub_1ACA50E78((uint64_t)v5, &qword_1E99F5ED8);
        uint64_t v28 = v55;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1ACC82D44(0, *(void *)(v28 + 16) + 1, 1);
          uint64_t v28 = v55;
        }
        unint64_t v30 = *(void *)(v28 + 16);
        unint64_t v29 = *(void *)(v28 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_1ACC82D44(v29 > 1, v30 + 1, 1);
          uint64_t v28 = v55;
        }
        *(void *)(v28 + 16) = v30 + 1;
        uint64_t v31 = v28 + 16 * v30;
        *(void *)(v31 + 32) = v26;
        *(void *)(v31 + 40) = v27;
        a1 = v49;
        if (v2 < 0 || v2 >= -(-1 << *(unsigned char *)(v49 + 32))) {
          break;
        }
        if (((*(void *)(v48 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v2) & 1) == 0) {
          goto LABEL_23;
        }
        if (*(_DWORD *)(v49 + 36) != v18) {
          goto LABEL_24;
        }
        uint64_t v32 = sub_1ACE77108();
        if (!i)
        {
          swift_bridgeObjectRelease();
          uint64_t v12 = v43;
          goto LABEL_19;
        }
        uint64_t v2 = v32;
        char v20 = 0;
        int v18 = *(_DWORD *)(a1 + 36);
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      swift_once();
    }
    swift_bridgeObjectRelease();
    uint64_t v28 = MEMORY[0x1E4FBC860];
LABEL_19:
    uint64_t v34 = v47;
    uint64_t v35 = MEMORY[0x1AD118740](v28, MEMORY[0x1E4FBB1A0]);
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_1ACA3189C(v35, v37, &v56);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v12, (os_log_type_t)v46, "Registering remote states: %s", v34, 0xCu);
    uint64_t v38 = v45;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v38, -1, -1);
    MEMORY[0x1AD11B340](v34, -1, -1);

LABEL_20:
    MEMORY[0x1F4188790](v33);
    *(&v42 - 2) = a1;
    uint64_t v40 = (uint64_t)&v39[4];
    uint64_t v41 = v39 + 8;
    os_unfair_lock_lock(v39 + 8);
    sub_1ACDECFDC(v40, &v53);
    os_unfair_lock_unlock(v41);
    sub_1ACE75898();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACDE7DD0(uint64_t result)
{
  if (*(void *)(result + 16))
  {
    uint64_t v1 = result;
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1ACE754C8();
    __swift_project_value_buffer(v2, (uint64_t)qword_1E99F2BF8);
    swift_bridgeObjectRetain();
    unint64_t v3 = sub_1ACE75498();
    os_log_type_t v4 = sub_1ACE76BC8();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v15 = v6;
      *(_DWORD *)uint64_t v5 = 136315138;
      uint64_t v7 = sub_1ACB6C6F4(v1);
      uint64_t v8 = MEMORY[0x1AD118740](v7);
      unint64_t v10 = v9;
      swift_bridgeObjectRelease();
      sub_1ACA3189C(v8, v10, &v15);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v3, v4, "Registering remote states: %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v6, -1, -1);
      MEMORY[0x1AD11B340](v5, -1, -1);
    }
    else
    {

      uint64_t v11 = swift_bridgeObjectRelease();
    }
    MEMORY[0x1F4188790](v11);
    uint64_t v13 = (uint64_t)&v12[4];
    uint64_t v14 = v12 + 8;
    os_unfair_lock_lock(v12 + 8);
    sub_1ACDECE90(v13, &v15);
    os_unfair_lock_unlock(v14);
    sub_1ACE75898();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1ACDE802C(void *a1, uint64_t a2)
{
  uint64_t v95 = a1;
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2860);
  MEMORY[0x1F4188790](v93);
  os_log_type_t v4 = &v77[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  MEMORY[0x1F4188790](v5 - 8);
  long long v89 = &v77[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = &v77[-v8];
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v77[-v11];
  uint64_t v13 = type metadata accessor for EpisodePlayState();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v83 = &v77[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v16);
  long long v88 = &v77[-v17];
  MEMORY[0x1F4188790](v18);
  char v20 = &v77[-v19];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5EE0);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = &v77[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (uint64_t *)&v77[-v25];
  uint64_t v27 = *(void *)(a2 + 64);
  uint64_t v85 = a2 + 64;
  uint64_t v28 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  unint64_t v100 = v29 & v27;
  unint64_t v30 = (unint64_t)(v28 + 63) >> 6;
  uint64_t v97 = v14;
  long long v91 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  uint64_t v92 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  unint64_t v79 = v30 - 1;
  swift_bridgeObjectRetain();
  unint64_t v31 = 0;
  int64_t v86 = v30;
  unint64_t v80 = v30 - 5;
  uint64_t v90 = a2;
  uint64_t v81 = a2 + 104;
  uint64_t v84 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v98 = v26;
  long long v87 = v20;
  uint64_t v94 = v23;
  while (1)
  {
    if (v100)
    {
      unint64_t v32 = __clz(__rbit64(v100));
      unint64_t v99 = v31;
      v100 &= v100 - 1;
      unint64_t v33 = v32 | (v31 << 6);
      goto LABEL_9;
    }
    int64_t v37 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v37 >= v86)
    {
      unint64_t v39 = v31;
    }
    else
    {
      unint64_t v38 = *(void *)(v85 + 8 * v37);
      if (v38) {
        goto LABEL_13;
      }
      unint64_t v39 = v31 + 1;
      if ((uint64_t)(v31 + 2) < v86)
      {
        unint64_t v38 = *(void *)(v85 + 8 * (v31 + 2));
        if (v38)
        {
          int64_t v37 = v31 + 2;
          goto LABEL_13;
        }
        unint64_t v39 = v31 + 2;
        if ((uint64_t)(v31 + 3) < v86)
        {
          unint64_t v38 = *(void *)(v85 + 8 * (v31 + 3));
          if (v38)
          {
            int64_t v37 = v31 + 3;
LABEL_13:
            unint64_t v99 = v37;
            unint64_t v100 = (v38 - 1) & v38;
            unint64_t v33 = __clz(__rbit64(v38)) + (v37 << 6);
LABEL_9:
            uint64_t v34 = *(void *)(v90 + 56);
            *uint64_t v23 = *(void *)(*(void *)(v90 + 48) + 8 * v33);
            uint64_t v35 = v34 + *(void *)(v97 + 72) * v33;
            uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5ED8);
            sub_1ACDED06C(v35, (uint64_t)v23 + *(int *)(v36 + 48), (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
            (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v23, 0, 1, v36);
            uint64_t v26 = v98;
            goto LABEL_16;
          }
          int64_t v37 = v31 + 4;
          unint64_t v39 = v31 + 3;
          if ((uint64_t)(v31 + 4) < v86)
          {
            unint64_t v38 = *(void *)(v85 + 8 * v37);
            if (v38) {
              goto LABEL_13;
            }
            while (v80 != v31)
            {
              unint64_t v38 = *(void *)(v81 + 8 * v31++);
              if (v38)
              {
                int64_t v37 = v31 + 4;
                goto LABEL_13;
              }
            }
            unint64_t v39 = v79;
          }
        }
      }
    }
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5ED8);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v23, 1, 1, v40);
    unint64_t v99 = v39;
    unint64_t v100 = 0;
LABEL_16:
    sub_1ACA50E14((uint64_t)v23, (uint64_t)v26, &qword_1E99F5EE0);
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5ED8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v26, 1, v41) == 1)
    {
      swift_release();
      return v84;
    }
    uint64_t v42 = *v26;
    sub_1ACDED0D4((uint64_t)v26 + *(int *)(v41 + 48), (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
    uint64_t v43 = *v95;
    uint64_t v44 = *(void *)(*v95 + 16);
    uint64_t v96 = v42;
    if (v44 && (uint64_t v45 = sub_1ACA65CC4(v42), (v46 & 1) != 0))
    {
      uint64_t v47 = *(void *)(v43 + 56);
      uint64_t v48 = v97;
      sub_1ACDED06C(v47 + *(void *)(v97 + 72) * v45, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      uint64_t v49 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v48 + 56);
      v49(v12, 0, 1, v13);
    }
    else
    {
      uint64_t v49 = *v92;
      (*v92)(v12, 1, 1, v13);
    }
    sub_1ACDED06C((uint64_t)v20, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
    v49(v9, 0, 1, v13);
    uint64_t v50 = (uint64_t)&v4[*(int *)(v93 + 48)];
    sub_1ACBF21D4((uint64_t)v12, (uint64_t)v4);
    sub_1ACBF21D4((uint64_t)v9, v50);
    uint64_t v51 = *v91;
    if ((*v91)((uint64_t)v4, 1, v13) == 1)
    {
      sub_1ACA50E78((uint64_t)v9, (uint64_t *)&unk_1EB772D70);
      sub_1ACA50E78((uint64_t)v12, (uint64_t *)&unk_1EB772D70);
      if (v51(v50, 1, v13) != 1) {
        goto LABEL_31;
      }
      sub_1ACA50E78((uint64_t)v4, (uint64_t *)&unk_1EB772D70);
      uint64_t v23 = v94;
      uint64_t v26 = v98;
    }
    else
    {
      uint64_t v52 = v89;
      sub_1ACBF21D4((uint64_t)v4, (uint64_t)v89);
      if (v51(v50, 1, v13) == 1)
      {
        sub_1ACA50E78((uint64_t)v9, (uint64_t *)&unk_1EB772D70);
        sub_1ACA50E78((uint64_t)v12, (uint64_t *)&unk_1EB772D70);
        sub_1ACDED13C((uint64_t)v52, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
LABEL_31:
        sub_1ACA50E78((uint64_t)v4, &qword_1E99F2860);
        uint64_t v26 = v98;
LABEL_32:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v84 = sub_1ACA41D90(0, v84[2] + 1, 1, v84);
        }
        unint64_t v56 = v84[2];
        unint64_t v55 = v84[3];
        if (v56 >= v55 >> 1) {
          uint64_t v84 = sub_1ACA41D90((void *)(v55 > 1), v56 + 1, 1, v84);
        }
        uint64_t v57 = v83;
        uint64_t v58 = v84;
        v84[2] = v56 + 1;
        v58[v56 + 4] = v96;
        sub_1ACDED06C((uint64_t)v20, (uint64_t)v57, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
        uint64_t v59 = v95;
        LODWORD(v82) = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v101 = (void *)*v59;
        uint64_t v60 = v101;
        *uint64_t v59 = 0x8000000000000000;
        unint64_t v62 = sub_1ACA65CC4(v96);
        uint64_t v63 = v60[2];
        BOOL v64 = (v61 & 1) == 0;
        uint64_t v65 = v63 + v64;
        if (__OFADD__(v63, v64)) {
          goto LABEL_58;
        }
        if (v60[3] >= v65)
        {
          uint64_t v23 = v94;
          if (v82)
          {
            uint64_t v72 = v101;
            if ((v61 & 1) == 0) {
              goto LABEL_43;
            }
          }
          else
          {
            unint64_t v82 = v62;
            int v78 = v61;
            sub_1ACD09DB4();
            unint64_t v62 = v82;
            uint64_t v72 = v101;
            if ((v78 & 1) == 0) {
              goto LABEL_43;
            }
          }
        }
        else
        {
          char v66 = v61;
          sub_1ACD04160(v65, v82);
          uint64_t v67 = sub_1ACA65CC4(v96);
          int v69 = v68 & 1;
          char v70 = v66;
          int v71 = v66 & 1;
          uint64_t v23 = v94;
          if (v71 != v69) {
            goto LABEL_60;
          }
          unint64_t v62 = v67;
          uint64_t v72 = v101;
          if ((v70 & 1) == 0)
          {
LABEL_43:
            v72[(v62 >> 6) + 8] |= 1 << v62;
            *(void *)(v72[6] + 8 * v62) = v96;
            sub_1ACDED0D4((uint64_t)v83, v72[7] + *(void *)(v97 + 72) * v62, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
            uint64_t v73 = v72[2];
            BOOL v74 = __OFADD__(v73, 1);
            uint64_t v75 = v73 + 1;
            if (v74) {
              goto LABEL_59;
            }
            v72[2] = v75;
            goto LABEL_5;
          }
        }
        sub_1ACDED008((uint64_t)v83, v72[7] + *(void *)(v97 + 72) * v62);
LABEL_5:
        *uint64_t v95 = v72;
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      uint64_t v53 = v88;
      sub_1ACDED0D4(v50, (uint64_t)v88, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      char v54 = _s18PodcastsFoundation16EpisodePlayStateO2eeoiySbAC_ACtFZ_0((uint64_t)v52, (uint64_t)v53);
      sub_1ACDED13C((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      sub_1ACA50E78((uint64_t)v9, (uint64_t *)&unk_1EB772D70);
      sub_1ACA50E78((uint64_t)v12, (uint64_t *)&unk_1EB772D70);
      char v20 = v87;
      sub_1ACDED13C((uint64_t)v52, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      sub_1ACA50E78((uint64_t)v4, (uint64_t *)&unk_1EB772D70);
      uint64_t v23 = v94;
      uint64_t v26 = v98;
      if ((v54 & 1) == 0) {
        goto LABEL_32;
      }
    }
LABEL_6:
    sub_1ACDED13C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
    unint64_t v31 = v99;
  }
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  uint64_t result = (void *)sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACDE8A88(void *a1, uint64_t a2)
{
  uint64_t v4 = a2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a2 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  int64_t v39 = v8;
  uint64_t v40 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v37 = v4;
  unint64_t v38 = a1;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v12 >= v8) {
      goto LABEL_38;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v8) {
        goto LABEL_38;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v8) {
          goto LABEL_38;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v9);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_22:
    uint64_t v15 = *(void *)(*(void *)(a2 + 48) + 8 * v11);
    int v16 = *(unsigned __int8 *)(*(void *)(a2 + 56) + v11);
    uint64_t v17 = *a1;
    if (*(void *)(*a1 + 16))
    {
      uint64_t v18 = sub_1ACA65CC4(v15);
      if ((v19 & 1) != 0 && v16 == *(unsigned __int8 *)(*(void *)(v17 + 56) + v18)) {
        continue;
      }
    }
    char v20 = v40;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v20 = sub_1ACA41D90(0, v40[2] + 1, 1, v40);
    }
    unint64_t v22 = v20[2];
    unint64_t v21 = v20[3];
    if (v22 >= v21 >> 1) {
      char v20 = sub_1ACA41D90((void *)(v21 > 1), v22 + 1, 1, v20);
    }
    v20[2] = v22 + 1;
    uint64_t v40 = v20;
    v20[v22 + 4] = v15;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *a1;
    uint64_t v41 = (void *)*a1;
    *a1 = 0x8000000000000000;
    unint64_t v26 = sub_1ACA65CC4(v15);
    uint64_t v27 = *(void *)(v24 + 16);
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      goto LABEL_41;
    }
    char v30 = v25;
    if (*(void *)(v24 + 24) >= v29)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1ACD0A050();
      }
    }
    else
    {
      sub_1ACD0450C(v29, isUniquelyReferenced_nonNull_native);
      uint64_t v31 = sub_1ACA65CC4(v15);
      if ((v30 & 1) != (v32 & 1)) {
        goto LABEL_43;
      }
      unint64_t v26 = v31;
    }
    int64_t v8 = v39;
    if (v30)
    {
      *(unsigned char *)(v41[7] + v26) = v16;
    }
    else
    {
      v41[(v26 >> 6) + 8] |= 1 << v26;
      *(void *)(v41[6] + 8 * v26) = v15;
      *(unsigned char *)(v41[7] + v26) = v16;
      uint64_t v33 = v41[2];
      BOOL v34 = __OFADD__(v33, 1);
      uint64_t v35 = v33 + 1;
      if (v34) {
        goto LABEL_42;
      }
      v41[2] = v35;
    }
    a1 = v38;
    *unint64_t v38 = v41;
    swift_bridgeObjectRelease();
    uint64_t v4 = v37;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v8)
  {
LABEL_38:
    swift_release();
    return (uint64_t)v40;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v8) {
      goto LABEL_38;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACDE8D98(void *a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v54 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v55 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v51 = v2;
  uint64_t v52 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v53 = a1;
  while (v6)
  {
    uint64_t v56 = (v6 - 1) & v6;
    int64_t v57 = v7;
    unint64_t v11 = __clz(__rbit64(v6)) | (v7 << 6);
LABEL_24:
    uint64_t v16 = *(void *)(*(void *)(v2 + 48) + 8 * v11);
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 56) + 40 * v11);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = v17[2];
    uint64_t v21 = v17[3];
    uint64_t v22 = v17[4];
    uint64_t v23 = *a1;
    if (!*(void *)(*a1 + 16) || (uint64_t v24 = sub_1ACA65CC4(v16), (v25 & 1) == 0))
    {
      sub_1ACA50D88(v19, v18, v20);
      sub_1ACA50D88(v19, v18, v20);
      sub_1ACB74E74(0, 0, 3uLL);
      sub_1ACB74E74(v19, v18, v20);
      goto LABEL_45;
    }
    unint64_t v26 = (void *)(*(void *)(v23 + 56) + 40 * v24);
    uint64_t v27 = v26[2];
    switch(v27)
    {
      case 0:
        if (!v20)
        {
          uint64_t v8 = v19;
          uint64_t v9 = v18;
          unint64_t v10 = 0;
          goto LABEL_6;
        }
LABEL_44:
        sub_1ACA50D88(v19, v18, v20);
        goto LABEL_45;
      case 1:
        if (v20 != 1) {
          goto LABEL_44;
        }
        uint64_t v8 = v19;
        uint64_t v9 = v18;
        unint64_t v10 = 1;
        goto LABEL_6;
      case 2:
        if (v20 != 2) {
          goto LABEL_44;
        }
        uint64_t v8 = v19;
        uint64_t v9 = v18;
        unint64_t v10 = 2;
LABEL_6:
        sub_1ACA50D88(v8, v9, v10);
        goto LABEL_7;
    }
    if (v20 < 3 || ((v19 ^ ((*v26 & 1) == 0)) & 1) == 0) {
      goto LABEL_44;
    }
    uint64_t v29 = v26[3];
    uint64_t v28 = v26[4];
    BOOL v30 = v26[1] == v18 && v27 == v20;
    if (!v30 && (sub_1ACE77848() & 1) == 0 || ((v21 ^ ((v29 & 1) == 0)) & 1) == 0) {
      goto LABEL_44;
    }
    sub_1ACA50D88(v19, v18, v20);
    a1 = v53;
    if (v28 == v22)
    {
      sub_1ACA50D9C(v19, v18, v20);
      goto LABEL_7;
    }
LABEL_45:
    uint64_t v31 = v52;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v31 = sub_1ACA41D90(0, v52[2] + 1, 1, v52);
    }
    unint64_t v33 = v31[2];
    unint64_t v32 = v31[3];
    if (v33 >= v32 >> 1) {
      uint64_t v31 = sub_1ACA41D90((void *)(v32 > 1), v33 + 1, 1, v31);
    }
    v31[2] = v33 + 1;
    uint64_t v52 = v31;
    v31[v33 + 4] = v16;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v35 = (void *)*v53;
    *uint64_t v53 = 0x8000000000000000;
    unint64_t v37 = sub_1ACA65CC4(v16);
    uint64_t v38 = v35[2];
    BOOL v39 = (v36 & 1) == 0;
    uint64_t v40 = v38 + v39;
    if (__OFADD__(v38, v39)) {
      goto LABEL_63;
    }
    if (v35[3] >= v40)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v36 & 1) == 0) {
          goto LABEL_58;
        }
      }
      else
      {
        char v44 = v36;
        sub_1ACD05D40();
        if ((v44 & 1) == 0) {
          goto LABEL_58;
        }
      }
    }
    else
    {
      char v50 = v36;
      sub_1ACCFC5A0(v40, isUniquelyReferenced_nonNull_native);
      uint64_t v41 = sub_1ACA65CC4(v16);
      if ((v50 & 1) != (v42 & 1)) {
        goto LABEL_66;
      }
      unint64_t v37 = v41;
      if ((v50 & 1) == 0)
      {
LABEL_58:
        v35[(v37 >> 6) + 8] |= 1 << v37;
        *(void *)(v35[6] + 8 * v37) = v16;
        uint64_t v45 = (uint64_t *)(v35[7] + 40 * v37);
        *uint64_t v45 = v19;
        v45[1] = v18;
        v45[2] = v20;
        v45[3] = v21;
        v45[4] = v22;
        uint64_t v46 = v35[2];
        BOOL v47 = __OFADD__(v46, 1);
        uint64_t v48 = v46 + 1;
        if (v47) {
          goto LABEL_65;
        }
        v35[2] = v48;
        goto LABEL_60;
      }
    }
    uint64_t v43 = (uint64_t *)(v35[7] + 40 * v37);
    sub_1ACA50D9C(*v43, v43[1], v43[2]);
    *uint64_t v43 = v19;
    v43[1] = v18;
    v43[2] = v20;
    v43[3] = v21;
    v43[4] = v22;
LABEL_60:
    a1 = v53;
    *uint64_t v53 = v35;
    swift_bridgeObjectRelease();
    uint64_t v2 = v51;
LABEL_7:
    unint64_t v6 = v56;
    int64_t v7 = v57;
  }
  int64_t v12 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (v12 >= v55) {
    goto LABEL_61;
  }
  unint64_t v13 = *(void *)(v54 + 8 * v12);
  int64_t v14 = v7 + 1;
  if (v13) {
    goto LABEL_23;
  }
  int64_t v14 = v7 + 2;
  if (v7 + 2 >= v55) {
    goto LABEL_61;
  }
  unint64_t v13 = *(void *)(v54 + 8 * v14);
  if (v13) {
    goto LABEL_23;
  }
  int64_t v14 = v7 + 3;
  if (v7 + 3 >= v55) {
    goto LABEL_61;
  }
  unint64_t v13 = *(void *)(v54 + 8 * v14);
  if (v13)
  {
LABEL_23:
    uint64_t v56 = (v13 - 1) & v13;
    int64_t v57 = v14;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    goto LABEL_24;
  }
  uint64_t v15 = v7 + 4;
  if (v7 + 4 >= v55)
  {
LABEL_61:
    swift_release();
    return (uint64_t)v52;
  }
  unint64_t v13 = *(void *)(v54 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v7 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v55) {
      goto LABEL_61;
    }
    unint64_t v13 = *(void *)(v54 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACDE92B4(uint64_t a1, char a2)
{
  uint64_t v4 = *(os_unfair_lock_s **)(v2 + 16);
  uint64_t v5 = (uint64_t)&v4[4];
  unint64_t v6 = v4 + 8;
  os_unfair_lock_lock(v4 + 8);
  sub_1ACDECF2C(v5, &v9);
  os_unfair_lock_unlock(v6);
  uint64_t v7 = v9;
  sub_1ACE75898();
  if ((a2 & 1) == 0)
  {
    uint64_t v9 = v7;
    sub_1ACE75898();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACDE9354(uint64_t a1, char a2)
{
  uint64_t v4 = *(os_unfair_lock_s **)(v2 + 16);
  uint64_t v5 = (uint64_t)&v4[4];
  unint64_t v6 = v4 + 8;
  os_unfair_lock_lock(v4 + 8);
  sub_1ACDECEBC(v5, &v9);
  os_unfair_lock_unlock(v6);
  uint64_t v7 = v9;
  sub_1ACE75898();
  if ((a2 & 1) == 0)
  {
    uint64_t v9 = v7;
    sub_1ACE75898();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACDE93F4(void *a1, uint64_t a2)
{
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1ACDF5694(v4);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1ACB88548(v6, v5);
  swift_bridgeObjectRelease();
  sub_1ACA6FC9C(v7);
  void v11[2] = a1;
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1ACDEC848(v8, (uint64_t)sub_1ACDECF20, (uint64_t)v11, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1ACDEC46C);
  swift_bridgeObjectRelease();
  sub_1ACA6FC84(v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = a2;
  return v12;
}

uint64_t sub_1ACDE94F0(void *a1, uint64_t a2)
{
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1ACDF5694(v4);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1ACB885B4(v6, v5);
  swift_bridgeObjectRelease();
  sub_1ACA6FC9C(v7);
  void v11[2] = a1;
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1ACDEC848(v8, (uint64_t)sub_1ACDECF58, (uint64_t)v11, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1ACDEC614);
  swift_bridgeObjectRelease();
  sub_1ACA6FC84(v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = a2;
  return v12;
}

uint64_t sub_1ACDE95EC(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  if (*(void *)(*a3 + 16) && (uint64_t v5 = sub_1ACA65CC4(a1), (v6 & 1) != 0)) {
    char v7 = a2 ^ *(unsigned char *)(*(void *)(v3 + 56) + v5);
  }
  else {
    char v7 = 1;
  }
  return v7 & 1;
}

BOOL sub_1ACDE963C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1ACA8F4F4(a2, (uint64_t)v14);
  uint64_t v6 = v14[0];
  uint64_t v7 = v14[1];
  unint64_t v8 = v14[2];
  uint64_t v9 = *a3;
  if (*(void *)(v9 + 16) && (uint64_t v10 = sub_1ACA65CC4(a1), (v11 & 1) != 0))
  {
    sub_1ACA8F4F4(*(void *)(v9 + 56) + 40 * v10, (uint64_t)v15);
    return !_s18PodcastsFoundation12PodcastStateO2eeoiySbAC_ACtFZ_0((uint64_t)v15, a2);
  }
  else
  {
    sub_1ACDECFA8(a2);
    sub_1ACB74E74(0, 0, 3uLL);
    sub_1ACB74E74(v6, v7, v8);
    return 1;
  }
}

uint64_t sub_1ACDE971C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E30);
  MEMORY[0x1F4188790](v2);
  char v42 = (uint64_t *)((char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v41 - v5);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t *)((char *)&v41 - v8);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v45 = a1 + 64;
  uint64_t v43 = MEMORY[0x1E4FBC868];
  uint64_t v47 = MEMORY[0x1E4FBC868];
  uint64_t v11 = -1 << *(unsigned char *)(a1 + 32);
  if (-v11 < 64) {
    uint64_t v12 = ~(-1 << -(char)v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v10;
  uint64_t v41 = -1 << *(unsigned char *)(a1 + 32);
  int64_t v44 = (unint64_t)(63 - v11) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v46 = 0;
  if (!v13) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  unint64_t v16 = v15 | (v46 << 6);
  while (1)
  {
    uint64_t v17 = *(void *)(a1 + 56);
    uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 8 * v16);
    uint64_t v19 = (int *)(type metadata accessor for ThinClientEpisodeStateModel() - 8);
    sub_1ACDED06C(v17 + *(void *)(*(void *)v19 + 72) * v16, (uint64_t)v9 + *(int *)(v2 + 48), (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
    *uint64_t v9 = v18;
    sub_1ACA50E14((uint64_t)v9, (uint64_t)v6, &qword_1E99F0E30);
    uint64_t v20 = *(int *)(v2 + 48);
    int v21 = *((unsigned __int8 *)v6 + v20 + v19[7]);
    if (v21 == 2)
    {
      uint64_t result = sub_1ACA50E78((uint64_t)v6, &qword_1E99F0E30);
      if (v13) {
        goto LABEL_5;
      }
    }
    else
    {
      unint64_t v26 = v42;
      uint64_t v27 = (uint64_t)v42 + v20;
      uint64_t v28 = *v6;
      *char v42 = *v6;
      sub_1ACDED0D4((uint64_t)v6 + v20, (uint64_t)v26 + v20, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
      uint64_t v29 = v43;
      unint64_t v30 = *(void *)(v43 + 16);
      if (*(void *)(v43 + 24) <= v30)
      {
        sub_1ACD0450C(v30 + 1, 1);
        uint64_t v29 = v47;
      }
      uint64_t v43 = v29;
      sub_1ACE77B18();
      sub_1ACE77B58();
      uint64_t result = sub_1ACE77B78();
      uint64_t v31 = (void *)v43;
      uint64_t v32 = v43 + 64;
      uint64_t v33 = -1 << *(unsigned char *)(v43 + 32);
      unint64_t v34 = result & ~v33;
      unint64_t v35 = v34 >> 6;
      if (((-1 << v34) & ~*(void *)(v43 + 64 + 8 * (v34 >> 6))) == 0)
      {
        char v37 = 0;
        unint64_t v38 = (unint64_t)(63 - v33) >> 6;
        while (++v35 != v38 || (v37 & 1) == 0)
        {
          BOOL v39 = v35 == v38;
          if (v35 == v38) {
            unint64_t v35 = 0;
          }
          v37 |= v39;
          uint64_t v40 = *(void *)(v32 + 8 * v35);
          if (v40 != -1)
          {
            unint64_t v36 = __clz(__rbit64(~v40)) + (v35 << 6);
            goto LABEL_36;
          }
        }
        goto LABEL_40;
      }
      unint64_t v36 = __clz(__rbit64((-1 << v34) & ~*(void *)(v43 + 64 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
LABEL_36:
      *(void *)(v32 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
      *(void *)(v31[6] + 8 * v36) = v28;
      *(unsigned char *)(v31[7] + v36) = v21 & 1;
      ++v31[2];
      uint64_t result = sub_1ACDED13C(v27, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
      if (v13) {
        goto LABEL_5;
      }
    }
LABEL_8:
    int64_t v22 = v46 + 1;
    if (__OFADD__(v46, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v22 >= v44) {
      goto LABEL_38;
    }
    unint64_t v23 = *(void *)(v45 + 8 * v22);
    int64_t v24 = v46 + 1;
    if (!v23)
    {
      int64_t v24 = v46 + 2;
      if (v46 + 2 >= v44) {
        goto LABEL_38;
      }
      unint64_t v23 = *(void *)(v45 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v46 + 3;
        if (v46 + 3 >= v44) {
          goto LABEL_38;
        }
        unint64_t v23 = *(void *)(v45 + 8 * v24);
        if (!v23)
        {
          int64_t v24 = v46 + 4;
          if (v46 + 4 >= v44) {
            goto LABEL_38;
          }
          unint64_t v23 = *(void *)(v45 + 8 * v24);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v23 - 1) & v23;
    unint64_t v16 = __clz(__rbit64(v23)) + (v24 << 6);
    int64_t v46 = v24;
  }
  int64_t v25 = v46 + 5;
  if (v46 + 5 >= v44)
  {
LABEL_38:
    sub_1ACA50A70();
    return v43;
  }
  unint64_t v23 = *(void *)(v45 + 8 * v25);
  if (v23)
  {
    int64_t v24 = v46 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v44) {
      goto LABEL_38;
    }
    unint64_t v23 = *(void *)(v45 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_23;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1ACDE9B74(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for EpisodePlayState();
  uint64_t v5 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v59 = (uint64_t)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v56 = (uint64_t)v53 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E30);
  MEMORY[0x1F4188790](v9);
  int64_t v55 = (uint64_t (**)())((char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (uint64_t (**)())((char *)v53 - v12);
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (void *)((char *)v53 - v15);
  uint64_t v60 = (void *)MEMORY[0x1E4FBC868];
  char v66 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v62 = a1 + 64;
  uint64_t v18 = -1 << *(unsigned char *)(a1 + 32);
  if (-v18 < 64) {
    uint64_t v19 = ~(-1 << -(char)v18);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v17;
  v53[0] = -1 << *(unsigned char *)(a1 + 32);
  int64_t v61 = (unint64_t)(63 - v18) >> 6;
  uint64_t v54 = v5;
  int v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v64 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v65 = 0;
  if (!v20) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  unint64_t v24 = v23 | (v65 << 6);
  while (1)
  {
    uint64_t v25 = *(void *)(v64 + 56);
    uint64_t v26 = *(void *)(*(void *)(v64 + 48) + 8 * v24);
    uint64_t v27 = type metadata accessor for ThinClientEpisodeStateModel();
    sub_1ACDED06C(v25 + *(void *)(*(void *)(v27 - 8) + 72) * v24, (uint64_t)v16 + *(int *)(v9 + 48), (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
    void *v16 = v26;
    sub_1ACA50E14((uint64_t)v16, (uint64_t)v13, &qword_1E99F0E30);
    uint64_t v28 = (uint64_t)v13 + *(int *)(v9 + 48);
    sub_1ACBF21D4(v28, (uint64_t)v4);
    if ((*v21)(v4, 1, v63) == 1)
    {
      sub_1ACA50E78((uint64_t)v13, &qword_1E99F0E30);
      uint64_t result = sub_1ACA50E78((uint64_t)v4, (uint64_t *)&unk_1EB772D70);
      if (v20) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v58 = type metadata accessor for EpisodePlayState;
      uint64_t v33 = v56;
      sub_1ACDED0D4((uint64_t)v4, v56, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      uint64_t v34 = *(int *)(v9 + 48);
      unint64_t v35 = v55;
      uint64_t v36 = (uint64_t)v55 + v34;
      char v37 = *v13;
      char *v55 = *v13;
      uint64_t v57 = (uint64_t)v35 + v34;
      sub_1ACDED0D4(v28, v36, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
      sub_1ACDED0D4(v33, v59, (uint64_t (*)(void))v58);
      unint64_t v38 = v60;
      unint64_t v39 = v60[2];
      if (v60[3] <= v39)
      {
        sub_1ACD04160(v39 + 1, 1);
        unint64_t v38 = v66;
      }
      uint64_t v40 = v38;
      sub_1ACE77B18();
      uint64_t v58 = v37;
      sub_1ACE77B58();
      uint64_t result = sub_1ACE77B78();
      uint64_t v41 = v40 + 8;
      uint64_t v60 = v40;
      uint64_t v42 = -1 << *((unsigned char *)v40 + 32);
      unint64_t v43 = result & ~v42;
      unint64_t v44 = v43 >> 6;
      if (((-1 << v43) & ~v40[(v43 >> 6) + 8]) == 0)
      {
        char v47 = 0;
        unint64_t v48 = (unint64_t)(63 - v42) >> 6;
        int64_t v46 = v58;
        while (++v44 != v48 || (v47 & 1) == 0)
        {
          BOOL v49 = v44 == v48;
          if (v44 == v48) {
            unint64_t v44 = 0;
          }
          v47 |= v49;
          uint64_t v50 = v41[v44];
          if (v50 != -1)
          {
            unint64_t v45 = __clz(__rbit64(~v50)) + (v44 << 6);
            goto LABEL_36;
          }
        }
        goto LABEL_40;
      }
      unint64_t v45 = __clz(__rbit64((-1 << v43) & ~v40[(v43 >> 6) + 8])) | v43 & 0x7FFFFFFFFFFFFFC0;
      int64_t v46 = v58;
LABEL_36:
      *(void *)((char *)v41 + ((v45 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v45;
      uint64_t v51 = v59;
      uint64_t v52 = v60;
      *(void *)(v60[6] + 8 * v45) = v46;
      sub_1ACDED0D4(v51, v52[7] + *(void *)(v54 + 72) * v45, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      ++v52[2];
      uint64_t result = sub_1ACDED13C(v57, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
      if (v20) {
        goto LABEL_5;
      }
    }
LABEL_8:
    int64_t v29 = v65 + 1;
    if (__OFADD__(v65, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v29 >= v61) {
      goto LABEL_38;
    }
    unint64_t v30 = *(void *)(v62 + 8 * v29);
    int64_t v31 = v65 + 1;
    if (!v30)
    {
      int64_t v31 = v65 + 2;
      if (v65 + 2 >= v61) {
        goto LABEL_38;
      }
      unint64_t v30 = *(void *)(v62 + 8 * v31);
      if (!v30)
      {
        int64_t v31 = v65 + 3;
        if (v65 + 3 >= v61) {
          goto LABEL_38;
        }
        unint64_t v30 = *(void *)(v62 + 8 * v31);
        if (!v30)
        {
          int64_t v31 = v65 + 4;
          if (v65 + 4 >= v61) {
            goto LABEL_38;
          }
          unint64_t v30 = *(void *)(v62 + 8 * v31);
          if (!v30) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v20 = (v30 - 1) & v30;
    unint64_t v24 = __clz(__rbit64(v30)) + (v31 << 6);
    int64_t v65 = v31;
  }
  int64_t v32 = v65 + 5;
  if (v65 + 5 >= v61)
  {
LABEL_38:
    sub_1ACA50A70();
    return (uint64_t)v60;
  }
  unint64_t v30 = *(void *)(v62 + 8 * v32);
  if (v30)
  {
    int64_t v31 = v65 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v31 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v31 >= v61) {
      goto LABEL_38;
    }
    unint64_t v30 = *(void *)(v62 + 8 * v31);
    ++v32;
    if (v30) {
      goto LABEL_23;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1ACDEA168(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    uint64_t result = sub_1ACD30438(&v13, *(void *)(*(void *)(v1 + 48) + 8 * v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

void sub_1ACDEA2C4(uint64_t a1)
{
  int64_t v2 = 0;
  uint64_t v3 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return;
    }
    if (v14 >= v7) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v2;
    if (!v15)
    {
      int64_t v2 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v2);
      if (!v15)
      {
        int64_t v2 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v2);
        if (!v15)
        {
          int64_t v2 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v2);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v9 = __clz(__rbit64(v15)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = *(void *)(a1 + 48) + 24 * v9;
    id v11 = *(id *)v10;
    uint64_t v12 = *(void *)(v10 + 8);
    char v13 = *(unsigned char *)(v10 + 16);
    sub_1ACA50CB8(*(id *)v10, v12, v13);
    sub_1ACD31B70((uint64_t)v17, v11, v12, v13);
    sub_1ACA50D28(v17[0], (uint64_t)v17[1], v18);
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v2 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v2);
        ++v16;
        if (v15) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v16;
    goto LABEL_22;
  }
LABEL_23:
  swift_release();
}

uint64_t sub_1ACDEA464(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_1ACD3007C(&v16, v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

void *InMemoryStateRepository.__allocating_init(inMemoryBookmarkStateStore:inMemoryPlayStateStore:inMemoryFollowStateStore:thinClientStateNetworking:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  unint64_t v8 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5ED0);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 24) = 0;
  *(void *)(v9 + 16) = MEMORY[0x1E4FBC870];
  v8[10] = v9;
  v8[2] = a1;
  _OWORD v8[3] = a2;
  v8[4] = a3;
  sub_1ACA3AABC(a4, (uint64_t)(v8 + 5));
  return v8;
}

void *InMemoryStateRepository.init(inMemoryBookmarkStateStore:inMemoryPlayStateStore:inMemoryFollowStateStore:thinClientStateNetworking:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5ED0);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 24) = 0;
  *(void *)(v9 + 16) = MEMORY[0x1E4FBC870];
  v4[10] = v9;
  void v4[2] = a1;
  _OWORD v4[3] = a2;
  v4[4] = a3;
  sub_1ACA3AABC(a4, (uint64_t)(v4 + 5));
  return v4;
}

uint64_t InMemoryStateRepository.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  swift_release();
  return v0;
}

uint64_t InMemoryStateRepository.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t InMemoryStateRepository.requestEpisodeStatesIfNeeded(for:)(uint64_t result)
{
  if (*(void *)(result + 16))
  {
    int64_t v2 = v1;
    uint64_t v3 = v1[10];
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
    sub_1ACDEB8B8((uint64_t *)(v3 + 16), &v18);
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
    uint64_t v4 = v18;
    swift_release();
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1ACE754C8();
    __swift_project_value_buffer(v5, (uint64_t)qword_1E99F2BF8);
    swift_bridgeObjectRetain_n();
    unint64_t v6 = sub_1ACE75498();
    os_log_type_t v7 = sub_1ACE76BD8();
    if (os_log_type_enabled(v6, v7))
    {
      unint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v18 = v9;
      *(_DWORD *)unint64_t v8 = 136315138;
      sub_1ACA798F8();
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1ACE76998();
      unint64_t v12 = v11;
      swift_bridgeObjectRelease();
      sub_1ACA3189C(v10, v12, &v18);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v6, v7, "Requesting state for missing adamIDs %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v9, -1, -1);
      MEMORY[0x1AD11B340](v8, -1, -1);

      if (*(void *)(v4 + 16))
      {
LABEL_6:
        uint64_t v13 = v2[8];
        uint64_t v14 = v2[9];
        __swift_project_boxed_opaque_existential_1(v2 + 5, v13);
        uint64_t v15 = swift_allocObject();
        swift_weakInit();
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v15;
        *(void *)(v16 + 24) = v4;
        uint64_t v17 = *(void (**)(uint64_t, uint64_t (*)(uint64_t *), uint64_t, uint64_t, uint64_t))(v14 + 8);
        swift_bridgeObjectRetain();
        swift_retain();
        v17(v4, sub_1ACDEB910, v16, v13, v14);
        swift_bridgeObjectRelease();
        swift_release();
        return swift_release();
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      if (*(void *)(v4 + 16)) {
        goto LABEL_6;
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1ACDEAAAC(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(unsigned char *)(a1 + 8);
  sub_1ACDEB940();
  if (v2)
  {
    sub_1ACB7489C(v1);
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1ACE754C8();
    __swift_project_value_buffer(v3, (uint64_t)qword_1E99F2BF8);
    sub_1ACB74920(v1, 1);
    swift_bridgeObjectRetain();
    sub_1ACB74920(v1, 1);
    swift_bridgeObjectRetain();
    oslog = sub_1ACE75498();
    os_log_type_t v4 = sub_1ACE76BE8();
    if (os_log_type_enabled(oslog, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      unint64_t v6 = (void *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      v24[0] = v7;
      *(_DWORD *)uint64_t v5 = 136315394;
      sub_1ACA798F8();
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1ACE76998();
      unint64_t v10 = v9;
      swift_bridgeObjectRelease();
      sub_1ACA3189C(v8, v10, v24);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2112;
      sub_1ACB08420();
      swift_allocError();
      *unint64_t v11 = v1;
      sub_1ACB7489C(v1);
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      sub_1ACE76FF8();
      *unint64_t v6 = v23;
      sub_1ACB74914(v1, 1);
      sub_1ACB74914(v1, 1);
      _os_log_impl(&dword_1AC9D5000, oslog, v4, "Error fetching state for adamIDs %s: %@", (uint8_t *)v5, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v6, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v7, -1, -1);
      MEMORY[0x1AD11B340](v5, -1, -1);

      sub_1ACB74914(v1, 1);
    }
    else
    {
      sub_1ACB74914(v1, 1);
      swift_bridgeObjectRelease_n();
      sub_1ACB74914(v1, 1);
      sub_1ACB74914(v1, 1);
    }
  }
  else if (v1[2])
  {
    uint64_t v12 = sub_1ACDE971C((uint64_t)v1);
    sub_1ACDE7644(v12);
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_1ACDE9B74((uint64_t)v1);
    sub_1ACDE78A0(v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1ACE754C8();
    __swift_project_value_buffer(v14, (uint64_t)qword_1E99F2BF8);
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_1ACE75498();
    os_log_type_t v16 = sub_1ACE76BE8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      v24[0] = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      sub_1ACA798F8();
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1ACE76998();
      unint64_t v21 = v20;
      swift_bridgeObjectRelease();
      sub_1ACA3189C(v19, v21, v24);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v15, v16, "No state found for adamIDs %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v18, -1, -1);
      MEMORY[0x1AD11B340](v17, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t InMemoryStateRepository.requestFollowStatesIfNeeded(for:)(uint64_t result)
{
  if (*(void *)(result + 16))
  {
    char v2 = v1;
    uint64_t v3 = v1[10];
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
    sub_1ACDED1FC((uint64_t *)(v3 + 16), &v18);
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
    uint64_t v4 = v18;
    swift_release();
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1ACE754C8();
    __swift_project_value_buffer(v5, (uint64_t)qword_1E99F2BF8);
    swift_bridgeObjectRetain_n();
    unint64_t v6 = sub_1ACE75498();
    os_log_type_t v7 = sub_1ACE76BD8();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v18 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      sub_1ACA798F8();
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1ACE76998();
      unint64_t v12 = v11;
      swift_bridgeObjectRelease();
      sub_1ACA3189C(v10, v12, &v18);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v6, v7, "Requesting state for missing adamIDs %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v9, -1, -1);
      MEMORY[0x1AD11B340](v8, -1, -1);

      if (*(void *)(v4 + 16))
      {
LABEL_6:
        uint64_t v13 = v2[8];
        uint64_t v14 = v2[9];
        __swift_project_boxed_opaque_existential_1(v2 + 5, v13);
        uint64_t v15 = swift_allocObject();
        swift_weakInit();
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v15;
        *(void *)(v16 + 24) = v4;
        uint64_t v17 = *(void (**)(uint64_t, uint64_t (*)(uint64_t *), uint64_t, uint64_t, uint64_t))(v14 + 16);
        swift_bridgeObjectRetain();
        swift_retain();
        v17(v4, sub_1ACDEBFB4, v16, v13, v14);
        swift_bridgeObjectRelease();
        swift_release();
        return swift_release();
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      if (*(void *)(v4 + 16)) {
        goto LABEL_6;
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACDEB2F8(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t))
{
  uint64_t v6 = *a1;
  char v7 = *((unsigned char *)a1 + 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = v6;
    char v10 = v7;
    a4(&v9, a3);
    return swift_release();
  }
  return result;
}

void sub_1ACDEB388(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(unsigned char *)(a1 + 8);
  sub_1ACDEB940();
  if (v2)
  {
    sub_1ACB7489C(v1);
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1ACE754C8();
    __swift_project_value_buffer(v3, (uint64_t)qword_1E99F2BF8);
    sub_1ACB74920(v1, 1);
    swift_bridgeObjectRetain();
    sub_1ACB74920(v1, 1);
    swift_bridgeObjectRetain();
    oslog = sub_1ACE75498();
    os_log_type_t v4 = sub_1ACE76BE8();
    if (os_log_type_enabled(oslog, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      uint64_t v6 = (void *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      uint64_t v22 = v7;
      *(_DWORD *)uint64_t v5 = 136315394;
      sub_1ACA798F8();
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1ACE76998();
      unint64_t v10 = v9;
      swift_bridgeObjectRelease();
      sub_1ACA3189C(v8, v10, &v22);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2112;
      sub_1ACB08420();
      swift_allocError();
      *unint64_t v11 = v1;
      sub_1ACB7489C(v1);
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      sub_1ACE76FF8();
      *uint64_t v6 = v21;
      sub_1ACB74914(v1, 1);
      sub_1ACB74914(v1, 1);
      _os_log_impl(&dword_1AC9D5000, oslog, v4, "Error fetching state for adamIDs %s: %@", (uint8_t *)v5, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v6, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v7, -1, -1);
      MEMORY[0x1AD11B340](v5, -1, -1);

      sub_1ACB74914(v1, 1);
    }
    else
    {
      sub_1ACB74914(v1, 1);
      swift_bridgeObjectRelease_n();
      sub_1ACB74914(v1, 1);
      sub_1ACB74914(v1, 1);
    }
  }
  else if (v1[2])
  {
    sub_1ACDE7DD0((uint64_t)v1);
  }
  else
  {
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1ACE754C8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1E99F2BF8);
    swift_bridgeObjectRetain_n();
    uint64_t v13 = sub_1ACE75498();
    os_log_type_t v14 = sub_1ACE76BE8();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v22 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      sub_1ACA798F8();
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1ACE76998();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();
      sub_1ACA3189C(v17, v19, &v22);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v13, v14, "No state found for adamIDs %s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v16, -1, -1);
      MEMORY[0x1AD11B340](v15, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1ACDEB85C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1ACDEBFE4(a2, a1);
  uint64_t v7 = swift_retain();
  uint64_t result = sub_1ACDEA168(v7);
  *a3 = v6;
  return result;
}

uint64_t sub_1ACDEB8B8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACDEB85C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1ACDEB8D4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACDEB910(uint64_t *a1)
{
  return sub_1ACDEB2F8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (void (*)(uint64_t *, uint64_t))sub_1ACDEAAAC);
}

void sub_1ACDEB940()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 80);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_1ACDED1C8();
  os_unfair_lock_unlock(v1 + 6);
  swift_release();
  if (qword_1E99EFEE8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1ACE754C8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1E99F2BF8);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_1ACE75498();
  os_log_type_t v4 = sub_1ACE76BC8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v10 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_1ACA798F8();
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1ACE76998();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    sub_1ACA3189C(v7, v9, &v10);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v3, v4, "[StateCache] Removed in-flight requests for adamIDs: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v6, -1, -1);
    MEMORY[0x1AD11B340](v5, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

Swift::Void __swiftcall InMemoryStateRepository.register(remoteEpisodeStates:)(Swift::OpaquePointer remoteEpisodeStates)
{
  uint64_t v2 = sub_1ACDE971C((uint64_t)remoteEpisodeStates._rawValue);
  sub_1ACDE7644(v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_1ACDE9B74((uint64_t)remoteEpisodeStates._rawValue);
  sub_1ACDE78A0(v3);
  swift_bridgeObjectRelease();
}

uint64_t InMemoryStateRepository.publisher(for:)@<X0>(unsigned char *a1@<X0>, void *a2@<X8>)
{
  if (*a1)
  {
    if (*a1 == 1) {
      uint64_t v4 = v2[3];
    }
    else {
      uint64_t v4 = v2[2];
    }
  }
  else
  {
    uint64_t v4 = v2[4];
  }
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0FF8);
  a2[4] = sub_1ACBAADE8();
  *a2 = *(void *)(v4 + 32);
  return swift_retain();
}

Swift::Void __swiftcall InMemoryStateRepository.overrideAllLibraryState(with:isInitialFetch:)(PodcastsFoundation::LibrarySnapshot with, Swift::Bool isInitialFetch)
{
  char rawValue = (char)with.followedShows._rawValue;
  uint64_t v3 = *((void *)with.savedEpisodesAdamIds._rawValue + 1);
  uint64_t v30 = *(void *)with.savedEpisodesAdamIds._rawValue;
  int64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1ACC834D4(0, v4, 0);
    uint64_t v5 = v31;
    unint64_t v6 = *(void *)(v31 + 16);
    uint64_t v7 = 48 * v6 + 32;
    uint64_t v8 = 32;
    long long v9 = xmmword_1ACEA3AF0;
    do
    {
      uint64_t v10 = *(void *)(v3 + v8);
      uint64_t v31 = v5;
      unint64_t v11 = *(void *)(v5 + 24);
      unint64_t v12 = v6 + 1;
      if (v6 >= v11 >> 1)
      {
        long long v28 = v9;
        sub_1ACC834D4(v11 > 1, v6 + 1, 1);
        long long v9 = v28;
        uint64_t v5 = v31;
      }
      *(void *)(v5 + 16) = v12;
      uint64_t v13 = v5 + v7;
      *(void *)uint64_t v13 = v10;
      *(_OWORD *)(v13 + 8) = v9;
      *(void *)(v13 + 32) = 0;
      *(void *)(v13 + 40) = 0;
      v7 += 48;
      v8 += 40;
      unint64_t v6 = v12;
      *(void *)(v13 + 24) = 0xE700000000000000;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v5 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8C8);
    uint64_t v14 = sub_1ACE77558();
  }
  else
  {
    uint64_t v14 = MEMORY[0x1E4FBC868];
  }
  uint64_t v31 = v14;
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_1ACDEC9D4(v15, 1, &v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v29 = rawValue;
  sub_1ACDE92B4(v31, rawValue & 1);
  swift_release();
  int64_t v16 = *(void *)(v30 + 16);
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if (v16)
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1ACC834B4(0, v16, 0);
    uint64_t v18 = v30;
    uint64_t v19 = 0;
    uint64_t v17 = v31;
    uint64_t v20 = *(void *)(v31 + 16);
    uint64_t v21 = 16 * v20;
    do
    {
      uint64_t v22 = *(void *)(v18 + 8 * v19 + 32);
      uint64_t v31 = v17;
      unint64_t v23 = *(void *)(v17 + 24);
      uint64_t v24 = v20 + v19 + 1;
      if (v20 + v19 >= v23 >> 1)
      {
        sub_1ACC834B4(v23 > 1, v20 + v19 + 1, 1);
        uint64_t v18 = v30;
        uint64_t v17 = v31;
      }
      ++v19;
      *(void *)(v17 + 16) = v24;
      uint64_t v25 = v17 + v21;
      *(void *)(v25 + 32) = v22;
      *(unsigned char *)(v25 + 40) = 1;
      v21 += 16;
    }
    while (v16 != v19);
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v17 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2368);
    uint64_t v26 = sub_1ACE77558();
  }
  else
  {
    uint64_t v26 = MEMORY[0x1E4FBC868];
  }
  uint64_t v31 = v26;
  uint64_t v27 = swift_bridgeObjectRetain();
  sub_1ACDECC0C(v27, 1, &v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACDE9354(v31, v29 & 1);
  swift_release();
}

Swift::Void __swiftcall InMemoryStateRepository.register(remotePlayStates:)(Swift::OpaquePointer remotePlayStates)
{
}

Swift::Void __swiftcall InMemoryStateRepository.register(remoteBookmarkStates:)(Swift::OpaquePointer remoteBookmarkStates)
{
}

Swift::Void __swiftcall InMemoryStateRepository.register(remoteFollowStates:)(Swift::OpaquePointer remoteFollowStates)
{
}

uint64_t sub_1ACDEBFB4(uint64_t *a1)
{
  return sub_1ACDEB2F8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (void (*)(uint64_t *, uint64_t))sub_1ACDEB388);
}

uint64_t sub_1ACDEBFE4(uint64_t isStackAllocationSafe, uint64_t *a2)
{
  uint64_t v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = sub_1ACDEC15C((uint64_t)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4, a2);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    long long v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v8 = sub_1ACDEC15C((uint64_t)v9, v6, v4, a2);
    swift_release();
    MEMORY[0x1AD11B340](v9, -1, -1);
  }
  return v8;
}

uint64_t sub_1ACDEC15C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v24 = (unint64_t *)result;
  uint64_t v25 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v26 = (unint64_t)(v8 + 63) >> 6;
LABEL_6:
  while (v10)
  {
    unint64_t v12 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v13 = v12 | (v7 << 6);
LABEL_22:
    uint64_t v17 = *a4;
    if (*(void *)(*a4 + 16)
      && (uint64_t v18 = *(void *)(*(void *)(a3 + 48) + 8 * v13),
          sub_1ACE77B18(),
          sub_1ACE77B58(),
          uint64_t result = sub_1ACE77B78(),
          uint64_t v19 = -1 << *(unsigned char *)(v17 + 32),
          unint64_t v20 = result & ~v19,
          ((*(void *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) != 0))
    {
      uint64_t v21 = *(void *)(v17 + 48);
      if (*(void *)(v21 + 8 * v20) != v18)
      {
        uint64_t v22 = ~v19;
        while (1)
        {
          unint64_t v20 = (v20 + 1) & v22;
          if (((*(void *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
            goto LABEL_5;
          }
          if (*(void *)(v21 + 8 * v20) == v18) {
            goto LABEL_6;
          }
        }
      }
    }
    else
    {
LABEL_5:
      *(unint64_t *)((char *)v24 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v6++, 1)) {
        goto LABEL_31;
      }
    }
  }
  int64_t v14 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v14 >= v26) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v14);
    ++v7;
    if (!v15)
    {
      int64_t v7 = v14 + 1;
      if (v14 + 1 >= v26) {
        goto LABEL_29;
      }
      unint64_t v15 = *(void *)(v25 + 8 * v7);
      if (!v15)
      {
        int64_t v7 = v14 + 2;
        if (v14 + 2 >= v26) {
          goto LABEL_29;
        }
        unint64_t v15 = *(void *)(v25 + 8 * v7);
        if (!v15)
        {
          int64_t v16 = v14 + 3;
          if (v16 >= v26)
          {
LABEL_29:
            swift_retain();
            return sub_1ACB86970(v24, a2, v6, a3);
          }
          unint64_t v15 = *(void *)(v25 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              int64_t v7 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_32;
              }
              if (v7 >= v26) {
                goto LABEL_29;
              }
              unint64_t v15 = *(void *)(v25 + 8 * v7);
              ++v16;
              if (v15) {
                goto LABEL_21;
              }
            }
          }
          int64_t v7 = v16;
        }
      }
    }
LABEL_21:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v7 << 6);
    goto LABEL_22;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1ACDEC3B4(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v6 = result;
    uint64_t v7 = *(void *)(a5 + 56);
    uint64_t v8 = *(void *)(*(void *)(a5 + 48) + 8 * a2);
    uint64_t v9 = type metadata accessor for EpisodePlayState();
    sub_1ACDED06C(v7 + *(void *)(*(void *)(v9 - 8) + 72) * a2, v6, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
    return v8;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1ACDEC46C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, char *))
{
  uint64_t v21 = (unint64_t *)result;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v12) {
      return sub_1ACB49BCC(v21, a2, v6, a3);
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    ++v7;
    if (!v17)
    {
      int64_t v7 = v16 + 1;
      if (v16 + 1 >= v12) {
        return sub_1ACB49BCC(v21, a2, v6, a3);
      }
      unint64_t v17 = *(void *)(v8 + 8 * v7);
      if (!v17)
      {
        int64_t v7 = v16 + 2;
        if (v16 + 2 >= v12) {
          return sub_1ACB49BCC(v21, a2, v6, a3);
        }
        unint64_t v17 = *(void *)(v8 + 8 * v7);
        if (!v17) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v7 << 6);
LABEL_5:
    uint64_t v15 = *(void *)(*(void *)(a3 + 48) + 8 * v14);
    char v22 = *(unsigned char *)(*(void *)(a3 + 56) + v14);
    uint64_t result = a4(v15, &v22);
    if (result)
    {
      *(unint64_t *)((char *)v21 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
        return sub_1ACB49BCC(v21, a2, v6, a3);
      }
    }
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v12) {
    return sub_1ACB49BCC(v21, a2, v6, a3);
  }
  unint64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
    int64_t v7 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v7 >= v12) {
      return sub_1ACB49BCC(v21, a2, v6, a3);
    }
    unint64_t v17 = *(void *)(v8 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1ACDEC614(uint64_t result, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, void *))
{
  int64_t v26 = (unint64_t *)result;
  uint64_t v27 = 0;
  int64_t v4 = 0;
  uint64_t v7 = a3[8];
  char v5 = a3 + 8;
  uint64_t v6 = v7;
  uint64_t v8 = 1 << *((unsigned char *)v5 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v6;
  long long v28 = v5;
  int64_t v29 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      int64_t v33 = v4;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v20 >= v29) {
      return sub_1ACB49550(v26, a2, v27, (uint64_t)a3);
    }
    unint64_t v21 = v28[v20];
    int64_t v22 = v4 + 1;
    if (!v21)
    {
      int64_t v22 = v4 + 2;
      if (v4 + 2 >= v29) {
        return sub_1ACB49550(v26, a2, v27, (uint64_t)a3);
      }
      unint64_t v21 = v28[v22];
      if (!v21)
      {
        int64_t v22 = v4 + 3;
        if (v4 + 3 >= v29) {
          return sub_1ACB49550(v26, a2, v27, (uint64_t)a3);
        }
        unint64_t v21 = v28[v22];
        if (!v21) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v21 - 1) & v21;
    int64_t v33 = v22;
    unint64_t v12 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_5:
    uint64_t v13 = *(void *)(a3[6] + 8 * v12);
    unint64_t v14 = (uint64_t *)(a3[7] + 40 * v12);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    unint64_t v17 = v14[2];
    uint64_t v18 = v14[3];
    uint64_t v19 = v14[4];
    v32[0] = v16;
    v32[1] = v15;
    v32[2] = v17;
    v32[3] = v18;
    v32[4] = v19;
    sub_1ACA50D88(v16, v15, v17);
    LOBYTE(v13) = a4(v13, v32);
    uint64_t result = sub_1ACA50D9C(v16, v15, v17);
    int64_t v4 = v33;
    if (v13)
    {
      *(unint64_t *)((char *)v26 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v27++, 1))
      {
        __break(1u);
        return sub_1ACB49550(v26, a2, v27, (uint64_t)a3);
      }
    }
  }
  uint64_t v23 = v4 + 4;
  if (v4 + 4 >= v29) {
    return sub_1ACB49550(v26, a2, v27, (uint64_t)a3);
  }
  unint64_t v21 = v28[v23];
  if (v21)
  {
    int64_t v22 = v4 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v29) {
      return sub_1ACB49550(v26, a2, v27, (uint64_t)a3);
    }
    unint64_t v21 = v28[v22];
    ++v23;
    if (v21) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1ACDEC848(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = v4;
  uint64_t v9 = isStackAllocationSafe;
  v16[1] = *MEMORY[0x1E4F143B8];
  char v10 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v11 = (unint64_t)((1 << v10) + 63) >> 6;
  size_t v12 = 8 * v11;
  if ((v10 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v16 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v12);
    uint64_t v13 = a4((char *)v16 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v11, v9, a2, a3);
    if (v4) {
      swift_willThrow();
    }
    else {
      return v13;
    }
  }
  else
  {
    unint64_t v14 = (void *)swift_slowAlloc();
    bzero(v14, v12);
    uint64_t v6 = a4((char *)v14, v11, v9, a2, a3);
    MEMORY[0x1AD11B340](v14, -1, -1);
  }
  return v6;
}

uint64_t sub_1ACDEC9D4(uint64_t result, char a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    char v5 = (void *)(swift_bridgeObjectRetain() + 72);
    while (1)
    {
      char v40 = a2;
      unint64_t v38 = v5;
      uint64_t v39 = v3;
      uint64_t v14 = *(v5 - 4);
      uint64_t v15 = *(v5 - 3);
      unint64_t v16 = *(v5 - 2);
      uint64_t v18 = *(v5 - 1);
      uint64_t v17 = *v5;
      uint64_t v19 = (void *)*a3;
      uint64_t v41 = *(v5 - 5);
      uint64_t v20 = sub_1ACA65CC4(v41);
      uint64_t v22 = v19[2];
      BOOL v23 = (v21 & 1) == 0;
      uint64_t v24 = v22 + v23;
      if (__OFADD__(v22, v23)) {
        break;
      }
      unint64_t v25 = v20;
      char v26 = v21;
      uint64_t v27 = v19[3];
      uint64_t v35 = v14;
      uint64_t v36 = v15;
      unint64_t v37 = v16;
      sub_1ACA50D88(v14, v15, v16);
      if (v27 >= v24)
      {
        if ((v40 & 1) == 0) {
          sub_1ACD05D40();
        }
      }
      else
      {
        sub_1ACCFC5A0(v24, v40 & 1);
        uint64_t v28 = sub_1ACA65CC4(v41);
        if ((v26 & 1) != (v29 & 1)) {
          goto LABEL_18;
        }
        unint64_t v25 = v28;
      }
      uint64_t v30 = (void *)*a3;
      if (v26)
      {
        uint64_t v6 = 40 * v25;
        uint64_t v7 = (uint64_t *)(v30[7] + 40 * v25);
        uint64_t v9 = *v7;
        uint64_t v8 = v7[1];
        unint64_t v10 = v7[2];
        uint64_t v11 = v7[3];
        uint64_t v12 = v7[4];
        sub_1ACA50D88(*v7, v8, v10);
        sub_1ACA50D9C(v35, v36, v37);
        uint64_t v13 = (uint64_t *)(v30[7] + v6);
        sub_1ACA50D9C(*v13, v13[1], v13[2]);
        *uint64_t v13 = v9;
        v13[1] = v8;
        v13[2] = v10;
        v13[3] = v11;
        v13[4] = v12;
      }
      else
      {
        v30[(v25 >> 6) + 8] |= 1 << v25;
        *(void *)(v30[6] + 8 * v25) = v41;
        uint64_t v31 = (uint64_t *)(v30[7] + 40 * v25);
        uint64_t *v31 = v14;
        v31[1] = v15;
        v31[2] = v16;
        v31[3] = v18;
        v31[4] = v17;
        uint64_t v32 = v30[2];
        BOOL v33 = __OFADD__(v32, 1);
        uint64_t v34 = v32 + 1;
        if (v33) {
          goto LABEL_17;
        }
        v30[2] = v34;
      }
      char v5 = v38 + 6;
      a2 = 1;
      uint64_t v3 = v39 - 1;
      if (v39 == 1) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACDECC0C(uint64_t result, char a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v6 = result;
    uint64_t v7 = *(void *)(result + 32);
    char v8 = *(unsigned char *)(result + 40);
    uint64_t v9 = (void *)*a3;
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_1ACA65CC4(v7);
    uint64_t v12 = v9[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    char v15 = v10;
    if (v9[3] < v14)
    {
      sub_1ACD0450C(v14, a2 & 1);
      uint64_t v16 = sub_1ACA65CC4(v7);
      if ((v15 & 1) != (v17 & 1))
      {
LABEL_27:
        uint64_t result = sub_1ACE77A68();
        __break(1u);
        return result;
      }
      unint64_t v11 = v16;
      uint64_t v18 = (void *)*a3;
      if ((v15 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_9:
      *(unsigned char *)(v18[7] + v11) = *(unsigned char *)(v18[7] + v11);
      uint64_t v19 = v3 - 1;
      if (v3 == 1) {
        return swift_bridgeObjectRelease();
      }
LABEL_16:
      for (int64_t i = (unsigned char *)(v6 + 56); ; i += 16)
      {
        uint64_t v24 = *((void *)i - 1);
        char v25 = *i;
        char v26 = (void *)*a3;
        unint64_t v27 = sub_1ACA65CC4(v24);
        uint64_t v29 = v26[2];
        BOOL v30 = (v28 & 1) == 0;
        BOOL v21 = __OFADD__(v29, v30);
        uint64_t v31 = v29 + v30;
        if (v21) {
          break;
        }
        char v32 = v28;
        if (v26[3] < v31)
        {
          sub_1ACD0450C(v31, 1);
          unint64_t v27 = sub_1ACA65CC4(v24);
          if ((v32 & 1) != (v33 & 1)) {
            goto LABEL_27;
          }
        }
        uint64_t v34 = (void *)*a3;
        if (v32)
        {
          *(unsigned char *)(v34[7] + v27) = *(unsigned char *)(v34[7] + v27);
        }
        else
        {
          v34[(v27 >> 6) + 8] |= 1 << v27;
          *(void *)(v34[6] + 8 * v27) = v24;
          *(unsigned char *)(v34[7] + v27) = v25;
          uint64_t v35 = v34[2];
          BOOL v21 = __OFADD__(v35, 1);
          uint64_t v36 = v35 + 1;
          if (v21) {
            goto LABEL_26;
          }
          v34[2] = v36;
        }
        if (!--v19) {
          return swift_bridgeObjectRelease();
        }
      }
      goto LABEL_25;
    }
    if (a2)
    {
      uint64_t v18 = (void *)*a3;
      if (v10) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1ACD0A050();
      uint64_t v18 = (void *)*a3;
      if (v15) {
        goto LABEL_9;
      }
    }
LABEL_12:
    v18[(v11 >> 6) + 8] |= 1 << v11;
    *(void *)(v18[6] + 8 * v11) = v7;
    *(unsigned char *)(v18[7] + v11) = v8;
    uint64_t v20 = v18[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    void v18[2] = v22;
    uint64_t v19 = v3 - 1;
    if (v3 == 1) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_16;
  }
  return result;
}

uint64_t type metadata accessor for InMemoryStateRepository()
{
  return self;
}

uint64_t method lookup function for InMemoryStateRepository(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InMemoryStateRepository);
}

uint64_t dispatch thunk of InMemoryStateRepository.__allocating_init(inMemoryBookmarkStateStore:inMemoryPlayStateStore:inMemoryFollowStateStore:thinClientStateNetworking:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1ACDECE90@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACDECEE8(a1, (uint64_t (*)(uint64_t, void))sub_1ACDE8D98, a2);
}

uint64_t sub_1ACDECEBC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACDECEE8(a1, (uint64_t (*)(uint64_t, void))sub_1ACDE93F4, a2);
}

uint64_t sub_1ACDECEE8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(a1, *(void *)(v3 + 16));
  if (!v4) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1ACDECF20(uint64_t a1, char *a2)
{
  return sub_1ACDE95EC(a1, *a2, *(uint64_t **)(v2 + 16));
}

uint64_t sub_1ACDECF2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACDECEE8(a1, (uint64_t (*)(uint64_t, void))sub_1ACDE94F0, a2);
}

BOOL sub_1ACDECF58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(uint64_t **)(v2 + 16);
  sub_1ACA8F4F4(a2, (uint64_t)v6);
  return sub_1ACDE963C(a1, (uint64_t)v6, v4);
}

uint64_t sub_1ACDECFA8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACDECFDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACDECEE8(a1, (uint64_t (*)(uint64_t, void))sub_1ACDE802C, a2);
}

uint64_t sub_1ACDED008(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodePlayState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACDED06C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACDED0D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACDED13C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1ACDED19C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACDECEE8(a1, (uint64_t (*)(uint64_t, void))sub_1ACDE8A88, a2);
}

uint64_t sub_1ACDED1C8()
{
  return sub_1ACC41530(*(void *)(v0 + 16));
}

uint64_t sub_1ACDED1FC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACDEB8B8(a1, a2);
}

id MTPodcast.artwork.getter()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_artworkTemplateURL);
  if (v2 || (result = objc_msgSend(v0, sel_imageURL), (id v2 = result) != 0))
  {
    uint64_t v40 = sub_1ACE761B8();
    uint64_t v41 = v4;

    id v5 = objc_msgSend(v0, sel_artworkPrimaryColor);
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v39 = sub_1ACE761B8();
      uint64_t v8 = v7;
    }
    else
    {
      uint64_t v39 = 0;
      uint64_t v8 = 0;
    }
    id v9 = objc_msgSend(v0, sel_artworkTextPrimaryColor);
    if (v9)
    {
      char v10 = v9;
      uint64_t v11 = sub_1ACE761B8();
      uint64_t v13 = v12;
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v13 = 0;
    }
    id v14 = objc_msgSend(v0, sel_artworkTextSecondaryColor);
    if (v14)
    {
      char v15 = v14;
      uint64_t v16 = sub_1ACE761B8();
      uint64_t v18 = v17;
    }
    else
    {
      uint64_t v16 = 0;
      uint64_t v18 = 0;
    }
    id v19 = objc_msgSend(v0, sel_artworkTextTertiaryColor);
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v21 = sub_1ACE761B8();
      uint64_t v23 = v22;
    }
    else
    {
      uint64_t v21 = 0;
      uint64_t v23 = 0;
    }
    id v24 = objc_msgSend(v1, sel_artworkTextQuaternaryColor);
    if (v24)
    {
      char v25 = v24;
      uint64_t v26 = sub_1ACE761B8();
      uint64_t v28 = v27;
    }
    else
    {
      uint64_t v26 = 0;
      uint64_t v28 = 0;
    }
    uint64_t v29 = (objc_class *)type metadata accessor for PlayerArtwork();
    BOOL v30 = (char *)objc_allocWithZone(v29);
    uint64_t v31 = (uint64_t *)&v30[OBJC_IVAR___IMPlayerArtwork_template];
    uint64_t *v31 = v40;
    v31[1] = v41;
    char v32 = &v30[OBJC_IVAR___IMPlayerArtwork_width];
    *(void *)char v32 = 0;
    v32[8] = 1;
    char v33 = &v30[OBJC_IVAR___IMPlayerArtwork_height];
    *(void *)char v33 = 0;
    v33[8] = 1;
    uint64_t v34 = (uint64_t *)&v30[OBJC_IVAR___IMPlayerArtwork_backgroundColor];
    *uint64_t v34 = v39;
    v34[1] = v8;
    uint64_t v35 = (uint64_t *)&v30[OBJC_IVAR___IMPlayerArtwork_primaryTextColor];
    *uint64_t v35 = v11;
    v35[1] = v13;
    uint64_t v36 = (uint64_t *)&v30[OBJC_IVAR___IMPlayerArtwork_secondaryTextColor];
    *uint64_t v36 = v16;
    v36[1] = v18;
    unint64_t v37 = (uint64_t *)&v30[OBJC_IVAR___IMPlayerArtwork_tertiaryTextColor];
    *unint64_t v37 = v21;
    v37[1] = v23;
    unint64_t v38 = (uint64_t *)&v30[OBJC_IVAR___IMPlayerArtwork_quaternaryTextColor];
    *unint64_t v38 = v26;
    v38[1] = v28;
    v42.receiver = v30;
    v42.super_class = v29;
    return objc_msgSendSuper2(&v42, sel_init);
  }
  return result;
}

id MTPodcast.uberArtwork.getter()
{
  uint64_t v1 = v0;
  id result = objc_msgSend(v0, sel_uberBackgroundImageURL);
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = sub_1ACE761B8();
    uint64_t v41 = v5;
    uint64_t v42 = v4;

    id v6 = objc_msgSend(v0, sel_uberBackgroundJoeColor);
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v40 = sub_1ACE761B8();
      uint64_t v9 = v8;
    }
    else
    {
      uint64_t v40 = 0;
      uint64_t v9 = 0;
    }
    id v10 = objc_msgSend(v0, sel_uberArtworkTextPrimaryColor);
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = sub_1ACE761B8();
      uint64_t v14 = v13;
    }
    else
    {
      uint64_t v12 = 0;
      uint64_t v14 = 0;
    }
    id v15 = objc_msgSend(v0, sel_uberArtworkTextSecondaryColor);
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = sub_1ACE761B8();
      uint64_t v19 = v18;
    }
    else
    {
      uint64_t v17 = 0;
      uint64_t v19 = 0;
    }
    id v20 = objc_msgSend(v0, sel_uberArtworkTextTertiaryColor);
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = sub_1ACE761B8();
      uint64_t v24 = v23;
    }
    else
    {
      uint64_t v22 = 0;
      uint64_t v24 = 0;
    }
    id v25 = objc_msgSend(v1, sel_uberArtworkTextQuaternaryColor);
    if (v25)
    {
      uint64_t v26 = v25;
      uint64_t v27 = sub_1ACE761B8();
      uint64_t v29 = v28;
    }
    else
    {
      uint64_t v27 = 0;
      uint64_t v29 = 0;
    }
    BOOL v30 = (objc_class *)type metadata accessor for PlayerArtwork();
    uint64_t v31 = (char *)objc_allocWithZone(v30);
    char v32 = &v31[OBJC_IVAR___IMPlayerArtwork_template];
    *(void *)char v32 = v42;
    *((void *)v32 + 1) = v41;
    char v33 = &v31[OBJC_IVAR___IMPlayerArtwork_width];
    *(void *)char v33 = 0;
    v33[8] = 1;
    uint64_t v34 = &v31[OBJC_IVAR___IMPlayerArtwork_height];
    *(void *)uint64_t v34 = 0;
    v34[8] = 1;
    uint64_t v35 = (uint64_t *)&v31[OBJC_IVAR___IMPlayerArtwork_backgroundColor];
    *uint64_t v35 = v40;
    v35[1] = v9;
    uint64_t v36 = (uint64_t *)&v31[OBJC_IVAR___IMPlayerArtwork_primaryTextColor];
    *uint64_t v36 = v12;
    v36[1] = v14;
    unint64_t v37 = (uint64_t *)&v31[OBJC_IVAR___IMPlayerArtwork_secondaryTextColor];
    *unint64_t v37 = v17;
    v37[1] = v19;
    unint64_t v38 = (uint64_t *)&v31[OBJC_IVAR___IMPlayerArtwork_tertiaryTextColor];
    *unint64_t v38 = v22;
    v38[1] = v24;
    uint64_t v39 = (uint64_t *)&v31[OBJC_IVAR___IMPlayerArtwork_quaternaryTextColor];
    *uint64_t v39 = v27;
    v39[1] = v29;
    v43.receiver = v31;
    v43.super_class = v30;
    return objc_msgSendSuper2(&v43, sel_init);
  }
  return result;
}

id MTEpisode.artwork.getter()
{
  uint64_t v1 = v0;
  id result = objc_msgSend(v0, sel_artworkTemplateURL);
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = sub_1ACE761B8();
    uint64_t v44 = v5;
    uint64_t v45 = v4;

    id v6 = objc_msgSend(v0, sel_artworkBackgroundColor);
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = sub_1ACE761B8();
      uint64_t v40 = v9;
      uint64_t v42 = v8;
    }
    else
    {
      uint64_t v40 = 0;
      uint64_t v42 = 0;
    }
    id v10 = objc_msgSend(v0, sel_artworkTextPrimaryColor, v40, v42);
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = sub_1ACE761B8();
      uint64_t v14 = v13;
    }
    else
    {
      uint64_t v12 = 0;
      uint64_t v14 = 0;
    }
    id v15 = objc_msgSend(v0, sel_artworkTextSecondaryColor);
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = sub_1ACE761B8();
      uint64_t v19 = v18;
    }
    else
    {
      uint64_t v17 = 0;
      uint64_t v19 = 0;
    }
    id v20 = objc_msgSend(v0, sel_artworkTextTertiaryColor);
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = sub_1ACE761B8();
      uint64_t v24 = v23;
    }
    else
    {
      uint64_t v22 = 0;
      uint64_t v24 = 0;
    }
    id v25 = objc_msgSend(v1, sel_artworkTextQuaternaryColor);
    if (v25)
    {
      uint64_t v26 = v25;
      uint64_t v27 = sub_1ACE761B8();
      uint64_t v29 = v28;
    }
    else
    {
      uint64_t v27 = 0;
      uint64_t v29 = 0;
    }
    BOOL v30 = (objc_class *)type metadata accessor for PlayerArtwork();
    uint64_t v31 = (char *)objc_allocWithZone(v30);
    char v32 = &v31[OBJC_IVAR___IMPlayerArtwork_template];
    *(void *)char v32 = v45;
    *((void *)v32 + 1) = v44;
    char v33 = &v31[OBJC_IVAR___IMPlayerArtwork_width];
    *(void *)char v33 = 0x4082C00000000000;
    v33[8] = 0;
    uint64_t v34 = &v31[OBJC_IVAR___IMPlayerArtwork_height];
    *(void *)uint64_t v34 = 0x4082C00000000000;
    v34[8] = 0;
    uint64_t v35 = &v31[OBJC_IVAR___IMPlayerArtwork_backgroundColor];
    *(void *)uint64_t v35 = v43;
    *((void *)v35 + 1) = v41;
    uint64_t v36 = (uint64_t *)&v31[OBJC_IVAR___IMPlayerArtwork_primaryTextColor];
    *uint64_t v36 = v12;
    v36[1] = v14;
    unint64_t v37 = (uint64_t *)&v31[OBJC_IVAR___IMPlayerArtwork_secondaryTextColor];
    *unint64_t v37 = v17;
    v37[1] = v19;
    unint64_t v38 = (uint64_t *)&v31[OBJC_IVAR___IMPlayerArtwork_tertiaryTextColor];
    *unint64_t v38 = v22;
    v38[1] = v24;
    uint64_t v39 = (uint64_t *)&v31[OBJC_IVAR___IMPlayerArtwork_quaternaryTextColor];
    *uint64_t v39 = v27;
    v39[1] = v29;
    v46.receiver = v31;
    v46.super_class = v30;
    return objc_msgSendSuper2(&v46, sel_init);
  }
  return result;
}

id PlayerArtwork.__allocating_init(from:)(uint64_t a1)
{
  id v1 = sub_1ACDEE8BC(a1);
  swift_release();
  return v1;
}

uint64_t PlayerArtwork.template.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___IMPlayerArtwork_template);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlayerArtwork.width.getter()
{
  return *(void *)(v0 + OBJC_IVAR___IMPlayerArtwork_width);
}

uint64_t PlayerArtwork.height.getter()
{
  return *(void *)(v0 + OBJC_IVAR___IMPlayerArtwork_height);
}

uint64_t PlayerArtwork.backgroundColor.getter()
{
  return sub_1ACBFE3C8(&OBJC_IVAR___IMPlayerArtwork_backgroundColor);
}

uint64_t PlayerArtwork.primaryTextColor.getter()
{
  return sub_1ACBFE3C8(&OBJC_IVAR___IMPlayerArtwork_primaryTextColor);
}

uint64_t PlayerArtwork.secondaryTextColor.getter()
{
  return sub_1ACBFE3C8(&OBJC_IVAR___IMPlayerArtwork_secondaryTextColor);
}

uint64_t PlayerArtwork.tertiaryTextColor.getter()
{
  return sub_1ACBFE3C8(&OBJC_IVAR___IMPlayerArtwork_tertiaryTextColor);
}

uint64_t PlayerArtwork.quaternaryTextColor.getter()
{
  return sub_1ACBFE3C8(&OBJC_IVAR___IMPlayerArtwork_quaternaryTextColor);
}

id PlayerArtwork.__allocating_init(template:width:height:backgroundColor:primaryTextColor:secondaryTextColor:tertiaryTextColor:quaternaryTextColor:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v23 = (char *)objc_allocWithZone(v16);
  uint64_t v24 = &v23[OBJC_IVAR___IMPlayerArtwork_template];
  *(void *)uint64_t v24 = a1;
  *((void *)v24 + 1) = a2;
  id v25 = &v23[OBJC_IVAR___IMPlayerArtwork_width];
  *(void *)id v25 = a3;
  v25[8] = a4 & 1;
  uint64_t v26 = &v23[OBJC_IVAR___IMPlayerArtwork_height];
  *(void *)uint64_t v26 = a5;
  v26[8] = a6 & 1;
  uint64_t v27 = &v23[OBJC_IVAR___IMPlayerArtwork_backgroundColor];
  *(void *)uint64_t v27 = a7;
  *((void *)v27 + 1) = a8;
  uint64_t v28 = &v23[OBJC_IVAR___IMPlayerArtwork_primaryTextColor];
  *(void *)uint64_t v28 = a9;
  *((void *)v28 + 1) = a10;
  uint64_t v29 = &v23[OBJC_IVAR___IMPlayerArtwork_secondaryTextColor];
  *(void *)uint64_t v29 = a11;
  *((void *)v29 + 1) = a12;
  BOOL v30 = &v23[OBJC_IVAR___IMPlayerArtwork_tertiaryTextColor];
  *(void *)BOOL v30 = a13;
  *((void *)v30 + 1) = a14;
  uint64_t v31 = &v23[OBJC_IVAR___IMPlayerArtwork_quaternaryTextColor];
  *(void *)uint64_t v31 = a15;
  *((void *)v31 + 1) = a16;
  v35.receiver = v23;
  v35.super_class = v16;
  return objc_msgSendSuper2(&v35, sel_init);
}

uint64_t type metadata accessor for PlayerArtwork()
{
  return self;
}

id PlayerArtwork.init(template:width:height:backgroundColor:primaryTextColor:secondaryTextColor:tertiaryTextColor:quaternaryTextColor:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v17 = &v16[OBJC_IVAR___IMPlayerArtwork_template];
  *(void *)uint64_t v17 = a1;
  *((void *)v17 + 1) = a2;
  uint64_t v18 = &v16[OBJC_IVAR___IMPlayerArtwork_width];
  *(void *)uint64_t v18 = a3;
  v18[8] = a4 & 1;
  uint64_t v19 = &v16[OBJC_IVAR___IMPlayerArtwork_height];
  *(void *)uint64_t v19 = a5;
  v19[8] = a6 & 1;
  id v20 = &v16[OBJC_IVAR___IMPlayerArtwork_backgroundColor];
  *(void *)id v20 = a7;
  *((void *)v20 + 1) = a8;
  uint64_t v21 = &v16[OBJC_IVAR___IMPlayerArtwork_primaryTextColor];
  *(void *)uint64_t v21 = a9;
  *((void *)v21 + 1) = a10;
  uint64_t v22 = &v16[OBJC_IVAR___IMPlayerArtwork_secondaryTextColor];
  *(void *)uint64_t v22 = a11;
  *((void *)v22 + 1) = a12;
  uint64_t v23 = &v16[OBJC_IVAR___IMPlayerArtwork_tertiaryTextColor];
  *(void *)uint64_t v23 = a13;
  *((void *)v23 + 1) = a14;
  uint64_t v24 = &v16[OBJC_IVAR___IMPlayerArtwork_quaternaryTextColor];
  *(void *)uint64_t v24 = a15;
  *((void *)v24 + 1) = a16;
  v26.receiver = v16;
  v26.super_class = (Class)type metadata accessor for PlayerArtwork();
  return objc_msgSendSuper2(&v26, sel_init);
}

uint64_t sub_1ACDEDC70()
{
  sub_1ACE74928();
  swift_allocObject();
  sub_1ACE74918();
  type metadata accessor for PlayerArtwork();
  sub_1ACDEEA54();
  uint64_t v0 = sub_1ACE74908();
  swift_release();
  return v0;
}

id PlayerArtwork.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void PlayerArtwork.init()()
{
}

unint64_t sub_1ACDEDDB0(char a1)
{
  unint64_t result = 0x6574616C706D6574;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6874646977;
      break;
    case 2:
      unint64_t result = 0x746867696568;
      break;
    case 3:
      unint64_t result = 0x756F72676B636162;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACDEDEC4()
{
  return sub_1ACDEDDB0(*v0);
}

uint64_t sub_1ACDEDECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACDEEE18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACDEDEF4(uint64_t a1)
{
  unint64_t v2 = sub_1ACDEEAA8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACDEDF30(uint64_t a1)
{
  unint64_t v2 = sub_1ACDEEAA8();
  return MEMORY[0x1F41862B0](a1, v2);
}

id PlayerArtwork.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlayerArtwork();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACDEE044(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EC20);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACDEEAA8();
  sub_1ACE77C78();
  v8[15] = 0;
  sub_1ACE77748();
  if (!v1)
  {
    v8[14] = 1;
    sub_1ACE77708();
    v8[13] = 2;
    sub_1ACE77708();
    v8[12] = 3;
    sub_1ACE776E8();
    v8[11] = 4;
    sub_1ACE776E8();
    v8[10] = 5;
    sub_1ACE776E8();
    v8[9] = 6;
    sub_1ACE776E8();
    v8[8] = 7;
    sub_1ACE776E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t PlayerArtwork.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return PlayerArtwork.init(from:)(a1);
}

unint64_t PlayerArtwork.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EC18);
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  MEMORY[0x1F4188790](v4);
  id v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  uint64_t v42 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v7);
  unint64_t v8 = sub_1ACDEEAA8();
  uint64_t v9 = v1;
  id v10 = v6;
  sub_1ACE77C48();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);

    type metadata accessor for PlayerArtwork();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v12 = v40;
    uint64_t v11 = v41;
    char v44 = 0;
    uint64_t v13 = sub_1ACE77658();
    id v15 = (uint64_t *)&v9[OBJC_IVAR___IMPlayerArtwork_template];
    *id v15 = v13;
    v15[1] = v16;
    char v44 = 1;
    uint64_t v17 = sub_1ACE77618();
    uint64_t v18 = &v9[OBJC_IVAR___IMPlayerArtwork_width];
    *(void *)uint64_t v18 = v17;
    v18[8] = v19 & 1;
    char v44 = 2;
    uint64_t v20 = sub_1ACE77618();
    uint64_t v21 = &v9[OBJC_IVAR___IMPlayerArtwork_height];
    *(void *)uint64_t v21 = v20;
    v21[8] = v22 & 1;
    char v44 = 3;
    uint64_t v23 = sub_1ACE775F8();
    uint64_t v24 = (uint64_t *)&v9[OBJC_IVAR___IMPlayerArtwork_backgroundColor];
    *uint64_t v24 = v23;
    v24[1] = v25;
    char v44 = 4;
    uint64_t v26 = sub_1ACE775F8();
    uint64_t v27 = (uint64_t *)&v9[OBJC_IVAR___IMPlayerArtwork_primaryTextColor];
    uint64_t *v27 = v26;
    v27[1] = v28;
    char v44 = 5;
    uint64_t v29 = sub_1ACE775F8();
    BOOL v30 = (uint64_t *)&v9[OBJC_IVAR___IMPlayerArtwork_secondaryTextColor];
    *BOOL v30 = v29;
    v30[1] = v31;
    char v44 = 6;
    uint64_t v32 = sub_1ACE775F8();
    char v33 = (uint64_t *)&v9[OBJC_IVAR___IMPlayerArtwork_tertiaryTextColor];
    *char v33 = v32;
    v33[1] = v34;
    char v44 = 7;
    uint64_t v35 = sub_1ACE775F8();
    uint64_t v36 = (uint64_t *)&v9[OBJC_IVAR___IMPlayerArtwork_quaternaryTextColor];
    *uint64_t v36 = v35;
    v36[1] = v37;

    unint64_t v38 = (objc_class *)type metadata accessor for PlayerArtwork();
    v43.receiver = v9;
    v43.super_class = v38;
    unint64_t v8 = (unint64_t)objc_msgSendSuper2(&v43, sel_init);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  }
  return v8;
}

unint64_t sub_1ACDEE7F0@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for PlayerArtwork());
  unint64_t result = PlayerArtwork.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1ACDEE844(void *a1)
{
  return sub_1ACDEE044(a1);
}

unint64_t static ArtworkInfoConstants.showArtwork.getter()
{
  return 0xD000000000000019;
}

unint64_t static ArtworkInfoConstants.uberArtwork.getter()
{
  return 0xD000000000000019;
}

unint64_t static ArtworkInfoConstants.episodeArtwork.getter()
{
  return 0xD00000000000001CLL;
}

id sub_1ACDEE8BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 56);
  if (!v1) {
    return 0;
  }
  char v2 = *(unsigned char *)(a1 + 24);
  double v3 = 0.0;
  double v4 = 0.0;
  if ((v2 & 1) == 0) {
    double v4 = (double)*(uint64_t *)(a1 + 16);
  }
  uint64_t v5 = *(void *)(a1 + 48);
  char v6 = *(unsigned char *)(a1 + 40);
  if ((v6 & 1) == 0) {
    double v3 = (double)*(uint64_t *)(a1 + 32);
  }
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 88);
  uint64_t v10 = *(void *)(a1 + 104);
  uint64_t v23 = *(void *)(a1 + 80);
  uint64_t v24 = *(void *)(a1 + 96);
  uint64_t v11 = *(void *)(a1 + 120);
  uint64_t v27 = *(void *)(a1 + 128);
  uint64_t v25 = *(void *)(a1 + 112);
  uint64_t v26 = *(void *)(a1 + 136);
  uint64_t v12 = (objc_class *)type metadata accessor for PlayerArtwork();
  uint64_t v13 = (char *)objc_allocWithZone(v12);
  uint64_t v14 = &v13[OBJC_IVAR___IMPlayerArtwork_template];
  *(void *)uint64_t v14 = v5;
  *((void *)v14 + 1) = v1;
  id v15 = (double *)&v13[OBJC_IVAR___IMPlayerArtwork_width];
  *id v15 = v4;
  *((unsigned char *)v15 + 8) = v2;
  uint64_t v16 = (double *)&v13[OBJC_IVAR___IMPlayerArtwork_height];
  double *v16 = v3;
  *((unsigned char *)v16 + 8) = v6;
  uint64_t v17 = &v13[OBJC_IVAR___IMPlayerArtwork_backgroundColor];
  *(void *)uint64_t v17 = v7;
  *((void *)v17 + 1) = v8;
  uint64_t v18 = &v13[OBJC_IVAR___IMPlayerArtwork_primaryTextColor];
  *(void *)uint64_t v18 = v23;
  *((void *)v18 + 1) = v9;
  char v19 = &v13[OBJC_IVAR___IMPlayerArtwork_secondaryTextColor];
  *(void *)char v19 = v24;
  *((void *)v19 + 1) = v10;
  uint64_t v20 = &v13[OBJC_IVAR___IMPlayerArtwork_tertiaryTextColor];
  *(void *)uint64_t v20 = v25;
  *((void *)v20 + 1) = v11;
  uint64_t v21 = &v13[OBJC_IVAR___IMPlayerArtwork_quaternaryTextColor];
  *(void *)uint64_t v21 = v27;
  *((void *)v21 + 1) = v26;
  v28.receiver = v13;
  v28.super_class = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v28, sel_init);
}

unint64_t sub_1ACDEEA54()
{
  unint64_t result = qword_1EB76EAD8[0];
  if (!qword_1EB76EAD8[0])
  {
    type metadata accessor for PlayerArtwork();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB76EAD8);
  }
  return result;
}

unint64_t sub_1ACDEEAA8()
{
  unint64_t result = qword_1EB76EAC0;
  if (!qword_1EB76EAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76EAC0);
  }
  return result;
}

uint64_t method lookup function for PlayerArtwork(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PlayerArtwork);
}

uint64_t dispatch thunk of PlayerArtwork.__allocating_init(template:width:height:backgroundColor:primaryTextColor:secondaryTextColor:tertiaryTextColor:quaternaryTextColor:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, void))(v6 + 144))(a1, a2, a3, a4 & 1, a5, a6 & 1);
}

uint64_t dispatch thunk of PlayerArtwork.asData()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of PlayerArtwork.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of PlayerArtwork.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

ValueMetadata *type metadata accessor for ArtworkInfoConstants()
{
  return &type metadata for ArtworkInfoConstants;
}

unsigned char *storeEnumTagSinglePayload for PlayerArtwork.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACDEECD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayerArtwork.CodingKeys()
{
  return &type metadata for PlayerArtwork.CodingKeys;
}

unint64_t sub_1ACDEED14()
{
  unint64_t result = qword_1E99F5F28;
  if (!qword_1E99F5F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5F28);
  }
  return result;
}

unint64_t sub_1ACDEED6C()
{
  unint64_t result = qword_1EB76EAD0;
  if (!qword_1EB76EAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76EAD0);
  }
  return result;
}

unint64_t sub_1ACDEEDC4()
{
  unint64_t result = qword_1EB76EAC8;
  if (!qword_1EB76EAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76EAC8);
  }
  return result;
}

uint64_t sub_1ACDEEE18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574616C706D6574 && a2 == 0xE800000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874646977 && a2 == 0xE500000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ACED2FD0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ACED2FF0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001ACED3010 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001ACED3030)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

id PodcastDonationModel.contentID.getter()
{
  id v1 = *(id *)v0;
  sub_1ACA50CB8(*(id *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
  return v1;
}

uint64_t PodcastDonationModel.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastDonationModel.providerName.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastDonationModel.init(contentID:name:providerName:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(unsigned char *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(void *)(a8 + 40) = a6;
  *(void *)(a8 + 48) = a7;
  return result;
}

_WORD *sub_1ACDEF214()
{
  return PodcastDonationModel.itemInstance()();
}

_WORD *PodcastDonationModel.itemInstance()()
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  int v3 = *(void **)v0;
  BOOL v2 = *(void **)(v0 + 8);
  char v4 = *(unsigned char *)(v0 + 16);
  uint64_t v5 = *(_WORD **)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 48);
  id v9 = objc_allocWithZone(MEMORY[0x1E4F70B20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = sub_1ACDEF684((uint64_t)v5, v6, v7, v8);
  if (!v1)
  {
    uint64_t v11 = v10;
    objc_super v28 = v2;
    id v12 = objc_allocWithZone(MEMORY[0x1E4F70B08]);
    v29[0] = 0;
    id v13 = v11;
    id v14 = objc_msgSend(v12, sel_initWithEntity_entityType_error_, v13, 1, v29);
    if (v14)
    {
      id v15 = v14;
      id v16 = v29[0];

      v29[0] = v3;
      v29[1] = v28;
      char v30 = v4;
      uint64_t v31 = v5;
      uint64_t v32 = v6;
      uint64_t v33 = v7;
      uint64_t v34 = v8;
      sub_1ACDEF560();
      if (v17)
      {
        id v18 = objc_allocWithZone(MEMORY[0x1E4F70B10]);
        id v24 = sub_1ACC54538();
        id v25 = objc_allocWithZone(MEMORY[0x1E4F57F98]);
        v29[0] = 0;
        uint64_t v26 = objc_msgSend(v25, sel_initWithContent_metaContent_error_, v15, v24, v29);
        if (v26)
        {
          uint64_t v5 = v26;
          id v27 = v29[0];

          return v5;
        }
        uint64_t v5 = v29[0];
        sub_1ACE74D78();

        swift_willThrow();
        id v13 = v15;
        id v15 = v24;
      }
      else
      {
        if (qword_1EB76D4A0 != -1) {
          swift_once();
        }
        uint64_t v20 = sub_1ACE754C8();
        __swift_project_value_buffer(v20, (uint64_t)qword_1EB76D488);
        uint64_t v21 = sub_1ACE75498();
        os_log_type_t v22 = sub_1ACE76BF8();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v5 = (_WORD *)swift_slowAlloc();
          *uint64_t v5 = 0;
          MEMORY[0x1AD11B340](v5, -1, -1);
        }

        sub_1ACDEF958();
        swift_allocError();
        swift_willThrow();
      }
    }
    else
    {
      id v19 = v29[0];
      sub_1ACE74D78();

      swift_willThrow();
      id v15 = v13;
    }
  }
  return v5;
}

unint64_t sub_1ACDEF560()
{
  uint64_t v1 = *(void **)v0;
  if (*(unsigned char *)(v0 + 16))
  {
    if (*(unsigned char *)(v0 + 16) == 1) {
      return 0;
    }
    uint64_t v3 = *(void *)(v0 + 8);
    swift_bridgeObjectRetain();
    sub_1ACE77268();
    swift_bridgeObjectRelease();
    unint64_t v4 = 0xD000000000000022;
    sub_1ACE762C8();
    sub_1ACA50D28(v1, v3, 2);
  }
  else
  {
    sub_1ACE77268();
    swift_bridgeObjectRelease();
    unint64_t v4 = 0xD000000000000021;
    sub_1ACA55E4C();
    sub_1ACE770B8();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
  }
  return v4;
}

id sub_1ACDEF684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  if (a2)
  {
    uint64_t v6 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    if (a4)
    {
LABEL_3:
      uint64_t v7 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v6 = 0;
    if (a4) {
      goto LABEL_3;
    }
  }
  uint64_t v7 = 0;
LABEL_6:
  v12[0] = 0;
  id v8 = objc_msgSend(v4, sel_initWithName_author_error_, v6, v7, v12);

  if (v8)
  {
    id v9 = v12[0];
  }
  else
  {
    id v10 = v12[0];
    sub_1ACE74D78();

    swift_willThrow();
  }
  return v8;
}

BOOL _s18PodcastsFoundation20PodcastDonationModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void **)a2;
  int v8 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 48);
  if (!*(unsigned char *)(a1 + 16))
  {
    BOOL result = 0;
    if (*(unsigned char *)(a2 + 16)) {
      return result;
    }
    uint64_t v18 = *(void *)(a2 + 40);
    uint64_t v19 = v5;
    uint64_t v20 = v6;
    if (v2 != v7) {
      return result;
    }
    goto LABEL_13;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a2 + 8);
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    if (v8 != 1) {
      return 0;
    }
    uint64_t v18 = *(void *)(a2 + 40);
    uint64_t v19 = *(void *)(a1 + 40);
    uint64_t v20 = *(void *)(a1 + 48);
    sub_1ACAA3690();
    sub_1ACA50CB8(v2, v12, 1);
    sub_1ACA50CB8(v7, v13, 1);
    char v14 = sub_1ACE76F68();
    sub_1ACA50D28(v7, v13, 1);
    sub_1ACA50D28(v2, v12, 1);
    if ((v14 & 1) == 0) {
      return 0;
    }
LABEL_13:
    if (v3 == v9 && v4 == v10 || (char v17 = sub_1ACE77848(), result = 0, (v17 & 1) != 0))
    {
      if (v20) {
        return v11 && (v19 == v18 && v20 == v11 || (sub_1ACE77848() & 1) != 0);
      }
      return !v11;
    }
    return result;
  }
  if (v8 != 2) {
    return 0;
  }
  uint64_t v18 = *(void *)(a2 + 40);
  uint64_t v19 = *(void *)(a1 + 40);
  uint64_t v20 = *(void *)(a1 + 48);
  if (v2 == v7 && v12 == v13) {
    goto LABEL_13;
  }
  char v16 = sub_1ACE77848();
  BOOL result = 0;
  if (v16) {
    goto LABEL_13;
  }
  return result;
}

unint64_t sub_1ACDEF958()
{
  unint64_t result = qword_1E99F5F30[0];
  if (!qword_1E99F5F30[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E99F5F30);
  }
  return result;
}

uint64_t destroy for PodcastDonationModel(uint64_t a1)
{
  sub_1ACA50D28(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PodcastDonationModel(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1ACA50CB8(*(id *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PodcastDonationModel(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1ACA50CB8(*(id *)a2, v5, v6);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_1ACA50D28(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PodcastDonationModel(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_1ACA50D28(v5, v6, v7);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PodcastDonationModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PodcastDonationModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastDonationModel()
{
  return &type metadata for PodcastDonationModel;
}

uint64_t MetricsField.name.getter(uint64_t a1)
{
  return a1;
}

uint64_t static MetricsField.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_1ACE77848();
  }
}

uint64_t MetricsField.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t MetricsField.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACDEFD30(uint64_t *a1, uint64_t *a2)
{
  return static MetricsField.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1ACDEFD44()
{
  return MetricsField.hashValue.getter();
}

uint64_t sub_1ACDEFD4C()
{
  return MetricsField.hash(into:)();
}

uint64_t sub_1ACDEFD54()
{
  return sub_1ACE77B78();
}

uint64_t MetricsField.debugDescription.getter()
{
  sub_1ACE77268();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "MetricsField<");
  sub_1ACE77D48();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  return v1[0];
}

uint64_t sub_1ACDEFE74()
{
  return MetricsField.debugDescription.getter();
}

uint64_t MetricsField.description.getter(uint64_t a1)
{
  uint64_t v1 = nullsub_1(a1);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACDEFEBC()
{
  uint64_t v1 = nullsub_1(*v0);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static MetricsField<>.isFamily.getter()
{
  return 0x796C696D61467369;
}

uint64_t static MetricsField<>.isSignedIn.getter()
{
  return 0x64656E6769537369;
}

uint64_t static MetricsField<>.isStudent.getter()
{
  return 0x6E65647574537369;
}

uint64_t static MetricsField<>.isUber.getter()
{
  return 0x726562557369;
}

uint64_t static MetricsField<>.sharedContent.getter()
{
  return 0x6F43646572616873;
}

uint64_t static MetricsField<>.xpAccountsMatch.getter()
{
  return 0x6E756F6363417078;
}

uint64_t static MetricsField<>.eventTime.getter()
{
  return 0x6D6954746E657665;
}

uint64_t static MetricsField<>.pixelRatio.getter()
{
  return 0x7461526C65786970;
}

uint64_t static MetricsField<>.postTime.getter()
{
  return 0x656D695474736F70;
}

uint64_t static MetricsField<>.baseVersion.getter()
{
  return 0x7372655665736162;
}

uint64_t static MetricsField<>.capacityData.getter()
{
  return 0x7974696361706163;
}

unint64_t static MetricsField<>.capacityDataAvailable.getter()
{
  return 0xD000000000000015;
}

uint64_t static MetricsField<>.capacityDisk.getter()
{
  return 0x7974696361706163;
}

uint64_t static MetricsField<>.capacitySystem.getter()
{
  return 0x7974696361706163;
}

unint64_t static MetricsField<>.capacitySystemAvailable.getter()
{
  return 0xD000000000000017;
}

uint64_t static MetricsField<>.featuredContentKind.getter()
{
  return 0x646E694B6366;
}

uint64_t static MetricsField<>.impressionID.getter()
{
  return 0x6973736572706D69;
}

uint64_t static MetricsField<>.impressionIndex.getter()
{
  return 0x6973736572706D69;
}

unint64_t static MetricsField<>.impressionParentID.getter()
{
  return 0xD000000000000012;
}

uint64_t static MetricsField<>.language.getter()
{
  return 0x65676175676E616CLL;
}

unint64_t static MetricsField<>.locationPosition.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsField<>.navigation.getter()
{
  return 0x697461676976616ELL;
}

uint64_t static MetricsField<>.screenHeight.getter()
{
  return 0x65486E6565726373;
}

uint64_t static MetricsField<>.screenWidth.getter()
{
  return 0x69576E6565726373;
}

uint64_t static MetricsField<>.timezoneOffset.getter()
{
  return 0x656E6F7A656D6974;
}

uint64_t static MetricsField<>.xpPostFrequency.getter()
{
  return 0x724674736F507078;
}

unint64_t static MetricsField<>.xpUserIDLifespan.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsField<>.app.getter()
{
  return 7368801;
}

uint64_t static MetricsField<>.appVersion.getter()
{
  return 0x6973726556707061;
}

uint64_t static MetricsField<>.buildFlavor.getter()
{
  return 0x616C46646C697562;
}

uint64_t static MetricsField<>.buyParams.getter()
{
  return 0x6D61726150797562;
}

unint64_t static MetricsField<>.canaryIdentifier.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsField<>.childEventID.getter()
{
  return 0x657645646C696863;
}

uint64_t static MetricsField<>.clientID.getter()
{
  return 0x6449746E65696C63;
}

uint64_t static MetricsField<>.connection.getter()
{
  return 0x697463656E6E6F63;
}

uint64_t static MetricsField<>.deliveryVersion.getter()
{
  return 0x79726576696C6564;
}

uint64_t static MetricsField<>.eligibilityType.getter()
{
  return 0x6C69626967696C65;
}

unint64_t static MetricsField<>.entitlementBadge.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsField<>.hardwareFamily.getter()
{
  return 0x6572617764726168;
}

uint64_t static MetricsField<>.hardwareModel.getter()
{
  return 0x6572617764726168;
}

uint64_t static MetricsField<>.id.getter()
{
  return 25705;
}

uint64_t static MetricsField<>.name.getter()
{
  return 1701667182;
}

uint64_t static MetricsField<>.os.getter()
{
  return 29551;
}

uint64_t static MetricsField<>.osBuildNumber.getter()
{
  return 0x4E646C697542736FLL;
}

uint64_t static MetricsField<>.osVersion.getter()
{
  return 0x6F6973726556736FLL;
}

uint64_t static MetricsField<>.page.getter()
{
  return 1701273968;
}

uint64_t static MetricsField<>.referralApp.getter()
{
  return 0x707041666572;
}

uint64_t static MetricsField<>.resourceRevisionNumber.getter()
{
  return 0x656372756F736572;
}

uint64_t static MetricsField<>.searchPrefix.getter()
{
  return 0x7250686372616573;
}

uint64_t static MetricsField<>.searchTerm.getter()
{
  return 0x6554686372616573;
}

uint64_t static MetricsField<>.shelfCategoryID.getter()
{
  return 0x746143666C656873;
}

uint64_t static MetricsField<>.storefront.getter()
{
  return 0x6F724665726F7473;
}

unint64_t static MetricsField<>.storefrontHeader.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsField<>.term.getter()
{
  return 1836213620;
}

uint64_t static MetricsField<>.userAgent.getter()
{
  return 0x6E65674172657375;
}

uint64_t static MetricsField<>.userID.getter()
{
  return 0x644972657375;
}

uint64_t static MetricsField<>.xpSendMethod.getter()
{
  return 0x654D646E65537078;
}

unint64_t static MetricsField<>.xpClientIDSource.getter()
{
  return 0xD000000000000010;
}

unint64_t static MetricsField<>.xpUserIDSyncState.getter()
{
  return 0xD000000000000011;
}

uint64_t static MetricsField<>.actionURL.getter()
{
  return 0x72556E6F69746361;
}

uint64_t static MetricsField<>.externalReferralURL.getter()
{
  return 0x7255666552747865;
}

uint64_t static MetricsField<>.pageURL.getter()
{
  return 0x6C725565676170;
}

uint64_t static MetricsField<>.openURL.getter()
{
  return 0x6C72556E65706FLL;
}

uint64_t static MetricsField<>.impressionTimes.getter()
{
  return 0x6973736572706D69;
}

uint64_t static MetricsField<>.pageHistory.getter()
{
  return 0x7473694865676170;
}

uint64_t static MetricsField<>.impressions.getter()
{
  return 0x6973736572706D69;
}

uint64_t static MetricsField<>.location.getter()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t static MetricsField<>.viewedInfo.getter()
{
  return 0x6E49646577656976;
}

uint64_t static MetricsField<>.actionDetails.getter()
{
  return 0x65446E6F69746361;
}

uint64_t static MetricsField<>.searchFilters.getter()
{
  return 0x737265746C6966;
}

uint64_t static MetricsField<>.pageDetails.getter()
{
  return 0x6174654465676170;
}

uint64_t static MetricsField<>.actionContext.getter()
{
  return 0x6F436E6F69746361;
}

uint64_t static MetricsField<>.actionResult.getter()
{
  return 0x65526E6F69746361;
}

uint64_t static MetricsField<>.actionType.getter()
{
  return 0x79546E6F69746361;
}

uint64_t static MetricsField<>.kind.getter()
{
  return 1684957547;
}

unint64_t static MetricsField<>.engagementThresholdMet.getter()
{
  return 0xD000000000000016;
}

uint64_t static MetricsField<>.eventVersion.getter()
{
  return 0x726556746E657665;
}

uint64_t static MetricsField<>.idType.getter()
{
  return 0x657079546469;
}

unint64_t static MetricsField<>.impressionsQueue.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsField<>.offerType.getter()
{
  return 0x707954726566666FLL;
}

uint64_t static MetricsField<>.pageContext.getter()
{
  return 0x746E6F4365676170;
}

uint64_t static MetricsField<>.pageID.getter()
{
  return 0x644965676170;
}

uint64_t static MetricsField<>.pageType.getter()
{
  return 0x6570795465676170;
}

uint64_t static MetricsField<>.pageVariant.getter()
{
  return 0x6972615665676170;
}

unint64_t static MetricsField<>.searchHintsFilter.getter()
{
  return 0xD000000000000011;
}

uint64_t static MetricsField<>.targetID.getter()
{
  return 0x6449746567726174;
}

uint64_t static MetricsField<>.impressionType.getter()
{
  return 0x6973736572706D69;
}

uint64_t static MetricsField<>.locationType.getter()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t static MetricsField<>.targetType.getter()
{
  return 0x7954746567726174;
}

uint64_t static MetricsField<>.topic.getter()
{
  return 0x6369706F74;
}

uint64_t sub_1ACDF08EC()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for MetricsField()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t AppDependencyKey.rawValue.getter(char a1)
{
  if (!a1) {
    return 0xD00000000000002FLL;
  }
  if (a1 == 1) {
    return 0xD000000000000021;
  }
  return 0xD000000000000026;
}

uint64_t sub_1ACDF0980(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF64C4(*a1, *a2);
}

uint64_t sub_1ACDF098C()
{
  return sub_1ACAE5E2C();
}

uint64_t sub_1ACDF0994()
{
  return sub_1ACBD52DC();
}

uint64_t sub_1ACDF099C()
{
  return sub_1ACD235AC();
}

uint64_t sub_1ACDF09A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s18PodcastsFoundation16AppDependencyKeyO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_1ACDF09D4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = AppDependencyKey.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t _s18PodcastsFoundation16AppDependencyKeyO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_1ACDF0A50()
{
  unint64_t result = qword_1EB76A338;
  if (!qword_1EB76A338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A338);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppDependencyKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACDF0B70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppDependencyKey()
{
  return &type metadata for AppDependencyKey;
}

uint64_t StorageAnalyticsResponder.init(mediaSpaceCalculator:analyticsChannel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB772738);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = 0;
  *a3 = a1;
  a3[1] = a2;
  a3[2] = result;
  return result;
}

Swift::Void __swiftcall StorageAnalyticsResponder.beginObserving()()
{
  uint64_t v1 = *(void *)(v0 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1ACDF0DF4((uint64_t *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
}

uint64_t sub_1ACDF0C64(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770578);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *a1;
  if (*a1)
  {
    swift_release();
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770580);
    sub_1ACE75A68();
    swift_endAccess();
    *(void *)(swift_allocObject() + 16) = a3;
    sub_1ACDF128C();
    swift_unknownObjectRetain();
    uint64_t v10 = sub_1ACE75D58();
    swift_release();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a1 = v10;
  }
  return result;
}

uint64_t sub_1ACDF0DF4(uint64_t *a1)
{
  return sub_1ACDF0C64(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

Swift::Void __swiftcall StorageAnalyticsResponder.endObserving()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  unint64_t v2 = v1 + 4;
  int v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1ACDF0E78(v2);
  os_unfair_lock_unlock(v3);
}

void *sub_1ACDF0E78(void *result)
{
  uint64_t v1 = result;
  if (*result)
  {
    sub_1ACE75848();
    uint64_t result = (void *)swift_release();
  }
  *uint64_t v1 = 0;
  return result;
}

uint64_t destroy for StorageAnalyticsResponder()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_release();
}

void *_s18PodcastsFoundation25StorageAnalyticsResponderVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for StorageAnalyticsResponder(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for StorageAnalyticsResponder(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for StorageAnalyticsResponder()
{
  return &type metadata for StorageAnalyticsResponder;
}

void sub_1ACDF1030(void *a1, void *a2)
{
  unint64_t v3 = a1[2];
  unint64_t v4 = a1[3];
  unint64_t v5 = a1[4];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F3E90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84470;
  *(void *)(inited + 32) = 0xD000000000000012;
  *(void *)(inited + 40) = 0x80000001ACED3250;
  *(void *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedLongLong_, v3 >> 20);
  *(void *)(inited + 56) = 0xD000000000000016;
  *(void *)(inited + 64) = 0x80000001ACED3270;
  *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedLongLong_, v4 >> 20);
  *(void *)(inited + 80) = 0xD000000000000013;
  *(void *)(inited + 88) = 0x80000001ACEC9980;
  *(void *)(inited + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedLongLong_, v5 >> 20);
  unint64_t v7 = sub_1ACA37800(inited);
  uint64_t v8 = @"com.apple.podcasts.downloads.media.storage.usage";
  sub_1ACACBC14(v7);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  id v11 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  aBlock[4] = sub_1ACB19A38;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACDD55C4;
  aBlock[3] = &block_descriptor_86;
  uint64_t v13 = _Block_copy(aBlock);
  swift_release();
  id v14 = objc_msgSend(v11, sel_initWithName_generator_, v8, v13);

  _Block_release(v13);
  objc_msgSend(a2, sel_sendEvent_, v14);
}

uint64_t sub_1ACDF124C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1ACDF1284(void *a1)
{
  sub_1ACDF1030(a1, *(void **)(v1 + 16));
}

unint64_t sub_1ACDF128C()
{
  unint64_t result = qword_1EB770570;
  if (!qword_1EB770570)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB770578);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770570);
  }
  return result;
}

uint64_t sub_1ACDF12E8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t NSUserDefaults.BOOLPublisher(forKey:)(void *a1, void *a2)
{
  v38[2] = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE76E78();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  uint64_t v40 = v9;
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768D78);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v41 = v12;
  uint64_t v42 = v13;
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768D08);
  uint64_t v45 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  char v17 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768CA8);
  uint64_t v48 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768CB8);
  uint64_t v44 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v21 = (char *)v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v22 = (void *)swift_allocObject();
  void v22[2] = v2;
  v22[3] = a1;
  v38[1] = a2;
  v22[4] = a2;
  uint64_t v23 = self;
  id v24 = v2;
  swift_bridgeObjectRetain_n();
  v38[0] = v24;
  id v25 = objc_msgSend(v23, sel_defaultCenter);
  sub_1ACE76E88();

  sub_1ACA51E1C();
  id v49 = (id)sub_1ACE76CF8();
  uint64_t v26 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v7, 1, 1, v26);
  sub_1ACDF2BB0((unint64_t *)&qword_1EB768EF8, MEMORY[0x1E4F27FC8]);
  sub_1ACDF2BB0((unint64_t *)&qword_1EB7669D0, (void (*)(uint64_t))sub_1ACA51E1C);
  uint64_t v27 = v39;
  sub_1ACE75CA8();
  sub_1ACAFA0D0((uint64_t)v7);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v27);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = sub_1ACDF2B58;
  *(void *)(v28 + 24) = v22;
  sub_1ACA51EA4(&qword_1EB768D70, &qword_1EB768D78);
  swift_retain();
  uint64_t v29 = v41;
  sub_1ACE75B58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769178);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1ACE843F0;
  uint64_t v31 = (void *)sub_1ACE76178();
  id v32 = v38[0];
  LOBYTE(v11) = objc_msgSend(v38[0], sel_BOOLForKey_, v31);

  *(unsigned char *)(v30 + 32) = (_BYTE)v11;
  sub_1ACA51EA4(&qword_1EB768D00, &qword_1EB768D08);
  uint64_t v33 = v43;
  sub_1ACE75C88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v33);
  sub_1ACA51EA4(&qword_1EB768CA0, &qword_1EB768CA8);
  uint64_t v34 = v46;
  sub_1ACE75D28();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v34);
  uint64_t v35 = (void *)sub_1ACA959F8();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v21, v47);
  id v49 = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768D98);
  sub_1ACA51EA4(&qword_1EB768D90, &qword_1EB768D98);
  uint64_t v36 = sub_1ACE75AD8();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return v36;
}

uint64_t NSUserDefaults.integerPublisher(forKey:)(void *a1, void *a2)
{
  v39[2] = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE76E78();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  uint64_t v41 = v9;
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768D78);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v42 = v12;
  uint64_t v43 = v13;
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D948);
  uint64_t v46 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  char v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D6C0);
  uint64_t v49 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v19 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76D6D0);
  uint64_t v45 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v21 = (char *)v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v22 = (void *)swift_allocObject();
  void v22[2] = v2;
  v22[3] = a1;
  v39[1] = a2;
  v22[4] = a2;
  uint64_t v23 = self;
  id v24 = v2;
  swift_bridgeObjectRetain_n();
  v39[0] = v24;
  id v25 = objc_msgSend(v23, sel_defaultCenter);
  sub_1ACE76E88();

  sub_1ACA51E1C();
  id v50 = (id)sub_1ACE76CF8();
  uint64_t v26 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v7, 1, 1, v26);
  sub_1ACDF2BB0((unint64_t *)&qword_1EB768EF8, MEMORY[0x1E4F27FC8]);
  sub_1ACDF2BB0((unint64_t *)&qword_1EB7669D0, (void (*)(uint64_t))sub_1ACA51E1C);
  uint64_t v27 = v40;
  sub_1ACE75CA8();
  sub_1ACAFA0D0((uint64_t)v7);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v27);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = sub_1ACDF3B68;
  *(void *)(v28 + 24) = v22;
  sub_1ACA51EA4(&qword_1EB768D70, &qword_1EB768D78);
  swift_retain();
  uint64_t v29 = v42;
  sub_1ACE75B58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769180);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1ACE843F0;
  uint64_t v31 = (void *)sub_1ACE76178();
  id v32 = v39[0];
  id v33 = objc_msgSend(v39[0], sel_integerForKey_, v31);

  *(void *)(v30 + 32) = v33;
  sub_1ACA51EA4(&qword_1EB76D940, &qword_1EB76D948);
  uint64_t v34 = v44;
  sub_1ACE75C88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v17, v34);
  sub_1ACA51EA4(&qword_1EB76D6B8, &qword_1EB76D6C0);
  uint64_t v35 = v47;
  sub_1ACE75D28();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v35);
  uint64_t v36 = (void *)sub_1ACA95D9C();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v21, v48);
  id v50 = v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE08);
  sub_1ACA51EA4(&qword_1EB76DE00, &qword_1EB76DE08);
  uint64_t v37 = sub_1ACE75AD8();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return v37;
}

uint64_t NSUserDefaults.queryPublisher<A>(_:)(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v51 = a4;
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE76E78();
  uint64_t v50 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768D78);
  uint64_t v52 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1ACA51EA4(&qword_1EB768D70, &qword_1EB768D78);
  uint64_t v14 = sub_1ACE75678();
  uint64_t v55 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v42 = (char *)&v39 - v15;
  uint64_t v16 = (void *)sub_1ACE76688();
  uint64_t WitnessTable = swift_getWitnessTable();
  id v56 = v16;
  uint64_t v57 = MEMORY[0x1E4FBC248];
  uint64_t v58 = WitnessTable;
  uint64_t v59 = MEMORY[0x1E4FBC278];
  uint64_t v18 = (void *)sub_1ACE75738();
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v47 = v14;
  uint64_t v45 = swift_getWitnessTable();
  id v56 = v18;
  uint64_t v57 = v14;
  uint64_t v58 = v19;
  uint64_t v59 = v45;
  uint64_t v20 = sub_1ACE755B8();
  uint64_t v49 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v41 = (char *)&v39 - v21;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v44 = sub_1ACE75648();
  uint64_t v48 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v40 = (char *)&v39 - v22;
  id v23 = objc_msgSend(self, sel_defaultCenter);
  sub_1ACE76E88();

  sub_1ACA51E1C();
  id v56 = (id)sub_1ACE76CF8();
  uint64_t v24 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v7, 1, 1, v24);
  sub_1ACDF2BB0((unint64_t *)&qword_1EB768EF8, MEMORY[0x1E4F27FC8]);
  sub_1ACDF2BB0((unint64_t *)&qword_1EB7669D0, (void (*)(uint64_t))sub_1ACA51E1C);
  sub_1ACE75CA8();
  sub_1ACAFA0D0((uint64_t)v7);

  (*(void (**)(char *, uint64_t))(v50 + 8))(v10, v8);
  id v25 = (void *)swift_allocObject();
  uint64_t v26 = v51;
  v25[2] = a3;
  v25[3] = v26;
  uint64_t v27 = v53;
  uint64_t v28 = v54;
  v25[4] = v53;
  v25[5] = v28;
  swift_retain();
  uint64_t v29 = v42;
  sub_1ACE75B58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v13, v11);
  sub_1ACC0465C(a3, a3);
  swift_allocObject();
  uint64_t v30 = sub_1ACE765A8();
  v27();
  sub_1ACC01FB8(v30);
  uint64_t v31 = v41;
  uint64_t v32 = v47;
  sub_1ACE75C88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v29, v32);
  id v33 = v40;
  sub_1ACE75D28();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v20);
  uint64_t v34 = v44;
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v36 = (void *)Publisher.bufferedMulticast()(v34, v35);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v34);
  id v56 = v36;
  sub_1ACE757F8();
  swift_getWitnessTable();
  uint64_t v37 = sub_1ACE75AD8();
  swift_release();
  return v37;
}

uint64_t NSUserDefaults.codablePublisher<A>(forKey:decoding:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v28 = a1;
  uint64_t v29 = a6;
  uint64_t v27 = a5;
  uint64_t v12 = sub_1ACE76FD8();
  sub_1ACE757F8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = sub_1ACE75598();
  uint64_t v31 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a4;
  v16[3] = a5;
  uint64_t v17 = v28;
  uint64_t v18 = v29;
  v16[4] = v29;
  v16[5] = a7;
  void v16[6] = v7;
  v16[7] = v17;
  v16[8] = a2;
  uint64_t v33 = a7;
  id v19 = v7;
  swift_bridgeObjectRetain();
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v21 = NSUserDefaults.queryPublisher<A>(_:)((void (*)(void))sub_1ACDF3CA0, (uint64_t)v16, v12, v20);
  swift_release();
  uint64_t v32 = v21;
  uint64_t v22 = (void *)swift_allocObject();
  uint64_t v23 = v27;
  void v22[2] = a4;
  v22[3] = v23;
  v22[4] = v18;
  v22[5] = a7;
  sub_1ACE75AE8();
  swift_release();
  swift_release();
  swift_getWitnessTable();
  uint64_t v24 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v13);
  return v24;
}

void sub_1ACDF2B58(unsigned char *a1@<X8>)
{
  unint64_t v3 = *(void **)(v1 + 16);
  unint64_t v4 = (void *)sub_1ACE76178();
  LOBYTE(v3) = objc_msgSend(v3, sel_BOOLForKey_, v4);

  *a1 = (_BYTE)v3;
}

uint64_t sub_1ACDF2BB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t NSUserDefaults.stringPublisher(forKey:)(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE76E78();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768D78);
  uint64_t v46 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5FB8);
  uint64_t v50 = *(void *)(v14 - 8);
  uint64_t v51 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v42 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5FC0);
  uint64_t v52 = *(void *)(v16 - 8);
  uint64_t v53 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v48 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1460);
  uint64_t v47 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v45 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = (void *)swift_allocObject();
  v19[2] = v2;
  v19[3] = a1;
  v19[4] = a2;
  uint64_t v20 = self;
  id v21 = v2;
  swift_bridgeObjectRetain_n();
  id v22 = v21;
  id v23 = objc_msgSend(v20, sel_defaultCenter);
  sub_1ACE76E88();

  sub_1ACA51E1C();
  id v54 = (id)sub_1ACE76CF8();
  uint64_t v24 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v7, 1, 1, v24);
  sub_1ACDF2BB0((unint64_t *)&qword_1EB768EF8, MEMORY[0x1E4F27FC8]);
  sub_1ACDF2BB0((unint64_t *)&qword_1EB7669D0, (void (*)(uint64_t))sub_1ACA51E1C);
  sub_1ACE75CA8();
  sub_1ACAFA0D0((uint64_t)v7);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  id v25 = v42;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1ACDF3CEC;
  *(void *)(v26 + 24) = v19;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
  sub_1ACA51EA4(&qword_1EB768D70, &qword_1EB768D78);
  uint64_t v27 = v44;
  sub_1ACE75B58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E498);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1ACE843F0;
  uint64_t v29 = (void *)sub_1ACE76178();
  id v30 = objc_msgSend(v22, sel_stringForKey_, v29);

  if (v30)
  {
    uint64_t v31 = sub_1ACE761B8();
    uint64_t v33 = v32;
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v33 = 0;
  }
  *(void *)(v28 + 32) = v31;
  *(void *)(v28 + 40) = v33;
  sub_1ACA51EA4(&qword_1E99F5FC8, &qword_1E99F5FB8);
  uint64_t v34 = v48;
  uint64_t v35 = v51;
  sub_1ACE75C88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v25, v35);
  sub_1ACA51EA4(&qword_1E99F5FD0, &qword_1E99F5FC0);
  sub_1ACDF3D38();
  uint64_t v36 = v45;
  uint64_t v37 = v53;
  sub_1ACE75D28();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v37);
  unint64_t v38 = (void *)sub_1ACA96C78();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v49);
  id v54 = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DDA8);
  sub_1ACA51EA4(&qword_1EB76DDA0, &qword_1EB76DDA8);
  uint64_t v39 = sub_1ACE75AD8();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return v39;
}

void sub_1ACDF3348(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4 = (void *)sub_1ACE76178();
  id v5 = objc_msgSend(a1, sel_stringForKey_, v4);

  if (v5)
  {
    uint64_t v6 = sub_1ACE761B8();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *a2 = v6;
  a2[1] = v8;
}

uint64_t NSUserDefaults.timestampPublisher(forKey:)(void *a1, void *a2)
{
  v40[2] = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE76E78();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  uint64_t v42 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768D78);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v43 = v12;
  uint64_t v44 = v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769468);
  uint64_t v47 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v17 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A660);
  uint64_t v50 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  id v19 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A688);
  uint64_t v46 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  id v21 = (char *)v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = (void *)swift_allocObject();
  void v22[2] = v2;
  v22[3] = a1;
  v40[1] = a2;
  v22[4] = a2;
  id v23 = self;
  id v24 = v2;
  swift_bridgeObjectRetain_n();
  v40[0] = v24;
  id v25 = objc_msgSend(v23, sel_defaultCenter);
  sub_1ACE76E88();

  sub_1ACA51E1C();
  id v51 = (id)sub_1ACE76CF8();
  uint64_t v26 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v7, 1, 1, v26);
  sub_1ACDF2BB0((unint64_t *)&qword_1EB768EF8, MEMORY[0x1E4F27FC8]);
  sub_1ACDF2BB0((unint64_t *)&qword_1EB7669D0, (void (*)(uint64_t))sub_1ACA51E1C);
  uint64_t v27 = v41;
  sub_1ACE75CA8();
  sub_1ACAFA0D0((uint64_t)v7);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v27);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = sub_1ACDF3DA8;
  *(void *)(v28 + 24) = v22;
  sub_1ACA51EA4(&qword_1EB768D70, &qword_1EB768D78);
  swift_retain();
  uint64_t v29 = v43;
  sub_1ACE75B58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772728);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1ACE843F0;
  uint64_t v31 = (void *)sub_1ACE76178();
  id v32 = v40[0];
  objc_msgSend(v40[0], sel_doubleForKey_, v31);
  uint64_t v34 = v33;

  *(void *)(v30 + 32) = v34;
  sub_1ACA51EA4(&qword_1EB76A6C0, &qword_1EB769468);
  uint64_t v35 = v45;
  sub_1ACE75C88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v35);
  sub_1ACA51EA4(&qword_1EB76A658, &qword_1EB76A660);
  uint64_t v36 = v48;
  sub_1ACE75D28();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v19, v36);
  uint64_t v37 = (void *)sub_1ACA9702C();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v21, v49);
  id v51 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A728);
  sub_1ACA51EA4(&qword_1EB76A720, &qword_1EB76A728);
  uint64_t v38 = sub_1ACE75AD8();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return v38;
}

uint64_t sub_1ACDF3AEC()
{
  swift_release();
  return swift_deallocObject();
}

void *sub_1ACDF3B24@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v4);
  *a1 = v4;
  return result;
}

void sub_1ACDF3B68(void *a1@<X8>)
{
  unint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = (void *)sub_1ACE76178();
  id v5 = objc_msgSend(v3, sel_integerForKey_, v4);

  *a1 = v5;
}

void *sub_1ACDF3BC0@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v4);
  *a1 = v4;
  return result;
}

uint64_t sub_1ACDF3C00()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDF3C38()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1ACDF3C60()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACDF3CA0@<X0>(uint64_t a1@<X8>)
{
  return NSUserDefaults.codable<A>(_:for:)(*(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), a1);
}

uint64_t sub_1ACDF3CD8()
{
  return swift_deallocObject();
}

void sub_1ACDF3CEC(uint64_t *a1@<X8>)
{
  sub_1ACDF3348(*(void **)(v1 + 16), a1);
}

double sub_1ACDF3CF8@<D0>(_OWORD *a1@<X8>)
{
  (*(void (**)(long long *__return_ptr))(v1 + 16))(&v4);
  double result = *(double *)&v4;
  *a1 = v4;
  return result;
}

unint64_t sub_1ACDF3D38()
{
  unint64_t result = qword_1E99F5FD8;
  if (!qword_1E99F5FD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB76E040);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5FD8);
  }
  return result;
}

void sub_1ACDF3DA8(void *a1@<X8>)
{
  unint64_t v3 = *(void **)(v1 + 16);
  long long v4 = (void *)sub_1ACE76178();
  objc_msgSend(v3, sel_doubleForKey_, v4);
  uint64_t v6 = v5;

  *a1 = v6;
}

double sub_1ACDF3E08@<D0>(double *a1@<X8>)
{
  (*(void (**)(double *__return_ptr))(v1 + 16))(&v4);
  double result = v4;
  *a1 = v4;
  return result;
}

uint64_t sub_1ACDF3E54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = *(void *)(v2 + 8);
  uint64_t v36 = *(void *)v2;
  uint64_t v33 = *(void *)(v2 + 24);
  uint64_t v34 = *(void *)(v2 + 16);
  int v37 = *(unsigned __int8 *)(v2 + 32);
  id v32 = *(void **)(v2 + 40);
  uint64_t v23 = *(void *)(v2 + 48);
  uint64_t v45 = *(void *)(v2 + 72);
  uint64_t v46 = *(void *)(v2 + 64);
  uint64_t v43 = *(void *)(v2 + 88);
  uint64_t v44 = *(void *)(v2 + 80);
  uint64_t v41 = *(void *)(v2 + 104);
  uint64_t v42 = *(void *)(v2 + 96);
  uint64_t v39 = *(void *)(v2 + 120);
  uint64_t v40 = *(void *)(v2 + 112);
  uint64_t v25 = *(void *)(v2 + 56);
  uint64_t v26 = *(void *)(v2 + 128);
  uint64_t v24 = *(void *)(v2 + 136);
  int v38 = *(unsigned __int16 *)(v2 + 144) | (*(unsigned __int8 *)(v2 + 146) << 16);
  uint64_t v5 = *(void *)(v2 + 152);
  uint64_t v22 = *(void *)(v2 + 160);
  uint64_t v6 = *(unsigned __int8 *)(v2 + 168);
  uint64_t v30 = *(void *)(v2 + 184);
  uint64_t v31 = *(void *)(v2 + 176);
  uint64_t v28 = *(void *)(v2 + 200);
  uint64_t v29 = *(void *)(v2 + 192);
  unsigned __int8 v27 = *(unsigned char *)(v2 + 208);
  if (*(unsigned char *)(v2 + 168) && v6 != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  char v7 = sub_1ACE77848();
  swift_bridgeObjectRelease();
  uint64_t v8 = v6;
  if (v7)
  {
LABEL_6:
    uint64_t v9 = a1[3];
    uint64_t v10 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v9);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v6, v9, v10);
  }
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v12 + 8))(&v61, v8, v11, v12);
  if (*((void *)&v62 + 1))
  {
    sub_1ACA3AABC(&v61, (uint64_t)&v47);
    while (1)
    {
      uint64_t v13 = *((void *)&v48 + 1);
      uint64_t v14 = v49;
      __swift_project_boxed_opaque_existential_1(&v47, *((uint64_t *)&v48 + 1));
      *(void *)&long long v61 = v36;
      *((void *)&v61 + 1) = v35;
      *(void *)&long long v62 = v34;
      *((void *)&v62 + 1) = v33;
      LOBYTE(v63) = v37;
      *(_DWORD *)((char *)&v63 + 1) = *(_DWORD *)(v2 + 33);
      DWORD1(v63) = *(_DWORD *)(v2 + 36);
      *((void *)&v63 + 1) = v32;
      *(void *)&long long v64 = v23;
      *((void *)&v64 + 1) = v25;
      *(void *)&long long v65 = v46;
      *((void *)&v65 + 1) = v45;
      *(void *)&long long v66 = v44;
      *((void *)&v66 + 1) = v43;
      *(void *)&long long v67 = v42;
      *((void *)&v67 + 1) = v41;
      *(void *)&long long v68 = v40;
      *((void *)&v68 + 1) = v39;
      *(void *)&long long v69 = v26;
      *((void *)&v69 + 1) = v24;
      BYTE2(v70) = BYTE2(v38);
      LOWORD(v70) = v38;
      *(_DWORD *)((char *)&v70 + 3) = *(_DWORD *)(v2 + 147);
      BYTE7(v70) = *(unsigned char *)(v2 + 151);
      *((void *)&v70 + 1) = v5;
      *(void *)&long long v71 = v22;
      BYTE8(v71) = v6;
      *(_DWORD *)((char *)&v71 + 9) = *(_DWORD *)(v2 + 169);
      HIDWORD(v71) = *(_DWORD *)(v2 + 172);
      *(void *)&long long v72 = v31;
      *((void *)&v72 + 1) = v30;
      *(void *)&long long v73 = v29;
      *((void *)&v73 + 1) = v28;
      unsigned __int8 v74 = v27;
      LOBYTE(v13) = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v14 + 16))(&v61, v13, v14);
      sub_1ACC6D6F0((uint64_t)a1, (uint64_t)&v61);
      if (v13) {
        break;
      }
      uint64_t v15 = *((void *)&v62 + 1);
      uint64_t v16 = v63;
      __swift_project_boxed_opaque_existential_1(&v61, *((uint64_t *)&v62 + 1));
      LOBYTE(v15) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 24))(v8, v15, v16);
      sub_1ACBD3FA8((uint64_t)&v61);
      if (v15) {
        goto LABEL_14;
      }
      uint64_t v17 = a1[3];
      uint64_t v18 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v17);
      uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v8, v17, v18);
    }
    sub_1ACBD3FA8((uint64_t)&v61);
LABEL_14:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v47);
  }
  else
  {
    sub_1ACDF50CC((uint64_t)&v61);
  }
  sub_1ACA3E158((uint64_t)(a1 + 7), (uint64_t)v75);
  __swift_project_boxed_opaque_existential_1(v75, v75[3]);
  if (!v5)
  {
    if (v37 == 8 && v36 == 1 && !(v34 | v35 | v33)) {
      id v19 = a1 + 12;
    }
    else {
      id v19 = a1 + 5;
    }
    uint64_t v5 = *v19;
  }
  *(void *)&long long v61 = v36;
  *((void *)&v61 + 1) = v35;
  *(void *)&long long v62 = v34;
  *((void *)&v62 + 1) = v33;
  LOBYTE(v63) = v37;
  *((void *)&v63 + 1) = v32;
  *(void *)&long long v64 = v23;
  *((void *)&v64 + 1) = v25;
  *(void *)&long long v65 = v46;
  *((void *)&v65 + 1) = v45;
  *(void *)&long long v66 = v44;
  *((void *)&v66 + 1) = v43;
  *(void *)&long long v67 = v42;
  *((void *)&v67 + 1) = v41;
  *(void *)&long long v68 = v40;
  *((void *)&v68 + 1) = v39;
  *(void *)&long long v69 = v26;
  *((void *)&v69 + 1) = v24;
  LOWORD(v70) = v38;
  BYTE2(v70) = BYTE2(v38);
  *((void *)&v70 + 1) = v5;
  *(void *)&long long v71 = v22;
  WORD4(v71) = v8;
  *(void *)&long long v72 = v31;
  *((void *)&v72 + 1) = v30;
  *(void *)&long long v73 = v29;
  *((void *)&v73 + 1) = v28;
  unsigned __int8 v74 = v27;
  long long v57 = v71;
  long long v58 = v72;
  long long v59 = v73;
  unsigned __int8 v60 = v27;
  long long v53 = v67;
  long long v54 = v68;
  long long v55 = v69;
  long long v56 = v70;
  long long v49 = v63;
  long long v50 = v64;
  long long v51 = v65;
  long long v52 = v66;
  long long v47 = v61;
  long long v48 = v62;
  sub_1ACA639E4(v36, v35, v34, v33, v37);
  swift_bridgeObjectRetain();
  id v20 = v32;
  sub_1ACA63A5C(v46, v45, v44, v43, v42, v41, v40, v39, v26, v24, v38);
  sub_1ACA63B84(v31, v30, v29, v28, v27);
  sub_1ACB5EF38(&v47, a2);
  sub_1ACA64E8C((uint64_t)&v61);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
}

uint64_t sub_1ACDF4480(long long *a1)
{
  char v3 = 0;
  if (*((void *)v1 + 19) == *((void *)a1 + 19) && *((void *)v1 + 20) == *((void *)a1 + 20))
  {
    long long v19 = a1[1];
    long long v20 = *a1;
    char v4 = *((unsigned char *)a1 + 32);
    int v5 = *((unsigned __int8 *)a1 + 168);
    long long v17 = v1[1];
    long long v18 = *v1;
    char v6 = *((unsigned char *)v1 + 32);
    uint64_t v7 = 0x62694C6C61636F6CLL;
    unint64_t v8 = 0xEC00000079726172;
    if (*((unsigned char *)v1 + 168) != 1)
    {
      uint64_t v7 = 0x7265666E69;
      unint64_t v8 = 0xE500000000000000;
    }
    if (*((unsigned char *)v1 + 168)) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = 0x495041616964656DLL;
    }
    if (*((unsigned char *)v1 + 168)) {
      unint64_t v10 = v8;
    }
    else {
      unint64_t v10 = 0xE800000000000000;
    }
    uint64_t v11 = 0x62694C6C61636F6CLL;
    unint64_t v12 = 0xEC00000079726172;
    if (v5 != 1)
    {
      uint64_t v11 = 0x7265666E69;
      unint64_t v12 = 0xE500000000000000;
    }
    if (v5) {
      uint64_t v13 = v11;
    }
    else {
      uint64_t v13 = 0x495041616964656DLL;
    }
    if (v5) {
      unint64_t v14 = v12;
    }
    else {
      unint64_t v14 = 0xE800000000000000;
    }
    if (v9 == v13 && v10 == v14)
    {
      swift_bridgeObjectRelease_n();
LABEL_23:
      v23[0] = v18;
      v23[1] = v17;
      char v24 = v6;
      v21[0] = v20;
      v21[1] = v19;
      char v22 = v4;
      char v3 = _s18PodcastsFoundation15MediaIdentifierO2eeoiySbAC_ACtFZ_0((uint64_t)v23, (uint64_t *)v21);
      return v3 & 1;
    }
    char v15 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v3 = 0;
    if (v15) {
      goto LABEL_23;
    }
  }
  return v3 & 1;
}

uint64_t PodcastsMediaLibrary.Request.mediaIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  unsigned __int8 v6 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(a1 + 32) = v6;
  return sub_1ACA639E4(v2, v3, v4, v5, v6);
}

void *PodcastsMediaLibrary.Request.account.getter()
{
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

uint64_t PodcastsMediaLibrary.Request.sidepack.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

void PodcastsMediaLibrary.Request.listSettings.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = *(void *)(v1 + 88);
  uint64_t v6 = *(void *)(v1 + 96);
  uint64_t v7 = *(void *)(v1 + 104);
  uint64_t v8 = *(void *)(v1 + 112);
  uint64_t v9 = *(void *)(v1 + 120);
  uint64_t v10 = *(void *)(v1 + 128);
  uint64_t v11 = *(void *)(v1 + 136);
  char v12 = *(unsigned char *)(v1 + 146);
  __int16 v13 = *(_WORD *)(v1 + 144);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 82) = v12;
  *(_WORD *)(a1 + 80) = v13;
  sub_1ACA63A5C(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v13);
}

void _s7RequestVwxx(uint64_t a1)
{
  sub_1ACA63688(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));

  swift_bridgeObjectRelease();
  if (*(unsigned char *)(a1 + 144) != 2) {
    sub_1ACA63738(*(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(unsigned char *)(a1 + 128));
  }
  int v2 = *(unsigned __int8 *)(a1 + 208);
  if (v2 != 255)
  {
    uint64_t v3 = *(void *)(a1 + 176);
    uint64_t v4 = *(void *)(a1 + 184);
    uint64_t v5 = *(void *)(a1 + 192);
    uint64_t v6 = *(void *)(a1 + 200);
    sub_1ACA63688(v3, v4, v5, v6, v2);
  }
}

uint64_t _s7RequestVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 32);
  sub_1ACA639E4(*(void *)a2, v5, v6, v7, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  uint64_t v9 = *(void **)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  int v11 = *(unsigned __int16 *)(a2 + 144) | (*(unsigned __int8 *)(a2 + 146) << 16);
  LODWORD(v6) = *(_WORD *)(a2 + 144);
  id v12 = v9;
  swift_bridgeObjectRetain();
  if (v6 == 2)
  {
    long long v13 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v13;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_DWORD *)(a1 + 143) = *(_DWORD *)(a2 + 143);
    long long v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
  }
  else
  {
    uint64_t v15 = *(void *)(a2 + 64);
    uint64_t v29 = *(void *)(a2 + 72);
    uint64_t v16 = *(void *)(a2 + 80);
    uint64_t v17 = *(void *)(a2 + 88);
    uint64_t v18 = *(void *)(a2 + 96);
    uint64_t v19 = *(void *)(a2 + 104);
    uint64_t v20 = *(void *)(a2 + 112);
    uint64_t v21 = *(void *)(a2 + 120);
    char v30 = *(unsigned char *)(a2 + 128);
    sub_1ACA63A78(v15, v29, v16, v17, v18, v19, v20, v21, v30);
    *(void *)(a1 + 64) = v15;
    *(void *)(a1 + 72) = v29;
    *(void *)(a1 + 80) = v16;
    *(void *)(a1 + 88) = v17;
    *(void *)(a1 + 96) = v18;
    *(void *)(a1 + 104) = v19;
    *(void *)(a1 + 112) = v20;
    *(void *)(a1 + 120) = v21;
    *(unsigned char *)(a1 + 128) = v30;
    *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(_WORD *)(a1 + 144) = v11;
    *(unsigned char *)(a1 + 146) = BYTE2(v11);
  }
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  int v22 = *(unsigned __int8 *)(a2 + 208);
  if (v22 == 255)
  {
    long long v27 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v27;
    *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  }
  else
  {
    uint64_t v23 = *(void *)(a2 + 176);
    uint64_t v24 = *(void *)(a2 + 184);
    uint64_t v26 = *(void *)(a2 + 192);
    uint64_t v25 = *(void *)(a2 + 200);
    sub_1ACA639E4(v23, v24, v26, v25, v22);
    *(void *)(a1 + 176) = v23;
    *(void *)(a1 + 184) = v24;
    *(void *)(a1 + 192) = v26;
    *(void *)(a1 + 200) = v25;
    *(unsigned char *)(a1 + 208) = v22;
  }
  return a1;
}

uint64_t _s7RequestVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 32);
  sub_1ACA639E4(*(void *)a2, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  unsigned __int8 v13 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  sub_1ACA63688(v9, v10, v11, v12, v13);
  long long v14 = *(void **)(a1 + 40);
  uint64_t v15 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v15;
  id v16 = v15;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = (_OWORD *)(a1 + 64);
  uint64_t v18 = (_OWORD *)(a2 + 64);
  int v19 = *(unsigned __int8 *)(a2 + 144);
  if (*(unsigned char *)(a1 + 144) == 2)
  {
    if (v19 == 2)
    {
      long long v20 = *(_OWORD *)(a2 + 80);
      *uint64_t v17 = *v18;
      *(_OWORD *)(a1 + 80) = v20;
      long long v21 = *(_OWORD *)(a2 + 96);
      long long v22 = *(_OWORD *)(a2 + 112);
      long long v23 = *(_OWORD *)(a2 + 128);
      *(_DWORD *)(a1 + 143) = *(_DWORD *)(a2 + 143);
      *(_OWORD *)(a1 + 112) = v22;
      *(_OWORD *)(a1 + 128) = v23;
      *(_OWORD *)(a1 + 96) = v21;
      goto LABEL_9;
    }
    uint64_t v28 = *(void *)(a2 + 64);
    uint64_t v29 = *(void *)(a2 + 72);
    uint64_t v30 = *(void *)(a2 + 80);
    uint64_t v31 = *(void *)(a2 + 88);
    uint64_t v32 = *(void *)(a2 + 96);
    uint64_t v33 = *(void *)(a2 + 104);
    uint64_t v34 = *(void *)(a2 + 112);
    uint64_t v35 = *(void *)(a2 + 120);
    char v74 = *(unsigned char *)(a2 + 128);
    sub_1ACA63A78(v28, v29, v30, v31, v32, v33, v34, v35, v74);
    *(void *)(a1 + 64) = v28;
    *(void *)(a1 + 72) = v29;
    *(void *)(a1 + 80) = v30;
    *(void *)(a1 + 88) = v31;
    *(void *)(a1 + 96) = v32;
    *(void *)(a1 + 104) = v33;
    *(void *)(a1 + 112) = v34;
    *(void *)(a1 + 120) = v35;
    *(unsigned char *)(a1 + 128) = v74;
  }
  else
  {
    if (v19 == 2)
    {
      sub_1ACABF6C4(a1 + 64);
      long long v24 = *(_OWORD *)(a2 + 80);
      *uint64_t v17 = *v18;
      *(_OWORD *)(a1 + 80) = v24;
      long long v26 = *(_OWORD *)(a2 + 112);
      long long v25 = *(_OWORD *)(a2 + 128);
      long long v27 = *(_OWORD *)(a2 + 96);
      *(_DWORD *)(a1 + 143) = *(_DWORD *)(a2 + 143);
      *(_OWORD *)(a1 + 112) = v26;
      *(_OWORD *)(a1 + 128) = v25;
      *(_OWORD *)(a1 + 96) = v27;
      goto LABEL_9;
    }
    uint64_t v36 = *(void *)(a2 + 64);
    uint64_t v37 = *(void *)(a2 + 72);
    uint64_t v38 = *(void *)(a2 + 80);
    uint64_t v39 = *(void *)(a2 + 88);
    uint64_t v40 = *(void *)(a2 + 96);
    uint64_t v41 = *(void *)(a2 + 104);
    uint64_t v42 = *(void *)(a2 + 112);
    uint64_t v43 = *(void *)(a2 + 120);
    char v75 = *(unsigned char *)(a2 + 128);
    sub_1ACA63A78(v36, v37, v38, v39, v40, v41, v42, v43, v75);
    uint64_t v44 = *(void *)(a1 + 64);
    uint64_t v45 = *(void *)(a1 + 72);
    uint64_t v46 = *(void *)(a1 + 80);
    uint64_t v47 = *(void *)(a1 + 88);
    uint64_t v48 = *(void *)(a1 + 96);
    uint64_t v49 = *(void *)(a1 + 104);
    uint64_t v50 = *(void *)(a1 + 112);
    uint64_t v51 = *(void *)(a1 + 120);
    char v52 = *(unsigned char *)(a1 + 128);
    *(void *)(a1 + 64) = v36;
    *(void *)(a1 + 72) = v37;
    *(void *)(a1 + 80) = v38;
    *(void *)(a1 + 88) = v39;
    *(void *)(a1 + 96) = v40;
    *(void *)(a1 + 104) = v41;
    *(void *)(a1 + 112) = v42;
    *(void *)(a1 + 120) = v43;
    *(unsigned char *)(a1 + 128) = v75;
    sub_1ACA63738(v44, v45, v46, v47, v48, v49, v50, v51, v52);
  }
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
LABEL_9:
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  long long v53 = (long long *)(a1 + 176);
  long long v54 = (long long *)(a2 + 176);
  int v55 = *(unsigned __int8 *)(a2 + 208);
  if (*(unsigned __int8 *)(a1 + 208) == 255)
  {
    if (v55 == 255)
    {
      long long v71 = *v54;
      long long v72 = *(_OWORD *)(a2 + 192);
      *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
      *long long v53 = v71;
      *(_OWORD *)(a1 + 192) = v72;
    }
    else
    {
      uint64_t v65 = *(void *)(a2 + 176);
      uint64_t v66 = *(void *)(a2 + 184);
      uint64_t v68 = *(void *)(a2 + 192);
      uint64_t v67 = *(void *)(a2 + 200);
      sub_1ACA639E4(v65, v66, v68, v67, v55);
      *(void *)(a1 + 176) = v65;
      *(void *)(a1 + 184) = v66;
      *(void *)(a1 + 192) = v68;
      *(void *)(a1 + 200) = v67;
      *(unsigned char *)(a1 + 208) = v55;
    }
  }
  else if (v55 == 255)
  {
    sub_1ACABF718(a1 + 176);
    char v69 = *(unsigned char *)(a2 + 208);
    long long v70 = *(_OWORD *)(a2 + 192);
    *long long v53 = *v54;
    *(_OWORD *)(a1 + 192) = v70;
    *(unsigned char *)(a1 + 208) = v69;
  }
  else
  {
    uint64_t v56 = *(void *)(a2 + 176);
    uint64_t v57 = *(void *)(a2 + 184);
    uint64_t v59 = *(void *)(a2 + 192);
    uint64_t v58 = *(void *)(a2 + 200);
    sub_1ACA639E4(v56, v57, v59, v58, v55);
    uint64_t v60 = *(void *)(a1 + 176);
    uint64_t v61 = *(void *)(a1 + 184);
    uint64_t v62 = *(void *)(a1 + 192);
    uint64_t v63 = *(void *)(a1 + 200);
    *(void *)(a1 + 176) = v56;
    *(void *)(a1 + 184) = v57;
    *(void *)(a1 + 192) = v59;
    *(void *)(a1 + 200) = v58;
    unsigned __int8 v64 = *(unsigned char *)(a1 + 208);
    *(unsigned char *)(a1 + 208) = v55;
    sub_1ACA63688(v60, v61, v62, v63, v64);
  }
  return a1;
}

__n128 __swift_memcpy209_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t _s7RequestVwta(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  sub_1ACA63688(v5, v6, v7, v8, v10);
  long long v11 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  uint64_t v12 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v12;
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(a1 + 144) == 2) {
    goto LABEL_4;
  }
  int v13 = *(unsigned __int16 *)(a2 + 144);
  int v14 = v13 | (*(unsigned __int8 *)(a2 + 146) << 16);
  if (v13 == 2)
  {
    sub_1ACABF6C4(a1 + 64);
LABEL_4:
    long long v15 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v15;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_DWORD *)(a1 + 143) = *(_DWORD *)(a2 + 143);
    long long v16 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v16;
    goto LABEL_6;
  }
  char v17 = *(unsigned char *)(a2 + 128);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 80);
  uint64_t v21 = *(void *)(a1 + 88);
  uint64_t v22 = *(void *)(a1 + 96);
  uint64_t v23 = *(void *)(a1 + 104);
  uint64_t v24 = *(void *)(a1 + 112);
  uint64_t v25 = *(void *)(a1 + 120);
  char v26 = *(unsigned char *)(a1 + 128);
  long long v27 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v27;
  long long v28 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v28;
  *(unsigned char *)(a1 + 128) = v17;
  sub_1ACA63738(v18, v19, v20, v21, v22, v23, v24, v25, v26);
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = v14 & 1;
  *(unsigned char *)(a1 + 145) = BYTE1(v14) & 1;
  *(unsigned char *)(a1 + 146) = BYTE2(v14) & 1;
LABEL_6:
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  int v29 = *(unsigned __int8 *)(a1 + 208);
  if (v29 == 255)
  {
LABEL_10:
    long long v36 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v36;
    *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
    return a1;
  }
  int v30 = *(unsigned __int8 *)(a2 + 208);
  if (v30 == 255)
  {
    sub_1ACABF718(a1 + 176);
    goto LABEL_10;
  }
  uint64_t v31 = *(void *)(a1 + 176);
  uint64_t v32 = *(void *)(a1 + 184);
  uint64_t v33 = *(void *)(a1 + 192);
  uint64_t v34 = *(void *)(a1 + 200);
  long long v35 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v35;
  *(unsigned char *)(a1 + 208) = v30;
  sub_1ACA63688(v31, v32, v33, v34, v29);
  return a1;
}

uint64_t _s7RequestVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 209)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s7RequestVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 208) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 209) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 209) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsMediaLibrary.Request()
{
  return &type metadata for PodcastsMediaLibrary.Request;
}

unsigned char *_s7RequestV9SortOrderOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACDF503CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s7RequestV9SortOrderOMa()
{
  return &_s7RequestV9SortOrderON;
}

unint64_t sub_1ACDF5078()
{
  unint64_t result = qword_1E99F5FE0;
  if (!qword_1E99F5FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5FE0);
  }
  return result;
}

uint64_t sub_1ACDF50CC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F33E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MTSubscriptionSyncType.description.getter(uint64_t a1)
{
  unint64_t v1 = 0xD00000000000001DLL;
  unint64_t v2 = 0xD00000000000001DLL;
  if (a1 == 1) {
    unint64_t v2 = 13174;
  }
  if (a1 != 2) {
    unint64_t v1 = v2;
  }
  if (a1) {
    return v1;
  }
  else {
    return 12662;
  }
}

uint64_t sub_1ACDF5184()
{
  uint64_t v1 = *v0;
  unint64_t v2 = 0xD00000000000001DLL;
  unint64_t v3 = 0xD00000000000001DLL;
  if (*v0 == 1) {
    unint64_t v3 = 13174;
  }
  if (v1 != 2) {
    unint64_t v2 = v3;
  }
  if (v1) {
    return v2;
  }
  else {
    return 12662;
  }
}

uint64_t ServerPodcastEpisode.priceTypeIsPSUB.getter@<X0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v3);
  swift_bridgeObjectRelease();
  char v1 = 1;
  switch(v3)
  {
    case 2:
      break;
    default:
      char v1 = sub_1ACE77848();
      break;
  }
  swift_bridgeObjectRelease();
  return v1 & 1;
}

void sub_1ACDF5354(uint64_t a1)
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
  sub_1ACC42D88((unint64_t *)&unk_1EB768EE0, (unint64_t *)&qword_1EB768ED8);
  int64_t v2 = 0;
  v13[1] = (id)sub_1ACE769C8();
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_1ACD31300(v13, *(id *)(*(void *)(a1 + 48) + 8 * v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11)
  {
    int64_t v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v2 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v2);
    ++v12;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1ACDF5520(uint64_t a1)
{
  uint64_t result = sub_1ACE769C8();
  int64_t v3 = 0;
  uint64_t v15 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    uint64_t result = sub_1ACD30724(&v14, *(void *)(*(void *)(a1 + 48) + 8 * v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1ACDF5698(uint64_t *a1)
{
  void (*v3)(uint64_t *__return_ptr, id *);
  void (*v4)(id *__return_ptr, uint64_t *);
  uint64_t (*v5)(void **);
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char v19;
  void (*v20)(void **__return_ptr, id *);
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  char v27;
  uint64_t v28;

  uint64_t v2 = *a1;
  int64_t v3 = (void (*)(uint64_t *__return_ptr, id *))a1[1];
  uint64_t v4 = (void (*)(id *__return_ptr, uint64_t *))a1[3];
  uint64_t v5 = (uint64_t (*)(void **))a1[5];
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
  sub_1ACC42D88((unint64_t *)&qword_1EB76E300, (unint64_t *)&qword_1EB768F50);
  uint64_t v6 = 0;
  long long v28 = sub_1ACE769C8();
  uint64_t v22 = v2 + 56;
  unint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
  if (-v7 < 64) {
    int64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    int64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  uint64_t v20 = (void (*)(void **__return_ptr, id *))a1[7];
  uint64_t v21 = (unint64_t)(63 - v7) >> 6;
  while (v9)
  {
    unint64_t v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    int64_t v11 = v10 | (v6 << 6);
LABEL_17:
    long long v16 = *(void *)(v2 + 48) + 16 * v11;
    char v17 = *(void *)(v16 + 8);
    uint64_t v24 = *(id *)v16;
    uint64_t v25 = v17;
    swift_bridgeObjectRetain();
    v3(&v23, &v24);
    swift_bridgeObjectRelease();
    v4(&v24, &v23);
    uint64_t v18 = v24;
    uint64_t v19 = v25;
    char v26 = v24;
    long long v27 = v25;
    if (v5(&v26))
    {
      uint64_t v24 = v18;
      LOBYTE(v25) = v19;
      v20(&v26, &v24);
      sub_1ACD2FDB0(&v24, v26);
    }
  }
  unint64_t v12 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v12 >= v21) {
    goto LABEL_29;
  }
  int64_t v13 = *(void *)(v22 + 8 * v12);
  if (v13)
  {
LABEL_16:
    unint64_t v9 = (v13 - 1) & v13;
    int64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
    uint64_t v6 = v12;
    goto LABEL_17;
  }
  uint64_t v14 = v6 + 2;
  if (v6 + 2 >= v21) {
    goto LABEL_29;
  }
  int64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13)
  {
LABEL_12:
    unint64_t v12 = v14;
    goto LABEL_16;
  }
  uint64_t v15 = v6 + 3;
  if (v6 + 3 >= v21) {
    goto LABEL_29;
  }
  int64_t v13 = *(void *)(v22 + 8 * v15);
  if (v13) {
    goto LABEL_15;
  }
  uint64_t v14 = v6 + 4;
  if (v6 + 4 >= v21) {
    goto LABEL_29;
  }
  int64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13) {
    goto LABEL_12;
  }
  uint64_t v15 = v6 + 5;
  if (v6 + 5 >= v21) {
    goto LABEL_29;
  }
  int64_t v13 = *(void *)(v22 + 8 * v15);
  if (v13)
  {
LABEL_15:
    unint64_t v12 = v15;
    goto LABEL_16;
  }
  uint64_t v14 = v6 + 6;
  if (v6 + 6 >= v21)
  {
LABEL_29:
    sub_1ACA50A70();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return;
  }
  int64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13) {
    goto LABEL_12;
  }
  while (1)
  {
    unint64_t v12 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v12 >= v21) {
      goto LABEL_29;
    }
    int64_t v13 = *(void *)(v22 + 8 * v12);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_1ACDF59C4(uint64_t a1)
{
  uint64_t result = sub_1ACE769C8();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    int64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1ACD3007C(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1ACDF5B5C(uint64_t a1)
{
  sub_1ACA798F8();
  uint64_t result = sub_1ACE769C8();
  int64_t v3 = 0;
  uint64_t v15 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    uint64_t result = sub_1ACD30438(&v14, *(void *)(*(void *)(a1 + 48) + 8 * v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id static MTEpisode.predicate<A>(forEpisodeStoreTrackIdStrings:)()
{
  uint64_t v0 = sub_1ACE763D8();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    unint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1ACE773D8();
    uint64_t v2 = 0;
    do
    {
      uint64_t v3 = v2 + 1;
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithLongLong_, *(void *)(v0 + 8 * v2 + 32));
      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
      uint64_t v2 = v3;
    }
    while (v1 != v3);
    unint64_t v4 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v4 = MEMORY[0x1E4FBC860];
  }
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1ACDF75A8(v4, (unint64_t *)&qword_1EB768F50, 0x1E4F28ED0, (unint64_t *)&qword_1EB76E300, (void (*)(id *, uint64_t))sub_1ACD2FDB0);
  swift_bridgeObjectRelease();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
  sub_1ACC42D88((unint64_t *)&qword_1EB76E300, (unint64_t *)&qword_1EB768F50);
  uint64_t v6 = (void *)sub_1ACE76978();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForEpisodeStoreTrackIds_, v6);

  return v7;
}

id static MTEpisode.predicateForEpisodesWhichShouldBeFeedDeleted(showUUID:forBootstrapGeneration:)()
{
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v1 = (void *)sub_1ACE76178();
  id v2 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForAllEpisodesOnPodcastUuid_, v1);

  uint64_t v3 = (void *)_sSo9MTEpisodeC18PodcastsFoundationE31predicateForEpisodesNotMatching19bootstrapGenerationSo11NSPredicateC0C04UUIDV_tFZ_0();
  id v4 = objc_msgSend(v2, sel_AND_, v3);

  id v5 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForFeedDeleted_, 0);
  id v6 = objc_msgSend(v4, sel_AND_, v5);

  return v6;
}

id static MTEpisode.predicateForPurgeableEpisodes(globalRetentionPolicy:evaluationDate:calendar:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ACE8F1F0;
  *(void *)(v2 + 32) = _sSo9MTEpisodeC18PodcastsFoundationE43predicateForAutomaticallyDownloadedEpisodesSo11NSPredicateCyFZ_0();
  *(void *)(v2 + 40) = sub_1ACDF6920(a1);
  sub_1ACE76598();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  uint64_t v3 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v3);

  return v4;
}

id static MTEpisode.predicateForDownloadedNonPurgeableEpisodes(globalRetentionPolicy:evaluationDate:calendar:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ACE8F1F0;
  *(void *)(v2 + 32) = _sSo9MTEpisodeC18PodcastsFoundationE43predicateForAutomaticallyDownloadedEpisodesSo11NSPredicateCyFZ_0();
  id v3 = sub_1ACDF6920(a1);
  id v4 = [v3 NOT];

  *(void *)(v2 + 40) = v4;
  sub_1ACE76598();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  id v5 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v5);

  return v6;
}

id static MTEpisode.predicateForShowDetailEpisodes(showUUID:hidePlayedEpisodes:seasonToShow:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  int64_t v8 = self;
  unint64_t v9 = (void *)sub_1ACE76178();
  id v10 = objc_msgSend(v8, sel_predicateForAllEpisodesOnPodcastUuid_, v9);

  id v11 = v10;
  id v12 = objc_msgSend(v8, sel_predicateForEpisodeTypeFilter_, 5);
  id v13 = objc_msgSend(v11, sel_AND_, v12);

  if (a3)
  {
    id v14 = v13;
    id v15 = objc_msgSend(v8, sel_predicateForVisuallyPlayed_, 0);
    id v13 = objc_msgSend(v14, sel_AND_, v15);
  }
  if (a5) {
    return v13;
  }
  id v16 = objc_msgSend(v8, sel_predicateForSeasonNumber_, a4);
  id v17 = objc_msgSend(v13, sel_AND_, v16);

  return v17;
}

uint64_t *sub_1ACDF6364@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  unint64_t v4 = result[1];
  uint64_t v5 = HIBYTE(v4) & 0xF;
  uint64_t v6 = *result & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0) {
    uint64_t v7 = HIBYTE(v4) & 0xF;
  }
  else {
    uint64_t v7 = *result & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    char v21 = 1;
LABEL_47:
    *(void *)a2 = v7;
    *(unsigned char *)(a2 + 8) = v21 & 1;
    return result;
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1ACCCEEB0(v3, v4, 10);
    char v11 = v25;
    uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
LABEL_44:
    char v21 = v11 & 1;
    if (v11) {
      uint64_t v7 = 0;
    }
    else {
      uint64_t v7 = v9;
    }
    goto LABEL_47;
  }
  if ((v4 & 0x2000000000000000) == 0)
  {
    if ((v3 & 0x1000000000000000) != 0) {
      int64_t v8 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      int64_t v8 = (unsigned __int8 *)sub_1ACE77388();
    }
    uint64_t result = (uint64_t *)sub_1ACCCEE80(v8, v6, 10);
    uint64_t v9 = (uint64_t)result;
    char v11 = v10 & 1;
    goto LABEL_44;
  }
  v26[0] = *result;
  v26[1] = v4 & 0xFFFFFFFFFFFFFFLL;
  if (v3 == 43)
  {
    if (!v5) {
      goto LABEL_58;
    }
    if (v5 == 1 || (BYTE1(v3) - 48) > 9u) {
      goto LABEL_31;
    }
    uint64_t v9 = (BYTE1(v3) - 48);
    if (v5 != 2)
    {
      if ((BYTE2(v3) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v9 = 10 * (BYTE1(v3) - 48) + (BYTE2(v3) - 48);
      uint64_t v12 = v5 - 3;
      if (v12)
      {
        id v13 = (unsigned __int8 *)v26 + 3;
        while (1)
        {
          unsigned int v14 = *v13 - 48;
          if (v14 > 9) {
            goto LABEL_31;
          }
          uint64_t v15 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
            goto LABEL_31;
          }
          uint64_t v9 = v15 + v14;
          if (__OFADD__(v15, v14)) {
            goto LABEL_31;
          }
          char v11 = 0;
          ++v13;
          if (!--v12) {
            goto LABEL_44;
          }
        }
      }
    }
LABEL_43:
    char v11 = 0;
    goto LABEL_44;
  }
  if (v3 != 45)
  {
    if (!v5 || (v3 - 48) > 9u) {
      goto LABEL_31;
    }
    uint64_t v9 = (v3 - 48);
    if (v5 != 1)
    {
      if ((BYTE1(v3) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v9 = 10 * (v3 - 48) + (BYTE1(v3) - 48);
      uint64_t v16 = v5 - 2;
      if (v16)
      {
        id v17 = (unsigned __int8 *)v26 + 2;
        while (1)
        {
          unsigned int v18 = *v17 - 48;
          if (v18 > 9) {
            goto LABEL_31;
          }
          uint64_t v19 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
            goto LABEL_31;
          }
          uint64_t v9 = v19 + v18;
          if (__OFADD__(v19, v18)) {
            goto LABEL_31;
          }
          char v11 = 0;
          ++v17;
          if (!--v16) {
            goto LABEL_44;
          }
        }
      }
    }
    goto LABEL_43;
  }
  if (v5)
  {
    if (v5 != 1 && (BYTE1(v3) - 48) <= 9u)
    {
      if (v5 == 2)
      {
        char v11 = 0;
        uint64_t v9 = -(uint64_t)(BYTE1(v3) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(v3) - 48) <= 9u)
      {
        uint64_t v9 = -10 * (BYTE1(v3) - 48) - (BYTE2(v3) - 48);
        uint64_t v20 = v5 - 3;
        if (!v20) {
          goto LABEL_43;
        }
        uint64_t v22 = (unsigned __int8 *)v26 + 3;
        while (1)
        {
          unsigned int v23 = *v22 - 48;
          if (v23 > 9) {
            break;
          }
          uint64_t v24 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
            break;
          }
          uint64_t v9 = v24 - v23;
          if (__OFSUB__(v24, v23)) {
            break;
          }
          char v11 = 0;
          ++v22;
          if (!--v20) {
            goto LABEL_44;
          }
        }
      }
    }
LABEL_31:
    uint64_t v9 = 0;
    char v11 = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

uint64_t static MTEpisode.predicateForAllEpisodes(forPodcast:)(void *a1, uint64_t a2, char a3)
{
  if (!a3)
  {
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1ACE84470;
    uint64_t v10 = sub_1ACE761B8();
    uint64_t v12 = v11;
    uint64_t v13 = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v14 = sub_1ACADC3A8();
    *(void *)(v9 + 64) = v14;
    *(void *)(v9 + 32) = v10;
    *(void *)(v9 + 40) = v12;
    uint64_t v15 = sub_1ACE761B8();
    *(void *)(v9 + 96) = v13;
    *(void *)(v9 + 104) = v14;
    *(void *)(v9 + 72) = v15;
    *(void *)(v9 + 80) = v16;
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedLongLong_, a1);
    *(void *)(v9 + 136) = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
    *(void *)(v9 + 144) = sub_1ACC42D88((unint64_t *)&qword_1EB768F60, (unint64_t *)&qword_1EB768F50);
    *(void *)(v9 + 112) = v17;
    return sub_1ACE76B88();
  }
  if (a3 == 1)
  {
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1ACE84820;
    uint64_t v5 = sub_1ACE761B8();
    uint64_t v7 = v6;
    *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 64) = sub_1ACADC3A8();
    *(void *)(v4 + 32) = v5;
    *(void *)(v4 + 40) = v7;
    *(void *)(v4 + 96) = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
    *(void *)(v4 + 104) = sub_1ACC42D88((unint64_t *)&qword_1E99F26D8, (unint64_t *)&qword_1EB768ED8);
    *(void *)(v4 + 72) = a1;
    id v8 = a1;
    return sub_1ACE76B88();
  }
  uint64_t v19 = self;
  uint64_t v20 = (void *)sub_1ACE76178();
  id v21 = objc_msgSend(v19, sel_predicateForAllEpisodesOnPodcastUuid_, v20);

  return (uint64_t)v21;
}

id sub_1ACDF6920(uint64_t a1)
{
  uint64_t v43 = a1;
  uint64_t v1 = sub_1ACE751E8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE750A8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4F27BF0], v1);
  sub_1ACE751C8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1ACA3E034((uint64_t)v7);
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1ACE754C8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EB768C28);
    uint64_t v13 = sub_1ACE75498();
    os_log_type_t v14 = sub_1ACE76BE8();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_1AC9D5000, v13, v14, "Unable to move the date cursor 45 days back. Purgeability is undefined while this is true, so no episodes will be marked as purgeable", v15, 2u);
      MEMORY[0x1AD11B340](v15, -1, -1);
    }

    id v16 = objc_msgSend(self, sel_falsePredicate);
    return v16;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v42[1] = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1ACE8A540;
    uint64_t v19 = sub_1ACE761B8();
    uint64_t v21 = v20;
    uint64_t v22 = MEMORY[0x1E4FBB1A0];
    *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v23 = sub_1ACADC3A8();
    *(void *)(v18 + 64) = v23;
    *(void *)(v18 + 32) = v19;
    *(void *)(v18 + 40) = v21;
    uint64_t v24 = sub_1ACE761B8();
    *(void *)(v18 + 96) = v22;
    *(void *)(v18 + 104) = v23;
    *(void *)(v18 + 72) = v24;
    *(void *)(v18 + 80) = v25;
    uint64_t v26 = sub_1ACE761B8();
    *(void *)(v18 + 136) = v22;
    *(void *)(v18 + 144) = v23;
    *(void *)(v18 + 112) = v26;
    *(void *)(v18 + 120) = v27;
    uint64_t v28 = sub_1ACE761B8();
    *(void *)(v18 + 176) = v22;
    *(void *)(v18 + 184) = v23;
    *(void *)(v18 + 152) = v28;
    *(void *)(v18 + 160) = v29;
    int v30 = v11;
    uint64_t v31 = sub_1ACE75008();
    *(void *)(v18 + 216) = sub_1ACA50D4C(0, &qword_1EB7706E8);
    *(void *)(v18 + 224) = sub_1ACC42D88(&qword_1EB7706F0, &qword_1EB7706E8);
    *(void *)(v18 + 192) = v31;
    uint64_t v32 = (void *)sub_1ACE76B88();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1ACEA40E0;
    *(void *)(v33 + 32) = _sSo9MTEpisodeC18PodcastsFoundationE24predicateForStoreEpisodeSo11NSPredicateCyFZ_0();
    *(void *)(v33 + 40) = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_predicateForAllUnbookmarkedEpisodes);
    *(void *)(v33 + 48) = sub_1ACDF7DA8(v43);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1ACE8F1F0;
    *(void *)(v34 + 32) = [v32 NOT];
    EpisodeSo11NSPredicateCyFZ_0 = (void *)_sSo9MTEpisodeC18PodcastsFoundationE25predicateForUpNextEpisodeSo11NSPredicateCyFZ_0();
    id v36 = [EpisodeSo11NSPredicateCyFZ_0 NOT];

    *(void *)(v34 + 40) = v36;
    uint64_t v44 = v34;
    sub_1ACE76598();
    uint64_t v37 = (void *)sub_1ACE76558();
    swift_bridgeObjectRelease();
    uint64_t v38 = self;
    id v39 = objc_msgSend(v38, sel_orPredicateWithSubpredicates_, v37);

    *(void *)(v33 + 56) = v39;
    uint64_t v44 = v33;
    sub_1ACE76598();
    uint64_t v40 = (void *)sub_1ACE76558();
    swift_bridgeObjectRelease();
    id v41 = objc_msgSend(v38, sel_andPredicateWithSubpredicates_, v40);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v30, v8);
    return v41;
  }
}

uint64_t MTEpisodeTypeFilter.encode(to:)(void *a1)
{
  return sub_1ACDF6FA8(a1);
}

uint64_t MTEpisodeTypeFilter.init(from:)(void *a1)
{
  return sub_1ACDF7054(a1);
}

uint64_t sub_1ACDF6F60@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACDF7110(a1, a2);
}

uint64_t sub_1ACDF6F78(void *a1)
{
  return sub_1ACDF71D0(a1);
}

uint64_t MTEpisodePubDateLimit.encode(to:)(void *a1)
{
  return sub_1ACDF6FA8(a1);
}

uint64_t sub_1ACDF6FA8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE77918();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t MTEpisodePubDateLimit.init(from:)(void *a1)
{
  return sub_1ACDF7054(a1);
}

uint64_t sub_1ACDF7054(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_1ACE77888();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1ACDF7110@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  uint64_t v5 = sub_1ACE77888();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v5;
  return result;
}

uint64_t sub_1ACDF71D0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE77918();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t sub_1ACDF7264(unint64_t a1)
{
  return sub_1ACDF75A8(a1, (unint64_t *)&qword_1EB768F50, 0x1E4F28ED0, (unint64_t *)&qword_1EB76E300, (void (*)(id *, uint64_t))sub_1ACD2FDB0);
}

uint64_t sub_1ACDF7294(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1ACDF820C();
  uint64_t result = sub_1ACE769C8();
  uint64_t v11 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      long long v5 = *(_OWORD *)(v4 + 48);
      id v12[2] = *(_OWORD *)(v4 + 32);
      v12[3] = v5;
      uint64_t v13 = *(void *)(v4 + 64);
      long long v6 = *(_OWORD *)(v4 + 16);
      v12[0] = *(_OWORD *)v4;
      v12[1] = v6;
      sub_1ACB99C68(v12);
      sub_1ACD30B1C((uint64_t)v10, (uint64_t)v12);
      uint64_t v7 = v10[4];
      uint64_t v8 = v10[5];
      unint64_t v9 = v10[6];
      swift_bridgeObjectRelease();
      sub_1ACA50D9C(v7, v8, v9);
      v4 += 72;
      --v2;
    }
    while (v2);
    return v11;
  }
  return result;
}

uint64_t sub_1ACDF7368(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1ACA798F8();
  uint64_t result = sub_1ACE769C8();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_1ACD30438(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1ACDF73DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1ACDF81B8();
  uint64_t result = sub_1ACE769C8();
  uint64_t v9 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 41);
    do
    {
      uint64_t v5 = *(void *)(v4 - 9);
      __int16 v6 = *(v4 - 1);
      __int16 v7 = *v4;
      v4 += 16;
      sub_1ACD30F04((uint64_t)v8, v5, v6 | (v7 << 8));
      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_1ACDF745C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1ACE769C8();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_1ACD30724(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1ACDF74D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1ACDF8164();
  uint64_t result = sub_1ACE769C8();
  uint64_t v10 = result;
  if (v2)
  {
    uint64_t v4 = (char *)(a1 + 48);
    do
    {
      uint64_t v5 = (void *)*((void *)v4 - 2);
      uint64_t v6 = *((void *)v4 - 1);
      char v7 = *v4;
      v4 += 24;
      sub_1ACA50CB8(v5, v6, v7);
      sub_1ACD31B70((uint64_t)v8, v5, v6, v7);
      sub_1ACA50D28(v8[0], (uint64_t)v8[1], v9);
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

uint64_t sub_1ACDF7578(unint64_t a1)
{
  return sub_1ACDF75A8(a1, &qword_1EB76E0F0, 0x1E4F1C9E8, (unint64_t *)&unk_1E99F3EA0, (void (*)(id *, uint64_t))sub_1ACD31EC4);
}

uint64_t sub_1ACDF75A8(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  sub_1ACA50D4C(0, a2);
  sub_1ACC42D88(a4, a2);
  uint64_t result = sub_1ACE769C8();
  uint64_t v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1ACE77508();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v11) {
      return v17;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v11) {
      return v17;
    }
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        uint64_t v13 = MEMORY[0x1AD119490](i, a1);
        a5(&v16, v13);
      }
    }
    else
    {
      os_log_type_t v14 = (void **)(a1 + 32);
      do
      {
        uint64_t v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACDF773C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1ACDF8110();
  uint64_t result = sub_1ACE769C8();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1ACD32190(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1ACDF77B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1ACE769C8();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      sub_1ACA6A09C(v4, (uint64_t)v5);
      sub_1ACD3232C((uint64_t)v6, (uint64_t)v5);
      sub_1ACA6A0F8((uint64_t)v6);
      v4 += 40;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t _sSo9MTEpisodeC18PodcastsFoundationE31predicateForEpisodesNotMatching19bootstrapGenerationSo11NSPredicateC0C04UUIDV_tFZ_0()
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1ACE84470;
  uint64_t v1 = sub_1ACE761B8();
  uint64_t v3 = v2;
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v5 = sub_1ACADC3A8();
  *(void *)(v0 + 64) = v5;
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v3;
  uint64_t v6 = sub_1ACE761B8();
  *(void *)(v0 + 96) = v4;
  *(void *)(v0 + 104) = v5;
  *(void *)(v0 + 72) = v6;
  *(void *)(v0 + 80) = v7;
  uint64_t v8 = sub_1ACE750D8();
  *(void *)(v0 + 136) = sub_1ACA50D4C(0, &qword_1EB76E1E0);
  *(void *)(v0 + 144) = sub_1ACC42D88(&qword_1EB76E1E8, &qword_1EB76E1E0);
  *(void *)(v0 + 112) = v8;
  return sub_1ACE76B88();
}

uint64_t _sSo9MTEpisodeC18PodcastsFoundationE23predicateForAllEpisodes10forPodcastSo11NSPredicateCSo9MTPodcastC_tFZ_0(void *a1)
{
  id v1 = objc_msgSend(a1, sel_objectID);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ACE84820;
  uint64_t v3 = sub_1ACE761B8();
  uint64_t v5 = v4;
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = sub_1ACADC3A8();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v5;
  *(void *)(v2 + 96) = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
  *(void *)(v2 + 104) = sub_1ACC42D88((unint64_t *)&qword_1E99F26D8, (unint64_t *)&qword_1EB768ED8);
  *(void *)(v2 + 72) = v1;
  id v6 = v1;
  uint64_t v7 = sub_1ACE76B88();

  return v7;
}

id _sSo9MTEpisodeC18PodcastsFoundationE43predicateForAutomaticallyDownloadedEpisodesSo11NSPredicateCyFZ_0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1ACE8F1F0;
  id v1 = self;
  *(void *)(v0 + 32) = objc_msgSend(v1, sel_predicateForDownloaded_excludeHidden_, 1, 1);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ACE8F1F0;
  *(void *)(v2 + 32) = objc_msgSend(v1, sel_predicateForDownloadBehavior_, 0);
  *(void *)(v2 + 40) = objc_msgSend(v1, sel_predicateForDownloadBehavior_, 1);
  sub_1ACE76598();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  uint64_t v3 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_orPredicateWithSubpredicates_, v3);

  *(void *)(v0 + 40) = v5;
  sub_1ACE76598();
  id v6 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v4, sel_andPredicateWithSubpredicates_, v6);

  return v7;
}

id _sSo9MTEpisodeC18PodcastsFoundationE24predicateForStoreEpisodeSo11NSPredicateCyFZ_0()
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1ACE84470;
  uint64_t v1 = sub_1ACE761B8();
  uint64_t v3 = v2;
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v5 = sub_1ACADC3A8();
  *(void *)(v0 + 64) = v5;
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v3;
  uint64_t v6 = sub_1ACE761B8();
  *(void *)(v0 + 96) = v4;
  *(void *)(v0 + 104) = v5;
  *(void *)(v0 + 72) = v6;
  *(void *)(v0 + 80) = v7;
  uint64_t v8 = MEMORY[0x1E4FBC240];
  *(void *)(v0 + 136) = MEMORY[0x1E4FBC1C8];
  *(void *)(v0 + 144) = v8;
  *(void *)(v0 + 112) = 1000000000000;
  unint64_t v9 = (void *)sub_1ACE76B88();
  id v10 = objc_msgSend(self, sel_notPredicateWithSubpredicate_, v9);

  return v10;
}

id sub_1ACDF7DA8(uint64_t a1)
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ACE8A540;
  uint64_t v3 = sub_1ACE761B8();
  uint64_t v5 = v4;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v7 = sub_1ACADC3A8();
  *(void *)(v2 + 64) = v7;
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v5;
  uint64_t v8 = sub_1ACE761B8();
  *(void *)(v2 + 96) = v6;
  *(void *)(v2 + 104) = v7;
  *(void *)(v2 + 72) = v8;
  *(void *)(v2 + 80) = v9;
  uint64_t v10 = MEMORY[0x1E4FBC1C8];
  uint64_t v11 = MEMORY[0x1E4FBC240];
  *(void *)(v2 + 136) = MEMORY[0x1E4FBC1C8];
  *(void *)(v2 + 144) = v11;
  *(void *)(v2 + 112) = 0x100000001;
  *(void *)(v2 + 176) = v10;
  *(void *)(v2 + 184) = v11;
  *(void *)(v2 + 152) = a1;
  *(void *)(v2 + 216) = v10;
  *(void *)(v2 + 224) = v11;
  *(void *)(v2 + 192) = 0;
  uint64_t v12 = (void *)sub_1ACE76B88();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1ACE84470;
  uint64_t v14 = sub_1ACE761B8();
  *(void *)(v13 + 56) = v6;
  *(void *)(v13 + 64) = v7;
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v15;
  uint64_t v16 = sub_1ACE761B8();
  *(void *)(v13 + 96) = v6;
  *(void *)(v13 + 104) = v7;
  *(void *)(v13 + 72) = v16;
  *(void *)(v13 + 80) = v17;
  *(void *)(v13 + 136) = v10;
  *(void *)(v13 + 144) = v11;
  *(void *)(v13 + 112) = 0;
  uint64_t v18 = (void *)sub_1ACE76B88();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1ACE8F1F0;
  *(void *)(v19 + 32) = v12;
  *(void *)(v19 + 40) = v18;
  sub_1ACE76598();
  id v20 = v12;
  id v21 = v18;
  uint64_t v22 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  unint64_t v23 = self;
  id v24 = objc_msgSend(v23, sel_orPredicateWithSubpredicates_, v22);

  id v25 = objc_msgSend(v23, sel_notPredicateWithSubpredicate_, v24);
  return v25;
}

uint64_t _sSo9MTEpisodeC18PodcastsFoundationE25predicateForUpNextEpisodeSo11NSPredicateCyFZ_0()
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1ACE84470;
  uint64_t v1 = sub_1ACE761B8();
  uint64_t v3 = v2;
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v5 = sub_1ACADC3A8();
  *(void *)(v0 + 64) = v5;
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v3;
  uint64_t v6 = sub_1ACE761B8();
  *(void *)(v0 + 96) = v4;
  *(void *)(v0 + 104) = v5;
  *(void *)(v0 + 72) = v6;
  *(void *)(v0 + 80) = v7;
  uint64_t v8 = sub_1ACE761B8();
  *(void *)(v0 + 136) = v4;
  *(void *)(v0 + 144) = v5;
  *(void *)(v0 + 112) = v8;
  *(void *)(v0 + 120) = v9;
  return sub_1ACE76B88();
}

unint64_t sub_1ACDF8110()
{
  unint64_t result = qword_1E99F5FE8;
  if (!qword_1E99F5FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5FE8);
  }
  return result;
}

unint64_t sub_1ACDF8164()
{
  unint64_t result = qword_1EB770190;
  if (!qword_1EB770190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770190);
  }
  return result;
}

unint64_t sub_1ACDF81B8()
{
  unint64_t result = qword_1EB770B48;
  if (!qword_1EB770B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770B48);
  }
  return result;
}

unint64_t sub_1ACDF820C()
{
  unint64_t result = qword_1EB76CBC0;
  if (!qword_1EB76CBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76CBC0);
  }
  return result;
}

uint64_t sub_1ACDF82DC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACDF8390(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___MTSeasonFeedRequest_seasons);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACDF83E4(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR___MTSeasonFeedRequest_seasons);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1ACDF8450())()
{
  return j__swift_endAccess;
}

id SeasonFeedRequest.__allocating_init(storeID:seasons:)(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR___MTSeasonFeedRequest_seasons] = a2;
  *(void *)&v5[OBJC_IVAR___MTPartialFeedRequest_limit] = 25;
  *(void *)&v5[OBJC_IVAR___MTPartialFeedRequest_sections] = MEMORY[0x1E4FBC860];
  v5[OBJC_IVAR___MTPartialFeedRequest_showTypeIsSerial] = 0;
  *(void *)&v5[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = 0;
  *(void *)&v5[OBJC_IVAR___MTBaseFeedRequest_storeID] = a1;
  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for BaseFeedRequest();
  return objc_msgSendSuper2(&v7, sel_init);
}

id SeasonFeedRequest.init(storeID:seasons:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR___MTSeasonFeedRequest_seasons] = a2;
  *(void *)&v2[OBJC_IVAR___MTPartialFeedRequest_limit] = 25;
  *(void *)&v2[OBJC_IVAR___MTPartialFeedRequest_sections] = MEMORY[0x1E4FBC860];
  v2[OBJC_IVAR___MTPartialFeedRequest_showTypeIsSerial] = 0;
  *(void *)&v2[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = 0;
  *(void *)&v2[OBJC_IVAR___MTBaseFeedRequest_storeID] = a1;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for BaseFeedRequest();
  return objc_msgSendSuper2(&v4, sel_init);
}

int64_t sub_1ACDF86C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = 0;
  memset(v41, 0, sizeof(v41));
  char v43 = 4;
  char v40 = 1;
  char v39 = 1;
  char v38 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769498);
  uint64_t inited = swift_initStackObject();
  long long v33 = xmmword_1ACE843F0;
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(unsigned char *)(inited + 32) = 2;
  *(void *)(inited + 40) = &unk_1F037FF48;
  unint64_t v32 = sub_1ACA36AC8(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5FF8);
  uint64_t v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = v33;
  *(unsigned char *)(v8 + 32) = 0;
  uint64_t v9 = (void *)(v2 + OBJC_IVAR___MTPartialFeedRequest_limit);
  swift_beginAccess();
  *(void *)(v8 + 40) = *v9;
  unint64_t v10 = sub_1ACA36AE8(v8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = v33;
  uint64_t v35 = *(void *)(v2 + OBJC_IVAR___MTBaseFeedRequest_storeID);
  *(void *)(v11 + 32) = sub_1ACE777C8();
  *(void *)(v11 + 40) = v12;
  v37[0] = 1;
  sub_1ACDF8B88();
  unint64_t v31 = v10;
  if (v13)
  {
    uint64_t v18 = a1;
    uint64_t v20 = MEMORY[0x1E4FBC860];
    goto LABEL_5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0B50);
  uint64_t v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = v33;
  *(unsigned char *)(v14 + 32) = 1;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = v33;
  uint64_t v35 = 0;
  unint64_t v36 = 0xE000000000000000;
  int64_t result = sub_1ACDF8B88();
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = a1;
    int64_t v34 = result;
    sub_1ACE777C8();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    unint64_t v19 = v36;
    *(void *)(v15 + 32) = v35;
    *(void *)(v15 + 40) = v19;
    *(void *)(v14 + 40) = v15;
    uint64_t v20 = v14;
LABEL_5:
    unint64_t v21 = sub_1ACA3623C(v20);
    uint64_t v22 = MEMORY[0x1E4FBC860];
    LOBYTE(v35) = 1;
    uint64_t v23 = sub_1ACE74F28();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v6, 1, 1, v23);
    unint64_t v24 = sub_1ACA35F90(v22);
    unint64_t v25 = sub_1ACA360BC(v22);
    unint64_t v26 = sub_1ACA360BC(v22);
    *((void *)&v30 + 1) = sub_1ACA360FC(v22);
    *(void *)&long long v30 = v21;
    *((void *)&v29 + 1) = v22;
    *((void *)&v28 + 1) = v22;
    *(void *)&long long v29 = v22;
    *((void *)&v27 + 1) = v25;
    *(void *)&long long v28 = v26;
    *(void *)&long long v27 = v22;
    return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(v41, &v40, &v39, &v38, v32, v24, v31, v22, v18, v27, v28, v29, v11, v37, 0, 1, v30, 0, 1,
             (char *)&v35,
             0,
             (uint64_t)v6,
             0,
             0,
             0,
             0,
             0,
             v22,
             0,
             0,
             2);
  }
  __break(1u);
  return result;
}

char *sub_1ACDF8A3C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA394B0(a3, (uint64_t)v8);
  objc_allocWithZone((Class)type metadata accessor for SeasonFeedResponse());
  swift_bridgeObjectRetain();
  return SeasonFeedResponse.init(jsonArray:request:params:)(a1, (char *)a2, (uint64_t)v8);
}

char *SeasonFeedResponse.__allocating_init(jsonArray:request:params:)(uint64_t a1, char *a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return SeasonFeedResponse.init(jsonArray:request:params:)(a1, a2, a3);
}

uint64_t sub_1ACDF8B3C()
{
  uint64_t v1 = v0 + OBJC_IVAR___MTSeasonFeedRequest_seasons;
  swift_beginAccess();
  return *(void *)(*(void *)v1 + 16);
}

int64_t sub_1ACDF8B88()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___MTSeasonFeedRequest_seasons);
  swift_beginAccess();
  uint64_t v2 = *v1;
  unint64_t v3 = *(void *)(*v1 + 16);
  if (!v3) {
    return 0;
  }
  int64_t result = *(void *)(v2 + 32);
  unint64_t v5 = v3 - 1;
  if (v3 == 1) {
    return result;
  }
  if (v3 >= 5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL | 1;
    int64x2_t v7 = vdupq_n_s64(result);
    uint64_t v8 = (int64x2_t *)(v2 + 56);
    unint64_t v9 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    int64x2_t v10 = v7;
    do
    {
      int64x2_t v7 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v7, v8[-1]), (int8x16_t)v7, (int8x16_t)v8[-1]);
      int64x2_t v10 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v10, *v8), (int8x16_t)v10, *(int8x16_t *)v8);
      v8 += 2;
      v9 -= 4;
    }
    while (v9);
    int8x16_t v11 = vbslq_s8((int8x16_t)vcgtq_s64(v7, v10), (int8x16_t)v7, (int8x16_t)v10);
    uint64_t v12 = vextq_s8(v11, v11, 8uLL).u64[0];
    int64_t result = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v11.i64[0], v12), *(int8x8_t *)v11.i8, (int8x8_t)v12);
    if (v5 == (v5 & 0xFFFFFFFFFFFFFFFCLL)) {
      return result;
    }
  }
  else
  {
    unint64_t v6 = 1;
  }
  unint64_t v13 = v3 - v6;
  uint64_t v14 = (int64_t *)(v2 + 8 * v6 + 32);
  do
  {
    int64_t v16 = *v14++;
    int64_t v15 = v16;
    if (result <= v16) {
      int64_t result = v15;
    }
    --v13;
  }
  while (v13);
  return result;
}

uint64_t type metadata accessor for SeasonFeedResponse()
{
  uint64_t result = qword_1E99F6008;
  if (!qword_1E99F6008) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void SeasonFeedRequest.__allocating_init(storeID:)()
{
}

void SeasonFeedRequest.init(storeID:)()
{
}

uint64_t sub_1ACDF8D58()
{
  return swift_bridgeObjectRelease();
}

id SeasonFeedRequest.__deallocating_deinit(uint64_t a1)
{
  return sub_1ACDF9B6C(a1, type metadata accessor for SeasonFeedRequest);
}

char *SeasonFeedResponse.init(jsonArray:request:params:)(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v9 = (char *)&v50[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v50[-1] - v11;
  v3[OBJC_IVAR___MTSeasonFeedResponse_seasonHasMoreEpisodes] = 0;
  sub_1ACA394B0(a3, (uint64_t)&v50[-1] - v11);
  sub_1ACA394B0((uint64_t)v12, (uint64_t)v9);
  unint64_t v13 = (void **)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(void *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = a1;
  *(void *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = a2;
  sub_1ACA394B0((uint64_t)v9, (uint64_t)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params]);
  uint64_t v14 = *(void **)&a2[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  int64_t v15 = *v13;
  *unint64_t v13 = v14;
  int64_t v16 = v3;
  char v17 = a2;
  id v18 = v14;

  uint64_t v19 = MEMORY[0x1E4FBC860];
  unint64_t v20 = sub_1ACA3A048(MEMORY[0x1E4FBC860]);
  unint64_t v21 = &v16[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(void *)unint64_t v21 = v19;
  *((void *)v21 + 1) = v20;
  *((void *)v21 + 2) = v19;
  *((void *)v21 + 3) = 0;

  uint64_t v22 = (objc_class *)type metadata accessor for BaseFeedResponse();
  v54.receiver = v16;
  v54.super_class = v22;
  uint64_t v23 = (char *)objc_msgSendSuper2(&v54, sel_init);
  sub_1ACA39598((uint64_t)v9);
  sub_1ACA39598((uint64_t)v12);
  unint64_t v24 = &v23[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response];
  swift_beginAccess();
  if (*(void *)(*(void *)v24 + 16))
  {
    uint64_t v25 = *(void *)(*(void *)v24 + 32);
    v50[0] = 1635017060;
    v50[1] = 0xE400000000000000;
    unint64_t v26 = v23;
    swift_bridgeObjectRetain();
    sub_1ACE771F8();
    if (*(void *)(v25 + 16) && (unint64_t v27 = sub_1ACA65B48((uint64_t)v51), (v28 & 1) != 0))
    {
      sub_1ACA33128(*(void *)(v25 + 56) + 32 * v27, (uint64_t)&v52);
    }
    else
    {
      long long v52 = 0u;
      long long v53 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1ACA6A0F8((uint64_t)v51);
    if (*((void *)&v53 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772250);
      if (swift_dynamicCast())
      {
        if (!*(void *)(v50[0] + 16))
        {
LABEL_43:

          swift_bridgeObjectRelease();
          goto LABEL_44;
        }
        uint64_t v29 = *(void *)(v50[0] + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        strcpy((char *)v50, "attributes");
        BYTE3(v50[1]) = 0;
        HIDWORD(v50[1]) = -369098752;
        sub_1ACE771F8();
        if (*(void *)(v29 + 16) && (unint64_t v30 = sub_1ACA65B48((uint64_t)v51), (v31 & 1) != 0))
        {
          sub_1ACA33128(*(void *)(v29 + 56) + 32 * v30, (uint64_t)&v52);
        }
        else
        {
          long long v52 = 0u;
          long long v53 = 0u;
        }
        sub_1ACA6A0F8((uint64_t)v51);
        if (*((void *)&v53 + 1))
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E020);
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_28;
          }
          uint64_t v32 = v50[0];
          strcpy((char *)v50, "episodeCount");
          BYTE5(v50[1]) = 0;
          HIWORD(v50[1]) = -5120;
          sub_1ACE771F8();
          if (*(void *)(v32 + 16) && (unint64_t v33 = sub_1ACA65B48((uint64_t)v51), (v34 & 1) != 0))
          {
            sub_1ACA33128(*(void *)(v32 + 56) + 32 * v33, (uint64_t)&v52);
          }
          else
          {
            long long v52 = 0u;
            long long v53 = 0u;
          }
          swift_bridgeObjectRelease();
          sub_1ACA6A0F8((uint64_t)v51);
          if (*((void *)&v53 + 1))
          {
            if (swift_dynamicCast())
            {
              uint64_t v35 = v50[0];
              uint64_t v36 = *(void *)(a3 + 64);
              if (*(void *)(v36 + 16))
              {
                unint64_t v37 = sub_1ACA65E84(0);
                uint64_t v38 = v35;
                char v39 = &OBJC_IVAR___MTSeasonFeedResponse_seasonHasMoreEpisodes;
                if (v40) {
                  uint64_t v38 = *(void *)(*(void *)(v36 + 56) + 8 * v37);
                }
              }
              else
              {
                uint64_t v38 = v50[0];
                char v39 = &OBJC_IVAR___MTSeasonFeedResponse_seasonHasMoreEpisodes;
              }
              v26[*v39] = v38 < v35;
            }
LABEL_28:
            strcpy((char *)v50, "relationships");
            HIWORD(v50[1]) = -4864;
            sub_1ACE771F8();
            if (*(void *)(v29 + 16) && (unint64_t v41 = sub_1ACA65B48((uint64_t)v51), (v42 & 1) != 0))
            {
              sub_1ACA33128(*(void *)(v29 + 56) + 32 * v41, (uint64_t)&v52);
            }
            else
            {
              long long v52 = 0u;
              long long v53 = 0u;
            }
            swift_bridgeObjectRelease();
            sub_1ACA6A0F8((uint64_t)v51);
            if (*((void *)&v53 + 1))
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E020);
              if ((swift_dynamicCast() & 1) == 0) {
                goto LABEL_42;
              }
              uint64_t v43 = v50[0];
              strcpy((char *)v50, "episodes");
              BYTE1(v50[1]) = 0;
              WORD1(v50[1]) = 0;
              HIDWORD(v50[1]) = -402653184;
              sub_1ACE771F8();
              if (*(void *)(v43 + 16) && (unint64_t v44 = sub_1ACA65B48((uint64_t)v51), (v45 & 1) != 0))
              {
                sub_1ACA33128(*(void *)(v43 + 56) + 32 * v44, (uint64_t)&v52);
              }
              else
              {
                long long v52 = 0u;
                long long v53 = 0u;
              }
              swift_bridgeObjectRelease();
              sub_1ACA6A0F8((uint64_t)v51);
              if (*((void *)&v53 + 1))
              {
                if (swift_dynamicCast())
                {
                  uint64_t v46 = v50[0];
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E490);
                  uint64_t v47 = swift_allocObject();
                  *(_OWORD *)(v47 + 16) = xmmword_1ACE843F0;
                  *(void *)(v47 + 32) = v46;
                  *(void *)unint64_t v24 = v47;
                  goto LABEL_43;
                }
LABEL_42:
                *(void *)unint64_t v24 = v19;
                goto LABEL_43;
              }
            }
            sub_1ACA65828((uint64_t)&v52);
            goto LABEL_42;
          }
        }
        sub_1ACA65828((uint64_t)&v52);
        goto LABEL_28;
      }
    }
    else
    {

      sub_1ACA65828((uint64_t)&v52);
    }
  }
  else
  {
  }
LABEL_44:
  sub_1ACA39598(a3);
  return v23;
}

uint64_t type metadata accessor for SeasonFeedRequest()
{
  return self;
}

char *sub_1ACDF93F4(unint64_t a1)
{
  uint64_t v3 = sub_1ACDF9738(a1);
  uint64_t v5 = v4;
  unint64_t v6 = (objc_class *)type metadata accessor for GenericDataSourceSection();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  uint64_t v8 = (uint64_t (**)())&v7[OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock];
  *uint64_t v8 = sub_1ACA58428;
  v8[1] = 0;
  unint64_t v9 = (uint64_t *)&v7[OBJC_IVAR___MTGenericDataSourceSection_storedTitle];
  *unint64_t v9 = v3;
  v9[1] = v5;
  v15.receiver = v7;
  v15.super_class = v6;
  uint64_t v10 = (char *)objc_msgSendSuper2(&v15, sel_init);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  uint64_t v12 = (uint64_t (**)())&v10[OBJC_IVAR___MTGenericDataSourceSection_shouldIncludeSeeAllBlock];
  swift_beginAccess();
  *uint64_t v12 = sub_1ACDF9BE0;
  v12[1] = (uint64_t (*)())v11;
  id v13 = v1;
  swift_release();
  return v10;
}

uint64_t sub_1ACDF94F8(uint64_t a1, unint64_t a2)
{
  type metadata accessor for PartialFeedRequest();
  uint64_t result = swift_dynamicCastClassUnconditional();
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v5 = result + OBJC_IVAR___MTPartialFeedRequest_sections;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v5 + 16) <= a2)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v6 = *(void *)(*(void *)v5 + 8 * a2 + 32);
  if (!v6) {
    return 0;
  }
  if (v6 != 1) {
    goto LABEL_12;
  }
  if (*(unsigned char *)(a1 + OBJC_IVAR___MTSeasonFeedResponse_seasonHasMoreEpisodes)) {
    return 1;
  }
  type metadata accessor for SeasonFeedRequest();
  uint64_t v7 = swift_dynamicCastClassUnconditional() + OBJC_IVAR___MTSeasonFeedRequest_seasons;
  swift_beginAccess();
  return *(void *)(*(void *)v7 + 16) > 1uLL;
}

uint64_t sub_1ACDF9738(unint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772E38);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for EyebrowBuilder.ListContext(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request];
  type metadata accessor for PartialFeedRequest();
  uint64_t v10 = swift_dynamicCastClassUnconditional();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v11 = v10 + OBJC_IVAR___MTPartialFeedRequest_sections;
  swift_beginAccess();
  if (*(void *)(*(void *)v11 + 16) <= a1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v12 = *(void *)(*(void *)v11 + 8 * a1 + 32);
  if (!v12)
  {
    sub_1ACA7B190(a1, 0);
    type metadata accessor for ServerPodcastEpisode();
    id v13 = (void *)swift_dynamicCastClassUnconditional();
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v5, 1, 1, v14);
    type metadata accessor for EyebrowBuilder(0);
    uint64_t v15 = swift_allocObject();
    uint64_t v1 = v13;
    uint64_t v16 = sub_1ACA7C1B4((uint64_t)v1, 1, (uint64_t)v8, 0, 1, 0, 0, (uint64_t)v5, 1, 0, v15);
    swift_beginAccess();
    uint64_t v17 = *(void *)(v16 + 16);
    if (*(void *)(v16 + 24))
    {
      swift_bridgeObjectRetain();
LABEL_15:
      swift_release();

      return v17;
    }
    if (qword_1EB7730A8 == -1)
    {
LABEL_14:
      uint64_t v17 = sub_1ACE74C48();
      goto LABEL_15;
    }
LABEL_20:
    swift_once();
    goto LABEL_14;
  }
  if (v12 != 1)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  type metadata accessor for SeasonFeedRequest();
  if (!swift_dynamicCastClass()) {
    return 0;
  }
  int64_t v18 = sub_1ACDF8B88();
  if (v19) {
    return 0;
  }
  int64_t v20 = v18;
  uint64_t v21 = qword_1EB7730A8;
  id v22 = v9;
  if (v21 != -1) {
    swift_once();
  }
  sub_1ACE74C48();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v23 + 16) = xmmword_1ACE843F0;
  uint64_t v25 = MEMORY[0x1E4FBB5C8];
  *(void *)(v23 + 56) = v24;
  *(void *)(v23 + 64) = v25;
  *(void *)(v23 + 32) = v20;
  uint64_t v17 = sub_1ACE76188();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

id SeasonFeedResponse.__deallocating_deinit()
{
  return sub_1ACDF9B6C(0, type metadata accessor for SeasonFeedResponse);
}

id sub_1ACDF9B6C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_1ACDF9BA8()
{
  return swift_deallocObject();
}

uint64_t sub_1ACDF9BE0()
{
  return sub_1ACDF94F8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1ACDF9BE8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___MTSeasonFeedRequest_seasons);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for SeasonFeedRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SeasonFeedRequest);
}

uint64_t dispatch thunk of SeasonFeedRequest.seasons.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of SeasonFeedRequest.seasons.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of SeasonFeedRequest.seasons.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of SeasonFeedRequest.__allocating_init(storeID:seasons:)()
{
  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t dispatch thunk of SeasonFeedRequest.numberOfSeasons.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of SeasonFeedRequest.latestSeason.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t sub_1ACDF9DBC()
{
  return type metadata accessor for SeasonFeedResponse();
}

uint64_t sub_1ACDF9DC4()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for SeasonFeedResponse(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SeasonFeedResponse);
}

uint64_t MetricsWidgetContext.widgetID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsWidgetContext.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsWidgetContext.size.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t MetricsWidgetContext.subjectID.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall MetricsWidgetContext.init(widgetID:name:size:subjectID:)(PodcastsFoundation::MetricsWidgetContext *__return_ptr retstr, Swift::String widgetID, Swift::String name, Swift::Int size, Swift::String_optional subjectID)
{
  retstr->widgetID = widgetID;
  retstr->name = name;
  retstr->size = size;
  retstr->subjectID = subjectID;
}

uint64_t sub_1ACDF9ED8()
{
  uint64_t result = 0x4449746567646977;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701667182;
      break;
    case 2:
      uint64_t result = 1702521203;
      break;
    case 3:
      uint64_t result = 0x497463656A627573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACDF9F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACDFAE2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACDF9F84(uint64_t a1)
{
  unint64_t v2 = sub_1ACDFA978();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACDF9FC0(uint64_t a1)
{
  unint64_t v2 = sub_1ACDFA978();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MetricsWidgetContext.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7696A0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[2];
  void v15[4] = v1[3];
  v15[5] = v8;
  uint64_t v9 = v1[4];
  _OWORD v15[2] = v1[5];
  v15[3] = v9;
  v15[1] = v1[6];
  uint64_t v10 = a1[3];
  uint64_t v11 = a1;
  uint64_t v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_1ACDFA978();
  sub_1ACE77C78();
  char v19 = 0;
  sub_1ACE77748();
  if (!v2)
  {
    char v18 = 1;
    sub_1ACE77748();
    char v17 = 2;
    sub_1ACE77778();
    char v16 = 3;
    sub_1ACE776E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

uint64_t MetricsWidgetContext.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771C00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACDFA978();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v28 = 0;
  uint64_t v9 = sub_1ACE77658();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v27 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1ACE77658();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v26 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  uint64_t v21 = sub_1ACE77688();
  char v25 = 3;
  uint64_t v15 = sub_1ACE775F8();
  uint64_t v18 = v17;
  uint64_t v19 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v20 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v20;
  a2[4] = v21;
  a2[5] = v19;
  a2[6] = v18;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACDFA4AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return MetricsWidgetContext.init(from:)(a1, a2);
}

uint64_t sub_1ACDFA4C4(void *a1)
{
  return MetricsWidgetContext.encode(to:)(a1);
}

Swift::String_optional __swiftcall MetricsWidgetContext.encodeToString()()
{
  sub_1ACE74928();
  swift_allocObject();
  sub_1ACE74918();
  sub_1ACDFA9CC();
  uint64_t v0 = sub_1ACE74908();
  unint64_t v2 = v1;
  swift_release();
  uint64_t v3 = sub_1ACE74F78();
  uint64_t v5 = v4;
  sub_1ACA50850(v0, v2);
  uint64_t v6 = v3;
  uint64_t v7 = v5;
  result.value._object = v7;
  result.value._countAndFlagsBits = v6;
  return result;
}

double static MetricsWidgetContext.decodeFromString(_:)@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (!a1 || (uint64_t v3 = sub_1ACE74F48(), v4 >> 60 == 15))
  {
    *(void *)(a2 + 48) = 0;
    double result = 0.0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  else
  {
    uint64_t v5 = v3;
    unint64_t v6 = v4;
    sub_1ACE748C8();
    swift_allocObject();
    sub_1ACE748B8();
    sub_1ACDFAA20();
    sub_1ACE748A8();
    sub_1ACAB2EF0(v5, v6);
    swift_release();
    *(_OWORD *)a2 = v8;
    *(void *)(a2 + 16) = v9;
    *(void *)(a2 + 24) = v10;
    double result = *(double *)&v11;
    *(_OWORD *)(a2 + 32) = v11;
    *(void *)(a2 + 48) = v12;
  }
  return result;
}

unint64_t MetricsWidgetContext.metricsDictionary.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = v0[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4B0);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 32) = 0x6449746567646977;
  *(void *)(inited + 40) = 0xE800000000000000;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(inited + 16) = xmmword_1ACE84470;
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v1;
  *(void *)(inited + 72) = v9;
  *(void *)(inited + 80) = 1701667182;
  *(void *)(inited + 88) = 0xE400000000000000;
  *(void *)(inited + 96) = v4;
  *(void *)(inited + 104) = v3;
  *(void *)(inited + 120) = v9;
  *(void *)(inited + 128) = 1702521203;
  *(void *)(inited + 168) = MEMORY[0x1E4FBB550];
  *(void *)(inited + 136) = 0xE400000000000000;
  *(void *)(inited + 144) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1ACA3625C(inited);
  unint64_t v18 = v10;
  if (v7)
  {
    unint64_t v11 = v10;
    uint64_t v17 = v9;
    *(void *)&long long v16 = v5;
    *((void *)&v16 + 1) = v7;
    sub_1ACA3AA44(&v16, v15);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1ACD0D078(v15, 0x497463656A627573, 0xE900000000000064, isUniquelyReferenced_nonNull_native);
    unint64_t v13 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ACA69138(0x497463656A627573, 0xE900000000000064, &v16);
    sub_1ACA65828((uint64_t)&v16);
    return v18;
  }
  return v13;
}

uint64_t _s18PodcastsFoundation20MetricsWidgetContextV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v11 = a2[6];
  if (*a1 == *a2 && a1[1] == a2[1] || (char v12 = sub_1ACE77848(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8)
    {
      if (v4 != v10) {
        return 0;
      }
LABEL_10:
      if (v6)
      {
        if (!v11 || (v5 != v9 || v6 != v11) && (sub_1ACE77848() & 1) == 0) {
          return 0;
        }
      }
      else if (v11)
      {
        return 0;
      }
      return 1;
    }
    char v14 = sub_1ACE77848();
    uint64_t result = 0;
    if ((v14 & 1) != 0 && v4 == v10) {
      goto LABEL_10;
    }
  }
  return result;
}

unint64_t sub_1ACDFA978()
{
  unint64_t result = qword_1EB772FA0;
  if (!qword_1EB772FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB772FA0);
  }
  return result;
}

unint64_t sub_1ACDFA9CC()
{
  unint64_t result = qword_1EB769640;
  if (!qword_1EB769640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB769640);
  }
  return result;
}

unint64_t sub_1ACDFAA20()
{
  unint64_t result = qword_1EB770BA8;
  if (!qword_1EB770BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770BA8);
  }
  return result;
}

uint64_t destroy for MetricsWidgetContext()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MetricsWidgetContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MetricsWidgetContext(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MetricsWidgetContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MetricsWidgetContext()
{
  return &type metadata for MetricsWidgetContext;
}

unsigned char *storeEnumTagSinglePayload for MetricsWidgetContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACDFACECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsWidgetContext.CodingKeys()
{
  return &type metadata for MetricsWidgetContext.CodingKeys;
}

unint64_t sub_1ACDFAD28()
{
  unint64_t result = qword_1E99F6018;
  if (!qword_1E99F6018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6018);
  }
  return result;
}

unint64_t sub_1ACDFAD80()
{
  unint64_t result = qword_1EB772FB0;
  if (!qword_1EB772FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB772FB0);
  }
  return result;
}

unint64_t sub_1ACDFADD8()
{
  unint64_t result = qword_1EB772FA8;
  if (!qword_1EB772FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB772FA8);
  }
  return result;
}

uint64_t sub_1ACDFAE2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449746567646977 && a2 == 0xE800000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x497463656A627573 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t EpisodeStateMachine.__allocating_init(identifier:initialState:rules:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  char v9 = a3 & 1;
  uint64_t v10 = swift_allocObject();
  EpisodeStateMachine.init(identifier:initialState:rules:)(a1, a2, v9, a4, a5);
  return v10;
}

uint64_t static EpisodeStateIdentifier.generateIdsFrom(uuid:contentId:)(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  return sub_1ACDFCF58(a1, a2, a3, a4 & 1);
}

uint64_t EpisodeStateIdentifier.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    sub_1ACE77B28();
    return sub_1ACE76108();
  }
  else
  {
    sub_1ACE77B28();
    return sub_1ACE77B58();
  }
}

uint64_t static EpisodeStateIdentifier.== infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a3 & 1) == 0) {
    return (a6 & 1) == 0 && a1 == a4;
  }
  if (a6)
  {
    if (a1 == a4 && a2 == a5) {
      return 1;
    }
    else {
      return sub_1ACE77848();
    }
  }
  else
  {
    return 0;
  }
}

uint64_t EpisodeStateIdentifier.hashValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    sub_1ACE76108();
  }
  else {
    sub_1ACE77B58();
  }
  return sub_1ACE77B78();
}

uint64_t sub_1ACDFB194()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1ACE77B18();
  sub_1ACE77B28();
  if (v1 == 1) {
    sub_1ACE76108();
  }
  else {
    sub_1ACE77B58();
  }
  return sub_1ACE77B78();
}

uint64_t sub_1ACDFB21C()
{
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    sub_1ACE77B28();
    return sub_1ACE76108();
  }
  else
  {
    sub_1ACE77B28();
    return sub_1ACE77B58();
  }
}

uint64_t sub_1ACDFB2A4()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1ACE77B18();
  sub_1ACE77B28();
  if (v1 == 1) {
    sub_1ACE76108();
  }
  else {
    sub_1ACE77B58();
  }
  return sub_1ACE77B78();
}

uint64_t sub_1ACDFB328(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  int v5 = *((unsigned __int8 *)a2 + 16);
  if (*((unsigned char *)a1 + 16) != 1) {
    return (v3 == v4) & ~v5;
  }
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = a1[1];
  if (v3 == v4 && v6 == a2[1]) {
    return 1;
  }
  else {
    return sub_1ACE77848();
  }
}

uint64_t sub_1ACDFB388()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = type metadata accessor for EpisodeStateMachine();
  return Lockable.locked<A>(perform:)((void (*)(uint64_t))sub_1ACDFD41C, v0, v2, v1, (uint64_t)&protocol witness table for EpisodeStateMachine<A, B>);
}

uint64_t sub_1ACDFB444@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 112);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_1ACDFB4E8(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 112);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t sub_1ACDFB594(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + *(void *)(*(void *)v1 + 120));
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t EpisodeStateMachine.rules.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACDFB610()
{
  sub_1ACDFD45C();
  return swift_unknownObjectRetain();
}

uint64_t sub_1ACDFB638(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + *(void *)(*(void *)v1 + 136));
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1ACDFB698())()
{
  return j__swift_endAccess;
}

uint64_t EpisodeStateMachine.init(identifier:initialState:rules:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(*(void *)v5 + 120);
  uint64_t v12 = *(void *)(*(void *)v5 + 80);
  type metadata accessor for StateMachineChangeObserverAction();
  *(void *)(v5 + v11) = sub_1ACE765F8();
  uint64_t v13 = *(void *)(*(void *)v5 + 136);
  *(void *)(v5 + v13) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28FD0]), sel_init);
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(unsigned char *)(v5 + 32) = a3 & 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v5 + *(void *)(*(void *)v5 + 112), a4, v12);
  *(void *)(v5 + *(void *)(*(void *)v5 + 128)) = a5;
  return v5;
}

uint64_t sub_1ACDFB858(uint64_t a1)
{
  v3[3] = a1;
  uint64_t v1 = type metadata accessor for EpisodeStateMachine();
  Lockable.locked<A>(perform:)((void (*)(uint64_t))sub_1ACDFD4C8, (uint64_t)v3, v1, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for EpisodeStateMachine<A, B>);
  return v4;
}

uint64_t sub_1ACDFB914@<X0>(uint64_t a1@<X0>, void (*a2)(void, void, void)@<X1>, char *a3@<X8>)
{
  uint64_t v90 = a3;
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = sub_1ACE754C8();
  uint64_t v77 = *(void *)(v6 - 8);
  uint64_t v78 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v76 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v5[11];
  uint64_t v9 = sub_1ACE76FD8();
  uint64_t v79 = *(void *)(v9 - 8);
  uint64_t v80 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v85 = (char *)&v75 - v11;
  uint64_t v84 = *(void *)(v8 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  unint64_t v82 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  int64_t v86 = (char *)&v75 - v15;
  uint64_t v16 = v5[10];
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v14);
  uint64_t v81 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v75 - v20;
  sub_1ACDFB444((uint64_t)&v75 - v20);
  uint64_t v22 = v5[12];
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  long long v89 = a2;
  char v24 = sub_1ACE76168();
  long long v87 = v21;
  uint64_t v88 = v17;
  char v26 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  uint64_t v25 = v17 + 8;
  uint64_t v83 = v26;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v26)(v21, v16);
  if (v24)
  {
    char v28 = 1;
    goto LABEL_14;
  }
  uint64_t v75 = v25;
  uint64_t v29 = *(void *)(a1 + *(void *)(*(void *)a1 + 128));
  v94[0] = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v16, AssociatedConformanceWitness);
  v94[1] = v30;
  char v31 = v85;
  MEMORY[0x1AD118260](v94, v29, MEMORY[0x1E4FBB1A0], v8, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  uint64_t v32 = v84;
  uint64_t v33 = a1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v31, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v79 + 8))(v31, v80);
    char v34 = v89;
LABEL_7:
    uint64_t v43 = (uint64_t)v87;
    (*(void (**)(char *, void, uint64_t))(v88 + 16))(v87, v34, v16);
    sub_1ACDFB4E8(v43);
    uint64_t result = sub_1ACDFC760();
    char v28 = 1;
    goto LABEL_14;
  }
  uint64_t v35 = v8;
  uint64_t v36 = v86;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v86, v31, v35);
  uint64_t v37 = (uint64_t)v87;
  sub_1ACDFB444((uint64_t)v87);
  uint64_t v38 = v16;
  char v39 = v89;
  char v40 = (*(uint64_t (**)(uint64_t, void (*)(void, void, void), uint64_t, uint64_t))(v22 + 24))(v37, v89, v35, v22);
  uint64_t v41 = v37;
  uint64_t v42 = v38;
  v83(v41, v38);
  char v34 = v39;
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v35);
    uint64_t v16 = v38;
    goto LABEL_7;
  }
  unint64_t v44 = v39;
  uint64_t v45 = v32;
  if (qword_1E99EFFD8 != -1) {
    swift_once();
  }
  uint64_t v46 = v78;
  uint64_t v47 = __swift_project_value_buffer(v78, (uint64_t)qword_1E99F2DE8);
  swift_beginAccess();
  uint64_t v48 = v77;
  uint64_t v49 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, v47, v46);
  uint64_t v50 = *(void (**)(void, void, void))(v88 + 16);
  uint64_t v51 = v42;
  v88 += 16;
  long long v89 = v50;
  v50(v81, v44, v42);
  uint64_t v52 = v45;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v82, v86, v35);
  swift_retain_n();
  long long v53 = sub_1ACE75498();
  os_log_type_t v54 = sub_1ACE76BD8();
  int v55 = v54;
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v56 = swift_slowAlloc();
    uint64_t v79 = v35;
    uint64_t v57 = v56;
    uint64_t v85 = (char *)swift_slowAlloc();
    uint64_t v95 = v85;
    *(_DWORD *)uint64_t v57 = 136315906;
    LODWORD(v80) = v55;
    uint64_t v58 = *(void *)(v33 + 24);
    char v59 = *(unsigned char *)(v33 + 32);
    uint64_t DynamicType = *(void *)(v33 + 16);
    uint64_t v92 = v58;
    char v93 = v59;
    sub_1ACA72530(DynamicType, v58, v59);
    uint64_t v60 = sub_1ACE76228();
    uint64_t DynamicType = sub_1ACA3189C(v60, v61, (uint64_t *)&v95);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 12) = 2080;
    uint64_t v62 = (uint64_t)v87;
    sub_1ACDFB444((uint64_t)v87);
    uint64_t v63 = sub_1ACE76228();
    uint64_t DynamicType = sub_1ACA3189C(v63, v64, (uint64_t *)&v95);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 22) = 2080;
    uint64_t v65 = v81;
    v89(v62, v81, v51);
    uint64_t v66 = sub_1ACE76228();
    uint64_t DynamicType = sub_1ACA3189C(v66, v67, (uint64_t *)&v95);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    v83((uint64_t)v65, v51);
    *(_WORD *)(v57 + 32) = 2080;
    uint64_t v68 = v82;
    uint64_t v69 = v79;
    uint64_t DynamicType = swift_getDynamicType();
    swift_getMetatypeMetadata();
    uint64_t v70 = sub_1ACE76228();
    uint64_t DynamicType = sub_1ACA3189C(v70, v71, (uint64_t *)&v95);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    long long v72 = *(void (**)(char *, uint64_t))(v52 + 8);
    v72(v68, v69);
    _os_log_impl(&dword_1AC9D5000, v53, (os_log_type_t)v80, "Denied state change for %s: %s -> %s, rule: %s", (uint8_t *)v57, 0x2Au);
    long long v73 = v85;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v73, -1, -1);
    MEMORY[0x1AD11B340](v57, -1, -1);

    (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v78);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v72)(v86, v69);
  }
  else
  {

    char v74 = *(void (**)(char *, uint64_t))(v52 + 8);
    v74(v82, v35);
    v83((uint64_t)v81, v51);
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v46);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v74)(v86, v35);
  }
  char v28 = 0;
LABEL_14:
  *uint64_t v90 = v28;
  return result;
}

uint64_t sub_1ACDFC21C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[2] = a1;
  v5[3] = a2;
  void v5[4] = a3;
  uint64_t v3 = type metadata accessor for EpisodeStateMachine();
  return Lockable.locked<A>(perform:)((void (*)(uint64_t))sub_1ACDFD4E4, (uint64_t)v5, v3, MEMORY[0x1E4FBC848] + 8, (uint64_t)&protocol witness table for EpisodeStateMachine<A, B>);
}

uint64_t sub_1ACDFC2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  uint64_t v10 = a2;
  uint64_t v11 = a3;
  uint64_t v5 = type metadata accessor for StateMachineChangeObserverAction();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16))(v8, v9, v5);
  swift_beginAccess();
  sub_1ACE76688();
  sub_1ACE76648();
  swift_endAccess();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1ACDFC45C(uint64_t a1)
{
  v3[3] = a1;
  uint64_t v1 = type metadata accessor for EpisodeStateMachine();
  return Lockable.locked<A>(perform:)((void (*)(uint64_t))sub_1ACDFD504, (uint64_t)v3, v1, MEMORY[0x1E4FBC848] + 8, (uint64_t)&protocol witness table for EpisodeStateMachine<A, B>);
}

uint64_t sub_1ACDFC514()
{
  swift_beginAccess();
  type metadata accessor for StateMachineChangeObserverAction();
  sub_1ACE76688();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v0 = sub_1ACE77398();
  return sub_1ACDFB594(v0);
}

BOOL sub_1ACDFC64C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = MEMORY[0x1AD11B470]();
  swift_unknownObjectRelease();
  uint64_t v5 = type metadata accessor for StateMachineChangeObserverAction();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v11, a1, v5);
  if (v4)
  {
    uint64_t v7 = MEMORY[0x1AD11B470](v11);
    if (v7)
    {
      uint64_t v8 = v7;
      swift_unknownObjectRelease();
      BOOL v9 = v8 != a2;
    }
    else
    {
      BOOL v9 = 1;
    }
  }
  else
  {
    BOOL v9 = 0;
  }
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
  return v9;
}

uint64_t sub_1ACDFC760()
{
  uint64_t v1 = sub_1ACE75DC8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE75E48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA51E1C();
  BOOL v9 = (void *)sub_1ACE76CF8();
  aBlock[4] = sub_1ACDFDA18;
  uint64_t v13 = v0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_87;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1ACE75E08();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1ACA55D24();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA55D7C();
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v8, v4, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1ACDFC9C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodeStateMachine();
  Lockable.locked<A>(perform:)((void (*)(uint64_t))sub_1ACDFDA20, a1, v2, MEMORY[0x1E4FBC848] + 8, (uint64_t)&protocol witness table for EpisodeStateMachine<A, B>);
  swift_getWitnessTable();
  sub_1ACE75868();
  sub_1ACE75968();
  return swift_release();
}

uint64_t sub_1ACDFCAC0(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + *(void *)(*(void *)a1 + 120));
  swift_beginAccess();
  uint64_t v3 = *v2;
  uint64_t v4 = type metadata accessor for StateMachineChangeObserverAction();
  uint64_t v5 = swift_bridgeObjectRetain();
  if (MEMORY[0x1AD118820](v5, v4))
  {
    uint64_t v6 = 0;
    uint64_t v7 = v3 + 32;
    while (1)
    {
      char v8 = sub_1ACE76618();
      uint64_t result = sub_1ACE765B8();
      if ((v8 & 1) == 0) {
        break;
      }
      uint64_t v10 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_10;
      }
      uint64_t v11 = *(void *)(v4 - 8);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v17, v7, v4);
      uint64_t v12 = MEMORY[0x1AD11B470](v17);
      swift_unknownObjectRelease();
      if (v12)
      {
        uint64_t v13 = v18;
        swift_retain();
        v13(a1);
        swift_release();
      }
      (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v17, v4);
      ++v6;
      v7 += 24;
      if (v10 == MEMORY[0x1AD118820](v3, v4)) {
        goto LABEL_8;
      }
    }
    uint64_t result = sub_1ACE772C8();
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v14 = (uint64_t *)(a1 + *(void *)(*(void *)a1 + 120));
    uint64_t v15 = swift_beginAccess();
    uint64_t v19 = *v14;
    MEMORY[0x1F4188790](v15);
    sub_1ACE76688();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t v16 = sub_1ACE77398();
    return sub_1ACDFB594(v16);
  }
  return result;
}

uint64_t *EpisodeStateMachine.deinit()
{
  uint64_t v1 = *v0;
  sub_1ACA91B68(v0[2], v0[3], *((unsigned char *)v0 + 32));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 112));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t EpisodeStateMachine.__deallocating_deinit()
{
  EpisodeStateMachine.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACDFCEDC()
{
  sub_1ACDFD45C();
  return swift_unknownObjectRetain();
}

uint64_t sub_1ACDFCF10@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for EpisodeStateMachine();
  uint64_t result = sub_1ACE75868();
  *a1 = result;
  return result;
}

uint64_t sub_1ACDFCF58(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a2)
  {
LABEL_15:
    uint64_t v9 = MEMORY[0x1E4FBC870];
    goto LABEL_16;
  }
  uint64_t v8 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v9 = MEMORY[0x1E4FBC870];
  if (!v8)
  {
LABEL_16:
    if (a4) {
      return v9;
    }
    goto LABEL_37;
  }
  sub_1ACE77B18();
  sub_1ACE77B28();
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  uint64_t v10 = sub_1ACE77B78();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v12))
  {
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v9 + 48);
    while (1)
    {
      uint64_t v15 = v14 + 24 * v12;
      if (*(unsigned char *)(v15 + 16) == 1)
      {
        BOOL v16 = *(void *)v15 == a1 && *(void *)(v15 + 8) == a2;
        if (v16 || (sub_1ACE77848() & 1) != 0) {
          break;
        }
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v12) & 1) == 0) {
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_18:
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v40 = v9;
  unint64_t v19 = *(void *)(v9 + 16);
  unint64_t v18 = *(void *)(v9 + 24);
  uint64_t result = swift_bridgeObjectRetain();
  if (v18 <= v19)
  {
    if (isUniquelyReferenced_nonNull_native) {
      sub_1ACBEDA94();
    }
    else {
      sub_1ACBF1ED0();
    }
    uint64_t v9 = v40;
    sub_1ACE77B18();
    sub_1ACE77B28();
    sub_1ACE76108();
    uint64_t result = sub_1ACE77B78();
    uint64_t v21 = -1 << *(unsigned char *)(v40 + 32);
    unint64_t v12 = result & ~v21;
    if ((*(void *)(v40 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
    {
      uint64_t v22 = ~v21;
      uint64_t v23 = *(void *)(v40 + 48);
      do
      {
        uint64_t v24 = v23 + 24 * v12;
        if (*(unsigned char *)(v24 + 16) == 1)
        {
          if (*(void *)v24 == a1 && *(void *)(v24 + 8) == a2) {
            goto LABEL_56;
          }
          uint64_t result = sub_1ACE77848();
          if (result) {
            goto LABEL_56;
          }
        }
        unint64_t v12 = (v12 + 1) & v22;
      }
      while (((*(void *)(v40 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
  }
  else if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t v9 = MEMORY[0x1E4FBC870];
  }
  else
  {
    uint64_t result = (uint64_t)sub_1ACBEFB38();
    uint64_t v9 = v40;
  }
  *(void *)(v9 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v12;
  uint64_t v26 = *(void *)(v9 + 48) + 24 * v12;
  *(void *)uint64_t v26 = a1;
  *(void *)(v26 + 8) = a2;
  *(unsigned char *)(v26 + 16) = 1;
  uint64_t v27 = *(void *)(v9 + 16);
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
    __break(1u);
    goto LABEL_61;
  }
  *(void *)(v9 + 16) = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a4) {
    return v9;
  }
LABEL_37:
  if (!a3 || a3 == 1000000000000) {
    return v9;
  }
  sub_1ACE77B18();
  sub_1ACE77B28();
  sub_1ACE77B58();
  uint64_t v30 = sub_1ACE77B78();
  uint64_t v31 = -1 << *(unsigned char *)(v9 + 32);
  a4 = v30 & ~v31;
  if ((*(void *)(v9 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
  {
    uint64_t v32 = ~v31;
    do
    {
      uint64_t v33 = *(void *)(v9 + 48) + 24 * a4;
      if ((*(unsigned char *)(v33 + 16) & 1) == 0 && *(void *)v33 == a3) {
        return v9;
      }
      a4 = (a4 + 1) & v32;
    }
    while (((*(void *)(v9 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (*(void *)(v9 + 24) > *(void *)(v9 + 16))
  {
    if ((result & 1) == 0) {
      uint64_t result = (uint64_t)sub_1ACBEFB38();
    }
    goto LABEL_57;
  }
  if (result) {
    sub_1ACBEDA94();
  }
  else {
    sub_1ACBF1ED0();
  }
  sub_1ACE77B18();
  sub_1ACE77B28();
  sub_1ACE77B58();
  uint64_t result = sub_1ACE77B78();
  uint64_t v34 = -1 << *(unsigned char *)(v9 + 32);
  a4 = result & ~v34;
  if ((*(void *)(v9 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
  {
    uint64_t v35 = ~v34;
    while (1)
    {
      uint64_t v36 = *(void *)(v9 + 48) + 24 * a4;
      if ((*(unsigned char *)(v36 + 16) & 1) == 0 && *(void *)v36 == a3) {
        break;
      }
      a4 = (a4 + 1) & v35;
      if (((*(void *)(v9 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) == 0) {
        goto LABEL_57;
      }
    }
LABEL_56:
    uint64_t result = sub_1ACE77A58();
    __break(1u);
  }
LABEL_57:
  *(void *)(v9 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << a4;
  uint64_t v37 = *(void *)(v9 + 48) + 24 * a4;
  *(void *)uint64_t v37 = a3;
  *(void *)(v37 + 8) = 0;
  *(unsigned char *)(v37 + 16) = 0;
  uint64_t v38 = *(void *)(v9 + 16);
  BOOL v28 = __OFADD__(v38, 1);
  uint64_t v39 = v38 + 1;
  if (!v28)
  {
    *(void *)(v9 + 16) = v39;
    swift_bridgeObjectRelease();
    return v9;
  }
LABEL_61:
  __break(1u);
  return result;
}

uint64_t sub_1ACDFD41C@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACDFB444(a1);
}

uint64_t type metadata accessor for EpisodeStateMachine()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACDFD45C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 136);
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t type metadata accessor for StateMachineChangeObserverAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACDFD4C8@<X0>(char *a1@<X8>)
{
  return sub_1ACDFB914(*(void *)(v1 + 16), *(void (**)(void, void, void))(v1 + 24), a1);
}

uint64_t sub_1ACDFD4E4()
{
  return sub_1ACDFC2D8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1ACDFD504()
{
  return sub_1ACDFC514();
}

unint64_t sub_1ACDFD524()
{
  unint64_t result = qword_1EB767C98;
  if (!qword_1EB767C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767C98);
  }
  return result;
}

uint64_t sub_1ACDFD578@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1ACDFD45C();
  return swift_unknownObjectRetain();
}

uint64_t sub_1ACDFD5B4()
{
  uint64_t v0 = swift_unknownObjectRetain();
  return sub_1ACDFB638(v0);
}

uint64_t sub_1ACDFD5E0()
{
  return 24;
}

__n128 sub_1ACDFD5EC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t dispatch thunk of static EpisodeState.initialState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static EpisodeState.defaultState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EpisodeState.dictionaryKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of static EpisodeState.state(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of static EpisodeState.episodeStateDomain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t destroy for EpisodeStateIdentifier(uint64_t a1)
{
  return sub_1ACA91B68(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s18PodcastsFoundation22EpisodeStateIdentifierOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1ACA72530(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for EpisodeStateIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1ACA72530(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1ACA91B68(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for EpisodeStateIdentifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1ACA91B68(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeStateIdentifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeStateIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1ACDFD804(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeStateIdentifier()
{
  return &type metadata for EpisodeStateIdentifier;
}

uint64_t dispatch thunk of EpisodeStateRule.canMove(from:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1ACDFD834()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for EpisodeStateMachine(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EpisodeStateMachine);
}

uint64_t dispatch thunk of EpisodeStateMachine.currentState.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of EpisodeStateMachine.lock.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of EpisodeStateMachine.lock.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of EpisodeStateMachine.lock.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of EpisodeStateMachine.__allocating_init(identifier:initialState:rules:)(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 224))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of EpisodeStateMachine.transition(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of EpisodeStateMachine.addStateTransitionObserver(_:action:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of EpisodeStateMachine.removeStateTransitionActions(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t sub_1ACDFDA18()
{
  return sub_1ACDFC9C8(v0);
}

uint64_t sub_1ACDFDA20()
{
  return sub_1ACDFCAC0(v0);
}

BOOL sub_1ACDFDA3C()
{
  uint64_t v0 = MEMORY[0x1AD11B470]();
  if (v0) {
    swift_unknownObjectRelease();
  }
  return v0 != 0;
}

BOOL sub_1ACDFDA7C(uint64_t a1)
{
  return sub_1ACDFC64C(a1, *(void *)(v1 + 40));
}

uint64_t sub_1ACDFDAA0()
{
  (*(void (**)(void *__return_ptr, void, void, void))(*(void *)(v0 + 56) + 8))(v2, *(void *)(v0 + 40), *(void *)(v0 + 16), *(void *)(v0 + 24));
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB7725E0);
  if ((swift_dynamicCast() & 1) != 0 && v3 != 2) {
    return v3 & 1;
  }
  else {
    return *(unsigned __int8 *)(v0 + 32);
  }
}

uint64_t sub_1ACDFDB34()
{
  (*(void (**)(void *__return_ptr, void, void, void))(v0[8] + 8))(v3, v0[6], v0[2], v0[3]);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB7725E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
  if ((swift_dynamicCast() & 1) != 0 && v3[5] != 1) {
    return v3[4];
  }
  uint64_t v1 = v0[4];
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACDFDBEC()
{
  (*(void (**)(void *__return_ptr, void, void, void))(v0[8] + 8))(v3, v0[6], v0[2], v0[3]);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB7725E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E0B0);
  if (swift_dynamicCast())
  {
    uint64_t v1 = &v4;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v1 = v0 + 4;
  }
  return *v1;
}

uint64_t sub_1ACDFDC94()
{
  (*(void (**)(void *__return_ptr, void, void, void))(v0[7] + 8))(v4, v0[5], v0[2], v0[3]);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB7725E0);
  int v1 = swift_dynamicCast();
  if ((v1 & 1) == 0) {
    uint64_t v5 = 0;
  }
  uint64_t v2 = v0 + 4;
  if (v1) {
    uint64_t v2 = &v5;
  }
  return *v2;
}

double sub_1ACDFDD28()
{
  (*(void (**)(void *__return_ptr, void, void, void))(v0[7] + 8))(v4, v0[5], v0[2], v0[3]);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB7725E0);
  int v1 = swift_dynamicCast();
  if ((v1 & 1) == 0) {
    uint64_t v5 = 0;
  }
  uint64_t v2 = v0 + 4;
  if (v1) {
    uint64_t v2 = &v5;
  }
  return *(double *)v2;
}

uint64_t sub_1ACDFDDBC()
{
  uint64_t result = sub_1ACE761B8();
  qword_1EB785938 = result;
  unk_1EB785940 = v1;
  return result;
}

BOOL sub_1ACDFDDEC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  if (*((unsigned char *)a1 + 8) == 1)
  {
    switch(v2)
    {
      case 1:
        BOOL v5 = v3 == 1;
        goto LABEL_9;
      case 2:
        BOOL v5 = v3 == 2;
        goto LABEL_9;
      case 3:
        BOOL v5 = v3 == 3;
        goto LABEL_9;
      case 4:
        if (v3 <= 3) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        goto LABEL_12;
      default:
        BOOL v5 = v3 == 0;
LABEL_9:
        if (!v5) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
LABEL_12:
        BOOL result = 1;
        break;
    }
  }
  else
  {
    return (*(unsigned char *)(a2 + 8) & 1) == 0 && v2 == v3;
  }
  return result;
}

uint64_t sub_1ACDFDE88()
{
  unint64_t v1 = 0xD000000000000011;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000013;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x20646F70656D6F48;
  }
}

char *SiriDonator.__allocating_init(backgroundTaskManager:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return SiriDonator.init(backgroundTaskManager:)(a1);
}

char *SiriDonator.init(backgroundTaskManager:)(uint64_t a1)
{
  uint64_t v44 = a1;
  uint64_t v2 = sub_1ACE76CD8();
  uint64_t v37 = *(void *)(v2 - 8);
  uint64_t v38 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v35 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1ACE76E78();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v33 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DC10);
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v39 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1ACE76CE8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v43 = OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_workQueue;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  uint64_t v13 = v1;
  sub_1ACE75E28();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCC68], v8);
  uint64_t v47 = MEMORY[0x1E4FBC860];
  sub_1ACDFE69C((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  uint64_t v14 = v44;
  *(void *)(v42 + v43) = sub_1ACE76D28();
  *(void *)&v13[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_podcastsUpdateSubscription] = 0;
  uint64_t v15 = OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator__throttleInterval;
  id v16 = objc_msgSend(self, sel_standardUserDefaults);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76BCF0);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = 0xD00000000000001CLL;
  uint64_t v17[3] = 0x80000001ACED33E0;
  v17[4] = 0x4014000000000000;
  v17[5] = v16;
  void v17[6] = &type metadata for DoubleTransform;
  v17[7] = &off_1F0383E50;
  *(void *)&v13[v15] = v17;
  *(void *)&v13[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_backgroundTaskManager] = v14;
  id v18 = objc_allocWithZone((Class)type metadata accessor for MediaRequestController());
  swift_unknownObjectRetain();
  id v19 = objc_msgSend(v18, sel_init);
  *(void *)&v13[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_mediaRequestController] = v19;
  uint64_t v20 = (uint64_t *)&v13[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator__donationInProgress];
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8B0);
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + 20) = 0;
  *(unsigned char *)(v21 + 16) = 0;
  *uint64_t v20 = v21;

  uint64_t v22 = (objc_class *)type metadata accessor for SiriDonator();
  v46.receiver = v13;
  v46.super_class = v22;
  uint64_t v23 = (char *)objc_msgSendSuper2(&v46, sel_init);
  if (os_feature_enabled_homepod_siri_donation_from_apns()
    && (objc_msgSend(self, sel_isRunningOnHomepod) & 1) != 0)
  {

    swift_unknownObjectRelease();
  }
  else
  {
    id v24 = objc_msgSend(self, sel_defaultCenter);
    uint64_t v25 = v33;
    sub_1ACE76E88();

    swift_retain();
    sub_1ACDFDD28();
    swift_release();
    uint64_t v26 = v35;
    sub_1ACE76CC8();
    uint64_t v45 = *(void *)&v23[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_workQueue];
    sub_1ACDFE69C((unint64_t *)&qword_1EB768EF8, MEMORY[0x1E4F27FC8]);
    sub_1ACA93A6C();
    uint64_t v27 = v39;
    uint64_t v28 = v36;
    sub_1ACE75CD8();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v38);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v28);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1ACA51EA4(&qword_1EB76DC08, &qword_1EB76DC10);
    uint64_t v29 = v41;
    uint64_t v30 = sub_1ACE75D58();
    swift_unknownObjectRelease();
    swift_release();

    (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v29);
    *(void *)&v23[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_podcastsUpdateSubscription] = v30;
    swift_release();
  }
  return v23;
}

uint64_t type metadata accessor for SiriDonator()
{
  return self;
}

uint64_t sub_1ACDFE69C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACDFE6E4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1ACDFE71C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1AD11B470](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    sub_1ACDFE7AC();
  }
}

void sub_1ACDFE770(uint64_t a1)
{
  sub_1ACDFE71C(a1, v1);
}

void sub_1ACDFE7AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE75DC8();
  uint64_t v23 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE75E48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = &v0[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator__donationInProgress];
  swift_beginAccess();
  uint64_t v10 = *(void *)v9;
  LOBYTE(aBlock[0]) = 0;
  LOBYTE(v26) = 1;
  id v24 = aBlock;
  uint64_t v25 = &v26;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 20));
  sub_1ACE01014((unsigned char *)(v10 + 16), &v28);
  os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 20));
  LODWORD(v9) = v28;
  swift_release();
  if (v9 == 1)
  {
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1ACE754C8();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB76D488);
    uint64_t v12 = sub_1ACE75498();
    os_log_type_t v13 = sub_1ACE76C08();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1AC9D5000, v12, v13, "Starting donation to Siri KOA.", v14, 2u);
      MEMORY[0x1AD11B340](v14, -1, -1);
    }

    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v1;
    aBlock[4] = sub_1ACE01068;
    void aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = &block_descriptor_88;
    id v16 = _Block_copy(aBlock);
    id v17 = v1;
    sub_1ACE75E08();
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1ACDFE69C((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v8, v4, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v2);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
  }
  else
  {
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1ACE754C8();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EB76D488);
    id v19 = sub_1ACE75498();
    os_log_type_t v20 = sub_1ACE76C08();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_1AC9D5000, v19, v20, "Donation already in progress. Not starting new donation.", v21, 2u);
      MEMORY[0x1AD11B340](v21, -1, -1);
    }
  }
}

void sub_1ACDFEC58(char *a1)
{
  uint64_t v2 = *(void **)&a1[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_backgroundTaskManager];
  uint64_t v3 = (void *)sub_1ACE76178();
  objc_msgSend(v2, sel_beginBackgroundTask_, v3);

  uint64_t v4 = a1;
  sub_1ACE01334((uint64_t)v4, v4);
}

uint64_t sub_1ACDFECF0(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1ACE754C8();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EB76D488);
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1ACE75498();
    os_log_type_t v4 = sub_1ACE76C08();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 134217984;
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v3, v4, "Created %ld donation jobs.", v5, 0xCu);
      MEMORY[0x1AD11B340](v5, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    return sub_1ACDFEF44(a1);
  }
  else
  {
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1ACE754C8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EB76D488);
    uint64_t v7 = sub_1ACE75498();
    os_log_type_t v8 = sub_1ACE76C08();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1AC9D5000, v7, v8, "No donation jobs created.", v9, 2u);
      MEMORY[0x1AD11B340](v9, -1, -1);
    }

    return sub_1ACE00BA0();
  }
}

uint64_t sub_1ACDFEF44(uint64_t a1)
{
  uint64_t v34 = sub_1ACE75DC8();
  uint64_t v3 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE75E48();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  MEMORY[0x1F4188790](v6);
  os_log_type_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE75EC8();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v9);
  os_log_type_t v13 = (id *)((char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = v1;
  uint64_t v14 = *(void **)&v1[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_workQueue];
  *os_log_type_t v13 = v14;
  (*(void (**)(void *, void, uint64_t, __n128))(v10 + 104))(v13, *MEMORY[0x1E4FBCBF0], v9, v11);
  id v15 = v14;
  char v16 = sub_1ACE75EF8();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v13, v9);
  if (v16)
  {
    id v32 = v15;
    uint64_t v33 = v3;
    uint64_t v18 = swift_allocObject();
    *(unsigned char *)(v18 + 16) = 0;
    id v19 = dispatch_group_create();
    uint64_t v20 = *(void *)(a1 + 16);
    if (v20)
    {
      uint64_t v21 = a1 + 32;
      swift_bridgeObjectRetain();
      do
      {
        dispatch_group_enter(v19);
        sub_1ACCC2BC8(v21, (uint64_t)&aBlock);
        uint64_t v22 = swift_allocObject();
        long long v23 = v42;
        *(_OWORD *)(v22 + 48) = v41;
        *(_OWORD *)(v22 + 64) = v23;
        uint64_t v24 = v43;
        long long v25 = v40;
        *(_OWORD *)(v22 + 16) = aBlock;
        *(_OWORD *)(v22 + 32) = v25;
        *(void *)(v22 + 80) = v24;
        *(void *)(v22 + 88) = v18;
        *(void *)(v22 + 96) = v19;
        swift_retain();
        uint64_t v26 = v19;
        sub_1ACCBF368((void (*)(void))sub_1ACE012D4, v22);
        swift_release();
        v21 += 72;
        --v20;
      }
      while (v20);
      swift_bridgeObjectRelease();
    }
    uint64_t v27 = (void *)swift_allocObject();
    BOOL v28 = v35;
    v27[2] = a1;
    v27[3] = v28;
    v27[4] = v18;
    *(void *)&long long v41 = sub_1ACE01328;
    *((void *)&v41 + 1) = v27;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v40 = sub_1ACA6DA9C;
    *((void *)&v40 + 1) = &block_descriptor_38_4;
    uint64_t v29 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    id v30 = v28;
    sub_1ACE75E08();
    uint64_t v38 = MEMORY[0x1E4FBC860];
    sub_1ACDFE69C((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    uint64_t v31 = v34;
    sub_1ACE770E8();
    sub_1ACE76C68();
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v31);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1ACDFF3E0(void *a1, unsigned char *a2, uint64_t a3, NSObject *a4)
{
  if (a1)
  {
    uint64_t v7 = (BOOL *)(a3 + 16);
    uint64_t v47 = (uint64_t)a1;
    id v8 = a1;
    id v9 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    if ((swift_dynamicCast() & 1) != 0 && (v49 & 1) == 0)
    {
      if (qword_1EB76D4A0 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_1ACE754C8();
      __swift_project_value_buffer(v33, (uint64_t)qword_1EB76D488);
      sub_1ACCC2BC8((uint64_t)a2, (uint64_t)&v48);
      os_log_type_t v13 = sub_1ACE75498();
      os_log_type_t v34 = sub_1ACE76BE8();
      if (os_log_type_enabled(v13, v34))
      {
        uint64_t v43 = v7;
        uint64_t v44 = a2;
        uint64_t v45 = a4;
        uint64_t v15 = swift_slowAlloc();
        uint64_t v35 = swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 141558531;
        uint64_t v47 = v35;
        sub_1ACE76FF8();
        *(_WORD *)(v15 + 12) = 2081;
        uint64_t v36 = *(void **)(v49 + 24);
        if (v36)
        {
          id v37 = objc_msgSend(v36, sel_description);
          uint64_t v38 = sub_1ACE761B8();
          unint64_t v40 = v39;
        }
        else
        {
          uint64_t v38 = 0x6974636120726F66;
          unint64_t v40 = 0xEF72657375206576;
        }
        sub_1ACA3189C(v38, v40, &v47);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        sub_1ACCC2C00((uint64_t)&v48);
        *(_WORD *)(v15 + 22) = 2048;
        sub_1ACE76FF8();
        _os_log_impl(&dword_1AC9D5000, v13, v34, "Donation Job completed for account: %{private,mask.hash}s with errors for %ld userId's.", (uint8_t *)v15, 0x20u);
        swift_arrayDestroy();
        uint64_t v41 = v35;
        goto LABEL_30;
      }

      sub_1ACCC2C00((uint64_t)&v48);
    }
    else
    {
      if (qword_1EB76D4A0 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1ACE754C8();
      __swift_project_value_buffer(v10, (uint64_t)qword_1EB76D488);
      sub_1ACCC2BC8((uint64_t)a2, (uint64_t)&v48);
      id v11 = a1;
      id v12 = a1;
      os_log_type_t v13 = sub_1ACE75498();
      os_log_type_t v14 = sub_1ACE76BE8();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v43 = v7;
        uint64_t v44 = a2;
        uint64_t v45 = a4;
        uint64_t v15 = swift_slowAlloc();
        char v16 = (void *)swift_slowAlloc();
        uint64_t v17 = swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 141558531;
        uint64_t v47 = v17;
        sub_1ACE76FF8();
        *(_WORD *)(v15 + 12) = 2081;
        uint64_t v18 = *(void **)(v49 + 24);
        if (v18)
        {
          id v19 = objc_msgSend(v18, sel_description);
          uint64_t v20 = sub_1ACE761B8();
          unint64_t v22 = v21;
        }
        else
        {
          uint64_t v20 = 0x6974636120726F66;
          unint64_t v22 = 0xEF72657375206576;
        }
        sub_1ACA3189C(v20, v22, &v47);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        sub_1ACCC2C00((uint64_t)&v48);
        *(_WORD *)(v15 + 22) = 2112;
        uint64_t v46 = sub_1ACE74D68();
        sub_1ACE76FF8();
        void *v16 = v46;

        _os_log_impl(&dword_1AC9D5000, v13, v14, "Donation Job Failed for account: %{private,mask.hash}s with error: %@", (uint8_t *)v15, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v16, -1, -1);
        swift_arrayDestroy();
        uint64_t v41 = v17;
LABEL_30:
        MEMORY[0x1AD11B340](v41, -1, -1);
        MEMORY[0x1AD11B340](v15, -1, -1);

        a2 = v44;
        a4 = v45;
        uint64_t v7 = v43;
        goto LABEL_31;
      }

      sub_1ACCC2C00((uint64_t)&v48);
    }

LABEL_31:
    BOOL v42 = *a2 == 1;
    swift_beginAccess();
    *uint64_t v7 = v42;
    goto LABEL_32;
  }
  if (qword_1EB76D4A0 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1ACE754C8();
  __swift_project_value_buffer(v23, (uint64_t)qword_1EB76D488);
  sub_1ACCC2BC8((uint64_t)a2, (uint64_t)&v48);
  uint64_t v24 = sub_1ACE75498();
  os_log_type_t v25 = sub_1ACE76C08();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 141558275;
    uint64_t v47 = v27;
    sub_1ACE76FF8();
    *(_WORD *)(v26 + 12) = 2081;
    BOOL v28 = *(void **)(v49 + 24);
    if (v28)
    {
      id v29 = objc_msgSend(v28, sel_description);
      uint64_t v30 = sub_1ACE761B8();
      unint64_t v32 = v31;
    }
    else
    {
      uint64_t v30 = 0x6974636120726F66;
      unint64_t v32 = 0xEF72657375206576;
    }
    sub_1ACA3189C(v30, v32, &v47);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACCC2C00((uint64_t)&v48);
    _os_log_impl(&dword_1AC9D5000, v24, v25, "Donation Job completed for account: %{private,mask.hash}s with no errors.", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v27, -1, -1);
    MEMORY[0x1AD11B340](v26, -1, -1);
  }
  else
  {
    sub_1ACCC2C00((uint64_t)&v48);
  }

LABEL_32:
  dispatch_group_leave(a4);
}

uint64_t sub_1ACDFFAF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = (unsigned char *)(a3 + 16);
    uint64_t v5 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1ACCC2BC8(v5, (uint64_t)v21);
      int v6 = v21[0];
      sub_1ACCC2C00((uint64_t)v21);
      if (v6 == 1) {
        break;
      }
      v5 += 72;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_beginAccess();
    if (*v4)
    {
      if (qword_1EB76D4A0 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_1ACE754C8();
      __swift_project_value_buffer(v12, (uint64_t)qword_1EB76D488);
      id v8 = sub_1ACE75498();
      os_log_type_t v9 = sub_1ACE76BE8();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v10 = 0;
        id v11 = "Encountered more than one failure for secondary user donation. Cannot set user defaults key for last date "
              "all secondary user data was donated.";
        goto LABEL_10;
      }
    }
    else
    {
      if (qword_1EB76D4A0 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_1ACE754C8();
      __swift_project_value_buffer(v13, (uint64_t)qword_1EB76D488);
      os_log_type_t v14 = sub_1ACE75498();
      os_log_type_t v15 = sub_1ACE76C08();
      if (os_log_type_enabled(v14, v15))
      {
        char v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v16 = 0;
        _os_log_impl(&dword_1AC9D5000, v14, v15, "There were secondary user donations that were made, and all of them were successful. Setting the current date in User Defaults.", v16, 2u);
        MEMORY[0x1AD11B340](v16, -1, -1);
      }

      id v17 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
      sub_1ACE74FC8();
      double v19 = v18;
      id v8 = sub_1ACE76178();
      objc_msgSend(v17, sel_setDouble_forKey_, v8, v19);
    }
  }
  else
  {
LABEL_6:
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1ACE754C8();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB76D488);
    id v8 = sub_1ACE75498();
    os_log_type_t v9 = sub_1ACE76C08();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      id v11 = "No secondary user donations were made.";
LABEL_10:
      _os_log_impl(&dword_1AC9D5000, v8, v9, v11, v10, 2u);
      MEMORY[0x1AD11B340](v10, -1, -1);
    }
  }

  return sub_1ACE00BA0();
}

void sub_1ACDFFE08(unint64_t a1, void *a2, uint64_t a3, void *a4, NSObject *a5, char a6, uint64_t a7)
{
  uint64_t v13 = a3 + 16;
  swift_beginAccess();
  uint64_t v14 = MEMORY[0x1AD11B470](v13);
  if (v14)
  {
    uint64_t v83 = (char *)v14;
    if (a2)
    {
      id v15 = a2;
      if (qword_1EB76D4A0 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1ACE754C8();
      __swift_project_value_buffer(v16, (uint64_t)qword_1EB76D488);
      id v17 = a4;
      id v18 = a2;
      id v19 = v17;
      id v20 = a2;
      unint64_t v21 = sub_1ACE75498();
      os_log_type_t v22 = sub_1ACE76BE8();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        uint64_t v78 = (void *)swift_slowAlloc();
        uint64_t v80 = swift_slowAlloc();
        v89[0] = v80;
        *(_DWORD *)uint64_t v23 = 141558531;
        sub_1ACE76FF8();
        *(_WORD *)(v23 + 12) = 2081;
        id v24 = objc_msgSend(v19, sel_description);
        uint64_t v25 = sub_1ACE761B8();
        unint64_t v27 = v26;

        sub_1ACA3189C(v25, v27, v89);
        sub_1ACE76FF8();

        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 22) = 2112;
        v88[0] = sub_1ACE74D68();
        sub_1ACE76FF8();
        *uint64_t v78 = v88[0];

        _os_log_impl(&dword_1AC9D5000, v21, v22, "Cannot create donation job - Could not get siri shared user id's for iTunes account: %{private,mask.hash}s with error: %@", (uint8_t *)v23, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v78, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v80, -1, -1);
        MEMORY[0x1AD11B340](v23, -1, -1);
      }
      else
      {
      }
      dispatch_group_leave(a5);

LABEL_41:
      return;
    }
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_1ACE77508();
      swift_bridgeObjectRelease();
      if (!v66) {
        goto LABEL_35;
      }
      uint64_t v81 = a7;
      unint64_t v82 = a5;
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1ACE77508();
      swift_bridgeObjectRelease();
      uint64_t v44 = MEMORY[0x1E4FBC860];
      if (!v39) {
        goto LABEL_24;
      }
      v89[0] = MEMORY[0x1E4FBC860];
      sub_1ACE773D8();
      if (v39 < 0)
      {
        __break(1u);
        goto LABEL_35;
      }
    }
    else
    {
      uint64_t v39 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v39) {
        goto LABEL_35;
      }
      uint64_t v81 = a7;
      unint64_t v82 = a5;
      v89[0] = MEMORY[0x1E4FBC860];
      sub_1ACE773D8();
    }
    uint64_t v40 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v41 = (id)MEMORY[0x1AD119490](v40, a1);
      }
      else {
        id v41 = *(id *)(a1 + 8 * v40 + 32);
      }
      BOOL v42 = v41;
      ++v40;
      id v43 = objc_msgSend(v41, sel_first);

      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
    }
    while (v39 != v40);
    uint64_t v44 = v89[0];
LABEL_24:
    v89[0] = v44;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6080);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
    a5 = v82;
    if (swift_dynamicCast())
    {
      uint64_t v45 = v88[0];
      if (qword_1EB76D4A0 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_1ACE754C8();
      __swift_project_value_buffer(v46, (uint64_t)qword_1EB76D488);
      id v47 = a4;
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_1ACE75498();
      os_log_type_t v49 = sub_1ACE76C08();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = swift_slowAlloc();
        uint64_t v79 = swift_slowAlloc();
        v89[0] = v79;
        *(_DWORD *)uint64_t v50 = 134218499;
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v50 + 12) = 2160;
        sub_1ACE76FF8();
        *(_WORD *)(v50 + 22) = 2081;
        id v51 = objc_msgSend(v47, sel_description, v50 + 24);
        uint64_t v52 = sub_1ACE761B8();
        uint64_t v53 = v45;
        unint64_t v55 = v54;

        v88[0] = sub_1ACA3189C(v52, v55, v89);
        sub_1ACE76FF8();

        uint64_t v45 = v53;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v48, v49, "Received %ld siri shared user id's for iTunes account: %{private,mask.hash}s)", (uint8_t *)v50, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v79, -1, -1);
        MEMORY[0x1AD11B340](v50, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      uint64_t v56 = *(void **)&v83[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_mediaRequestController];
      v88[3] = type metadata accessor for MediaRequestController();
      v88[4] = &protocol witness table for MediaRequestController;
      v88[0] = v56;
      uint64_t v57 = *(void **)&v83[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_workQueue];
      int64_t v86 = &_s11KoaProviderVN;
      long long v87 = &off_1F03A3320;
      LOBYTE(v89[0]) = (a6 & 1) == 0;
      v90[5] = v45;
      v90[6] = v57;
      sub_1ACA3E158((uint64_t)v85, (uint64_t)v90);
      sub_1ACA3E158((uint64_t)v88, (uint64_t)v84);
      _s11DataFetcherCMa();
      uint64_t v58 = swift_allocObject();
      *(void *)(v58 + 88) = 0;
      *(void *)(v58 + 96) = 0;
      *(unsigned char *)(v58 + 16) = (a6 & 1) == 0;
      *(void *)(v58 + 24) = v47;
      sub_1ACA3E158((uint64_t)v84, v58 + 32);
      id v59 = objc_allocWithZone(MEMORY[0x1E4F72000]);
      id v60 = v57;
      id v61 = v47;
      id v62 = v60;
      id v63 = v56;
      id v64 = objc_msgSend(v59, sel_init);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v84);
      *(void *)(v58 + 72) = v64;
      *(void *)(v58 + 80) = v62;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v85);
      uint64_t v65 = __swift_destroy_boxed_opaque_existential_0((uint64_t)v88);
      v89[1] = v58;
      MEMORY[0x1F4188790](v65);
      os_unfair_lock_lock((os_unfair_lock_t)(v81 + 24));
      sub_1ACE024C8((void **)(v81 + 16));
      os_unfair_lock_unlock((os_unfair_lock_t)(v81 + 24));
      dispatch_group_leave(v82);

      sub_1ACCC2C00((uint64_t)v89);
      return;
    }
LABEL_35:
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v67 = sub_1ACE754C8();
    __swift_project_value_buffer(v67, (uint64_t)qword_1EB76D488);
    id v68 = a4;
    uint64_t v69 = sub_1ACE75498();
    os_log_type_t v70 = sub_1ACE76BE8();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      v89[0] = v72;
      *(_DWORD *)uint64_t v71 = 141558275;
      sub_1ACE76FF8();
      *(_WORD *)(v71 + 12) = 2081;
      id v73 = objc_msgSend(v68, sel_description);
      uint64_t v74 = sub_1ACE761B8();
      uint64_t v75 = a5;
      unint64_t v77 = v76;

      v88[0] = sub_1ACA3189C(v74, v77, v89);
      sub_1ACE76FF8();

      a5 = v75;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v69, v70, "Cannot create donation job - No siri shared user ids on HomePod device for iTunes account : %{private,mask.hash}s", (uint8_t *)v71, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v72, -1, -1);
      MEMORY[0x1AD11B340](v71, -1, -1);
    }
    else
    {
    }
    dispatch_group_leave(a5);
    goto LABEL_41;
  }
  if (qword_1EB76D4A0 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1ACE754C8();
  __swift_project_value_buffer(v28, (uint64_t)qword_1EB76D488);
  id v29 = a4;
  uint64_t v30 = sub_1ACE75498();
  os_log_type_t v31 = sub_1ACE76BE8();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    v89[0] = v33;
    *(_DWORD *)uint64_t v32 = 141558275;
    sub_1ACE76FF8();
    *(_WORD *)(v32 + 12) = 2081;
    id v34 = objc_msgSend(v29, sel_description);
    uint64_t v35 = sub_1ACE761B8();
    uint64_t v36 = a5;
    unint64_t v38 = v37;

    v88[0] = sub_1ACA3189C(v35, v38, v89);
    sub_1ACE76FF8();

    a5 = v36;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v30, v31, "Error getting self during update for iTunes account: %{private,mask.hash}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v33, -1, -1);
    MEMORY[0x1AD11B340](v32, -1, -1);
  }
  else
  {
  }
  dispatch_group_leave(a5);
}

__n128 sub_1ACE009C4(void **a1, uint64_t a2)
{
  sub_1ACCC2BC8(a2, (uint64_t)v10);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_1ACA44364(0, v3[2] + 1, 1, v3);
  }
  unint64_t v5 = v3[2];
  unint64_t v4 = v3[3];
  if (v5 >= v4 >> 1) {
    uint64_t v3 = sub_1ACA44364((void *)(v4 > 1), v5 + 1, 1, v3);
  }
  v3[2] = v5 + 1;
  int v6 = &v3[9 * v5];
  *((_OWORD *)v6 + 2) = v10[0];
  __n128 result = (__n128)v10[1];
  long long v8 = v10[2];
  long long v9 = v10[3];
  v6[12] = v11;
  *((_OWORD *)v6 + 4) = v8;
  *((_OWORD *)v6 + 5) = v9;
  *((__n128 *)v6 + 3) = result;
  *a1 = v3;
  return result;
}

void sub_1ACE00AA4(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6078);
  uint64_t v5 = sub_1ACE76578();
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1ACE00B48(os_unfair_lock_s *a1)
{
  uint64_t v1 = a1 + 4;
  uint64_t v2 = a1 + 6;
  os_unfair_lock_lock(a1 + 6);
  sub_1ACE024E4(v1);
  os_unfair_lock_unlock(v2);
}

uint64_t sub_1ACE00BA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE75DC8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1ACE75E48();
  uint64_t v6 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  long long v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = (os_unfair_lock_s **)&v0[OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator__donationInProgress];
  swift_beginAccess();
  LOBYTE(v20) = 0;
  uint64_t v10 = *v9;
  id v19 = &v20;
  uint64_t v11 = v10 + 4;
  uint64_t v12 = v10 + 5;
  os_unfair_lock_lock(v10 + 5);
  sub_1ACE01238(v11);
  os_unfair_lock_unlock(v12);
  swift_endAccess();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v1;
  aBlock[4] = sub_1ACE01248;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_26_5;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = v1;
  sub_1ACE75E08();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  sub_1ACDFE69C((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v8, v5, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
  return swift_release();
}

id SiriDonator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SiriDonator.init()()
{
}

id SiriDonator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SiriDonator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unsigned char *sub_1ACE01014@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1ACAD4660(a1, *(unsigned char **)(v2 + 16), *(unsigned char **)(v2 + 24), a2);
}

uint64_t sub_1ACE01030()
{
  return swift_deallocObject();
}

void sub_1ACE01068()
{
  sub_1ACDFEC58(*(char **)(v0 + 16));
}

uint64_t method lookup function for SiriDonator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriDonator);
}

uint64_t dispatch thunk of SiriDonator.__allocating_init(backgroundTaskManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of SiriDonator.startDonation()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

unsigned char *storeEnumTagSinglePayload for SiriDonator.DonationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE0119CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriDonator.DonationType()
{
  return &type metadata for SiriDonator.DonationType;
}

unint64_t sub_1ACE011D8()
{
  unint64_t result = qword_1E99F6060;
  if (!qword_1E99F6060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6060);
  }
  return result;
}

unsigned char *sub_1ACE0122C(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

unsigned char *sub_1ACE01238(unsigned char *result)
{
  *unint64_t result = **(unsigned char **)(v1 + 16);
  return result;
}

id sub_1ACE01248()
{
  return objc_msgSend(*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_backgroundTaskManager), sel_endBackgroundTask);
}

uint64_t sub_1ACE01264()
{
  return swift_deallocObject();
}

uint64_t sub_1ACE01274()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_1ACE012D4(void *a1)
{
  sub_1ACDFF3E0(a1, (unsigned char *)(v1 + 16), *(void *)(v1 + 88), *(NSObject **)(v1 + 96));
}

uint64_t sub_1ACE012E0()
{
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACE01328()
{
  return sub_1ACDFFAF8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1ACE01334(uint64_t a1, void *a2)
{
  uint64_t v108 = sub_1ACE75DC8();
  uint64_t v107 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  char v105 = (char *)&v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1ACE75E48();
  uint64_t v104 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v103 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE75EC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (unint64_t)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = swift_allocObject();
  *(void *)(v110 + 16) = a2;
  uint64_t v10 = *(void **)(a1 + OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_workQueue);
  *(void *)unint64_t v9 = v10;
  (*(void (**)(unint64_t, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
  id v11 = a2;
  id v109 = v10;
  LOBYTE(v10) = sub_1ACE75EF8();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    unsigned int v12 = objc_msgSend(self, sel_isRunningOnHomepod);
    uint64_t v13 = MEMORY[0x1E4FBC860];
    if (!v12)
    {
      id v20 = objc_msgSend(self, sel_ams_sharedAccountStore);
      id v21 = objc_msgSend(v20, sel_ams_activeiTunesAccount);

      os_log_type_t v22 = *(void **)(a1 + OBJC_IVAR____TtC18PodcastsFoundation11SiriDonator_mediaRequestController);
      v127[3] = type metadata accessor for MediaRequestController();
      v127[4] = &protocol witness table for MediaRequestController;
      v127[0] = v22;
      uint64_t v125 = &_s11KoaProviderVN;
      v126 = &off_1F03A3320;
      LOBYTE(aBlock) = 2;
      uint64_t v134 = v13;
      uint64_t v23 = v109;
      id v135 = v109;
      sub_1ACA3E158((uint64_t)v124, (uint64_t)&v130);
      sub_1ACA3E158((uint64_t)v127, (uint64_t)v123);
      _s11DataFetcherCMa();
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 88) = 0;
      *(void *)(v24 + 96) = 0;
      *(unsigned char *)(v24 + 16) = 2;
      *(void *)(v24 + 24) = v21;
      sub_1ACA3E158((uint64_t)v123, v24 + 32);
      id v25 = objc_allocWithZone(MEMORY[0x1E4F72000]);
      id v26 = v23;
      id v27 = v22;
      id v28 = objc_msgSend(v25, sel_init);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v123);
      *(void *)(v24 + 72) = v28;
      *(void *)(v24 + 80) = v26;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v124);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v127);
      uint64_t v129 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E450);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1ACE843F0;
      sub_1ACCC2BC8((uint64_t)&aBlock, v29 + 32);
      sub_1ACDFECF0(v29);
      swift_bridgeObjectRelease();
      sub_1ACCC2C00((uint64_t)&aBlock);
      return swift_release();
    }
    id v14 = objc_msgSend(self, sel_ams_sharedAccountStore);
    id v15 = objc_msgSend(v14, sel_ams_iTunesAccounts);

    sub_1ACA50D4C(0, &qword_1E99F6068);
    unint64_t v9 = sub_1ACE76578();

    uint64_t aBlock = v13;
    if (!(v9 >> 62))
    {
      uint64_t v16 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v16) {
        goto LABEL_5;
      }
LABEL_19:
      swift_bridgeObjectRelease();
      uint64_t v30 = MEMORY[0x1E4FBC860];
      if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
        goto LABEL_50;
      }
      goto LABEL_20;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (!v16) {
    goto LABEL_19;
  }
LABEL_5:
  if (v16 < 1)
  {
    __break(1u);
    goto LABEL_57;
  }
  for (uint64_t i = 0; i != v16; ++i)
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v18 = (id)MEMORY[0x1AD119490](i, v9);
    }
    else {
      id v18 = *(id *)(v9 + 8 * i + 32);
    }
    id v19 = v18;
    if (objc_msgSend(v18, sel_ams_isLocalAccount))
    {
    }
    else
    {
      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v30 = aBlock;
  if (aBlock < 0)
  {
LABEL_50:
    swift_retain();
    uint64_t v31 = sub_1ACE77508();
    swift_release();
    if (!v31) {
      goto LABEL_51;
    }
    goto LABEL_22;
  }
LABEL_20:
  if ((v30 & 0x4000000000000000) != 0) {
    goto LABEL_50;
  }
  uint64_t v31 = *(void *)(v30 + 16);
  if (v31)
  {
LABEL_22:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6070);
    uint64_t v32 = swift_allocObject();
    *(_DWORD *)(v32 + 24) = 0;
    uint64_t v116 = v32;
    *(void *)(v32 + 16) = MEMORY[0x1E4FBC860];
    dispatch_group_t v115 = dispatch_group_create();
    unint64_t v120 = v30 & 0xC000000000000001;
    char v114 = &v130;
    uint64_t v33 = 4;
    *(void *)&long long v34 = 141558275;
    long long v119 = v34;
    uint64_t v112 = MEMORY[0x1E4FBC840] + 8;
    unint64_t v111 = 0x80000001ACED34D0;
    uint64_t v118 = v30;
    uint64_t v117 = v31;
    while (1)
    {
      if (v120) {
        id v43 = (id)MEMORY[0x1AD119490](v33 - 4, v30);
      }
      else {
        id v43 = *(id *)(v30 + 8 * v33);
      }
      uint64_t v44 = v43;
      if (__OFADD__(v33 - 4, 1))
      {
        __break(1u);
        goto LABEL_50;
      }
      if (qword_1EB76D4A0 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_1ACE754C8();
      __swift_project_value_buffer(v45, (uint64_t)qword_1EB76D488);
      id v46 = v44;
      id v47 = sub_1ACE75498();
      os_log_type_t v48 = sub_1ACE76C08();
      BOOL v49 = os_log_type_enabled(v47, v48);
      uint64_t v122 = v33;
      uint64_t v121 = v33 - 3;
      if (v49)
      {
        uint64_t v50 = swift_slowAlloc();
        uint64_t v51 = swift_slowAlloc();
        uint64_t aBlock = v51;
        *(_DWORD *)uint64_t v50 = v119;
        *(void *)(v50 + 4) = 1752392040;
        *(_WORD *)(v50 + 12) = 2081;
        id v52 = objc_msgSend(v46, sel_description);
        uint64_t v53 = sub_1ACE761B8();
        unint64_t v55 = v54;

        *(void *)(v50 + 14) = sub_1ACA3189C(v53, v55, &aBlock);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v47, v48, "Trying to create job for iTunes account: %{private,mask.hash}s", (uint8_t *)v50, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v51, -1, -1);
        MEMORY[0x1AD11B340](v50, -1, -1);
      }
      else
      {
      }
      id v56 = objc_msgSend(v46, sel_ams_DSID);
      if (v56) {
        break;
      }
      id v75 = v46;
      unint64_t v76 = sub_1ACE75498();
      os_log_type_t v77 = sub_1ACE76BE8();
      if (!os_log_type_enabled(v76, v77))
      {

LABEL_44:
        goto LABEL_25;
      }
      uint64_t v78 = swift_slowAlloc();
      uint64_t v79 = swift_slowAlloc();
      uint64_t aBlock = v79;
      *(_DWORD *)uint64_t v78 = v119;
      *(void *)(v78 + 4) = 1752392040;
      *(_WORD *)(v78 + 12) = 2081;
      id v80 = objc_msgSend(v75, sel_description);
      uint64_t v81 = sub_1ACE761B8();
      unint64_t v83 = v82;

      *(void *)(v78 + 14) = sub_1ACA3189C(v81, v83, &aBlock);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v76, v77, "Could not get DSID for iTunes account: %{private,mask.hash}s", (uint8_t *)v78, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v79, -1, -1);
      MEMORY[0x1AD11B340](v78, -1, -1);

LABEL_25:
      uint64_t v30 = v118;
      uint64_t v33 = v122 + 1;
      if (v121 == v117)
      {
        swift_release();
        uint64_t v92 = (void *)swift_allocObject();
        void v92[2] = v116;
        v92[3] = sub_1ACE02410;
        v92[4] = v110;
        v132 = sub_1ACE02458;
        uint64_t v133 = v92;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v129 = 1107296256;
        unint64_t v130 = sub_1ACA6DA9C;
        v131 = &block_descriptor_47_0;
        char v93 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        uint64_t v94 = v103;
        sub_1ACE75E08();
        v127[0] = MEMORY[0x1E4FBC860];
        sub_1ACDFE69C((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
        sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
        uint64_t v95 = v105;
        uint64_t v96 = v108;
        sub_1ACE770E8();
        dispatch_group_t v97 = v115;
        sub_1ACE76C68();
        _Block_release(v93);
        swift_release();

        (*(void (**)(char *, uint64_t))(v107 + 8))(v95, v96);
        (*(void (**)(char *, uint64_t))(v104 + 8))(v94, v106);
        swift_release();
        return swift_release();
      }
    }
    uint64_t v57 = v56;
    unsigned __int8 v58 = objc_msgSend(v46, sel_ams_isActiveForMediaType_, 0);
    if ((v58 & 1) != 0
      || (id v59 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults),
          id v60 = (void *)sub_1ACE76178(),
          objc_msgSend(v59, sel_doubleForKey_, v60),
          double v62 = v61,
          v59,
          v60,
          v62 == 0.0)
      || (sub_1ACE74FC8(), v63 - v62 > 86400.0))
    {
      id v64 = v46;
      uint64_t v65 = sub_1ACE75498();
      os_log_type_t v66 = sub_1ACE76C08();
      if (os_log_type_enabled(v65, v66))
      {
        uint64_t v67 = swift_slowAlloc();
        uint64_t v68 = swift_slowAlloc();
        uint64_t aBlock = v68;
        *(_DWORD *)uint64_t v67 = v119;
        *(void *)(v67 + 4) = 1752392040;
        *(_WORD *)(v67 + 12) = 2081;
        id v69 = objc_msgSend(v64, sel_description);
        uint64_t v70 = sub_1ACE761B8();
        uint64_t v113 = v57;
        unsigned __int8 v71 = v58;
        uint64_t v72 = a1;
        unint64_t v74 = v73;

        *(void *)(v67 + 14) = sub_1ACA3189C(v70, v74, &aBlock);
        a1 = v72;
        unsigned __int8 v58 = v71;
        uint64_t v57 = v113;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v65, v66, "Proceeding to get siri shared user id's for account: %{private,mask.hash}s", (uint8_t *)v67, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v68, -1, -1);
        MEMORY[0x1AD11B340](v67, -1, -1);
      }
      else
      {
      }
      dispatch_group_t v35 = v115;
      dispatch_group_enter(v115);
      id v36 = objc_msgSend(self, sel_specificAccountWithDSID_, v57);
      id v37 = objc_msgSend(self, sel_defaultIdentityStore);
      uint64_t v38 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v38;
      *(void *)(v39 + 24) = v64;
      *(void *)(v39 + 32) = v35;
      *(unsigned char *)(v39 + 40) = v58;
      *(void *)(v39 + 48) = v116;
      v132 = sub_1ACE024B4;
      uint64_t v133 = (void *)v39;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v129 = 1107296256;
      unint64_t v130 = sub_1ACE00AA4;
      v131 = &block_descriptor_54_2;
      uint64_t v40 = _Block_copy(&aBlock);
      id v41 = v64;
      BOOL v42 = v35;
      swift_retain();
      swift_release();
      ICSiriGetSharedUserIDs();
      _Block_release(v40);

      goto LABEL_25;
    }
    id v75 = v46;
    uint64_t v84 = sub_1ACE75498();
    os_log_type_t v85 = sub_1ACE76C08();
    if (os_log_type_enabled(v84, v85))
    {
      uint64_t v86 = swift_slowAlloc();
      uint64_t v87 = swift_slowAlloc();
      uint64_t aBlock = v87;
      *(_DWORD *)uint64_t v86 = v119;
      *(void *)(v86 + 4) = 1752392040;
      *(_WORD *)(v86 + 12) = 2081;
      id v88 = objc_msgSend(v75, sel_description);
      uint64_t v89 = sub_1ACE761B8();
      unint64_t v91 = v90;

      *(void *)(v86 + 14) = sub_1ACA3189C(v89, v91, &aBlock);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v84, v85, "Already sent secondary user data within the last 24 hours. No need to create job for secondary user iTunes account: %{private,mask.hash}s.", (uint8_t *)v86, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v87, -1, -1);
      MEMORY[0x1AD11B340](v86, -1, -1);

      goto LABEL_25;
    }

    goto LABEL_44;
  }
LABEL_51:
  swift_release();
  if (qword_1EB76D4A0 != -1) {
LABEL_57:
  }
    swift_once();
  uint64_t v98 = sub_1ACE754C8();
  __swift_project_value_buffer(v98, (uint64_t)qword_1EB76D488);
  unint64_t v99 = sub_1ACE75498();
  os_log_type_t v100 = sub_1ACE76BE8();
  if (os_log_type_enabled(v99, v100))
  {
    uint64_t v101 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v101 = 0;
    _os_log_impl(&dword_1AC9D5000, v99, v100, "No iTunes accounts on Homepod device. Cannot create donation jobs.", v101, 2u);
    MEMORY[0x1AD11B340](v101, -1, -1);
  }

  sub_1ACDFECF0(MEMORY[0x1E4FBC860]);
  return swift_release();
}

uint64_t sub_1ACE02410(uint64_t a1)
{
  return sub_1ACDFECF0(a1);
}

uint64_t sub_1ACE02418()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ACE02458()
{
  sub_1ACE00B48(*(os_unfair_lock_s **)(v0 + 16));
}

uint64_t sub_1ACE02464()
{
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1ACE024B4(unint64_t a1, void *a2)
{
  sub_1ACDFFE08(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(NSObject **)(v2 + 32), *(unsigned char *)(v2 + 40), *(void *)(v2 + 48));
}

double sub_1ACE024C8(void **a1)
{
  *(void *)&double result = sub_1ACE009C4(a1, *(void *)(v1 + 16)).n128_u64[0];
  return result;
}

uint64_t sub_1ACE024E4(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

ValueMetadata *type metadata accessor for SiriDonator.DonationError()
{
  return &type metadata for SiriDonator.DonationError;
}

uint64_t Publisher.asResult()(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1ACE77C08();
  uint64_t v4 = sub_1ACE75678();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  sub_1ACE75B58();
  swift_release();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  sub_1ACE759B8();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1ACE75B98();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ACE02790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1ACE77C08();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1ACE02894()
{
  return swift_deallocObject();
}

uint64_t sub_1ACE028A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACE02790(a1, a2);
}

uint64_t sub_1ACE028AC(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = sub_1ACE77C08();
  __n128 v4 = MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(AssociatedTypeWitness - 8) + 16))((char *)&v7 - v5, a1, AssociatedTypeWitness, v4);
  swift_storeEnumTagMultiPayload();
  return sub_1ACE759C8();
}

uint64_t sub_1ACE02A00()
{
  return swift_deallocObject();
}

uint64_t sub_1ACE02A10(uint64_t a1)
{
  return sub_1ACE028AC(a1);
}

uint64_t Publisher.nonNilValues<A>()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  void v6[4] = a3;
  sub_1ACE75AE8();
  return swift_release();
}

uint64_t sub_1ACE02AB4()
{
  return swift_deallocObject();
}

uint64_t sub_1ACE02AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1ACE76FD8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a2, a1, v4);
}

uint64_t sub_1ACE02B3C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACE02C84()
{
  sub_1ACE75598();
  return swift_getWitnessTable();
}

uint64_t sub_1ACE02CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1ACE02CE4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1ACE02CF8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1ACE02D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACE02D20);
}

uint64_t sub_1ACE02D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 80);
    if (v12 >= 2) {
      int v13 = ((v12 + 2147483646) & 0x7FFFFFFF) - 1;
    }
    else {
      int v13 = -2;
    }
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t sub_1ACE02E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACE02E1C);
}

uint64_t sub_1ACE02E1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24) + 80) = a2 + 2;
  }
  return result;
}

uint64_t type metadata accessor for DefaultListBuilder()
{
  uint64_t result = qword_1E99F6088;
  if (!qword_1E99F6088) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1ACE02F30()
{
  sub_1ACB8F440();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

double sub_1ACE02FD0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v56 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v56 - v10;
  if (!MTPlaybackContinuousPlaybackEnabled())
  {
    if (qword_1EB76D4C0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1ACE754C8();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EB76D4A8);
    id v20 = sub_1ACE75498();
    os_log_type_t v21 = sub_1ACE76C08();
    if (!os_log_type_enabled(v20, v21)) {
      goto LABEL_22;
    }
    os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v22 = 0;
    uint64_t v23 = "Continuous playback disabled. Returning nil settings";
    goto LABEL_21;
  }
  uint64_t v12 = type metadata accessor for DefaultListBuilder();
  uint64_t v13 = v1 + *(int *)(v12 + 24);
  int v14 = *(unsigned __int16 *)(v13 + 80);
  int v15 = v14 | (*(unsigned __int8 *)(v13 + 82) << 16);
  if (v14 == 2)
  {
    uint64_t v16 = v1 + *(int *)(v12 + 20);
    sub_1ACD16D0C(v16, (uint64_t)v11);
    uint64_t v17 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    id v18 = *(unsigned int (**)(char *, uint64_t, int *))(*((void *)v17 - 1) + 48);
    if (v18(v11, 1, v17) == 1)
    {
      sub_1ACBFDD74((uint64_t)v11);
LABEL_17:
      if (qword_1EB76D4C0 != -1) {
        swift_once();
      }
      uint64_t v53 = sub_1ACE754C8();
      __swift_project_value_buffer(v53, (uint64_t)qword_1EB76D4A8);
      id v20 = sub_1ACE75498();
      os_log_type_t v21 = sub_1ACE76C08();
      if (!os_log_type_enabled(v20, v21)) {
        goto LABEL_22;
      }
      os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v22 = 0;
      uint64_t v23 = "Missing information to generate a new list settings for intent. Returning nil.";
LABEL_21:
      _os_log_impl(&dword_1AC9D5000, v20, v21, v23, v22, 2u);
      MEMORY[0x1AD11B340](v22, -1, -1);
LABEL_22:

      double result = 0.0;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(unsigned char *)(a1 + 82) = 0;
      *(_WORD *)(a1 + 80) = 2;
      return result;
    }
    BOOL v49 = &v11[v17[37]];
    uint64_t v50 = *(void *)v49;
    uint64_t v51 = *((void *)v49 + 1);
    swift_bridgeObjectRetain();
    sub_1ACABFED4((uint64_t)v11);
    if (!v51) {
      goto LABEL_17;
    }
    sub_1ACD16D0C(v16, (uint64_t)v8);
    if (v18(v8, 1, v17) == 1)
    {
      sub_1ACBFDD74((uint64_t)v8);
      unsigned int v52 = 17;
    }
    else
    {
      unsigned int v52 = v8[v17[39]];
      sub_1ACABFED4((uint64_t)v8);
    }
    sub_1ACD16D0C(v16, (uint64_t)v5);
    if (v18(v5, 1, v17) == 1)
    {
      sub_1ACBFDD74((uint64_t)v5);
      __int16 v54 = 0;
    }
    else
    {
      __int16 v54 = v5[v17[40]];
      sub_1ACABFED4((uint64_t)v5);
    }
    if (v52 == 17) {
      uint64_t v55 = 2;
    }
    else {
      uint64_t v55 = v52;
    }
    *(void *)a1 = v50;
    *(void *)(a1 + 8) = v51;
    double result = 0.0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(void *)(a1 + 64) = (v55 << 8) | 2;
    *(void *)(a1 + 72) = 3;
    *(unsigned char *)(a1 + 82) = 0;
    *(_WORD *)(a1 + 80) = v54;
  }
  else
  {
    uint64_t v24 = *(void *)v13;
    uint64_t v25 = *(void *)(v13 + 8);
    uint64_t v26 = *(void *)(v13 + 16);
    uint64_t v27 = *(void *)(v13 + 24);
    uint64_t v29 = *(void *)(v13 + 32);
    uint64_t v28 = *(void *)(v13 + 40);
    uint64_t v30 = *(void *)(v13 + 48);
    uint64_t v31 = *(void *)(v13 + 56);
    uint64_t v34 = v13 + 64;
    uint64_t v32 = *(void *)(v13 + 64);
    uint64_t v33 = *(void *)(v34 + 8);
    uint64_t v58 = (unsigned __int16)v32;
    uint64_t v60 = v30;
    uint64_t v61 = v28;
    uint64_t v59 = v31;
    sub_1ACA63A78(v24, v25, v26, v27, v29, v28, v30, v31, v32);
    if (qword_1EB76D4C0 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1ACE754C8();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EB76D4A8);
    id v36 = sub_1ACE75498();
    os_log_type_t v37 = sub_1ACE76C08();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v57 = v29;
      uint64_t v39 = v27;
      uint64_t v40 = v26;
      uint64_t v41 = v25;
      uint64_t v42 = v24;
      uint64_t v43 = v33;
      uint64_t v44 = v38;
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl(&dword_1AC9D5000, v36, v37, "We already have base settings. Using passed in EpisodeListSettings for intent", v38, 2u);
      uint64_t v45 = v44;
      uint64_t v33 = v43;
      uint64_t v24 = v42;
      uint64_t v25 = v41;
      uint64_t v26 = v40;
      uint64_t v27 = v39;
      uint64_t v29 = v57;
      MEMORY[0x1AD11B340](v45, -1, -1);
    }

    *(void *)a1 = v24;
    *(void *)(a1 + 8) = v25;
    *(void *)(a1 + 16) = v26;
    *(void *)(a1 + 24) = v27;
    uint64_t v47 = v61;
    *(void *)(a1 + 32) = v29;
    *(void *)(a1 + 40) = v47;
    uint64_t v48 = v59;
    *(void *)(a1 + 48) = v60;
    *(void *)(a1 + 56) = v48;
    *(void *)(a1 + 64) = v58;
    *(void *)(a1 + 72) = v33;
    *(_WORD *)(a1 + 80) = v15 & 0x101;
    *(unsigned char *)(a1 + 82) = (v15 & 0x1010101u) >> 16;
  }
  return result;
}

PodcastsFoundation::PodcastEpisodeAttributes::EpisodeType_optional PodcastEpisodeAttributes.episodeType.getter@<W0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 168);
  if (v3)
  {
    uint64_t v4 = *(void *)(v1 + 160);
    swift_bridgeObjectRetain();
    v5._countAndFlagsBits = v4;
    v5._object = v3;
    result.value = PodcastEpisodeAttributes.EpisodeType.init(rawValue:)(v5).value;
    char v7 = v8;
    if (v8 == 3) {
      char v7 = 0;
    }
  }
  else
  {
    char v7 = 0;
  }
  *a1 = v7;
  return result;
}

uint64_t PodcastEpisodeAttributes.EpisodeType.mtEpisodeType.getter()
{
  return *v0;
}

uint64_t PodcastEpisodeAttributes.uti.getter()
{
  uint64_t v1 = sub_1ACE75378();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v5 = *(void **)(v0 + 280);
  if (v5)
  {
    uint64_t v6 = *(void *)(v0 + 272);
    swift_bridgeObjectRetain();
    v7._countAndFlagsBits = v6;
    v7._object = v5;
    PodcastEpisodeAttributes.MediaKind.init(rawValue:)(v7);
    if (v11 != 5)
    {
      if (v11 == 1)
      {
        sub_1ACE75368();
        goto LABEL_6;
      }
      if (v11) {
        return 0;
      }
    }
  }
  sub_1ACE75358();
LABEL_6:
  uint64_t v8 = sub_1ACE752F8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v8;
}

BOOL MediaAttributes.contentRatingResolved.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 96))();
  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  return v3 == 1;
}

uint64_t PodcastEpisodeAttributes.releaseDateResolved.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACE078D8(&OBJC_IVAR____TtC18PodcastsFoundation24PodcastEpisodeAttributes____lazy_storage___releaseDateResolved, (void (*)(uint64_t))sub_1ACE0A708, a1);
}

uint64_t ServerArtwork.urlResolved.getter@<X0>(uint64_t a1@<X8>)
{
  if (!*(void *)(v1 + 56) || (*(unsigned char *)(v1 + 24) & 1) != 0 || (*(unsigned char *)(v1 + 40) & 1) != 0)
  {
    uint64_t v3 = sub_1ACE74F28();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
    return v4(a1, 1, 1, v3);
  }
  else
  {
    uint64_t v6 = *(void *)(v1 + 16);
    uint64_t v7 = *(void *)(v1 + 32);
    type metadata accessor for ArtworkFormatter();
    return static ArtworkFormatter.formatArtworkUrl(string:for:cropCode:fileExtension:)(0, a1, (double)v6, (double)v7);
  }
}

PodcastsFoundation::PodcastAttributes::DisplayType_optional PodcastAttributes.displayTypeResolved.getter@<W0>(unsigned char *a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v3 = *(void **)(v1 + 64);
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = v4;
  v5._object = v3;
  result.value = PodcastAttributes.DisplayType.init(rawValue:)(v5).value;
  char v7 = v8;
  if (v8 == 3) {
    char v7 = 0;
  }
  *a1 = v7;
  return result;
}

uint64_t PodcastAttributes.DisplayType.rawValue.getter()
{
  uint64_t v1 = 1684627824;
  if (*v0 != 1) {
    uint64_t v1 = 0x646972627968;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701147238;
  }
}

uint64_t Kind.rawValue.getter()
{
  if (*v0) {
    return 0x6269726373627573;
  }
  else {
    return 7628135;
  }
}

uint64_t PriceType.rawValue.getter()
{
  return *(void *)&aStdq_10[8 * *v0];
}

uint64_t PodcastEpisodeAttributes.AvailabilityDates.free.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = 1;
  PodcastEpisodeAttributes.AvailabilityDates.subscript.getter(&v10, v4);
  uint64_t v5 = sub_1ACE750A8();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    char v9 = 0;
    PodcastEpisodeAttributes.AvailabilityDates.subscript.getter(&v9, a1);
    return sub_1ACA50E78((uint64_t)v4, (uint64_t *)&unk_1EB773140);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(a1, v4, v5);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
}

uint64_t PodcastEpisodeAttributes.AvailabilityDates.paid.getter@<X0>(char *a1@<X8>)
{
  char v2 = 2;
  return PodcastEpisodeAttributes.AvailabilityDates.subscript.getter(&v2, a1);
}

uint64_t PodcastEpisodeAttributes.EpisodeType.rawValue.getter()
{
  uint64_t v1 = 0x72656C69617274;
  if (*v0 != 1) {
    uint64_t v1 = 0x73756E6F62;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1819047270;
  }
}

uint64_t String.posixTimestampToDate()@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB76E118 != -1) {
    swift_once();
  }
  char v2 = (void *)qword_1EB76E110;
  uint64_t v3 = (void *)sub_1ACE76178();
  id v4 = objc_msgSend(v2, sel_dateFromString_, v3);

  if (v4)
  {
    sub_1ACE75078();

    uint64_t v5 = sub_1ACE750A8();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1ACE750A8();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }
  return v6(v8, v9, 1, v7);
}

BOOL PodcastAttributes.isSerialShowTypeInFeed.getter()
{
  if (*(void *)(v0 + 144)) {
    uint64_t v1 = (void *)sub_1ACE76178();
  }
  else {
    uint64_t v1 = 0;
  }
  id v2 = objc_msgSend(self, sel_showTypeFromString_, v1);

  return v2 == (id)2;
}

uint64_t PodcastEpisodeAttributes.ChannelKind.rawValue.getter()
{
  uint64_t v1 = 30324;
  if (*v0 != 1) {
    uint64_t v1 = 1937204590;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x636973756DLL;
  }
}

PodcastsFoundation::PriceType_optional __swiftcall PriceType.init(rawValue:)(Swift::String rawValue)
{
  id v2 = v1;
  unint64_t v3 = sub_1ACE775B8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *id v2 = v5;
  return result;
}

uint64_t PodcastEpisodeAttributes.episodeArtwork.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  if (!v1) {
    return swift_retain();
  }
  BOOL v2 = *(void *)(v0 + 120) == 0x65646F73697065 && v1 == 0xE700000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

id ServerPodcastEpisode.__allocating_init(id:type:href:attributes:relationships:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v17 = (char *)objc_allocWithZone(v8);
  id v18 = (void **)&v17[OBJC_IVAR___MTServerPodcastEpisode_relationships];
  *(void *)&v17[OBJC_IVAR___MTServerPodcastEpisode_relationships] = 0;
  uint64_t v19 = &v17[OBJC_IVAR___MTServerPodcastEpisode_id];
  *(void *)uint64_t v19 = a1;
  *((void *)v19 + 1) = a2;
  id v20 = &v17[OBJC_IVAR___MTServerPodcastEpisode_type];
  *(void *)id v20 = a3;
  *((void *)v20 + 1) = a4;
  os_log_type_t v21 = &v17[OBJC_IVAR___MTServerPodcastEpisode_href];
  *(void *)os_log_type_t v21 = a5;
  *((void *)v21 + 1) = a6;
  *(void *)&v17[OBJC_IVAR___MTServerPodcastEpisode_attributes] = a7;
  swift_beginAccess();
  os_log_type_t v22 = *v18;
  void *v18 = a8;
  swift_retain();
  id v23 = a8;

  v27.receiver = v17;
  v27.super_class = v26;
  id v24 = objc_msgSendSuper2(&v27, sel_init);
  swift_release();

  return v24;
}

PodcastsFoundation::PodcastEpisodeAttributes::MediaKind_optional PodcastEpisodeAttributes.mediaKindResolved.getter@<W0>(unsigned char *a1@<X8>)
{
  unint64_t v3 = *(void **)(v1 + 280);
  if (v3)
  {
    uint64_t v4 = *(void *)(v1 + 272);
    swift_bridgeObjectRetain();
    v5._countAndFlagsBits = v4;
    v5._object = v3;
    result.value = PodcastEpisodeAttributes.MediaKind.init(rawValue:)(v5).value;
    char v7 = v8;
    if (v8 == 5) {
      char v7 = 0;
    }
  }
  else
  {
    char v7 = 0;
  }
  *a1 = v7;
  return result;
}

uint64_t ServerPodcastBase.id.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastBase.type.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_type);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastBase.attributes.getter()
{
  return swift_retain();
}

uint64_t ServerPodcastBase.relationships.getter()
{
  return swift_retain();
}

uint64_t sub_1ACE03FC4()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701869940;
      break;
    case 2:
      uint64_t result = 0x7475626972747461;
      break;
    case 3:
      uint64_t result = 0x6E6F6974616C6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACE04050(uint64_t a1)
{
  unint64_t v2 = sub_1ACE14034();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE0408C(uint64_t a1)
{
  unint64_t v2 = sub_1ACE14034();
  return MEMORY[0x1F41862B0](a1, v2);
}

id ServerPodcastBase.__deallocating_deinit()
{
  return sub_1ACE05B58(type metadata accessor for ServerPodcastBase);
}

uint64_t sub_1ACE04154(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769120);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE14034();
  sub_1ACE77C78();
  LOBYTE(v12) = 0;
  sub_1ACE77748();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1ACE77748();
    uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
    HIBYTE(v11) = 2;
    type metadata accessor for PodcastAttributes(0);
    sub_1ACE140CC(&qword_1EB767228, 255, (void (*)(uint64_t))type metadata accessor for PodcastAttributes);
    sub_1ACE77728();
    uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships);
    HIBYTE(v11) = 3;
    type metadata accessor for PodcastRelationships();
    sub_1ACE140CC(&qword_1EB7679D0, v9, (void (*)(uint64_t))type metadata accessor for PodcastRelationships);
    sub_1ACE77728();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t ServerPodcastBase.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ServerPodcastBase.init(from:)(a1);
}

unint64_t ServerPodcastBase.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7690B8);
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  uint64_t v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v7);
  unint64_t v8 = sub_1ACE14034();
  uint64_t v9 = v1;
  uint64_t v10 = v6;
  sub_1ACE77C48();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);

    type metadata accessor for ServerPodcastBase();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v12 = v23;
    uint64_t v11 = v24;
    LOBYTE(v28) = 0;
    uint64_t v13 = sub_1ACE77658();
    int v15 = v9;
    uint64_t v16 = (uint64_t *)&v9[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id];
    uint64_t *v16 = v13;
    v16[1] = v17;
    LOBYTE(v28) = 1;
    uint64_t v18 = sub_1ACE77658();
    uint64_t v19 = (uint64_t *)&v15[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_type];
    *uint64_t v19 = v18;
    v19[1] = v20;
    type metadata accessor for PodcastAttributes(0);
    char v27 = 2;
    sub_1ACE140CC(&qword_1EB767230, 255, (void (*)(uint64_t))type metadata accessor for PodcastAttributes);
    sub_1ACE77638();
    *(void *)&v15[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes] = v28;
    type metadata accessor for PodcastRelationships();
    char v27 = 3;
    sub_1ACE140CC(&qword_1EB7679D8, v21, (void (*)(uint64_t))type metadata accessor for PodcastRelationships);
    sub_1ACE77638();
    *(void *)&v15[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships] = v28;

    os_log_type_t v22 = (objc_class *)type metadata accessor for ServerPodcastBase();
    v26.receiver = v15;
    v26.super_class = v22;
    unint64_t v8 = (unint64_t)objc_msgSendSuper2(&v26, sel_init);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  }
  return v8;
}

uint64_t sub_1ACE047D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 120))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1ACE04810(void *a1)
{
  return sub_1ACE04154(a1);
}

uint64_t sub_1ACE04834()
{
  return sub_1ACBCCE10();
}

uint64_t sub_1ACE04840(uint64_t a1)
{
  return sub_1ACBCCE64(a1, &OBJC_IVAR___MTServerPodcast_episodes);
}

uint64_t (*sub_1ACE0484C())()
{
  return j__swift_endAccess;
}

unint64_t ServerPodcast.__allocating_init(from:)(uint64_t a1)
{
  id v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR___MTServerPodcast_episodes] = 0;
  sub_1ACA3E158(a1, (uint64_t)v6);
  unint64_t v4 = ServerPodcastBase.init(from:)(v6);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v4;
}

unint64_t ServerPodcast.init(from:)(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___MTServerPodcast_episodes) = 0;
  sub_1ACA3E158(a1, (uint64_t)v5);
  unint64_t v3 = ServerPodcastBase.init(from:)(v5);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v3;
}

uint64_t sub_1ACE04990()
{
  return swift_bridgeObjectRelease();
}

id ServerPodcast.__deallocating_deinit()
{
  return sub_1ACE05B58(type metadata accessor for ServerPodcast);
}

uint64_t sub_1ACE049C8()
{
  return sub_1ACE06280();
}

uint64_t sub_1ACE049D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ACE062D4(a1, a2, a3, &OBJC_IVAR___MTServerPodcast_episodes);
}

uint64_t (*sub_1ACE049E0())()
{
  return j_j__swift_endAccess;
}

uint64_t ServerPodcastEpisode.id.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_id);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.type.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_type);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.href.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_href);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.attributes.getter()
{
  return swift_retain();
}

void sub_1ACE04B18(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = (void **)(*a2 + OBJC_IVAR___MTServerPodcastEpisode_relationships);
  swift_beginAccess();
  unint64_t v4 = *v3;
  *unint64_t v3 = v2;
  id v5 = v2;
}

void *sub_1ACE04B7C()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_relationships);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1ACE04BCC(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___MTServerPodcastEpisode_relationships);
  swift_beginAccess();
  unint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*sub_1ACE04C20())()
{
  return j_j__swift_endAccess;
}

id ServerPodcastEpisode.init(id:type:href:attributes:relationships:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v10 = (void **)&v8[OBJC_IVAR___MTServerPodcastEpisode_relationships];
  *(void *)&v8[OBJC_IVAR___MTServerPodcastEpisode_relationships] = 0;
  uint64_t v11 = &v8[OBJC_IVAR___MTServerPodcastEpisode_id];
  *(void *)uint64_t v11 = a1;
  *((void *)v11 + 1) = a2;
  uint64_t v12 = &v8[OBJC_IVAR___MTServerPodcastEpisode_type];
  *(void *)uint64_t v12 = a3;
  *((void *)v12 + 1) = a4;
  uint64_t v13 = &v8[OBJC_IVAR___MTServerPodcastEpisode_href];
  *(void *)uint64_t v13 = a5;
  *((void *)v13 + 1) = a6;
  *(void *)&v8[OBJC_IVAR___MTServerPodcastEpisode_attributes] = a7;
  swift_beginAccess();
  int v14 = *v10;
  *uint64_t v10 = a8;
  swift_retain();
  id v15 = a8;

  v18.receiver = v8;
  v18.super_class = (Class)type metadata accessor for ServerPodcastEpisode();
  id v16 = objc_msgSendSuper2(&v18, sel_init);
  swift_release();

  return v16;
}

void sub_1ACE04D60(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___MTServerPodcastEpisode_relationships);
  swift_beginAccess();
  unint64_t v4 = (char *)*v3;
  if (*v3
    || (id v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PodcastEpisodeRelationships()), sel_init),
        uint64_t v6 = *v3,
        *id v3 = v5,
        v6,
        (unint64_t v4 = (char *)*v3) != 0))
  {
    uint64_t v7 = (void **)&v4[OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast];
    swift_beginAccess();
    if (*v7)
    {
      unint64_t v8 = (char *)*v3;
      if (!*v3) {
        return;
      }
    }
    else
    {
      id v9 = objc_allocWithZone((Class)type metadata accessor for PodcastRelationshipContainer());
      uint64_t v10 = v4;
      id v11 = objc_msgSend(v9, sel_init);
      uint64_t v12 = *v7;
      *uint64_t v7 = v11;

      unint64_t v8 = (char *)*v3;
      if (!*v3) {
        return;
      }
    }
    uint64_t v13 = &v8[OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast];
    swift_beginAccess();
    uint64_t v14 = *(void *)v13;
    if (*(void *)v13)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1ACE84830;
      *(void *)(v15 + 32) = a1;
      uint64_t v18 = v15;
      sub_1ACE76598();
      id v16 = (uint64_t *)(v14 + OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data);
      swift_beginAccess();
      uint64_t *v16 = v18;
      id v17 = a1;
      swift_bridgeObjectRelease();
    }
  }
}

void ServerPodcastEpisode.init()()
{
}

uint64_t sub_1ACE04F48()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701869940;
      break;
    case 2:
      uint64_t result = 1717924456;
      break;
    case 3:
      uint64_t result = 0x7475626972747461;
      break;
    case 4:
      uint64_t result = 0x6E6F6974616C6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACE04FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE151DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE05010(uint64_t a1)
{
  unint64_t v2 = sub_1ACE141A4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE0504C(uint64_t a1)
{
  unint64_t v2 = sub_1ACE141A4();
  return MEMORY[0x1F41862B0](a1, v2);
}

id ServerPodcastEpisode.__deallocating_deinit()
{
  return sub_1ACE05B58(type metadata accessor for ServerPodcastEpisode);
}

uint64_t sub_1ACE05128(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F60F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE141A4();
  sub_1ACE77C78();
  LOBYTE(v14) = 0;
  sub_1ACE77748();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_1ACE77748();
    LOBYTE(v14) = 2;
    sub_1ACE77748();
    uint64_t v14 = *(void *)(v3 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
    LOBYTE(v13) = 3;
    type metadata accessor for PodcastEpisodeAttributes(0);
    sub_1ACE140CC(&qword_1E99F4F48, 255, (void (*)(uint64_t))type metadata accessor for PodcastEpisodeAttributes);
    sub_1ACE77788();
    id v9 = (uint64_t *)(v3 + OBJC_IVAR___MTServerPodcastEpisode_relationships);
    swift_beginAccess();
    uint64_t v13 = *v9;
    v12[15] = 4;
    type metadata accessor for PodcastEpisodeRelationships();
    sub_1ACE140CC(&qword_1E99F4F50, v10, (void (*)(uint64_t))type metadata accessor for PodcastEpisodeRelationships);
    sub_1ACE77728();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

char *ServerPodcastEpisode.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ServerPodcastEpisode.init(from:)(a1);
}

char *ServerPodcastEpisode.init(from:)(void *a1)
{
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7690C8);
  uint64_t v4 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v27 = (void **)&v1[OBJC_IVAR___MTServerPodcastEpisode_relationships];
  *(void *)&v1[OBJC_IVAR___MTServerPodcastEpisode_relationships] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE141A4();
  uint64_t v7 = v1;
  sub_1ACE77C48();
  if (v2)
  {
    id v9 = v27;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    uint64_t v10 = *v9;

    type metadata accessor for ServerPodcastEpisode();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v29) = 0;
    uint64_t v8 = sub_1ACE77658();
    uint64_t v12 = (uint64_t *)&v7[OBJC_IVAR___MTServerPodcastEpisode_id];
    *uint64_t v12 = v8;
    v12[1] = v13;
    LOBYTE(v29) = 1;
    uint64_t v14 = sub_1ACE77658();
    uint64_t v15 = (uint64_t *)&v7[OBJC_IVAR___MTServerPodcastEpisode_type];
    *uint64_t v15 = v14;
    v15[1] = v16;
    LOBYTE(v29) = 2;
    uint64_t v17 = sub_1ACE77658();
    uint64_t v18 = (uint64_t *)&v7[OBJC_IVAR___MTServerPodcastEpisode_href];
    uint64_t *v18 = v17;
    v18[1] = v19;
    type metadata accessor for PodcastEpisodeAttributes(0);
    LOBYTE(v30) = 3;
    sub_1ACE140CC(&qword_1EB767EB8, 255, (void (*)(uint64_t))type metadata accessor for PodcastEpisodeAttributes);
    sub_1ACE77698();
    *(void *)&v7[OBJC_IVAR___MTServerPodcastEpisode_attributes] = v29;
    type metadata accessor for PodcastEpisodeRelationships();
    LOBYTE(v29) = 4;
    sub_1ACE140CC(qword_1EB768160, v20, (void (*)(uint64_t))type metadata accessor for PodcastEpisodeRelationships);
    sub_1ACE77638();
    uint64_t v21 = v30;
    os_log_type_t v22 = v27;
    swift_beginAccess();
    uint64_t v23 = *v22;
    *os_log_type_t v22 = v21;

    uint64_t v24 = (objc_class *)type metadata accessor for ServerPodcastEpisode();
    v28.receiver = v7;
    v28.super_class = v24;
    uint64_t v7 = (char *)objc_msgSendSuper2(&v28, sel_init);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_1ACE058A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE06364(a1, type metadata accessor for ServerPodcastEpisode, (uint64_t (*)(uint64_t))ServerPodcastEpisode.init(from:), a2);
}

uint64_t sub_1ACE058E8(void *a1)
{
  return sub_1ACE05128(a1);
}

uint64_t ServerPodcastStation.id.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_id);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastStation.type.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_type);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastStation.attributes.getter()
{
  return swift_retain();
}

uint64_t sub_1ACE059AC()
{
  return sub_1ACBCCE10();
}

uint64_t sub_1ACE059B8(uint64_t a1)
{
  return sub_1ACBCCE64(a1, &OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_episodes);
}

uint64_t (*sub_1ACE059C4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1ACE05A20()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701869940;
      break;
    case 2:
      uint64_t result = 0x7475626972747461;
      break;
    case 3:
      uint64_t result = 0x7365646F73697065;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACE05AA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE153F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE05AC8(uint64_t a1)
{
  unint64_t v2 = sub_1ACE1423C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE05B04(uint64_t a1)
{
  unint64_t v2 = sub_1ACE1423C();
  return MEMORY[0x1F41862B0](a1, v2);
}

id ServerPodcastStation.__deallocating_deinit()
{
  return sub_1ACE05B58(type metadata accessor for ServerPodcastStation);
}

id sub_1ACE05B58(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1ACE05C04(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6120);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE1423C();
  sub_1ACE77C78();
  LOBYTE(v14) = 0;
  sub_1ACE77748();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_1ACE77748();
    uint64_t v14 = *(void *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_attributes);
    LOBYTE(v13) = 2;
    type metadata accessor for PodcastStationAttributes();
    sub_1ACE140CC(&qword_1E99F6130, v9, (void (*)(uint64_t))type metadata accessor for PodcastStationAttributes);
    sub_1ACE77788();
    uint64_t v10 = (uint64_t *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_episodes);
    swift_beginAccess();
    uint64_t v13 = *v10;
    v12[15] = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F32C8);
    sub_1ACBCC408();
    sub_1ACE77728();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void *ServerPodcastStation.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ServerPodcastStation.init(from:)(a1);
}

void *ServerPodcastStation.init(from:)(void *a1)
{
  id v3 = v1;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6138);
  uint64_t v5 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = &v1[OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_episodes];
  *(void *)&v1[OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_episodes] = 0;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE1423C();
  uint64_t v9 = v3;
  sub_1ACE77C48();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    swift_bridgeObjectRelease();
    type metadata accessor for ServerPodcastStation();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v5;
    LOBYTE(v27) = 0;
    uint64_t v11 = v24;
    uint64_t v12 = sub_1ACE77658();
    uint64_t v14 = (uint64_t *)&v9[OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_id];
    *uint64_t v14 = v12;
    v14[1] = v15;
    LOBYTE(v27) = 1;
    uint64_t v16 = sub_1ACE77658();
    uint64_t v17 = (uint64_t *)&v9[OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_type];
    *uint64_t v17 = v16;
    v17[1] = v18;
    type metadata accessor for PodcastStationAttributes();
    LOBYTE(v28) = 2;
    sub_1ACE140CC(&qword_1E99F6140, v19, (void (*)(uint64_t))type metadata accessor for PodcastStationAttributes);
    sub_1ACE77698();
    *(void *)&v9[OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_attributes] = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F32C8);
    LOBYTE(v27) = 3;
    sub_1ACBCCB38();
    sub_1ACE77638();
    uint64_t v20 = v28;
    uint64_t v21 = v25;
    swift_beginAccess();
    *(void *)uint64_t v21 = v20;

    swift_bridgeObjectRelease();
    os_log_type_t v22 = (objc_class *)type metadata accessor for ServerPodcastStation();
    v26.receiver = v9;
    v26.super_class = v22;
    uint64_t v8 = objc_msgSendSuper2(&v26, sel_init);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v11);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v8;
}

uint64_t sub_1ACE06274()
{
  return sub_1ACE06280();
}

uint64_t sub_1ACE06280()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACE062C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ACE062D4(a1, a2, a3, &OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_episodes);
}

uint64_t sub_1ACE062D4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = (void *)(v4 + *a4);
  swift_beginAccess();
  *uint64_t v6 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACE06324@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE06364(a1, type metadata accessor for ServerPodcastStation, (uint64_t (*)(uint64_t))ServerPodcastStation.init(from:), a2);
}

uint64_t sub_1ACE06364@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  id v8 = objc_allocWithZone((Class)a2());
  uint64_t result = a3(a1);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_1ACE063C4(void *a1)
{
  return sub_1ACE05C04(a1);
}

uint64_t sub_1ACE063E8()
{
  if (*v0) {
    return 0x74726F6873;
  }
  else {
    return 0x647261646E617473;
  }
}

uint64_t sub_1ACE06420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE15594(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE06448(uint64_t a1)
{
  unint64_t v2 = sub_1ACE142B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE06484(uint64_t a1)
{
  unint64_t v2 = sub_1ACE142B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ServerDescription.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ServerDescription.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACE06528(void *a1)
{
  return sub_1ACE0D32C(a1, &qword_1EB769118, (void (*)(void))sub_1ACE142B4, (uint64_t)&type metadata for ServerDescription.CodingKeys, MEMORY[0x1E4FBBDD0]);
}

uint64_t ServerDescription.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ServerDescription.init(from:)(a1);
  return v2;
}

uint64_t ServerDescription.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7690B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE142B4();
  sub_1ACE77C48();
  if (v2)
  {
    type metadata accessor for ServerDescription();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v16 = 0;
    *(void *)(v1 + 16) = sub_1ACE775F8();
    *(void *)(v1 + 24) = v9;
    char v15 = 1;
    uint64_t v11 = sub_1ACE775F8();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)(v3 + 32) = v11;
    *(void *)(v3 + 40) = v13;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1ACE067A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE0D714(a1, (void (*)(void))type metadata accessor for ServerDescription, (uint64_t (*)(uint64_t))ServerDescription.init(from:), a2);
}

uint64_t sub_1ACE067E8(void *a1)
{
  return sub_1ACE06528(a1);
}

uint64_t ServerArtwork.width.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ServerArtwork.height.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t ServerArtwork.url.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerArtwork.bgColor.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerArtwork.textColor1.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerArtwork.textColor2.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerArtwork.textColor3.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerArtwork.textColor4.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 ServerArtwork.__allocating_init(width:height:url:bgColor:textColor1:textColor2:textColor3:textColor4:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, __n128 a11, uint64_t a12, uint64_t a13)
{
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  *(unsigned char *)(v20 + 24) = a2 & 1;
  *(void *)(v20 + 32) = a3;
  *(unsigned char *)(v20 + 40) = a4 & 1;
  *(void *)(v20 + 48) = a5;
  *(void *)(v20 + 56) = a6;
  *(void *)(v20 + 64) = a7;
  *(void *)(v20 + 72) = a8;
  *(_OWORD *)(v20 + 80) = a9;
  *(_OWORD *)(v20 + 96) = a10;
  __n128 result = a11;
  *(__n128 *)(v20 + 112) = a11;
  *(void *)(v20 + 128) = a12;
  *(void *)(v20 + 136) = a13;
  return result;
}

uint64_t ServerArtwork.init(width:height:url:bgColor:textColor1:textColor2:textColor3:textColor4:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v13 + 16) = a1;
  *(unsigned char *)(v13 + 24) = a2 & 1;
  *(void *)(v13 + 32) = a3;
  *(unsigned char *)(v13 + 40) = a4 & 1;
  *(void *)(v13 + 48) = a5;
  *(void *)(v13 + 56) = a6;
  *(void *)(v13 + 64) = a7;
  *(void *)(v13 + 72) = a8;
  *(_OWORD *)(v13 + 80) = a9;
  *(_OWORD *)(v13 + 96) = a10;
  *(_OWORD *)(v13 + 112) = a11;
  *(void *)(v13 + 128) = a12;
  *(void *)(v13 + 136) = a13;
  return v13;
}

uint64_t sub_1ACE06A54()
{
  uint64_t result = 0x6874646977;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746867696568;
      break;
    case 2:
      uint64_t result = 7107189;
      break;
    case 3:
      uint64_t result = 0x726F6C6F436762;
      break;
    case 4:
      uint64_t result = 0x6F6C6F4374786574;
      break;
    case 5:
      uint64_t result = 0x6F6C6F4374786574;
      break;
    case 6:
      uint64_t result = 0x6F6C6F4374786574;
      break;
    case 7:
      uint64_t result = 0x6F6C6F4374786574;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACE06B60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE15680(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE06B88(uint64_t a1)
{
  unint64_t v2 = sub_1ACE14554();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE06BC4(uint64_t a1)
{
  unint64_t v2 = sub_1ACE14554();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ServerArtwork.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ServerArtwork.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ServerArtwork.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7690F0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE14554();
  sub_1ACE77C78();
  v8[15] = 0;
  sub_1ACE77718();
  if (!v1)
  {
    v8[14] = 1;
    sub_1ACE77718();
    v8[13] = 2;
    sub_1ACE776E8();
    v8[12] = 3;
    sub_1ACE776E8();
    v8[11] = 4;
    sub_1ACE776E8();
    v8[10] = 5;
    sub_1ACE776E8();
    v8[9] = 6;
    sub_1ACE776E8();
    v8[8] = 7;
    sub_1ACE776E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ServerArtwork.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ServerArtwork.init(from:)(a1);
  return v2;
}

uint64_t ServerArtwork.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  v20[1] = *(void *)v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769088);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE14554();
  sub_1ACE77C48();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v28 = 0;
    *(void *)(v1 + 16) = sub_1ACE77628();
    *(unsigned char *)(v1 + 24) = v9 & 1;
    char v27 = 1;
    *(void *)(v1 + 32) = sub_1ACE77628();
    *(unsigned char *)(v1 + 40) = v10 & 1;
    char v26 = 2;
    *(void *)(v1 + 48) = sub_1ACE775F8();
    *(void *)(v1 + 56) = v12;
    char v25 = 3;
    *(void *)(v1 + 64) = sub_1ACE775F8();
    *(void *)(v1 + 72) = v13;
    char v24 = 4;
    *(void *)(v1 + 80) = sub_1ACE775F8();
    *(void *)(v1 + 88) = v14;
    char v23 = 5;
    *(void *)(v1 + 96) = sub_1ACE775F8();
    *(void *)(v1 + 104) = v15;
    char v22 = 6;
    *(void *)(v1 + 112) = sub_1ACE775F8();
    *(void *)(v1 + 120) = v16;
    char v21 = 7;
    uint64_t v17 = sub_1ACE775F8();
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)(v3 + 128) = v17;
    *(void *)(v3 + 136) = v19;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1ACE07328@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE13C60(a1, (uint64_t (*)(uint64_t))ServerArtwork.init(from:), a2);
}

uint64_t sub_1ACE07358(void *a1)
{
  return ServerArtwork.encode(to:)(a1);
}

uint64_t sub_1ACE0737C(uint64_t *a1, uint64_t *a2)
{
  return _s18PodcastsFoundation13ServerArtworkC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

id sub_1ACE0738C()
{
  id result = sub_1ACE073AC();
  qword_1EB76E110 = (uint64_t)result;
  return result;
}

id sub_1ACE073AC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C88);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1ACE75148();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  sub_1ACE75128();
  id v8 = (void *)sub_1ACE75138();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  objc_msgSend(v7, sel_setLocale_, v8);

  char v9 = (void *)sub_1ACE76178();
  objc_msgSend(v7, sel_setDateFormat_, v9);

  sub_1ACE75218();
  uint64_t v10 = sub_1ACE75248();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v2, 1, v10) != 1)
  {
    uint64_t v12 = (void *)sub_1ACE75228();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v2, v10);
  }
  objc_msgSend(v7, sel_setTimeZone_, v12);

  return v7;
}

id static NSDateFormatter.posixTimestampFormatter.getter()
{
  if (qword_1EB76E118 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB76E110;
  return v0;
}

uint64_t PodcastAttributes.artistName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.url.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.subscribable.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

PodcastsFoundation::PodcastAttributes::DisplayType_optional __swiftcall PodcastAttributes.DisplayType.init(rawValue:)(Swift::String rawValue)
{
  return (PodcastsFoundation::PodcastAttributes::DisplayType_optional)sub_1ACB26C18(v1);
}

PodcastsFoundation::PodcastAttributes::DisplayType_optional sub_1ACE076CC(Swift::String *a1)
{
  return PodcastAttributes.DisplayType.init(rawValue:)(*a1);
}

uint64_t PodcastAttributes.displayType.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.feedUrl.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.description.getter()
{
  return swift_retain();
}

uint64_t PodcastAttributes.artwork.getter()
{
  return swift_retain();
}

uint64_t PodcastAttributes.copyright.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.kind.getter()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.editorialArtwork.getter()
{
  return swift_retain();
}

uint64_t PodcastAttributes.releaseDateTime.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.contentRating.getter()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.websiteUrl.getter()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.genreNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PodcastAttributes.seasonNumbers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PodcastAttributes.offers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PodcastAttributes.upsell.getter()
{
  uint64_t v1 = *(void *)(v0 + 232);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastAttributes.releaseDateResolved.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACE078D8(&OBJC_IVAR____TtC18PodcastsFoundation17PodcastAttributes____lazy_storage___releaseDateResolved, (void (*)(uint64_t))sub_1ACE07AB0, a1);
}

uint64_t sub_1ACE078D8@<X0>(void *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A958);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = &v17[-v11];
  uint64_t v13 = v3 + *a1;
  swift_beginAccess();
  sub_1ACA3AAD4(v13, (uint64_t)v12, &qword_1EB76A958);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1) {
    return sub_1ACA50E14((uint64_t)v12, a3, (uint64_t *)&unk_1EB773140);
  }
  sub_1ACA50E78((uint64_t)v12, &qword_1EB76A958);
  a2(v3);
  sub_1ACA3AAD4(a3, (uint64_t)v10, (uint64_t *)&unk_1EB773140);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  swift_beginAccess();
  sub_1ACE0A900((uint64_t)v10, v13);
  return swift_endAccess();
}

uint64_t sub_1ACE07AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 168))
  {
    if (qword_1EB76E118 != -1) {
      swift_once();
    }
    uint64_t v7 = (void *)qword_1EB76E110;
    uint64_t v8 = (void *)sub_1ACE76178();
    id v9 = objc_msgSend(v7, sel_dateFromString_, v8);

    if (v9)
    {
      sub_1ACE75078();

      uint64_t v10 = sub_1ACE750A8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 0, 1, v10);
    }
    else
    {
      uint64_t v14 = sub_1ACE750A8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
    }
    return sub_1ACA50E14((uint64_t)v6, a2, (uint64_t *)&unk_1EB773140);
  }
  else
  {
    uint64_t v11 = sub_1ACE750A8();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    return v12(a2, 1, 1, v11);
  }
}

unint64_t sub_1ACE07CA8(char a1)
{
  unint64_t result = 0x614E747369747261;
  switch(a1)
  {
    case 1:
      unint64_t result = 7107189;
      break;
    case 2:
      unint64_t result = 0x6269726373627573;
      break;
    case 3:
      unint64_t result = 0x5479616C70736964;
      break;
    case 4:
      unint64_t result = 0x6C725564656566;
      break;
    case 5:
      unint64_t result = 1701667182;
      break;
    case 6:
      unint64_t result = 0x7470697263736564;
      break;
    case 7:
      unint64_t result = 0x6B726F77747261;
      break;
    case 8:
      unint64_t result = 0x6867697279706F63;
      break;
    case 9:
      unint64_t result = 1684957547;
      break;
    case 10:
      unint64_t result = 0xD000000000000010;
      break;
    case 11:
      unint64_t result = 0x44657361656C6572;
      break;
    case 12:
      unint64_t result = 0x52746E65746E6F63;
      break;
    case 13:
      unint64_t result = 0x5565746973626577;
      break;
    case 14:
      unint64_t result = 0x6D614E65726E6567;
      break;
    case 15:
      unint64_t result = 0x754E6E6F73616573;
      break;
    case 16:
      unint64_t result = 0x73726566666FLL;
      break;
    case 17:
      unint64_t result = 0x6C6C65737075;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACE07EEC()
{
  return sub_1ACE07CA8(*v0);
}

uint64_t sub_1ACE07EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE15984(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ACE07F1C(unsigned char *a1@<X8>)
{
  *a1 = 18;
}

uint64_t sub_1ACE07F28(uint64_t a1)
{
  unint64_t v2 = sub_1ACE145A8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE07F64(uint64_t a1)
{
  unint64_t v2 = sub_1ACE145A8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PodcastAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACA50E78(v0 + OBJC_IVAR____TtC18PodcastsFoundation17PodcastAttributes____lazy_storage___releaseDateResolved, &qword_1EB76A958);
  return v0;
}

uint64_t PodcastAttributes.__deallocating_deinit()
{
  return sub_1ACE0B220((void (*)(void))PodcastAttributes.deinit);
}

uint64_t PodcastAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769110);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE145A8();
  sub_1ACE77C78();
  LOBYTE(v14) = 0;
  sub_1ACE776E8();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_1ACE776E8();
    LOBYTE(v14) = 2;
    sub_1ACE776F8();
    LOBYTE(v14) = 3;
    sub_1ACE77748();
    LOBYTE(v14) = 4;
    sub_1ACE776E8();
    LOBYTE(v14) = 5;
    sub_1ACE776E8();
    uint64_t v14 = v3[13];
    HIBYTE(v13) = 6;
    type metadata accessor for ServerDescription();
    sub_1ACE140CC(&qword_1EB767380, v9, (void (*)(uint64_t))type metadata accessor for ServerDescription);
    sub_1ACE77728();
    uint64_t v14 = v3[14];
    HIBYTE(v13) = 7;
    type metadata accessor for ServerArtwork();
    sub_1ACE140CC(&qword_1EB766D38, v10, (void (*)(uint64_t))type metadata accessor for ServerArtwork);
    sub_1ACE77728();
    LOBYTE(v14) = 8;
    sub_1ACE776E8();
    LOBYTE(v14) = 9;
    sub_1ACE776E8();
    uint64_t v14 = v3[19];
    HIBYTE(v13) = 10;
    type metadata accessor for PodcastEditorialArtworkContainer();
    sub_1ACE140CC(&qword_1EB768590, v11, (void (*)(uint64_t))type metadata accessor for PodcastEditorialArtworkContainer);
    sub_1ACE77728();
    LOBYTE(v14) = 11;
    sub_1ACE776E8();
    LOBYTE(v14) = 12;
    sub_1ACE776E8();
    LOBYTE(v14) = 13;
    sub_1ACE776E8();
    uint64_t v14 = v3[26];
    HIBYTE(v13) = 14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
    sub_1ACE1470C(&qword_1EB768E60, &qword_1EB7731B8);
    sub_1ACE77728();
    uint64_t v14 = v3[27];
    HIBYTE(v13) = 15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E098);
    sub_1ACE1470C((unint64_t *)&unk_1EB7709D0, &qword_1EB76E098);
    sub_1ACE77728();
    uint64_t v14 = v3[28];
    HIBYTE(v13) = 16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E18);
    sub_1ACE14644();
    sub_1ACE77728();
    LOBYTE(v14) = 17;
    sub_1ACE776E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PodcastAttributes.__allocating_init(from:)(uint64_t a1)
{
  return sub_1ACE0B984(a1, (void (*)(uint64_t))PodcastAttributes.init(from:));
}

void *PodcastAttributes.init(from:)(void *a1)
{
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7690A8);
  uint64_t v37 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + OBJC_IVAR____TtC18PodcastsFoundation17PodcastAttributes____lazy_storage___releaseDateResolved;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE145A8();
  uint64_t v38 = v5;
  uint64_t v8 = (void *)v1;
  sub_1ACE77C48();
  if (v2)
  {
    sub_1ACA50E78(v1 + OBJC_IVAR____TtC18PodcastsFoundation17PodcastAttributes____lazy_storage___releaseDateResolved, &qword_1EB76A958);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = v37;
    LOBYTE(v41) = 0;
    *(void *)(v1 + 16) = sub_1ACE775F8();
    *(void *)(v1 + 24) = v10;
    LOBYTE(v41) = 1;
    *(void *)(v1 + 32) = sub_1ACE775F8();
    *(void *)(v1 + 40) = v11;
    LOBYTE(v41) = 2;
    *(unsigned char *)(v1 + 48) = sub_1ACE77608();
    LOBYTE(v41) = 3;
    *(void *)(v1 + 56) = sub_1ACE77658();
    *(void *)(v1 + 64) = v13;
    LOBYTE(v41) = 4;
    *(void *)(v1 + 72) = sub_1ACE775F8();
    *(void *)(v1 + 80) = v14;
    LOBYTE(v41) = 5;
    *(void *)(v1 + 88) = sub_1ACE775F8();
    *(void *)(v1 + 96) = v15;
    type metadata accessor for ServerDescription();
    char v40 = 6;
    sub_1ACE140CC(&qword_1EB767388, v16, (void (*)(uint64_t))type metadata accessor for ServerDescription);
    sub_1ACE77638();
    id v36 = (void *)v1;
    *(void *)(v1 + 104) = v41;
    type metadata accessor for ServerArtwork();
    char v40 = 7;
    sub_1ACE140CC(&qword_1EB766D40, v17, (void (*)(uint64_t))type metadata accessor for ServerArtwork);
    sub_1ACE77638();
    uint64_t v18 = v36;
    v36[14] = v41;
    LOBYTE(v41) = 8;
    v18[15] = sub_1ACE775F8();
    unsigned char v18[16] = v19;
    LOBYTE(v41) = 9;
    uint64_t v20 = sub_1ACE775F8();
    char v21 = v36;
    v36[17] = v20;
    v21[18] = v22;
    type metadata accessor for PodcastEditorialArtworkContainer();
    char v40 = 10;
    sub_1ACE140CC(&qword_1EB768598, v23, (void (*)(uint64_t))type metadata accessor for PodcastEditorialArtworkContainer);
    sub_1ACE77638();
    v36[19] = v41;
    LOBYTE(v41) = 11;
    uint64_t v24 = sub_1ACE775F8();
    char v25 = v36;
    v36[20] = v24;
    v25[21] = v26;
    LOBYTE(v41) = 12;
    uint64_t v27 = sub_1ACE775F8();
    char v28 = v36;
    v36[22] = v27;
    v28[23] = v29;
    LOBYTE(v41) = 13;
    uint64_t v30 = sub_1ACE775F8();
    uint64_t v31 = v36;
    v36[24] = v30;
    v31[25] = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
    char v40 = 14;
    sub_1ACE1470C(&qword_1EB768E68, &qword_1EB7731B8);
    sub_1ACE77638();
    v36[26] = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E098);
    char v40 = 15;
    sub_1ACE1470C((unint64_t *)&unk_1EB76E0A0, &qword_1EB76E098);
    sub_1ACE77638();
    v36[27] = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E18);
    char v40 = 16;
    sub_1ACE1476C();
    sub_1ACE77638();
    v36[28] = v41;
    LOBYTE(v41) = 17;
    uint64_t v33 = sub_1ACE775F8();
    uint64_t v35 = v34;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v38, v39);
    uint64_t v8 = v36;
    v36[29] = v33;
    v8[30] = v35;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v8;
}

uint64_t sub_1ACE0928C()
{
  return *(unsigned __int8 *)(*(void *)v0 + 48);
}

uint64_t sub_1ACE09298()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACE092CC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACE09300()
{
  return swift_retain();
}

uint64_t sub_1ACE0930C()
{
  return swift_retain();
}

uint64_t sub_1ACE09318()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACE0934C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACE09384@<X0>(uint64_t a1@<X8>)
{
  return PodcastAttributes.releaseDateResolved.getter(a1);
}

uint64_t sub_1ACE093A8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1ACE093DC()
{
  if (!*(void *)(*(void *)v0 + 184)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  return v1 == 1;
}

uint64_t sub_1ACE09444()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACE09450@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE0CB88(a1, (uint64_t (*)(uint64_t))PodcastAttributes.init(from:), a2);
}

uint64_t sub_1ACE0947C(void *a1)
{
  return PodcastAttributes.encode(to:)(a1);
}

uint64_t sub_1ACE094A0()
{
  return sub_1ACC25A20();
}

uint64_t sub_1ACE094C0()
{
  return sub_1ACE76108();
}

uint64_t sub_1ACE094E0()
{
  return sub_1ACC25AA0();
}

uint64_t sub_1ACE09500@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA598(a1);
}

void sub_1ACE0950C(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1ACE09530()
{
  return 0x65676150776F6873;
}

uint64_t sub_1ACE09550@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA5F4(a1);
}

uint64_t sub_1ACE0955C(uint64_t a1)
{
  unint64_t v2 = sub_1ACE14810();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE09598(uint64_t a1)
{
  unint64_t v2 = sub_1ACE14810();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PodcastEditorialArtworkContainer.deinit()
{
  swift_release();
  return v0;
}

uint64_t PodcastEditorialArtworkContainer.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t PodcastEditorialArtworkContainer.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7690E0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE14810();
  sub_1ACE77C78();
  v10[1] = *(void *)(v2 + 16);
  type metadata accessor for ServerArtwork();
  sub_1ACE140CC(&qword_1EB766D38, v8, (void (*)(uint64_t))type metadata accessor for ServerArtwork);
  sub_1ACE77728();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PodcastEditorialArtworkContainer.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  PodcastEditorialArtworkContainer.init(from:)(a1);
  return v2;
}

uint64_t PodcastEditorialArtworkContainer.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769078);
  uint64_t v10 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE14810();
  sub_1ACE77C48();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for ServerArtwork();
    sub_1ACE140CC(&qword_1EB766D40, v7, (void (*)(uint64_t))type metadata accessor for ServerArtwork);
    sub_1ACE77638();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v4);
    *(void *)(v1 + 16) = v11;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t sub_1ACE099E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE13C60(a1, (uint64_t (*)(uint64_t))PodcastEditorialArtworkContainer.init(from:), a2);
}

uint64_t sub_1ACE09A10(void *a1)
{
  return PodcastEditorialArtworkContainer.encode(to:)(a1);
}

uint64_t PodcastEpisodeAttributes.feedUrl.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastEpisodeAttributes.offers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PodcastEpisodeAttributes.artwork.getter()
{
  return swift_retain();
}

uint64_t PodcastEpisodeAttributes.copyright.getter()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastEpisodeAttributes.firstAvailableDates.getter()
{
  return swift_retain();
}

uint64_t PodcastEpisodeAttributes.contentRating.getter()
{
  uint64_t v1 = *(void *)(v0 + 216);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastEpisodeAttributes.genreNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PodcastEpisodeAttributes.channelKind.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 256);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastEpisodeAttributes.channelKind.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 256) = a1;
  *(void *)(v2 + 264) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*PodcastEpisodeAttributes.channelKind.modify())()
{
  return j_j__swift_endAccess;
}

PodcastsFoundation::PodcastEpisodeAttributes::ChannelKind_optional __swiftcall PodcastEpisodeAttributes.ChannelKind.init(rawValue:)(Swift::String rawValue)
{
  return (PodcastsFoundation::PodcastEpisodeAttributes::ChannelKind_optional)sub_1ACB26C18(v1);
}

uint64_t sub_1ACE09BE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF4E68(*a1, *a2);
}

uint64_t sub_1ACE09BF0()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACE09C7C()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACE09CF4()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::PodcastEpisodeAttributes::ChannelKind_optional sub_1ACE09D7C(Swift::String *a1)
{
  return PodcastEpisodeAttributes.ChannelKind.init(rawValue:)(*a1);
}

void sub_1ACE09D88(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE200000000000000;
  uint64_t v5 = 30324;
  if (v2 != 1)
  {
    uint64_t v5 = 1937204590;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x636973756DLL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

PodcastsFoundation::PodcastEpisodeAttributes::EpisodeType_optional __swiftcall PodcastEpisodeAttributes.EpisodeType.init(rawValue:)(Swift::String rawValue)
{
  return (PodcastsFoundation::PodcastEpisodeAttributes::EpisodeType_optional)sub_1ACB26C18(v1);
}

uint64_t sub_1ACE09DDC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF4F54(*a1, *a2);
}

uint64_t sub_1ACE09DE8()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACE09E80()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACE09F04()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::PodcastEpisodeAttributes::EpisodeType_optional sub_1ACE09F98(Swift::String *a1)
{
  return PodcastEpisodeAttributes.EpisodeType.init(rawValue:)(*a1);
}

void sub_1ACE09FA4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x72656C69617274;
  if (v2 != 1)
  {
    uint64_t v5 = 0x73756E6F62;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1819047270;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

PodcastsFoundation::PodcastEpisodeAttributes::MediaKind_optional __swiftcall PodcastEpisodeAttributes.MediaKind.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_1ACE775B8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t PodcastEpisodeAttributes.MediaKind.rawValue.getter()
{
  uint64_t result = 0x6F69647561;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F65646976;
      break;
    case 2:
      uint64_t result = 0x6567616D69;
      break;
    case 3:
      uint64_t result = 0x746E656D75636F64;
      break;
    case 4:
      uint64_t result = 0x6C616E7265747865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACE0A0EC(unsigned __int8 *a1, char *a2)
{
  return sub_1ACCF4CC4(*a1, *a2);
}

uint64_t sub_1ACE0A0F8()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACE0A1DC()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACE0A2A8()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::PodcastEpisodeAttributes::MediaKind_optional sub_1ACE0A388(Swift::String *a1)
{
  return PodcastEpisodeAttributes.MediaKind.init(rawValue:)(*a1);
}

void sub_1ACE0A394(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6F69647561;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x6F65646976;
      goto LABEL_3;
    case 2:
      *a1 = 0x6567616D69;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x746E656D75636F64;
      a1[1] = 0xE800000000000000;
      break;
    case 4:
      *a1 = 0x6C616E7265747865;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE500000000000000;
      break;
  }
}

uint64_t sub_1ACE0A43C()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACE0A49C()
{
  return sub_1ACE764C8();
}

uint64_t PodcastEpisodeAttributes.assetUrl.getter()
{
  uint64_t v1 = *(void *)(v0 + 288);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastEpisodeAttributes.durationInMilliseconds.getter()
{
  return *(void *)(v0 + 304);
}

uint64_t PodcastEpisodeAttributes.guid.getter()
{
  uint64_t v1 = *(void *)(v0 + 320);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastEpisodeAttributes.episodeNumber.getter()
{
  return *(void *)(v0 + 336);
}

uint64_t PodcastEpisodeAttributes.seasonNumber.getter()
{
  return *(void *)(v0 + 352);
}

uint64_t PodcastEpisodeAttributes.inLibrary.getter()
{
  return *(unsigned __int8 *)(v0 + 361);
}

uint64_t sub_1ACE0A584(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A958);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA3AAD4(a1, (uint64_t)v14, (uint64_t *)&unk_1EB773140);
  uint64_t v15 = *a2;
  sub_1ACA50E14((uint64_t)v14, (uint64_t)v10, (uint64_t *)&unk_1EB773140);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  uint64_t v16 = v15 + *a5;
  swift_beginAccess();
  sub_1ACE0A900((uint64_t)v10, v16);
  return swift_endAccess();
}

uint64_t sub_1ACE0A708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v4 - 8);
  BOOL v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 200))
  {
    if (qword_1EB76E118 != -1) {
      swift_once();
    }
    uint64_t v7 = (void *)qword_1EB76E110;
    uint64_t v8 = (void *)sub_1ACE76178();
    id v9 = objc_msgSend(v7, sel_dateFromString_, v8);

    if (v9)
    {
      sub_1ACE75078();

      uint64_t v10 = sub_1ACE750A8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 0, 1, v10);
    }
    else
    {
      uint64_t v14 = sub_1ACE750A8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
    }
    return sub_1ACA50E14((uint64_t)v6, a2, (uint64_t *)&unk_1EB773140);
  }
  else
  {
    uint64_t v11 = sub_1ACE750A8();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    return v12(a2, 1, 1, v11);
  }
}

uint64_t sub_1ACE0A900(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A958);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t PodcastEpisodeAttributes.__allocating_init(artistName:url:subscribable:feedUrl:offers:name:itunesTitle:description:artworkOrigin:artwork:copyright:kind:fullDescription:releaseDateTime:firstAvailableDates:contentRating:websiteUrl:genreNames:mediaKind:assetUrl:durationInMilliseconds:guid:episodeNumber:seasonNumber:inLibrary:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, long long a12, long long a13, long long a14, long long a15, long long a16, long long a17, long long a18, uint64_t a19, uint64_t a20,long long a21,long long a22,uint64_t a23,char a24,long long a25,uint64_t a26,char a27,uint64_t a28,char a29,char a30)
{
  uint64_t v32 = swift_allocObject();
  PodcastEpisodeAttributes.init(artistName:url:subscribable:feedUrl:offers:name:itunesTitle:description:artworkOrigin:artwork:copyright:kind:fullDescription:releaseDateTime:firstAvailableDates:contentRating:websiteUrl:genreNames:mediaKind:assetUrl:durationInMilliseconds:guid:episodeNumber:seasonNumber:inLibrary:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24 & 1,
    a25,
    a26,
    a27 & 1,
    a28,
    a29 & 1,
    a30);
  return v32;
}

uint64_t PodcastEpisodeAttributes.init(artistName:url:subscribable:feedUrl:offers:name:itunesTitle:description:artworkOrigin:artwork:copyright:kind:fullDescription:releaseDateTime:firstAvailableDates:contentRating:websiteUrl:genreNames:mediaKind:assetUrl:durationInMilliseconds:guid:episodeNumber:seasonNumber:inLibrary:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, long long a12, long long a13, long long a14, long long a15, long long a16, long long a17, long long a18, uint64_t a19, uint64_t a20,long long a21,long long a22,uint64_t a23,char a24,long long a25,uint64_t a26,char a27,uint64_t a28,char a29,char a30)
{
  uint64_t v37 = v30 + OBJC_IVAR____TtC18PodcastsFoundation24PodcastEpisodeAttributes____lazy_storage___releaseDateResolved;
  *(void *)(v30 + 256) = 0;
  *(void *)(v30 + 264) = 0;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37, 1, 1, v38);
  *(void *)(v30 + 16) = a1;
  *(void *)(v30 + 24) = a2;
  *(void *)(v30 + 32) = a3;
  *(void *)(v30 + 40) = a4;
  *(unsigned char *)(v30 + 48) = a5;
  *(void *)(v30 + 56) = a6;
  *(void *)(v30 + 64) = a7;
  *(void *)(v30 + 72) = a8;
  *(_OWORD *)(v30 + 80) = a9;
  *(_OWORD *)(v30 + 96) = a10;
  *(_OWORD *)(v30 + 112) = a11;
  *(_OWORD *)(v30 + 128) = a12;
  *(_OWORD *)(v30 + 144) = a13;
  *(_OWORD *)(v30 + 160) = a14;
  *(_OWORD *)(v30 + 176) = a15;
  *(_OWORD *)(v30 + 192) = a16;
  *(_OWORD *)(v30 + 208) = a17;
  *(_OWORD *)(v30 + 224) = a18;
  *(void *)(v30 + 240) = a19;
  *(void *)(v30 + 248) = a20;
  *(_OWORD *)(v30 + 272) = a21;
  *(_OWORD *)(v30 + 288) = a22;
  *(void *)(v30 + 304) = a23;
  *(unsigned char *)(v30 + 312) = a24 & 1;
  *(_OWORD *)(v30 + 320) = a25;
  *(void *)(v30 + 336) = a26;
  *(unsigned char *)(v30 + 344) = a27 & 1;
  *(void *)(v30 + 352) = a28;
  *(unsigned char *)(v30 + 360) = a29 & 1;
  *(unsigned char *)(v30 + 361) = a30;
  return v30;
}

unint64_t sub_1ACE0AD1C(char a1)
{
  unint64_t result = 0x614E747369747261;
  switch(a1)
  {
    case 1:
      unint64_t result = 7107189;
      break;
    case 2:
      unint64_t result = 0x6269726373627573;
      break;
    case 3:
      unint64_t result = 0x6C725564656566;
      break;
    case 4:
      unint64_t result = 0x73726566666FLL;
      break;
    case 5:
      unint64_t result = 1701667182;
      break;
    case 6:
      unint64_t result = 0x695473656E757469;
      break;
    case 7:
      unint64_t result = 0x7470697263736564;
      break;
    case 8:
      unint64_t result = 0x4F6B726F77747261;
      break;
    case 9:
      unint64_t result = 0x6B726F77747261;
      break;
    case 10:
      unint64_t result = 0x6867697279706F63;
      break;
    case 11:
      unint64_t result = 1684957547;
      break;
    case 12:
      unint64_t result = 0x637365446C6C7566;
      break;
    case 13:
      unint64_t result = 0x44657361656C6572;
      break;
    case 14:
      unint64_t result = 0xD000000000000013;
      break;
    case 15:
      unint64_t result = 0x52746E65746E6F63;
      break;
    case 16:
      unint64_t result = 0x5565746973626577;
      break;
    case 17:
      unint64_t result = 0x6D614E65726E6567;
      break;
    case 18:
      unint64_t result = 0x4B6C656E6E616863;
      break;
    case 19:
      unint64_t result = 0x6E694B616964656DLL;
      break;
    case 20:
      unint64_t result = 0x6C72557465737361;
      break;
    case 21:
      unint64_t result = 0xD000000000000016;
      break;
    case 22:
      unint64_t result = 1684632935;
      break;
    case 23:
      unint64_t result = 0x4E65646F73697065;
      break;
    case 24:
      unint64_t result = 0x754E6E6F73616573;
      break;
    case 25:
      unint64_t result = 0x72617262694C6E69;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACE0B07C()
{
  return sub_1ACE0AD1C(*v0);
}

uint64_t sub_1ACE0B084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE1613C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ACE0B0AC(unsigned char *a1@<X8>)
{
  *a1 = 26;
}

uint64_t sub_1ACE0B0B8(uint64_t a1)
{
  unint64_t v2 = sub_1ACE14864();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE0B0F4(uint64_t a1)
{
  unint64_t v2 = sub_1ACE14864();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PodcastEpisodeAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACA50E78(v0 + OBJC_IVAR____TtC18PodcastsFoundation24PodcastEpisodeAttributes____lazy_storage___releaseDateResolved, &qword_1EB76A958);
  return v0;
}

uint64_t PodcastEpisodeAttributes.__deallocating_deinit()
{
  return sub_1ACE0B220((void (*)(void))PodcastEpisodeAttributes.deinit);
}

uint64_t sub_1ACE0B220(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t PodcastEpisodeAttributes.encode(to:)(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6148);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE14864();
  sub_1ACE77C78();
  LOBYTE(v13) = 0;
  sub_1ACE776E8();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1ACE776E8();
    LOBYTE(v13) = 2;
    sub_1ACE776F8();
    LOBYTE(v13) = 3;
    sub_1ACE776E8();
    uint64_t v13 = v3[9];
    char v14 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E48);
    sub_1ACE148B8();
    sub_1ACE77728();
    LOBYTE(v13) = 5;
    sub_1ACE776E8();
    LOBYTE(v13) = 6;
    sub_1ACE776E8();
    uint64_t v13 = v3[14];
    char v14 = 7;
    type metadata accessor for ServerDescription();
    sub_1ACE140CC(&qword_1EB767380, v9, (void (*)(uint64_t))type metadata accessor for ServerDescription);
    sub_1ACE77728();
    LOBYTE(v13) = 8;
    sub_1ACE776E8();
    uint64_t v13 = v3[17];
    char v14 = 9;
    type metadata accessor for ServerArtwork();
    sub_1ACE140CC(&qword_1EB766D38, v10, (void (*)(uint64_t))type metadata accessor for ServerArtwork);
    sub_1ACE77728();
    LOBYTE(v13) = 10;
    sub_1ACE776E8();
    LOBYTE(v13) = 11;
    sub_1ACE776E8();
    LOBYTE(v13) = 12;
    sub_1ACE776E8();
    LOBYTE(v13) = 13;
    sub_1ACE776E8();
    uint64_t v13 = v3[26];
    char v14 = 14;
    type metadata accessor for PodcastEpisodeAttributes.AvailabilityDates();
    sub_1ACE140CC(&qword_1E99F6160, v11, (void (*)(uint64_t))type metadata accessor for PodcastEpisodeAttributes.AvailabilityDates);
    sub_1ACE77728();
    LOBYTE(v13) = 15;
    sub_1ACE776E8();
    LOBYTE(v13) = 16;
    sub_1ACE776E8();
    uint64_t v13 = v3[31];
    char v14 = 17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
    sub_1ACE1470C(&qword_1EB768E60, &qword_1EB7731B8);
    sub_1ACE77728();
    swift_beginAccess();
    char v14 = 18;
    swift_bridgeObjectRetain();
    sub_1ACE776E8();
    swift_bridgeObjectRelease();
    char v14 = 19;
    sub_1ACE776E8();
    char v14 = 20;
    sub_1ACE776E8();
    char v14 = 21;
    sub_1ACE77708();
    char v14 = 22;
    sub_1ACE776E8();
    char v14 = 23;
    sub_1ACE77718();
    char v14 = 24;
    sub_1ACE77718();
    char v14 = 25;
    sub_1ACE776F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PodcastEpisodeAttributes.__allocating_init(from:)(uint64_t a1)
{
  return sub_1ACE0B984(a1, (void (*)(uint64_t))PodcastEpisodeAttributes.init(from:));
}

uint64_t sub_1ACE0B984(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = swift_allocObject();
  a2(a1);
  return v4;
}

void *PodcastEpisodeAttributes.init(from:)(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v39 = *v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7690D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v1 + 33;
  v1[32] = 0;
  v1[33] = 0;
  uint64_t v9 = (char *)v1 + OBJC_IVAR____TtC18PodcastsFoundation24PodcastEpisodeAttributes____lazy_storage___releaseDateResolved;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE14864();
  sub_1ACE77C48();
  if (v2)
  {
    swift_bridgeObjectRelease();
    sub_1ACA50E78((uint64_t)v3 + OBJC_IVAR____TtC18PodcastsFoundation24PodcastEpisodeAttributes____lazy_storage___releaseDateResolved, &qword_1EB76A958);
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v40) = 0;
    v3[2] = sub_1ACE775F8();
    v3[3] = v11;
    LOBYTE(v40) = 1;
    void v3[4] = sub_1ACE775F8();
    void v3[5] = v13;
    LOBYTE(v40) = 2;
    *((unsigned char *)v3 + 48) = sub_1ACE77608();
    LOBYTE(v40) = 3;
    v3[7] = sub_1ACE775F8();
    v3[8] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E48);
    char v41 = 4;
    sub_1ACE149A4();
    sub_1ACE77638();
    v3[9] = v40;
    LOBYTE(v40) = 5;
    v3[10] = sub_1ACE775F8();
    v3[11] = v15;
    LOBYTE(v40) = 6;
    v3[12] = sub_1ACE775F8();
    v3[13] = v16;
    type metadata accessor for ServerDescription();
    char v41 = 7;
    sub_1ACE140CC(&qword_1EB767388, v17, (void (*)(uint64_t))type metadata accessor for ServerDescription);
    sub_1ACE77638();
    v3[14] = v40;
    LOBYTE(v40) = 8;
    v3[15] = sub_1ACE775F8();
    v3[16] = v18;
    type metadata accessor for ServerArtwork();
    char v41 = 9;
    sub_1ACE140CC(&qword_1EB766D40, v19, (void (*)(uint64_t))type metadata accessor for ServerArtwork);
    sub_1ACE77638();
    v3[17] = v40;
    LOBYTE(v40) = 10;
    v3[18] = sub_1ACE775F8();
    v3[19] = v20;
    LOBYTE(v40) = 11;
    v3[20] = sub_1ACE775F8();
    v3[21] = v21;
    LOBYTE(v40) = 12;
    v3[22] = sub_1ACE775F8();
    v3[23] = v22;
    LOBYTE(v40) = 13;
    v3[24] = sub_1ACE775F8();
    v3[25] = v23;
    type metadata accessor for PodcastEpisodeAttributes.AvailabilityDates();
    char v41 = 14;
    sub_1ACE140CC(&qword_1EB76C330, v24, (void (*)(uint64_t))type metadata accessor for PodcastEpisodeAttributes.AvailabilityDates);
    sub_1ACE77638();
    v3[26] = v40;
    LOBYTE(v40) = 15;
    v3[27] = sub_1ACE775F8();
    v3[28] = v25;
    LOBYTE(v40) = 16;
    v3[29] = sub_1ACE775F8();
    v3[30] = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
    char v41 = 17;
    sub_1ACE1470C(&qword_1EB768E68, &qword_1EB7731B8);
    sub_1ACE77638();
    v3[31] = v40;
    LOBYTE(v40) = 18;
    uint64_t v27 = sub_1ACE775F8();
    uint64_t v29 = v28;
    swift_beginAccess();
    uint64_t v30 = v38;
    v3[32] = v27;
    *uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    char v41 = 19;
    v3[34] = sub_1ACE775F8();
    v3[35] = v31;
    char v41 = 20;
    v3[36] = sub_1ACE775F8();
    v3[37] = v32;
    char v41 = 21;
    v3[38] = sub_1ACE77618();
    *((unsigned char *)v3 + 312) = v33 & 1;
    char v41 = 22;
    v3[40] = sub_1ACE775F8();
    v3[41] = v34;
    char v41 = 23;
    v3[42] = sub_1ACE77628();
    *((unsigned char *)v3 + 344) = v35 & 1;
    char v41 = 24;
    v3[44] = sub_1ACE77628();
    *((unsigned char *)v3 + 360) = v36 & 1;
    char v41 = 25;
    LOBYTE(v27) = sub_1ACE77608();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *((unsigned char *)v3 + 361) = v27;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1ACE0C984()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACE0C9B8()
{
  return swift_retain();
}

uint64_t sub_1ACE0C9C4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACE0C9F8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACE0CA2C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACE0CA60@<X0>(uint64_t a1@<X8>)
{
  return PodcastEpisodeAttributes.releaseDateResolved.getter(a1);
}

uint64_t sub_1ACE0CA84()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 216);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1ACE0CAB8()
{
  if (!*(void *)(*(void *)v0 + 224)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  return v1 == 1;
}

uint64_t sub_1ACE0CB1C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 232);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACE0CB50()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACE0CB5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE0CB88(a1, (uint64_t (*)(uint64_t))PodcastEpisodeAttributes.init(from:), a2);
}

uint64_t sub_1ACE0CB88@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v7 = swift_allocObject();
  uint64_t result = a2(a1);
  if (!v3) {
    *a3 = v7;
  }
  return result;
}

uint64_t sub_1ACE0CBF0(void *a1)
{
  return PodcastEpisodeAttributes.encode(to:)(a1);
}

PodcastsFoundation::Kind_optional __swiftcall Kind.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1ACE775B8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1ACE0CC78(char *a1, char *a2)
{
  return sub_1ACCF4244(*a1, *a2);
}

uint64_t sub_1ACE0CC84()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACE0CD04()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACE0CD70()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::Kind_optional sub_1ACE0CDEC(Swift::String *a1)
{
  return Kind.init(rawValue:)(*a1);
}

void sub_1ACE0CDF8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 7628135;
  if (*v1) {
    uint64_t v2 = 0x6269726373627573;
  }
  unint64_t v3 = 0xE300000000000000;
  if (*v1) {
    unint64_t v3 = 0xE900000000000065;
  }
  *a1 = v2;
  a1[1] = v3;
}

PodcastsFoundation::PriceType_optional __swiftcall PriceType.init(stringValue:)(Swift::String stringValue)
{
  uint64_t v2 = v1;
  result.value = PriceType.init(rawValue:)(stringValue).value;
  *uint64_t v2 = v4;
  return result;
}

PodcastsFoundation::PriceType_optional __swiftcall PriceType.init(intValue:)(Swift::Int intValue)
{
  *uint64_t v1 = 4;
  return (PodcastsFoundation::PriceType_optional)intValue;
}

void *static PriceType.allCases.getter()
{
  return &unk_1F0381298;
}

uint64_t PriceType.intValue.getter()
{
  return 0;
}

uint64_t PriceType.stringValue.getter()
{
  return *(void *)&aStdq_10[8 * *v0];
}

uint64_t sub_1ACE0CEA8(char *a1, char *a2)
{
  return sub_1ACCF3E68(*a1, *a2);
}

uint64_t sub_1ACE0CEB4()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACE0CF10()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACE0CF50()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::PriceType_optional sub_1ACE0CFA8(Swift::String *a1)
{
  return PriceType.init(rawValue:)(*a1);
}

void sub_1ACE0CFB4(void *a1@<X8>)
{
  *a1 = *(void *)&aStdq_10[8 * *v1];
  a1[1] = 0xE400000000000000;
}

void sub_1ACE0CFD0(void *a1@<X8>)
{
  *a1 = &unk_1F0380C40;
}

uint64_t sub_1ACE0CFE0()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACE0D040()
{
  return sub_1ACE764C8();
}

uint64_t sub_1ACE0D090()
{
  return *(void *)&aStdq_10[8 * *v0];
}

PodcastsFoundation::PriceType_optional sub_1ACE0D0A8@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  result.value = PriceType.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

uint64_t sub_1ACE0D0E0(uint64_t a1)
{
  unint64_t v2 = sub_1ACE1D108();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE0D11C(uint64_t a1)
{
  unint64_t v2 = sub_1ACE1D108();
  return MEMORY[0x1F41862B0](a1, v2);
}

PodcastsFoundation::PriceType_optional _s18PodcastsFoundation19PodcastEpisodeOfferC12typeResolvedAA9PriceTypeOSgvg_0()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  return PriceType.init(rawValue:)(*(Swift::String *)&v3);
}

uint64_t sub_1ACE0D1B0()
{
  if (*v0) {
    return 1684957547;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1ACE0D1D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE16C7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE0D1FC(uint64_t a1)
{
  unint64_t v2 = sub_1ACE14A48();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE0D238(uint64_t a1)
{
  unint64_t v2 = sub_1ACE14A48();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PodcastShowOffer.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PodcastShowOffer.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACE0D2DC(void *a1)
{
  return sub_1ACE0D32C(a1, &qword_1EB769100, (void (*)(void))sub_1ACE14A48, (uint64_t)&type metadata for PodcastShowOffer.CodingKeys, MEMORY[0x1E4FBBDD8]);
}

uint64_t sub_1ACE0D32C(void *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  v20[0] = a5;
  uint64_t v7 = v5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  uint64_t v13 = (void (*)(uint64_t, uint64_t, char *, uint64_t))v20[0];
  sub_1ACE77C78();
  uint64_t v14 = v7[2];
  uint64_t v15 = v7[3];
  char v22 = 0;
  uint64_t v16 = v20[1];
  v13(v14, v15, &v22, v9);
  if (!v16)
  {
    uint64_t v17 = v7[4];
    uint64_t v18 = v7[5];
    char v21 = 1;
    v13(v17, v18, &v21, v9);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t PodcastShowOffer.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  PodcastShowOffer.init(from:)(a1);
  return v2;
}

uint64_t PodcastShowOffer.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769098);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE14A48();
  sub_1ACE77C48();
  if (v2)
  {
    type metadata accessor for PodcastShowOffer();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v16 = 0;
    *(void *)(v1 + 16) = sub_1ACE77658();
    *(void *)(v1 + 24) = v9;
    char v15 = 1;
    uint64_t v11 = sub_1ACE77658();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)(v3 + 32) = v11;
    *(void *)(v3 + 40) = v13;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1ACE0D6D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE0D714(a1, (void (*)(void))type metadata accessor for PodcastShowOffer, (uint64_t (*)(uint64_t))PodcastShowOffer.init(from:), a2);
}

uint64_t sub_1ACE0D714@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  a2();
  uint64_t v8 = swift_allocObject();
  uint64_t result = a3(a1);
  if (!v4) {
    *a4 = v8;
  }
  return result;
}

uint64_t sub_1ACE0D780(void *a1)
{
  return sub_1ACE0D2DC(a1);
}

uint64_t sub_1ACE0D7A8@<X0>(char *a1@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t PodcastEpisodeOffer.durationInMilliseconds.getter()
{
  return *(void *)(v0 + 64);
}

unint64_t sub_1ACE0D820()
{
  unint64_t result = 1701869940;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1684957547;
      break;
    case 2:
      unint64_t result = 0x6C7255736C68;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACE0D89C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE16D50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE0D8C4(uint64_t a1)
{
  unint64_t v2 = sub_1ACE14A9C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE0D900(uint64_t a1)
{
  unint64_t v2 = sub_1ACE14A9C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PodcastEpisodeOffer.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PodcastEpisodeOffer.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PodcastEpisodeOffer.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6168);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE14A9C();
  sub_1ACE77C78();
  v8[15] = 0;
  sub_1ACE77748();
  if (!v1)
  {
    v8[14] = 1;
    sub_1ACE77748();
    v8[13] = 2;
    sub_1ACE776E8();
    v8[12] = 3;
    sub_1ACE77708();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PodcastEpisodeOffer.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  PodcastEpisodeOffer.init(from:)(a1);
  return v2;
}

void *PodcastEpisodeOffer.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7690C0);
  uint64_t v5 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE14A9C();
  sub_1ACE77C48();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v5;
    char v22 = 0;
    uint64_t v9 = v18;
    void v1[2] = sub_1ACE77658();
    v1[3] = v10;
    char v21 = 1;
    v1[4] = sub_1ACE77658();
    v1[5] = v11;
    char v20 = 2;
    v1[6] = sub_1ACE775F8();
    v1[7] = v12;
    char v19 = 3;
    uint64_t v14 = sub_1ACE77618();
    char v16 = v15;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    v3[8] = v14;
    *((unsigned char *)v3 + 72) = v16 & 1;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1ACE0DE78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE13C60(a1, (uint64_t (*)(uint64_t))PodcastEpisodeOffer.init(from:), a2);
}

uint64_t sub_1ACE0DEA8(void *a1)
{
  return PodcastEpisodeOffer.encode(to:)(a1);
}

uint64_t PodcastEpisodeAttributes.AvailabilityDates.subscript.getter@<X0>(char *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v45 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v44 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v42 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)v42 - v12;
  MEMORY[0x1F4188790](v11);
  char v15 = (char *)v42 - v14;
  uint64_t v16 = sub_1ACE750A8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v43 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  char v21 = (char *)v42 - v20;
  char v22 = *a1;
  v42[1] = v3 + 24;
  swift_beginAccess();
  uint64_t v23 = *(void *)(v3 + 24);
  if (*(void *)(v23 + 16) && (unint64_t v24 = sub_1ACA66158(v22), (v25 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v15, *(void *)(v23 + 56) + *(void *)(v17 + 72) * v24, v16);
    uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
    v26(v15, 0, 1, v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
    {
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
      v27(v21, v15, v16);
      swift_endAccess();
      uint64_t v28 = v45;
      v27(v45, v21, v16);
      return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v26)(v28, 0, 1, v16);
    }
  }
  else
  {
    uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
    v26(v15, 1, 1, v16);
  }
  sub_1ACA50E78((uint64_t)v15, (uint64_t *)&unk_1EB773140);
  swift_endAccess();
  if (!*(void *)(*(void *)(v3 + 16) + 16)) {
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v26)(v45, 1, 1, v16);
  }
  sub_1ACA66158(v22);
  if ((v30 & 1) == 0) {
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v26)(v45, 1, 1, v16);
  }
  uint64_t v31 = qword_1EB76E118;
  swift_bridgeObjectRetain();
  if (v31 != -1) {
    swift_once();
  }
  uint64_t v32 = (void *)qword_1EB76E110;
  char v33 = (void *)sub_1ACE76178();
  id v34 = objc_msgSend(v32, sel_dateFromString_, v33);

  if (v34)
  {
    sub_1ACE75078();

    uint64_t v35 = 0;
  }
  else
  {
    uint64_t v35 = 1;
  }
  v26(v10, v35, 1, v16);
  sub_1ACA50E14((uint64_t)v10, (uint64_t)v13, (uint64_t *)&unk_1EB773140);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16) == 1)
  {
    sub_1ACA50E78((uint64_t)v13, (uint64_t *)&unk_1EB773140);
    char v36 = v45;
    uint64_t v37 = 1;
  }
  else
  {
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    uint64_t v39 = v43;
    v38(v43, v13, v16);
    uint64_t v40 = (uint64_t)v44;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v44, v39, v16);
    v26((char *)v40, 0, 1, v16);
    swift_beginAccess();
    sub_1ACC50A8C(v40, v22);
    swift_endAccess();
    char v41 = v45;
    v38(v45, v39, v16);
    char v36 = v41;
    uint64_t v37 = 0;
  }
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v26)(v36, v37, 1, v16);
}

uint64_t PodcastEpisodeAttributes.AvailabilityDates.__allocating_init(from:)(void *a1)
{
  return sub_1ACE16EE0(a1);
}

uint64_t PodcastEpisodeAttributes.AvailabilityDates.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  uint64_t v5 = *(void *)(v1 + 16);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6170);
  sub_1ACE171F4();
  sub_1ACE77938();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
}

uint64_t PodcastEpisodeAttributes.AvailabilityDates.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PodcastEpisodeAttributes.AvailabilityDates.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACE0E500@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1ACE16EE0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1ACE0E52C(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  uint64_t v6 = *(void *)(v2 + 16);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6170);
  sub_1ACE171F4();
  sub_1ACE77938();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
}

uint64_t sub_1ACE0E5E4()
{
  return 1701667182;
}

uint64_t sub_1ACE0E5F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1ACE77848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ACE0E67C(uint64_t a1)
{
  unint64_t v2 = sub_1ACE17270();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE0E6B8(uint64_t a1)
{
  unint64_t v2 = sub_1ACE17270();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PodcastStationAttributes.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PodcastStationAttributes.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PodcastStationAttributes.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6180);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE17270();
  sub_1ACE77C78();
  sub_1ACE776E8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t PodcastStationAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  PodcastStationAttributes.init(from:)(a1);
  return v2;
}

uint64_t PodcastStationAttributes.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6190);
  uint64_t v14 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE17270();
  sub_1ACE77C48();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v14;
    uint64_t v10 = sub_1ACE775F8();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v5);
    *(void *)(v3 + 16) = v10;
    *(void *)(v3 + 24) = v12;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1ACE0EA7C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE13C60(a1, (uint64_t (*)(uint64_t))PodcastStationAttributes.init(from:), a2);
}

uint64_t sub_1ACE0EAAC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6180);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE17270();
  sub_1ACE77C78();
  sub_1ACE776E8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t PodcastRelationships.channel.getter()
{
  return swift_retain();
}

uint64_t PodcastRelationships.categories.getter()
{
  return swift_retain();
}

uint64_t sub_1ACE0EBF0(char *a1, char *a2)
{
  return sub_1ACCF5B48(*a1, *a2);
}

uint64_t sub_1ACE0EBFC()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACE0EC84()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACE0ECF8()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACE0ED7C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1ACE0EDDC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x69726F6765746163;
  if (*v1) {
    uint64_t v2 = 0x6C656E6E616863;
  }
  unint64_t v3 = 0xEA00000000007365;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ACE0EE20()
{
  if (*v0) {
    return 0x6C656E6E616863;
  }
  else {
    return 0x69726F6765746163;
  }
}

uint64_t sub_1ACE0EE60@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1ACE0EEC4(uint64_t a1)
{
  unint64_t v2 = sub_1ACE172C4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE0EF00(uint64_t a1)
{
  unint64_t v2 = sub_1ACE172C4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PodcastRelationships.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  PodcastRelationships.init(from:)(a1);
  return v2;
}

uint64_t PodcastRelationships.init(from:)(void *a1)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770798);
  uint64_t v4 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE172C4();
  sub_1ACE77C48();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v7 = v4;
    type metadata accessor for PodcastChannelRelationshipContainer();
    char v13 = 1;
    sub_1ACE140CC(&qword_1EB768828, v8, (void (*)(uint64_t))type metadata accessor for PodcastChannelRelationshipContainer);
    uint64_t v9 = v12;
    sub_1ACE77638();
    *(void *)(v1 + 16) = v14;
    type metadata accessor for PodcastCategoriesRelationshipContainer();
    char v13 = 0;
    sub_1ACE140CC(&qword_1EB76FFE8, v10, (void (*)(uint64_t))type metadata accessor for PodcastCategoriesRelationshipContainer);
    sub_1ACE77638();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v6, v9);
    *(void *)(v1 + 24) = v14;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t PodcastRelationships.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t PodcastRelationships.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t PodcastRelationships.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6198);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE172C4();
  sub_1ACE77C78();
  uint64_t v13 = *(void *)(v3 + 24);
  HIBYTE(v12) = 0;
  type metadata accessor for PodcastCategoriesRelationshipContainer();
  sub_1ACE140CC(&qword_1E99F61A0, v9, (void (*)(uint64_t))type metadata accessor for PodcastCategoriesRelationshipContainer);
  sub_1ACE77728();
  if (!v2)
  {
    uint64_t v13 = *(void *)(v3 + 16);
    HIBYTE(v12) = 1;
    type metadata accessor for PodcastChannelRelationshipContainer();
    sub_1ACE140CC(&qword_1EB768820, v10, (void (*)(uint64_t))type metadata accessor for PodcastChannelRelationshipContainer);
    sub_1ACE77728();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1ACE0F47C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE13C60(a1, (uint64_t (*)(uint64_t))PodcastRelationships.init(from:), a2);
}

uint64_t sub_1ACE0F4AC(void *a1)
{
  return PodcastRelationships.encode(to:)(a1);
}

uint64_t sub_1ACE0F4D0@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA598(a1);
}

uint64_t sub_1ACE0F4DC@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA5F4(a1);
}

uint64_t sub_1ACE0F4E8(uint64_t a1)
{
  unint64_t v2 = sub_1ACE17360();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE0F524(uint64_t a1)
{
  unint64_t v2 = sub_1ACE17360();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PodcastChannelRelationshipContainer.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  PodcastChannelRelationshipContainer.init(from:)(a1);
  return v2;
}

uint64_t PodcastChannelRelationshipContainer.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769080);
  uint64_t v19 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE17360();
  sub_1ACE77C48();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v18 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E08);
    sub_1ACE173B4(&qword_1EB768E10, &qword_1EB768E08, &qword_1EB766F60, &qword_1EB766F68);
    sub_1ACE77638();
    uint64_t v8 = v7;
    uint64_t v10 = MEMORY[0x1E4FBC860];
    if (v20) {
      uint64_t v11 = v20;
    }
    else {
      uint64_t v11 = MEMORY[0x1E4FBC860];
    }
    uint64_t v20 = MEMORY[0x1E4FBC860];
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v17 = v5;
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v12; ++i)
      {
        uint64_t v14 = *(void **)(v11 + 8 * i + 32);
        if (v14)
        {
          id v15 = v14;
          MEMORY[0x1AD118700]();
          if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1ACE765C8();
          }
          sub_1ACE76628();
          sub_1ACE76598();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v10 = v20;
      uint64_t v5 = v17;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v5);
    uint64_t v3 = v18;
    *(void *)(v18 + 16) = v10;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t PodcastChannelRelationshipContainer.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7690E8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE17360();
  sub_1ACE77C78();
  v9[1] = *(void *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768DF8);
  sub_1ACE17448();
  sub_1ACE77788();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ACE0F9C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE13C60(a1, (uint64_t (*)(uint64_t))PodcastChannelRelationshipContainer.init(from:), a2);
}

uint64_t sub_1ACE0F9F0(void *a1)
{
  return PodcastChannelRelationshipContainer.encode(to:)(a1);
}

uint64_t sub_1ACE0FA14@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA598(a1);
}

uint64_t sub_1ACE0FA20@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA5F4(a1);
}

uint64_t sub_1ACE0FA2C(uint64_t a1)
{
  unint64_t v2 = sub_1ACE174F0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE0FA68(uint64_t a1)
{
  unint64_t v2 = sub_1ACE174F0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PodcastCategoriesRelationshipContainer.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  PodcastCategoriesRelationshipContainer.init(from:)(a1);
  return v2;
}

uint64_t PodcastCategoriesRelationshipContainer.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771948);
  uint64_t v21 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE174F0();
  sub_1ACE77C48();
  if (v2)
  {
    swift_deallocPartialClassInstance();
    uint64_t v10 = (uint64_t)a1;
  }
  else
  {
    uint64_t v20 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771878);
    sub_1ACE173B4((unint64_t *)&qword_1EB771880, &qword_1EB771878, (unint64_t *)&qword_1EB7711D0, &qword_1EB7711D8);
    sub_1ACE77638();
    uint64_t v8 = v7;
    uint64_t v9 = v5;
    uint64_t v12 = MEMORY[0x1E4FBC860];
    if (v22) {
      uint64_t v13 = v22;
    }
    else {
      uint64_t v13 = MEMORY[0x1E4FBC860];
    }
    uint64_t v22 = MEMORY[0x1E4FBC860];
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v18 = v8;
      uint64_t v19 = v5;
      swift_bridgeObjectRetain();
      uint64_t v15 = 0;
      uint64_t v16 = (uint64_t)v20;
      do
      {
        if (*(void *)(v13 + 8 * v15 + 32))
        {
          uint64_t v17 = swift_retain();
          MEMORY[0x1AD118700](v17);
          if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1ACE765C8();
          }
          sub_1ACE76628();
          sub_1ACE76598();
        }
        ++v15;
      }
      while (v14 != v15);
      swift_bridgeObjectRelease();
      uint64_t v12 = v22;
      uint64_t v8 = v18;
      uint64_t v9 = v19;
    }
    else
    {
      uint64_t v16 = (uint64_t)v20;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v9);
    *(void *)(v3 + 16) = v12;
    uint64_t v10 = v16;
  }
  __swift_destroy_boxed_opaque_existential_0(v10);
  return v3;
}

uint64_t PodcastCategoriesRelationshipContainer.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F61A8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE174F0();
  sub_1ACE77C78();
  v9[1] = *(void *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770B90);
  sub_1ACBBA3DC();
  sub_1ACE77788();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ACE0FF14@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE13C60(a1, (uint64_t (*)(uint64_t))PodcastCategoriesRelationshipContainer.init(from:), a2);
}

uint64_t sub_1ACE0FF44(void *a1)
{
  return PodcastCategoriesRelationshipContainer.encode(to:)(a1);
}

uint64_t PodcastEpisodeRelationships.playbackPosition.getter()
{
  return swift_retain();
}

void *PodcastEpisodeRelationships.podcast.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

uint64_t PodcastEpisodeRelationships.transcripts.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_transcripts);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACE10040(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF474C(*a1, *a2);
}

uint64_t sub_1ACE1004C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACE100FC()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACE10198()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACE10244@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACE15190();
  *a1 = result;
  return result;
}

void sub_1ACE10274(unint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0x80000001ACEC3D90;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x74736163646F70;
  if (v2 != 1)
  {
    uint64_t v5 = 0x697263736E617274;
    unint64_t v4 = 0xEB00000000737470;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    unint64_t v7 = v5;
  }
  else {
    unint64_t v7 = 0xD000000000000011;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_1ACE102E0()
{
  uint64_t v1 = 0x74736163646F70;
  if (*v0 != 1) {
    uint64_t v1 = 0x697263736E617274;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_1ACE10348@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACE15190();
  *a1 = result;
  return result;
}

uint64_t sub_1ACE10370(uint64_t a1)
{
  unint64_t v2 = sub_1ACE17544();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE103AC(uint64_t a1)
{
  unint64_t v2 = sub_1ACE17544();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PodcastEpisodeRelationships.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F61C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE17544();
  sub_1ACE77C78();
  uint64_t v16 = *(void *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_playbackPosition);
  LOBYTE(v15) = 0;
  type metadata accessor for PodcastPlaybackPositionContainer();
  sub_1ACE140CC(&qword_1E99F61C8, v9, (void (*)(uint64_t))type metadata accessor for PodcastPlaybackPositionContainer);
  sub_1ACE77728();
  if (!v2)
  {
    uint64_t v10 = (uint64_t *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast);
    swift_beginAccess();
    uint64_t v15 = *v10;
    char v14 = 1;
    type metadata accessor for PodcastRelationshipContainer();
    sub_1ACE140CC(&qword_1E99F2188, v11, (void (*)(uint64_t))type metadata accessor for PodcastRelationshipContainer);
    sub_1ACE77728();
    uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_transcripts);
    char v14 = 2;
    sub_1ACE175BC();
    sub_1ACE77728();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id PodcastEpisodeRelationships.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return PodcastEpisodeRelationships.init(from:)(a1);
}

id PodcastEpisodeRelationships.init(from:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8F0);
  uint64_t v4 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v24 = (id *)&v1[OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast];
  *(void *)&v1[OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast] = 0;
  uint64_t v7 = a1[3];
  uint64_t v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1ACE17544();
  uint64_t v8 = v1;
  uint64_t v21 = v6;
  sub_1ACE77C48();
  if (v2)
  {
    uint64_t v12 = v24;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
    id v18 = *v12;

    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = v4;
    type metadata accessor for PodcastPlaybackPositionContainer();
    LOBYTE(v28) = 0;
    sub_1ACE140CC(&qword_1EB76A4F8, v10, (void (*)(uint64_t))type metadata accessor for PodcastPlaybackPositionContainer);
    uint64_t v11 = v20;
    sub_1ACE77638();
    *(void *)&v8[OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_playbackPosition] = v27;
    type metadata accessor for PodcastRelationshipContainer();
    LOBYTE(v27) = 1;
    sub_1ACE140CC(qword_1EB76A448, v14, (void (*)(uint64_t))type metadata accessor for PodcastRelationshipContainer);
    sub_1ACE77638();
    uint64_t v15 = v28;
    uint64_t v16 = v24;
    swift_beginAccess();
    uint64_t v17 = *v16;
    uint64_t *v16 = v15;

    char v26 = 2;
    sub_1ACE17610();
    sub_1ACE77638();
    *(void *)&v8[OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_transcripts] = v28;

    v25.receiver = v8;
    v25.super_class = ObjectType;
    id v18 = objc_msgSendSuper2(&v25, sel_init);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v11);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  }
  return v18;
}

uint64_t sub_1ACE10A74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE12A1C(a1, (uint64_t (*)(uint64_t))PodcastEpisodeRelationships.init(from:), a2);
}

uint64_t sub_1ACE10AA0(void *a1)
{
  return PodcastEpisodeRelationships.encode(to:)(a1);
}

uint64_t ServerTranscript.id.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_id);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerTranscript.type.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_type);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerTranscript.attributes.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACE17684(v1 + OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_attributes, a1, type metadata accessor for ServerTranscript.Attributes);
}

id ServerTranscript.__allocating_init(id:type:attributes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (char *)objc_allocWithZone(v5);
  uint64_t v12 = &v11[OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_id];
  *(void *)uint64_t v12 = a1;
  *((void *)v12 + 1) = a2;
  uint64_t v13 = &v11[OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_type];
  *(void *)uint64_t v13 = a3;
  *((void *)v13 + 1) = a4;
  sub_1ACE17684(a5, (uint64_t)&v11[OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_attributes], type metadata accessor for ServerTranscript.Attributes);
  v16.receiver = v11;
  v16.super_class = v5;
  id v14 = objc_msgSendSuper2(&v16, sel_init);
  sub_1ACE17760(a5, type metadata accessor for ServerTranscript.Attributes);
  return v14;
}

id ServerTranscript.init(id:type:attributes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v12 = &v5[OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_id];
  *(void *)uint64_t v12 = a1;
  *((void *)v12 + 1) = a2;
  uint64_t v13 = &v5[OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_type];
  *(void *)uint64_t v13 = a3;
  *((void *)v13 + 1) = a4;
  sub_1ACE17684(a5, (uint64_t)&v5[OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_attributes], type metadata accessor for ServerTranscript.Attributes);
  v16.receiver = v5;
  v16.super_class = ObjectType;
  id v14 = objc_msgSendSuper2(&v16, sel_init);
  sub_1ACE17760(a5, type metadata accessor for ServerTranscript.Attributes);
  return v14;
}

uint64_t ServerTranscript.Attributes.ttmlToken.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerTranscript.Attributes.ttmlAssetUrls.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACE10DA0(type metadata accessor for ServerTranscript.Attributes, (uint64_t)type metadata accessor for ServerTranscript.Attributes.AssetUrls, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1ACE17684, a1);
}

uint64_t sub_1ACE10DA0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 20), a4, a2);
}

uint64_t ServerTranscript.Attributes.init(ttmlToken:ttmlAssetUrls:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v6 = type metadata accessor for ServerTranscript.Attributes(0);
  return sub_1ACE17868(a3, (uint64_t)a4 + *(int *)(v6 + 20), type metadata accessor for ServerTranscript.Attributes.AssetUrls);
}

uint64_t ServerTranscript.Attributes.AssetUrls.ttml.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA3AAD4(v1, a1, &qword_1EB7731B0);
}

uint64_t ServerTranscript.Attributes.AssetUrls.signature.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACE10DA0(type metadata accessor for ServerTranscript.Attributes.AssetUrls, (uint64_t)&qword_1EB7731B0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1ACA3AAD4, a1);
}

uint64_t ServerTranscript.Attributes.AssetUrls.init(ttml:signature:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1ACA50E14(a1, a3, &qword_1EB7731B0);
  uint64_t v5 = type metadata accessor for ServerTranscript.Attributes.AssetUrls(0);
  return sub_1ACA50E14(a2, a3 + *(int *)(v5 + 20), &qword_1EB7731B0);
}

uint64_t sub_1ACE10F08()
{
  if (*v0) {
    return 0x727574616E676973;
  }
  else {
    return 1819112564;
  }
}

uint64_t sub_1ACE10F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE1CAC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE10F68(uint64_t a1)
{
  unint64_t v2 = sub_1ACE1770C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE10FA4(uint64_t a1)
{
  unint64_t v2 = sub_1ACE1770C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ServerTranscript.Attributes.AssetUrls.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F61E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE1770C();
  sub_1ACE77C78();
  v8[15] = 0;
  sub_1ACE74F28();
  sub_1ACE140CC(&qword_1E99F0E98, 255, MEMORY[0x1E4F276F0]);
  sub_1ACE77728();
  if (!v1)
  {
    type metadata accessor for ServerTranscript.Attributes.AssetUrls(0);
    v8[14] = 1;
    sub_1ACE77728();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ServerTranscript.Attributes.AssetUrls.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  objc_super v25 = (char *)&v20 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F61F8);
  uint64_t v26 = *(void *)(v9 - 8);
  uint64_t v27 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ServerTranscript.Attributes.AssetUrls(0);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE1770C();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v21 = v12;
  uint64_t v22 = v14;
  uint64_t v23 = v6;
  sub_1ACE74F28();
  char v29 = 0;
  sub_1ACE140CC(&qword_1E99F0ED0, 255, MEMORY[0x1E4F276F0]);
  uint64_t v15 = (uint64_t)v25;
  uint64_t v16 = v27;
  sub_1ACE77638();
  uint64_t v17 = (uint64_t)v22;
  sub_1ACA50E14(v15, (uint64_t)v22, &qword_1EB7731B0);
  char v28 = 1;
  uint64_t v18 = (uint64_t)v23;
  sub_1ACE77638();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v16);
  sub_1ACA50E14(v18, v17 + *(int *)(v21 + 20), &qword_1EB7731B0);
  sub_1ACE17684(v17, v24, type metadata accessor for ServerTranscript.Attributes.AssetUrls);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_1ACE17760(v17, type metadata accessor for ServerTranscript.Attributes.AssetUrls);
}

uint64_t sub_1ACE114F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ServerTranscript.Attributes.AssetUrls.init(from:)(a1, a2);
}

uint64_t sub_1ACE11510(void *a1)
{
  return ServerTranscript.Attributes.AssetUrls.encode(to:)(a1);
}

BOOL static ServerTranscript.Attributes.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1ACE77848() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(type metadata accessor for ServerTranscript.Attributes(0) + 20);
  return _s18PodcastsFoundation16ServerTranscriptC10AttributesV9AssetUrlsV2eeoiySbAG_AGtFZ_0((uint64_t)a1 + v5, (uint64_t)a2 + v5);
}

uint64_t sub_1ACE115A8()
{
  if (*v0) {
    return 0x657373416C6D7474;
  }
  else {
    return 0x656B6F546C6D7474;
  }
}

uint64_t sub_1ACE115F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE1CBB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE1161C(uint64_t a1)
{
  unint64_t v2 = sub_1ACE177C0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE11658(uint64_t a1)
{
  unint64_t v2 = sub_1ACE177C0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ServerTranscript.Attributes.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6200);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE177C0();
  sub_1ACE77C78();
  v8[15] = 0;
  sub_1ACE77748();
  if (!v1)
  {
    type metadata accessor for ServerTranscript.Attributes(0);
    v8[14] = 1;
    type metadata accessor for ServerTranscript.Attributes.AssetUrls(0);
    sub_1ACE140CC(&qword_1E99F6210, 255, (void (*)(uint64_t))type metadata accessor for ServerTranscript.Attributes.AssetUrls);
    sub_1ACE77788();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ServerTranscript.Attributes.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v19 = type metadata accessor for ServerTranscript.Attributes.AssetUrls(0);
  MEMORY[0x1F4188790](v19);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6218);
  uint64_t v20 = *(void *)(v6 - 8);
  uint64_t v21 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ServerTranscript.Attributes(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE177C0();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v17 = v9;
  uint64_t v13 = v20;
  uint64_t v12 = v21;
  char v23 = 0;
  *uint64_t v11 = sub_1ACE77658();
  v11[1] = v14;
  char v22 = 1;
  sub_1ACE140CC(&qword_1E99F6220, 255, (void (*)(uint64_t))type metadata accessor for ServerTranscript.Attributes.AssetUrls);
  sub_1ACE77698();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
  sub_1ACE17868((uint64_t)v5, (uint64_t)v11 + *(int *)(v17 + 20), type metadata accessor for ServerTranscript.Attributes.AssetUrls);
  sub_1ACE17684((uint64_t)v11, v18, type metadata accessor for ServerTranscript.Attributes);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_1ACE17760((uint64_t)v11, type metadata accessor for ServerTranscript.Attributes);
}

uint64_t sub_1ACE11B40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ServerTranscript.Attributes.init(from:)(a1, a2);
}

uint64_t sub_1ACE11B58(void *a1)
{
  return ServerTranscript.Attributes.encode(to:)(a1);
}

BOOL sub_1ACE11B70(void *a1, void *a2, uint64_t a3)
{
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_1ACE77848() & 1) == 0) {
    return 0;
  }
  uint64_t v7 = *(int *)(a3 + 20);
  return static ServerTranscript.Attributes.AssetUrls.== infix(_:_:)((uint64_t)a1 + v7, (uint64_t)a2 + v7);
}

id ServerTranscript.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ServerTranscript.init()()
{
}

uint64_t sub_1ACE11C88()
{
  uint64_t v1 = 1701869940;
  if (*v0 != 1) {
    uint64_t v1 = 0x7475626972747461;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1ACE11CD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE1CCDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE11CFC(uint64_t a1)
{
  unint64_t v2 = sub_1ACE17814();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE11D38(uint64_t a1)
{
  unint64_t v2 = sub_1ACE17814();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ServerTranscript.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6228);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  BOOL v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE17814();
  sub_1ACE77C78();
  v8[15] = 0;
  sub_1ACE77748();
  if (!v1)
  {
    v8[14] = 1;
    sub_1ACE77748();
    v8[13] = 2;
    type metadata accessor for ServerTranscript.Attributes(0);
    sub_1ACE140CC(&qword_1E99F6238, 255, (void (*)(uint64_t))type metadata accessor for ServerTranscript.Attributes);
    sub_1ACE77788();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

id ServerTranscript.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ServerTranscript.init(from:)(a1);
}

id ServerTranscript.init(from:)(void *a1)
{
  id v3 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = type metadata accessor for ServerTranscript.Attributes(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6240);
  uint64_t v24 = *(void *)(v8 - 8);
  uint64_t v25 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  uint64_t v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1ACE17814();
  uint64_t v12 = v3;
  sub_1ACE77C48();
  if (v2)
  {
    id v22 = ObjectType;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);

    swift_deallocPartialClassInstance();
  }
  else
  {
    v23[1] = v5;
    uint64_t v14 = v24;
    uint64_t v13 = v25;
    char v29 = 0;
    uint64_t v15 = sub_1ACE77658();
    uint64_t v17 = (uint64_t *)&v12[OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_id];
    *uint64_t v17 = v15;
    v17[1] = v18;
    char v29 = 1;
    uint64_t v19 = sub_1ACE77658();
    uint64_t v20 = (uint64_t *)&v12[OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_type];
    *uint64_t v20 = v19;
    v20[1] = v21;
    char v29 = 2;
    sub_1ACE140CC(&qword_1E99F6248, 255, (void (*)(uint64_t))type metadata accessor for ServerTranscript.Attributes);
    sub_1ACE77698();
    sub_1ACE17868((uint64_t)v7, (uint64_t)&v12[OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_attributes], type metadata accessor for ServerTranscript.Attributes);

    v28.receiver = v12;
    v28.super_class = ObjectType;
    id v22 = objc_msgSendSuper2(&v28, sel_init);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  }
  return v22;
}

uint64_t sub_1ACE123C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE12A1C(a1, (uint64_t (*)(uint64_t))ServerTranscript.init(from:), a2);
}

uint64_t sub_1ACE123F4(void *a1)
{
  return ServerTranscript.encode(to:)(a1);
}

uint64_t PodcastRelationshipContainer.data.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACE12464@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA598(a1);
}

uint64_t sub_1ACE12470@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA5F4(a1);
}

uint64_t sub_1ACE1247C(uint64_t a1)
{
  unint64_t v2 = sub_1ACE178D0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE124B8(uint64_t a1)
{
  unint64_t v2 = sub_1ACE178D0();
  return MEMORY[0x1F41862B0](a1, v2);
}

id PodcastRelationshipContainer.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return PodcastRelationshipContainer.init(from:)(a1);
}

id PodcastRelationshipContainer.init(from:)(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6250);
  uint64_t v25 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  char v23 = a1;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1ACE178D0();
  uint64_t v9 = v1;
  id v10 = v8;
  sub_1ACE77C48();
  if (v2)
  {

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6260);
    sub_1ACE173B4(&qword_1E99F6268, &qword_1E99F6260, &qword_1E99F6270, &qword_1E99F6278);
    sub_1ACE77638();
    uint64_t v21 = v6;
    uint64_t v22 = v4;
    uint64_t v12 = MEMORY[0x1E4FBC860];
    if (v27) {
      uint64_t v13 = v27;
    }
    else {
      uint64_t v13 = MEMORY[0x1E4FBC860];
    }
    uint64_t v27 = MEMORY[0x1E4FBC860];
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = 0;
      uint64_t v16 = v25;
      do
      {
        uint64_t v17 = *(void **)(v13 + 8 * v15 + 32);
        if (v17)
        {
          id v18 = v17;
          MEMORY[0x1AD118700]();
          if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1ACE765C8();
          }
          sub_1ACE76628();
          sub_1ACE76598();
          uint64_t v16 = v25;
        }
        ++v15;
      }
      while (v14 != v15);
      swift_bridgeObjectRelease();
      uint64_t v12 = v27;
    }
    else
    {
      uint64_t v16 = v25;
    }
    uint64_t v19 = (objc_class *)ObjectType;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v22);
    *(void *)&v9[OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data] = v12;

    v26.receiver = v9;
    v26.super_class = v19;
    id v10 = objc_msgSendSuper2(&v26, sel_init);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  }
  return v10;
}

uint64_t PodcastRelationshipContainer.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6280);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE178D0();
  sub_1ACE77C78();
  uint64_t v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data);
  swift_beginAccess();
  uint64_t v10 = *v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6288);
  sub_1ACE17924();
  sub_1ACE77788();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ACE129F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE12A1C(a1, (uint64_t (*)(uint64_t))PodcastRelationshipContainer.init(from:), a2);
}

uint64_t sub_1ACE12A1C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  id v8 = objc_allocWithZone(v3);
  uint64_t result = a2(a1);
  if (!v4) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1ACE12A7C(void *a1)
{
  return PodcastRelationshipContainer.encode(to:)(a1);
}

uint64_t PodcastPlaybackPositionContainer.data.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACE12AA8(uint64_t a1)
{
  unint64_t v2 = sub_1ACE179C8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE12AE4(uint64_t a1)
{
  unint64_t v2 = sub_1ACE179C8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PodcastPlaybackPositionContainer.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PodcastPlaybackPositionContainer.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F62A0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE179C8();
  sub_1ACE77C78();
  v9[1] = *(void *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F62B0);
  sub_1ACE17A1C();
  sub_1ACE77788();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PodcastPlaybackPositionContainer.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  PodcastPlaybackPositionContainer.init(from:)(a1);
  return v2;
}

uint64_t PodcastPlaybackPositionContainer.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F62C8);
  uint64_t v9 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE179C8();
  sub_1ACE77C48();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F62B0);
    sub_1ACE17AE4();
    sub_1ACE77698();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v4);
    *(void *)(v1 + 16) = v10;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t sub_1ACE12EA8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE13C60(a1, (uint64_t (*)(uint64_t))PodcastPlaybackPositionContainer.init(from:), a2);
}

uint64_t sub_1ACE12ED8(void *a1)
{
  return PodcastPlaybackPositionContainer.encode(to:)(a1);
}

uint64_t PodcastPlaybackPositionData.id.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastPlaybackPositionData.type.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastPlaybackPositionData.href.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastPlaybackPositionData.attributes.getter()
{
  return swift_retain();
}

uint64_t sub_1ACE12F94()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701869940;
      break;
    case 2:
      uint64_t result = 1717924456;
      break;
    case 3:
      uint64_t result = 0x7475626972747461;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACE1300C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE1CE18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE13034(uint64_t a1)
{
  unint64_t v2 = sub_1ACE17B88();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE13070(uint64_t a1)
{
  unint64_t v2 = sub_1ACE17B88();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PodcastPlaybackPositionData.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t PodcastPlaybackPositionData.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t PodcastPlaybackPositionData.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F62E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE17B88();
  sub_1ACE77C78();
  char v15 = 0;
  sub_1ACE77748();
  if (!v2)
  {
    char v14 = 1;
    sub_1ACE77748();
    char v13 = 2;
    sub_1ACE77748();
    uint64_t v12 = *(void *)(v3 + 64);
    v11[15] = 3;
    type metadata accessor for PodcastPlaybackPositionDataAttributes();
    sub_1ACE140CC(&qword_1E99F62F0, v9, (void (*)(uint64_t))type metadata accessor for PodcastPlaybackPositionDataAttributes);
    sub_1ACE77788();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PodcastPlaybackPositionData.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  PodcastPlaybackPositionData.init(from:)(a1);
  return v2;
}

void *PodcastPlaybackPositionData.init(from:)(void *a1)
{
  v14[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F62F8);
  uint64_t v4 = *(void *)(v14[0] - 8);
  MEMORY[0x1F4188790](v14[0]);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE17B88();
  sub_1ACE77C48();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v7 = v4;
    char v18 = 0;
    uint64_t v8 = v14[0];
    void v1[2] = sub_1ACE77658();
    v1[3] = v9;
    char v17 = 1;
    v1[4] = sub_1ACE77658();
    v1[5] = v10;
    char v16 = 2;
    v1[6] = sub_1ACE77658();
    v1[7] = v11;
    type metadata accessor for PodcastPlaybackPositionDataAttributes();
    char v15 = 3;
    sub_1ACE140CC(&qword_1E99F6300, v12, (void (*)(uint64_t))type metadata accessor for PodcastPlaybackPositionDataAttributes);
    sub_1ACE77698();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v6, v8);
    v1[8] = v14[1];
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t sub_1ACE13680@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE13C60(a1, (uint64_t (*)(uint64_t))PodcastPlaybackPositionData.init(from:), a2);
}

uint64_t sub_1ACE136B0(void *a1)
{
  return PodcastPlaybackPositionData.encode(to:)(a1);
}

double PodcastPlaybackPositionDataAttributes.positionInMilliseconds.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t PodcastPlaybackPositionDataAttributes.completed.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

unint64_t sub_1ACE136E4()
{
  unint64_t v1 = 0xD000000000000013;
  if (*v0 == 1) {
    unint64_t v1 = 0x6574656C706D6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000016;
  }
}

uint64_t sub_1ACE13748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE1CFA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE13770(uint64_t a1)
{
  unint64_t v2 = sub_1ACE17C00();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE137AC(uint64_t a1)
{
  unint64_t v2 = sub_1ACE17C00();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PodcastPlaybackPositionDataAttributes.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PodcastPlaybackPositionDataAttributes.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PodcastPlaybackPositionDataAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6308);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE17C00();
  sub_1ACE77C78();
  v8[15] = 0;
  sub_1ACE77768();
  if (!v1)
  {
    v8[14] = 1;
    sub_1ACE77758();
    v8[13] = 2;
    sub_1ACE776E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PodcastPlaybackPositionDataAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  PodcastPlaybackPositionDataAttributes.init(from:)(a1);
  return v2;
}

uint64_t PodcastPlaybackPositionDataAttributes.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6318);
  uint64_t v5 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE17C00();
  sub_1ACE77C48();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v5;
    char v19 = 0;
    uint64_t v9 = v16;
    sub_1ACE77678();
    *(void *)(v1 + 16) = v10;
    char v18 = 1;
    *(unsigned char *)(v1 + 24) = sub_1ACE77668() & 1;
    char v17 = 2;
    uint64_t v12 = sub_1ACE775F8();
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    *(void *)(v3 + 32) = v12;
    *(void *)(v3 + 40) = v14;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1ACE13C30@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACE13C60(a1, (uint64_t (*)(uint64_t))PodcastPlaybackPositionDataAttributes.init(from:), a2);
}

uint64_t sub_1ACE13C60@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X4>, uint64_t *a3@<X8>)
{
  uint64_t v7 = swift_allocObject();
  uint64_t result = a2(a1);
  if (!v3) {
    *a3 = v7;
  }
  return result;
}

uint64_t sub_1ACE13CC8(void *a1)
{
  return PodcastPlaybackPositionDataAttributes.encode(to:)(a1);
}

uint64_t OptionalElement.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1ACE76FD8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t OptionalElement.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v21 = a4;
  uint64_t v8 = sub_1ACE76FD8();
  uint64_t v16 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v17 = a3;
  char v18 = (char *)&v15 - v9;
  uint64_t v19 = type metadata accessor for OptionalElement();
  uint64_t v10 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v12 = (char *)&v15 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v4)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(v12, 1, 1, a2);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v20, v20[3]);
    sub_1ACE778A8();
    uint64_t v14 = v18;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(v18, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v12, v14, v8);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v21, v12, v19);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1ACE13FF0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return OptionalElement.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t type metadata accessor for ServerPodcastBase()
{
  return self;
}

unint64_t sub_1ACE14034()
{
  unint64_t result = qword_1EB767440;
  if (!qword_1EB767440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767440);
  }
  return result;
}

uint64_t type metadata accessor for PodcastAttributes(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1EB76B638);
}

uint64_t type metadata accessor for PodcastRelationships()
{
  return self;
}

uint64_t sub_1ACE140CC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ServerPodcast()
{
  return self;
}

uint64_t type metadata accessor for ServerPodcastEpisode()
{
  return self;
}

uint64_t type metadata accessor for PodcastRelationshipContainer()
{
  return self;
}

uint64_t type metadata accessor for PodcastEpisodeRelationships()
{
  return self;
}

unint64_t sub_1ACE141A4()
{
  unint64_t result = qword_1EB767A88;
  if (!qword_1EB767A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767A88);
  }
  return result;
}

uint64_t type metadata accessor for PodcastEpisodeAttributes(uint64_t a1)
{
  return sub_1ACA31990(a1, qword_1EB76C3E8);
}

uint64_t type metadata accessor for ServerPodcastStation()
{
  return self;
}

unint64_t sub_1ACE1423C()
{
  unint64_t result = qword_1E99F6128;
  if (!qword_1E99F6128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6128);
  }
  return result;
}

uint64_t type metadata accessor for PodcastStationAttributes()
{
  return self;
}

unint64_t sub_1ACE142B4()
{
  unint64_t result = qword_1EB767368;
  if (!qword_1EB767368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767368);
  }
  return result;
}

uint64_t type metadata accessor for ServerDescription()
{
  return self;
}

uint64_t _s18PodcastsFoundation13ServerArtworkC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  char v5 = *(unsigned char *)(a2 + 40);
  if (*(unsigned char *)(a1 + 40))
  {
    if (!*(unsigned char *)(a2 + 40)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 32) != *(void *)(a2 + 32)) {
      char v5 = 1;
    }
    if (v5) {
      return 0;
    }
  }
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a2 + 56);
  if (v6)
  {
    if (!v7) {
      return 0;
    }
    if (*(void *)(a1 + 48) != *(void *)(a2 + 48) || v6 != v7)
    {
      char v8 = sub_1ACE77848();
      uint64_t result = 0;
      if ((v8 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v7)
  {
    return 0;
  }
  uint64_t v10 = *(void *)(a1 + 72);
  uint64_t v11 = *(void *)(a2 + 72);
  if (v10)
  {
    if (!v11) {
      return 0;
    }
    if (*(void *)(a1 + 64) != *(void *)(a2 + 64) || v10 != v11)
    {
      char v12 = sub_1ACE77848();
      uint64_t result = 0;
      if ((v12 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v11)
  {
    return 0;
  }
  uint64_t v13 = *(void *)(a1 + 88);
  uint64_t v14 = *(void *)(a2 + 88);
  if (v13)
  {
    if (!v14) {
      return 0;
    }
    if (*(void *)(a1 + 80) != *(void *)(a2 + 80) || v13 != v14)
    {
      char v15 = sub_1ACE77848();
      uint64_t result = 0;
      if ((v15 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v14)
  {
    return 0;
  }
  uint64_t v16 = *(void *)(a1 + 104);
  uint64_t v17 = *(void *)(a2 + 104);
  if (v16)
  {
    if (!v17) {
      return 0;
    }
    if (*(void *)(a1 + 96) != *(void *)(a2 + 96) || v16 != v17)
    {
      char v18 = sub_1ACE77848();
      uint64_t result = 0;
      if ((v18 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v17)
  {
    return 0;
  }
  uint64_t v19 = *(void *)(a1 + 120);
  uint64_t v20 = *(void *)(a2 + 120);
  if (v19)
  {
    if (v20)
    {
      if (*(void *)(a1 + 112) != *(void *)(a2 + 112) || v19 != v20)
      {
        char v21 = sub_1ACE77848();
        uint64_t result = 0;
        if ((v21 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_50;
    }
    return 0;
  }
  if (v20) {
    return 0;
  }
LABEL_50:
  uint64_t v22 = *(void *)(a1 + 136);
  uint64_t v23 = *(void *)(a2 + 136);
  uint64_t result = (v22 | v23) == 0;
  if (v22 && v23)
  {
    if (*(void *)(a1 + 128) == *(void *)(a2 + 128) && v22 == v23)
    {
      return 1;
    }
    else
    {
      return sub_1ACE77848();
    }
  }
  return result;
}

unint64_t sub_1ACE14554()
{
  unint64_t result = qword_1EB766D20;
  if (!qword_1EB766D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB766D20);
  }
  return result;
}

unint64_t sub_1ACE145A8()
{
  unint64_t result = qword_1EB767210;
  if (!qword_1EB767210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767210);
  }
  return result;
}

uint64_t type metadata accessor for ServerArtwork()
{
  return self;
}

uint64_t type metadata accessor for PodcastEditorialArtworkContainer()
{
  return self;
}

unint64_t sub_1ACE14644()
{
  unint64_t result = qword_1EB768E20;
  if (!qword_1EB768E20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB768E18);
    sub_1ACE140CC(&qword_1EB766FA0, v1, (void (*)(uint64_t))type metadata accessor for PodcastShowOffer);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB768E20);
  }
  return result;
}

uint64_t type metadata accessor for PodcastShowOffer()
{
  return self;
}

uint64_t sub_1ACE1470C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACE1476C()
{
  unint64_t result = qword_1EB768E28;
  if (!qword_1EB768E28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB768E18);
    sub_1ACE140CC(&qword_1EB766FA8, v1, (void (*)(uint64_t))type metadata accessor for PodcastShowOffer);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB768E28);
  }
  return result;
}

unint64_t sub_1ACE14810()
{
  unint64_t result = qword_1EB768578;
  if (!qword_1EB768578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB768578);
  }
  return result;
}

unint64_t sub_1ACE14864()
{
  unint64_t result = qword_1EB767EA0;
  if (!qword_1EB767EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767EA0);
  }
  return result;
}

unint64_t sub_1ACE148B8()
{
  unint64_t result = qword_1E99F6150;
  if (!qword_1E99F6150)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB768E48);
    sub_1ACE140CC(&qword_1E99F6158, v1, (void (*)(uint64_t))type metadata accessor for PodcastEpisodeOffer);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6150);
  }
  return result;
}

uint64_t type metadata accessor for PodcastEpisodeOffer()
{
  return self;
}

uint64_t type metadata accessor for PodcastEpisodeAttributes.AvailabilityDates()
{
  return self;
}

unint64_t sub_1ACE149A4()
{
  unint64_t result = qword_1EB768E50;
  if (!qword_1EB768E50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB768E48);
    sub_1ACE140CC(&qword_1EB767700, v1, (void (*)(uint64_t))type metadata accessor for PodcastEpisodeOffer);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB768E50);
  }
  return result;
}

unint64_t sub_1ACE14A48()
{
  unint64_t result = qword_1EB766F88;
  if (!qword_1EB766F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB766F88);
  }
  return result;
}

unint64_t sub_1ACE14A9C()
{
  unint64_t result = qword_1EB7676E8;
  if (!qword_1EB7676E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7676E8);
  }
  return result;
}

BOOL _s18PodcastsFoundation16ServerTranscriptC10AttributesV9AssetUrlsV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v46 = &v44[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3478);
  MEMORY[0x1F4188790](v7);
  uint64_t v53 = &v44[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v44[-v10];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v47 = &v44[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v14);
  uint64_t v51 = &v44[-v15];
  MEMORY[0x1F4188790](v16);
  unsigned int v52 = &v44[-v17];
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = &v44[-v19];
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = &v44[-v22];
  MEMORY[0x1F4188790](v24);
  objc_super v26 = &v44[-v25];
  uint64_t v49 = a1;
  sub_1ACA3AAD4(a1, (uint64_t)&v44[-v25], &qword_1EB7731B0);
  uint64_t v50 = a2;
  sub_1ACA3AAD4(a2, (uint64_t)v23, &qword_1EB7731B0);
  uint64_t v48 = v7;
  uint64_t v27 = (uint64_t)&v11[*(int *)(v7 + 48)];
  sub_1ACA3AAD4((uint64_t)v26, (uint64_t)v11, &qword_1EB7731B0);
  sub_1ACA3AAD4((uint64_t)v23, v27, &qword_1EB7731B0);
  uint64_t v54 = v5;
  objc_super v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v28((uint64_t)v11, 1, v4) != 1)
  {
    sub_1ACA3AAD4((uint64_t)v11, (uint64_t)v20, &qword_1EB7731B0);
    if (v28(v27, 1, v4) != 1)
    {
      uint64_t v30 = v54;
      uint64_t v31 = v46;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v54 + 32))(v46, v27, v4);
      sub_1ACE140CC(&qword_1EB770E98, 255, MEMORY[0x1E4F276F0]);
      int v45 = sub_1ACE76168();
      uint64_t v32 = *(void (**)(unsigned char *, uint64_t))(v30 + 8);
      v32(v31, v4);
      sub_1ACA50E78((uint64_t)v23, &qword_1EB7731B0);
      sub_1ACA50E78((uint64_t)v26, &qword_1EB7731B0);
      v32(v20, v4);
      sub_1ACA50E78((uint64_t)v11, &qword_1EB7731B0);
      if ((v45 & 1) == 0) {
        return 0;
      }
      goto LABEL_8;
    }
    sub_1ACA50E78((uint64_t)v23, &qword_1EB7731B0);
    sub_1ACA50E78((uint64_t)v26, &qword_1EB7731B0);
    (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v20, v4);
LABEL_6:
    uint64_t v29 = (uint64_t)v11;
LABEL_14:
    sub_1ACA50E78(v29, &qword_1E99F3478);
    return 0;
  }
  sub_1ACA50E78((uint64_t)v23, &qword_1EB7731B0);
  sub_1ACA50E78((uint64_t)v26, &qword_1EB7731B0);
  if (v28(v27, 1, v4) != 1) {
    goto LABEL_6;
  }
  sub_1ACA50E78((uint64_t)v11, &qword_1EB7731B0);
LABEL_8:
  uint64_t v33 = type metadata accessor for ServerTranscript.Attributes.AssetUrls(0);
  id v34 = v52;
  sub_1ACA3AAD4(v49 + *(int *)(v33 + 20), (uint64_t)v52, &qword_1EB7731B0);
  uint64_t v35 = v51;
  sub_1ACA3AAD4(v50 + *(int *)(v33 + 20), (uint64_t)v51, &qword_1EB7731B0);
  char v36 = v53;
  uint64_t v37 = (uint64_t)&v53[*(int *)(v48 + 48)];
  sub_1ACA3AAD4((uint64_t)v34, (uint64_t)v53, &qword_1EB7731B0);
  sub_1ACA3AAD4((uint64_t)v35, v37, &qword_1EB7731B0);
  if (v28((uint64_t)v36, 1, v4) == 1)
  {
    sub_1ACA50E78((uint64_t)v35, &qword_1EB7731B0);
    sub_1ACA50E78((uint64_t)v34, &qword_1EB7731B0);
    if (v28(v37, 1, v4) == 1)
    {
      sub_1ACA50E78((uint64_t)v36, &qword_1EB7731B0);
      return 1;
    }
    goto LABEL_13;
  }
  sub_1ACA3AAD4((uint64_t)v36, (uint64_t)v47, &qword_1EB7731B0);
  if (v28(v37, 1, v4) == 1)
  {
    sub_1ACA50E78((uint64_t)v35, &qword_1EB7731B0);
    sub_1ACA50E78((uint64_t)v34, &qword_1EB7731B0);
    (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v47, v4);
LABEL_13:
    uint64_t v29 = (uint64_t)v36;
    goto LABEL_14;
  }
  uint64_t v39 = v54;
  uint64_t v40 = v46;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v54 + 32))(v46, v37, v4);
  sub_1ACE140CC(&qword_1EB770E98, 255, MEMORY[0x1E4F276F0]);
  char v41 = v47;
  char v42 = sub_1ACE76168();
  uint64_t v43 = *(void (**)(unsigned char *, uint64_t))(v39 + 8);
  v43(v40, v4);
  sub_1ACA50E78((uint64_t)v35, &qword_1EB7731B0);
  sub_1ACA50E78((uint64_t)v34, &qword_1EB7731B0);
  v43(v41, v4);
  sub_1ACA50E78((uint64_t)v36, &qword_1EB7731B0);
  return (v42 & 1) != 0;
}

uint64_t sub_1ACE15190()
{
  unint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1ACE151DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1717924456 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1ACE153F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365646F73697065 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1ACE15594(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x647261646E617473 && a2 == 0xE800000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74726F6873 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACE15680(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6874646977 && a2 == 0xE500000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F6C6F436762 && a2 == 0xE700000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xEA00000000003172 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xEA00000000003272 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xEA00000000003372 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xEA00000000003472)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1ACE15984(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6269726373627573 && a2 == 0xEC000000656C6261 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5479616C70736964 && a2 == 0xEB00000000657079 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C725564656566 && a2 == 0xE700000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6867697279706F63 && a2 == 0xE900000000000074 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ACEC3D50 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x44657361656C6572 && a2 == 0xEF656D6954657461 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x52746E65746E6F63 && a2 == 0xED0000676E697461 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x5565746973626577 && a2 == 0xEA00000000006C72 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6D614E65726E6567 && a2 == 0xEA00000000007365 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x754E6E6F73616573 && a2 == 0xED0000737265626DLL || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x73726566666FLL && a2 == 0xE600000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6C6C65737075 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 17;
    }
    else {
      return 18;
    }
  }
}

uint64_t sub_1ACE1613C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6269726373627573 && a2 == 0xEC000000656C6261 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C725564656566 && a2 == 0xE700000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73726566666FLL && a2 == 0xE600000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x695473656E757469 && a2 == 0xEB00000000656C74 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x4F6B726F77747261 && a2 == 0xED00006E69676972 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6867697279706F63 && a2 == 0xE900000000000074 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x637365446C6C7566 && a2 == 0xEF6E6F6974706972 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x44657361656C6572 && a2 == 0xEF656D6954657461 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001ACEC3DF0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x52746E65746E6F63 && a2 == 0xED0000676E697461 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x5565746973626577 && a2 == 0xEA00000000006C72 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6D614E65726E6567 && a2 == 0xEA00000000007365 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x4B6C656E6E616863 && a2 == 0xEB00000000646E69 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x6E694B616964656DLL && a2 == 0xE900000000000064 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x6C72557465737361 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001ACEC3E80 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 1684632935 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x4E65646F73697065 && a2 == 0xED00007265626D75 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x754E6E6F73616573 && a2 == 0xEC0000007265626DLL || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x72617262694C6E69 && a2 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 25;
    }
    else {
      return 26;
    }
  }
}

uint64_t sub_1ACE16C7C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACE16D50(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C7255736C68 && a2 == 0xE600000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001ACEC3E80)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1ACE16EE0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E430);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE1D108();
  sub_1ACE77C48();
  if (v1)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return v2;
  }
  else
  {
    uint64_t v34 = v5;
    uint64_t v35 = a1;
    unint64_t v8 = 0;
    uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v10 = &unk_1F0381000;
    uint64_t v11 = &unk_1F03812C0;
    uint64_t v36 = v4;
    uint64_t v37 = v7;
    while (v8 < v10[90])
    {
      char v41 = v11[v8 + 32];
      char v12 = v41;
      uint64_t v38 = sub_1ACE77658();
      uint64_t v39 = v13;
      uint64_t v14 = v11;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v40 = v9;
      unint64_t v17 = sub_1ACA66158(v12);
      uint64_t v18 = v9[2];
      BOOL v19 = (v16 & 1) == 0;
      uint64_t v20 = v18 + v19;
      if (__OFADD__(v18, v19)) {
        goto LABEL_20;
      }
      char v21 = v16;
      if (v9[3] >= v20)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1ACD0A1E0();
        }
      }
      else
      {
        sub_1ACD047D4(v20, isUniquelyReferenced_nonNull_native);
        unint64_t v22 = sub_1ACA66158(v12);
        if ((v21 & 1) != (v23 & 1)) {
          goto LABEL_22;
        }
        unint64_t v17 = v22;
      }
      uint64_t v11 = v14;
      uint64_t v9 = v40;
      if (v21)
      {
        uint64_t v24 = (uint64_t *)(v40[7] + 16 * v17);
        swift_bridgeObjectRelease();
        uint64_t v25 = v39;
        *uint64_t v24 = v38;
        v24[1] = v25;
      }
      else
      {
        v40[(v17 >> 6) + 8] |= 1 << v17;
        *(unsigned char *)(v9[6] + v17) = v12;
        objc_super v26 = (uint64_t *)(v9[7] + 16 * v17);
        uint64_t v27 = v39;
        *objc_super v26 = v38;
        v26[1] = v27;
        uint64_t v28 = v9[2];
        BOOL v29 = __OFADD__(v28, 1);
        uint64_t v30 = v28 + 1;
        if (v29) {
          goto LABEL_21;
        }
        void v9[2] = v30;
      }
      swift_bridgeObjectRelease();
      uint64_t v10 = (void *)&unk_1F0381000;
      if (++v8 == 4)
      {
        (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v36);
        type metadata accessor for PodcastEpisodeAttributes.AvailabilityDates();
        uint64_t v2 = swift_allocObject();
        uint64_t v31 = MEMORY[0x1E4FBC868];
        *(void *)(v2 + 16) = v9;
        *(void *)(v2 + 24) = v31;
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
        return v2;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
  }
  return result;
}

unint64_t sub_1ACE171F4()
{
  unint64_t result = qword_1E99F6178;
  if (!qword_1E99F6178)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F6170);
    sub_1ACC5FD78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6178);
  }
  return result;
}

unint64_t sub_1ACE17270()
{
  unint64_t result = qword_1E99F6188;
  if (!qword_1E99F6188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6188);
  }
  return result;
}

unint64_t sub_1ACE172C4()
{
  unint64_t result = qword_1EB76F5D8;
  if (!qword_1EB76F5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76F5D8);
  }
  return result;
}

uint64_t type metadata accessor for PodcastChannelRelationshipContainer()
{
  return self;
}

uint64_t type metadata accessor for PodcastCategoriesRelationshipContainer()
{
  return self;
}

unint64_t sub_1ACE17360()
{
  unint64_t result = qword_1EB768808;
  if (!qword_1EB768808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB768808);
  }
  return result;
}

uint64_t sub_1ACE173B4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_1ACA51EA4(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACE17448()
{
  unint64_t result = qword_1EB768E00;
  if (!qword_1EB768E00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB768DF8);
    sub_1ACE140CC(&qword_1EB766E40, 255, (void (*)(uint64_t))type metadata accessor for ServerChannel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB768E00);
  }
  return result;
}

unint64_t sub_1ACE174F0()
{
  unint64_t result = qword_1EB7714B8;
  if (!qword_1EB7714B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7714B8);
  }
  return result;
}

unint64_t sub_1ACE17544()
{
  unint64_t result = qword_1EB76A410;
  if (!qword_1EB76A410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A410);
  }
  return result;
}

uint64_t type metadata accessor for PodcastPlaybackPositionContainer()
{
  return self;
}

unint64_t sub_1ACE175BC()
{
  unint64_t result = qword_1E99F61D0;
  if (!qword_1E99F61D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F61D0);
  }
  return result;
}

unint64_t sub_1ACE17610()
{
  unint64_t result = qword_1EB76A3E8;
  if (!qword_1EB76A3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A3E8);
  }
  return result;
}

uint64_t type metadata accessor for ServerTranscript.Attributes(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1E99F6360);
}

uint64_t sub_1ACE17684(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for ServerTranscript.Attributes.AssetUrls(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1E99F6370);
}

unint64_t sub_1ACE1770C()
{
  unint64_t result = qword_1E99F61F0;
  if (!qword_1E99F61F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F61F0);
  }
  return result;
}

uint64_t sub_1ACE17760(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1ACE177C0()
{
  unint64_t result = qword_1E99F6208;
  if (!qword_1E99F6208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6208);
  }
  return result;
}

unint64_t sub_1ACE17814()
{
  unint64_t result = qword_1E99F6230;
  if (!qword_1E99F6230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6230);
  }
  return result;
}

uint64_t sub_1ACE17868(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1ACE178D0()
{
  unint64_t result = qword_1E99F6258;
  if (!qword_1E99F6258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6258);
  }
  return result;
}

unint64_t sub_1ACE17924()
{
  unint64_t result = qword_1E99F6290;
  if (!qword_1E99F6290)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F6288);
    sub_1ACE140CC(&qword_1E99F6298, v1, (void (*)(uint64_t))type metadata accessor for ServerPodcastBase);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6290);
  }
  return result;
}

unint64_t sub_1ACE179C8()
{
  unint64_t result = qword_1E99F62A8;
  if (!qword_1E99F62A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F62A8);
  }
  return result;
}

unint64_t sub_1ACE17A1C()
{
  unint64_t result = qword_1E99F62B8;
  if (!qword_1E99F62B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F62B0);
    sub_1ACE140CC(&qword_1E99F62C0, v1, (void (*)(uint64_t))type metadata accessor for PodcastPlaybackPositionData);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F62B8);
  }
  return result;
}

uint64_t type metadata accessor for PodcastPlaybackPositionData()
{
  return self;
}

unint64_t sub_1ACE17AE4()
{
  unint64_t result = qword_1E99F62D0;
  if (!qword_1E99F62D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F62B0);
    sub_1ACE140CC(&qword_1E99F62D8, v1, (void (*)(uint64_t))type metadata accessor for PodcastPlaybackPositionData);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F62D0);
  }
  return result;
}

unint64_t sub_1ACE17B88()
{
  unint64_t result = qword_1E99F62E8;
  if (!qword_1E99F62E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F62E8);
  }
  return result;
}

uint64_t type metadata accessor for PodcastPlaybackPositionDataAttributes()
{
  return self;
}

unint64_t sub_1ACE17C00()
{
  unint64_t result = qword_1E99F6310;
  if (!qword_1E99F6310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6310);
  }
  return result;
}

uint64_t type metadata accessor for OptionalElement()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1ACE17C70()
{
  unint64_t result = qword_1E99F6320;
  if (!qword_1E99F6320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6320);
  }
  return result;
}

unint64_t sub_1ACE17CC8()
{
  unint64_t result = qword_1E99F6328;
  if (!qword_1E99F6328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6328);
  }
  return result;
}

unint64_t sub_1ACE17D20()
{
  unint64_t result = qword_1E99F6330;
  if (!qword_1E99F6330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6330);
  }
  return result;
}

unint64_t sub_1ACE17D78()
{
  unint64_t result = qword_1E99F6338;
  if (!qword_1E99F6338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6338);
  }
  return result;
}

unint64_t sub_1ACE17DD0()
{
  unint64_t result = qword_1E99F6340;
  if (!qword_1E99F6340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6340);
  }
  return result;
}

unint64_t sub_1ACE17E28()
{
  unint64_t result = qword_1EB76D350;
  if (!qword_1EB76D350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76D350);
  }
  return result;
}

uint64_t sub_1ACE17E7C()
{
  return sub_1ACA51EA4(&qword_1E99F6348, &qword_1EB76A7F8);
}

unint64_t sub_1ACE17EBC()
{
  unint64_t result = qword_1EB76D360;
  if (!qword_1EB76D360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76D360);
  }
  return result;
}

unint64_t sub_1ACE17F14()
{
  unint64_t result = qword_1EB76D358;
  if (!qword_1EB76D358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76D358);
  }
  return result;
}

uint64_t sub_1ACE17F68@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR___MTServerPodcast_episodes, a2);
}

uint64_t sub_1ACE17F74(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACBCBB28(a1, a2, a3, a4, &OBJC_IVAR___MTServerPodcast_episodes);
}

id sub_1ACE17F94@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR___MTServerPodcastEpisode_relationships);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1ACE17FFC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_episodes, a2);
}

uint64_t sub_1ACE18008(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACBCBB28(a1, a2, a3, a4, &OBJC_IVAR____TtC18PodcastsFoundation20ServerPodcastStation_episodes);
}

uint64_t sub_1ACE18028@<X0>(uint64_t a1@<X8>)
{
  return PodcastAttributes.releaseDateResolved.getter(a1);
}

uint64_t sub_1ACE1804C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACE0A584(a1, a2, a3, a4, &OBJC_IVAR____TtC18PodcastsFoundation17PodcastAttributes____lazy_storage___releaseDateResolved);
}

uint64_t sub_1ACE1806C@<X0>(uint64_t a1@<X8>)
{
  return PodcastEpisodeAttributes.releaseDateResolved.getter(a1);
}

uint64_t sub_1ACE18090(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACE0A584(a1, a2, a3, a4, &OBJC_IVAR____TtC18PodcastsFoundation24PodcastEpisodeAttributes____lazy_storage___releaseDateResolved);
}

uint64_t dispatch thunk of MediaObjectEpisodeBucket.episodes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MediaObjectEpisodeBucket.episodes.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of MediaObjectEpisodeBucket.episodes.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t method lookup function for ServerPodcastBase(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ServerPodcastBase);
}

uint64_t dispatch thunk of ServerPodcastBase.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ServerPodcastBase.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t method lookup function for ServerPodcast(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ServerPodcast);
}

uint64_t dispatch thunk of ServerPodcast.episodes.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ServerPodcast.episodes.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ServerPodcast.episodes.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t method lookup function for ServerPodcastEpisode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ServerPodcastEpisode);
}

uint64_t dispatch thunk of ServerPodcastEpisode.relationships.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ServerPodcastEpisode.relationships.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ServerPodcastEpisode.relationships.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ServerPodcastEpisode.__allocating_init(id:type:href:attributes:relationships:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ServerPodcastEpisode.setPodcastRelationship(podcast:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ServerPodcastEpisode.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ServerPodcastEpisode.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t method lookup function for ServerPodcastStation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ServerPodcastStation);
}

uint64_t dispatch thunk of ServerPodcastStation.episodes.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ServerPodcastStation.episodes.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ServerPodcastStation.episodes.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ServerPodcastStation.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ServerPodcastStation.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t method lookup function for ServerDescription(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ServerDescription);
}

uint64_t dispatch thunk of ServerDescription.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of ServerDescription.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for ServerArtwork(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ServerArtwork);
}

uint64_t dispatch thunk of ServerArtwork.__allocating_init(width:height:url:bgColor:textColor1:textColor2:textColor3:textColor4:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, void))(v4 + 144))(a1, a2 & 1, a3, a4 & 1);
}

uint64_t dispatch thunk of ServerArtwork.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of MediaAttributes.artistName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MediaAttributes.url.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MediaAttributes.subscribable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MediaAttributes.feedUrl.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MediaAttributes.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MediaAttributes.description.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of MediaAttributes.artwork.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of MediaAttributes.copyright.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of MediaAttributes.kind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of MediaAttributes.releaseDateTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of MediaAttributes.releaseDateResolved.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of MediaAttributes.contentRating.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of MediaAttributes.contentRatingResolved.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))() & 1;
}

uint64_t dispatch thunk of MediaAttributes.websiteUrl.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of MediaAttributes.genreNames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t sub_1ACE18700()
{
  return type metadata accessor for PodcastAttributes(0);
}

void sub_1ACE18708()
{
  sub_1ACE18818();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for PodcastAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastAttributes);
}

uint64_t dispatch thunk of PodcastAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

void sub_1ACE18818()
{
  if (!qword_1EB76A960)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB773140);
    unint64_t v0 = sub_1ACE76FD8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB76A960);
    }
  }
}

ValueMetadata *type metadata accessor for PodcastAttributes.DisplayType()
{
  return &type metadata for PodcastAttributes.DisplayType;
}

uint64_t method lookup function for PodcastEditorialArtworkContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastEditorialArtworkContainer);
}

uint64_t dispatch thunk of PodcastEditorialArtworkContainer.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1ACE188C8()
{
  return type metadata accessor for PodcastEpisodeAttributes(0);
}

void sub_1ACE188D0()
{
  sub_1ACE18818();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for PodcastEpisodeAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastEpisodeAttributes);
}

uint64_t dispatch thunk of PodcastEpisodeAttributes.__allocating_init(artistName:url:subscribable:feedUrl:offers:name:itunesTitle:description:artworkOrigin:artwork:copyright:kind:fullDescription:releaseDateTime:firstAvailableDates:contentRating:websiteUrl:genreNames:mediaKind:assetUrl:durationInMilliseconds:guid:episodeNumber:seasonNumber:inLibrary:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 296);
  return v35(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t dispatch thunk of PodcastEpisodeAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

ValueMetadata *type metadata accessor for PodcastEpisodeAttributes.ChannelKind()
{
  return &type metadata for PodcastEpisodeAttributes.ChannelKind;
}

ValueMetadata *type metadata accessor for PodcastEpisodeAttributes.EpisodeType()
{
  return &type metadata for PodcastEpisodeAttributes.EpisodeType;
}

ValueMetadata *type metadata accessor for PodcastEpisodeAttributes.MediaKind()
{
  return &type metadata for PodcastEpisodeAttributes.MediaKind;
}

ValueMetadata *type metadata accessor for Kind()
{
  return &type metadata for Kind;
}

ValueMetadata *type metadata accessor for PriceType()
{
  return &type metadata for PriceType;
}

uint64_t method lookup function for PodcastShowOffer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastShowOffer);
}

uint64_t dispatch thunk of PodcastShowOffer.typeResolved.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of PodcastShowOffer.kindResolved.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of PodcastShowOffer.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of PodcastShowOffer.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t method lookup function for PodcastEpisodeOffer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastEpisodeOffer);
}

uint64_t dispatch thunk of PodcastEpisodeOffer.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for PodcastEpisodeAttributes.AvailabilityDates(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastEpisodeAttributes.AvailabilityDates);
}

uint64_t method lookup function for PodcastStationAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastStationAttributes);
}

uint64_t dispatch thunk of PodcastStationAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for PodcastRelationships(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastRelationships);
}

uint64_t dispatch thunk of PodcastRelationships.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t method lookup function for PodcastChannelRelationshipContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastChannelRelationshipContainer);
}

uint64_t dispatch thunk of PodcastChannelRelationshipContainer.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for PodcastCategoriesRelationshipContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastCategoriesRelationshipContainer);
}

uint64_t dispatch thunk of PodcastCategoriesRelationshipContainer.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for PodcastEpisodeRelationships(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastEpisodeRelationships);
}

uint64_t dispatch thunk of PodcastEpisodeRelationships.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1ACE18DA0()
{
  return type metadata accessor for ServerTranscript(0);
}

uint64_t type metadata accessor for ServerTranscript(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1E99F6350);
}

uint64_t sub_1ACE18DC8()
{
  uint64_t result = type metadata accessor for ServerTranscript.Attributes(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ServerTranscript(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ServerTranscript);
}

uint64_t dispatch thunk of ServerTranscript.__allocating_init(id:type:attributes:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ServerTranscript.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t *initializeBufferWithCopyOfBuffer for ServerTranscript.Attributes(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1ACE74F28();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    uint64_t v14 = *(int *)(type metadata accessor for ServerTranscript.Attributes.AssetUrls(0) + 20);
    uint64_t v15 = &v7[v14];
    char v16 = &v8[v14];
    if (v11(v16, 1, v9))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v16, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for ServerTranscript.Attributes(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = v4 + *(int *)(type metadata accessor for ServerTranscript.Attributes.AssetUrls(0) + 20);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

void *initializeWithCopy for ServerTranscript.Attributes(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1ACE74F28();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  uint64_t v12 = *(int *)(type metadata accessor for ServerTranscript.Attributes.AssetUrls(0) + 20);
  uint64_t v13 = &v6[v12];
  uint64_t v14 = &v7[v12];
  if (v10(v14, 1, v8))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v14, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
  }
  return a1;
}

void *assignWithCopy for ServerTranscript.Attributes(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1ACE74F28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(type metadata accessor for ServerTranscript.Attributes.AssetUrls(0) + 20);
  char v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  int v18 = v11(v16, 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for ServerTranscript.Attributes(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE74F28();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = *(int *)(type metadata accessor for ServerTranscript.Attributes.AssetUrls(0) + 20);
  int v12 = &v5[v11];
  int v13 = &v6[v11];
  if (v9(v13, 1, v7))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v13, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for ServerTranscript.Attributes(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = *(int *)(type metadata accessor for ServerTranscript.Attributes.AssetUrls(0) + 20);
  uint64_t v17 = &v8[v16];
  int v18 = &v9[v16];
  int v19 = v12(v17, 1, v10);
  int v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v17, v18, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerTranscript.Attributes(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACE19AB8);
}

uint64_t sub_1ACE19AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ServerTranscript.Attributes.AssetUrls(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ServerTranscript.Attributes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACE19B7C);
}

uint64_t sub_1ACE19B7C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ServerTranscript.Attributes.AssetUrls(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1ACE19C24()
{
  uint64_t result = type metadata accessor for ServerTranscript.Attributes.AssetUrls(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ServerTranscript.Attributes.AssetUrls(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACE19CD0);
}

uint64_t sub_1ACE19CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ServerTranscript.Attributes.AssetUrls(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACE19D54);
}

uint64_t sub_1ACE19D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t method lookup function for PodcastRelationshipContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastRelationshipContainer);
}

uint64_t dispatch thunk of PodcastRelationshipContainer.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for PodcastPlaybackPositionContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastPlaybackPositionContainer);
}

uint64_t dispatch thunk of PodcastPlaybackPositionContainer.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for PodcastPlaybackPositionData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastPlaybackPositionData);
}

uint64_t dispatch thunk of PodcastPlaybackPositionData.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for PodcastPlaybackPositionDataAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastPlaybackPositionDataAttributes);
}

uint64_t dispatch thunk of PodcastPlaybackPositionDataAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1ACE19EC8()
{
  uint64_t result = sub_1ACE76FD8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1ACE19F58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v7 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_1ACE1A094(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_1ACE1A158(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1ACE1A250(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    int v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

void *sub_1ACE1A3BC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1ACE1A4B4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    int v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

uint64_t sub_1ACE1A620(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_1ACE1A7C0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  BOOL v11 = a3 >= v9;
  unsigned int v12 = a3 - v9;
  if (v12 == 0 || !v11)
  {
LABEL_13:
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  if (v10 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  unsigned int v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
  if (!HIWORD(v13))
  {
    if (v13 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v13 > 1;
    }
    goto LABEL_13;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_14:
    unsigned int v14 = ~v9 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
LABEL_21:
  switch(v6)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1ACE1A9FCLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v8 >= 2)
        {
          uint64_t v17 = *(void (**)(void))(v7 + 56);
          v17();
        }
      }
      return;
  }
}

ValueMetadata *type metadata accessor for PodcastPlaybackPositionDataAttributes.CodingKeys()
{
  return &type metadata for PodcastPlaybackPositionDataAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for PodcastPlaybackPositionData.CodingKeys()
{
  return &type metadata for PodcastPlaybackPositionData.CodingKeys;
}

ValueMetadata *type metadata accessor for PodcastPlaybackPositionContainer.CodingKeys()
{
  return &type metadata for PodcastPlaybackPositionContainer.CodingKeys;
}

ValueMetadata *type metadata accessor for PodcastRelationshipContainer.CodingKeys()
{
  return &type metadata for PodcastRelationshipContainer.CodingKeys;
}

ValueMetadata *type metadata accessor for ServerTranscript.CodingKeys()
{
  return &type metadata for ServerTranscript.CodingKeys;
}

ValueMetadata *type metadata accessor for ServerTranscript.Attributes.CodingKeys()
{
  return &type metadata for ServerTranscript.Attributes.CodingKeys;
}

ValueMetadata *type metadata accessor for ServerTranscript.Attributes.AssetUrls.CodingKeys()
{
  return &type metadata for ServerTranscript.Attributes.AssetUrls.CodingKeys;
}

unsigned char *_s18PodcastsFoundation17PodcastAttributesC11DisplayTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE1AB64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastEpisodeRelationships.CodingKeys()
{
  return &type metadata for PodcastEpisodeRelationships.CodingKeys;
}

ValueMetadata *type metadata accessor for PodcastCategoriesRelationshipContainer.CodingKeys()
{
  return &type metadata for PodcastCategoriesRelationshipContainer.CodingKeys;
}

ValueMetadata *type metadata accessor for PodcastChannelRelationshipContainer.CodingKeys()
{
  return &type metadata for PodcastChannelRelationshipContainer.CodingKeys;
}

ValueMetadata *type metadata accessor for PodcastRelationships.CodingKeys()
{
  return &type metadata for PodcastRelationships.CodingKeys;
}

ValueMetadata *type metadata accessor for PodcastStationAttributes.CodingKeys()
{
  return &type metadata for PodcastStationAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for PodcastEpisodeOffer.CodingKeys()
{
  return &type metadata for PodcastEpisodeOffer.CodingKeys;
}

ValueMetadata *type metadata accessor for PodcastShowOffer.CodingKeys()
{
  return &type metadata for PodcastShowOffer.CodingKeys;
}

uint64_t getEnumTagSinglePayload for PodcastEpisodeAttributes.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE7) {
    goto LABEL_17;
  }
  if (a2 + 25 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 25) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 25;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1A;
  int v8 = v6 - 26;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PodcastEpisodeAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 25 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 25) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE6)
  {
    unsigned int v6 = ((a2 - 231) >> 8) + 1;
    *uint64_t result = a2 + 25;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE1AD58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 25;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastEpisodeAttributes.CodingKeys()
{
  return &type metadata for PodcastEpisodeAttributes.CodingKeys;
}

unsigned char *_s18PodcastsFoundation32PodcastPlaybackPositionContainerC10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACE1AE2CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastEditorialArtworkContainer.CodingKeys()
{
  return &type metadata for PodcastEditorialArtworkContainer.CodingKeys;
}

uint64_t getEnumTagSinglePayload for PodcastAttributes.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PodcastAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *uint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE1AFC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastAttributes.CodingKeys()
{
  return &type metadata for PodcastAttributes.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ServerArtwork.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE1B0C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerArtwork.CodingKeys()
{
  return &type metadata for ServerArtwork.CodingKeys;
}

unsigned char *_s18PodcastsFoundation4KindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE1B1C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerDescription.CodingKeys()
{
  return &type metadata for ServerDescription.CodingKeys;
}

ValueMetadata *type metadata accessor for ServerPodcastStation.CodingKeys()
{
  return &type metadata for ServerPodcastStation.CodingKeys;
}

unsigned char *_s18PodcastsFoundation24PodcastEpisodeAttributesC9MediaKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE1B2DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerPodcastEpisode.CodingKeys()
{
  return &type metadata for ServerPodcastEpisode.CodingKeys;
}

unsigned char *_s18PodcastsFoundation9PriceTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE1B3E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerPodcastBase.CodingKeys()
{
  return &type metadata for ServerPodcastBase.CodingKeys;
}

unint64_t sub_1ACE1B41C()
{
  unint64_t result = qword_1E99F6380;
  if (!qword_1E99F6380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6380);
  }
  return result;
}

unint64_t sub_1ACE1B474()
{
  unint64_t result = qword_1E99F6388;
  if (!qword_1E99F6388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6388);
  }
  return result;
}

unint64_t sub_1ACE1B4CC()
{
  unint64_t result = qword_1E99F6390;
  if (!qword_1E99F6390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6390);
  }
  return result;
}

unint64_t sub_1ACE1B524()
{
  unint64_t result = qword_1E99F6398;
  if (!qword_1E99F6398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6398);
  }
  return result;
}

unint64_t sub_1ACE1B57C()
{
  unint64_t result = qword_1E99F63A0;
  if (!qword_1E99F63A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F63A0);
  }
  return result;
}

unint64_t sub_1ACE1B5D4()
{
  unint64_t result = qword_1E99F63A8;
  if (!qword_1E99F63A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F63A8);
  }
  return result;
}

unint64_t sub_1ACE1B62C()
{
  unint64_t result = qword_1E99F63B0;
  if (!qword_1E99F63B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F63B0);
  }
  return result;
}

unint64_t sub_1ACE1B684()
{
  unint64_t result = qword_1E99F63B8;
  if (!qword_1E99F63B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F63B8);
  }
  return result;
}

unint64_t sub_1ACE1B6DC()
{
  unint64_t result = qword_1E99F63C0;
  if (!qword_1E99F63C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F63C0);
  }
  return result;
}

unint64_t sub_1ACE1B734()
{
  unint64_t result = qword_1E99F63C8;
  if (!qword_1E99F63C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F63C8);
  }
  return result;
}

unint64_t sub_1ACE1B78C()
{
  unint64_t result = qword_1E99F63D0;
  if (!qword_1E99F63D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F63D0);
  }
  return result;
}

unint64_t sub_1ACE1B7E4()
{
  unint64_t result = qword_1E99F63D8;
  if (!qword_1E99F63D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F63D8);
  }
  return result;
}

unint64_t sub_1ACE1B83C()
{
  unint64_t result = qword_1E99F63E0;
  if (!qword_1E99F63E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F63E0);
  }
  return result;
}

unint64_t sub_1ACE1B894()
{
  unint64_t result = qword_1E99F63E8;
  if (!qword_1E99F63E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F63E8);
  }
  return result;
}

unint64_t sub_1ACE1B8EC()
{
  unint64_t result = qword_1E99F63F0;
  if (!qword_1E99F63F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F63F0);
  }
  return result;
}

unint64_t sub_1ACE1B944()
{
  unint64_t result = qword_1E99F63F8;
  if (!qword_1E99F63F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F63F8);
  }
  return result;
}

unint64_t sub_1ACE1B99C()
{
  unint64_t result = qword_1E99F6400;
  if (!qword_1E99F6400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6400);
  }
  return result;
}

unint64_t sub_1ACE1B9F4()
{
  unint64_t result = qword_1E99F6408;
  if (!qword_1E99F6408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6408);
  }
  return result;
}

unint64_t sub_1ACE1BA4C()
{
  unint64_t result = qword_1E99F6410;
  if (!qword_1E99F6410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6410);
  }
  return result;
}

unint64_t sub_1ACE1BAA4()
{
  unint64_t result = qword_1E99F6418;
  if (!qword_1E99F6418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6418);
  }
  return result;
}

unint64_t sub_1ACE1BAFC()
{
  unint64_t result = qword_1E99F6420;
  if (!qword_1E99F6420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6420);
  }
  return result;
}

unint64_t sub_1ACE1BB54()
{
  unint64_t result = qword_1E99F6428;
  if (!qword_1E99F6428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6428);
  }
  return result;
}

unint64_t sub_1ACE1BBAC()
{
  unint64_t result = qword_1E99F6430;
  if (!qword_1E99F6430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6430);
  }
  return result;
}

unint64_t sub_1ACE1BC04()
{
  unint64_t result = qword_1E99F6438;
  if (!qword_1E99F6438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6438);
  }
  return result;
}

unint64_t sub_1ACE1BC5C()
{
  unint64_t result = qword_1E99F6440;
  if (!qword_1E99F6440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6440);
  }
  return result;
}

unint64_t sub_1ACE1BCB4()
{
  unint64_t result = qword_1E99F6448;
  if (!qword_1E99F6448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6448);
  }
  return result;
}

unint64_t sub_1ACE1BD0C()
{
  unint64_t result = qword_1E99F6450;
  if (!qword_1E99F6450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6450);
  }
  return result;
}

unint64_t sub_1ACE1BD64()
{
  unint64_t result = qword_1E99F6458;
  if (!qword_1E99F6458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6458);
  }
  return result;
}

unint64_t sub_1ACE1BDBC()
{
  unint64_t result = qword_1E99F6460;
  if (!qword_1E99F6460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6460);
  }
  return result;
}

unint64_t sub_1ACE1BE14()
{
  unint64_t result = qword_1E99F6468;
  if (!qword_1E99F6468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6468);
  }
  return result;
}

unint64_t sub_1ACE1BE6C()
{
  unint64_t result = qword_1E99F6470;
  if (!qword_1E99F6470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6470);
  }
  return result;
}

unint64_t sub_1ACE1BEC4()
{
  unint64_t result = qword_1E99F6478;
  if (!qword_1E99F6478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6478);
  }
  return result;
}

unint64_t sub_1ACE1BF1C()
{
  unint64_t result = qword_1E99F6480;
  if (!qword_1E99F6480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6480);
  }
  return result;
}

unint64_t sub_1ACE1BF74()
{
  unint64_t result = qword_1E99F6488;
  if (!qword_1E99F6488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6488);
  }
  return result;
}

unint64_t sub_1ACE1BFCC()
{
  unint64_t result = qword_1E99F6490;
  if (!qword_1E99F6490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6490);
  }
  return result;
}

unint64_t sub_1ACE1C024()
{
  unint64_t result = qword_1E99F6498;
  if (!qword_1E99F6498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6498);
  }
  return result;
}

unint64_t sub_1ACE1C07C()
{
  unint64_t result = qword_1EB76A420;
  if (!qword_1EB76A420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A420);
  }
  return result;
}

unint64_t sub_1ACE1C0D4()
{
  unint64_t result = qword_1EB76A418;
  if (!qword_1EB76A418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A418);
  }
  return result;
}

unint64_t sub_1ACE1C12C()
{
  unint64_t result = qword_1EB770B50;
  if (!qword_1EB770B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770B50);
  }
  return result;
}

unint64_t sub_1ACE1C184()
{
  unint64_t result = qword_1EB7714C0;
  if (!qword_1EB7714C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7714C0);
  }
  return result;
}

unint64_t sub_1ACE1C1DC()
{
  unint64_t result = qword_1EB768818;
  if (!qword_1EB768818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB768818);
  }
  return result;
}

unint64_t sub_1ACE1C234()
{
  unint64_t result = qword_1EB768810;
  if (!qword_1EB768810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB768810);
  }
  return result;
}

unint64_t sub_1ACE1C28C()
{
  unint64_t result = qword_1EB76F5E8;
  if (!qword_1EB76F5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76F5E8);
  }
  return result;
}

unint64_t sub_1ACE1C2E4()
{
  unint64_t result = qword_1EB76F5E0;
  if (!qword_1EB76F5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76F5E0);
  }
  return result;
}

unint64_t sub_1ACE1C33C()
{
  unint64_t result = qword_1E99F64A0;
  if (!qword_1E99F64A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F64A0);
  }
  return result;
}

unint64_t sub_1ACE1C394()
{
  unint64_t result = qword_1E99F64A8;
  if (!qword_1E99F64A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F64A8);
  }
  return result;
}

unint64_t sub_1ACE1C3EC()
{
  unint64_t result = qword_1EB7676F8;
  if (!qword_1EB7676F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7676F8);
  }
  return result;
}

unint64_t sub_1ACE1C444()
{
  unint64_t result = qword_1EB7676F0;
  if (!qword_1EB7676F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7676F0);
  }
  return result;
}

unint64_t sub_1ACE1C49C()
{
  unint64_t result = qword_1EB766F98;
  if (!qword_1EB766F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB766F98);
  }
  return result;
}

unint64_t sub_1ACE1C4F4()
{
  unint64_t result = qword_1EB766F90;
  if (!qword_1EB766F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB766F90);
  }
  return result;
}

unint64_t sub_1ACE1C54C()
{
  unint64_t result = qword_1EB767EB0;
  if (!qword_1EB767EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767EB0);
  }
  return result;
}

unint64_t sub_1ACE1C5A4()
{
  unint64_t result = qword_1EB767EA8;
  if (!qword_1EB767EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767EA8);
  }
  return result;
}

unint64_t sub_1ACE1C5FC()
{
  unint64_t result = qword_1EB768588;
  if (!qword_1EB768588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB768588);
  }
  return result;
}

unint64_t sub_1ACE1C654()
{
  unint64_t result = qword_1EB768580;
  if (!qword_1EB768580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB768580);
  }
  return result;
}

unint64_t sub_1ACE1C6AC()
{
  unint64_t result = qword_1EB767220;
  if (!qword_1EB767220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767220);
  }
  return result;
}

unint64_t sub_1ACE1C704()
{
  unint64_t result = qword_1EB767218;
  if (!qword_1EB767218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767218);
  }
  return result;
}

unint64_t sub_1ACE1C75C()
{
  unint64_t result = qword_1EB766D30;
  if (!qword_1EB766D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB766D30);
  }
  return result;
}

unint64_t sub_1ACE1C7B4()
{
  unint64_t result = qword_1EB766D28;
  if (!qword_1EB766D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB766D28);
  }
  return result;
}

unint64_t sub_1ACE1C80C()
{
  unint64_t result = qword_1EB767378;
  if (!qword_1EB767378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767378);
  }
  return result;
}

unint64_t sub_1ACE1C864()
{
  unint64_t result = qword_1EB767370;
  if (!qword_1EB767370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767370);
  }
  return result;
}

unint64_t sub_1ACE1C8BC()
{
  unint64_t result = qword_1E99F64B0;
  if (!qword_1E99F64B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F64B0);
  }
  return result;
}

unint64_t sub_1ACE1C914()
{
  unint64_t result = qword_1E99F64B8;
  if (!qword_1E99F64B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F64B8);
  }
  return result;
}

unint64_t sub_1ACE1C96C()
{
  unint64_t result = qword_1EB767A98;
  if (!qword_1EB767A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767A98);
  }
  return result;
}

unint64_t sub_1ACE1C9C4()
{
  unint64_t result = qword_1EB767A90;
  if (!qword_1EB767A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767A90);
  }
  return result;
}

unint64_t sub_1ACE1CA1C()
{
  unint64_t result = qword_1EB767450;
  if (!qword_1EB767450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767450);
  }
  return result;
}

unint64_t sub_1ACE1CA74()
{
  unint64_t result = qword_1EB767448;
  if (!qword_1EB767448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767448);
  }
  return result;
}

uint64_t sub_1ACE1CAC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1819112564 && a2 == 0xE400000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x727574616E676973 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACE1CBB8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656B6F546C6D7474 && a2 == 0xE90000000000006ELL;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657373416C6D7474 && a2 == 0xED0000736C725574)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACE1CCDC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1ACE1CE18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1717924456 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1ACE1CFA8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x80000001ACEC3EB0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001ACEC3ED0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_1ACE1D108()
{
  unint64_t result = qword_1EB76D368;
  if (!qword_1EB76D368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76D368);
  }
  return result;
}

unint64_t sub_1ACE1D15C()
{
  unint64_t result = qword_1EB76A558;
  if (!qword_1EB76A558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A558);
  }
  return result;
}

unint64_t sub_1ACE1D1B0()
{
  unint64_t result = qword_1E99F64C0;
  if (!qword_1E99F64C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F64C0);
  }
  return result;
}

uint64_t FairPlayInvalidationManager.removeKey(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v19[0] = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_1ACE75DC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  size_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1ACE75E48();
  uint64_t v11 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  unsigned int v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(void *)(v3 + OBJC_IVAR___PFFairPlayInvalidationManager_internalQueue);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  int v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v14;
  v15[3] = a2;
  uint64_t v16 = v19[0];
  void v15[4] = a3;
  v15[5] = v16;
  void v15[6] = ObjectType;
  aBlock[4] = sub_1ACE1FA48;
  void aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_89;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1ACE75E08();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v13, v10, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  swift_release();
  return swift_release();
}

uint64_t sub_1ACE1D574()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

id FairPlayInvalidationManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id FairPlayInvalidationManager.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FairPlayKeyLoader()), sel_init);
  type metadata accessor for CoreDataFairPlayEpisodeDataFetcher();
  uint64_t v2 = swift_allocObject();
  id v3 = sub_1ACE1FF40(v1, v2, (char *)objc_allocWithZone(ObjectType));

  swift_release();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t FairPlayInvalidationManager.invalidateFairPlayKey(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v19[0] = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_1ACE75DC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  size_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1ACE75E48();
  uint64_t v11 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  unsigned int v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(void *)(v3 + OBJC_IVAR___PFFairPlayInvalidationManager_internalQueue);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  int v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v14;
  v15[3] = a2;
  uint64_t v16 = v19[0];
  void v15[4] = a3;
  v15[5] = v16;
  void v15[6] = ObjectType;
  aBlock[4] = sub_1ACE202CC;
  void aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_10_6;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACA6DEC8(a2);
  sub_1ACE75E08();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v13, v10, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  swift_release();
  return swift_release();
}

void sub_1ACE1DA48(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1 + 16;
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x1AD11B470](v9);
  if (v10)
  {
    uint64_t v11 = (char *)v10;
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1ACE754C8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EB76D598);
    unsigned int v13 = sub_1ACE75498();
    os_log_type_t v14 = sub_1ACE76BD8();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v27 = a5;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v28 = v16;
      *(_DWORD *)uint64_t v15 = 136315651;
      sub_1ACA3189C(0xD000000000000031, 0x80000001ACED3C70, &v28);
      sub_1ACE76FF8();
      *(_WORD *)(v15 + 12) = 2160;
      sub_1ACE76FF8();
      *(_WORD *)(v15 + 22) = 2081;
      uint64_t v17 = sub_1ACE777C8();
      sub_1ACA3189C(v17, v18, &v28);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v13, v14, "%s Invalidating keys for adamId: %{private,mask.hash}s", (uint8_t *)v15, 0x20u);
      swift_arrayDestroy();
      uint64_t v19 = v16;
      a5 = v27;
      MEMORY[0x1AD11B340](v19, -1, -1);
      MEMORY[0x1AD11B340](v15, -1, -1);
    }

    uint64_t v20 = *(void *)&v11[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher + 24];
    uint64_t v21 = *(void *)&v11[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher + 32];
    __swift_project_boxed_opaque_existential_1(&v11[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher], v20);
    unint64_t v22 = (void *)swift_allocObject();
    void v22[2] = v11;
    v22[3] = a2;
    v22[4] = a3;
    v22[5] = a4;
    v22[6] = a5;
    char v23 = *(void (**)(uint64_t, void (*)(void *, char), void *, uint64_t, uint64_t))(v21 + 8);
    uint64_t v24 = v11;
    sub_1ACA6DEC8((uint64_t)a2);
    v23(a4, sub_1ACE21118, v22, v20, v21);

    swift_release();
  }
  else if (a2)
  {
    sub_1ACE20FF0();
    uint64_t v25 = (void *)swift_allocError();
    *objc_super v26 = 0;
    a2();
  }
}

void sub_1ACE1DD60(id a1, char a2, uint64_t a3, void (*a4)(id), uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    if (!a4) {
      goto LABEL_9;
    }
    id v11 = a1;
    a4(a1);
    id v12 = a1;
  }
  else
  {
    uint64_t v9 = *(void **)(a3 + OBJC_IVAR___PFFairPlayInvalidationManager_keyLoader);
    if (a4)
    {
      aBlock[4] = (uint64_t)a4;
      void aBlock[5] = a5;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1ACCB9FCC;
      aBlock[3] = (uint64_t)&block_descriptor_54_3;
      uint64_t v10 = _Block_copy(aBlock);
      sub_1ACCA256C(a1);
      sub_1ACA6DEC8((uint64_t)a4);
      swift_release();
    }
    else
    {
      id v13 = a1;
      uint64_t v10 = 0;
    }
    objc_msgSend(v9, sel_stopKeyRequestWithAsset_completion_, a1, v10);
    _Block_release(v10);
    id v12 = a1;
  }
  sub_1ACB2E108(v12);
LABEL_9:
  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1ACE754C8();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EB76D598);
  uint64_t v15 = sub_1ACE75498();
  os_log_type_t v16 = sub_1ACE76BD8();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    aBlock[0] = v18;
    *(_DWORD *)uint64_t v17 = 136315651;
    uint64_t v22 = sub_1ACA3189C(0xD000000000000031, 0x80000001ACED3C70, aBlock);
    sub_1ACE76FF8();
    *(_WORD *)(v17 + 12) = 2160;
    uint64_t v22 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v17 + 22) = 2081;
    uint64_t v22 = a6;
    uint64_t v19 = sub_1ACE777C8();
    uint64_t v22 = sub_1ACA3189C(v19, v20, aBlock);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v15, v16, "%s Finished invalidating keys for adamId: %{private,mask.hash}s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v18, -1, -1);
    MEMORY[0x1AD11B340](v17, -1, -1);
  }
}

uint64_t FairPlayInvalidationManager.markAllFairPlayKeysForInvalidation(shouldRemove:completion:)(int a1, uint64_t a2, uint64_t a3)
{
  int v19 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_1ACE75DC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = sub_1ACE75E48();
  uint64_t v11 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  id v13 = &v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = *(void *)(v3 + OBJC_IVAR___PFFairPlayInvalidationManager_internalQueue);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = a2;
  *(void *)(v15 + 32) = a3;
  *(unsigned char *)(v15 + 40) = v19;
  *(void *)(v15 + 48) = ObjectType;
  aBlock[4] = sub_1ACE20984;
  void aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_17_7;
  os_log_type_t v16 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACA6DEC8(a2);
  sub_1ACE75E08();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v13, v10, v16);
  _Block_release(v16);
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v21);
  swift_release();
  return swift_release();
}

void sub_1ACE1E508(uint64_t a1, void (*a2)(void), uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9 = a1 + 16;
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x1AD11B470](v9);
  if (v10)
  {
    uint64_t v11 = (char *)v10;
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1ACE754C8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EB76D598);
    id v13 = sub_1ACE75498();
    os_log_type_t v14 = sub_1ACE76BD8();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      char v26 = a4;
      uint64_t v16 = a5;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v27 = v17;
      *(_DWORD *)uint64_t v15 = 136315138;
      sub_1ACA3189C(0xD000000000000031, 0x80000001ACED3C70, &v27);
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v13, v14, "%s Invalidating all FairPlay keys.", v15, 0xCu);
      swift_arrayDestroy();
      uint64_t v18 = v17;
      a5 = v16;
      a4 = v26;
      MEMORY[0x1AD11B340](v18, -1, -1);
      MEMORY[0x1AD11B340](v15, -1, -1);
    }

    uint64_t v19 = *(void *)&v11[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher + 24];
    uint64_t v20 = *(void *)&v11[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher + 32];
    __swift_project_boxed_opaque_existential_1(&v11[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher], v19);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a2;
    *(void *)(v21 + 24) = a3;
    *(void *)(v21 + 32) = v11;
    *(unsigned char *)(v21 + 40) = a4 & 1;
    *(void *)(v21 + 48) = a5;
    uint64_t v22 = *(void (**)(void (*)(void *, char), uint64_t, uint64_t, uint64_t))(v20 + 32);
    sub_1ACA6DEC8((uint64_t)a2);
    char v23 = v11;
    v22(sub_1ACE210A4, v21, v19, v20);

    swift_release();
  }
  else if (a2)
  {
    sub_1ACE20FF0();
    uint64_t v24 = (void *)swift_allocError();
    *uint64_t v25 = 0;
    a2();
  }
}

void sub_1ACE1E7B0(void *a1, char a2, void (*a3)(void *), uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v11 = sub_1ACE74F28();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v57 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v34 = a1;
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1ACE754C8();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EB76D598);
    uint64_t v36 = a1;
    uint64_t v37 = a1;
    uint64_t v38 = sub_1ACE75498();
    os_log_type_t v39 = sub_1ACE76BE8();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v59 = v41;
      *(_DWORD *)uint64_t v40 = 136315394;
      uint64_t v58 = sub_1ACA3189C(0xD000000000000031, 0x80000001ACED3C70, &v59);
      sub_1ACE76FF8();
      *(_WORD *)(v40 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v42 = sub_1ACE77A98();
      uint64_t v58 = sub_1ACA3189C(v42, v43, &v59);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACAC1E88(a1, 1);
      sub_1ACAC1E88(a1, 1);
      _os_log_impl(&dword_1AC9D5000, v38, v39, "%s Unable to fetch downloaded FairPlay episodes with error: %{public}s.", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v41, -1, -1);
      MEMORY[0x1AD11B340](v40, -1, -1);

      if (!a3) {
        goto LABEL_18;
      }
    }
    else
    {
      sub_1ACAC1E88(a1, 1);
      sub_1ACAC1E88(a1, 1);

      if (!a3)
      {
LABEL_18:
        sub_1ACAC1E88(a1, 1);
        return;
      }
    }
    uint64_t v44 = a1;
    a3(a1);
    sub_1ACAC1E88(a1, 1);
    goto LABEL_18;
  }
  unsigned int v52 = (void (*)(void))a3;
  uint64_t v17 = qword_1EB76D5B8;
  swift_bridgeObjectRetain();
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1ACE754C8();
  v49[1] = __swift_project_value_buffer(v18, (uint64_t)qword_1EB76D598);
  uint64_t v19 = sub_1ACE75498();
  os_log_type_t v20 = sub_1ACE76BD8();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v51 = a4;
  int v53 = a6;
  if (v21)
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v59 = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v58 = sub_1ACA3189C(0xD000000000000031, 0x80000001ACED3C70, &v59);
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v19, v20, "%s Fetched downloaded FairPlay data. Marking to invalidate keys.", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v23, -1, -1);
    MEMORY[0x1AD11B340](v22, -1, -1);
  }

  uint64_t v24 = a1[2];
  id v50 = a1;
  if (v24)
  {
    char v26 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v25 = v12 + 16;
    uint64_t v27 = (char *)a1 + ((*(unsigned __int8 *)(v25 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 64));
    uint64_t v54 = *(void *)(v25 + 56);
    uint64_t v55 = v26;
    unint64_t v28 = v25 + 40;
    BOOL v29 = (unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 32);
    uint64_t v30 = (void (**)(uint64_t, char *, uint64_t))(v25 + 16);
    uint64_t v56 = v25;
    uint64_t v31 = (void (**)(uint64_t, uint64_t))(v25 - 8);
    v49[0] = v28 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v53 &= 1u;
    uint64_t v32 = (uint64_t)v57;
    while (1)
    {
      v55(v16, v27, v11);
      uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v28;
      (*(void (**)(char *, void, uint64_t, uint64_t))v28)(v16, 0, 1, v11);
      if ((*v29)(v16, 1, v11) == 1) {
        break;
      }
      (*v30)(v32, v16, v11);
      _s18PodcastsFoundation27FairPlayInvalidationManagerC010markKeyForE02at12shouldRemovey0B03URLV_SbtF_0(v32, v53);
      (*v31)(v32, v11);
      v27 += v54;
      if (!--v24) {
        goto LABEL_20;
      }
    }
  }
  else
  {
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
LABEL_20:
    v33(v16, 1, 1, v11);
  }
  sub_1ACAC1E88(v50, 0);
  int v45 = sub_1ACE75498();
  os_log_type_t v46 = sub_1ACE76BD8();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    uint64_t v59 = v48;
    *(_DWORD *)uint64_t v47 = 136315138;
    uint64_t v58 = sub_1ACA3189C(0xD000000000000031, 0x80000001ACED3C70, &v59);
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v45, v46, "%s Finished marking all FairPlay keys for invalidation.", v47, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v48, -1, -1);
    MEMORY[0x1AD11B340](v47, -1, -1);
  }

  if (v52) {
    v52(0);
  }
}

uint64_t FairPlayInvalidationManager.removalAllFairPlayKeys(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_1ACE75DC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1ACE75E48();
  uint64_t v11 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(void *)(v3 + OBJC_IVAR___PFFairPlayInvalidationManager_internalQueue);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v14;
  v15[3] = a1;
  void v15[4] = a2;
  v15[5] = ObjectType;
  aBlock[4] = sub_1ACE209A0;
  void aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_24_7;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACA6DEC8(a1);
  sub_1ACE75E08();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v13, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v19);
  swift_release();
  return swift_release();
}

void sub_1ACE1F264(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1AD11B470](v7);
  if (v8)
  {
    uint64_t v9 = (char *)v8;
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1ACE754C8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB76D598);
    uint64_t v11 = sub_1ACE75498();
    os_log_type_t v12 = sub_1ACE76BD8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v22 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      sub_1ACA3189C(0xD000000000000031, 0x80000001ACED3C70, &v22);
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v11, v12, "%s Removing all FairPlay keys.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v14, -1, -1);
      MEMORY[0x1AD11B340](v13, -1, -1);
    }

    uint64_t v15 = *(void *)&v9[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher + 24];
    uint64_t v16 = *(void *)&v9[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher + 32];
    __swift_project_boxed_opaque_existential_1(&v9[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher], v15);
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = v9;
    uint64_t v17[3] = a2;
    v17[4] = a3;
    v17[5] = a4;
    uint64_t v18 = *(void (**)(void (*)(unint64_t, char), void *, uint64_t, uint64_t))(v16 + 16);
    uint64_t v19 = v9;
    sub_1ACA6DEC8((uint64_t)a2);
    v18(sub_1ACE2104C, v17, v15, v16);

    swift_release();
  }
  else if (a2)
  {
    sub_1ACE20FF0();
    uint64_t v20 = (void *)swift_allocError();
    *BOOL v21 = 0;
    a2();
  }
}

void sub_1ACE1F4EC(unint64_t a1, char a2, uint64_t a3, void (*a4)(unint64_t))
{
  if (a2)
  {
    id v10 = (id)a1;
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1ACE754C8();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB76D598);
    id v12 = (id)a1;
    id v13 = (id)a1;
    uint64_t v14 = sub_1ACE75498();
    os_log_type_t v15 = sub_1ACE76BE8();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v21 = v17;
      *(_DWORD *)uint64_t v16 = 136315394;
      sub_1ACA3189C(0xD000000000000031, 0x80000001ACED3C70, &v21);
      sub_1ACE76FF8();
      *(_WORD *)(v16 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v18 = sub_1ACE77A98();
      sub_1ACA3189C(v18, v19, &v21);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACAC1E88((id)a1, 1);
      sub_1ACAC1E88((id)a1, 1);
      _os_log_impl(&dword_1AC9D5000, v14, v15, "%s Unable to remove all FairPlay keys with error %{public}s.", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v17, -1, -1);
      MEMORY[0x1AD11B340](v16, -1, -1);

      if (!a4) {
        goto LABEL_17;
      }
    }
    else
    {
      sub_1ACAC1E88((id)a1, 1);
      sub_1ACAC1E88((id)a1, 1);

      if (!a4)
      {
LABEL_17:
        sub_1ACAC1E88((id)a1, 1);
        return;
      }
    }
    id v20 = (id)a1;
    a4(a1);
    sub_1ACAC1E88((id)a1, 1);
    goto LABEL_17;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1ACE77508();
    if (!v6) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_19;
    }
  }
  if (v6 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x1AD119490](i, a1);
    }
    else {
      id v8 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v9 = v8;
  }
LABEL_19:
  sub_1ACAC1E88((id)a1, 0);
  if (a4) {
    a4(0);
  }
}

void sub_1ACE1F8C8(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1 + 16;
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x1AD11B470](v9);
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    id v12 = (void *)(v10 + OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher);
    uint64_t v13 = v12[3];
    uint64_t v14 = v12[4];
    __swift_project_boxed_opaque_existential_1(v12, v13);
    os_log_type_t v15 = (void *)swift_allocObject();
    _OWORD v15[2] = a2;
    v15[3] = a3;
    void v15[4] = a5;
    uint64_t v16 = *(void (**)(uint64_t, void (*)(char *, char), void *, uint64_t, uint64_t))(v14 + 8);
    swift_retain();
    v16(a4, sub_1ACE21164, v15, v13, v14);

    swift_release();
  }
  else
  {
    sub_1ACE20FF0();
    uint64_t v17 = (void *)swift_allocError();
    unsigned char *v18 = 0;
    a2();
  }
}

uint64_t sub_1ACE1FA08()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACE1FA48()
{
  return sub_1ACE202E4((uint64_t (*)(void, void, void, void, void))sub_1ACE1F8C8);
}

void sub_1ACE1FA60(char *a1, char a2, void (*a3)(char *))
{
  if (a2)
  {
    id v8 = a1;
    a3(a1);
    id v7 = a1;
    goto LABEL_6;
  }
  if (*(void *)&a1[OBJC_IVAR___PFFairPlayAsset_keyStore])
  {
    self;
    uint64_t v5 = swift_dynamicCastObjCClass();
    if (v5)
    {
      uint64_t v6 = (void *)v5;
      sub_1ACCA256C(a1);
      swift_unknownObjectRetain();

      a3(0);
      swift_unknownObjectRelease();
      id v7 = a1;
LABEL_6:
      sub_1ACB2E108(v7);
      return;
    }
  }
  uint64_t v9 = qword_1EB76D5B8;
  uint64_t v10 = a1;
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1ACE754C8();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EB76D598);
  v10;
  id v12 = sub_1ACE75498();
  os_log_type_t v13 = sub_1ACE76BE8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v18 = v15;
    *(_DWORD *)uint64_t v14 = 136315651;
    sub_1ACA3189C(0xD000000000000031, 0x80000001ACED3C70, &v18);
    sub_1ACE76FF8();
    *(_WORD *)(v14 + 12) = 2160;
    sub_1ACE76FF8();
    *(_WORD *)(v14 + 22) = 2049;
    sub_1ACE76FF8();
    sub_1ACB2E108(a1);
    _os_log_impl(&dword_1AC9D5000, v12, v13, "%s Unable to remove key for %{private,mask.hash}lld, no key store found.", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v15, -1, -1);
    MEMORY[0x1AD11B340](v14, -1, -1);
  }
  else
  {
    sub_1ACB2E108(a1);
  }

  sub_1ACE20FF0();
  uint64_t v16 = (char *)swift_allocError();
  *uint64_t v17 = 1;
  a3(v16);

  sub_1ACB2E108(a1);
}

id FairPlayInvalidationManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1ACE1FF40(void *a1, uint64_t a2, char *a3)
{
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v24 = sub_1ACE76CE8();
  uint64_t v4 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v23 = OBJC_IVAR___PFFairPlayInvalidationManager_internalQueue;
  v22[1] = sub_1ACA51E1C();
  uint64_t v9 = a3;
  sub_1ACE75DF8();
  v30[0] = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCC58], v24);
  uint64_t v10 = (void *)sub_1ACE76D28();
  *(void *)&a3[v23] = v10;
  uint64_t v11 = (objc_class *)type metadata accessor for DispatchingFairPlayKeyLoading();
  id v12 = (char *)objc_allocWithZone(v11);
  os_log_type_t v13 = v25;
  *(void *)&v12[OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance] = v25;
  *(void *)&v12[OBJC_IVAR___PFDispatchingFairPlayKeyLoader_responseQueue] = v10;
  v31.receiver = v12;
  v31.super_class = v11;
  id v14 = v10;
  id v15 = v13;
  *(void *)&v9[OBJC_IVAR___PFFairPlayInvalidationManager_keyLoader] = objc_msgSendSuper2(&v31, sel_init);
  v30[3] = type metadata accessor for CoreDataFairPlayEpisodeDataFetcher();
  v30[4] = &off_1F039A7F0;
  v30[0] = v26;
  uint64_t v16 = (objc_class *)type metadata accessor for DispatchingFairPlayEpisodeDataFetching();
  uint64_t v17 = (char *)objc_allocWithZone(v16);
  sub_1ACA3E158((uint64_t)v30, (uint64_t)&v17[OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance]);
  *(void *)&v17[OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_responseQueue] = v14;
  v29.receiver = v17;
  v29.super_class = v16;
  id v18 = v14;
  swift_retain();
  id v19 = objc_msgSendSuper2(&v29, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);

  id v20 = &v9[OBJC_IVAR___PFFairPlayInvalidationManager_episodeFetcher];
  *((void *)v20 + 3) = v16;
  *((void *)v20 + 4) = &off_1F0394770;
  *(void *)id v20 = v19;

  v28.receiver = v9;
  v28.super_class = ObjectType;
  return objc_msgSendSuper2(&v28, sel_init);
}

uint64_t sub_1ACE202C4()
{
  return objectdestroy_6Tm_1();
}

uint64_t sub_1ACE202CC()
{
  return sub_1ACE202E4((uint64_t (*)(void, void, void, void, void))sub_1ACE1DA48);
}

uint64_t sub_1ACE202E4(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

void _s18PodcastsFoundation27FairPlayInvalidationManagerC010markKeyForE02at12shouldRemovey0B03URLV_SbtF_0(uint64_t a1, char a2)
{
  uint64_t v3 = sub_1ACE74EB8();
  unint64_t v5 = v4;
  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1ACE754C8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB76D598);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76C08();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v29 = v10;
    *(_DWORD *)uint64_t v9 = 136315651;
    sub_1ACA3189C(0xD000000000000031, 0x80000001ACED3C70, &v29);
    sub_1ACE76FF8();
    *(_WORD *)(v9 + 12) = 2160;
    sub_1ACE76FF8();
    *(_WORD *)(v9 + 22) = 2081;
    swift_bridgeObjectRetain();
    sub_1ACA3189C(v3, v5, &v29);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v7, v8, "%s Invalidating FairPlay key at: %{private,mask.hash}s.", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v10, -1, -1);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v11 = self;
  id v12 = (void *)sub_1ACE76178();

  if (a2)
  {
    id v13 = objc_allocWithZone(MEMORY[0x1E4FB8620]);
    swift_bridgeObjectRetain();
    id v14 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(v13, sel_initWithPath_, v14);

    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_1ACE75498();
    os_log_type_t v17 = sub_1ACE76C08();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v29 = v19;
      *(_DWORD *)uint64_t v18 = 136315651;
      sub_1ACA3189C(0xD000000000000031, 0x80000001ACED3C70, &v29);
      sub_1ACE76FF8();
      *(_WORD *)(v18 + 12) = 2160;
      sub_1ACE76FF8();
      *(_WORD *)(v18 + 22) = 2081;
      swift_bridgeObjectRetain();
      sub_1ACA3189C(v3, v5, &v29);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AC9D5000, v16, v17, "%s Removing key from %{private,mask.hash}s.", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v19, -1, -1);
      MEMORY[0x1AD11B340](v18, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v20 = objc_msgSend(v15, sel_removeAllKeys);
    if (v20)
    {
      id v21 = v20;
      swift_bridgeObjectRetain();
      id v22 = v21;
      uint64_t v23 = sub_1ACE75498();
      os_log_type_t v24 = sub_1ACE76BE8();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        uint64_t v29 = v26;
        *(_DWORD *)uint64_t v25 = 136315907;
        sub_1ACA3189C(0xD000000000000031, 0x80000001ACED3C70, &v29);
        sub_1ACE76FF8();
        *(_WORD *)(v25 + 12) = 2160;
        sub_1ACE76FF8();
        *(_WORD *)(v25 + 22) = 2081;
        swift_bridgeObjectRetain();
        sub_1ACA3189C(v3, v5, &v29);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v25 + 32) = 2082;
        swift_getErrorValue();
        uint64_t v27 = sub_1ACE77A98();
        sub_1ACA3189C(v27, v28, &v29);
        sub_1ACE76FF8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v23, v24, "%s Unable to remove key from %{private,mask.hash}s with error: %{public}s.", (uint8_t *)v25, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v26, -1, -1);
        MEMORY[0x1AD11B340](v25, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACE2097C()
{
  return objectdestroy_6Tm_1();
}

void sub_1ACE20984()
{
  sub_1ACE1E508(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1ACE20998()
{
  return objectdestroy_6Tm_1();
}

void sub_1ACE209A0()
{
  sub_1ACE1F264(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t _s18PodcastsFoundation27FairPlayInvalidationManagerC9removeKey3fors5Error_pSgAA0cD5AssetC_tF_0(void *a1)
{
  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1ACE754C8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB76D598);
  uint64_t v3 = a1;
  unint64_t v4 = sub_1ACE75498();
  os_log_type_t v5 = sub_1ACE76BD8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 136315651;
    sub_1ACA3189C(0xD000000000000031, 0x80000001ACED3C70, &v28);
    sub_1ACE76FF8();
    *(_WORD *)(v6 + 12) = 2160;
    sub_1ACE76FF8();
    *(_WORD *)(v6 + 22) = 2049;
    sub_1ACE76FF8();

    _os_log_impl(&dword_1AC9D5000, v4, v5, "%s Removing FairPlay key for %{private,mask.hash}lld.", (uint8_t *)v6, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v7, -1, -1);
    MEMORY[0x1AD11B340](v6, -1, -1);
  }
  else
  {
  }
  if (*(void *)&v3[OBJC_IVAR___PFFairPlayAsset_keyStore]
    && (self, (uint64_t v8 = swift_dynamicCastObjCClass()) != 0))
  {
    uint64_t v9 = (void *)v8;
    swift_unknownObjectRetain();
    id v10 = objc_msgSend(v9, sel_removeAllKeys);
    uint64_t v11 = (uint64_t)v10;
    if (v10)
    {
      id v12 = v10;
      id v13 = v3;
      id v14 = v12;
      id v15 = sub_1ACE75498();
      os_log_type_t v16 = sub_1ACE76BD8();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        uint64_t v28 = v18;
        *(_DWORD *)uint64_t v17 = 136315907;
        sub_1ACA3189C(0xD000000000000031, 0x80000001ACED3C70, &v28);
        sub_1ACE76FF8();
        *(_WORD *)(v17 + 12) = 2160;
        sub_1ACE76FF8();
        *(_WORD *)(v17 + 22) = 2049;
        sub_1ACE76FF8();

        *(_WORD *)(v17 + 32) = 2082;
        swift_getErrorValue();
        uint64_t v19 = sub_1ACE77A98();
        sub_1ACA3189C(v19, v20, &v28);
        sub_1ACE76FF8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v15, v16, "%s Unable to remove FairPlay key for %{private,mask.hash}lld with error %{public}s.", (uint8_t *)v17, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v18, -1, -1);
        MEMORY[0x1AD11B340](v17, -1, -1);
      }
      else
      {
      }
    }
    swift_unknownObjectRelease();
  }
  else
  {
    id v21 = v3;
    id v22 = sub_1ACE75498();
    os_log_type_t v23 = sub_1ACE76BD8();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v28 = v25;
      *(_DWORD *)uint64_t v24 = 136315651;
      sub_1ACA3189C(0xD000000000000031, 0x80000001ACED3C70, &v28);
      sub_1ACE76FF8();
      *(_WORD *)(v24 + 12) = 2160;
      sub_1ACE76FF8();
      *(_WORD *)(v24 + 22) = 2049;
      sub_1ACE76FF8();

      _os_log_impl(&dword_1AC9D5000, v22, v23, "%s Unable to remove FairPlay key for %{private,mask.hash}lld, no key store found.", (uint8_t *)v24, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v25, -1, -1);
      MEMORY[0x1AD11B340](v24, -1, -1);
    }
    else
    {
    }
    sub_1ACE20FF0();
    uint64_t v11 = swift_allocError();
    *uint64_t v26 = 1;
  }
  return v11;
}

uint64_t type metadata accessor for FairPlayInvalidationManager()
{
  return self;
}

uint64_t method lookup function for FairPlayInvalidationManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FairPlayInvalidationManager);
}

uint64_t sub_1ACE20FB8()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

unint64_t sub_1ACE20FF0()
{
  unint64_t result = qword_1E99F64E0;
  if (!qword_1E99F64E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F64E0);
  }
  return result;
}

uint64_t sub_1ACE21044()
{
  return objectdestroy_44Tm_0();
}

void sub_1ACE2104C(unint64_t a1, char a2)
{
  sub_1ACE1F4EC(a1, a2 & 1, *(void *)(v2 + 16), *(void (**)(unint64_t))(v2 + 24));
}

uint64_t sub_1ACE2105C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_1ACE210A4(void *a1, char a2)
{
  sub_1ACE1E7B0(a1, a2 & 1, *(void (**)(void *))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 40));
}

uint64_t sub_1ACE210BC()
{
  return objectdestroy_44Tm_0();
}

uint64_t objectdestroy_44Tm_0()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return swift_deallocObject();
}

void sub_1ACE21118(void *a1, char a2)
{
  sub_1ACE1DD60(a1, a2 & 1, *(void *)(v2 + 16), *(void (**)(id))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1ACE2112C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACE21164(char *a1, char a2)
{
  sub_1ACE1FA60(a1, a2 & 1, *(void (**)(char *))(v2 + 16));
}

unsigned char *storeEnumTagSinglePayload for FairPlayInvalidationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE21240);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FairPlayInvalidationError()
{
  return &type metadata for FairPlayInvalidationError;
}

unint64_t sub_1ACE2127C()
{
  unint64_t result = qword_1E99F64E8[0];
  if (!qword_1E99F64E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E99F64E8);
  }
  return result;
}

uint64_t MTEpisodeType.helperEpisodeType.getter(uint64_t a1)
{
  if (a1 == 1) {
    unsigned int v1 = 2;
  }
  else {
    unsigned int v1 = 1;
  }
  if (a1 == 2) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t sub_1ACE212FC(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void *))
{
  v5[0] = a1;
  v5[1] = a2;
  char v6 = a3 & 1;
  return a4(v5);
}

uint64_t ForegroundSessionSource.init(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *(void *)(swift_allocObject() + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E000);
  swift_allocObject();
  uint64_t result = sub_1ACE75A18();
  *a2 = result;
  return result;
}

uint64_t ForegroundSessionSource.session.getter()
{
  return swift_retain();
}

uint64_t sub_1ACE213CC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1ACE75DC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = sub_1ACE75E48();
  uint64_t v10 = *(void *)(v19[0] - 8);
  MEMORY[0x1F4188790](v19[0]);
  id v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  uint64_t v14 = qword_1EB76E130;
  swift_retain();
  if (v14 != -1) {
    swift_once();
  }
  id v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a3;
  v15[3] = sub_1ACB2DC40;
  void v15[4] = v13;
  aBlock[4] = sub_1ACE263B8;
  void aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_50_1;
  os_log_type_t v16 = _Block_copy(aBlock);
  id v17 = a3;
  sub_1ACE75E08();
  v19[1] = MEMORY[0x1E4FBC860];
  sub_1ACA55D24();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v12, v9, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, void))(v10 + 8))(v12, v19[0]);
  return swift_release();
}

uint64_t sub_1ACE216C8()
{
  return swift_deallocObject();
}

void sub_1ACE21700(uint64_t a1, void (*a2)(id, void))
{
  id v3 = objc_msgSend(self, sel_sessionWithConfiguration_, a1);
  id v4 = v3;
  a2(v3, 0);
}

uint64_t ForegroundSessionSource.init(sessionBuilder:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t ForegroundSessionSource.fetch(asset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v110 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v6 - 8);
  id v109 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v91 = sub_1ACE759B8();
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x1F4188790](v91);
  uint64_t v89 = (char *)&v85 - v9;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E4F0);
  uint64_t v94 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  uint64_t v92 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_group_t v97 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D640);
  uint64_t v95 = *(v97 - 1);
  MEMORY[0x1F4188790](v97);
  char v93 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76DA28);
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  char v114 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB769478);
  uint64_t v104 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v103 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = sub_1ACA51EA4(&qword_1EB76A6D8, (uint64_t *)&unk_1EB769478);
  uint64_t v105 = v13;
  uint64_t v100 = AssociatedTypeWitness;
  uint64_t v99 = v16;
  uint64_t v17 = sub_1ACE756F8();
  uint64_t v107 = *(void *)(v17 - 8);
  uint64_t v108 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v106 = (char *)&v85 - v18;
  uint64_t v86 = sub_1ACE75118();
  uint64_t v19 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  id v21 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1ACE754C8();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v112 = v27;
  uint64_t v113 = (char *)&v85 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v29 = MEMORY[0x1F4188790](v28);
  uint64_t v87 = *v3;
  uint64_t v98 = v30;
  objc_super v31 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  uint64_t v33 = a1;
  uint64_t v111 = v30 + 16;
  dispatch_group_t v115 = v31;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v31)((char *)&v85 - v32, a1, v8, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D370);
  uint64_t v88 = v8;
  if (swift_dynamicCast())
  {
    uint64_t v35 = *((void *)&v121 + 1);
    uint64_t v34 = v122;
    __swift_project_boxed_opaque_existential_1(&v120, *((uint64_t *)&v121 + 1));
    ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v34[1])(&v117, v35, v34);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v120);
    if (*((void *)&v118 + 1))
    {
      sub_1ACA3AABC(&v117, (uint64_t)&v120);
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v122 = 0;
    long long v120 = 0u;
    long long v121 = 0u;
    sub_1ACA50E78((uint64_t)&v120, &qword_1EB7693C8);
    long long v117 = 0u;
    long long v118 = 0u;
    uint64_t v119 = 0;
  }
  if (qword_1EB772EF0 != -1) {
    swift_once();
  }
  uint64_t v36 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB772ED0);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v25, v36, v22);
  char v37 = sub_1ACE76BC8();
  sub_1ACE75108();
  uint64_t v38 = sub_1ACE750C8();
  uint64_t v40 = v39;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v86);
  uint64_t v41 = type metadata accessor for LoggerTrace(0);
  *((void *)&v121 + 1) = v41;
  uint64_t v122 = &protocol witness table for LoggerTrace;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v120);
  uint64_t *boxed_opaque_existential_1 = v38;
  boxed_opaque_existential_1[1] = v40;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))((char *)boxed_opaque_existential_1 + *(int *)(v41 + 20), v25, v22);
  *((unsigned char *)boxed_opaque_existential_1 + *(int *)(v41 + 24)) = v37;
  sub_1ACA50E78((uint64_t)&v117, &qword_1EB772EA0);
LABEL_8:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A878);
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 24) = 0;
  *(void *)(v43 + 32) = 0;
  *(void *)(v43 + 16) = 0;
  *(_DWORD *)(v43 + 40) = 0;
  uint64_t v85 = v33;
  uint64_t v44 = v88;
  v115(v113, v33, v88);
  int v45 = v89;
  uint64_t v46 = sub_1ACE759C8();
  MEMORY[0x1F4188790](v46);
  uint64_t v86 = sub_1ACE74F28();
  uint64_t v47 = v92;
  uint64_t v48 = v91;
  sub_1ACE759A8();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v45, v48);
  *(void *)&long long v117 = v87;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E000);
  sub_1ACA51EA4(&qword_1EB76E4E8, (uint64_t *)&unk_1EB76E4F0);
  sub_1ACA51EA4(&qword_1EB76DFF8, &qword_1EB76E000);
  uint64_t v49 = v93;
  uint64_t v50 = v96;
  sub_1ACE75B18();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v47, v50);
  sub_1ACA51EA4(&qword_1EB76D638, &qword_1EB76D640);
  uint64_t v51 = v97;
  sub_1ACE75C18();
  (*(void (**)(char *, void *))(v95 + 8))(v49, v51);
  unsigned int v52 = v113;
  v115(v113, v33, v44);
  sub_1ACA3E158((uint64_t)&v120, (uint64_t)&v117);
  uint64_t v53 = v44;
  uint64_t v54 = v98;
  uint64_t v55 = *(unsigned __int8 *)(v98 + 80);
  uint64_t v56 = (v55 + 32) & ~v55;
  uint64_t v96 = v55 | 7;
  unint64_t v57 = (v112 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v58 = swift_allocObject();
  uint64_t v59 = v116;
  *(void *)(v58 + 16) = v44;
  *(void *)(v58 + 24) = v59;
  uint64_t v60 = v58 + v56;
  dispatch_group_t v97 = *(void **)(v54 + 32);
  uint64_t v61 = v52;
  ((void (*)(uint64_t, char *, uint64_t))v97)(v60, v52, v44);
  *(void *)(v58 + v57) = v43;
  unint64_t v62 = v58 + ((v57 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v62 = "ForegroundNetworkFetch";
  *(void *)(v62 + 8) = 22;
  *(unsigned char *)(v62 + 16) = 2;
  sub_1ACA3AABC(&v117, v58 + ((v57 + 39) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = sub_1ACE23104;
  *(void *)(v63 + 24) = v58;
  uint64_t v98 = v43;
  swift_retain();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A310);
  sub_1ACA51EA4(&qword_1EB76DA20, (uint64_t *)&unk_1EB76DA28);
  sub_1ACA51EA4(&qword_1EB76A308, &qword_1EB76A310);
  id v64 = v103;
  uint64_t v65 = v102;
  os_log_type_t v66 = v114;
  sub_1ACE75C78();
  swift_release();
  uint64_t v67 = v65;
  uint64_t v68 = v86;
  (*(void (**)(char *, uint64_t))(v101 + 8))(v66, v67);
  sub_1ACA3E158((uint64_t)&v120, (uint64_t)&v117);
  uint64_t v69 = v53;
  v115(v61, v85, v53);
  uint64_t v70 = (v55 + 72) & ~v55;
  uint64_t v71 = swift_allocObject();
  uint64_t v72 = v116;
  *(void *)(v71 + 16) = v69;
  *(void *)(v71 + 24) = v72;
  sub_1ACA3AABC(&v117, v71 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v97)(v71 + v70, v61, v69);
  unint64_t v73 = v106;
  uint64_t v74 = v105;
  sub_1ACE75C28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v64, v74);
  sub_1ACA3E158((uint64_t)&v120, (uint64_t)&v117);
  uint64_t v75 = v72;
  unint64_t v76 = *(void (**)(uint64_t, uint64_t))(v72 + 16);
  uint64_t v77 = (uint64_t)v109;
  v76(v69, v75);
  uint64_t v78 = *(void *)(v68 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v77, 1, v68) == 1)
  {
    sub_1ACA50E78(v77, &qword_1EB7731B0);
    uint64_t v79 = 0;
    unint64_t v80 = 0;
  }
  else
  {
    uint64_t v79 = sub_1ACE74EC8();
    unint64_t v80 = v81;
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v77, v68);
  }
  uint64_t v82 = v108;
  swift_getWitnessTable();
  char v83 = j___s18PodcastsFoundation13EmitLifecycleV16defaultVerbositySbvgZ();
  Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)((uint64_t)&v117, (uint64_t)"ForegroundDownload", 18, 2, 1, v79, v80, v83 & 1, v110, v82);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1ACA50E78((uint64_t)&v117, &qword_1EB772EA0);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v73, v82);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v120);
}

uint64_t sub_1ACE22604@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  __n128 v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 16))(a1, a2, v7);
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v9, v10);
  }
  sub_1ACA50E78((uint64_t)v9, &qword_1EB7731B0);
  type metadata accessor for ForegroundSessionSource.SourceError();
  swift_getWitnessTable();
  swift_allocError();
  *uint64_t v12 = 0;
  return swift_willThrow();
}

uint64_t sub_1ACE227A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACE22604(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1ACE227BC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v66 = a8;
  int v71 = a7;
  uint64_t v70 = a6;
  uint64_t v69 = a5;
  uint64_t v68 = a4;
  uint64_t v72 = a3;
  uint64_t v65 = a2;
  uint64_t v80 = a9;
  uint64_t v83 = a11;
  uint64_t v81 = a10;
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A310);
  MEMORY[0x1F4188790](v79);
  uint64_t v78 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a10 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v16);
  uint64_t v17 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1ACE74F28();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  MEMORY[0x1F4188790](v18);
  id v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A770);
  uint64_t v73 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  id v64 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A678);
  uint64_t v76 = *(void *)(v23 - 8);
  uint64_t v77 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v74 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v26 = MEMORY[0x1F4188790](v25);
  uint64_t v82 = (char *)&v63 - v27;
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v19 + 16);
  uint64_t v75 = a1;
  v28(v21, a1, v18, v26);
  uint64_t v29 = a3;
  uint64_t v30 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v29, v81);
  unint64_t v31 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v32 = (v20 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (*(unsigned __int8 *)(v14 + 80) + v32 + 8) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = v83;
  *(void *)(v34 + 16) = v30;
  *(void *)(v34 + 24) = v35;
  (*(void (**)(unint64_t, char *, uint64_t))(v19 + 32))(v34 + v31, v21, v18);
  uint64_t v36 = v65;
  *(void *)(v34 + v32) = v65;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v34 + v33, v17, v30);
  id v37 = v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A670);
  sub_1ACA51EA4(&qword_1EB76A668, &qword_1EB76A670);
  uint64_t v38 = v64;
  sub_1ACE75A38();
  uint64_t v39 = v66;
  sub_1ACA3E158(v66, (uint64_t)v88);
  uint64_t v40 = swift_allocObject();
  uint64_t v41 = v68;
  uint64_t v42 = v69;
  *(void *)(v40 + 16) = v68;
  *(void *)(v40 + 24) = v42;
  uint64_t v43 = v70;
  *(void *)(v40 + 32) = v70;
  LOBYTE(v14) = v71;
  *(unsigned char *)(v40 + 40) = v71;
  sub_1ACA3AABC(v88, v40 + 48);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v41;
  *(void *)(v44 + 24) = v42;
  *(void *)(v44 + 32) = v43;
  *(unsigned char *)(v44 + 40) = v14;
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = v41;
  *(void *)(v45 + 24) = v42;
  *(void *)(v45 + 32) = v43;
  *(unsigned char *)(v45 + 40) = v14;
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v41;
  *(void *)(v46 + 24) = v42;
  *(void *)(v46 + 32) = v43;
  *(unsigned char *)(v46 + 40) = v14;
  sub_1ACA51EA4(&qword_1EB76A768, &qword_1EB76A770);
  swift_retain_n();
  uint64_t v47 = v67;
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v38, v47);
  sub_1ACA3E158(v39, (uint64_t)v88);
  uint64_t v86 = 0;
  unint64_t v87 = 0xE000000000000000;
  sub_1ACE77268();
  swift_bridgeObjectRelease();
  uint64_t v86 = 60;
  unint64_t v87 = 0xE100000000000000;
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v83 + 24))(&v84, v81);
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  sub_1ACE74DF8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v49 = v86;
  unint64_t v48 = v87;
  uint64_t v51 = v76;
  uint64_t v50 = v77;
  unsigned int v52 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
  uint64_t v53 = v74;
  uint64_t v54 = v82;
  v52(v74, v82, v77);
  sub_1ACAAAFAC((uint64_t)v88, (uint64_t)&v86);
  uint64_t v55 = (uint64_t)v78;
  v52(v78, v53, v50);
  uint64_t v56 = (int *)v79;
  sub_1ACAAAFAC((uint64_t)&v86, v55 + *(int *)(v79 + 36));
  uint64_t v57 = v55 + v56[10];
  *(void *)uint64_t v57 = "DOWNLOAD";
  *(void *)(v57 + 8) = 8;
  *(unsigned char *)(v57 + 16) = 2;
  *(unsigned char *)(v55 + v56[12]) = 0;
  uint64_t v84 = v49;
  unint64_t v85 = v48;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v58 = v84;
  unint64_t v59 = v85;
  sub_1ACA50E78((uint64_t)&v86, &qword_1EB772EA0);
  uint64_t v60 = *(void (**)(char *, uint64_t))(v51 + 8);
  v60(v53, v50);
  uint64_t v61 = (uint64_t *)(v55 + v56[11]);
  *uint64_t v61 = v58;
  v61[1] = v59;
  *(unsigned char *)(v55 + v56[13]) = 0;
  sub_1ACE25F6C(v55, v80);
  sub_1ACA50E78((uint64_t)v88, &qword_1EB772EA0);
  return ((uint64_t (*)(char *, uint64_t))v60)(v54, v50);
}

uint64_t sub_1ACE23050()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + v3);
  return swift_deallocObject();
}

uint64_t sub_1ACE23104@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(*(void *)(v3 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v3 + 16) - 8) + 80);
  unint64_t v5 = (*(void *)(*(void *)(*(void *)(v3 + 16) - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1ACE227BC(a1, a2, v3 + v4, *(void *)(v3 + v5), *(void *)(v3 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v3 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned __int8 *)(v3 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 16), v3 + ((v5 + 39) & 0xFFFFFFFFFFFFFFF8), a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1ACE231AC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v27 = a5;
  uint64_t v28 = a2;
  uint64_t v29 = a6;
  uint64_t v8 = *(void *)(a4 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v25 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v24 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v26, a4);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v16 = (v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + v16 + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v27;
  *(void *)(v18 + 16) = a4;
  *(void *)(v18 + 24) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v18 + v15, v13, v24);
  uint64_t v20 = v28;
  *(void *)(v18 + v16) = v28;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v18 + v17, v25, a4);
  *(void *)(v18 + ((v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DF30);
  swift_allocObject();
  id v21 = v20;
  swift_retain();
  uint64_t v30 = sub_1ACE75A18();
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DF20, &qword_1EB76DF30);
  swift_retain();
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1ACE234CC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (*v25)(void *__return_ptr, uint64_t, uint64_t);
  id v26;
  double v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void aBlock[6];

  unint64_t v31 = a7;
  unint64_t v32 = a4;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v12 = sub_1ACE74F28();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v33 = sub_1ACE74898();
  uint64_t v16 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
  swift_retain();
  sub_1ACE74848();
  uint64_t v20 = (void *)sub_1ACE74818();
  id v21 = (void *)swift_allocObject();
  uint64_t v22 = v31;
  _OWORD v21[2] = v31;
  void v21[3] = a8;
  v21[4] = sub_1ACE262F4;
  v21[5] = v19;
  aBlock[4] = sub_1ACE2636C;
  void aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACE23904;
  aBlock[3] = &block_descriptor_90;
  uint64_t v23 = _Block_copy(aBlock);
  swift_release();
  id v24 = objc_msgSend(v32, sel_dataTaskWithRequest_completionHandler_, v20, v23);
  _Block_release(v23);

  uint64_t v25 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a8 + 24);
  uint64_t v26 = v24;
  v25(aBlock, v22, a8);
  *(float *)&uint64_t v27 = flt_1ACE852C0[SLOBYTE(aBlock[0])];
  uint64_t v28 = v35;
  objc_msgSend(v26, sel_setPriority_, v27);

  objc_msgSend(v26, sel_resume);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v33);
  swift_beginAccess();
  uint64_t v29 = *(void **)(v28 + 16);
  *(void *)(v28 + 16) = v26;
}

void sub_1ACE237E8(uint64_t a1, unint64_t a2, int a3, id a4, void (*a5)(id, unint64_t, uint64_t))
{
  if (a2 >> 60 == 15)
  {
    if (a4)
    {
      id v7 = a4;
    }
    else
    {
      type metadata accessor for ForegroundSessionSource.SourceError();
      swift_getWitnessTable();
      id v7 = (id)swift_allocError();
      *uint64_t v10 = 1;
    }
    id v11 = a4;
    a5(v7, 0, 1);
  }
  else
  {
    sub_1ACA3985C(a1, a2);
    a5((id)a1, a2, 0);
    sub_1ACAB2EF0(a1, a2);
  }
}

uint64_t sub_1ACE23904(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v6 = a2;
  id v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v8 = v6;
    uint64_t v6 = (void *)sub_1ACE74F88();
    unint64_t v10 = v9;
  }
  else
  {
    swift_retain();
    unint64_t v10 = 0xF000000000000000;
  }
  id v11 = a3;
  id v12 = a4;
  v7(v6, v10, a3, a4);

  sub_1ACAB2EF0((uint64_t)v6, v10);
  return swift_release();
}

id sub_1ACE239CC(uint64_t a1)
{
  swift_beginAccess();
  id result = *(id *)(a1 + 16);
  if (result) {
    return objc_msgSend(result, sel_cancel);
  }
  return result;
}

void sub_1ACE23A1C(uint64_t a1, os_unfair_lock_s *a2)
{
  unint64_t v2 = (uint64_t *)&a2[4];
  uint64_t v3 = a2 + 10;
  os_unfair_lock_lock(a2 + 10);
  sub_1ACE26038(v2);
  os_unfair_lock_unlock(v3);
}

void sub_1ACE23A7C(uint64_t *a1, char *a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v10 = sub_1ACE753F8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v47 - v15;
  uint64_t v17 = sub_1ACE75438();
  MEMORY[0x1F4188790](v17);
  if (!*a1)
  {
    uint64_t v54 = v13;
    uint64_t v60 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v61 = v20;
    uint64_t v58 = v11;
    uint64_t v59 = v10;
    if (qword_1EB76D3D0 != -1)
    {
      uint64_t v46 = v18;
      swift_once();
      uint64_t v18 = v46;
    }
    uint64_t v21 = v18;
    uint64_t v22 = __swift_project_value_buffer(v18, (uint64_t)qword_1EB76D3B8);
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
    uint64_t v55 = v21;
    v23(v60, v22, v21);
    sub_1ACE75428();
    sub_1ACE753C8();
    sub_1ACA3E158((uint64_t)a5, (uint64_t)v63);
    id v24 = sub_1ACE75428();
    int v52 = sub_1ACE76E18();
    char v25 = sub_1ACE76FA8();
    uint64_t v56 = a5;
    uint64_t v57 = a1;
    if ((v25 & 1) == 0)
    {
      uint64_t v53 = v5;

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v63);
      uint64_t v30 = v58;
      uint64_t v29 = v59;
      uint64_t v27 = v16;
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v54, v16, v59);
LABEL_14:
      sub_1ACE75478();
      swift_allocObject();
      uint64_t v40 = sub_1ACE75468();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v29);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v55);
      uint64_t v41 = v56[3];
      uint64_t v42 = v56[4];
      __swift_project_boxed_opaque_existential_1(v56, v41);
      uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v41, v42);
      uint64_t v44 = v57;
      *uint64_t v57 = v40;
      v44[1] = v43;
      v44[2] = v45;
      return;
    }
    uint64_t v26 = v59;
    os_log_t v51 = v24;
    if ((a4 & 1) == 0)
    {
      if (a2)
      {
        uint64_t v27 = v16;
        uint64_t v53 = v5;
        uint64_t v28 = v58;
        unint64_t v48 = a2;
LABEL_13:
        uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
        unint64_t v31 = v54;
        v50(v54, v27, v26);
        unint64_t v32 = (uint8_t *)swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        uint64_t v66 = v33;
        *(_DWORD *)unint64_t v32 = 136315138;
        uint64_t v49 = v32 + 4;
        uint64_t v35 = v64;
        uint64_t v34 = v65;
        __swift_project_boxed_opaque_existential_1(v63, v64);
        uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v35, v34);
        uint64_t v62 = sub_1ACA3189C(v36, v37, &v66);
        uint64_t v30 = v58;
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v63);
        os_signpost_id_t v38 = sub_1ACE753D8();
        uint64_t v29 = v59;
        os_log_t v39 = v51;
        _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v51, (os_signpost_type_t)v52, v38, v48, "[identifier=%{name=identifier}s] ForegroundNetworkFetch", v32, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v33, -1, -1);
        MEMORY[0x1AD11B340](v32, -1, -1);

        (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v29);
        v50(v31, v27, v29);
        goto LABEL_14;
      }
LABEL_19:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v63);
      __break(1u);
      return;
    }
    if ((unint64_t)a2 >> 32)
    {
      __break(1u);
    }
    else
    {
      uint64_t v28 = v58;
      if (a2 >> 11 == 27)
      {
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      if (a2 >> 16 <= 0x10)
      {
        uint64_t v27 = v16;
        unint64_t v48 = sub_1ACA31704();
        uint64_t v53 = v5;
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_18;
  }
}

void sub_1ACE23F68(uint64_t a1, os_unfair_lock_s *a2)
{
  unint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 10;
  os_unfair_lock_lock(a2 + 10);
  sub_1ACE26018(v2);
  os_unfair_lock_unlock(v3);
}

void sub_1ACE23FC4(void *a1, const char *a2, uint64_t a3, int a4)
{
  LODWORD(v55) = a4;
  uint64_t v7 = sub_1ACE75448();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v54 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE753F8();
  uint64_t v58 = *(void *)(v10 - 8);
  uint64_t v59 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v53 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v44 - v13;
  uint64_t v15 = sub_1ACE75438();
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1)
  {
    uint64_t v50 = v7;
    uint64_t v51 = v8;
    uint64_t v56 = (char *)a2;
    uint64_t v57 = v16;
    uint64_t v60 = v4;
    unint64_t v19 = a1[2];
    uint64_t v49 = a1[1];
    int v52 = a1;
    if (qword_1EB76D3D0 != -1) {
      swift_once();
    }
    uint64_t v20 = __swift_project_value_buffer(v15, (uint64_t)qword_1EB76D3B8);
    uint64_t v21 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v18, v20, v15);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_1ACE75428();
    sub_1ACE75458();
    int v48 = sub_1ACE76E08();
    if ((sub_1ACE76FA8() & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v58 + 8))(v14, v59);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v15);
      swift_bridgeObjectRelease();
      swift_release();
LABEL_17:
      uint64_t v43 = v52;
      *int v52 = 0;
      v43[1] = 0;
      v43[2] = 0;
      return;
    }
    uint64_t v46 = v15;
    unint64_t v47 = v19;
    if ((v55 & 1) == 0)
    {
      uint64_t v23 = v60;
      uint64_t v24 = v51;
      if (v56)
      {
        char v25 = v14;
        uint64_t v26 = v22;
        uint64_t v27 = v50;
        uint64_t v28 = v54;
LABEL_13:
        uint64_t v60 = v23;
        swift_retain();
        sub_1ACE75488();
        swift_release();
        int v29 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v28, v27);
        int v30 = *MEMORY[0x1E4FBD340];
        os_log_t v44 = v26;
        uint64_t v45 = v18;
        if (v29 == v30)
        {
          char v31 = 0;
          char v32 = 0;
          uint64_t v55 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v27);
          uint64_t v55 = "[identifier=%{name=identifier}s] SUCCESS";
          char v32 = 2;
          char v31 = 1;
        }
        uint64_t v34 = v58;
        uint64_t v33 = v59;
        uint64_t v35 = v53;
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v53, v25, v59);
        uint64_t v36 = swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        uint64_t v62 = v37;
        *(unsigned char *)uint64_t v36 = v32;
        *(unsigned char *)(v36 + 1) = v31;
        *(_WORD *)(v36 + 2) = 2080;
        os_signpost_id_t v38 = v25;
        unint64_t v39 = v47;
        swift_bridgeObjectRetain();
        uint64_t v61 = sub_1ACA3189C(v49, v39, &v62);
        sub_1ACE76FF8();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        os_signpost_id_t v40 = sub_1ACE753D8();
        os_log_t v41 = v44;
        _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v44, (os_signpost_type_t)v48, v40, v56, v55, (uint8_t *)v36, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v37, -1, -1);
        MEMORY[0x1AD11B340](v36, -1, -1);

        uint64_t v42 = *(void (**)(char *, uint64_t))(v34 + 8);
        v42(v38, v33);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v45, v46);
        swift_bridgeObjectRelease();
        swift_release();
        v42(v35, v33);
        goto LABEL_17;
      }
LABEL_22:
      swift_bridgeObjectRelease_n();
      swift_release_n();
      __break(1u);
      return;
    }
    uint64_t v23 = v60;
    uint64_t v24 = v51;
    if ((unint64_t)v56 >> 32)
    {
      __break(1u);
    }
    else
    {
      uint64_t v26 = v22;
      uint64_t v27 = v50;
      uint64_t v28 = v54;
      if (v56 >> 11 == 27)
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      if (v56 >> 16 <= 0x10)
      {
        char v25 = v14;
        uint64_t v56 = sub_1ACA31704();
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
}

void sub_1ACE24590(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = (uint64_t)&a2[4];
  uint64_t v3 = a2 + 10;
  os_unfair_lock_lock(a2 + 10);
  sub_1ACE25FF4(v2);
  os_unfair_lock_unlock(v3);
}

void sub_1ACE245F4(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v78 = (char *)a3;
  uint64_t v7 = (const char *)sub_1ACE75448();
  uint64_t v73 = *((void *)v7 - 1);
  uint64_t v74 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v67 - v11;
  uint64_t v79 = sub_1ACE753F8();
  uint64_t v77 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v76 = (char *)&v67 - v16;
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)&v67 - v18;
  uint64_t v20 = sub_1ACE75438();
  uint64_t v80 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v67 - v26;
  if (*v25)
  {
    uint64_t v70 = v25[1];
    uint64_t v72 = v25;
    unint64_t v75 = v25[2];
    int v71 = a5;
    if (a2)
    {
      if (qword_1EB76D3D0 != -1)
      {
        uint64_t v65 = v24;
        swift_once();
        uint64_t v24 = v65;
      }
      uint64_t v28 = v24;
      uint64_t v29 = __swift_project_value_buffer(v24, (uint64_t)qword_1EB76D3B8);
      uint64_t v30 = v80;
      (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v22, v29, v28);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      char v31 = sub_1ACE75428();
      sub_1ACE75458();
      int v68 = sub_1ACE76E08();
      if (sub_1ACE76FA8())
      {
        uint64_t v69 = v28;
        if ((v71 & 1) == 0)
        {
          if (v78)
          {
            uint64_t v33 = v73;
            char v32 = v74;
LABEL_22:
            swift_retain();
            sub_1ACE75488();
            swift_release();
            int v41 = (*(uint64_t (**)(char *, const char *))(v33 + 88))(v9, v32);
            int v42 = *MEMORY[0x1E4FBD340];
            os_log_t v67 = v31;
            if (v41 == v42)
            {
              char v43 = 0;
              char v44 = 0;
              uint64_t v74 = "[Error] Interval already ended";
            }
            else
            {
              (*(void (**)(char *, const char *))(v33 + 8))(v9, v32);
              uint64_t v74 = "[identifier=%{name=identifier}s] FAILURE";
              char v44 = 2;
              char v43 = 1;
            }
            uint64_t v45 = v77;
            (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v76, v14, v79);
            uint64_t v46 = swift_slowAlloc();
            uint64_t v47 = swift_slowAlloc();
            uint64_t v83 = v47;
            *(unsigned char *)uint64_t v46 = v44;
            *(unsigned char *)(v46 + 1) = v43;
            *(_WORD *)(v46 + 2) = 2080;
            unint64_t v48 = v75;
            swift_bridgeObjectRetain();
            uint64_t v82 = sub_1ACA3189C(v70, v48, &v83);
            sub_1ACE76FF8();
            swift_release_n();
            swift_bridgeObjectRelease_n();
            os_signpost_id_t v49 = sub_1ACE753D8();
            os_log_t v50 = v67;
            _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v67, (os_signpost_type_t)v68, v49, v78, v74, (uint8_t *)v46, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1AD11B340](v47, -1, -1);
            MEMORY[0x1AD11B340](v46, -1, -1);

            uint64_t v51 = *(void (**)(char *, uint64_t))(v45 + 8);
            uint64_t v52 = v79;
            v51(v14, v79);
            (*(void (**)(char *, uint64_t))(v80 + 8))(v22, v69);
            swift_bridgeObjectRelease();
            swift_release();
            v51(v76, v52);
            goto LABEL_34;
          }
          goto LABEL_42;
        }
        if ((unint64_t)v78 >> 32)
        {
          __break(1u);
        }
        else
        {
          uint64_t v33 = v73;
          char v32 = v74;
          if (v78 >> 11 == 27)
          {
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          if (v78 >> 16 <= 0x10)
          {
            uint64_t v40 = v81;
            uint64_t v78 = sub_1ACA31704();
            uint64_t v81 = v40;
            goto LABEL_22;
          }
        }
        __break(1u);
        goto LABEL_38;
      }
      swift_bridgeObjectRelease_n();
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v77 + 8))(v14, v79);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v28);
    }
    else
    {
      if (qword_1EB76D3D0 != -1)
      {
        uint64_t v66 = v24;
        swift_once();
        uint64_t v24 = v66;
      }
      uint64_t v34 = v24;
      uint64_t v35 = __swift_project_value_buffer(v24, (uint64_t)qword_1EB76D3B8);
      uint64_t v36 = v80;
      (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v27, v35, v34);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v37 = sub_1ACE75428();
      sub_1ACE75458();
      int v68 = sub_1ACE76E08();
      if (sub_1ACE76FA8())
      {
        os_log_t v67 = v37;
        uint64_t v69 = v34;
        if (v71)
        {
          if ((unint64_t)v78 >> 32)
          {
LABEL_38:
            __break(1u);
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
          uint64_t v39 = v73;
          os_signpost_id_t v38 = v74;
          if (v78 >> 11 == 27)
          {
LABEL_41:
            __break(1u);
LABEL_42:
            swift_bridgeObjectRelease_n();
            swift_release_n();
            __break(1u);
            goto LABEL_43;
          }
          if (v78 >> 16 > 0x10) {
            goto LABEL_39;
          }
          uint64_t v53 = v81;
          uint64_t v78 = sub_1ACA31704();
          uint64_t v81 = v53;
        }
        else
        {
          if (!v78)
          {
LABEL_43:
            swift_bridgeObjectRelease_n();
            swift_release_n();
            __break(1u);
            return;
          }
          uint64_t v39 = v73;
          os_signpost_id_t v38 = v74;
        }
        swift_retain();
        sub_1ACE75488();
        swift_release();
        if ((*(unsigned int (**)(char *, const char *))(v39 + 88))(v12, v38) == *MEMORY[0x1E4FBD340])
        {
          char v54 = 0;
          char v55 = 0;
          uint64_t v74 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, const char *))(v39 + 8))(v12, v38);
          uint64_t v74 = "[identifier=%{name=identifier}s] EMPTY";
          char v55 = 2;
          char v54 = 1;
        }
        uint64_t v56 = v77;
        (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v76, v19, v79);
        uint64_t v57 = swift_slowAlloc();
        uint64_t v58 = swift_slowAlloc();
        uint64_t v83 = v58;
        *(unsigned char *)uint64_t v57 = v55;
        *(unsigned char *)(v57 + 1) = v54;
        *(_WORD *)(v57 + 2) = 2080;
        unint64_t v59 = v75;
        swift_bridgeObjectRetain();
        uint64_t v82 = sub_1ACA3189C(v70, v59, &v83);
        sub_1ACE76FF8();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        os_signpost_id_t v60 = sub_1ACE753D8();
        os_log_t v61 = v67;
        _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v67, (os_signpost_type_t)v68, v60, v78, v74, (uint8_t *)v57, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v58, -1, -1);
        MEMORY[0x1AD11B340](v57, -1, -1);

        uint64_t v62 = *(void (**)(char *, uint64_t))(v56 + 8);
        uint64_t v63 = v79;
        v62(v19, v79);
        (*(void (**)(char *, uint64_t))(v80 + 8))(v27, v69);
        swift_bridgeObjectRelease();
        swift_release();
        v62(v76, v63);
        goto LABEL_34;
      }
      swift_bridgeObjectRelease_n();
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v77 + 8))(v19, v79);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v34);
    }
    swift_bridgeObjectRelease();
    swift_release();
LABEL_34:
    uint64_t v64 = v72;
    *uint64_t v72 = 0;
    v64[1] = 0;
    v64[2] = 0;
  }
}

void sub_1ACE24F90(os_unfair_lock_s *a1)
{
  uint64_t v1 = a1 + 4;
  uint64_t v2 = a1 + 10;
  os_unfair_lock_lock(a1 + 10);
  sub_1ACE25FD4(v1);
  os_unfair_lock_unlock(v2);
}

void sub_1ACE24FEC(void *a1, const char *a2, uint64_t a3, int a4)
{
  LODWORD(v55) = a4;
  uint64_t v7 = sub_1ACE75448();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v54 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE753F8();
  uint64_t v58 = *(void *)(v10 - 8);
  uint64_t v59 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v53 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v44 - v13;
  uint64_t v15 = sub_1ACE75438();
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1)
  {
    uint64_t v50 = v7;
    uint64_t v51 = v8;
    uint64_t v56 = (char *)a2;
    uint64_t v57 = v16;
    uint64_t v60 = v4;
    unint64_t v19 = a1[2];
    uint64_t v49 = a1[1];
    uint64_t v52 = a1;
    if (qword_1EB76D3D0 != -1) {
      swift_once();
    }
    uint64_t v20 = __swift_project_value_buffer(v15, (uint64_t)qword_1EB76D3B8);
    uint64_t v21 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v18, v20, v15);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_1ACE75428();
    sub_1ACE75458();
    int v48 = sub_1ACE76E08();
    if ((sub_1ACE76FA8() & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v58 + 8))(v14, v59);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v15);
      swift_bridgeObjectRelease();
      swift_release();
LABEL_17:
      char v43 = v52;
      *uint64_t v52 = 0;
      v43[1] = 0;
      v43[2] = 0;
      return;
    }
    uint64_t v46 = v15;
    unint64_t v47 = v19;
    if ((v55 & 1) == 0)
    {
      uint64_t v23 = v60;
      uint64_t v24 = v51;
      if (v56)
      {
        char v25 = v14;
        uint64_t v26 = v22;
        uint64_t v27 = v50;
        uint64_t v28 = v54;
LABEL_13:
        uint64_t v60 = v23;
        swift_retain();
        sub_1ACE75488();
        swift_release();
        int v29 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v28, v27);
        int v30 = *MEMORY[0x1E4FBD340];
        os_log_t v44 = v26;
        uint64_t v45 = v18;
        if (v29 == v30)
        {
          char v31 = 0;
          char v32 = 0;
          char v55 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v27);
          char v55 = "[identifier=%{name=identifier}s] CANCEL";
          char v32 = 2;
          char v31 = 1;
        }
        uint64_t v34 = v58;
        uint64_t v33 = v59;
        uint64_t v35 = v53;
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v53, v25, v59);
        uint64_t v36 = swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        uint64_t v62 = v37;
        *(unsigned char *)uint64_t v36 = v32;
        *(unsigned char *)(v36 + 1) = v31;
        *(_WORD *)(v36 + 2) = 2080;
        os_signpost_id_t v38 = v25;
        unint64_t v39 = v47;
        swift_bridgeObjectRetain();
        uint64_t v61 = sub_1ACA3189C(v49, v39, &v62);
        sub_1ACE76FF8();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        os_signpost_id_t v40 = sub_1ACE753D8();
        os_log_t v41 = v44;
        _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v44, (os_signpost_type_t)v48, v40, v56, v55, (uint8_t *)v36, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v37, -1, -1);
        MEMORY[0x1AD11B340](v36, -1, -1);

        int v42 = *(void (**)(char *, uint64_t))(v34 + 8);
        v42(v38, v33);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v45, v46);
        swift_bridgeObjectRelease();
        swift_release();
        v42(v35, v33);
        goto LABEL_17;
      }
LABEL_22:
      swift_bridgeObjectRelease_n();
      swift_release_n();
      __break(1u);
      return;
    }
    uint64_t v23 = v60;
    uint64_t v24 = v51;
    if ((unint64_t)v56 >> 32)
    {
      __break(1u);
    }
    else
    {
      uint64_t v26 = v22;
      uint64_t v27 = v50;
      uint64_t v28 = v54;
      if (v56 >> 11 == 27)
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      if (v56 >> 16 <= 0x10)
      {
        char v25 = v14;
        uint64_t v56 = sub_1ACA31704();
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
}

uint64_t sub_1ACE255B8(uint64_t a1, uint64_t (*a2)(uint64_t, void))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A938);
  return a2(a1, *(void *)(a1 + *(int *)(v4 + 48)));
}

uint64_t sub_1ACE25610(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, void))(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A938);
  return v3(a1, *(void *)(a1 + *(int *)(v4 + 48)));
}

uint64_t sub_1ACE25664(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v10);
  Trace.emit(event:)((uint64_t)"DECODE", 6, 2, v10, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 8) + 40))(v8, v9, a4);
  uint64_t v12 = a2[3];
  uint64_t v13 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v12);
  if (!v15) {
    return Trace.emit(event:)((uint64_t)"DECODED", 7, 2, v12, v13);
  }
  Trace.emit(event:)((uint64_t)"DECODE-FAILED", 13, 2, v12, v13);
  return swift_willThrow();
}

uint64_t sub_1ACE257A0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1ACE25864(uint64_t *a1)
{
  return sub_1ACE25664(a1, v1 + 4, (uint64_t)v1+ ((*(unsigned __int8 *)(*(void *)(v1[2] - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[2] - 8) + 80)), v1[2], v1[3]);
}

BOOL static ForegroundSessionSource.SourceError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ForegroundSessionSource.SourceError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t ForegroundSessionSource.SourceError.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACE25954()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACE25990()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACE259AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for ForegroundSessionSource()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_1ACE25A0C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE25AD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for ForegroundSessionSource.SourceError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACE25B18()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB769478);
  swift_getAssociatedTypeWitness();
  sub_1ACA51EA4(&qword_1EB76A6D8, (uint64_t *)&unk_1EB769478);
  sub_1ACE756F8();
  swift_getWitnessTable();
  type metadata accessor for EmitLifecycle();
  return swift_getWitnessTable();
}

uint64_t sub_1ACE25C08()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);

  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v1);
  return swift_deallocObject();
}

uint64_t sub_1ACE25D30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(sub_1ACE74F28() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void **)(v1 + v7);
  uint64_t v9 = v1
     + ((v7 + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  return sub_1ACE231AC(v1 + v6, v8, v9, v3, v4, a1);
}

uint64_t sub_1ACE25E1C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  return swift_deallocObject();
}

void sub_1ACE25E5C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 10;
  os_unfair_lock_lock(v1 + 10);
  sub_1ACE26038(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1ACE25ECC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACE25F04()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 10;
  os_unfair_lock_lock(v1 + 10);
  sub_1ACE26018(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1ACE25F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1ACE25FD4(void *a1)
{
  sub_1ACE24FEC(a1, *(const char **)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

void sub_1ACE25FF4(uint64_t a1)
{
  sub_1ACE245F4(a1, *(void *)(v1 + 16), *(const char **)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

void sub_1ACE26018(void *a1)
{
  sub_1ACE23FC4(a1, *(const char **)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

void sub_1ACE26038(uint64_t *a1)
{
  sub_1ACE23A7C(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1ACE2605C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);

  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_1ACE26198(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(sub_1ACE74F28() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + *(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v11 = *(void **)(v2 + v9);
  uint64_t v12 = *(void *)(v2 + ((*(void *)(*(void *)(v5 - 8) + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1ACE234CC(a1, a2, v2 + v8, v11, v2 + v10, v12, v5, v6);
}

uint64_t sub_1ACE262BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACE262F4(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = *(uint64_t (**)(void *))(v3 + 16);
  v6[0] = a1;
  v6[1] = a2;
  char v7 = a3 & 1;
  return v4(v6);
}

uint64_t sub_1ACE26334()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACE2636C(uint64_t a1, unint64_t a2, int a3, void *a4)
{
  sub_1ACE237E8(a1, a2, a3, a4, *(void (**)(id, unint64_t, uint64_t))(v4 + 32));
}

uint64_t sub_1ACE26378()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACE263B8()
{
  sub_1ACE21700(*(void *)(v0 + 16), *(void (**)(id, void))(v0 + 24));
}

uint64_t EpisodePlayStateRule<>.eraseToAnyEpisodePlayStateRule()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  __n128 v7 = MEMORY[0x1F4188790](a1);
  unint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v9, v3, a1, v7);
  return sub_1ACE264B0((uint64_t)v9, a1, a2, a3);
}

uint64_t sub_1ACE264B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)()@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v10 + v9, a1, a2);
  *a4 = sub_1ACE273FC;
  a4[1] = (uint64_t (*)())v10;
  return result;
}

uint64_t AnyEpisodePlayStateRule.canMove(from:to:)()
{
  return (*v0)() & 1;
}

uint64_t sub_1ACE265BC()
{
  return (*v0)() & 1;
}

unint64_t sub_1ACE265E8()
{
  uint64_t v0 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1F4188790](v0);
  uint64_t v53 = (char *)&v50 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  char v54 = (char *)&v50 - v3;
  MEMORY[0x1F4188790](v4);
  uint64_t v52 = (uint64_t)&v50 - v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v50 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v51 = (char *)&v50 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v50 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v50 - v15;
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (uint64_t *)((char *)&v50 - v18);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v50 - v21;
  MEMORY[0x1F4188790](v23);
  char v25 = (char *)&v50 - v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769160);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE8A540;
  swift_storeEnumTagMultiPayload();
  sub_1ACAFDB90((uint64_t)v25, (uint64_t)v22);
  unint64_t v27 = 0xE800000000000000;
  uint64_t v28 = 0x646579616C706E75;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v27 = 0xE700000000000000;
      uint64_t v28 = 0x6C616974726170;
      break;
    case 2u:
      sub_1ACA3E034((uint64_t)v22);
      unint64_t v27 = 0xE600000000000000;
      uint64_t v28 = 0x646579616C70;
      break;
    case 3u:
      unint64_t v27 = 0xE700000000000000;
      unsigned int v29 = 2036427888;
      goto LABEL_6;
    case 4u:
      break;
    case 5u:
      unint64_t v27 = 0xE700000000000000;
      uint64_t v28 = 0x6E776F6E6B6E75;
      break;
    default:
      unint64_t v27 = 0xE700000000000000;
      unsigned int v29 = 1684956528;
LABEL_6:
      uint64_t v28 = v29 | 0x676E6900000000;
      break;
  }
  sub_1ACAFDCDC((uint64_t)v25);
  *(void *)(inited + 32) = v28;
  *(void *)(inited + 40) = v27;
  *(void *)(inited + 48) = sub_1ACE27364;
  *(void *)(inited + 56) = 0;
  *unint64_t v19 = 0;
  v19[1] = 0;
  swift_storeEnumTagMultiPayload();
  sub_1ACAFDB90((uint64_t)v19, (uint64_t)v16);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v31 = 0xE800000000000000;
  uint64_t v32 = 0x646579616C706E75;
  uint64_t v33 = (uint64_t)v53;
  uint64_t v34 = (uint64_t)v51;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      unint64_t v31 = 0xE700000000000000;
      uint64_t v32 = 0x6C616974726170;
      break;
    case 2:
      sub_1ACA3E034((uint64_t)v16);
      unint64_t v31 = 0xE600000000000000;
      uint64_t v32 = 0x646579616C70;
      break;
    case 3:
      unint64_t v31 = 0xE700000000000000;
      unsigned int v35 = 2036427888;
      goto LABEL_13;
    case 4:
      break;
    case 5:
      unint64_t v31 = 0xE700000000000000;
      uint64_t v32 = 0x6E776F6E6B6E75;
      break;
    default:
      unint64_t v31 = 0xE700000000000000;
      unsigned int v35 = 1684956528;
LABEL_13:
      uint64_t v32 = v35 | 0x676E6900000000;
      break;
  }
  sub_1ACAFDCDC((uint64_t)v19);
  *(void *)(inited + 64) = v32;
  *(void *)(inited + 72) = v31;
  *(void *)(inited + 80) = sub_1ACE27368;
  *(void *)(inited + 88) = 0;
  uint64_t v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78) + 48);
  uint64_t v37 = sub_1ACE750A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v13, 1, 1, v37);
  v13[v36] = 0;
  swift_storeEnumTagMultiPayload();
  sub_1ACAFDB90((uint64_t)v13, v34);
  unint64_t v38 = 0xE800000000000000;
  uint64_t v39 = 0x646579616C706E75;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v38 = 0xE700000000000000;
      uint64_t v39 = 0x6C616974726170;
      break;
    case 2u:
      sub_1ACA3E034(v34);
      unint64_t v38 = 0xE600000000000000;
      uint64_t v39 = 0x646579616C70;
      break;
    case 3u:
      unint64_t v38 = 0xE700000000000000;
      unsigned int v40 = 2036427888;
      goto LABEL_20;
    case 4u:
      break;
    case 5u:
      unint64_t v38 = 0xE700000000000000;
      uint64_t v39 = 0x6E776F6E6B6E75;
      break;
    default:
      unint64_t v38 = 0xE700000000000000;
      unsigned int v40 = 1684956528;
LABEL_20:
      uint64_t v39 = v40 | 0x676E6900000000;
      break;
  }
  sub_1ACAFDCDC((uint64_t)v13);
  *(void *)(inited + 96) = v39;
  *(void *)(inited + 104) = v38;
  *(void *)(inited + 112) = sub_1ACE2736C;
  *(void *)(inited + 120) = 0;
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  *(_DWORD *)(v8 + 15) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = v52;
  sub_1ACAFDB90((uint64_t)v8, v52);
  unint64_t v42 = 0xE800000000000000;
  uint64_t v43 = 0x646579616C706E75;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v42 = 0xE700000000000000;
      uint64_t v43 = 0x6C616974726170;
      break;
    case 2u:
      sub_1ACA3E034(v41);
      unint64_t v42 = 0xE600000000000000;
      uint64_t v43 = 0x646579616C70;
      break;
    case 3u:
      unint64_t v42 = 0xE700000000000000;
      unsigned int v44 = 2036427888;
      goto LABEL_27;
    case 4u:
      break;
    case 5u:
      unint64_t v42 = 0xE700000000000000;
      uint64_t v43 = 0x6E776F6E6B6E75;
      break;
    default:
      unint64_t v42 = 0xE700000000000000;
      unsigned int v44 = 1684956528;
LABEL_27:
      uint64_t v43 = v44 | 0x676E6900000000;
      break;
  }
  sub_1ACAFDCDC((uint64_t)v8);
  *(void *)(inited + 128) = v43;
  *(void *)(inited + 136) = v42;
  *(void *)(inited + 144) = sub_1ACE27370;
  *(void *)(inited + 152) = 0;
  uint64_t v45 = (uint64_t)v54;
  swift_storeEnumTagMultiPayload();
  sub_1ACAFDB90(v45, v33);
  unint64_t v46 = 0xE800000000000000;
  uint64_t v47 = 0x646579616C706E75;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v46 = 0xE700000000000000;
      uint64_t v47 = 0x6C616974726170;
      break;
    case 2u:
      sub_1ACA3E034(v33);
      unint64_t v46 = 0xE600000000000000;
      uint64_t v47 = 0x646579616C70;
      break;
    case 3u:
      unint64_t v46 = 0xE700000000000000;
      unsigned int v48 = 2036427888;
      goto LABEL_34;
    case 4u:
      break;
    case 5u:
      unint64_t v46 = 0xE700000000000000;
      uint64_t v47 = 0x6E776F6E6B6E75;
      break;
    default:
      unint64_t v46 = 0xE700000000000000;
      unsigned int v48 = 1684956528;
LABEL_34:
      uint64_t v47 = v48 | 0x676E6900000000;
      break;
  }
  sub_1ACAFDCDC(v45);
  *(void *)(inited + 160) = v47;
  *(void *)(inited + 168) = v46;
  *(void *)(inited + 176) = sub_1ACA58428;
  *(void *)(inited + 184) = 0;
  unint64_t result = sub_1ACA384EC(inited);
  qword_1EB7687F8 = result;
  return result;
}

uint64_t defaultEpisodePlayTransitionRules.getter()
{
  if (qword_1EB768800 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t NoTransitionEpisodePlayStateRule.canMove(from:to:)()
{
  return 0;
}

unint64_t sub_1ACE26DF8(uint64_t a1)
{
  unint64_t result = sub_1ACE26E20();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1ACE26E20()
{
  unint64_t result = qword_1E99F6570;
  if (!qword_1E99F6570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6570);
  }
  return result;
}

unint64_t sub_1ACE26E78()
{
  unint64_t result = qword_1EB766F78;
  if (!qword_1EB766F78)
  {
    type metadata accessor for EpisodePlayState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB766F78);
  }
  return result;
}

unint64_t sub_1ACE26ED0(uint64_t a1)
{
  unint64_t result = sub_1ACE26EF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1ACE26EF8()
{
  unint64_t result = qword_1E99F6578;
  if (!qword_1E99F6578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6578);
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyEpisodePlayStateRule()
{
  return &type metadata for AnyEpisodePlayStateRule;
}

ValueMetadata *type metadata accessor for NoTransitionEpisodePlayStateRule()
{
  return &type metadata for NoTransitionEpisodePlayStateRule;
}

BOOL sub_1ACE26F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v12 - v8;
  sub_1ACAFDB90(a2, (uint64_t)&v12 - v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    swift_storeEnumTagMultiPayload();
    _s18PodcastsFoundation16EpisodePlayStateO2eeoiySbAC_ACtFZ_0(a1, (uint64_t)v6);
    uint64_t v9 = v6;
  }
  sub_1ACAFDCDC((uint64_t)v9);
  return EnumCaseMultiPayload == 3;
}

BOOL sub_1ACE27068(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v12 - v8;
  sub_1ACAFDB90(a2, (uint64_t)&v12 - v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    sub_1ACA3E034((uint64_t)v9);
    swift_storeEnumTagMultiPayload();
    _s18PodcastsFoundation16EpisodePlayStateO2eeoiySbAC_ACtFZ_0(a1, (uint64_t)v6);
    uint64_t v9 = v6;
  }
  sub_1ACAFDCDC((uint64_t)v9);
  return EnumCaseMultiPayload == 2;
}

BOOL sub_1ACE2716C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v12 - v8;
  sub_1ACAFDB90(a2, (uint64_t)&v12 - v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_storeEnumTagMultiPayload();
    _s18PodcastsFoundation16EpisodePlayStateO2eeoiySbAC_ACtFZ_0(a1, (uint64_t)v6);
    uint64_t v9 = v6;
  }
  sub_1ACAFDCDC((uint64_t)v9);
  return EnumCaseMultiPayload == 1;
}

BOOL sub_1ACE27268(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v12 - v8;
  sub_1ACAFDB90(a2, (uint64_t)&v12 - v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1ACAFDCDC((uint64_t)v9);
  if (EnumCaseMultiPayload == 4)
  {
    swift_storeEnumTagMultiPayload();
    _s18PodcastsFoundation16EpisodePlayStateO2eeoiySbAC_ACtFZ_0(a1, (uint64_t)v6);
    sub_1ACAFDCDC((uint64_t)v6);
  }
  return EnumCaseMultiPayload == 4;
}

uint64_t sub_1ACE27374()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1ACE273FC()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(v0 + 24) + 8) + 24))() & 1;
}

uint64_t sub_1ACE27470(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v3 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v3) {
    return result;
  }
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR___MTSearchTrie_rootNode);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v5 = sub_1ACE762D8();
  if (!v6)
  {
    uint64_t v15 = v4;
LABEL_24:
    swift_bridgeObjectRelease();
    *(unsigned char *)(v15 + 16) = 1;
    return swift_release();
  }
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  while (1)
  {
    uint64_t v11 = (void *)(v4 + 24);
    swift_beginAccess();
    uint64_t v12 = *(void *)(v4 + 24);
    if (*(void *)(v12 + 16))
    {
      uint64_t v13 = sub_1ACA668E4(v7, v8);
      if (v14)
      {
        uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
        swift_retain();
        goto LABEL_8;
      }
    }
    type metadata accessor for SearchTrie.Node();
    uint64_t v15 = swift_allocObject();
    *(unsigned char *)(v15 + 16) = 0;
    *(void *)(v15 + 24) = MEMORY[0x1E4FBC868];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = (void *)*v11;
    unint64_t v31 = (void *)*v11;
    *uint64_t v11 = 0x8000000000000000;
    unint64_t v19 = sub_1ACA668E4(v7, v8);
    uint64_t v20 = v17[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      break;
    }
    char v23 = v18;
    if (v17[3] >= v22)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v26 = v31;
        if ((v18 & 1) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        sub_1ACD0A390();
        uint64_t v26 = v31;
        if ((v23 & 1) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      sub_1ACD04AF4(v22, isUniquelyReferenced_nonNull_native);
      uint64_t v24 = sub_1ACA668E4(v7, v8);
      if ((v23 & 1) != (v25 & 1)) {
        goto LABEL_28;
      }
      unint64_t v19 = v24;
      uint64_t v26 = v31;
      if ((v23 & 1) == 0)
      {
LABEL_19:
        v26[(v19 >> 6) + 8] |= 1 << v19;
        unint64_t v27 = (uint64_t *)(v26[6] + 16 * v19);
        uint64_t *v27 = v7;
        v27[1] = v8;
        *(void *)(v26[7] + 8 * v19) = v15;
        uint64_t v28 = v26[2];
        BOOL v29 = __OFADD__(v28, 1);
        uint64_t v30 = v28 + 1;
        if (v29) {
          goto LABEL_27;
        }
        void v26[2] = v30;
        swift_bridgeObjectRetain();
        goto LABEL_7;
      }
    }
    uint64_t v9 = v26[7];
    swift_release();
    *(void *)(v9 + 8 * v19) = v15;
LABEL_7:
    *uint64_t v11 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
LABEL_8:
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v7 = sub_1ACE762D8();
    uint64_t v8 = v10;
    uint64_t v4 = v15;
    if (!v10) {
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  unint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t SearchTrie.add<A>(matchCandidate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t result = sub_1ACE76A98();
  if (result) {
    return result;
  }
  uint64_t v40 = v10;
  uint64_t v14 = *(void *)(v3 + OBJC_IVAR___MTSearchTrie_rootNode);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  swift_retain();
  sub_1ACE76398();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1ACE76FE8();
  uint64_t v15 = v45;
  uint64_t v16 = v12;
  if (!v45)
  {
    uint64_t v23 = v14;
LABEL_22:
    (*(void (**)(char *, uint64_t))(v40 + 8))(v16, AssociatedTypeWitness);
    *(unsigned char *)(v23 + 16) = 1;
    return swift_release();
  }
  uint64_t v17 = v44;
  uint64_t v41 = v12;
  while (1)
  {
    unint64_t v19 = (void *)(v14 + 24);
    swift_beginAccess();
    uint64_t v20 = *(void *)(v14 + 24);
    if (*(void *)(v20 + 16))
    {
      uint64_t v21 = sub_1ACA668E4(v17, v15);
      if (v22)
      {
        uint64_t v23 = *(void *)(*(void *)(v20 + 56) + 8 * v21);
        swift_retain();
        goto LABEL_6;
      }
    }
    uint64_t v24 = AssociatedTypeWitness;
    type metadata accessor for SearchTrie.Node();
    uint64_t v23 = swift_allocObject();
    *(unsigned char *)(v23 + 16) = 0;
    *(void *)(v23 + 24) = MEMORY[0x1E4FBC868];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = (void *)*v19;
    uint64_t v26 = v43;
    *unint64_t v19 = 0x8000000000000000;
    unint64_t v28 = sub_1ACA668E4(v17, v15);
    uint64_t v29 = v26[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30)) {
      break;
    }
    char v32 = v27;
    if (v26[3] >= v31)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unsigned int v35 = v43;
        if ((v27 & 1) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        sub_1ACD0A390();
        unsigned int v35 = v43;
        if ((v32 & 1) == 0) {
          goto LABEL_17;
        }
      }
    }
    else
    {
      sub_1ACD04AF4(v31, isUniquelyReferenced_nonNull_native);
      uint64_t v33 = sub_1ACA668E4(v17, v15);
      if ((v32 & 1) != (v34 & 1)) {
        goto LABEL_26;
      }
      unint64_t v28 = v33;
      unsigned int v35 = v43;
      if ((v32 & 1) == 0)
      {
LABEL_17:
        v35[(v28 >> 6) + 8] |= 1 << v28;
        uint64_t v36 = (uint64_t *)(v35[6] + 16 * v28);
        *uint64_t v36 = v17;
        v36[1] = v15;
        *(void *)(v35[7] + 8 * v28) = v23;
        uint64_t v37 = v35[2];
        BOOL v38 = __OFADD__(v37, 1);
        uint64_t v39 = v37 + 1;
        if (v38) {
          goto LABEL_25;
        }
        v35[2] = v39;
        swift_bridgeObjectRetain();
        goto LABEL_5;
      }
    }
    uint64_t v18 = v35[7];
    swift_release();
    *(void *)(v18 + 8 * v28) = v23;
LABEL_5:
    *unint64_t v19 = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t AssociatedTypeWitness = v24;
    uint64_t v16 = v41;
LABEL_6:
    swift_bridgeObjectRelease();
    swift_release();
    sub_1ACE76FE8();
    uint64_t v17 = v44;
    uint64_t v15 = v45;
    uint64_t v14 = v23;
    if (!v45) {
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t SearchTrie.fullMatch<A>(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v22 - v11;
  if (sub_1ACE76A98()) {
    return 0;
  }
  uint64_t v14 = *(void *)(v3 + OBJC_IVAR___MTSearchTrie_rootNode);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  swift_retain();
  sub_1ACE76398();
  swift_getAssociatedConformanceWitness();
  sub_1ACE76FE8();
  uint64_t v15 = v24;
  if (v24)
  {
    uint64_t v16 = v23;
    while (1)
    {
      swift_beginAccess();
      uint64_t v17 = *(void *)(v14 + 24);
      if (!*(void *)(v17 + 16)) {
        break;
      }
      uint64_t v18 = sub_1ACA668E4(v16, v15);
      if ((v19 & 1) == 0) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1ACE76FE8();
      uint64_t v16 = v23;
      uint64_t v15 = v24;
      uint64_t v14 = v20;
      if (!v24) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
    return 0;
  }
  else
  {
    uint64_t v20 = v14;
LABEL_11:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
    uint64_t v13 = *(unsigned __int8 *)(v20 + 16);
    swift_release();
  }
  return v13;
}

uint64_t sub_1ACE27E24()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84830;
  uint64_t v28 = OBJC_IVAR___MTSearchTrie_rootNode;
  uint64_t v29 = v0;
  *(void *)(inited + 32) = *(void *)(v0 + OBJC_IVAR___MTSearchTrie_rootNode);
  uint64_t v31 = inited;
  sub_1ACE76598();
  unint64_t v2 = v31;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = sub_1ACE762D8();
  if (!v4)
  {
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v5 = result;
  uint64_t v6 = v4;
  while (1)
  {
    unint64_t v30 = MEMORY[0x1E4FBC860];
    if (v2 >> 62) {
      break;
    }
    uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_7;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void *)(v29 + v28);
    swift_beginAccess();
    uint64_t v23 = *(void *)(v22 + 24);
    if (*(void *)(v23 + 16) && (uint64_t v24 = sub_1ACA668E4(v5, v6), (v25 & 1) != 0))
    {
      uint64_t v26 = *(void *)(*(void *)(v23 + 56) + 8 * v24);
      swift_retain();
      swift_bridgeObjectRelease();
      if (*(unsigned char *)(v26 + 16))
      {
LABEL_37:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      uint64_t v27 = swift_retain();
      MEMORY[0x1AD118700](v27);
      if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1ACE765C8();
      }
      sub_1ACE76628();
      sub_1ACE76598();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unint64_t v2 = v30;
    uint64_t result = sub_1ACE762D8();
    uint64_t v5 = result;
    uint64_t v6 = v7;
    if (!v7) {
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1ACE77508();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_28;
  }
LABEL_7:
  if ((v2 & 0xC000000000000001) != 0)
  {
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t result = MEMORY[0x1AD119490](v9, v2);
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      uint64_t v11 = result;
      swift_beginAccess();
      uint64_t v12 = *(void *)(v11 + 24);
      if (*(void *)(v12 + 16) && (uint64_t v13 = sub_1ACA668E4(v5, v6), (v14 & 1) != 0))
      {
        if (*(unsigned char *)(*(void *)(*(void *)(v12 + 56) + 8 * v13) + 16)) {
          goto LABEL_36;
        }
        uint64_t v15 = swift_retain_n();
        MEMORY[0x1AD118700](v15);
        if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1ACE765C8();
        }
        sub_1ACE76628();
        sub_1ACE76598();
        swift_unknownObjectRelease();
        swift_release();
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v9;
      if (v10 == v8) {
        goto LABEL_28;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v16 = 0;
    while (1)
    {
      uint64_t v17 = v16 + 1;
      if (__OFADD__(v16, 1)) {
        break;
      }
      uint64_t v18 = *(void *)(v2 + 8 * v16 + 32);
      uint64_t result = swift_beginAccess();
      uint64_t v19 = *(void *)(v18 + 24);
      if (*(void *)(v19 + 16))
      {
        uint64_t result = sub_1ACA668E4(v5, v6);
        if (v20)
        {
          if (*(unsigned char *)(*(void *)(*(void *)(v19 + 56) + 8 * result) + 16) == 1)
          {
            swift_retain();
LABEL_36:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_37;
          }
          swift_retain_n();
          uint64_t v21 = swift_retain();
          MEMORY[0x1AD118700](v21);
          if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1ACE765C8();
          }
          sub_1ACE76628();
          sub_1ACE76598();
          swift_release();
          uint64_t result = swift_release();
        }
      }
      ++v16;
      if (v17 == v8) {
        goto LABEL_28;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t SearchTrie.containsMatch<A>(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v38 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v37 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84830;
  uint64_t v40 = OBJC_IVAR___MTSearchTrie_rootNode;
  uint64_t v41 = v2;
  *(void *)(inited + 32) = *(void *)(v2 + OBJC_IVAR___MTSearchTrie_rootNode);
  uint64_t v44 = inited;
  sub_1ACE76598();
  unint64_t v12 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, a2);
  swift_retain();
  sub_1ACE76398();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v42 = v10;
  uint64_t v43 = AssociatedTypeWitness;
  uint64_t result = sub_1ACE76FE8();
  uint64_t v15 = v46;
  if (!v46)
  {
LABEL_35:
    (*(void (**)(char *, uint64_t))(v38 + 8))(v42, v43);
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v16 = v45;
  uint64_t v39 = AssociatedConformanceWitness;
  while (1)
  {
    uint64_t v45 = MEMORY[0x1E4FBC860];
    if (v12 >> 62) {
      break;
    }
    uint64_t v17 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17) {
      goto LABEL_7;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    uint64_t v31 = *(void *)(v41 + v40);
    swift_beginAccess();
    uint64_t v32 = *(void *)(v31 + 24);
    if (*(void *)(v32 + 16) && (uint64_t v33 = sub_1ACA668E4(v16, v15), (v34 & 1) != 0))
    {
      uint64_t v35 = *(void *)(*(void *)(v32 + 56) + 8 * v33);
      swift_retain();
      swift_bridgeObjectRelease();
      if (*(unsigned char *)(v35 + 16))
      {
LABEL_38:
        swift_release();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v42, v43);
        return 1;
      }
      uint64_t v36 = swift_retain();
      MEMORY[0x1AD118700](v36);
      if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1ACE765C8();
      }
      sub_1ACE76628();
      sub_1ACE76598();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unint64_t v12 = v45;
    uint64_t result = sub_1ACE76FE8();
    uint64_t v16 = v45;
    uint64_t v15 = v46;
    if (!v46) {
      goto LABEL_35;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1ACE77508();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_29;
  }
LABEL_7:
  if ((v12 & 0xC000000000000001) != 0)
  {
    uint64_t v18 = 0;
    while (1)
    {
      uint64_t result = MEMORY[0x1AD119490](v18, v12);
      uint64_t v19 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        break;
      }
      uint64_t v20 = result;
      swift_beginAccess();
      uint64_t v21 = *(void *)(v20 + 24);
      if (*(void *)(v21 + 16) && (uint64_t v22 = sub_1ACA668E4(v16, v15), (v23 & 1) != 0))
      {
        if (*(unsigned char *)(*(void *)(*(void *)(v21 + 56) + 8 * v22) + 16)) {
          goto LABEL_37;
        }
        uint64_t v24 = swift_retain_n();
        MEMORY[0x1AD118700](v24);
        if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1ACE765C8();
        }
        sub_1ACE76628();
        sub_1ACE76598();
        swift_unknownObjectRelease();
        swift_release();
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v18;
      if (v19 == v17) {
        goto LABEL_29;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = v25 + 1;
      if (__OFADD__(v25, 1)) {
        break;
      }
      uint64_t v27 = *(void *)(v12 + 8 * v25 + 32);
      uint64_t result = swift_beginAccess();
      uint64_t v28 = *(void *)(v27 + 24);
      if (*(void *)(v28 + 16))
      {
        uint64_t result = sub_1ACA668E4(v16, v15);
        if (v29)
        {
          if (*(unsigned char *)(*(void *)(*(void *)(v28 + 56) + 8 * result) + 16) == 1)
          {
            swift_retain();
LABEL_37:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_38;
          }
          swift_retain_n();
          uint64_t v30 = swift_retain();
          MEMORY[0x1AD118700](v30);
          if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1ACE765C8();
          }
          sub_1ACE76628();
          sub_1ACE76598();
          swift_release();
          uint64_t result = swift_release();
        }
      }
      ++v25;
      if (v26 == v17) {
        goto LABEL_29;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACE287D8()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id SearchTrie.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id SearchTrie.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR___MTSearchTrie_rootNode;
  type metadata accessor for SearchTrie.Node();
  uint64_t v3 = swift_allocObject();
  *(unsigned char *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = MEMORY[0x1E4FBC868];
  *(void *)&v0[v2] = v3;
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id SearchTrie.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall SearchTrie.add(matchCandidate:)(NSString matchCandidate)
{
  uint64_t v1 = sub_1ACE761B8();
  sub_1ACE27470(v1, v2);
  swift_bridgeObjectRelease();
}

uint64_t NSString.containsMatch(in:)()
{
  sub_1ACE761B8();
  char v0 = sub_1ACE27E24();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_1ACE28A80(void *a1, uint64_t a2, void *a3)
{
  sub_1ACE761B8();
  id v5 = a3;
  id v6 = a1;
  LOBYTE(a1) = sub_1ACE27E24();

  swift_bridgeObjectRelease();
  return a1 & 1;
}

uint64_t StringProtocol.containsMatch(in:)(uint64_t a1, uint64_t a2)
{
  return SearchTrie.containsMatch<A>(for:)(v2, a2) & 1;
}

uint64_t type metadata accessor for SearchTrie.Node()
{
  return self;
}

uint64_t type metadata accessor for SearchTrie()
{
  return self;
}

uint64_t sub_1ACE28B70(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_delegate);
  swift_beginAccess();
  *uint64_t v4 = v2;
  v4[1] = v3;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t sub_1ACE28BDC()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1ACE28C2C(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_delegate);
  swift_beginAccess();
  *id v5 = a1;
  v5[1] = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1ACE28C8C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1ACE28CE8(uint64_t a1)
{
  uint64_t v2 = sub_1ACE75DC8();
  uint64_t v49 = *(void *)(v2 - 8);
  uint64_t v50 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v47 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1ACE75E48();
  uint64_t v46 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v45 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v5 = *(void *)(a1 + 16);
  id v6 = (void *)MEMORY[0x1E4FBC860];
  if (v5)
  {
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1ACC82F78(0, v5, 0);
    id v6 = (void *)aBlock[0];
    uint64_t result = sub_1ACE29ABC(a1);
    uint64_t v8 = result;
    uint64_t v10 = v9;
    char v12 = v11 & 1;
    while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(a1 + 56 + (((unint64_t)v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_26;
      }
      if (*(_DWORD *)(a1 + 36) != v10) {
        goto LABEL_27;
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8 * v8);
      aBlock[0] = v6;
      unint64_t v15 = v6[2];
      unint64_t v14 = v6[3];
      if (v15 >= v14 >> 1)
      {
        sub_1ACC82F78(v14 > 1, v15 + 1, 1);
        id v6 = (void *)aBlock[0];
      }
      void v6[2] = v15 + 1;
      v6[v15 + 4] = v13 & ~(v13 >> 63);
      uint64_t result = sub_1ACDC3B6C(v8, v10, v12 & 1, a1);
      uint64_t v8 = result;
      uint64_t v10 = v16;
      char v12 = v17 & 1;
      if (!--v5)
      {
        sub_1ACA6D674(result, v16, v17 & 1);
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_11:
    uint64_t v18 = v6[2];
    uint64_t v19 = MEMORY[0x1E4FBC860];
    if (v18)
    {
      uint64_t v20 = v6 + 4;
      uint64_t v21 = MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v25 = *v20++;
        uint64_t v24 = v25;
        if (v25) {
          BOOL v26 = v24 == 1000000000000;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          aBlock[0] = v21;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1ACC82F78(0, *(void *)(v21 + 16) + 1, 1);
            uint64_t v21 = aBlock[0];
          }
          unint64_t v23 = *(void *)(v21 + 16);
          unint64_t v22 = *(void *)(v21 + 24);
          if (v23 >= v22 >> 1)
          {
            sub_1ACC82F78(v22 > 1, v23 + 1, 1);
            uint64_t v21 = aBlock[0];
          }
          *(void *)(v21 + 16) = v23 + 1;
          *(void *)(v21 + 8 * v23 + 32) = v24;
        }
        --v18;
      }
      while (v18);
    }
    else
    {
      uint64_t v21 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_1ACDF7368(v21);
    uint64_t v29 = swift_release();
    uint64_t v30 = v44;
    MEMORY[0x1F4188790](v29);
    *(&v44 - 2) = v30;
    *(&v44 - 1) = v28;
    MEMORY[0x1F4188790](v31);
    *(&v44 - 2) = (uint64_t)sub_1ACE29B5C;
    *(&v44 - 1) = v32;
    char v34 = v33 + 4;
    os_unfair_lock_lock(v33 + 4);
    sub_1ACAC41AC(aBlock);
    os_unfair_lock_unlock(v34);
    uint64_t v35 = aBlock[0];
    swift_bridgeObjectRelease();
    uint64_t v36 = (uint64_t *)(v30 + OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_delegate);
    swift_beginAccess();
    uint64_t v38 = *v36;
    uint64_t v37 = v36[1];
    uint64_t v39 = (void *)swift_allocObject();
    v39[2] = v38;
    id v39[3] = v37;
    v39[4] = v35;
    aBlock[4] = sub_1ACE29BB8;
    void aBlock[5] = v39;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = &block_descriptor_91;
    uint64_t v40 = _Block_copy(aBlock);
    swift_unknownObjectRetain_n();
    uint64_t v41 = v45;
    sub_1ACE75E08();
    uint64_t v51 = v19;
    sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    unint64_t v42 = v47;
    uint64_t v43 = v50;
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v41, v42, v40);
    _Block_release(v40);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v42, v43);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v41, v48);
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACE29264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_currentlyAddingShows);
  *(void *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_currentlyAddingShows) = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t result = sub_1ACE29928(v5);
  *a3 = v4;
  return result;
}

uint64_t sub_1ACE292CC(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v5 = sub_1ACD0AA58(v4);
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t, uint64_t))(a2 + 8))(v5, ObjectType, a2);
    return swift_release();
  }
  return result;
}

id AddingPodcastStateDataSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id AddingPodcastStateDataSource.init()()
{
  uint64_t v14 = sub_1ACE76CE8();
  uint64_t v1 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v5 - 8);
  id v6 = &v0[OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_delegate];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  uint64_t v13 = OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_refreshQueue;
  unint64_t v12 = sub_1ACA51E1C();
  uint64_t v7 = v0;
  sub_1ACE75E08();
  uint64_t v16 = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v14);
  *(void *)&v0[v13] = sub_1ACE76D28();
  uint64_t v8 = OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 16) = 0;
  *(void *)&v7[v8] = v9;
  *(void *)&v7[OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_currentlyAddingShows] = MEMORY[0x1E4FBC870];

  uint64_t v10 = (objc_class *)type metadata accessor for AddingPodcastStateDataSource();
  v15.receiver = v7;
  v15.super_class = v10;
  return objc_msgSendSuper2(&v15, sel_init);
}

id AddingPodcastStateDataSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AddingPodcastStateDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double AddingPodcastStateDataSource.state(for:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_lock)
                          + 16);
  os_unfair_lock_lock(v3);
  sub_1ACE29C00((uint64_t)v7);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v8;
  double result = *(double *)v7;
  long long v6 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = v4;
  return result;
}

void AddingPodcastStateDataSource.state(for:)(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[3] = 0;
  a1[4] = 0;
  a1[2] = 3;
}

uint64_t (*sub_1ACE2982C())()
{
  return j_j__swift_endAccess;
}

double sub_1ACE29888@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_lock)
                          + 16);
  os_unfair_lock_lock(v3);
  sub_1ACE29DB8((uint64_t)v7);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v8;
  double result = *(double *)v7;
  long long v6 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = v4;
  return result;
}

void sub_1ACE29914(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[3] = 0;
  a1[4] = 0;
  a1[2] = 3;
}

uint64_t sub_1ACE29928(uint64_t result)
{
  uint64_t v2 = result;
  int64_t i = 0;
  uint64_t v4 = result + 56;
  uint64_t v5 = -1 << *(unsigned char *)(result + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(63 - v5) >> 6;
  if (v7) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v11 = i + 1;
  if (__OFADD__(i, 1))
  {
    __break(1u);
LABEL_29:
    __break(1u);
    return result;
  }
  if (v11 < v8)
  {
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    int64_t v13 = i + 1;
    if (v12) {
      goto LABEL_21;
    }
    int64_t v13 = i + 2;
    if (i + 2 >= v8) {
      goto LABEL_25;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v13);
    if (v12) {
      goto LABEL_21;
    }
    int64_t v13 = i + 3;
    if (i + 3 >= v8) {
      goto LABEL_25;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v13);
    if (v12)
    {
LABEL_21:
      unint64_t v7 = (v12 - 1) & v12;
      unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
      for (i = v13; ; unint64_t v10 = v9 | (i << 6))
      {
        uint64_t v15 = *(void *)(*(void *)(v2 + 48) + 8 * v10);
        if (sub_1ACCEA684(v15, *v1))
        {
          double result = sub_1ACC3F9CC(v15);
          if (!v7) {
            goto LABEL_8;
          }
        }
        else
        {
          double result = sub_1ACD30438(&v16, v15);
          if (!v7) {
            goto LABEL_8;
          }
        }
LABEL_7:
        unint64_t v9 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
      }
    }
    int64_t v14 = i + 4;
    if (i + 4 < v8)
    {
      unint64_t v12 = *(void *)(v4 + 8 * v14);
      if (v12)
      {
        int64_t v13 = i + 4;
        goto LABEL_21;
      }
      while (1)
      {
        int64_t v13 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_29;
        }
        if (v13 >= v8) {
          break;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v13);
        ++v14;
        if (v12) {
          goto LABEL_21;
        }
      }
    }
  }
LABEL_25:
  return sub_1ACA50A70();
}

uint64_t sub_1ACE29ABC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1ACE29B5C@<X0>(void *a1@<X8>)
{
  return sub_1ACE29264(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1ACE29B78()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACE29BB8()
{
  return sub_1ACE292CC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t type metadata accessor for AddingPodcastStateDataSource()
{
  return self;
}

BOOL sub_1ACE29BE8@<W0>(void *a1@<X8>)
{
  return sub_1ACE29D64(a1);
}

double sub_1ACE29C00@<D0>(uint64_t a1@<X8>)
{
  return sub_1ACA8E71C(*(void (**)(_OWORD *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_1ACE29C1C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = (_OWORD *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_delegate);
  swift_beginAccess();
  *a2 = *v3;
  return swift_unknownObjectRetain();
}

uint64_t method lookup function for AddingPodcastStateDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AddingPodcastStateDataSource);
}

uint64_t dispatch thunk of AddingPodcastStateDataSource.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of AddingPodcastStateDataSource.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AddingPodcastStateDataSource.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of AddingPodcastStateDataSource.updateAddingShows(storeCollectionIds:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

BOOL sub_1ACE29D64@<W0>(void *a1@<X8>)
{
  BOOL result = sub_1ACCEA684(*(void *)(v1 + 24), *(void *)(*(void *)(v1 + 16)+ OBJC_IVAR____TtC18PodcastsFoundation28AddingPodcastStateDataSource_currentlyAddingShows));
  uint64_t v4 = 3;
  *a1 = 0;
  a1[1] = 0;
  if (result) {
    uint64_t v4 = 1;
  }
  a1[3] = 0;
  a1[4] = 0;
  a1[2] = v4;
  return result;
}

double sub_1ACE29DB8@<D0>(uint64_t a1@<X8>)
{
  return sub_1ACE29C00(a1);
}

BOOL static AssetLifetime.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t AssetLifetime.rawValue.getter()
{
  return *v0;
}

PodcastsFoundation::AssetLifetime_optional __swiftcall AssetLifetime.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (PodcastsFoundation::AssetLifetime_optional)rawValue;
}

PodcastsFoundation::AssetLifetime_optional sub_1ACE29E00(Swift::Int *a1)
{
  return AssetLifetime.init(rawValue:)(*a1);
}

uint64_t sub_1ACE29E08()
{
  return sub_1ACE76528();
}

uint64_t sub_1ACE29E68()
{
  return sub_1ACE764E8();
}

unint64_t sub_1ACE29EBC()
{
  unint64_t result = qword_1E99F65A8;
  if (!qword_1E99F65A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F65A8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AssetLifetime(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE29FDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetLifetime()
{
  return &type metadata for AssetLifetime;
}

unint64_t sub_1ACE2A014()
{
  unint64_t result = qword_1E99F65B0;
  if (!qword_1E99F65B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F65B0);
  }
  return result;
}

uint64_t MetricsTargetID.rawValue.getter(uint64_t a1)
{
  return a1;
}

uint64_t MetricsTargetID.init(_:)()
{
  return sub_1ACE770B8();
}

uint64_t MetricsTargetID.adamID.getter(unint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1ACD1C588(a1, a2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t MetricsTargetID.init<A>(_:)(uint64_t a1, uint64_t a2)
{
  sub_1ACE764A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v5;
}

unint64_t MetricsTargetID.debugDescription.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1ACE2A26C()
{
  return MetricsTargetID.debugDescription.getter();
}

uint64_t MetricsTargetID.description.getter(uint64_t a1)
{
  return a1;
}

uint64_t MetricsTargetID.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_1ACE77858();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsTargetID.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE778D8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

unint64_t static MetricsTargetID.addFavoriteCategories.getter()
{
  return 0xD000000000000015;
}

unint64_t static MetricsTargetID.alreadyASubscriber.getter()
{
  return 0xD000000000000012;
}

uint64_t static MetricsTargetID.applePodcasts.getter()
{
  return 0x646F50656C707041;
}

uint64_t static MetricsTargetID.browse.getter()
{
  return 0x6573776F7242;
}

uint64_t static MetricsTargetID.cancel.getter()
{
  return 0x6C65636E6163;
}

uint64_t static MetricsTargetID.categories.getter()
{
  return 0x69726F6765746143;
}

uint64_t static MetricsTargetID.channels.getter()
{
  return 0x736C656E6E616843;
}

uint64_t static MetricsTargetID.clear.getter()
{
  return 0x7261656C43;
}

uint64_t static MetricsTargetID.close.getter()
{
  return 0x65736F6C63;
}

uint64_t static MetricsTargetID.continue.getter()
{
  return 0x65756E69746E6F63;
}

uint64_t static MetricsTargetID.done.getter()
{
  return 1701736260;
}

uint64_t static MetricsTargetID.downloaded.getter()
{
  return 0x64616F6C6E776F44;
}

uint64_t static MetricsTargetID.downloading.getter()
{
  return 0x64616F6C6E776F44;
}

uint64_t static MetricsTargetID.hideChapters.getter()
{
  return 0x7061684365646968;
}

uint64_t static MetricsTargetID.hideTranscript.getter()
{
  return 0x6E61725465646968;
}

uint64_t static MetricsTargetID.latestEpisodes.getter()
{
  return 0x704574736574614CLL;
}

uint64_t static MetricsTargetID.library.getter()
{
  return 0x7972617262694CLL;
}

uint64_t static MetricsTargetID.listen.getter()
{
  return 0x6E657473694CLL;
}

uint64_t static MetricsTargetID.manage.getter()
{
  return 0x6567616E614DLL;
}

unint64_t static MetricsTargetID.manageFavoriteCategories.getter()
{
  return 0xD000000000000018;
}

uint64_t static MetricsTargetID.notNow.getter()
{
  return 0x776F4E746F6ELL;
}

uint64_t static MetricsTargetID.recentlyUpdated.getter()
{
  return 0x796C746E65636552;
}

uint64_t static MetricsTargetID.rssEpisode.getter()
{
  return 0x6F73697045535352;
}

uint64_t static MetricsTargetID.saved.getter()
{
  return 0x6465766153;
}

unint64_t static MetricsTargetID.saveFavoriteCategories.getter()
{
  return 0xD000000000000016;
}

uint64_t static MetricsTargetID.search.getter()
{
  return 0x686372616553;
}

unint64_t static MetricsTargetID.searchTranscript.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsTargetID.seeAll.getter()
{
  return 0x6C6C41656553;
}

unint64_t static MetricsTargetID.seeAllMyChannels.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsTargetID.showChapters.getter()
{
  return 0x70616843776F6873;
}

uint64_t static MetricsTargetID.shows.getter()
{
  return 0x73776F6853;
}

uint64_t static MetricsTargetID.showTranscript.getter()
{
  return 0x6E617254776F6873;
}

unint64_t static MetricsTargetID.viewSubscriptionFAQs.getter()
{
  return 0xD000000000000014;
}

uint64_t static MetricsTargetID.viewTranscript.getter()
{
  return 0x6E61725477656976;
}

uint64_t static MetricsTargetID.yourLibrary.getter()
{
  return 0x7262694C72756F59;
}

unint64_t sub_1ACE2A7B0()
{
  unint64_t result = qword_1E99F65B8;
  if (!qword_1E99F65B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F65B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsTargetID()
{
  return &type metadata for MetricsTargetID;
}

uint64_t dispatch thunk of DownloadedArtifactEffectApplicator.apply(effect:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1ACE2A828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16)) {
    sub_1ACA657FC(a1, a2);
  }
  else {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1ACE2A860(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (2)
  {
    uint64_t v6 = a2 + v5++;
    unint64_t v7 = 0xE700000000000000;
    unint64_t v8 = 0x65746144627570;
    switch(*(unsigned char *)(v6 + 32))
    {
      case 1:
        unint64_t v8 = 0xD000000000000010;
        unint64_t v7 = 0x80000001ACEC40A0;
        break;
      case 2:
        unint64_t v8 = 0xD000000000000012;
        unint64_t v7 = 0x80000001ACEC40C0;
        break;
      case 3:
        unint64_t v8 = 0xD00000000000001BLL;
        unint64_t v7 = 0x80000001ACEC40E0;
        break;
      case 4:
        unint64_t v7 = 0x80000001ACEC4100;
        goto LABEL_15;
      case 5:
        unint64_t v8 = 0xD000000000000014;
        unint64_t v7 = 0x80000001ACEC4120;
        break;
      case 6:
        unint64_t v8 = 0xD000000000000014;
        unint64_t v7 = 0x80000001ACEC4140;
        break;
      case 7:
        unint64_t v8 = 0x6B72616D6B6F6F62;
        goto LABEL_13;
      case 8:
        unint64_t v7 = 0x80000001ACEC4170;
        goto LABEL_15;
      case 9:
        unint64_t v8 = 0x64616F6C6E776F64;
LABEL_13:
        unint64_t v7 = 0xEE00657461446465;
        break;
      case 0xA:
        unint64_t v7 = 0x80000001ACEC41A0;
LABEL_15:
        unint64_t v8 = 0xD000000000000017;
        break;
      case 0xB:
        unint64_t v7 = 0xE500000000000000;
        unint64_t v8 = 0x656C746974;
        break;
      case 0xC:
        unint64_t v8 = 0x796C746E65636572;
        unint64_t v7 = 0xEE00646579616C50;
        break;
      case 0xD:
        unint64_t v8 = 0x6F4E6E657473696CLL;
        unint64_t v7 = 0xE900000000000077;
        break;
      case 0xE:
        unint64_t v8 = 0x53794270756F7267;
        unint64_t v7 = 0xEC00000073776F68;
        break;
      case 0xF:
        unint64_t v8 = 0x7079746F746F7270;
        unint64_t v7 = 0xEF7478654E705565;
        break;
      case 0x10:
        unint64_t v8 = 0x706F546863746177;
        unint64_t v7 = 0xED00006C6576654CLL;
        break;
      default:
        break;
    }
    unint64_t v9 = 0xE700000000000000;
    uint64_t v10 = 0x65746144627570;
    switch(a1)
    {
      case 1:
        unint64_t v12 = "d";
        unint64_t v11 = 0xD000000000000010;
        goto LABEL_29;
      case 2:
        unint64_t v11 = 0xD000000000000012;
        unint64_t v12 = "pubDateAscending";
        goto LABEL_29;
      case 3:
        unint64_t v11 = 0xD00000000000001BLL;
        unint64_t v12 = "firstTimeAvailable";
        goto LABEL_29;
      case 4:
        unint64_t v9 = 0x80000001ACEC4100;
        goto LABEL_36;
      case 5:
        unint64_t v11 = 0xD000000000000014;
        unint64_t v12 = "serialNewestSeasonFirst";
        goto LABEL_29;
      case 6:
        unint64_t v11 = 0xD000000000000014;
        unint64_t v12 = "serialOldestToNewest";
LABEL_29:
        unint64_t v9 = (unint64_t)v12 | 0x8000000000000000;
        if (v8 != v11) {
          goto LABEL_50;
        }
        goto LABEL_49;
      case 7:
        uint64_t v13 = 0x6B72616D6B6F6F62;
        goto LABEL_34;
      case 8:
        unint64_t v9 = 0x80000001ACEC4170;
        goto LABEL_36;
      case 9:
        uint64_t v13 = 0x64616F6C6E776F64;
LABEL_34:
        uint64_t v14 = 0x657461446465;
        goto LABEL_41;
      case 10:
        unint64_t v9 = 0x80000001ACEC41A0;
LABEL_36:
        if (v8 != 0xD000000000000017) {
          goto LABEL_50;
        }
        goto LABEL_49;
      case 11:
        unint64_t v9 = 0xE500000000000000;
        if (v8 != 0x656C746974) {
          goto LABEL_50;
        }
        goto LABEL_49;
      case 12:
        uint64_t v13 = 0x796C746E65636572;
        uint64_t v14 = 0x646579616C50;
LABEL_41:
        unint64_t v9 = v14 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
        if (v8 != v13) {
          goto LABEL_50;
        }
        goto LABEL_49;
      case 13:
        unint64_t v9 = 0xE900000000000077;
        if (v8 != 0x6F4E6E657473696CLL) {
          goto LABEL_50;
        }
        goto LABEL_49;
      case 14:
        unint64_t v9 = 0xEC00000073776F68;
        if (v8 != 0x53794270756F7267) {
          goto LABEL_50;
        }
        goto LABEL_49;
      case 15:
        uint64_t v10 = 0x7079746F746F7270;
        unint64_t v9 = 0xEF7478654E705565;
        goto LABEL_48;
      case 16:
        unint64_t v9 = 0xED00006C6576654CLL;
        if (v8 != 0x706F546863746177) {
          goto LABEL_50;
        }
        goto LABEL_49;
      default:
LABEL_48:
        if (v8 != v10) {
          goto LABEL_50;
        }
LABEL_49:
        if (v7 == v9)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 1;
        }
LABEL_50:
        char v15 = sub_1ACE77848();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          if (v2 == v5)
          {
            swift_bridgeObjectRelease();
            return 0;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        return 1;
    }
  }
}

unint64_t sub_1ACE2ADA0(char a1)
{
  unint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64616F6C6E776F64;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x796C746E65636572;
      break;
    case 4:
      unint64_t result = 0x6C696176416C6C61;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0x6F4E6E657473696CLL;
      break;
    case 8:
      unint64_t result = 0x7079746F746F7270;
      break;
    case 9:
      unint64_t result = 0x704574736574616CLL;
      break;
    case 10:
      unint64_t result = 0x6B72616D6B6F6F62;
      break;
    case 11:
      unint64_t result = 0xD000000000000011;
      break;
    case 12:
      unint64_t result = 2003789939;
      break;
    case 13:
      unint64_t result = 0xD000000000000015;
      break;
    case 14:
      unint64_t result = 0x706F546863746177;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACE2AFA8()
{
  return 0x5574736163646F70;
}

uint64_t sub_1ACE2AFCC(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2FAA8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE2B008(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2FAA8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE2B044()
{
  uint64_t v1 = 0x7265746C6966;
  if (*v0 != 1) {
    uint64_t v1 = 0x796C6C6175736976;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x5574736163646F70;
  }
}

uint64_t sub_1ACE2B0B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE2FC4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE2B0D8(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2FA54();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE2B114(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2FA54();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE2B150(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2F8B0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE2B18C(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2F8B0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE2B1C8(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2F85C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE2B204(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2F85C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE2B240()
{
  return 0x5574736163646F70;
}

uint64_t sub_1ACE2B260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x5574736163646F70 && a2 == 0xEB00000000734952)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1ACE77848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ACE2B310(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2FBF8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE2B34C(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2FBF8();
  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1ACE2B388()
{
  return sub_1ACE2ADA0(*v0);
}

uint64_t sub_1ACE2B390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE2FDD8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ACE2B3B8(unsigned char *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_1ACE2B3C4(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2F70C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE2B400(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2F70C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE2B43C(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2FBA4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE2B478(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2FBA4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE2B4B4(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2FB50();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE2B4F0(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2FB50();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE2B52C(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2F904();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE2B568(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2F904();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE2B5A4()
{
  if (*v0) {
    return 0x656761506C6C7566;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_1ACE2B5EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE30468(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE2B614(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2F9AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE2B650(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2F9AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE2B68C(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2F958();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE2B6C8(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2F958();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE2B704(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2FAFC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE2B740(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2FAFC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE2B77C()
{
  if (*v0) {
    return 0x7265746C6966;
  }
  else {
    return 0x5574736163646F70;
  }
}

uint64_t sub_1ACE2B7BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE30570(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE2B7E4(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2F808();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE2B820(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2F808();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE2B85C()
{
  uint64_t result = 0x556E6F6974617473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x536E6F6974617473;
      break;
    case 2:
      uint64_t result = 0x656C746974;
      break;
    case 3:
      uint64_t result = 0x5574736163646F70;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACE2B8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE30674(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE2B920(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2FA00();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE2B95C(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2FA00();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE2B998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x5574736163646F70 && a2 == 0xEB00000000646975)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1ACE77848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ACE2BA48(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2F7B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE2BA84(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2F7B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE2BAC0(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2F760();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE2BAFC(uint64_t a1)
{
  unint64_t v2 = sub_1ACE2F760();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EpisodeListType.encode(to:)(void *a1)
{
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A00);
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  os_log_t v67 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A48);
  uint64_t v85 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  uint64_t v100 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7719E0);
  uint64_t v82 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  uint64_t v102 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A28);
  uint64_t v84 = *(void *)(v99 - 8);
  MEMORY[0x1F4188790](v99);
  uint64_t v98 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7719E8);
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v64 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A08);
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v70 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A20);
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v73 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A18);
  uint64_t v81 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  char v93 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A38);
  uint64_t v83 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  uint64_t v96 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A40);
  uint64_t v80 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v92 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7719F8);
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x1F4188790](v91);
  uint64_t v89 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A10);
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  uint64_t v76 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A30);
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  char v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7719F0);
  uint64_t v79 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A50);
  uint64_t v86 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7719D8);
  uint64_t v104 = *(void *)(v22 - 8);
  uint64_t v105 = v22;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE2F70C();
  uint64_t v108 = v24;
  sub_1ACE77C78();
  sub_1ACB3A630(v107, (uint64_t)&v111);
  uint64_t v25 = v111;
  switch(v119)
  {
    case 1:
      LOBYTE(v109) = 2;
      sub_1ACE2FB50();
      uint64_t v29 = v105;
      uint64_t v30 = v108;
      sub_1ACE776D8();
      uint64_t v31 = v88;
      sub_1ACE77748();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v15, v31);
      goto LABEL_20;
    case 2:
      LOBYTE(v109) = 4;
      sub_1ACE2FAA8();
      uint64_t v32 = v89;
      uint64_t v29 = v105;
      uint64_t v30 = v108;
      sub_1ACE776D8();
      uint64_t v33 = v91;
      sub_1ACE77748();
      char v34 = (uint64_t *)&v120;
      goto LABEL_19;
    case 3:
      uint64_t v35 = v113;
      LOBYTE(v109) = 5;
      sub_1ACE2FA54();
      uint64_t v36 = v92;
      uint64_t v37 = v105;
      uint64_t v38 = v108;
      sub_1ACE776D8();
      LOBYTE(v109) = 0;
      uint64_t v39 = v94;
      uint64_t v40 = v106;
      sub_1ACE77748();
      if (!v40)
      {
        uint64_t v109 = v35;
        char v121 = 1;
        type metadata accessor for MTEpisodeTypeFilter(0);
        sub_1ACE33C3C(&qword_1E99F6608, type metadata accessor for MTEpisodeTypeFilter);
        sub_1ACE77788();
        LOBYTE(v109) = 2;
        sub_1ACE776F8();
      }
      (*(void (**)(char *, uint64_t))(v80 + 8))(v36, v39);
      goto LABEL_17;
    case 4:
      uint64_t v107 = v113;
      uint64_t v41 = v116;
      uint64_t v102 = (char *)v115;
      uint64_t v103 = v114;
      uint64_t v42 = v118;
      LOBYTE(v109) = 6;
      sub_1ACE2FA00();
      uint64_t v43 = v96;
      uint64_t v44 = v105;
      uint64_t v45 = v108;
      sub_1ACE776D8();
      LOBYTE(v109) = 0;
      uint64_t v46 = v97;
      uint64_t v47 = v106;
      sub_1ACE77748();
      if (!v47)
      {
        uint64_t v106 = v41;
        uint64_t v101 = v42;
        LOBYTE(v109) = 1;
        sub_1ACE77748();
        LOBYTE(v109) = 2;
        sub_1ACE776E8();
        LOBYTE(v109) = 3;
        sub_1ACE77748();
        uint64_t v45 = v108;
      }
      (*(void (**)(char *, uint64_t))(v83 + 8))(v43, v46);
      return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v45, v44);
    case 5:
      LOBYTE(v109) = 7;
      sub_1ACE2F9AC();
      uint64_t v32 = v93;
      uint64_t v29 = v105;
      uint64_t v30 = v108;
      sub_1ACE776D8();
      LOBYTE(v109) = 0;
      uint64_t v33 = v95;
      uint64_t v48 = v106;
      sub_1ACE77758();
      if (!v48)
      {
        LOBYTE(v109) = 1;
        sub_1ACE77758();
      }
      char v34 = &v113;
      goto LABEL_19;
    case 6:
      LOBYTE(v109) = 11;
      sub_1ACE2F85C();
      uint64_t v32 = v98;
      uint64_t v29 = v105;
      uint64_t v30 = v108;
      sub_1ACE776D8();
      uint64_t v33 = v99;
      sub_1ACE77748();
      char v34 = &v116;
      goto LABEL_19;
    case 7:
      uint64_t v49 = v113;
      char v50 = v114;
      LOBYTE(v109) = 12;
      sub_1ACA63B70(v113, v114);
      sub_1ACE2F808();
      uint64_t v51 = v102;
      uint64_t v37 = v105;
      uint64_t v38 = v108;
      sub_1ACE776D8();
      LOBYTE(v109) = 0;
      uint64_t v52 = v103;
      uint64_t v53 = v106;
      sub_1ACE77748();
      if (v53)
      {
        sub_1ACA63830(v49, v50);
        (*(void (**)(char *, uint64_t))(v82 + 8))(v51, v52);
LABEL_17:
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v38, v37);
      }
      else
      {
        uint64_t v109 = v49;
        char v110 = v50;
        char v121 = 1;
        sub_1ACAB2F04();
        sub_1ACE77788();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v51, v52);
        (*(void (**)(char *, uint64_t))(v104 + 8))(v38, v37);
        uint64_t result = sub_1ACA63830(v49, v50);
      }
      break;
    case 8:
      LOBYTE(v109) = 13;
      sub_1ACE2F7B4();
      uint64_t v32 = v100;
      uint64_t v29 = v105;
      uint64_t v30 = v108;
      sub_1ACE776D8();
      uint64_t v33 = v101;
      sub_1ACE77748();
      char v34 = &v117;
LABEL_19:
      (*(void (**)(char *, uint64_t))(*(v34 - 32) + 8))(v32, v33);
LABEL_20:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v30, v29);
      break;
    case 9:
      uint64_t v54 = v115 | v114 | v113;
      if (v117 | v118 | v111 | v116 | v54 | v112)
      {
        uint64_t v55 = v117 | v118 | v116 | v54 | v112;
        if (v111 != 1 || v55)
        {
          uint64_t v57 = v105;
          uint64_t v58 = v108;
          if (v111 != 2 || v55)
          {
            if (v111 != 3 || v55)
            {
              if (v111 != 4 || v55)
              {
                LOBYTE(v109) = 14;
                sub_1ACE2F760();
                uint64_t v62 = v67;
                sub_1ACE776D8();
                (*(void (**)(char *, uint64_t))(v68 + 8))(v62, v69);
              }
              else
              {
                LOBYTE(v109) = 10;
                sub_1ACE2F8B0();
                uint64_t v61 = v64;
                sub_1ACE776D8();
                (*(void (**)(char *, uint64_t))(v65 + 8))(v61, v66);
              }
            }
            else
            {
              LOBYTE(v109) = 9;
              sub_1ACE2F904();
              uint64_t v60 = v70;
              sub_1ACE776D8();
              (*(void (**)(char *, uint64_t))(v71 + 8))(v60, v72);
            }
          }
          else
          {
            LOBYTE(v109) = 8;
            sub_1ACE2F958();
            uint64_t v59 = v73;
            sub_1ACE776D8();
            (*(void (**)(char *, uint64_t))(v74 + 8))(v59, v75);
          }
        }
        else
        {
          LOBYTE(v109) = 3;
          sub_1ACE2FAFC();
          uint64_t v56 = v76;
          uint64_t v57 = v105;
          uint64_t v58 = v108;
          sub_1ACE776D8();
          (*(void (**)(char *, uint64_t))(v77 + 8))(v56, v78);
        }
      }
      else
      {
        LOBYTE(v109) = 1;
        sub_1ACE2FBA4();
        uint64_t v57 = v105;
        uint64_t v58 = v108;
        sub_1ACE776D8();
        (*(void (**)(char *, uint64_t))(v79 + 8))(v18, v16);
      }
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v58, v57);
      break;
    default:
      LOBYTE(v109) = 0;
      sub_1ACE2FBF8();
      uint64_t v26 = v105;
      uint64_t v27 = v108;
      sub_1ACE776D8();
      uint64_t v109 = v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E050);
      sub_1ACE33BA8(&qword_1E99F6638, &qword_1E99F0E98);
      sub_1ACE77788();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v21, v19);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v27, v26);
      break;
  }
  return result;
}

uint64_t EpisodeListType.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1ACE30878(a1, (uint64_t)v5);
  if (!v2) {
    return sub_1ACB3A630((uint64_t)v5, a2);
  }
  return result;
}

uint64_t sub_1ACE2CEC4(uint64_t a1, uint64_t a2)
{
  sub_1ACB3A630(a1, (uint64_t)v4);
  sub_1ACB3A630(a2, (uint64_t)v5);
  return static EpisodeListType.== infix(_:_:)((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t sub_1ACE2CF10@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1ACE30878(a1, (uint64_t)v5);
  if (!v2) {
    return sub_1ACB3A630((uint64_t)v5, a2);
  }
  return result;
}

uint64_t sub_1ACE2CF58(void *a1)
{
  sub_1ACB3A630(v1, (uint64_t)v4);
  return EpisodeListType.encode(to:)(a1);
}

unint64_t EpisodeListType.description.getter()
{
  sub_1ACB3A630(v0, (uint64_t)&v8);
  unint64_t result = 0xD000000000000019;
  switch(v16)
  {
    case 1:
      sub_1ACE77268();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000013;
      goto LABEL_8;
    case 2:
      sub_1ACE77268();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0x6C696176416C6C61;
      goto LABEL_8;
    case 3:
      unint64_t v7 = 0;
      sub_1ACE77268();
      sub_1ACE762C8();
      type metadata accessor for MTEpisodeTypeFilter(0);
      sub_1ACE77458();
      sub_1ACE762C8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E80);
      sub_1ACE76228();
      goto LABEL_6;
    case 4:
    case 8:
      sub_1ACE77268();
      swift_bridgeObjectRelease();
      unint64_t v7 = 0xD000000000000014;
      goto LABEL_11;
    case 5:
      sub_1ACE77268();
      swift_bridgeObjectRelease();
      unint64_t v7 = 0xD000000000000010;
LABEL_6:
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    case 6:
      sub_1ACE77268();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000012;
LABEL_8:
      unint64_t v7 = v2;
LABEL_11:
      sub_1ACE762C8();
LABEL_12:
      sub_1ACE762C8();
      goto LABEL_13;
    case 7:
      uint64_t v3 = v10;
      char v4 = v11;
      unint64_t v7 = 0x28776F6873;
      sub_1ACA63B70(v10, v11);
      sub_1ACE762C8();
      sub_1ACE762C8();
      EpisodeUserFilter.title.getter(v3, v4);
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      sub_1ACE762C8();
      sub_1ACA63830(v3, v4);
LABEL_13:
      unint64_t result = v7;
      break;
    case 9:
      uint64_t v5 = v12 | v11 | v10;
      if (v14 | v15 | v8 | v13 | v5 | v9)
      {
        uint64_t v6 = v14 | v15 | v13 | v5 | v9;
        if (v8 != 1 || v6)
        {
          if (v8 != 2 || v6)
          {
            if (v8 != 3 || v6)
            {
              if (v8 == 4 && v6 == 0) {
                unint64_t result = 0x6B72616D6B6F6F62;
              }
              else {
                unint64_t result = 0x706F546863746177;
              }
            }
            else
            {
              unint64_t result = 0x704574736574616CLL;
            }
          }
          else
          {
            unint64_t result = 0x7079746F746F7270;
          }
        }
        else
        {
          unint64_t result = 0x796C746E65636572;
        }
      }
      else
      {
        unint64_t result = 0x64616F6C6E776F64;
      }
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACE2D468()
{
  sub_1ACB3A630(v0, (uint64_t)v2);
  return EpisodeListType.description.getter();
}

uint64_t EpisodeListType.libraryShowUUID.getter()
{
  sub_1ACB3A630(v0, (uint64_t)v3);
  uint64_t v1 = 0;
  if (v4 <= 8u)
  {
    if (((1 << v4) & 0x1CE) != 0)
    {
      uint64_t v1 = v3[0];
    }
    else
    {
      if (v4 != 4) {
        return v1;
      }
      uint64_t v1 = v3[6];
    }
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t EpisodeListType.stationUUID.getter()
{
  sub_1ACB3A630(v0, (uint64_t)&v3);
  if (v4 != 4) {
    return 0;
  }
  uint64_t v1 = v3;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EpisodeListType.wantsListenNowReason.getter()
{
  sub_1ACB3A630(v0, (uint64_t)v5);
  if (v8 == 5) {
    return LOBYTE(v5[0]);
  }
  if (v8 == 9)
  {
    int8x16_t v1 = vorrq_s8(v6, v7);
    uint64_t v2 = *(void *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) | v5[3] | v5[2] | v5[1];
    if (v5[0] == 2 && v2 == 0) {
      return 1;
    }
  }
  return 0;
}

void *EpisodeListType.importantKeys.getter()
{
  uint64_t v16 = MEMORY[0x1E4FBC860];
  sub_1ACB3A630(v0, (uint64_t)&v17);
  if (v25 != 9
    || (uint64_t v1 = v21 | v20 | v19, v23 | v24 | v17 | v22 | v1 | v18)
    && ((uint64_t v2 = v23 | v24 | v22 | v1 | v18, v17 != 1) || v2)
    && (v17 != 3 || v2))
  {
    sub_1ACA6FB30(MEMORY[0x1E4FBC860]);
    return (void *)v16;
  }
  else
  {
    uint64_t v3 = sub_1ACE761B8();
    uint64_t v5 = v4;
    swift_bridgeObjectRetain();
    int8x16_t v6 = sub_1ACA41EA0(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v7 = v6[2];
    unint64_t v8 = v6[3];
    unint64_t v9 = v7 + 1;
    if (v7 >= v8 >> 1)
    {
      unint64_t v15 = v7 + 1;
      uint64_t v12 = v6;
      unint64_t v13 = v6[2];
      uint64_t v14 = sub_1ACA41EA0((void *)(v8 > 1), v7 + 1, 1, v12);
      unint64_t v7 = v13;
      unint64_t v9 = v15;
      int8x16_t v6 = v14;
    }
    void v6[2] = v9;
    uint64_t v10 = &v6[2 * v7];
    _OWORD v10[4] = v3;
    v10[5] = v5;
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t EpisodeListType.sortTypeFromUserDefaults.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = 0xEA00000000006465;
  uint64_t v3 = 0x64616F6C6E776F64;
  sub_1ACB3A630(v1, (uint64_t)&v26);
  uint64_t v4 = 2;
  switch(v34)
  {
    case 1:
      goto LABEL_16;
    case 2:
    case 3:
    case 4:
      return v4;
    case 5:
      return 13;
    case 6:
      goto LABEL_15;
    case 9:
      uint64_t v5 = v30 | v29 | v28;
      if (!(v32 | v33 | v26 | v31 | v5 | v27)) {
        goto LABEL_16;
      }
      uint64_t v6 = v32 | v33 | v31 | v5 | v27;
      if (v26 != 1 || v6)
      {
        if (v26 == 2 && !v6) {
          return 15;
        }
        if (v26 != 3 || v6)
        {
          uint64_t v4 = 16;
          if (v26 != 4 || v6) {
            return v4;
          }
LABEL_15:
          uint64_t v2 = 0xE900000000000073;
          uint64_t v3 = 0x6B72616D6B6F6F62;
        }
        else
        {
          uint64_t v2 = 0xEE007365646F7369;
          uint64_t v3 = 0x704574736574616CLL;
        }
      }
      else
      {
        uint64_t v2 = 0xEE00646579616C50;
        uint64_t v3 = 0x796C746E65636572;
      }
LABEL_16:
      id v7 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
      id v8 = objc_msgSend(v7, sel_episodeListSortTypeDictionary);

      if (v8)
      {
        uint64_t v9 = sub_1ACE75FF8();

        if (*(void *)(v9 + 16) && (uint64_t v10 = sub_1ACA657FC(v3, v2), (v11 & 1) != 0))
        {
          sub_1ACA33128(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v19);
        }
        else
        {
          long long v19 = 0u;
          long long v20 = 0u;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)&v20 + 1))
        {
          if (swift_dynamicCast())
          {
            uint64_t v12 = _s18PodcastsFoundation15EpisodeSortTypeO8rawValueACSgSS_tcfC_0();
            if (v12 != 17)
            {
              uint64_t v4 = v12;
              unint64_t v13 = EpisodeListType.allowedSortTypes.getter();
              char v14 = sub_1ACE2A860(v4, (uint64_t)v13);
              swift_bridgeObjectRelease();
              if ((v14 & 1) == 0) {
                return EpisodeListType.defaultSortType.getter();
              }
              return v4;
            }
          }
        }
        else
        {
          sub_1ACA65828((uint64_t)&v19);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_1ACB3A630(v1, (uint64_t)&v19);
      uint64_t v4 = 0;
      switch(v25)
      {
        case 1:
          return 9;
        case 2:
        case 3:
        case 4:
          goto LABEL_29;
        case 5:
          return 13;
        case 6:
          return 7;
        case 9:
          uint64_t v16 = v21 | *((void *)&v20 + 1) | v20;
          if (!(v23 | v24 | (unint64_t)v19 | v22 | v16 | *((void *)&v19 + 1))) {
            return 14;
          }
          uint64_t v17 = v23 | v24 | v22 | v16 | *((void *)&v19 + 1);
          if ((void)v19 == 1 && !v17) {
            return 12;
          }
          if ((void)v19 == 2 && !v17) {
            return 15;
          }
          if ((void)v19 == 3 && !v17)
          {
LABEL_29:
            uint64_t v4 = 2;
          }
          else
          {
            if (v17) {
              BOOL v18 = 0;
            }
            else {
              BOOL v18 = (void)v19 == 4;
            }
            if (v18) {
              uint64_t v4 = 7;
            }
            else {
              uint64_t v4 = 16;
            }
          }
          break;
        default:
          return v4;
      }
      return v4;
    default:
      return 0;
  }
}

void EpisodeListType.sortTypeFromUserDefaults.setter(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = 0xEA00000000006465;
  uint64_t v5 = 0x64616F6C6E776F64;
  sub_1ACB3A630(v2, (uint64_t)&v26);
  switch(v34)
  {
    case 1:
      goto LABEL_7;
    case 6:
      goto LABEL_2;
    case 9:
      uint64_t v6 = v30 | v29 | v28;
      if (!(v32 | v33 | v26 | v31 | v6 | v27)) {
        goto LABEL_7;
      }
      uint64_t v7 = v32 | v33 | v31 | v6 | v27;
      if (v26 != 1 || v7)
      {
        if (v26 == 2 && !v7) {
          return;
        }
        if (v26 != 3 || v7)
        {
          if (v26 != 4 || v7) {
            return;
          }
LABEL_2:
          uint64_t v4 = 0xE900000000000073;
          uint64_t v5 = 0x6B72616D6B6F6F62;
        }
        else
        {
          uint64_t v4 = 0xEE007365646F7369;
          uint64_t v5 = 0x704574736574616CLL;
        }
      }
      else
      {
        uint64_t v4 = 0xEE00646579616C50;
        uint64_t v5 = 0x796C746E65636572;
      }
LABEL_7:
      id v8 = self;
      id v9 = objc_msgSend(v8, sel__applePodcastsFoundationSharedUserDefaults);
      id v10 = objc_msgSend(v9, sel_episodeListSortTypeDictionary);

      if (v10)
      {
        uint64_t v11 = MEMORY[0x1E4FBB1A0];
        uint64_t v12 = sub_1ACE75FF8();

        uint64_t v25 = v11;
        *(void *)&long long v24 = EpisodeSortType.rawValue.getter(a1);
        *((void *)&v24 + 1) = v13;
        sub_1ACA3AA44(&v24, v23);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v22 = v12;
        sub_1ACD0D078(v23, v5, v4, isUniquelyReferenced_nonNull_native);
        unint64_t v15 = v12;
        swift_bridgeObjectRelease();
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4B0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
        *(void *)(inited + 32) = v5;
        *(void *)(inited + 40) = v4;
        unint64_t v17 = EpisodeSortType.rawValue.getter(a1);
        *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
        *(void *)(inited + 48) = v17;
        *(void *)(inited + 56) = v18;
        unint64_t v15 = sub_1ACA3625C(inited);
      }
      swift_bridgeObjectRelease();
      id v19 = objc_msgSend(v8, sel__applePodcastsFoundationSharedUserDefaults);
      if (v15)
      {
        swift_bridgeObjectRetain();
        long long v20 = (void *)sub_1ACE75FC8();
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v20 = 0;
      }
      objc_msgSend(v19, sel_setEpisodeListSortTypeDictionary_, v20, v22);

      id v21 = objc_msgSend(v8, sel__applePodcastsFoundationSharedUserDefaults);
      objc_msgSend(v21, sel_synchronize);
      swift_bridgeObjectRelease();

      return;
    default:
      return;
  }
}

uint64_t EpisodeListType.defaultSortType.getter()
{
  sub_1ACB3A630(v0, (uint64_t)&v5);
  uint64_t result = 7;
  switch(v13)
  {
    case 1u:
      uint64_t result = 9;
      break;
    case 3u:
    case 4u:
      goto LABEL_16;
    case 5u:
      uint64_t result = 13;
      break;
    case 6u:
      return result;
    case 7u:
    case 8u:
      uint64_t result = 0;
      break;
    case 9u:
      uint64_t v2 = v9 | v8 | v7;
      if (v11 | v12 | v5 | v10 | v2 | v6)
      {
        uint64_t v3 = v11 | v12 | v10 | v2 | v6;
        if (v5 != 1 || v3)
        {
          if (v5 != 2 || v3)
          {
            if (v5 != 3 || v3)
            {
              if (v3) {
                BOOL v4 = 0;
              }
              else {
                BOOL v4 = v5 == 4;
              }
              if (v4) {
                uint64_t result = 7;
              }
              else {
                uint64_t result = 16;
              }
            }
            else
            {
LABEL_16:
              uint64_t result = 2;
            }
          }
          else
          {
            uint64_t result = 15;
          }
        }
        else
        {
          uint64_t result = 12;
        }
      }
      else
      {
        uint64_t result = 14;
      }
      break;
    default:
      uint64_t result = v13;
      break;
  }
  return result;
}

void *EpisodeListType.allowedSortTypes.getter()
{
  sub_1ACB3A630(v0, (uint64_t)&v5);
  if (v13 < 9u) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = v9 | v8 | v7;
  if (!(v11 | v12 | v5 | v10 | v2 | v6)) {
    return &unk_1F03813B8;
  }
  uint64_t v3 = v11 | v12 | v10 | v2 | v6;
  uint64_t result = (void *)MEMORY[0x1E4FBC860];
  if ((unint64_t)(v5 - 1) > 1 || v3)
  {
    if (v5 != 3 || v3)
    {
      if (v3) {
        BOOL v4 = 0;
      }
      else {
        BOOL v4 = v5 == 4;
      }
      if (v4) {
        return &unk_1F0381390;
      }
    }
    else
    {
      return &unk_1F03813E0;
    }
  }
  return result;
}

void (*EpisodeListType.sortTypeFromUserDefaults.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = EpisodeListType.sortTypeFromUserDefaults.getter();
  return sub_1ACE2E0E0;
}

void sub_1ACE2E0E0(uint64_t a1)
{
}

uint64_t EpisodeListType.shouldMatchShowSorting.getter()
{
  sub_1ACB3A630(v0, (uint64_t)v2);
  return (v3 < 9uLL) & (0x1CEu >> v3);
}

void *EpisodeListType.availableSortTypes.getter()
{
  sub_1ACB3A630(v0, (uint64_t)&v5);
  if (v13 < 9u) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = v9 | v8 | v7;
  if (!(v11 | v12 | v5 | v10 | v2 | v6)) {
    return &unk_1F0381430;
  }
  uint64_t v3 = v11 | v12 | v10 | v2 | v6;
  uint64_t result = (void *)MEMORY[0x1E4FBC860];
  if ((unint64_t)(v5 - 1) > 1 || v3)
  {
    if (v5 != 3 || v3)
    {
      if (v3) {
        BOOL v4 = 0;
      }
      else {
        BOOL v4 = v5 == 4;
      }
      if (v4) {
        return &unk_1F0381408;
      }
    }
    else
    {
      return &unk_1F0381458;
    }
  }
  return result;
}

uint64_t EpisodeListType.pubDateLimit.getter()
{
  sub_1ACB3A630(v0, (uint64_t)v13);
  if (v16 != 9) {
    return 3;
  }
  int8x16_t v1 = vorrq_s8(v14, v15);
  uint64_t v2 = *(void *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) | v13[3] | v13[2] | v13[1];
  if (v13[0] != 3 || v2 != 0) {
    return 3;
  }
  id v5 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
  id v6 = objc_msgSend(v5, sel_dictionaryForKey_, @"kEpisodeListPubDateLimitKey");

  if (v6)
  {
    uint64_t v7 = sub_1ACE75FF8();

    if (*(void *)(v7 + 16) && (uint64_t v8 = sub_1ACA657FC(0x704574736574616CLL, 0xEE007365646F7369), (v9 & 1) != 0))
    {
      sub_1ACA33128(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v11);
    }
    else
    {
      long long v11 = 0u;
      long long v12 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v12 + 1))
    {
      if (swift_dynamicCast()) {
        return v10;
      }
    }
    else
    {
      sub_1ACA65828((uint64_t)&v11);
    }
  }
  return 2;
}

void EpisodeListType.pubDateLimit.setter(uint64_t a1)
{
  uint64_t v3 = 0xEA00000000006465;
  uint64_t v4 = 0x64616F6C6E776F64;
  sub_1ACB3A630(v1, (uint64_t)&v18);
  switch(v26)
  {
    case 1:
      goto LABEL_7;
    case 6:
      goto LABEL_2;
    case 9:
      uint64_t v5 = v22 | v21 | v20;
      if (!(v24 | v25 | v18 | v23 | v5 | v19)) {
        goto LABEL_7;
      }
      uint64_t v6 = v24 | v25 | v23 | v5 | v19;
      if (v18 != 1 || v6)
      {
        if (v18 == 2 && !v6) {
          return;
        }
        if (v18 != 3 || v6)
        {
          if (v18 != 4 || v6) {
            return;
          }
LABEL_2:
          uint64_t v3 = 0xE900000000000073;
          uint64_t v4 = 0x6B72616D6B6F6F62;
        }
        else
        {
          uint64_t v3 = 0xEE007365646F7369;
          uint64_t v4 = 0x704574736574616CLL;
        }
      }
      else
      {
        uint64_t v3 = 0xEE00646579616C50;
        uint64_t v4 = 0x796C746E65636572;
      }
LABEL_7:
      uint64_t v7 = self;
      id v8 = objc_msgSend(v7, sel__applePodcastsFoundationSharedUserDefaults);
      id v9 = objc_msgSend(v8, sel_dictionaryForKey_, @"kEpisodeListPubDateLimitKey");

      if (v9)
      {
        unint64_t v10 = sub_1ACE75FF8();
      }
      else
      {
        unint64_t v10 = sub_1ACA3625C(MEMORY[0x1E4FBC860]);
      }
      uint64_t v17 = MEMORY[0x1E4FBB550];
      *(void *)&long long v16 = a1;
      sub_1ACA3AA44(&v16, v15);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1ACD0D078(v15, v4, v3, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v12 = objc_msgSend(v7, sel__applePodcastsFoundationSharedUserDefaults, v10);
      unsigned __int8 v13 = (void *)sub_1ACE75FC8();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_setObject_forKey_, v13, @"kEpisodeListPubDateLimitKey");

      id v14 = objc_msgSend(v7, sel__applePodcastsFoundationSharedUserDefaults);
      objc_msgSend(v14, sel_synchronize);

      return;
    default:
      return;
  }
}

uint64_t EpisodeListType.defaultPubDateLimit.getter()
{
  sub_1ACB3A630(v0, (uint64_t)v5);
  if (v8 == 9
    && ((int8x16_t v1 = vorrq_s8(v6, v7),
         uint64_t v2 = *(void *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) | v5[3] | v5[2] | v5[1],
         v5[0] == 3)
      ? (BOOL v3 = v2 == 0)
      : (BOOL v3 = 0),
        v3))
  {
    return 2;
  }
  else
  {
    return 3;
  }
}

void (*EpisodeListType.pubDateLimit.modify(uint64_t *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = EpisodeListType.pubDateLimit.getter();
  return sub_1ACE2E768;
}

void sub_1ACE2E768(uint64_t *a1)
{
}

uint64_t EpisodeListType.hidePlayedEpisodes.getter()
{
  uint64_t v1 = v0;
  sub_1ACB3A630(v0, (uint64_t)&v29);
  uint64_t v2 = v29;
  uint64_t v3 = v32;
  uint64_t v4 = v33;
  uint64_t v5 = v34;
  uint64_t v6 = v35;
  uint64_t v7 = v36;
  int v8 = v37;
  if (v37 == 1 || v37 == 6) {
    goto LABEL_49;
  }
  if (v37 != 9) {
    return 0;
  }
  uint64_t v14 = v33 | v34 | v35;
  if (!(v31 | v30 | v29 | v32 | v14 | v36)
    || (uint64_t result = 0, (unint64_t)(v29 - 3) <= 1) && !(v31 | v30 | v32 | v14 | v36))
  {
LABEL_49:
    uint64_t v24 = v31;
    uint64_t v25 = v30;
    uint64_t v10 = 0xEA00000000006465;
    uint64_t v23 = 0x64616F6C6E776F64;
    sub_1ACB3A630(v1, (uint64_t)&v38);
    switch(v46)
    {
      case 1:
        goto LABEL_36;
      case 6:
        goto LABEL_34;
      case 9:
        uint64_t v15 = v42 | v41 | v40;
        if (!(v44 | v45 | v38 | v43 | v15 | v39)) {
          goto LABEL_36;
        }
        uint64_t v16 = v44 | v45 | v43 | v15 | v39;
        if (v38 != 1 || v16)
        {
          if (v38 == 2 && !v16) {
            goto LABEL_7;
          }
          if (v38 != 3 || v16)
          {
            if (v38 != 4 || v16) {
              goto LABEL_7;
            }
LABEL_34:
            uint64_t v10 = 0xE900000000000073;
            uint64_t v17 = 0x6B72616D6B6F6F62;
          }
          else
          {
            uint64_t v10 = 0xEE007365646F7369;
            uint64_t v17 = 0x704574736574616CLL;
          }
        }
        else
        {
          uint64_t v10 = 0xEE00646579616C50;
          uint64_t v17 = 0x796C746E65636572;
        }
        uint64_t v23 = v17;
LABEL_36:
        id v18 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
        id v19 = objc_msgSend(v18, sel_dictionaryForKey_, @"kEpisodeListHidePlayedEpisodesKey");

        if (v19)
        {
          uint64_t v20 = sub_1ACE75FF8();

          if (*(void *)(v20 + 16))
          {
            uint64_t v21 = sub_1ACA657FC(v23, v10);
            if (v22)
            {
              sub_1ACA33128(*(void *)(v20 + 56) + 32 * v21, (uint64_t)&v27);
            }
            else
            {
              long long v27 = 0u;
              long long v28 = 0u;
            }
          }
          else
          {
            long long v27 = 0u;
            long long v28 = 0u;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*((void *)&v28 + 1))
          {
            if (swift_dynamicCast()) {
              return v26;
            }
          }
          else
          {
            sub_1ACA65828((uint64_t)&v27);
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
LABEL_7:
        uint64_t result = v2 == 3 && (v24 | v25 | v3 | v4 | v5 | v6 | v7) == 0 && v8 == 9;
        break;
      default:
        goto LABEL_7;
    }
  }
  return result;
}

void EpisodeListType.hidePlayedEpisodes.setter(char a1)
{
  uint64_t v3 = 0xEA00000000006465;
  uint64_t v4 = 0x64616F6C6E776F64;
  sub_1ACB3A630(v1, (uint64_t)&v18);
  switch(v26)
  {
    case 1:
      goto LABEL_7;
    case 6:
      goto LABEL_2;
    case 9:
      uint64_t v5 = v22 | v21 | v20;
      if (!(v24 | v25 | v18 | v23 | v5 | v19)) {
        goto LABEL_7;
      }
      uint64_t v6 = v24 | v25 | v23 | v5 | v19;
      if (v18 != 1 || v6)
      {
        if (v18 == 2 && !v6) {
          return;
        }
        if (v18 != 3 || v6)
        {
          if (v18 != 4 || v6) {
            return;
          }
LABEL_2:
          uint64_t v3 = 0xE900000000000073;
          uint64_t v4 = 0x6B72616D6B6F6F62;
        }
        else
        {
          uint64_t v3 = 0xEE007365646F7369;
          uint64_t v4 = 0x704574736574616CLL;
        }
      }
      else
      {
        uint64_t v3 = 0xEE00646579616C50;
        uint64_t v4 = 0x796C746E65636572;
      }
LABEL_7:
      uint64_t v7 = self;
      id v8 = objc_msgSend(v7, sel__applePodcastsFoundationSharedUserDefaults);
      id v9 = objc_msgSend(v8, sel_dictionaryForKey_, @"kEpisodeListHidePlayedEpisodesKey");

      if (v9)
      {
        unint64_t v10 = sub_1ACE75FF8();
      }
      else
      {
        unint64_t v10 = sub_1ACA3625C(MEMORY[0x1E4FBC860]);
      }
      uint64_t v17 = MEMORY[0x1E4FBB390];
      LOBYTE(v16) = a1 & 1;
      sub_1ACA3AA44(&v16, v15);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1ACD0D078(v15, v4, v3, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v12 = objc_msgSend(v7, sel__applePodcastsFoundationSharedUserDefaults, v10);
      unsigned __int8 v13 = (void *)sub_1ACE75FC8();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_setObject_forKey_, v13, @"kEpisodeListHidePlayedEpisodesKey");

      id v14 = objc_msgSend(v7, sel__applePodcastsFoundationSharedUserDefaults);
      objc_msgSend(v14, sel_synchronize);

      return;
    default:
      return;
  }
}

BOOL EpisodeListType.allowsHidePlayedEpisodes.getter()
{
  sub_1ACB3A630(v0, (uint64_t)&v6);
  if (v14 == 1 || v14 == 6) {
    return 1;
  }
  if (v14 != 9) {
    return 0;
  }
  uint64_t v3 = v10 | v9 | v8;
  if (!(v12 | v13 | v6 | v11 | v3 | v7)) {
    return 1;
  }
  uint64_t v4 = v12 | v13 | v11 | v3 | v7;
  if (v6 == 3 && !v4) {
    return 1;
  }
  return v6 == 4 && v4 == 0;
}

BOOL _s18PodcastsFoundation15EpisodeListTypeO21allowsPubDateLimitingSbvg_0()
{
  sub_1ACB3A630(v0, (uint64_t)&v6);
  int8x16_t v1 = vorrq_s8(v7, v8);
  uint64_t v2 = *(void *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) | v9 | v10 | v11;
  return v6 == 3 && v2 == 0 && v12 == 9;
}

void (*EpisodeListType.hidePlayedEpisodes.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = EpisodeListType.hidePlayedEpisodes.getter() & 1;
  return sub_1ACE2EF58;
}

void sub_1ACE2EF58(uint64_t a1)
{
}

BOOL EpisodeListType.showsHidePlayedEpisodesControls.getter()
{
  sub_1ACB3A630(v0, (uint64_t)&v3);
  BOOL result = 0;
  if (v11 == 9)
  {
    uint64_t v1 = v7 | v6 | v5;
    if (!(v9 | v10 | v3 | v8 | v1 | v4) || (unint64_t)(v3 - 3) <= 1 && !(v9 | v10 | v8 | v1 | v4)) {
      return 1;
    }
  }
  return result;
}

BOOL EpisodeListType.supportsEpisodeOrderFreezing.getter()
{
  sub_1ACB3A630(v0, (uint64_t)v2);
  return v2[64] == 5;
}

uint64_t EpisodeListType.shelfImpressionMetricsID.getter()
{
  sub_1ACB3A630(v0, (uint64_t)&v4);
  if (v12 == 5) {
    return 0x7478654E7055;
  }
  if (v12 != 9) {
    return 0;
  }
  uint64_t v1 = v8 | v7 | v6;
  if (!(v10 | v11 | v4 | v9 | v1 | v5)) {
    return 0x64616F6C6E776F44;
  }
  uint64_t v2 = v10 | v11 | v9 | v1 | v5;
  if (v4 == 1 && !v2) {
    return 0x796C746E65636552;
  }
  if (v4 == 3 && !v2) {
    return 0x704574736574614CLL;
  }
  if (v4 == 4 && v2 == 0) {
    return 0x6465766153;
  }
  return 0;
}

uint64_t _s18PodcastsFoundation15EpisodeListTypeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1ACB3A630(a1, (uint64_t)&v40);
  uint64_t v3 = v40;
  switch(v48)
  {
    case 1:
      unint64_t v5 = v41;
      sub_1ACB3A630(a2, (uint64_t)&v35);
      if (v39 == 1) {
        goto LABEL_39;
      }
      goto LABEL_83;
    case 2:
      unint64_t v5 = v41;
      sub_1ACB3A630(a2, (uint64_t)&v35);
      if (v39 != 2) {
        goto LABEL_83;
      }
      goto LABEL_39;
    case 3:
      unint64_t v6 = v41;
      uint64_t v7 = v42;
      int v8 = v43;
      sub_1ACB3A630(a2, (uint64_t)&v35);
      if (v39 != 3) {
        goto LABEL_83;
      }
      uint64_t v9 = v36.i64[0];
      int v10 = v36.u8[8];
      if (v3 == v35.i64[0] && v6 == v35.i64[1])
      {
        if (v7 != v36.i64[0]) {
          goto LABEL_83;
        }
      }
      else
      {
        char v4 = 0;
        if ((sub_1ACE77848() & 1) == 0 || v7 != v9) {
          return v4 & 1;
        }
      }
      if (v8 == 2)
      {
        if (v10 == 2) {
          goto LABEL_82;
        }
      }
      else if (v10 != 2 && ((((v8 & 1) == 0) ^ v10) & 1) != 0)
      {
        goto LABEL_82;
      }
      goto LABEL_83;
    case 4:
      unint64_t v12 = v41;
      uint64_t v13 = v42;
      unint64_t v14 = v43;
      unint64_t v15 = v44;
      unint64_t v17 = v45;
      uint64_t v16 = v46;
      uint64_t v18 = v47;
      sub_1ACB3A630(a2, (uint64_t)&v35);
      if (v39 != 4) {
        goto LABEL_83;
      }
      int8x16_t v19 = v36;
      int8x16_t v20 = v37;
      uint64_t v33 = v38.i64[1];
      uint64_t v34 = v38.i64[0];
      if (__PAIR128__(v12, v3) != *(_OWORD *)&v35)
      {
        char v4 = 0;
        if ((sub_1ACE77848() & 1) == 0) {
          return v4 & 1;
        }
      }
      if (__PAIR128__(v14, v13) != *(_OWORD *)&v19)
      {
        char v4 = 0;
        if ((sub_1ACE77848() & 1) == 0) {
          return v4 & 1;
        }
      }
      if (v17)
      {
        if (!v20.i64[1]) {
          goto LABEL_83;
        }
        if (__PAIR128__(v17, v15) != *(_OWORD *)&v20)
        {
          char v4 = 0;
          if ((sub_1ACE77848() & 1) == 0) {
            return v4 & 1;
          }
        }
      }
      else if (v20.i64[1])
      {
        goto LABEL_83;
      }
      if (v16 != v34 || v18 != v33)
      {
LABEL_43:
        char v4 = sub_1ACE77848();
        return v4 & 1;
      }
      goto LABEL_82;
    case 5:
      sub_1ACB3A630(a2, (uint64_t)&v35);
      if (v39 != 5 || ((v3 ^ v35.u8[0]) & 1) != 0) {
        goto LABEL_83;
      }
      char v4 = ((v3 & 0x100) == 0) ^ v35.i8[1];
      return v4 & 1;
    case 6:
      unint64_t v5 = v41;
      sub_1ACB3A630(a2, (uint64_t)&v35);
      if (v39 != 6) {
        goto LABEL_83;
      }
      goto LABEL_39;
    case 7:
      unint64_t v22 = v41;
      uint64_t v21 = v42;
      char v23 = v43;
      sub_1ACB3A630(a2, (uint64_t)&v35);
      if (v39 != 7) {
        goto LABEL_83;
      }
      uint64_t v24 = v36.i64[0];
      char v25 = v36.i8[8];
      BOOL v26 = v3 == v35.i64[0] && v22 == v35.i64[1];
      if (v26 || (char v4 = 0, (sub_1ACE77848() & 1) != 0))
      {
        sub_1ACA63B70(v21, v23);
        sub_1ACA63B70(v24, v25);
        char v4 = static EpisodeUserFilter.== infix(_:_:)(v21, v23, v24, v25);
        sub_1ACA63830(v24, v25);
        sub_1ACA63830(v21, v23);
      }
      return v4 & 1;
    case 8:
      unint64_t v5 = v41;
      sub_1ACB3A630(a2, (uint64_t)&v35);
      if (v39 != 8) {
        goto LABEL_83;
      }
LABEL_39:
      if (v3 != v35.i64[0] || v5 != v35.i64[1]) {
        goto LABEL_43;
      }
      goto LABEL_82;
    case 9:
      uint64_t v28 = v44 | v43 | v42;
      if (!(v46 | v47 | v40 | v45 | v28 | v41))
      {
        sub_1ACB3A630(a2, (uint64_t)&v35);
        if (v39 != 9) {
          goto LABEL_83;
        }
        int8x16_t v30 = vorrq_s8(vorrq_s8(v35, v37), vorrq_s8(v36, v38));
        if (vorr_s8(*(int8x8_t *)v30.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v30, v30, 8uLL))) {
          goto LABEL_83;
        }
        goto LABEL_82;
      }
      uint64_t v29 = v46 | v47 | v45 | v28 | v41;
      if (v40 != 1 || v29)
      {
        if (v40 != 2 || v29)
        {
          if (v40 != 3 || v29)
          {
            if (v40 != 4 || v29)
            {
              sub_1ACB3A630(a2, (uint64_t)&v35);
              if (v39 != 9 || v35.i64[0] != 5) {
                goto LABEL_83;
              }
            }
            else
            {
              sub_1ACB3A630(a2, (uint64_t)&v35);
              if (v39 != 9 || v35.i64[0] != 4) {
                goto LABEL_83;
              }
            }
          }
          else
          {
            sub_1ACB3A630(a2, (uint64_t)&v35);
            if (v39 != 9 || v35.i64[0] != 3) {
              goto LABEL_83;
            }
          }
        }
        else
        {
          sub_1ACB3A630(a2, (uint64_t)&v35);
          if (v39 != 9 || v35.i64[0] != 2) {
            goto LABEL_83;
          }
        }
      }
      else
      {
        sub_1ACB3A630(a2, (uint64_t)&v35);
        if (v39 != 9 || v35.i64[0] != 1) {
          goto LABEL_83;
        }
      }
      int8x16_t v31 = vorrq_s8(v37, v38);
      if (!(*(void *)&vorr_s8(*(int8x8_t *)v31.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v31, v31, 8uLL)) | v36.i64[1] | v36.i64[0] | v35.i64[1]))
      {
LABEL_82:
        char v4 = 1;
        return v4 & 1;
      }
LABEL_83:
      char v4 = 0;
      return v4 & 1;
    default:
      sub_1ACB3A630(a2, (uint64_t)&v35);
      if (v39) {
        goto LABEL_83;
      }
      char v4 = sub_1ACA88134(v3, v35.i64[0]);
      return v4 & 1;
  }
}

unint64_t sub_1ACE2F70C()
{
  unint64_t result = qword_1EB770FE8;
  if (!qword_1EB770FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770FE8);
  }
  return result;
}

unint64_t sub_1ACE2F760()
{
  unint64_t result = qword_1E99F65C0;
  if (!qword_1E99F65C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F65C0);
  }
  return result;
}

unint64_t sub_1ACE2F7B4()
{
  unint64_t result = qword_1E99F65C8;
  if (!qword_1E99F65C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F65C8);
  }
  return result;
}

unint64_t sub_1ACE2F808()
{
  unint64_t result = qword_1E99F65D0;
  if (!qword_1E99F65D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F65D0);
  }
  return result;
}

unint64_t sub_1ACE2F85C()
{
  unint64_t result = qword_1E99F65D8;
  if (!qword_1E99F65D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F65D8);
  }
  return result;
}

unint64_t sub_1ACE2F8B0()
{
  unint64_t result = qword_1E99F65E0;
  if (!qword_1E99F65E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F65E0);
  }
  return result;
}

unint64_t sub_1ACE2F904()
{
  unint64_t result = qword_1E99F65E8;
  if (!qword_1E99F65E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F65E8);
  }
  return result;
}

unint64_t sub_1ACE2F958()
{
  unint64_t result = qword_1E99F65F0;
  if (!qword_1E99F65F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F65F0);
  }
  return result;
}

unint64_t sub_1ACE2F9AC()
{
  unint64_t result = qword_1EB771070;
  if (!qword_1EB771070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771070);
  }
  return result;
}

unint64_t sub_1ACE2FA00()
{
  unint64_t result = qword_1E99F65F8;
  if (!qword_1E99F65F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F65F8);
  }
  return result;
}

unint64_t sub_1ACE2FA54()
{
  unint64_t result = qword_1E99F6600;
  if (!qword_1E99F6600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6600);
  }
  return result;
}

unint64_t sub_1ACE2FAA8()
{
  unint64_t result = qword_1E99F6610;
  if (!qword_1E99F6610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6610);
  }
  return result;
}

unint64_t sub_1ACE2FAFC()
{
  unint64_t result = qword_1E99F6618;
  if (!qword_1E99F6618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6618);
  }
  return result;
}

unint64_t sub_1ACE2FB50()
{
  unint64_t result = qword_1E99F6620;
  if (!qword_1E99F6620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6620);
  }
  return result;
}

unint64_t sub_1ACE2FBA4()
{
  unint64_t result = qword_1E99F6628;
  if (!qword_1E99F6628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6628);
  }
  return result;
}

unint64_t sub_1ACE2FBF8()
{
  unint64_t result = qword_1E99F6630;
  if (!qword_1E99F6630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6630);
  }
  return result;
}

uint64_t sub_1ACE2FC4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x5574736163646F70 && a2 == 0xEB00000000646975;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265746C6966 && a2 == 0xE600000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x796C6C6175736976 && a2 == 0xEE00646579616C50)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1ACE2FDD8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x80000001ACED3FA0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xEA00000000006465 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ACED3FC0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x796C746E65636572 && a2 == 0xEE00646579616C50 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C696176416C6C61 && a2 == 0xEC000000656C6261 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001ACED3FE0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001ACED4000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F4E6E657473696CLL && a2 == 0xEF7478654E705577 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7079746F746F7270 && a2 == 0xEF7478654E705565 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x704574736574616CLL && a2 == 0xEE007365646F7369 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6B72616D6B6F6F62 && a2 == 0xE900000000000073 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001ACED4020 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 2003789939 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001ACED4040 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x706F546863746177 && a2 == 0xED00006C6576654CLL)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    char v5 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v5) {
      return 14;
    }
    else {
      return 15;
    }
  }
}

uint64_t sub_1ACE30468(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001ACED4060 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656761506C6C7566 && a2 == 0xEC0000007473694CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACE30570(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x5574736163646F70 && a2 == 0xEB00000000646975;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265746C6966 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACE30674(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x556E6F6974617473 && a2 == 0xEB00000000646975;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x536E6F6974617473 && a2 == 0xEF64697555776F68 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5574736163646F70 && a2 == 0xEB00000000646975)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1ACE30878@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v175 = a2;
  uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6690);
  uint64_t v162 = *(void *)(v164 - 8);
  MEMORY[0x1F4188790](v164);
  v180 = (char *)&v134 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6698);
  uint64_t v144 = *(void *)(v163 - 8);
  MEMORY[0x1F4188790](v163);
  v173 = (char *)&v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F66A0);
  uint64_t v145 = *(void *)(v165 - 8);
  MEMORY[0x1F4188790](v165);
  v179 = (char *)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F66A8);
  uint64_t v143 = *(void *)(v161 - 8);
  MEMORY[0x1F4188790](v161);
  v172 = (char *)&v134 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F66B0);
  uint64_t v159 = *(void *)(v160 - 8);
  MEMORY[0x1F4188790](v160);
  v171 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F66B8);
  uint64_t v156 = *(void *)(v157 - 8);
  MEMORY[0x1F4188790](v157);
  v170 = (char *)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F66C0);
  uint64_t v153 = *(void *)(v154 - 8);
  MEMORY[0x1F4188790](v154);
  v169 = (char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F66C8);
  uint64_t v141 = *(void *)(v158 - 8);
  MEMORY[0x1F4188790](v158);
  v178 = (char *)&v134 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F66D0);
  uint64_t v142 = *(void *)(v152 - 8);
  MEMORY[0x1F4188790](v152);
  v177 = (char *)&v134 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F66D8);
  uint64_t v138 = *(void *)(v155 - 8);
  MEMORY[0x1F4188790](v155);
  v174 = (char *)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F66E0);
  uint64_t v140 = *(void *)(v148 - 8);
  MEMORY[0x1F4188790](v148);
  int v168 = (char *)&v134 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F66E8);
  uint64_t v149 = *(void *)(v150 - 8);
  MEMORY[0x1F4188790](v150);
  uint64_t v166 = (char *)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F66F0);
  uint64_t v139 = *(void *)(v151 - 8);
  MEMORY[0x1F4188790](v151);
  uint64_t v167 = (char *)&v134 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F66F8);
  uint64_t v146 = *(void *)(v176 - 8);
  MEMORY[0x1F4188790](v176);
  unint64_t v17 = (char *)&v134 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6700);
  uint64_t v147 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  int8x16_t v20 = (char *)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6708);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v134 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  v181 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_1ACE2F70C();
  uint64_t v26 = v182;
  sub_1ACE77C48();
  uint64_t v182 = v26;
  if (v26) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v181);
  }
  id v135 = v17;
  uint64_t v136 = v20;
  uint64_t v27 = v176;
  uint64_t v134 = v18;
  uint64_t v28 = v177;
  uint64_t v29 = v178;
  int8x16_t v31 = v179;
  int8x16_t v30 = v180;
  uint64_t v137 = v22;
  uint64_t v32 = sub_1ACE776B8();
  uint64_t v33 = (char *)v32;
  if (*(void *)(v32 + 16) != 1)
  {
    uint64_t v46 = sub_1ACE77328();
    uint64_t v47 = swift_allocError();
    uint64_t v49 = v48;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0EC8);
    *uint64_t v49 = &type metadata for EpisodeListType;
    sub_1ACE775E8();
    sub_1ACE77308();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v46 - 8) + 104))(v49, *MEMORY[0x1E4FBBA70], v46);
    uint64_t v182 = v47;
    swift_willThrow();
    swift_bridgeObjectRelease();
    char v50 = *(void (**)(char *, uint64_t))(v137 + 8);
    uint64_t v51 = v24;
LABEL_37:
    v50(v51, v21);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v181);
  }
  switch(*(unsigned char *)(v32 + 32))
  {
    case 1:
      LOBYTE(v183) = 1;
      sub_1ACE2FBA4();
      uint64_t v52 = v135;
      uint64_t v53 = v182;
      sub_1ACE775D8();
      uint64_t v182 = v53;
      if (v53) {
        goto LABEL_35;
      }
      (*(void (**)(char *, uint64_t))(v146 + 8))(v52, v27);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v137 + 8))(v24, v21);
      unint64_t v45 = 0;
      int8x16_t v38 = 0;
      char v39 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      v180 = 0;
      uint64_t v43 = 0;
      char v44 = 9;
      goto LABEL_52;
    case 2:
      LOBYTE(v183) = 2;
      sub_1ACE2FB50();
      uint64_t v54 = v167;
      uint64_t v55 = v182;
      sub_1ACE775D8();
      uint64_t v182 = v55;
      if (v55) {
        goto LABEL_35;
      }
      uint64_t v56 = v151;
      uint64_t v57 = sub_1ACE77658();
      uint64_t v58 = v137;
      uint64_t v182 = 0;
      unint64_t v45 = v57;
      int8x16_t v38 = v101;
      (*(void (**)(char *, uint64_t))(v139 + 8))(v54, v56);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v24, v21);
      char v39 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      v180 = 0;
      uint64_t v43 = 0;
      char v44 = 1;
      goto LABEL_52;
    case 3:
      LOBYTE(v183) = 3;
      sub_1ACE2FAFC();
      uint64_t v59 = v166;
      uint64_t v60 = v182;
      sub_1ACE775D8();
      uint64_t v182 = v60;
      if (v60) {
        goto LABEL_35;
      }
      (*(void (**)(char *, uint64_t))(v149 + 8))(v59, v150);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v137 + 8))(v24, v21);
      int8x16_t v38 = 0;
      char v39 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      v180 = 0;
      uint64_t v43 = 0;
      char v44 = 9;
      unint64_t v45 = 1;
      goto LABEL_52;
    case 4:
      LOBYTE(v183) = 4;
      sub_1ACE2FAA8();
      uint64_t v61 = v168;
      uint64_t v62 = v182;
      sub_1ACE775D8();
      uint64_t v182 = v62;
      if (v62) {
        goto LABEL_35;
      }
      uint64_t v63 = v148;
      uint64_t v64 = sub_1ACE77658();
      uint64_t v65 = v137;
      uint64_t v182 = 0;
      unint64_t v45 = v64;
      int8x16_t v38 = v102;
      (*(void (**)(char *, uint64_t))(v140 + 8))(v61, v63);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v24, v21);
      char v39 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      v180 = 0;
      uint64_t v43 = 0;
      char v44 = 2;
      goto LABEL_52;
    case 5:
      LOBYTE(v183) = 5;
      sub_1ACE2FA54();
      uint64_t v66 = v182;
      sub_1ACE775D8();
      uint64_t v182 = v66;
      if (v66) {
        goto LABEL_35;
      }
      LOBYTE(v183) = 0;
      uint64_t v67 = v155;
      uint64_t v68 = sub_1ACE77658();
      uint64_t v69 = v137;
      uint64_t v182 = 0;
      uint64_t v103 = (char *)v68;
      uint64_t v105 = v104;
      type metadata accessor for MTEpisodeTypeFilter(0);
      char v185 = 1;
      sub_1ACE33C3C(&qword_1E99F6710, type metadata accessor for MTEpisodeTypeFilter);
      uint64_t v106 = v174;
      uint64_t v107 = v182;
      sub_1ACE77698();
      uint64_t v182 = v107;
      if (v107)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v138 + 8))(v106, v67);
        goto LABEL_45;
      }
      v178 = v103;
      uint64_t v121 = v67;
      uint64_t v122 = (char *)v183;
      char v185 = 2;
      unsigned __int8 v123 = sub_1ACE77608();
      uint64_t v182 = 0;
      unsigned __int8 v128 = v123;
      (*(void (**)(char *, uint64_t))(v138 + 8))(v106, v121);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v24, v21);
      int8x16_t v38 = v105;
      char v39 = v122;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      v180 = 0;
      uint64_t v43 = 0;
      uint64_t v40 = v128;
      char v44 = 3;
      uint64_t v132 = (uint64_t)v181;
      uint64_t v133 = v175;
      unint64_t v45 = (unint64_t)v178;
      goto LABEL_53;
    case 6:
      LOBYTE(v183) = 6;
      sub_1ACE2FA00();
      uint64_t v70 = v28;
      uint64_t v71 = v182;
      sub_1ACE775D8();
      uint64_t v182 = v71;
      if (v71) {
        goto LABEL_35;
      }
      LOBYTE(v183) = 0;
      uint64_t v72 = v152;
      uint64_t v73 = sub_1ACE77658();
      uint64_t v74 = v137;
      uint64_t v182 = 0;
      uint64_t v109 = v108;
      unint64_t v45 = v73;
      LOBYTE(v183) = 1;
      char v110 = v70;
      uint64_t v111 = sub_1ACE77658();
      uint64_t v182 = 0;
      uint64_t v112 = v142;
      uint64_t v176 = v124;
      v174 = (char *)v111;
      v178 = v109;
      v179 = v24;
      LOBYTE(v183) = 2;
      uint64_t v125 = sub_1ACE775F8();
      uint64_t v182 = 0;
      uint64_t v129 = v125;
      uint64_t v42 = v130;
      v173 = v33;
      LOBYTE(v183) = 3;
      v180 = (char *)sub_1ACE77658();
      uint64_t v182 = 0;
      uint64_t v43 = v131;
      (*(void (**)(char *, uint64_t))(v112 + 8))(v110, v72);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v179, v21);
      char v44 = 4;
      uint64_t v132 = (uint64_t)v181;
      char v39 = v174;
      uint64_t v133 = v175;
      int8x16_t v38 = v178;
      uint64_t v41 = v129;
      uint64_t v40 = v176;
      goto LABEL_53;
    case 7:
      LOBYTE(v183) = 7;
      sub_1ACE2F9AC();
      uint64_t v75 = v182;
      sub_1ACE775D8();
      uint64_t v182 = v75;
      if (v75) {
        goto LABEL_35;
      }
      uint64_t v76 = v21;
      LOBYTE(v183) = 0;
      uint64_t v77 = v158;
      char v78 = sub_1ACE77668();
      uint64_t v182 = 0;
      char v113 = v78;
      LOBYTE(v183) = 1;
      int v114 = sub_1ACE77668();
      uint64_t v182 = 0;
      v126 = *(void (**)(char *, uint64_t))(v141 + 8);
      LODWORD(v179) = v114;
      v126(v29, v77);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v137 + 8))(v24, v76);
      int8x16_t v38 = 0;
      char v39 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      v180 = 0;
      uint64_t v43 = 0;
      if (v179) {
        uint64_t v127 = 256;
      }
      else {
        uint64_t v127 = 0;
      }
      unint64_t v45 = v127 & 0xFFFFFFFFFFFFFFFELL | v113 & 1;
      char v44 = 5;
      goto LABEL_52;
    case 8:
      LOBYTE(v183) = 8;
      sub_1ACE2F958();
      uint64_t v79 = v169;
      uint64_t v80 = v182;
      sub_1ACE775D8();
      uint64_t v182 = v80;
      if (v80) {
        goto LABEL_35;
      }
      (*(void (**)(char *, uint64_t))(v153 + 8))(v79, v154);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v137 + 8))(v24, v21);
      int8x16_t v38 = 0;
      char v39 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      v180 = 0;
      uint64_t v43 = 0;
      char v44 = 9;
      unint64_t v45 = 2;
      goto LABEL_52;
    case 9:
      LOBYTE(v183) = 9;
      sub_1ACE2F904();
      uint64_t v81 = v170;
      uint64_t v82 = v182;
      sub_1ACE775D8();
      uint64_t v182 = v82;
      if (v82) {
        goto LABEL_35;
      }
      (*(void (**)(char *, uint64_t))(v156 + 8))(v81, v157);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v137 + 8))(v24, v21);
      int8x16_t v38 = 0;
      char v39 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      v180 = 0;
      uint64_t v43 = 0;
      char v44 = 9;
      unint64_t v45 = 3;
      goto LABEL_52;
    case 0xA:
      LOBYTE(v183) = 10;
      sub_1ACE2F8B0();
      uint64_t v83 = v171;
      uint64_t v84 = v182;
      sub_1ACE775D8();
      uint64_t v182 = v84;
      if (v84) {
        goto LABEL_35;
      }
      (*(void (**)(char *, uint64_t))(v159 + 8))(v83, v160);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v137 + 8))(v24, v21);
      int8x16_t v38 = 0;
      char v39 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      v180 = 0;
      uint64_t v43 = 0;
      char v44 = 9;
      unint64_t v45 = 4;
      goto LABEL_52;
    case 0xB:
      LOBYTE(v183) = 11;
      sub_1ACE2F85C();
      uint64_t v85 = v172;
      uint64_t v86 = v182;
      sub_1ACE775D8();
      uint64_t v182 = v86;
      if (v86) {
        goto LABEL_35;
      }
      uint64_t v87 = v161;
      uint64_t v88 = sub_1ACE77658();
      uint64_t v89 = v137;
      uint64_t v182 = 0;
      unint64_t v45 = v88;
      int8x16_t v38 = v115;
      (*(void (**)(char *, uint64_t))(v143 + 8))(v85, v87);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v24, v21);
      char v39 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      v180 = 0;
      uint64_t v43 = 0;
      char v44 = 6;
      goto LABEL_52;
    case 0xC:
      LOBYTE(v183) = 12;
      sub_1ACE2F808();
      uint64_t v90 = v31;
      uint64_t v91 = v182;
      sub_1ACE775D8();
      uint64_t v182 = v91;
      if (v91) {
        goto LABEL_35;
      }
      LOBYTE(v183) = 0;
      uint64_t v92 = v165;
      uint64_t v93 = sub_1ACE77658();
      uint64_t v69 = v137;
      uint64_t v182 = 0;
      uint64_t v117 = v116;
      v178 = (char *)v93;
      char v185 = 1;
      sub_1ACAB2CF4();
      uint64_t v118 = v182;
      sub_1ACE77698();
      uint64_t v119 = v145;
      uint64_t v182 = v118;
      if (!v118)
      {
        (*(void (**)(char *, uint64_t))(v145 + 8))(v90, v92);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v69 + 8))(v24, v21);
        int8x16_t v38 = v117;
        uint64_t v41 = 0;
        uint64_t v42 = 0;
        v180 = 0;
        uint64_t v43 = 0;
        char v39 = (char *)v183;
        unint64_t v45 = (unint64_t)v178;
        uint64_t v40 = v184;
        char v44 = 7;
        goto LABEL_52;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v119 + 8))(v90, v92);
LABEL_45:
      swift_bridgeObjectRelease();
      goto LABEL_36;
    case 0xD:
      LOBYTE(v183) = 13;
      sub_1ACE2F7B4();
      uint64_t v94 = v173;
      uint64_t v95 = v182;
      sub_1ACE775D8();
      uint64_t v182 = v95;
      if (v95) {
        goto LABEL_35;
      }
      uint64_t v96 = v163;
      uint64_t v97 = sub_1ACE77658();
      uint64_t v98 = v137;
      uint64_t v182 = 0;
      unint64_t v45 = v97;
      int8x16_t v38 = v120;
      (*(void (**)(char *, uint64_t))(v144 + 8))(v94, v96);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v24, v21);
      char v39 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      v180 = 0;
      uint64_t v43 = 0;
      char v44 = 8;
      goto LABEL_52;
    case 0xE:
      LOBYTE(v183) = 14;
      sub_1ACE2F760();
      uint64_t v99 = v182;
      sub_1ACE775D8();
      uint64_t v182 = v99;
      if (v99) {
        goto LABEL_35;
      }
      (*(void (**)(char *, uint64_t))(v162 + 8))(v30, v164);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v137 + 8))(v24, v21);
      int8x16_t v38 = 0;
      char v39 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      v180 = 0;
      uint64_t v43 = 0;
      char v44 = 9;
      unint64_t v45 = 5;
      goto LABEL_52;
    default:
      LOBYTE(v183) = 0;
      sub_1ACE2FBF8();
      uint64_t v34 = v136;
      uint64_t v35 = v182;
      sub_1ACE775D8();
      uint64_t v182 = v35;
      if (v35)
      {
LABEL_35:
        swift_bridgeObjectRelease();
        uint64_t v69 = v137;
LABEL_36:
        char v50 = *(void (**)(char *, uint64_t))(v69 + 8);
        uint64_t v51 = v24;
        goto LABEL_37;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E050);
      sub_1ACE33BA8(&qword_1E99F6718, &qword_1E99F0ED0);
      uint64_t v36 = v134;
      uint64_t v37 = v182;
      sub_1ACE77698();
      (*(void (**)(char *, uint64_t))(v147 + 8))(v34, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v137 + 8))(v24, v21);
      uint64_t v182 = v37;
      if (v37) {
        return __swift_destroy_boxed_opaque_existential_0((uint64_t)v181);
      }
      int8x16_t v38 = 0;
      char v39 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      v180 = 0;
      uint64_t v43 = 0;
      char v44 = 0;
      unint64_t v45 = v183;
LABEL_52:
      uint64_t v132 = (uint64_t)v181;
      uint64_t v133 = v175;
LABEL_53:
      uint64_t result = __swift_destroy_boxed_opaque_existential_0(v132);
      *(void *)uint64_t v133 = v45;
      *(void *)(v133 + 8) = v38;
      *(void *)(v133 + 16) = v39;
      *(void *)(v133 + 24) = v40;
      *(void *)(v133 + 32) = v41;
      *(void *)(v133 + 40) = v42;
      *(void *)(v133 + 48) = v180;
      *(void *)(v133 + 56) = v43;
      *(unsigned char *)(v133 + 64) = v44;
      break;
  }
  return result;
}

uint64_t sub_1ACE3229C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1ACB3A630(a1, (uint64_t)v4);
  uint64_t result = EpisodeListType.sortTypeFromUserDefaults.getter();
  *a2 = result;
  return result;
}

void sub_1ACE322D8(char *a1, uint64_t a2)
{
  char v2 = *a1;
  sub_1ACB3A630(a2, (uint64_t)v3);
  EpisodeListType.sortTypeFromUserDefaults.setter(v2);
}

uint64_t sub_1ACE3231C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1ACB3A630(a1, (uint64_t)v4);
  uint64_t result = EpisodeListType.pubDateLimit.getter();
  *a2 = result;
  return result;
}

void sub_1ACE32358(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  sub_1ACB3A630(a2, (uint64_t)v3);
  EpisodeListType.pubDateLimit.setter(v2);
}

uint64_t sub_1ACE3239C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1ACB3A630(a1, (uint64_t)v4);
  uint64_t result = EpisodeListType.hidePlayedEpisodes.getter();
  *a2 = result & 1;
  return result;
}

void sub_1ACE323DC(char *a1, uint64_t a2)
{
  char v2 = *a1;
  sub_1ACB3A630(a2, (uint64_t)v3);
  EpisodeListType.hidePlayedEpisodes.setter(v2);
}

void destroy for EpisodeListType(uint64_t a1)
{
}

uint64_t initializeWithCopy for EpisodeListType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1ACA63A78(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for EpisodeListType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1ACA63A78(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  char v20 = *(unsigned char *)(a1 + 64);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  sub_1ACA63738(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for EpisodeListType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  char v12 = *(unsigned char *)(a1 + 64);
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  long long v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 64) = v3;
  sub_1ACA63738(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeListType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF7 && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 247);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 9) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeListType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF6)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)uint64_t result = a2 - 247;
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 64) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1ACE326B8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 64) <= 8u) {
    return *(unsigned __int8 *)(a1 + 64);
  }
  else {
    return (*(_DWORD *)a1 + 9);
  }
}

uint64_t sub_1ACE326D0(uint64_t result, unsigned int a2)
{
  if (a2 >= 9)
  {
    *(void *)uint64_t result = a2 - 9;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(void *)(result + 56) = 0;
    LOBYTE(a2) = 9;
  }
  *(unsigned char *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeListType()
{
  return &type metadata for EpisodeListType;
}

uint64_t getEnumTagSinglePayload for EpisodeListType.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EpisodeListType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *uint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE32868);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeListType.CodingKeys()
{
  return &type metadata for EpisodeListType.CodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.CategoryPageFromYourShowsCodingKeys()
{
  return &type metadata for EpisodeListType.CategoryPageFromYourShowsCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.DownloadedCodingKeys()
{
  return &type metadata for EpisodeListType.DownloadedCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.DownloadedFromShowCodingKeys()
{
  return &type metadata for EpisodeListType.DownloadedFromShowCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.RecentlyPlayedCodingKeys()
{
  return &type metadata for EpisodeListType.RecentlyPlayedCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.AllAvailableCodingKeys()
{
  return &type metadata for EpisodeListType.AllAvailableCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for EpisodeListType.AllAvailableFilteredCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE329C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeListType.AllAvailableFilteredCodingKeys()
{
  return &type metadata for EpisodeListType.AllAvailableFilteredCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for EpisodeListType.StationShowEpisodesCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE32AC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeListType.StationShowEpisodesCodingKeys()
{
  return &type metadata for EpisodeListType.StationShowEpisodesCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.ListenNowUpNextCodingKeys()
{
  return &type metadata for EpisodeListType.ListenNowUpNextCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.PrototypeUpNextCodingKeys()
{
  return &type metadata for EpisodeListType.PrototypeUpNextCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.LatestEpisodesCodingKeys()
{
  return &type metadata for EpisodeListType.LatestEpisodesCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.BookmarksCodingKeys()
{
  return &type metadata for EpisodeListType.BookmarksCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.BookmarksFromShowCodingKeys()
{
  return &type metadata for EpisodeListType.BookmarksFromShowCodingKeys;
}

unsigned char *_s18PodcastsFoundation15EpisodeListTypeO25ListenNowUpNextCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE32C1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeListType.ShowCodingKeys()
{
  return &type metadata for EpisodeListType.ShowCodingKeys;
}

unsigned char *_s18PodcastsFoundation15EpisodeListTypeO35CategoryPageFromYourShowsCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACE32CF0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeListType.UnfollowedLibraryShowCodingKeys()
{
  return &type metadata for EpisodeListType.UnfollowedLibraryShowCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeListType.WatchTopLevelCodingKeys()
{
  return &type metadata for EpisodeListType.WatchTopLevelCodingKeys;
}

unint64_t sub_1ACE32D3C()
{
  unint64_t result = qword_1E99F6640;
  if (!qword_1E99F6640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6640);
  }
  return result;
}

unint64_t sub_1ACE32D94()
{
  unint64_t result = qword_1E99F6648;
  if (!qword_1E99F6648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6648);
  }
  return result;
}

unint64_t sub_1ACE32DEC()
{
  unint64_t result = qword_1E99F6650;
  if (!qword_1E99F6650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6650);
  }
  return result;
}

unint64_t sub_1ACE32E44()
{
  unint64_t result = qword_1E99F6658;
  if (!qword_1E99F6658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6658);
  }
  return result;
}

unint64_t sub_1ACE32E9C()
{
  unint64_t result = qword_1E99F6660;
  if (!qword_1E99F6660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6660);
  }
  return result;
}

unint64_t sub_1ACE32EF4()
{
  unint64_t result = qword_1E99F6668;
  if (!qword_1E99F6668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6668);
  }
  return result;
}

unint64_t sub_1ACE32F4C()
{
  unint64_t result = qword_1E99F6670;
  if (!qword_1E99F6670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6670);
  }
  return result;
}

unint64_t sub_1ACE32FA4()
{
  unint64_t result = qword_1E99F6678;
  if (!qword_1E99F6678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6678);
  }
  return result;
}

unint64_t sub_1ACE32FFC()
{
  unint64_t result = qword_1E99F6680;
  if (!qword_1E99F6680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6680);
  }
  return result;
}

unint64_t sub_1ACE33054()
{
  unint64_t result = qword_1E99F6688;
  if (!qword_1E99F6688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6688);
  }
  return result;
}

unint64_t sub_1ACE330AC()
{
  unint64_t result = qword_1EB7710F0;
  if (!qword_1EB7710F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7710F0);
  }
  return result;
}

unint64_t sub_1ACE33104()
{
  unint64_t result = qword_1EB7710E8;
  if (!qword_1EB7710E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7710E8);
  }
  return result;
}

unint64_t sub_1ACE3315C()
{
  unint64_t result = qword_1EB771028;
  if (!qword_1EB771028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771028);
  }
  return result;
}

unint64_t sub_1ACE331B4()
{
  unint64_t result = qword_1EB771020;
  if (!qword_1EB771020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771020);
  }
  return result;
}

unint64_t sub_1ACE3320C()
{
  unint64_t result = qword_1EB7710B0;
  if (!qword_1EB7710B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7710B0);
  }
  return result;
}

unint64_t sub_1ACE33264()
{
  unint64_t result = qword_1EB7710A8;
  if (!qword_1EB7710A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7710A8);
  }
  return result;
}

unint64_t sub_1ACE332BC()
{
  unint64_t result = qword_1EB771068;
  if (!qword_1EB771068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771068);
  }
  return result;
}

unint64_t sub_1ACE33314()
{
  unint64_t result = qword_1EB771060;
  if (!qword_1EB771060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771060);
  }
  return result;
}

unint64_t sub_1ACE3336C()
{
  unint64_t result = qword_1EB771038;
  if (!qword_1EB771038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771038);
  }
  return result;
}

unint64_t sub_1ACE333C4()
{
  unint64_t result = qword_1EB771030;
  if (!qword_1EB771030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771030);
  }
  return result;
}

unint64_t sub_1ACE3341C()
{
  unint64_t result = qword_1EB7710D0;
  if (!qword_1EB7710D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7710D0);
  }
  return result;
}

unint64_t sub_1ACE33474()
{
  unint64_t result = qword_1EB7710C8;
  if (!qword_1EB7710C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7710C8);
  }
  return result;
}

unint64_t sub_1ACE334CC()
{
  unint64_t result = qword_1EB7710C0;
  if (!qword_1EB7710C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7710C0);
  }
  return result;
}

unint64_t sub_1ACE33524()
{
  unint64_t result = qword_1EB7710B8;
  if (!qword_1EB7710B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7710B8);
  }
  return result;
}

unint64_t sub_1ACE3357C()
{
  unint64_t result = qword_1EB771080;
  if (!qword_1EB771080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771080);
  }
  return result;
}

unint64_t sub_1ACE335D4()
{
  unint64_t result = qword_1EB771078;
  if (!qword_1EB771078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771078);
  }
  return result;
}

unint64_t sub_1ACE3362C()
{
  unint64_t result = qword_1EB771090;
  if (!qword_1EB771090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771090);
  }
  return result;
}

unint64_t sub_1ACE33684()
{
  unint64_t result = qword_1EB771088;
  if (!qword_1EB771088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771088);
  }
  return result;
}

unint64_t sub_1ACE336DC()
{
  unint64_t result = qword_1EB771058;
  if (!qword_1EB771058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771058);
  }
  return result;
}

unint64_t sub_1ACE33734()
{
  unint64_t result = qword_1EB771050;
  if (!qword_1EB771050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771050);
  }
  return result;
}

unint64_t sub_1ACE3378C()
{
  unint64_t result = qword_1EB771018;
  if (!qword_1EB771018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771018);
  }
  return result;
}

unint64_t sub_1ACE337E4()
{
  unint64_t result = qword_1EB771010;
  if (!qword_1EB771010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771010);
  }
  return result;
}

unint64_t sub_1ACE3383C()
{
  unint64_t result = qword_1EB7710A0;
  if (!qword_1EB7710A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7710A0);
  }
  return result;
}

unint64_t sub_1ACE33894()
{
  unint64_t result = qword_1EB771098;
  if (!qword_1EB771098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771098);
  }
  return result;
}

unint64_t sub_1ACE338EC()
{
  unint64_t result = qword_1EB771008;
  if (!qword_1EB771008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771008);
  }
  return result;
}

unint64_t sub_1ACE33944()
{
  unint64_t result = qword_1EB771000;
  if (!qword_1EB771000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771000);
  }
  return result;
}

unint64_t sub_1ACE3399C()
{
  unint64_t result = qword_1EB7710E0;
  if (!qword_1EB7710E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7710E0);
  }
  return result;
}

unint64_t sub_1ACE339F4()
{
  unint64_t result = qword_1EB7710D8;
  if (!qword_1EB7710D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7710D8);
  }
  return result;
}

unint64_t sub_1ACE33A4C()
{
  unint64_t result = qword_1EB771048;
  if (!qword_1EB771048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771048);
  }
  return result;
}

unint64_t sub_1ACE33AA4()
{
  unint64_t result = qword_1EB771040;
  if (!qword_1EB771040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771040);
  }
  return result;
}

unint64_t sub_1ACE33AFC()
{
  unint64_t result = qword_1EB770FF8;
  if (!qword_1EB770FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770FF8);
  }
  return result;
}

unint64_t sub_1ACE33B54()
{
  unint64_t result = qword_1EB770FF0;
  if (!qword_1EB770FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770FF0);
  }
  return result;
}

uint64_t sub_1ACE33BA8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB76E050);
    sub_1ACE33C3C(a2, MEMORY[0x1E4F276F0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACE33C3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  char v11 = a2;
  int v14 = a2;
  uint64_t result = sub_1ACB3A630(a1, (uint64_t)&v28);
  long long v16 = v28;
  long long v17 = v29;
  long long v18 = v30;
  long long v19 = v31;
  char v20 = v32;
  if (v14 == 17)
  {
    long long v24 = v31;
    long long v25 = v30;
    long long v26 = v29;
    long long v27 = v28;
    uint64_t result = sub_1ACB3A630(a1, (uint64_t)&v33);
    char v11 = 7;
    long long v17 = v26;
    long long v16 = v27;
    long long v19 = v24;
    long long v18 = v25;
    switch(v41)
    {
      case 1:
        char v11 = 9;
        break;
      case 3:
      case 4:
        goto LABEL_17;
      case 5:
        char v11 = 13;
        break;
      case 6:
        break;
      case 7:
      case 8:
        char v11 = 0;
        break;
      case 9:
        uint64_t v21 = v37 | v36 | v35;
        if (v39 | v40 | v33 | v38 | v21 | v34)
        {
          uint64_t v22 = v39 | v40 | v38 | v21 | v34;
          if (v33 != 1 || v22)
          {
            if (v33 != 2 || v22)
            {
              if (v33 != 3 || v22)
              {
                if (v22) {
                  BOOL v23 = 0;
                }
                else {
                  BOOL v23 = v33 == 4;
                }
                if (v23) {
                  char v11 = 7;
                }
                else {
                  char v11 = 16;
                }
              }
              else
              {
LABEL_17:
                char v11 = 2;
              }
            }
            else
            {
              char v11 = 15;
            }
          }
          else
          {
            char v11 = 12;
          }
        }
        else
        {
          char v11 = 14;
        }
        break;
      default:
        char v11 = v41;
        break;
    }
  }
  *(_OWORD *)a7 = v16;
  *(_OWORD *)(a7 + 16) = v17;
  *(_OWORD *)(a7 + 32) = v18;
  *(_OWORD *)(a7 + 48) = v19;
  *(unsigned char *)(a7 + 64) = v20;
  *(unsigned char *)(a7 + 65) = v11;
  *(void *)(a7 + 72) = a3;
  *(unsigned char *)(a7 + 80) = a4 & 1;
  *(unsigned char *)(a7 + 81) = a5 & 1;
  *(unsigned char *)(a7 + 82) = a6 & 1;
  return result;
}

id EpisodeListSettings.predicate.getter()
{
  uint64_t v1 = *((void *)v0 + 9);
  int v2 = *((unsigned __int8 *)v0 + 80);
  int v3 = *((unsigned __int8 *)v0 + 81);
  int v4 = *((unsigned __int8 *)v0 + 82);
  long long v15 = *v0;
  long long v16 = v0[1];
  long long v17 = v0[2];
  long long v18 = v0[3];
  LOWORD(v19) = *((_WORD *)v0 + 32);
  LOWORD(v20) = *((_WORD *)v0 + 40);
  BYTE2(v20) = *((unsigned char *)v0 + 82);
  id v5 = sub_1ACE34E14();
  if (v1 == 3)
  {
    if (!v2) {
      goto LABEL_3;
    }
  }
  else
  {
    id v9 = objc_msgSend(self, sel_predicateForPubDateLimit_, v1, v15, v16, v17, v18, v19, v1, v20);
    id v10 = objc_msgSend(v5, sel_AND_, v9);

    id v5 = v10;
    if (!v2)
    {
LABEL_3:
      if (!v3) {
        goto LABEL_4;
      }
LABEL_8:
      id v13 = objc_msgSend(self, sel_predicateForEpisodeTypeFilter_, 5);
      id v14 = objc_msgSend(v5, sel_AND_, v13);

      id v5 = v14;
      if (v4) {
        goto LABEL_5;
      }
      return v5;
    }
  }
  id v11 = objc_msgSend(self, sel_predicateForVisuallyPlayed_, 0);
  id v12 = objc_msgSend(v5, sel_AND_, v11);

  id v5 = v12;
  if (v3) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4)
  {
LABEL_5:
    id v6 = objc_msgSend(self, sel_predicateForAudio_, 1);
    id v7 = objc_msgSend(v5, sel_AND_, v6);

    return v7;
  }
  return v5;
}

void EpisodeListSettings.initialItemBehavior.getter(BOOL *a1@<X8>)
{
  BOOL v4 = 0;
  if (*(unsigned char *)(v1 + 64) == 5)
  {
    id v6 = &type metadata for Podcasts;
    unint64_t v7 = sub_1ACA56248();
    v5[0] = 57;
    char v3 = sub_1ACE75298();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    if (v3) {
      BOOL v4 = 1;
    }
  }
  *a1 = v4;
}

id EpisodeListSettings.playPredicate.getter()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  int v3 = *(unsigned __int8 *)(v0 + 64);
  if (v3 == 2)
  {
    id v10 = EpisodeListSettings.predicate.getter();
    id v11 = objc_msgSend(self, sel_predicateForEpisodeTypeFilter_, 5);
    id v12 = objc_msgSend(v10, sel_AND_, v11);

    return v12;
  }
  if (v3 == 7)
  {
    sub_1ACA63B70(v2, v1);
    unint64_t v4 = EpisodeUserFilter.canonical.getter(v2, v1);
    if (!v5)
    {
LABEL_6:
      id v6 = EpisodeListSettings.predicate.getter();
      id v7 = objc_msgSend(self, sel_predicateForEpisodeTypeFilter_, 5);
      id v8 = objc_msgSend(v6, sel_AND_, v7);

      sub_1ACA63830(v2, v1);
      return v8;
    }
    if (v5 != 2)
    {
      sub_1ACA63830(v4, 1);
      id result = (id)sub_1ACE77498();
      __break(1u);
      return result;
    }
    if (v4 < 2) {
      goto LABEL_6;
    }
    sub_1ACA63830(v2, v1);
  }
  return EpisodeListSettings.predicate.getter();
}

uint64_t EpisodeListSettings.listType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACE35868(v1, a1);
}

uint64_t EpisodeListSettings.listType.setter(uint64_t a1)
{
  return sub_1ACE358C4(a1, v1);
}

uint64_t (*EpisodeListSettings.listType.modify())()
{
  return nullsub_1;
}

uint64_t EpisodeListSettings.sort.getter()
{
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t EpisodeListSettings.sort.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 65) = result;
  return result;
}

uint64_t (*EpisodeListSettings.sort.modify())()
{
  return nullsub_1;
}

uint64_t EpisodeListSettings.pubDateLimit.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t EpisodeListSettings.pubDateLimit.setter(uint64_t result)
{
  *(void *)(v1 + 72) = result;
  return result;
}

uint64_t (*EpisodeListSettings.pubDateLimit.modify())()
{
  return nullsub_1;
}

uint64_t EpisodeListSettings.hidePlayedEpisodes.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t EpisodeListSettings.hidePlayedEpisodes.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 80) = result;
  return result;
}

uint64_t (*EpisodeListSettings.hidePlayedEpisodes.modify())()
{
  return nullsub_1;
}

uint64_t EpisodeListSettings.hideTrailers.getter()
{
  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t EpisodeListSettings.hideTrailers.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 81) = result;
  return result;
}

uint64_t (*EpisodeListSettings.hideTrailers.modify())()
{
  return nullsub_1;
}

uint64_t EpisodeListSettings.hideVideoEpisodes.getter()
{
  return *(unsigned __int8 *)(v0 + 82);
}

uint64_t EpisodeListSettings.hideVideoEpisodes.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 82) = result;
  return result;
}

uint64_t (*EpisodeListSettings.hideVideoEpisodes.modify())()
{
  return nullsub_1;
}

unint64_t sub_1ACE34468(char a1)
{
  unint64_t result = 0x657079547473696CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 1953656691;
      break;
    case 2:
      unint64_t result = 0x4C65746144627570;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x6961725465646968;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACE34548()
{
  return sub_1ACE34468(*v0);
}

uint64_t sub_1ACE34550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE36210(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE34578(uint64_t a1)
{
  unint64_t v2 = sub_1ACE35A60();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE345B4(uint64_t a1)
{
  unint64_t v2 = sub_1ACE35A60();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EpisodeListSettings.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771AB0);
  uint64_t v22 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = *v1;
  long long v19 = v1[1];
  long long v20 = v6;
  long long v18 = v1[2];
  uint64_t v7 = *((void *)v1 + 6);
  uint64_t v8 = *((void *)v1 + 7);
  char v9 = *((unsigned char *)v1 + 64);
  int v29 = *((unsigned __int8 *)v1 + 65);
  uint64_t v17 = *((void *)v1 + 9);
  int v10 = *((unsigned __int8 *)v1 + 80);
  v16[4] = *((unsigned __int8 *)v1 + 81);
  v16[5] = v10;
  v16[3] = *((unsigned __int8 *)v1 + 82);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE35A60();
  sub_1ACE77C78();
  long long v23 = v20;
  long long v24 = v19;
  long long v25 = v18;
  uint64_t v26 = v7;
  uint64_t v27 = v8;
  id v11 = v5;
  char v28 = v9;
  char v30 = 0;
  sub_1ACE35AB4();
  uint64_t v12 = v21;
  sub_1ACE77788();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v5, v3);
  }
  uint64_t v14 = v17;
  uint64_t v15 = v22;
  LOBYTE(v23) = v29;
  char v30 = 1;
  sub_1ACC5FE20();
  sub_1ACE77788();
  *(void *)&long long v23 = v14;
  char v30 = 2;
  type metadata accessor for MTEpisodePubDateLimit(0);
  sub_1ACE35B5C(&qword_1EB771900);
  sub_1ACE77788();
  LOBYTE(v23) = 3;
  sub_1ACE77758();
  LOBYTE(v23) = 4;
  sub_1ACE77758();
  LOBYTE(v23) = 5;
  sub_1ACE77758();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v11, v3);
}

void EpisodeListSettings.init(from:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6720);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE35A60();
  sub_1ACE77C48();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    char v50 = 0;
    sub_1ACE35B08();
    sub_1ACE77698();
    uint64_t v34 = a2;
    uint64_t v10 = v44;
    uint64_t v9 = v45;
    uint64_t v11 = v46;
    char v50 = 1;
    int v49 = v48;
    uint64_t v37 = v41;
    uint64_t v38 = v40;
    uint64_t v35 = v42;
    uint64_t v36 = v43;
    uint64_t v39 = v47;
    sub_1ACA63A78(v40, v41, v42, v43, v44, v45, v46, v47, v48);
    sub_1ACC60040();
    sub_1ACE77698();
    uint64_t v31 = v11;
    uint64_t v32 = v9;
    uint64_t v33 = v10;
    uint64_t v12 = v37;
    uint64_t v13 = v38;
    LODWORD(v9) = v40;
    type metadata accessor for MTEpisodePubDateLimit(0);
    char v50 = 2;
    sub_1ACE35B5C(&qword_1E99F6730);
    sub_1ACE77698();
    int v30 = v9;
    uint64_t v14 = v40;
    LOBYTE(v40) = 3;
    int v29 = sub_1ACE77668();
    LOBYTE(v40) = 4;
    int v28 = sub_1ACE77668();
    LOBYTE(v40) = 5;
    char v15 = sub_1ACE77668();
    v28 &= 1u;
    v29 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v16 = v15 & 1;
    uint64_t v17 = v34;
    *uint64_t v34 = v13;
    v17[1] = v12;
    uint64_t v18 = v12;
    uint64_t v19 = v14;
    uint64_t v20 = v35;
    uint64_t v21 = v36;
    v17[2] = v35;
    uint64_t v17[3] = v21;
    uint64_t v23 = v32;
    uint64_t v22 = v33;
    v17[4] = v33;
    v17[5] = v23;
    uint64_t v24 = v31;
    uint64_t v25 = v39;
    void v17[6] = v31;
    v17[7] = v25;
    char v26 = v49;
    *((unsigned char *)v17 + 64) = v49;
    *((unsigned char *)v17 + 65) = v30;
    v17[9] = v19;
    *((unsigned char *)v17 + 80) = v29;
    *((unsigned char *)v17 + 81) = v28;
    *((unsigned char *)v17 + 82) = v16;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    sub_1ACA63738(v38, v18, v20, v21, v22, v23, v24, v39, v26);
  }
}

void sub_1ACE34D38(void *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_1ACE34D50(void *a1)
{
  return EpisodeListSettings.encode(to:)(a1);
}

BOOL static EpisodeListSettings.InitialItemBehavior.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t EpisodeListSettings.InitialItemBehavior.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t EpisodeListSettings.InitialItemBehavior.hashValue.getter()
{
  return sub_1ACE77B78();
}

void EpisodeListSettings.sectionContext.getter(char *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 24)) {
    BOOL v2 = 0;
  }
  else {
    BOOL v2 = *(unsigned char *)(v1 + 64) == 7;
  }
  if (v2) {
    char v3 = 0;
  }
  else {
    char v3 = 2;
  }
  *a1 = v3;
}

id sub_1ACE34E14()
{
  uint64_t v1 = sub_1ACE74F28();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)v0;
  uint64_t v6 = *(void *)(v0 + 8);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = *(void *)(v0 + 24);
  uint64_t v9 = *(void *)(v0 + 32);
  uint64_t v10 = *(void *)(v0 + 40);
  uint64_t v11 = *(void *)(v0 + 48);
  uint64_t v12 = *(void *)(v0 + 56);
  switch(*(unsigned char *)(v0 + 64))
  {
    case 1:
      uint64_t v24 = *(void *)(v0 + 48);
      uint64_t v25 = *(void *)(v0 + 32);
      char v26 = self;
      swift_bridgeObjectRetain();
      uint64_t v27 = (void *)sub_1ACE76178();
      sub_1ACA63738(v5, v6, v7, v8, v25, v10, v24, v12, 1);
      id v28 = objc_msgSend(v26, sel_predicateForAllEpisodesOnPodcastUuid_includeNonAudioEpisodes_, v27, 1);

      id v29 = EpisodeUserFilter.basePredicate.getter(2, 2);
      id v30 = objc_msgSend(v28, sel_AND_, v29);
      goto LABEL_19;
    case 2:
      uint64_t v31 = *(void *)(v0 + 48);
      uint64_t v32 = *(void *)(v0 + 32);
      uint64_t v33 = self;
      swift_bridgeObjectRetain();
      uint64_t v34 = (void *)sub_1ACE76178();
      sub_1ACA63738(v5, v6, v7, v8, v32, v10, v31, v12, 2);
      id v35 = objc_msgSend(v33, sel_predicateForAllEpisodesOnPodcastUuid_includeNonAudioEpisodes_, v34, 1);
      goto LABEL_22;
    case 3:
      uint64_t v36 = *(void *)(v0 + 48);
      uint64_t v37 = v9;
      uint64_t v38 = self;
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1ACE76178();
      uint64_t v40 = v12;
      uint64_t v41 = (void *)v39;
      sub_1ACA63738(v5, v6, v7, v8, v37, v10, v36, v40, 3);
      id v42 = objc_msgSend(v38, sel_predicateForAllEpisodesOnPodcastUuid_includeNonAudioEpisodes_, v41, 1);

      if (v7)
      {
        id v43 = v42;
        id v44 = objc_msgSend(v38, sel_predicateForEpisodeTypeFilter_, v7);
        id v42 = objc_msgSend(v43, sel_AND_, v44);
      }
      if (v8 == 2)
      {
        id result = v42;
      }
      else
      {
        id v78 = objc_msgSend(v38, sel_predicateForVisuallyPlayed_, v8 & 1);
        id v59 = objc_msgSend(v42, sel_AND_, v78);

LABEL_29:
        id result = v59;
      }
      break;
    case 4:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v46 = self;
      uint64_t v34 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      id v35 = objc_msgSend(v46, sel_predicateForEpisodesInStationShow_, v34);
      goto LABEL_22;
    case 5:
      uint64_t v47 = self;
      id v48 = objc_msgSend(v47, sel_predicateForVisuallyPlayed_, 1);
      id v49 = objc_msgSend(v47, sel_predicateForListenedAfterMarkedAsPlayed);
      id v50 = [v49 NOT];

      id v51 = objc_msgSend(v48, sel_AND_, v50);
      id v52 = objc_msgSend(v47, sel_predicateForListenNow);
      id v53 = [v51 NOT];
      id v54 = objc_msgSend(v52, sel_AND_, v53);

      return v54;
    case 6:
      uint64_t v55 = *(void *)(v0 + 48);
      uint64_t v56 = *(void *)(v0 + 32);
      uint64_t v57 = self;
      swift_bridgeObjectRetain();
      uint64_t v58 = (void *)sub_1ACE76178();
      sub_1ACA63738(v5, v6, v7, v8, v56, v10, v55, v12, 6);
      id v28 = objc_msgSend(v57, sel_predicateForAllEpisodesOnPodcastUuid_includeNonAudioEpisodes_, v58, 1);

      id v29 = EpisodeUserFilter.basePredicate.getter(3, 2);
      id v30 = objc_msgSend(v28, sel_AND_, v29);
LABEL_19:
      id v59 = v30;

      goto LABEL_29;
    case 7:
      uint64_t v60 = self;
      swift_bridgeObjectRetain();
      sub_1ACA63B70(v7, v8);
      uint64_t v61 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      id v62 = objc_msgSend(v60, sel_predicateForAllEpisodesOnPodcastUuid_includeNonAudioEpisodes_, v61, 1);

      id v63 = EpisodeUserFilter.basePredicate.getter(v7, v8);
      id v59 = objc_msgSend(v62, sel_AND_, v63);

      sub_1ACA63830(v7, v8);
      goto LABEL_29;
    case 8:
      uint64_t v64 = *(void *)(v0 + 48);
      uint64_t v65 = *(void *)(v0 + 32);
      uint64_t v66 = self;
      swift_bridgeObjectRetain();
      uint64_t v34 = (void *)sub_1ACE76178();
      sub_1ACA63738(v5, v6, v7, v8, v65, v10, v64, v12, 8);
      id v35 = objc_msgSend(v66, sel_predicateForLibraryEpisodesOnPodcastUuid_, v34);
LABEL_22:
      id v67 = v35;

      id result = v67;
      break;
    case 9:
      uint64_t v68 = v9 | v10 | v11;
      if (v7 | v6 | v5 | v8 | v68 | v12)
      {
        uint64_t v69 = v7 | v6 | v8 | v68 | v12;
        if (v5 != 1 || v69)
        {
          if (v5 != 2 || v69)
          {
            if (v5 != 3 || v69)
            {
              if (v5 != 4 || v69) {
                id v70 = objc_msgSend(self, sel_predicateForIsTopLevel);
              }
              else {
                id v70 = objc_msgSend(self, sel_predicateForBookmarkedEpisodes);
              }
            }
            else
            {
              id v70 = objc_msgSend(self, sel_predicateForListenNowLatestEpisodes);
            }
          }
          else
          {
            id v70 = objc_msgSend(self, sel_predicateForListenNow);
          }
        }
        else
        {
          id v70 = objc_msgSend(self, sel_predicateForPreviouslyPlayedHidingFutureTimestamps);
        }
      }
      else
      {
        id v70 = objc_msgSend(self, sel_predicateForDownloaded_excludeHidden_, 1, 1);
      }
      id result = v70;
      break;
    default:
      uint64_t v86 = *(void *)(v0 + 56);
      int64_t v13 = *(void *)(v5 + 16);
      if (v13)
      {
        uint64_t v79 = v9;
        uint64_t v80 = v11;
        uint64_t v81 = v10;
        uint64_t v82 = v6;
        uint64_t v84 = v7;
        uint64_t v85 = v8;
        uint64_t v90 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1ACC82D84(0, v13, 0);
        char v15 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
        uint64_t v14 = v2 + 16;
        uint64_t v87 = v15;
        uint64_t v16 = *(unsigned __int8 *)(v14 + 64);
        uint64_t v83 = v5;
        uint64_t v17 = v5 + ((v16 + 32) & ~v16);
        uint64_t v18 = *(void *)(v14 + 56);
        do
        {
          v87(v4, v17, v1);
          uint64_t v19 = sub_1ACE74DD8();
          uint64_t v89 = MEMORY[0x1E4FBB1A0];
          *(void *)&long long v88 = v19;
          *((void *)&v88 + 1) = v20;
          (*(void (**)(char *, uint64_t))(v14 - 8))(v4, v1);
          uint64_t v21 = v90;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1ACC82D84(0, *(void *)(v21 + 16) + 1, 1);
            uint64_t v21 = v90;
          }
          unint64_t v23 = *(void *)(v21 + 16);
          unint64_t v22 = *(void *)(v21 + 24);
          if (v23 >= v22 >> 1)
          {
            sub_1ACC82D84(v22 > 1, v23 + 1, 1);
            uint64_t v21 = v90;
          }
          *(void *)(v21 + 16) = v23 + 1;
          sub_1ACA3AA44(&v88, (_OWORD *)(v21 + 32 * v23 + 32));
          v17 += v18;
          --v13;
        }
        while (v13);
        sub_1ACA63738(v83, v82, v84, v85, v79, v81, v80, v86, 0);
      }
      uint64_t v71 = self;
      id v72 = objc_allocWithZone(MEMORY[0x1E4F1CAA0]);
      uint64_t v73 = (void *)sub_1ACE76558();
      swift_bridgeObjectRelease();
      id v74 = objc_msgSend(v72, sel_initWithArray_, v73);

      id v75 = objc_msgSend(self, sel_sharedInstance);
      id v76 = objc_msgSend(v75, sel_privateQueueContext);

      id v77 = objc_msgSend(v71, sel_predicateForCategoryPageFromYourShows_ctx_, v74, v76);
      id result = v77;
      break;
  }
  return result;
}

uint64_t sub_1ACE35868(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ACE358C4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t _s18PodcastsFoundation19EpisodeListSettingsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1ACB3A630(a1, (uint64_t)v22);
  char v4 = *(unsigned char *)(a1 + 65);
  uint64_t v5 = *(void *)(a1 + 72);
  unsigned __int8 v21 = *(unsigned char *)(a1 + 80);
  unsigned __int8 v6 = *(unsigned char *)(a1 + 81);
  int v7 = *(unsigned __int8 *)(a1 + 82);
  sub_1ACB3A630(a2, (uint64_t)v23);
  char v8 = *(unsigned char *)(a2 + 65);
  uint64_t v9 = *(void *)(a2 + 72);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 80);
  unsigned __int8 v11 = *(unsigned char *)(a2 + 81);
  int v12 = *(unsigned __int8 *)(a2 + 82);
  if ((_s18PodcastsFoundation15EpisodeListTypeO2eeoiySbAC_ACtFZ_0((uint64_t)v22, (uint64_t)v23) & 1) == 0) {
    return 0;
  }
  unint64_t v13 = EpisodeSortType.rawValue.getter(v4);
  uint64_t v15 = v14;
  if (v13 != EpisodeSortType.rawValue.getter(v8) || v15 != v16)
  {
    char v18 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v18 & 1) == 0) {
      return result;
    }
    if (v5 == v9) {
      goto LABEL_8;
    }
    return 0;
  }
  swift_bridgeObjectRelease_n();
  if (v5 != v9) {
    return 0;
  }
LABEL_8:
  if ((v6 ^ v11)) {
    unsigned int v20 = 0;
  }
  else {
    unsigned int v20 = v7 ^ v12 ^ 1;
  }
  if ((v21 ^ v10)) {
    return 0;
  }
  else {
    return v20;
  }
}

unint64_t sub_1ACE35A60()
{
  unint64_t result = qword_1EB771270;
  if (!qword_1EB771270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771270);
  }
  return result;
}

unint64_t sub_1ACE35AB4()
{
  unint64_t result = qword_1EB7710F8;
  if (!qword_1EB7710F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7710F8);
  }
  return result;
}

unint64_t sub_1ACE35B08()
{
  unint64_t result = qword_1E99F6728;
  if (!qword_1E99F6728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6728);
  }
  return result;
}

uint64_t sub_1ACE35B5C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MTEpisodePubDateLimit(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACE35BA4()
{
  unint64_t result = qword_1E99F6738;
  if (!qword_1E99F6738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6738);
  }
  return result;
}

uint64_t initializeWithCopy for EpisodeListSettings(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  char v13 = *(unsigned char *)(a2 + 64);
  sub_1ACA63A78(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v13);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v13;
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_WORD *)(a1 + 81) = *(_WORD *)(a2 + 81);
  return a1;
}

uint64_t assignWithCopy for EpisodeListSettings(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  char v22 = *(unsigned char *)(a2 + 64);
  sub_1ACA63A78(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v22);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  char v20 = *(unsigned char *)(a1 + 64);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v22;
  sub_1ACA63738(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
  return a1;
}

uint64_t assignWithTake for EpisodeListSettings(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 64);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  char v13 = *(unsigned char *)(a1 + 64);
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v15;
  *(unsigned char *)(a1 + 64) = v4;
  sub_1ACA63738(v5, v6, v7, v8, v9, v10, v11, v12, v13);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeListSettings(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 83)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 80);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeListSettings(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 82) = 0;
    *(_WORD *)(result + 80) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 83) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 83) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 80) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeListSettings()
{
  return &type metadata for EpisodeListSettings;
}

unsigned char *storeEnumTagSinglePayload for EpisodeListSettings.InitialItemBehavior(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE35FCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeListSettings.InitialItemBehavior()
{
  return &type metadata for EpisodeListSettings.InitialItemBehavior;
}

unsigned char *storeEnumTagSinglePayload for EpisodeListSettings.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE360D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeListSettings.CodingKeys()
{
  return &type metadata for EpisodeListSettings.CodingKeys;
}

unint64_t sub_1ACE3610C()
{
  unint64_t result = qword_1E99F6740;
  if (!qword_1E99F6740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6740);
  }
  return result;
}

unint64_t sub_1ACE36164()
{
  unint64_t result = qword_1EB771280;
  if (!qword_1EB771280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771280);
  }
  return result;
}

unint64_t sub_1ACE361BC()
{
  unint64_t result = qword_1EB771278;
  if (!qword_1EB771278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771278);
  }
  return result;
}

uint64_t sub_1ACE36210(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657079547473696CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953656691 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4C65746144627570 && a2 == 0xEC00000074696D69 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ACED40D0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6961725465646968 && a2 == 0xEC0000007372656CLL || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001ACED40F0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_1ACE364B0()
{
  unint64_t result = qword_1EB76EF98;
  if (!qword_1EB76EF98)
  {
    sub_1ACE75158();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76EF98);
  }
  return result;
}

unint64_t sub_1ACE3650C(char a1)
{
  unint64_t result = 0x7972617262696CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74736163646F70;
      break;
    case 2:
      unint64_t result = 0x7365646F73697065;
      break;
    case 3:
      unint64_t result = 0x6970456C61636F6CLL;
      break;
    case 4:
      unint64_t result = 0x646F506C61636F6CLL;
      break;
    case 5:
      unint64_t result = 0x6E6F6974617473;
      break;
    case 6:
      unint64_t result = 0x746F687370616E73;
      break;
    case 7:
      unint64_t result = 0x657551616964656DLL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 9:
      unint64_t result = 0x7478654E7075;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACE36658()
{
  return sub_1ACE3650C(*v0);
}

uint64_t sub_1ACE36660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE3AA00(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ACE36688(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1ACE36694(uint64_t a1)
{
  unint64_t v2 = sub_1ACE39474();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE366D0(uint64_t a1)
{
  unint64_t v2 = sub_1ACE39474();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE3670C()
{
  return 7562345;
}

uint64_t sub_1ACE36720(uint64_t a1)
{
  unint64_t v2 = sub_1ACE397E8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE3675C(uint64_t a1)
{
  unint64_t v2 = sub_1ACE397E8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE36798(uint64_t a1)
{
  unint64_t v2 = sub_1ACE398FC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE367D4(uint64_t a1)
{
  unint64_t v2 = sub_1ACE398FC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE36810(uint64_t a1)
{
  unint64_t v2 = sub_1ACE39794();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE3684C(uint64_t a1)
{
  unint64_t v2 = sub_1ACE39794();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE3688C(uint64_t a1)
{
  unint64_t v2 = sub_1ACE39740();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE368C8(uint64_t a1)
{
  unint64_t v2 = sub_1ACE39740();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE36904()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1ACE3694C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE3AE4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE36974(uint64_t a1)
{
  unint64_t v2 = sub_1ACE395C4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE369B0(uint64_t a1)
{
  unint64_t v2 = sub_1ACE395C4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE369EC(uint64_t a1)
{
  unint64_t v2 = sub_1ACE398A8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE36A28(uint64_t a1)
{
  unint64_t v2 = sub_1ACE398A8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE36A64(uint64_t a1)
{
  unint64_t v2 = sub_1ACE39618();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE36AA0(uint64_t a1)
{
  unint64_t v2 = sub_1ACE39618();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE36ADC()
{
  if (*v0) {
    return 0x496C616974696E69;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1ACE36B10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE3AF54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE36B38(uint64_t a1)
{
  unint64_t v2 = sub_1ACE396EC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE36B74(uint64_t a1)
{
  unint64_t v2 = sub_1ACE396EC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE36BB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 7562345 && a2 == 0xE300000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1ACE77848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ACE36C38(uint64_t a1)
{
  unint64_t v2 = sub_1ACE3951C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE36C74(uint64_t a1)
{
  unint64_t v2 = sub_1ACE3951C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE36CB0(uint64_t a1)
{
  unint64_t v2 = sub_1ACE394C8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE36CEC(uint64_t a1)
{
  unint64_t v2 = sub_1ACE394C8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MediaIdentifier.encode(to:)(void *a1)
{
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A68);
  uint64_t v43 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  id v42 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771AA8);
  uint64_t v63 = *(void *)(v4 - 8);
  uint64_t v64 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v61 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A58);
  uint64_t v65 = *(void *)(v6 - 8);
  uint64_t v66 = v6;
  MEMORY[0x1F4188790](v6);
  id v62 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A90);
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v58 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A80);
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v55 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A98);
  uint64_t v52 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  id v50 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771AA0);
  uint64_t v51 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  id v49 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A88);
  uint64_t v47 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v46 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A78);
  uint64_t v45 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A70);
  uint64_t v41 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  char v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771A60);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v71 = v21;
  uint64_t v72 = v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = *v1;
  uint64_t v69 = v1[1];
  uint64_t v70 = v24;
  uint64_t v25 = v1[2];
  uint64_t v67 = v1[3];
  uint64_t v68 = v25;
  uint64_t v26 = *((unsigned __int8 *)v1 + 32);
  uint64_t v27 = a1[3];
  id v28 = a1;
  id v29 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v28, v27);
  sub_1ACE39474();
  sub_1ACE77C78();
  switch(v26)
  {
    case 1:
      LOBYTE(v75) = 2;
      sub_1ACE397E8();
      uint64_t v32 = v46;
      uint64_t v33 = v71;
      sub_1ACE776D8();
      uint64_t v75 = v70;
      __swift_instantiateConcreteTypeFromMangledName(qword_1E99F1000);
      sub_1ACE3983C(&qword_1E99F1140, qword_1E99F1000, (void (*)(void))sub_1ACA80994);
      uint64_t v34 = v48;
      sub_1ACE77788();
      uint64_t v35 = v47;
      goto LABEL_14;
    case 2:
      LOBYTE(v75) = 3;
      sub_1ACE39794();
      uint64_t v32 = v49;
      uint64_t v33 = v71;
      sub_1ACE776D8();
      uint64_t v75 = v70;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
      sub_1ACE1470C(&qword_1EB768E60, &qword_1EB7731B8);
      uint64_t v34 = v53;
      sub_1ACE77788();
      uint64_t v35 = v51;
      goto LABEL_14;
    case 3:
      LOBYTE(v75) = 4;
      sub_1ACE39740();
      uint64_t v32 = v50;
      uint64_t v33 = v71;
      sub_1ACE776D8();
      uint64_t v34 = v54;
      sub_1ACE77748();
      uint64_t v35 = v52;
      goto LABEL_14;
    case 4:
      LOBYTE(v75) = 5;
      sub_1ACE396EC();
      uint64_t v32 = v55;
      uint64_t v33 = v71;
      sub_1ACE776D8();
      LOBYTE(v75) = 0;
      uint64_t v34 = v57;
      uint64_t v36 = v73;
      sub_1ACE77748();
      if (!v36)
      {
        LOBYTE(v75) = 1;
        sub_1ACE776E8();
      }
      uint64_t v35 = v56;
      goto LABEL_14;
    case 5:
      LOBYTE(v75) = 6;
      sub_1ACE39618();
      uint64_t v32 = v58;
      uint64_t v33 = v71;
      sub_1ACE776D8();
      uint64_t v75 = v70;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6780);
      sub_1ACE3966C(&qword_1E99F6788, &qword_1E99F4140);
      uint64_t v34 = v60;
      sub_1ACE77788();
      uint64_t v35 = v59;
      goto LABEL_14;
    case 6:
      LOBYTE(v75) = 7;
      sub_1ACE395C4();
      uint64_t v32 = v62;
      uint64_t v33 = v71;
      sub_1ACE776D8();
      uint64_t v75 = v70;
      char v74 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4CB8);
      sub_1ACE1470C(&qword_1E99F6770, &qword_1E99F4CB8);
      uint64_t v34 = v66;
      uint64_t v37 = v73;
      sub_1ACE77788();
      if (!v37)
      {
        LOBYTE(v75) = 1;
        sub_1ACE77738();
      }
      uint64_t v35 = v65;
      goto LABEL_14;
    case 7:
      LOBYTE(v75) = 8;
      sub_1ACE3951C();
      uint64_t v32 = v61;
      uint64_t v33 = v71;
      sub_1ACE776D8();
      uint64_t v75 = v70;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6750);
      sub_1ACE3983C(&qword_1E99F6758, &qword_1E99F6750, (void (*)(void))sub_1ACE39570);
      uint64_t v34 = v64;
      sub_1ACE77788();
      uint64_t v35 = v63;
LABEL_14:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v29, v33);
      break;
    case 8:
      if (v68 | v69 | v70 | v67)
      {
        LOBYTE(v75) = 9;
        sub_1ACE394C8();
        uint64_t v38 = v42;
        uint64_t v39 = v71;
        sub_1ACE776D8();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v44);
      }
      else
      {
        LOBYTE(v75) = 0;
        sub_1ACE398FC();
        uint64_t v39 = v71;
        sub_1ACE776D8();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v20, v18);
      }
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v29, v39);
      break;
    default:
      LOBYTE(v75) = 1;
      sub_1ACE398A8();
      uint64_t v30 = v71;
      sub_1ACE776D8();
      uint64_t v75 = v70;
      sub_1ACA80994();
      sub_1ACE77788();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v15);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v29, v30);
      break;
  }
  return result;
}

uint64_t MediaIdentifier.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v96 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F67C0);
  uint64_t v85 = *(void *)(v3 - 8);
  uint64_t v86 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v99 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F67C8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v87 = v5;
  uint64_t v88 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v95 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F67D0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v89 = v8;
  uint64_t v90 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v98 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F67D8);
  uint64_t v83 = *(void *)(v11 - 8);
  uint64_t v84 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v94 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F67E0);
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  uint64_t v91 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F67E8);
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v92 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F67F0);
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  uint64_t v93 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F67F8);
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v97 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6800);
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6808);
  uint64_t v72 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6810);
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a1[3];
  uint64_t v100 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1ACE39474();
  uint64_t v27 = v101;
  sub_1ACE77C48();
  uint64_t v28 = v27;
  if (v27) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v100);
  }
  uint64_t v71 = v21;
  uint64_t v70 = v19;
  uint64_t v30 = v97;
  id v29 = v98;
  uint64_t v31 = v99;
  uint64_t v101 = v23;
  uint64_t v32 = sub_1ACE776B8();
  uint64_t v33 = (char *)v32;
  if (*(void *)(v32 + 16) != 1)
  {
    uint64_t v39 = sub_1ACE77328();
    swift_allocError();
    uint64_t v41 = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0EC8);
    void *v41 = &type metadata for MediaIdentifier;
    sub_1ACE775E8();
    sub_1ACE77308();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v39 - 8) + 104))(v41, *MEMORY[0x1E4FBBA70], v39);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v25, v22);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v100);
  }
  switch(*(unsigned char *)(v32 + 32))
  {
    case 1:
      LOBYTE(v103) = 1;
      sub_1ACE398A8();
      sub_1ACE775D8();
      sub_1ACA80CD4();
      uint64_t v43 = v74;
      sub_1ACE77698();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v18, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v25, v22);
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      char v38 = 0;
      uint64_t v28 = v103;
      break;
    case 2:
      LOBYTE(v103) = 2;
      sub_1ACE397E8();
      uint64_t v44 = v30;
      sub_1ACE775D8();
      __swift_instantiateConcreteTypeFromMangledName(qword_1E99F1000);
      sub_1ACE3983C(&qword_1E99F1168, qword_1E99F1000, (void (*)(void))sub_1ACA80CD4);
      uint64_t v45 = v76;
      sub_1ACE77698();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v44, v45);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v25, v22);
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v28 = v103;
      char v38 = 1;
      break;
    case 3:
      LOBYTE(v103) = 3;
      sub_1ACE39794();
      uint64_t v46 = v93;
      sub_1ACE775D8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
      sub_1ACE1470C(&qword_1EB768E68, &qword_1EB7731B8);
      uint64_t v47 = v78;
      sub_1ACE77698();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v46, v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v25, v22);
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v28 = v103;
      char v38 = 2;
      break;
    case 4:
      LOBYTE(v103) = 4;
      sub_1ACE39740();
      uint64_t v48 = v92;
      sub_1ACE775D8();
      uint64_t v49 = v80;
      uint64_t v28 = sub_1ACE77658();
      uint64_t v35 = v57;
      (*(void (**)(char *, uint64_t))(v79 + 8))(v48, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v25, v22);
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      char v38 = 3;
      break;
    case 5:
      LOBYTE(v103) = 5;
      sub_1ACE396EC();
      id v50 = v91;
      sub_1ACE775D8();
      uint64_t v99 = (char *)v22;
      LOBYTE(v103) = 0;
      uint64_t v51 = v82;
      uint64_t v28 = sub_1ACE77658();
      uint64_t v35 = v58;
      uint64_t v97 = v33;
      LOBYTE(v103) = 1;
      uint64_t v59 = sub_1ACE775F8();
      uint64_t v37 = v60;
      uint64_t v61 = v51;
      id v62 = (void (**)(char *, char *))(v101 + 8);
      uint64_t v36 = v59;
      (*(void (**)(char *, uint64_t))(v81 + 8))(v50, v61);
      swift_bridgeObjectRelease();
      (*v62)(v25, v99);
      char v38 = 4;
      break;
    case 6:
      LOBYTE(v103) = 6;
      sub_1ACE39618();
      uint64_t v52 = v94;
      sub_1ACE775D8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6780);
      sub_1ACE3966C(&qword_1E99F6830, &qword_1E99F4138);
      uint64_t v53 = v84;
      sub_1ACE77698();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v52, v53);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v25, v22);
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v28 = v103;
      char v38 = 5;
      break;
    case 7:
      LOBYTE(v103) = 7;
      sub_1ACE395C4();
      sub_1ACE775D8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4CB8);
      char v102 = 0;
      sub_1ACE1470C(&qword_1E99F6828, &qword_1E99F4CB8);
      uint64_t v54 = v89;
      sub_1ACE77698();
      uint64_t v97 = v33;
      uint64_t v28 = v103;
      char v102 = 1;
      uint64_t v63 = sub_1ACE77648();
      uint64_t v64 = v22;
      uint64_t v65 = v101;
      uint64_t v66 = v29;
      uint64_t v35 = v63;
      uint64_t v36 = v67 & 1;
      (*(void (**)(char *, uint64_t))(v90 + 8))(v66, v54);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v25, v64);
      uint64_t v37 = 0;
      char v38 = 6;
      break;
    case 8:
      LOBYTE(v103) = 8;
      sub_1ACE3951C();
      uint64_t v55 = v95;
      sub_1ACE775D8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6750);
      sub_1ACE3983C(&qword_1E99F6818, &qword_1E99F6750, (void (*)(void))sub_1ACE39950);
      uint64_t v56 = v87;
      sub_1ACE77698();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v55, v56);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v25, v22);
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v28 = v103;
      char v38 = 7;
      break;
    case 9:
      LOBYTE(v103) = 9;
      sub_1ACE394C8();
      sub_1ACE775D8();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v31, v86);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v25, v22);
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      char v38 = 8;
      uint64_t v28 = 1;
      break;
    default:
      LOBYTE(v103) = 0;
      sub_1ACE398FC();
      uint64_t v34 = v71;
      sub_1ACE775D8();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v34, v70);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v25, v22);
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      char v38 = 8;
      break;
  }
  uint64_t v68 = (uint64_t)v100;
  uint64_t v69 = v96;
  *uint64_t v96 = v28;
  v69[1] = v35;
  v69[2] = v36;
  v69[3] = v37;
  *((unsigned char *)v69 + 32) = v38;
  return __swift_destroy_boxed_opaque_existential_0(v68);
}

uint64_t sub_1ACE38CC0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return MediaIdentifier.init(from:)(a1, a2);
}

uint64_t sub_1ACE38CD8(void *a1)
{
  return MediaIdentifier.encode(to:)(a1);
}

uint64_t _s18PodcastsFoundation15MediaIdentifierO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  unsigned __int8 v6 = *(unsigned char *)(a1 + 32);
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  int v11 = *((unsigned __int8 *)a2 + 32);
  switch(v6)
  {
    case 1u:
      if (v11 != 1) {
        goto LABEL_47;
      }
      char v13 = sub_1ACA87A68((void *)v3, (void *)*a2);
      sub_1ACA639E4(v8, v7, v9, v10, 1u);
      sub_1ACA639E4(v3, v2, v4, v5, 1u);
      sub_1ACA63688(v3, v2, v4, v5, 1u);
      uint64_t v14 = v8;
      uint64_t v15 = v7;
      uint64_t v16 = v9;
      uint64_t v17 = v10;
      unsigned __int8 v18 = 1;
      goto LABEL_35;
    case 2u:
      if (v11 != 2) {
        goto LABEL_47;
      }
      char v13 = sub_1ACA87D64((void *)v3, (void *)*a2);
      sub_1ACA639E4(v8, v7, v9, v10, 2u);
      sub_1ACA639E4(v3, v2, v4, v5, 2u);
      sub_1ACA63688(v3, v2, v4, v5, 2u);
      uint64_t v14 = v8;
      uint64_t v15 = v7;
      uint64_t v16 = v9;
      uint64_t v17 = v10;
      unsigned __int8 v18 = 2;
      goto LABEL_35;
    case 3u:
      if (v11 != 3) {
        goto LABEL_47;
      }
      if (v3 == v8 && v2 == v7) {
        char v12 = 1;
      }
      else {
        char v12 = sub_1ACE77848();
      }
      sub_1ACA639E4(v8, v7, v9, v10, 3u);
      sub_1ACA639E4(v3, v2, v4, v5, 3u);
      sub_1ACA63688(v3, v2, v4, v5, 3u);
      sub_1ACA63688(v8, v7, v9, v10, 3u);
      return v12 & 1;
    case 4u:
      if (v11 != 4)
      {
        swift_bridgeObjectRetain();
LABEL_47:
        swift_bridgeObjectRetain();
        goto LABEL_48;
      }
      BOOL v20 = v3 == v8 && v2 == v7;
      if (!v20 && (sub_1ACE77848() & 1) == 0)
      {
        sub_1ACA639E4(v8, v7, v9, v10, 4u);
        sub_1ACA639E4(v3, v2, v4, v5, 4u);
        sub_1ACA63688(v3, v2, v4, v5, 4u);
        uint64_t v30 = v8;
        uint64_t v31 = v7;
        uint64_t v32 = v9;
        uint64_t v33 = v10;
        unsigned __int8 v34 = 4;
        goto LABEL_49;
      }
      if (!v5)
      {
        sub_1ACA639E4(v8, v7, v9, v10, 4u);
        sub_1ACA639E4(v3, v2, v4, 0, 4u);
        swift_bridgeObjectRetain();
        sub_1ACA63688(v3, v2, v4, 0, 4u);
        sub_1ACA63688(v8, v7, v9, v10, 4u);
        if (!v10) {
          goto LABEL_68;
        }
        swift_bridgeObjectRelease();
        goto LABEL_50;
      }
      if (!v10)
      {
        sub_1ACA639E4(v8, v7, v9, 0, 4u);
        sub_1ACA639E4(v3, v2, v4, v5, 4u);
        sub_1ACA63688(v3, v2, v4, v5, 4u);
        uint64_t v30 = v8;
        uint64_t v31 = v7;
        uint64_t v32 = v9;
        uint64_t v33 = 0;
        unsigned __int8 v34 = 4;
        goto LABEL_49;
      }
      if (v4 == v9 && v5 == v10)
      {
        sub_1ACA639E4(v8, v7, v4, v5, 4u);
        sub_1ACA639E4(v3, v2, v4, v5, 4u);
        sub_1ACA63688(v3, v2, v4, v5, 4u);
        uint64_t v21 = v8;
        uint64_t v22 = v7;
        uint64_t v23 = v4;
        uint64_t v24 = v5;
        unsigned __int8 v25 = 4;
        goto LABEL_58;
      }
      char v36 = sub_1ACE77848();
      sub_1ACA639E4(v8, v7, v9, v10, 4u);
      sub_1ACA639E4(v3, v2, v4, v5, 4u);
      sub_1ACA63688(v3, v2, v4, v5, 4u);
      sub_1ACA63688(v8, v7, v9, v10, 4u);
      if (v36) {
        goto LABEL_68;
      }
      goto LABEL_50;
    case 5u:
      if (v11 != 5) {
        goto LABEL_47;
      }
      sub_1ACA639E4(*a2, a2[1], v9, v10, 5u);
      sub_1ACA639E4(v3, v2, v4, v5, 5u);
      char v13 = sub_1ACA8816C(v3, v8);
      sub_1ACA63688(v3, v2, v4, v5, 5u);
      uint64_t v14 = v8;
      uint64_t v15 = v7;
      uint64_t v16 = v9;
      uint64_t v17 = v10;
      unsigned __int8 v18 = 5;
      goto LABEL_35;
    case 6u:
      if (v11 != 6) {
        goto LABEL_47;
      }
      BOOL v26 = sub_1ACA87A68((void *)v3, (void *)*a2);
      sub_1ACA639E4(v8, v7, v9, v10, 6u);
      sub_1ACA639E4(v3, v2, v4, v5, 6u);
      sub_1ACA63688(v3, v2, v4, v5, 6u);
      sub_1ACA63688(v8, v7, v9, v10, 6u);
      if (!v26) {
        goto LABEL_50;
      }
      if (v4)
      {
        if ((v9 & 1) == 0) {
          goto LABEL_50;
        }
        goto LABEL_68;
      }
      if ((v9 & 1) == 0 && v2 == v7)
      {
LABEL_68:
        char v12 = 1;
        return v12 & 1;
      }
LABEL_50:
      char v12 = 0;
      return v12 & 1;
    case 7u:
      if (v11 != 7) {
        goto LABEL_47;
      }
      char v13 = sub_1ACA88324(v3, *a2);
      sub_1ACA639E4(v8, v7, v9, v10, 7u);
      sub_1ACA639E4(v3, v2, v4, v5, 7u);
      sub_1ACA63688(v3, v2, v4, v5, 7u);
      uint64_t v14 = v8;
      uint64_t v15 = v7;
      uint64_t v16 = v9;
      uint64_t v17 = v10;
      unsigned __int8 v18 = 7;
LABEL_35:
      sub_1ACA63688(v14, v15, v16, v17, v18);
      return v13 & 1;
    case 8u:
      if (v4 | v2 | v3 | v5)
      {
        if (v11 == 8 && v8 == 1 && (v9 | v7 | v10) == 0)
        {
          char v12 = 1;
          sub_1ACA63688(1, 0, 0, 0, 8u);
          sub_1ACA63688(1, 0, 0, 0, 8u);
          return v12 & 1;
        }
      }
      else if (v11 == 8 && (v9 | v7 | v8 | v10) == 0)
      {
        sub_1ACA63688(0, 0, 0, 0, 8u);
        uint64_t v21 = 0;
        uint64_t v22 = 0;
        uint64_t v23 = 0;
        uint64_t v24 = 0;
        unsigned __int8 v25 = 8;
LABEL_58:
        sub_1ACA63688(v21, v22, v23, v24, v25);
        char v12 = 1;
        return v12 & 1;
      }
LABEL_48:
      sub_1ACA639E4(v8, v7, v9, v10, v11);
      sub_1ACA63688(v3, v2, v4, v5, v6);
      uint64_t v30 = v8;
      uint64_t v31 = v7;
      uint64_t v32 = v9;
      uint64_t v33 = v10;
      unsigned __int8 v34 = v11;
LABEL_49:
      sub_1ACA63688(v30, v31, v32, v33, v34);
      goto LABEL_50;
    default:
      if (*((unsigned char *)a2 + 32)) {
        goto LABEL_48;
      }
      sub_1ACA63688(*(void *)a1, v2, v4, v5, 0);
      sub_1ACA63688(v8, v7, v9, v10, 0);
      char v12 = v3 == v8;
      return v12 & 1;
  }
}

unint64_t sub_1ACE39474()
{
  unint64_t result = qword_1EB771120;
  if (!qword_1EB771120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771120);
  }
  return result;
}

unint64_t sub_1ACE394C8()
{
  unint64_t result = qword_1EB771138;
  if (!qword_1EB771138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771138);
  }
  return result;
}

unint64_t sub_1ACE3951C()
{
  unint64_t result = qword_1E99F6748;
  if (!qword_1E99F6748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6748);
  }
  return result;
}

unint64_t sub_1ACE39570()
{
  unint64_t result = qword_1E99F6760;
  if (!qword_1E99F6760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6760);
  }
  return result;
}

unint64_t sub_1ACE395C4()
{
  unint64_t result = qword_1E99F6768;
  if (!qword_1E99F6768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6768);
  }
  return result;
}

unint64_t sub_1ACE39618()
{
  unint64_t result = qword_1E99F6778;
  if (!qword_1E99F6778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6778);
  }
  return result;
}

uint64_t sub_1ACE3966C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F6780);
    sub_1ACE399A4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACE396EC()
{
  unint64_t result = qword_1E99F6790;
  if (!qword_1E99F6790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6790);
  }
  return result;
}

unint64_t sub_1ACE39740()
{
  unint64_t result = qword_1E99F6798;
  if (!qword_1E99F6798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6798);
  }
  return result;
}

unint64_t sub_1ACE39794()
{
  unint64_t result = qword_1E99F67A0;
  if (!qword_1E99F67A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F67A0);
  }
  return result;
}

unint64_t sub_1ACE397E8()
{
  unint64_t result = qword_1E99F67A8;
  if (!qword_1E99F67A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F67A8);
  }
  return result;
}

uint64_t sub_1ACE3983C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACE398A8()
{
  unint64_t result = qword_1E99F67B0;
  if (!qword_1E99F67B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F67B0);
  }
  return result;
}

unint64_t sub_1ACE398FC()
{
  unint64_t result = qword_1E99F67B8;
  if (!qword_1E99F67B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F67B8);
  }
  return result;
}

unint64_t sub_1ACE39950()
{
  unint64_t result = qword_1E99F6820;
  if (!qword_1E99F6820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6820);
  }
  return result;
}

uint64_t sub_1ACE399A4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for MediaIdentifier(uint64_t a1)
{
  return sub_1ACA63688(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for MediaIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1ACA639E4(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for MediaIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1ACA639E4(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1ACA63688(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for MediaIdentifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1ACA63688(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaIdentifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF8 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 248);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 8) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 248;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1ACE39BB0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 7u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 8);
  }
}

uint64_t sub_1ACE39BC8(uint64_t result, unsigned int a2)
{
  if (a2 >= 8)
  {
    *(void *)uint64_t result = a2 - 8;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 8;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MediaIdentifier()
{
  return &type metadata for MediaIdentifier;
}

unsigned char *storeEnumTagSinglePayload for MediaIdentifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE39CC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaIdentifier.CodingKeys()
{
  return &type metadata for MediaIdentifier.CodingKeys;
}

ValueMetadata *type metadata accessor for MediaIdentifier.LibraryCodingKeys()
{
  return &type metadata for MediaIdentifier.LibraryCodingKeys;
}

ValueMetadata *type metadata accessor for MediaIdentifier.PodcastCodingKeys()
{
  return &type metadata for MediaIdentifier.PodcastCodingKeys;
}

ValueMetadata *type metadata accessor for MediaIdentifier.EpisodesCodingKeys()
{
  return &type metadata for MediaIdentifier.EpisodesCodingKeys;
}

ValueMetadata *type metadata accessor for MediaIdentifier.LocalEpisodesCodingKeys()
{
  return &type metadata for MediaIdentifier.LocalEpisodesCodingKeys;
}

ValueMetadata *type metadata accessor for MediaIdentifier.LocalPodcastCodingKeys()
{
  return &type metadata for MediaIdentifier.LocalPodcastCodingKeys;
}

ValueMetadata *type metadata accessor for MediaIdentifier.StationCodingKeys()
{
  return &type metadata for MediaIdentifier.StationCodingKeys;
}

ValueMetadata *type metadata accessor for MediaIdentifier.SnapshotCodingKeys()
{
  return &type metadata for MediaIdentifier.SnapshotCodingKeys;
}

unsigned char *_s18PodcastsFoundation15MediaIdentifierO17StationCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE39E3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaIdentifier.MediaQueryCodingKeys()
{
  return &type metadata for MediaIdentifier.MediaQueryCodingKeys;
}

unsigned char *_s18PodcastsFoundation15MediaIdentifierO17PodcastCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACE39F10);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaIdentifier.UniversalEpisodeIdentifiersCodingKeys()
{
  return &type metadata for MediaIdentifier.UniversalEpisodeIdentifiersCodingKeys;
}

ValueMetadata *type metadata accessor for MediaIdentifier.UpNextCodingKeys()
{
  return &type metadata for MediaIdentifier.UpNextCodingKeys;
}

unint64_t sub_1ACE39F5C()
{
  unint64_t result = qword_1E99F6838;
  if (!qword_1E99F6838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6838);
  }
  return result;
}

unint64_t sub_1ACE39FB4()
{
  unint64_t result = qword_1E99F6840;
  if (!qword_1E99F6840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6840);
  }
  return result;
}

unint64_t sub_1ACE3A00C()
{
  unint64_t result = qword_1E99F6848;
  if (!qword_1E99F6848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6848);
  }
  return result;
}

unint64_t sub_1ACE3A064()
{
  unint64_t result = qword_1E99F6850;
  if (!qword_1E99F6850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6850);
  }
  return result;
}

unint64_t sub_1ACE3A0BC()
{
  unint64_t result = qword_1E99F6858;
  if (!qword_1E99F6858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6858);
  }
  return result;
}

unint64_t sub_1ACE3A114()
{
  unint64_t result = qword_1E99F6860;
  if (!qword_1E99F6860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6860);
  }
  return result;
}

unint64_t sub_1ACE3A16C()
{
  unint64_t result = qword_1E99F6868;
  if (!qword_1E99F6868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6868);
  }
  return result;
}

unint64_t sub_1ACE3A1C4()
{
  unint64_t result = qword_1E99F6870;
  if (!qword_1E99F6870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6870);
  }
  return result;
}

unint64_t sub_1ACE3A21C()
{
  unint64_t result = qword_1E99F6878;
  if (!qword_1E99F6878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6878);
  }
  return result;
}

unint64_t sub_1ACE3A274()
{
  unint64_t result = qword_1EB771150;
  if (!qword_1EB771150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771150);
  }
  return result;
}

unint64_t sub_1ACE3A2CC()
{
  unint64_t result = qword_1EB771148;
  if (!qword_1EB771148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771148);
  }
  return result;
}

unint64_t sub_1ACE3A324()
{
  unint64_t result = qword_1EB771160;
  if (!qword_1EB771160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771160);
  }
  return result;
}

unint64_t sub_1ACE3A37C()
{
  unint64_t result = qword_1EB771158;
  if (!qword_1EB771158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771158);
  }
  return result;
}

unint64_t sub_1ACE3A3D4()
{
  unint64_t result = qword_1EB771180;
  if (!qword_1EB771180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771180);
  }
  return result;
}

unint64_t sub_1ACE3A42C()
{
  unint64_t result = qword_1EB771178;
  if (!qword_1EB771178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771178);
  }
  return result;
}

unint64_t sub_1ACE3A484()
{
  unint64_t result = qword_1EB7711B0;
  if (!qword_1EB7711B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7711B0);
  }
  return result;
}

unint64_t sub_1ACE3A4DC()
{
  unint64_t result = qword_1EB7711A8;
  if (!qword_1EB7711A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7711A8);
  }
  return result;
}

unint64_t sub_1ACE3A534()
{
  unint64_t result = qword_1EB7711A0;
  if (!qword_1EB7711A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7711A0);
  }
  return result;
}

unint64_t sub_1ACE3A58C()
{
  unint64_t result = qword_1EB771198;
  if (!qword_1EB771198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771198);
  }
  return result;
}

unint64_t sub_1ACE3A5E4()
{
  unint64_t result = qword_1EB771170;
  if (!qword_1EB771170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771170);
  }
  return result;
}

unint64_t sub_1ACE3A63C()
{
  unint64_t result = qword_1EB771168;
  if (!qword_1EB771168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771168);
  }
  return result;
}

unint64_t sub_1ACE3A694()
{
  unint64_t result = qword_1EB771190;
  if (!qword_1EB771190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771190);
  }
  return result;
}

unint64_t sub_1ACE3A6EC()
{
  unint64_t result = qword_1EB771188;
  if (!qword_1EB771188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771188);
  }
  return result;
}

unint64_t sub_1ACE3A744()
{
  unint64_t result = qword_1EB771118;
  if (!qword_1EB771118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771118);
  }
  return result;
}

unint64_t sub_1ACE3A79C()
{
  unint64_t result = qword_1EB771110;
  if (!qword_1EB771110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771110);
  }
  return result;
}

unint64_t sub_1ACE3A7F4()
{
  unint64_t result = qword_1EB7711C0;
  if (!qword_1EB7711C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7711C0);
  }
  return result;
}

unint64_t sub_1ACE3A84C()
{
  unint64_t result = qword_1EB7711B8;
  if (!qword_1EB7711B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7711B8);
  }
  return result;
}

unint64_t sub_1ACE3A8A4()
{
  unint64_t result = qword_1EB770B30;
  if (!qword_1EB770B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770B30);
  }
  return result;
}

unint64_t sub_1ACE3A8FC()
{
  unint64_t result = qword_1EB771140;
  if (!qword_1EB771140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771140);
  }
  return result;
}

unint64_t sub_1ACE3A954()
{
  unint64_t result = qword_1EB771130;
  if (!qword_1EB771130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771130);
  }
  return result;
}

unint64_t sub_1ACE3A9AC()
{
  unint64_t result = qword_1EB771128;
  if (!qword_1EB771128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771128);
  }
  return result;
}

uint64_t sub_1ACE3AA00(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7972617262696CLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74736163646F70 && a2 == 0xE700000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365646F73697065 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6970456C61636F6CLL && a2 == 0xED00007365646F73 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646F506C61636F6CLL && a2 == 0xEC00000074736163 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F6974617473 && a2 == 0xE700000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746F687370616E73 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x657551616964656DLL && a2 == 0xEA00000000007972 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001ACED4110 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7478654E7075 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_1ACE3AE4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEB00000000737265;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001ACED4130)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACE3AF54(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496C616974696E69 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t ArtworkModel.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v4 = (int *)type metadata accessor for CategoryModel();
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unsigned __int8 v9 = (char *)&v55 - v8;
  MEMORY[0x1F4188790](v10);
  unsigned __int8 v12 = (char *)&v55 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v17 = (uint64_t *)(a1 + *(int *)(v16 + 44));
  uint64_t v18 = v17[1];
  if (!v18
    || (uint64_t v19 = a1 + v4[13], (*(unsigned char *)(v19 + 8) & 1) != 0)
    || (uint64_t v20 = a1 + v4[12], (*(unsigned char *)(v20 + 8) & 1) != 0)
    || (uint64_t v21 = (uint64_t *)(a1 + v4[10]), (v22 = v21[1]) == 0))
  {
    if (qword_1EB76A5E8 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1ACE754C8();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EB76A5D0);
    sub_1ACA979A0(a1, (uint64_t)v15);
    sub_1ACA979A0(a1, (uint64_t)v12);
    sub_1ACA979A0(a1, (uint64_t)v9);
    sub_1ACA979A0(a1, (uint64_t)v6);
    id v29 = sub_1ACE75498();
    os_log_type_t v30 = sub_1ACE76BE8();
    int v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v59 = v6;
      uint64_t v33 = v32;
      uint64_t v57 = swift_slowAlloc();
      uint64_t v60 = v57;
      *(_DWORD *)uint64_t v33 = 136315906;
      int v56 = v31;
      unsigned __int8 v34 = &v15[v4[11]];
      uint64_t v35 = *((void *)v34 + 1);
      *(void *)&long long v61 = *(void *)v34;
      *((void *)&v61 + 1) = v35;
      swift_bridgeObjectRetain();
      uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
      uint64_t v58 = a2;
      uint64_t v36 = sub_1ACE76228();
      *(void *)&long long v61 = sub_1ACA3189C(v36, v37, &v60);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACA97A04((uint64_t)v15);
      *(_WORD *)(v33 + 12) = 2080;
      char v38 = &v12[v4[13]];
      uint64_t v39 = *(void *)v38;
      LOBYTE(v38) = v38[8];
      *(void *)&long long v61 = v39;
      BYTE8(v61) = (_BYTE)v38;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E0B0);
      uint64_t v40 = sub_1ACE76228();
      *(void *)&long long v61 = sub_1ACA3189C(v40, v41, &v60);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACA97A04((uint64_t)v12);
      *(_WORD *)(v33 + 22) = 2080;
      id v42 = &v9[v4[12]];
      uint64_t v43 = *(void *)v42;
      LOBYTE(v42) = v42[8];
      *(void *)&long long v61 = v43;
      BYTE8(v61) = (_BYTE)v42;
      uint64_t v44 = sub_1ACE76228();
      *(void *)&long long v61 = sub_1ACA3189C(v44, v45, &v60);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACA97A04((uint64_t)v9);
      *(_WORD *)(v33 + 32) = 2080;
      uint64_t v46 = (uint64_t)v59;
      uint64_t v47 = &v59[v4[10]];
      uint64_t v48 = *((void *)v47 + 1);
      *(void *)&long long v61 = *(void *)v47;
      *((void *)&v61 + 1) = v48;
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_1ACE76228();
      *(void *)&long long v61 = sub_1ACA3189C(v49, v50, &v60);
      a2 = v58;
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACA97A04(v46);
      _os_log_impl(&dword_1AC9D5000, v29, (os_log_type_t)v56, "Failed to create artwork from category model. Template: %s Width: %s Height: %s ArtworkColor: %s", (uint8_t *)v33, 0x2Au);
      uint64_t v51 = v57;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v51, -1, -1);
      MEMORY[0x1AD11B340](v33, -1, -1);
    }
    else
    {

      sub_1ACA97A04((uint64_t)v6);
      sub_1ACA97A04((uint64_t)v9);
      sub_1ACA97A04((uint64_t)v12);
      sub_1ACA97A04((uint64_t)v15);
    }
    sub_1ACA97A04(a1);
    sub_1ACDC4C30(&v61);
  }
  else
  {
    uint64_t v59 = v6;
    uint64_t v23 = *v17;
    uint64_t v24 = *(void *)v19;
    uint64_t v25 = *(void *)v20;
    uint64_t v26 = *v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unsigned int v27 = sub_1ACC0B428(v26, v22);
    uint64_t v53 = v27;
    if (qword_1EB773090 != -1) {
      swift_once();
    }
    char v54 = byte_1EB773080;
    sub_1ACA97A04(a1);
    *(void *)&long long v61 = v23;
    *((void *)&v61 + 1) = v18;
    uint64_t v63 = 0;
    uint64_t v62 = 0;
    char v64 = -1;
    uint64_t v65 = v24;
    uint64_t v66 = v25;
    uint64_t v67 = v53;
    char v68 = 0;
    uint64_t v69 = 0;
    char v70 = -1;
    uint64_t v71 = 0;
    char v72 = -1;
    uint64_t v73 = 0;
    char v74 = -1;
    uint64_t v75 = 0;
    int v76 = 16778239;
    uint64_t v77 = 0;
    uint64_t v78 = 0;
    char v79 = v54;
    __int16 v80 = 0;
    uint64_t v81 = 0;
    uint64_t v82 = 0;
    nullsub_1(&v61);
  }
  return sub_1ACDC4C50((uint64_t)&v61, a2);
}

uint64_t ServerPodcastEpisode.isRestricted.getter()
{
  uint64_t v1 = v0;
  if (qword_1EB7712B0 != -1) {
    swift_once();
  }
  BOOL v2 = *(os_unfair_lock_s **)(qword_1EB7712A0 + OBJC_IVAR___PFRestrictionsController__state);
  int v3 = v2 + 4;
  unsigned int v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_1ACA30C84(v3, &v7);
  os_unfair_lock_unlock(v4);
  if (v7)
  {
    if (!*(void *)(*(void *)(v1 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 224)
      || (swift_bridgeObjectRetain(), uint64_t v5 = sub_1ACE775B8(), swift_bridgeObjectRelease(), v5 != 1))
    {
      LOBYTE(v5) = sub_1ACE77848();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v5) = 0;
  }
  return v5 & 1;
}

BOOL static StorePurchaseError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StorePurchaseError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t StorePurchaseError.hashValue.getter()
{
  return sub_1ACE77B78();
}

id StorePurchaseTask.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id StorePurchaseTask.init()()
{
  id v1 = &v0[OBJC_IVAR____TtC18PodcastsFoundation17StorePurchaseTask_uiDelegate];
  BOOL v2 = (objc_class *)type metadata accessor for StorePurchaseTask();
  *(_OWORD *)id v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  v4.receiver = v0;
  v4.super_class = v2;
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for StorePurchaseTask()
{
  return self;
}

uint64_t sub_1ACE3B918(uint64_t a1, void *a2)
{
  sub_1ACE3B9D4(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation17StorePurchaseTask_uiDelegate;
  swift_beginAccess();
  sub_1ACE3BA98((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_1ACE3B980@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation17StorePurchaseTask_uiDelegate;
  swift_beginAccess();
  return sub_1ACE3B9D4(v3, a1);
}

uint64_t sub_1ACE3B9D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB767BF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACE3BA3C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation17StorePurchaseTask_uiDelegate;
  swift_beginAccess();
  sub_1ACE3BA98(a1, v3);
  return swift_endAccess();
}

uint64_t sub_1ACE3BA98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB767BF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1ACE3BB00())()
{
  return j__swift_endAccess;
}

void sub_1ACE3BB60(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unint64_t *a5, void *a6, uint64_t a7, void (*a8)(void), uint64_t a9)
{
  unint64_t v13 = *a5;
  id v14 = objc_allocWithZone(MEMORY[0x1E4F4DC00]);
  swift_bridgeObjectRetain();
  uint64_t v15 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v14, sel_initWithString_, v15);

  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DDD8]), sel_initWithPurchaseType_buyParams_, 3, v16);
  objc_msgSend(v17, sel_setUserInitiated_, v13 & 1);
  objc_msgSend(v17, sel_setRequiresAccount_, (v13 >> 1) & 1);
  if (a6) {
    a6 = (void *)sub_1ACE75FC8();
  }
  objc_msgSend(v17, sel_setMetricsOverlay_, a6);

  if (a4) {
    a4 = (void *)sub_1ACE76178();
  }
  objc_msgSend(v17, sel_setPresentingSceneIdentifier_, a4);

  sub_1ACE3C3BC(v17, a7, a8, a9);
}

uint64_t sub_1ACE3BCFC(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v46 = a4;
  uint64_t v8 = sub_1ACE754C8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v39 - v13;
  if (a2)
  {
    uint64_t v15 = (void *)sub_1ACE74D68();
    if (qword_1EB772290 != -1) {
      swift_once();
    }
    uint64_t v16 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB766B88);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v16, v8);
    id v17 = a3;
    id v18 = v15;
    id v19 = v17;
    uint64_t v20 = v18;
    uint64_t v21 = sub_1ACE75498();
    os_log_type_t v22 = sub_1ACE76BE8();
    int v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v43 = v9;
      uint64_t v25 = v24;
      uint64_t v40 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 138412546;
      uint64_t v44 = a2;
      uint64_t v45 = a5;
      uint64_t v47 = v20;
      int v42 = v23;
      uint64_t v41 = v8;
      uint64_t v26 = v20;
      sub_1ACE76FF8();
      unsigned int v27 = v40;
      *uint64_t v40 = v20;

      *(_WORD *)(v25 + 12) = 2112;
      uint64_t v28 = objc_msgSend(v19, sel_buyParams);
      uint64_t v47 = v28;
      uint64_t v8 = v41;
      sub_1ACE76FF8();
      v27[1] = v28;
      a2 = v44;

      _os_log_impl(&dword_1AC9D5000, v21, (os_log_type_t)v42, "Purchase completed with error: %@. buyParams %@", (uint8_t *)v25, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v27, -1, -1);
      uint64_t v29 = v25;
      uint64_t v9 = v43;
      MEMORY[0x1AD11B340](v29, -1, -1);
    }
    else
    {

      uint64_t v21 = v20;
    }
  }
  else
  {
    if (qword_1EB772290 != -1) {
      swift_once();
    }
    uint64_t v30 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB766B88);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, v30, v8);
    int v31 = a3;
    uint64_t v21 = sub_1ACE75498();
    os_log_type_t v32 = sub_1ACE76C08();
    if (os_log_type_enabled(v21, v32))
    {
      uint64_t v44 = 0;
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v43 = v9;
      uint64_t v35 = (void *)v34;
      uint64_t v45 = a5;
      *(_DWORD *)uint64_t v33 = 138412290;
      uint64_t v36 = [v31 buyParams];
      uint64_t v47 = v36;
      a2 = v44;
      sub_1ACE76FF8();
      *uint64_t v35 = v36;

      _os_log_impl(&dword_1AC9D5000, v21, v32, "Purchase completed successfully %@", v33, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      unint64_t v37 = v35;
      uint64_t v9 = v43;
      MEMORY[0x1AD11B340](v37, -1, -1);
      MEMORY[0x1AD11B340](v33, -1, -1);
    }
    else
    {

      uint64_t v21 = v31;
    }
    uint64_t v11 = v14;
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v46(a2);
}

id StorePurchaseTask.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StorePurchaseTask();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1ACE3C238@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone(v1), sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_1ACE3C270@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC18PodcastsFoundation17StorePurchaseTask_uiDelegate;
  swift_beginAccess();
  return sub_1ACE3B9D4(v3, a1);
}

uint64_t sub_1ACE3C2C8(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC18PodcastsFoundation17StorePurchaseTask_uiDelegate;
  swift_beginAccess();
  sub_1ACE3BA98(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1ACE3C328())()
{
  return j_j__swift_endAccess;
}

void sub_1ACE3C388(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unint64_t *a5, void *a6, uint64_t a7, void (*a8)(void), uint64_t a9)
{
}

void sub_1ACE3C3BC(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v46 = a4;
  uint64_t v47 = sub_1ACE754C8();
  uint64_t v8 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v44 - v10;
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v44 - v13;
  id v15 = objc_msgSend(self, sel_ams_sharedAccountStore);
  id v16 = objc_msgSend(v15, sel_ams_activeiTunesAccount);

  objc_msgSend(a1, sel_setAccount_, v16);
  uint64_t v17 = v4 + OBJC_IVAR____TtC18PodcastsFoundation17StorePurchaseTask_uiDelegate;
  swift_beginAccess();
  sub_1ACE3B9D4(v17, (uint64_t)&aBlock);
  if (v50)
  {
    sub_1ACA3AABC(&aBlock, (uint64_t)v53);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = 0;
    uint64_t v19 = v54;
    uint64_t v20 = v55;
    __swift_project_boxed_opaque_existential_1(v53, v54);
    *(void *)(v18 + 16) = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v20 + 32))(a1, a2, v19, v20);
    uint64_t v29 = v47;
    if (qword_1EB772290 != -1) {
      swift_once();
    }
    uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1EB766B88);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v14, v30, v29);
    int v31 = a1;
    os_log_type_t v32 = sub_1ACE75498();
    os_log_type_t v33 = sub_1ACE76C08();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v44 = v18;
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = (void (*)(void))swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 138412290;
      id v35 = [v31 buyParams];
      *(void *)&long long aBlock = v35;
      uint64_t v18 = v44;
      sub_1ACE76FF8();
      uint64_t v36 = v45;
      *(void *)uint64_t v45 = v35;

      _os_log_impl(&dword_1AC9D5000, v32, v33, "Starting purchase with buyParams: %@", v34, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v36, -1, -1);
      uint64_t v29 = v47;
      MEMORY[0x1AD11B340](v34, -1, -1);
    }
    else
    {

      os_log_type_t v32 = v31;
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v29);
    uint64_t v39 = *(void **)(v18 + 16);
    if (v39)
    {
      id v40 = objc_msgSend(v39, sel_performPurchase);
      uint64_t v41 = (void *)swift_allocObject();
      long long v41[2] = v31;
      v41[3] = a3;
      v41[4] = v46;
      v41[5] = v18;
      uint64_t v51 = sub_1ACE3D240;
      uint64_t v52 = v41;
      *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      uint64_t v49 = sub_1ACAA3910;
      unint64_t v50 = &block_descriptor_92;
      int v42 = _Block_copy(&aBlock);
      uint64_t v43 = v31;
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v40, sel_addFinishBlock_, v42);
      _Block_release(v42);
      swift_release();
    }
    else
    {
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v53);
  }
  else
  {
    uint64_t v45 = a3;
    sub_1ACA50E78((uint64_t)&aBlock, &qword_1EB767BF8);
    if (qword_1EB772290 != -1) {
      swift_once();
    }
    uint64_t v21 = v47;
    uint64_t v22 = __swift_project_value_buffer(v47, (uint64_t)qword_1EB766B88);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v22, v21);
    int v23 = a1;
    uint64_t v24 = sub_1ACE75498();
    os_log_type_t v25 = sub_1ACE76BE8();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      unsigned int v27 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 138412290;
      id v28 = [v23 buyParams];
      v53[0] = v28;
      sub_1ACE76FF8();
      void *v27 = v28;

      _os_log_impl(&dword_1AC9D5000, v24, v25, "Failed to purchase because there is no UI delegate, buyParams: %@", v26, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v27, -1, -1);
      MEMORY[0x1AD11B340](v26, -1, -1);
    }
    else
    {

      uint64_t v24 = v23;
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v47);
    sub_1ACE3D16C();
    unint64_t v37 = (void *)swift_allocError();
    *char v38 = 0;
    v45();
  }
}

uint64_t sub_1ACE3CCF8()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F4DC00]);
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithString_, v1);

  if (objc_msgSend(v2, sel_parameterForKey_, *MEMORY[0x1E4F4DA30]))
  {
    sub_1ACE770C8();

    swift_unknownObjectRelease();
  }
  else
  {

    memset(v5, 0, sizeof(v5));
  }
  sub_1ACA9D6FC((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast()) {
      return v4;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1ACA50E78((uint64_t)v6, qword_1EB7725E0);
    return 0;
  }
}

unint64_t sub_1ACE3CE30()
{
  unint64_t result = qword_1E99F6888;
  if (!qword_1E99F6888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6888);
  }
  return result;
}

uint64_t sub_1ACE3CE84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18PodcastsFoundation17StorePurchaseTask_uiDelegate;
  swift_beginAccess();
  return sub_1ACE3B9D4(v3, a2);
}

unsigned char *storeEnumTagSinglePayload for StorePurchaseError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE3CFACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorePurchaseError()
{
  return &type metadata for StorePurchaseError;
}

uint64_t dispatch thunk of StorePurchaseDelegate.handle(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of StorePurchaseDelegate.createAMSUIPurchaseTask(from:senderWindow:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t method lookup function for StorePurchaseTask(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StorePurchaseTask);
}

uint64_t dispatch thunk of StorePurchaseTask.uiDelegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of StorePurchaseTask.uiDelegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of StorePurchaseTask.uiDelegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of StorePurchaseTask.productId(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of StorePurchaseTask.purchaseItem(with:presentingSceneIdentifier:options:metricsOverlay:senderWindow:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

unint64_t sub_1ACE3D16C()
{
  unint64_t result = qword_1E99F6890;
  if (!qword_1E99F6890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6890);
  }
  return result;
}

uint64_t sub_1ACE3D1C0()
{
  return swift_deallocObject();
}

uint64_t sub_1ACE3D1F8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACE3D240(uint64_t a1, uint64_t a2)
{
  return sub_1ACE3BCFC(a1, a2, *(void **)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t ImageCacheDeleteLevels.original.getter()
{
  return *v0;
}

uint64_t ImageCacheDeleteLevels.resizes.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

PodcastsFoundation::ImageCacheDeleteLevels __swiftcall ImageCacheDeleteLevels.init(original:resizes:)(PodcastsFoundation::CacheDeleteUrgency original, PodcastsFoundation::CacheDeleteUrgency resizes)
{
  *uint64_t v2 = original;
  *((unsigned char *)v2 + 1) = resizes;
  result.original = original;
  return result;
}

uint64_t getEnumTagSinglePayload for ImageCacheDeleteLevels(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 65284 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65284 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65284;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65284;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65284;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageCacheDeleteLevels(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65284 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65284 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 16) + 1;
    *(_WORD *)PodcastsFoundation::ImageCacheDeleteLevels result = a2 - 252;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE3D3C8);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)PodcastsFoundation::ImageCacheDeleteLevels result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageCacheDeleteLevels()
{
  return &type metadata for ImageCacheDeleteLevels;
}

unint64_t static String.CloudSyncKeys.podcastsDomainVersionKey.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1ACE3D41C()
{
  uint64_t result = sub_1ACE761B8();
  qword_1EB76A7D8 = result;
  unk_1EB76A7E0 = v1;
  return result;
}

uint64_t static String.CloudSyncKeys.isLibrarySyncEnabled.getter()
{
  return sub_1ACE3E364(&qword_1EB769488, &qword_1EB76A7D8);
}

unint64_t static String.CloudSyncKeys.subscriptionSyncIsDirty.getter()
{
  return 0xD000000000000014;
}

unint64_t static String.CloudSyncKeys.subscriptionV1LastSyncTimestamp.getter()
{
  return 0xD00000000000002ELL;
}

unint64_t static String.CloudSyncKeys.subscriptionV3SyncIsDirty.getter()
{
  return 0xD000000000000016;
}

unint64_t static String.CloudSyncKeys.subscriptionV3LastSyncTimestamp.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t static String.CloudSyncKeys.subscriptionV1SyncVersion.getter()
{
  return 0x6556636E7953544DLL;
}

uint64_t static String.CloudSyncKeys.subscriptionV3SyncVersion.getter()
{
  return 0x6556636E7953544DLL;
}

unint64_t static String.CloudSyncKeys.syncVersionFlagsKeyPath.getter()
{
  return 0xD000000000000010;
}

unint64_t static String.CloudSyncKeys.nonFollowedShowsSyncIsDirty.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static String.CloudSyncKeys.nonFollowedShowsLastSyncTimestamp.getter()
{
  return 0xD00000000000002ALL;
}

unint64_t static String.CloudSyncKeys.nonFollowedShowsSyncVersion.getter()
{
  return 0xD000000000000024;
}

unint64_t static String.CloudSyncKeys.interestSyncIsDirty.getter()
{
  return 0xD000000000000016;
}

unint64_t static String.CloudSyncKeys.interestLastSyncTimestamp.getter()
{
  return 0xD000000000000024;
}

unint64_t static String.CloudSyncKeys.interestSyncVersion.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static String.CloudSyncKeys.playlistSyncIsDirty.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static String.CloudSyncKeys.bookmarksSyncIsDirty.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static String.CloudSyncKeys.bookmarksDRMSyncIsDirty.getter()
{
  return 0xD000000000000020;
}

unint64_t static String.Processor.base.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_1ACE3D660()
{
  sub_1ACE77268();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB7709A8 = 0xD000000000000045;
  *(void *)algn_1EB7709B0 = 0x80000001ACED4410;
  return result;
}

uint64_t static String.Processor.predicateConstructionBatchSize.getter()
{
  return sub_1ACE3E364(&qword_1EB7709C0, &qword_1EB7709A8);
}

uint64_t sub_1ACE3D6EC()
{
  sub_1ACE77268();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB76E028 = 0xD000000000000035;
  unk_1EB76E030 = 0x80000001ACED4460;
  return result;
}

uint64_t static String.Processor.minimumDeviceSpace.getter()
{
  return sub_1ACE3E364(&qword_1EB76E038, &qword_1EB76E028);
}

unint64_t static String.Processor.AutoDownload.base.getter()
{
  return 0xD000000000000033;
}

uint64_t sub_1ACE3D794(uint64_t a1)
{
  return sub_1ACE3D818(a1, 0x80000001ACED4200, qword_1EB770990, &qword_1EB770990[1]);
}

uint64_t static String.Processor.AutoDownload.debounceInterval.getter()
{
  return sub_1ACE3E364(&qword_1EB7709A0, qword_1EB770990);
}

unint64_t static String.Processor.AssetRemoval.base.getter()
{
  return 0xD000000000000033;
}

uint64_t sub_1ACE3D7F8(uint64_t a1)
{
  return sub_1ACE3D818(a1, 0x80000001ACED4240, qword_1EB770970, &qword_1EB770970[1]);
}

uint64_t sub_1ACE3D818(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  sub_1ACE77268();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1ACE762C8();
  *a3 = 0xD000000000000033;
  *a4 = a2;
  return result;
}

uint64_t static String.Processor.AssetRemoval.debounceInterval.getter()
{
  return sub_1ACE3E364(&qword_1EB770988, qword_1EB770970);
}

unint64_t static String.Account.lastSignedInDSIDKey.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_1ACE3D8F0()
{
  sub_1ACE77268();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  uint64_t result = sub_1ACE762C8();
  qword_1E99F6898 = 0x5F6775626544;
  unk_1E99F68A0 = 0xE600000000000000;
  return result;
}

uint64_t static String.Tips.Popover.presentationDelay.getter()
{
  return sub_1ACE3E364(&qword_1E99F0110, &qword_1E99F6898);
}

uint64_t sub_1ACE3D9C0()
{
  sub_1ACE77268();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB7717D8 = 0xD00000000000001ALL;
  unk_1EB7717E0 = 0x80000001ACED43B0;
  return result;
}

uint64_t sub_1ACE3DA24()
{
  if (qword_1EB7717E8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB7717D8;
  uint64_t v2 = unk_1EB7717E0;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1ACE762C8();
  qword_1EB7717F0 = v1;
  *(void *)algn_1EB7717F8 = v2;
  return result;
}

uint64_t sub_1ACE3DAB8()
{
  if (qword_1EB771800 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB7717F0;
  uint64_t v2 = *(void *)algn_1EB7717F8;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1ACE762C8();
  qword_1EB771808 = v1;
  unk_1EB771810 = v2;
  return result;
}

uint64_t static String.Tips.AddFavoriteCategories.Button.dismissed.getter()
{
  return sub_1ACE3E364(&qword_1EB771818, &qword_1EB771808);
}

uint64_t sub_1ACE3DB78()
{
  if (qword_1EB771800 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB7717F0;
  uint64_t v2 = *(void *)algn_1EB7717F8;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1ACE762C8();
  qword_1EB771820 = v1;
  *(void *)algn_1EB771828 = v2;
  return result;
}

uint64_t static String.Tips.AddFavoriteCategories.Button.presented.getter()
{
  return sub_1ACE3E364(&qword_1EB771830, &qword_1EB771820);
}

uint64_t sub_1ACE3DC38()
{
  if (qword_1EB7717E8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB7717D8;
  uint64_t v2 = unk_1EB7717E0;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1ACE762C8();
  qword_1EB771838 = v1;
  unk_1EB771840 = v2;
  return result;
}

uint64_t sub_1ACE3DCCC()
{
  if (qword_1EB771848 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB771838;
  uint64_t v2 = unk_1EB771840;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1ACE762C8();
  qword_1EB771850 = v1;
  *(void *)algn_1EB771858 = v2;
  return result;
}

uint64_t static String.Tips.AddFavoriteCategories.Search.dismissed.getter()
{
  return sub_1ACE3E364(&qword_1EB771860, &qword_1EB771850);
}

uint64_t sub_1ACE3DD8C()
{
  if (qword_1EB771848 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB771838;
  uint64_t v2 = unk_1EB771840;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1ACE762C8();
  qword_1E99F68A8 = v1;
  unk_1E99F68B0 = v2;
  return result;
}

uint64_t static String.Tips.AddFavoriteCategories.Search.presented.getter()
{
  return sub_1ACE3E364(qword_1E99F0118, &qword_1E99F68A8);
}

uint64_t sub_1ACE3DE4C()
{
  sub_1ACE77268();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB771760 = 0xD000000000000014;
  *(void *)algn_1EB771768 = 0x80000001ACED4390;
  return result;
}

uint64_t sub_1ACE3DEB0()
{
  if (qword_1EB771770 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB771760;
  uint64_t v2 = *(void *)algn_1EB771768;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1ACE762C8();
  qword_1EB771778 = v1;
  unk_1EB771780 = v2;
  return result;
}

uint64_t static String.Tips.CategoriesSaved.dismissed.getter()
{
  return sub_1ACE3E364(&qword_1EB770B88, &qword_1EB771778);
}

uint64_t sub_1ACE3DF70()
{
  if (qword_1EB771770 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB771760;
  uint64_t v2 = *(void *)algn_1EB771768;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1ACE762C8();
  qword_1EB771788 = v1;
  *(void *)algn_1EB771790 = v2;
  return result;
}

uint64_t static String.Tips.CategoriesSaved.presented.getter()
{
  return sub_1ACE3E364(&qword_1EB7717A0, &qword_1EB771788);
}

uint64_t sub_1ACE3E030()
{
  sub_1ACE77268();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB7717A8 = 0xD000000000000017;
  unk_1EB7717B0 = 0x80000001ACED4370;
  return result;
}

uint64_t sub_1ACE3E094()
{
  if (qword_1EB7717B8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB7717A8;
  uint64_t v2 = unk_1EB7717B0;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1ACE762C8();
  qword_1EB7717C0 = v1;
  *(void *)algn_1EB7717C8 = v2;
  return result;
}

uint64_t static String.Tips.NotFindingAnything.dismissed.getter()
{
  return sub_1ACE3E364(&qword_1EB7717D0, &qword_1EB7717C0);
}

uint64_t sub_1ACE3E154()
{
  sub_1ACE77268();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1E99F68B8 = 0xD000000000000047;
  unk_1E99F68C0 = 0x80000001ACED4320;
  return result;
}

uint64_t static String.Tips.RemoveAbandonedDownloads.dismissed.getter()
{
  return sub_1ACE3E364(&qword_1E99F0128, &qword_1E99F68B8);
}

uint64_t sub_1ACE3E1E0()
{
  uint64_t result = sub_1ACE762C8();
  qword_1E99F68C8 = 0xD000000000000011;
  unk_1E99F68D0 = 0x80000001ACED42E0;
  return result;
}

uint64_t static String.Tips.StayUpToDate.dismissed.getter()
{
  return sub_1ACE3E364(&qword_1E99F0130, &qword_1E99F68C8);
}

unint64_t static String.Tips.StayUpToDate.presented.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_1ACE3E294()
{
  sub_1ACE77268();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  uint64_t result = sub_1ACE762C8();
  qword_1E99F68D8 = 0x5F6775626544;
  unk_1E99F68E0 = 0xE600000000000000;
  return result;
}

uint64_t static String.Tips.StayUpToDate.minimumFollowedShowCount.getter()
{
  return sub_1ACE3E364(qword_1E99F0138, &qword_1E99F68D8);
}

uint64_t sub_1ACE3E364(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

unint64_t static String.Player.adamIDOfColdStartQueuedEpisode.getter()
{
  return 0xD00000000000001ELL;
}

ValueMetadata *type metadata accessor for String.CloudSyncKeys()
{
  return &type metadata for String.CloudSyncKeys;
}

ValueMetadata *type metadata accessor for String.Processor()
{
  return &type metadata for String.Processor;
}

ValueMetadata *type metadata accessor for String.Processor.AutoDownload()
{
  return &type metadata for String.Processor.AutoDownload;
}

ValueMetadata *type metadata accessor for String.Processor.AssetRemoval()
{
  return &type metadata for String.Processor.AssetRemoval;
}

ValueMetadata *type metadata accessor for String.Account()
{
  return &type metadata for String.Account;
}

ValueMetadata *type metadata accessor for String.Tips()
{
  return &type metadata for String.Tips;
}

ValueMetadata *type metadata accessor for String.Tips.Popover()
{
  return &type metadata for String.Tips.Popover;
}

ValueMetadata *type metadata accessor for String.Tips.AddFavoriteCategories()
{
  return &type metadata for String.Tips.AddFavoriteCategories;
}

ValueMetadata *type metadata accessor for String.Tips.AddFavoriteCategories.Button()
{
  return &type metadata for String.Tips.AddFavoriteCategories.Button;
}

ValueMetadata *type metadata accessor for String.Tips.AddFavoriteCategories.Search()
{
  return &type metadata for String.Tips.AddFavoriteCategories.Search;
}

ValueMetadata *type metadata accessor for String.Tips.CategoriesSaved()
{
  return &type metadata for String.Tips.CategoriesSaved;
}

ValueMetadata *type metadata accessor for String.Tips.NotFindingAnything()
{
  return &type metadata for String.Tips.NotFindingAnything;
}

ValueMetadata *type metadata accessor for String.Tips.RemoveAbandonedDownloads()
{
  return &type metadata for String.Tips.RemoveAbandonedDownloads;
}

ValueMetadata *type metadata accessor for String.Tips.StayUpToDate()
{
  return &type metadata for String.Tips.StayUpToDate;
}

ValueMetadata *type metadata accessor for String.Player()
{
  return &type metadata for String.Player;
}

uint64_t CoreDataDownloadPersistence.__allocating_init(libraryContext:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

id CoreDataDownloadPersistence.libraryContext.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t CoreDataDownloadPersistence.init(libraryContext:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_1ACE3E50C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DB60);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v2;
  *(void *)(v8 + 24) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DF88);
  swift_allocObject();
  swift_retain();
  id v9 = a1;
  v12[1] = sub_1ACE75A18();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DBE0);
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DF78, &qword_1EB76DF88);
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DBD0, &qword_1EB76DBE0);
  sub_1ACE75C68();
  swift_release();
  sub_1ACA51EA4(&qword_1EB76DB58, &qword_1EB76DB60);
  uint64_t v10 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v10;
}

void sub_1ACE3E748(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  id v9 = *(void **)(a3 + 16);
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = sub_1ACB2DC40;
  v10[3] = v8;
  _OWORD v10[4] = a3;
  v10[5] = a4;
  void v13[4] = sub_1ACE3ED84;
  v13[5] = v10;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  id v13[2] = sub_1ACA6DA9C;
  v13[3] = &block_descriptor_93;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  id v12 = a4;
  swift_release();
  objc_msgSend(v9, sel_performBlock_, v11);
  _Block_release(v11);
}

void sub_1ACE3E87C(uint64_t a1, uint64_t a2)
{
  sub_1ACE3E748(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

void sub_1ACE3E884(void (*a1)(void *, void), int a2, int a3, id a4)
{
  objc_msgSend(a4, sel_setResultType_, 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E1A0);
  unint64_t v5 = sub_1ACE76EE8();
  uint64_t v6 = (void *)sub_1ACC2BF44(v5);
  swift_bridgeObjectRelease();
  if (!v6) {
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  }
  a1(v6, 0);
  sub_1ACAC1E88(v6, 0);
}

uint64_t sub_1ACE3E960()
{
  return sub_1ACE75728();
}

uint64_t CoreDataDownloadPersistence.deinit()
{
  return v0;
}

uint64_t CoreDataDownloadPersistence.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1ACE3EA50(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DB60);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DF88);
  swift_allocObject();
  swift_retain();
  id v9 = a1;
  v12[1] = sub_1ACE75A18();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DBE0);
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DF78, &qword_1EB76DF88);
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DBD0, &qword_1EB76DBE0);
  sub_1ACE75C68();
  swift_release();
  sub_1ACA51EA4(&qword_1EB76DB58, &qword_1EB76DB60);
  uint64_t v10 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v10;
}

uint64_t type metadata accessor for CoreDataDownloadPersistence()
{
  return self;
}

uint64_t method lookup function for CoreDataDownloadPersistence(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CoreDataDownloadPersistence);
}

uint64_t dispatch thunk of CoreDataDownloadPersistence.__allocating_init(libraryContext:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of CoreDataDownloadPersistence.information(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t sub_1ACE3ED04()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACE3ED3C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1ACE3ED84()
{
  sub_1ACE3E884(*(void (**)(void *, void))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(id *)(v0 + 40));
}

void sub_1ACE3ED94(uint64_t a1@<X0>, char *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C9C8]), sel_initWithTimeIntervalSinceReferenceDate_, a4);
  double v9 = a3 - a4;
  if (a3 - a4 >= 60.0)
  {
    if (v9 >= 3600.0)
    {
      if (v9 >= 86400.0)
      {
        if (v9 >= 604800.0)
        {
          id v15 = (void *)sub_1ACE75008();
          unsigned int v16 = objc_msgSend(v8, sel_inSameYearAs_, v15);

          uint64_t v17 = sub_1ACE750A8();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a1, v17);
          if (v16) {
            char v11 = 4;
          }
          else {
            char v11 = 5;
          }
        }
        else
        {
          uint64_t v14 = sub_1ACE750A8();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);

          char v11 = 3;
        }
      }
      else
      {
        uint64_t v13 = sub_1ACE750A8();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);

        char v11 = 2;
      }
    }
    else
    {
      uint64_t v12 = sub_1ACE750A8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);

      char v11 = 1;
    }
  }
  else
  {
    uint64_t v10 = sub_1ACE750A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);

    char v11 = 0;
  }
  *a2 = v11;
}

BOOL static TimeSpan.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TimeSpan.hash(into:)()
{
  return sub_1ACE77B28();
}

BOOL static TimeSpan.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t TimeSpan.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t AbbreviatedTimeIntervalFormatter.Configuration.init(relativeTo:currentYearReferenceDate:allowedSpan:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7 = *a3;
  uint64_t v8 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration();
  uint64_t v9 = *(int *)(v8 + 24);
  uint64_t v10 = sub_1ACE750A8();
  char v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(a4, a1, v10);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(a4 + *(int *)(v8 + 20), a2, v10);
  *(unsigned char *)(a4 + v9) = v7;
  return result;
}

void sub_1ACE3F124(uint64_t a1)
{
}

void sub_1ACE3F148(uint64_t a1)
{
}

void sub_1ACE3F164(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  uint64_t v6 = (void *)sub_1ACE76178();
  objc_msgSend(v5, sel_setLocalizedDateFormatFromTemplate_, v6);

  *a4 = v5;
}

uint64_t static AbbreviatedTimeIntervalFormatter.string(from:relativeTo:currentYearReferenceDate:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772E38);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE750A8();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v8, a1, v9);
  uint64_t v11 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration();
  v10(&v8[*(int *)(v11 + 20)], a2, v9);
  v8[*(int *)(v11 + 24)] = 6;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 0, 1, v11);
  uint64_t v12 = _s18PodcastsFoundation32AbbreviatedTimeIntervalFormatterO6string4from13configurationSSSd_AC13ConfigurationVSgtFZ_0((uint64_t)v8, a3);
  sub_1ACE3FB2C((uint64_t)v8);
  return v12;
}

uint64_t _s18PodcastsFoundation32AbbreviatedTimeIntervalFormatterO6string4from13configurationSSSd_AC13ConfigurationVSgtFZ_0(uint64_t a1, double a2)
{
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v33[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772E38);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v33[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ACA7C978(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1ACE75098();
    sub_1ACE75098();
    v14[*(int *)(v11 + 24)] = 6;
    sub_1ACE3FB2C((uint64_t)v10);
  }
  else
  {
    sub_1ACE403BC((uint64_t)v10, (uint64_t)v14);
  }
  sub_1ACE74FB8();
  double v16 = v15 - a2;
  if (v15 - a2 <= 0.0)
  {
    if (qword_1EB76CF08 != -1) {
      swift_once();
    }
    int v23 = (void *)qword_1EB76CF00;
    sub_1ACE74FA8();
    id v24 = (id)sub_1ACE75008();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    id v25 = objc_msgSend(v23, sel_stringFromDate_, v24);
    goto LABEL_17;
  }
  uint64_t v17 = &v14[*(int *)(v11 + 20)];
  sub_1ACE74FB8();
  double v19 = v18;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v7, v17, v4);
  sub_1ACE3ED94((uint64_t)v7, (char *)&v34, v19, a2);
  unsigned int v20 = v14[*(int *)(v11 + 24)];
  if (v20 == 6 || v34 >= v20)
  {
    switch(v34)
    {
      case 1u:
        if (qword_1EB7730A8 != -1) {
          swift_once();
        }
        sub_1ACE74C48();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_1ACE843F0;
        double v29 = v16 / 60.0;
        if ((~COERCE__INT64(v16 / 60.0) & 0x7FF0000000000000) != 0)
        {
          if (v29 > -9.22337204e18)
          {
            if (v29 < 9.22337204e18) {
              goto LABEL_34;
            }
            __break(1u);
LABEL_25:
            if (qword_1EB7730A8 == -1) {
              goto LABEL_26;
            }
            goto LABEL_40;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
LABEL_40:
        swift_once();
LABEL_26:
        sub_1ACE74C48();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_1ACE843F0;
        double v29 = v16 / 3600.0;
        if ((~COERCE__INT64(v16 / 3600.0) & 0x7FF0000000000000) != 0)
        {
          if (v29 > -9.22337204e18)
          {
            if (v29 >= 9.22337204e18)
            {
              __break(1u);
LABEL_30:
              if (qword_1EB7730A8 == -1)
              {
LABEL_31:
                sub_1ACE74C48();
                uint64_t v7 = v30;
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
                uint64_t v28 = swift_allocObject();
                *(_OWORD *)(v28 + 16) = xmmword_1ACE843F0;
                double v29 = v16 / 86400.0;
                if ((~COERCE__INT64(v16 / 86400.0) & 0x7FF0000000000000) != 0)
                {
                  if (v29 > -9.22337204e18)
                  {
                    if (v29 < 9.22337204e18) {
                      goto LABEL_34;
                    }
                    goto LABEL_46;
                  }
                }
                else
                {
                  __break(1u);
                }
                __break(1u);
LABEL_46:
                __break(1u);
LABEL_47:
                swift_once();
LABEL_37:
                os_log_type_t v32 = (void *)qword_1EB772E30;
                sub_1ACE74FA8();
                id v24 = (id)sub_1ACE75008();
                (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
                id v25 = objc_msgSend(v32, sel_stringFromDate_, v24);
LABEL_17:
                id v26 = v25;

                uint64_t v22 = sub_1ACE761B8();
                goto LABEL_18;
              }
LABEL_43:
              swift_once();
              goto LABEL_31;
            }
LABEL_34:
            uint64_t v31 = MEMORY[0x1E4FBB5C8];
            *(void *)(v28 + 56) = MEMORY[0x1E4FBB550];
            *(void *)(v28 + 64) = v31;
            *(void *)(v28 + 32) = (uint64_t)v29;
            uint64_t v22 = sub_1ACE76188();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_43;
      case 2u:
        goto LABEL_25;
      case 3u:
        goto LABEL_30;
      case 4u:
        id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C9C8]), sel_initWithTimeIntervalSinceReferenceDate_, a2);
        id v25 = objc_msgSend(v24, sel_microDateString);
        goto LABEL_17;
      case 5u:
        if (qword_1EB772920 == -1) {
          goto LABEL_37;
        }
        goto LABEL_47;
      default:
        break;
    }
  }
  if (qword_1EB7730A8 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1ACE74C48();
LABEL_18:
  sub_1ACE40360((uint64_t)v14);
  return v22;
}

uint64_t type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration()
{
  uint64_t result = qword_1EB772928;
  if (!qword_1EB772928) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACE3FB2C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772E38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1ACE3FB90()
{
  unint64_t result = qword_1E99F68E8;
  if (!qword_1E99F68E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F68E8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TimeSpan(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE3FCB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeSpan()
{
  return &type metadata for TimeSpan;
}

ValueMetadata *type metadata accessor for AbbreviatedTimeIntervalFormatter()
{
  return &type metadata for AbbreviatedTimeIntervalFormatter;
}

void *initializeBufferWithCopyOfBuffer for AbbreviatedTimeIntervalFormatter.Configuration(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1ACE750A8();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((void *)((char *)a1 + *(int *)(a3 + 20)), (void *)((char *)a2 + *(int *)(a3 + 20)), v7);
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for AbbreviatedTimeIntervalFormatter.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  return v7(v5, v4);
}

uint64_t initializeWithCopy for AbbreviatedTimeIntervalFormatter.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for AbbreviatedTimeIntervalFormatter.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for AbbreviatedTimeIntervalFormatter.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for AbbreviatedTimeIntervalFormatter.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for AbbreviatedTimeIntervalFormatter.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACE40130);
}

uint64_t sub_1ACE40130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) <= 6u) {
      int v10 = 6;
    }
    else {
      int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    }
    unsigned int v11 = v10 - 6;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) >= 6u) {
      return v11;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for AbbreviatedTimeIntervalFormatter.Configuration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACE4020C);
}

uint64_t sub_1ACE4020C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1ACE750A8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 6;
  }
  return result;
}

uint64_t sub_1ACE402C8()
{
  uint64_t result = sub_1ACE750A8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1ACE40360(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ACE403BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t CoreDataEpisodeAssetIssueIdentifier.init(analyticsChannel:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t CoreDataEpisodeAssetIssueIdentifier.startIdentifyingIssues(for:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DC30);
  uint64_t v6 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D680);
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  int v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *v1;
  if (qword_1EB768C20 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1ACE754C8();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EB768C00);
  uint64_t v12 = sub_1ACE75498();
  os_log_type_t v13 = sub_1ACE76BC8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_1AC9D5000, v12, v13, "Starting consistency check for downloaded assets in CoreData library", v14, 2u);
    MEMORY[0x1AD11B340](v14, -1, -1);
  }

  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  id v17 = sub_1ACE408EC();
  uint64_t v18 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v16 + 8))(v17, v15, v16);

  *(void *)&v33[0] = v18;
  id v35 = (id)a1[10];
  id v19 = v35;
  uint64_t v20 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v5, 1, 1, v20);
  id v21 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DD98);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1EB76DD90, &qword_1EB76DD98);
  sub_1ACA93A6C();
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v5, &qword_1EB7669C8);

  swift_release();
  sub_1ACAFA130((uint64_t)a1, (uint64_t)v33);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v29;
  long long v23 = v33[3];
  *(_OWORD *)(v22 + 56) = v33[2];
  *(_OWORD *)(v22 + 72) = v23;
  *(_OWORD *)(v22 + 88) = v33[4];
  *(void *)(v22 + 104) = v34;
  long long v24 = v33[1];
  *(_OWORD *)(v22 + 24) = v33[0];
  *(_OWORD *)(v22 + 40) = v24;
  type metadata accessor for DownloadConsistency.Issue(0);
  sub_1ACA51EA4(&qword_1EB76DC28, &qword_1EB76DC30);
  swift_unknownObjectRetain();
  uint64_t v25 = v31;
  sub_1ACE75AE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v25);
  sub_1ACA51EA4(&qword_1EB76D678, &qword_1EB76D680);
  uint64_t v26 = v32;
  uint64_t v27 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v26);
  return v27;
}

id sub_1ACE408EC()
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  id v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  objc_msgSend(v0, sel_setResultType_, 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769598);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1ACE84470;
  uint64_t v2 = sub_1ACE761B8();
  uint64_t v3 = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  uint64_t v5 = sub_1ACE761B8();
  *(void *)(v1 + 88) = v3;
  *(void *)(v1 + 64) = v5;
  *(void *)(v1 + 72) = v6;
  uint64_t v7 = sub_1ACE761B8();
  *(void *)(v1 + 120) = v3;
  *(void *)(v1 + 96) = v7;
  *(void *)(v1 + 104) = v8;
  uint64_t v9 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setPropertiesToFetch_, v9);

  id v10 = objc_msgSend(self, sel_predicateForDownloaded_excludeHidden_, 1, 1);
  objc_msgSend(v0, sel_setPredicate_, v10);

  return v0;
}

uint64_t sub_1ACE40A4C()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);

  return swift_deallocObject();
}

uint64_t sub_1ACE40A9C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACE40AD8(*a1, (void *)(v2 + 24), a2);
}

uint64_t sub_1ACE40AD8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v67[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  os_log_type_t v13 = &v67[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = &v67[-v15];
  id v73 = *v3;
  sub_1ACE413EC(a1);
  if (!v19)
  {
    if (qword_1EB768C20 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1ACE754C8();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB768C00);
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_1ACE75498();
    os_log_type_t v23 = sub_1ACE76BD8();
    if (os_log_type_enabled(v22, v23))
    {
      long long v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      aBlock[0] = v25;
      *(_DWORD *)long long v24 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v71 = a3;
      uint64_t v26 = sub_1ACE76008();
      unint64_t v28 = v27;
      swift_bridgeObjectRelease();
      uint64_t v75 = sub_1ACA3189C(v26, v28, aBlock);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v22, v23, "Skipping download check for episode, no asset URL and/or episodeUuid: %s", v24, 0xCu);
      a3 = v71;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v25, -1, -1);
      MEMORY[0x1AD11B340](v24, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_24;
  }
  unint64_t v20 = v18;
  uint64_t v72 = v17;
  sub_1ACE74EF8();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1ACA50E78((uint64_t)v9, &qword_1EB7731B0);
LABEL_24:
    uint64_t v41 = type metadata accessor for DownloadConsistency.Issue(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(a3, 1, 1, v41);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v16, v9, v10);
  uint64_t v29 = sub_1ACE74EE8();
  if (v30)
  {
    if (v29 == 0x62696C2D646F7069 && v30 == 0xEC00000079726172)
    {
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    char v32 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v32) {
      goto LABEL_23;
    }
  }
  if ((sub_1ACE74D98() & 1) == 0)
  {
LABEL_23:
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v16, v10);
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  uint64_t v71 = a3;
  uint64_t v33 = a2[9];
  __swift_project_boxed_opaque_existential_1(a2 + 5, a2[8]);
  uint64_t v34 = sub_1ACE74EC8();
  char v35 = (*(uint64_t (**)(uint64_t))(v33 + 32))(v34);
  swift_bridgeObjectRelease();
  if (v35)
  {
    swift_bridgeObjectRelease();
    a3 = v71;
    if (qword_1EB768C20 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_1ACE754C8();
    __swift_project_value_buffer(v36, (uint64_t)qword_1EB768C00);
    unint64_t v37 = sub_1ACE75498();
    os_log_type_t v38 = sub_1ACE76BD8();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl(&dword_1AC9D5000, v37, v38, "Download check for episode passed, asset was verified by the environment", v39, 2u);
      id v40 = v39;
      a3 = v71;
      MEMORY[0x1AD11B340](v40, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v16, v10);
    goto LABEL_24;
  }
  if (qword_1EB768C20 != -1) {
    swift_once();
  }
  uint64_t v43 = sub_1ACE754C8();
  __swift_project_value_buffer(v43, (uint64_t)qword_1EB768C00);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v13, v16, v10);
  swift_bridgeObjectRetain_n();
  uint64_t v44 = sub_1ACE75498();
  os_log_type_t v45 = sub_1ACE76BC8();
  int v46 = v45;
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v47 = swift_slowAlloc();
    uint64_t v70 = swift_slowAlloc();
    aBlock[0] = v70;
    *(_DWORD *)uint64_t v47 = 136315394;
    os_log_t v69 = v44;
    swift_bridgeObjectRetain();
    uint64_t v75 = sub_1ACA3189C(v72, v20, aBlock);
    int v68 = v46;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v47 + 12) = 2080;
    uint64_t v48 = sub_1ACE74EC8();
    uint64_t v75 = sub_1ACA3189C(v48, v49, aBlock);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    unint64_t v50 = *(void (**)(unsigned char *, uint64_t))(v11 + 8);
    uint64_t v51 = v13;
    uint64_t v52 = v72;
    v50(v51, v10);
    os_log_t v53 = v69;
    _os_log_impl(&dword_1AC9D5000, v69, (os_log_type_t)v68, "Found missing artifact for episode %s, expected path: %s", (uint8_t *)v47, 0x16u);
    uint64_t v54 = v70;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v54, -1, -1);
    uint64_t v55 = v47;
    int v56 = v50;
    MEMORY[0x1AD11B340](v55, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    int v56 = *(void (**)(unsigned char *, uint64_t))(v11 + 8);
    v56(v13, v10);

    uint64_t v52 = v72;
  }
  uint64_t v57 = @"com.apple.podcastsEpisodeMissingAsset";
  unint64_t v58 = sub_1ACA36DD8(MEMORY[0x1E4FBC860]);
  id v59 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
  uint64_t v60 = swift_allocObject();
  *(void *)(v60 + 16) = v58;
  aBlock[4] = (uint64_t)sub_1ACB19A38;
  void aBlock[5] = v60;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1ACDD55C4;
  aBlock[3] = (uint64_t)&block_descriptor_94;
  long long v61 = _Block_copy(aBlock);
  swift_release();
  id v62 = objc_msgSend(v59, sel_initWithName_generator_, v57, v61);

  _Block_release(v61);
  objc_msgSend(v73, sel_sendEvent_, v62);

  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898);
  uint64_t v64 = v71;
  uint64_t v65 = (uint64_t *)(v71 + *(int *)(v63 + 48));
  *uint64_t v65 = v52;
  v65[1] = v20;
  sub_1ACE75108();
  v56(v16, v10);
  uint64_t v66 = type metadata accessor for DownloadConsistency.Issue(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v64, 0, 1, v66);
}

uint64_t sub_1ACE413EC(uint64_t a1)
{
  uint64_t v8 = sub_1ACE761B8();
  sub_1ACE771F8();
  if (*(void *)(a1 + 16) && (unint64_t v2 = sub_1ACA65B48((uint64_t)v9), (v3 & 1) != 0))
  {
    sub_1ACA33128(*(void *)(a1 + 56) + 32 * v2, (uint64_t)&v10);
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
  sub_1ACA6A0F8((uint64_t)v9);
  if (!*((void *)&v11 + 1)) {
    goto LABEL_15;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = v8;
  sub_1ACE761B8();
  sub_1ACE771F8();
  if (*(void *)(a1 + 16) && (unint64_t v5 = sub_1ACA65B48((uint64_t)v9), (v6 & 1) != 0))
  {
    sub_1ACA33128(*(void *)(a1 + 56) + 32 * v5, (uint64_t)&v10);
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
  sub_1ACA6A0F8((uint64_t)v9);
  if (!*((void *)&v11 + 1))
  {
    swift_bridgeObjectRelease();
LABEL_15:
    sub_1ACA50E78((uint64_t)&v10, qword_1EB7725E0);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v4;
  }
  swift_bridgeObjectRelease();
  return 0;
}

ValueMetadata *type metadata accessor for CoreDataEpisodeAssetIssueIdentifier()
{
  return &type metadata for CoreDataEpisodeAssetIssueIdentifier;
}

uint64_t sub_1ACE415A0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t dispatch thunk of FairPlayKeySessionProviding.session(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1ACE41600(void *a1, uint64_t a2, void (*a3)(long long *, uint64_t))
{
  if (a1 && (self, (uint64_t v6 = swift_dynamicCastObjCClass()) != 0))
  {
    uint64_t v7 = v6;
    *((void *)&v11 + 1) = sub_1ACA50D4C(0, &qword_1EB76E190);
    uint64_t v12 = &off_1F03A32C0;
    *(void *)&long long v10 = v7;
    id v8 = a1;
  }
  else
  {
    uint64_t v12 = 0;
    long long v10 = 0u;
    long long v11 = 0u;
  }
  a3(&v10, a2);
  return sub_1ACCC2D34((uint64_t)&v10);
}

id sub_1ACE416BC(uint64_t a1)
{
  v8[1] = *(id *)MEMORY[0x1E4F143B8];
  unint64_t v2 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  char v3 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  v8[0] = 0;
  id v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_donatorWithItemType_originAppId_userId_error_, a1, v2, v3, v8);

  if (v4)
  {
    id v5 = v8[0];
  }
  else
  {
    id v6 = v8[0];
    sub_1ACE74D78();

    swift_willThrow();
  }
  return v4;
}

id sub_1ACE417DC(uint64_t a1)
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  unint64_t v2 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  v7[0] = 0;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_donatorWithItemType_originAppId_error_, a1, v2, v7);

  if (v3)
  {
    id v4 = v7[0];
  }
  else
  {
    id v5 = v7[0];
    sub_1ACE74D78();

    swift_willThrow();
  }
  return v3;
}

id sub_1ACE418CC(uint64_t a1)
{
  return sub_1ACE418F0(a1);
}

id sub_1ACE418F0(uint64_t a1)
{
  v4[1] = *(id *)MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (objc_msgSend(v1, sel_registerItem_error_, a1, v4)) {
    return v4[0];
  }
  id v3 = v4[0];
  sub_1ACE74D78();

  return (id)swift_willThrow();
}

void sub_1ACE4199C(uint64_t a1, uint64_t a2)
{
  id v3 = *v2;
  if (a1)
  {
    void v5[4] = a1;
    void v5[5] = a2;
    v5[0] = MEMORY[0x1E4F143A8];
    v5[1] = 1107296256;
    _OWORD v5[2] = sub_1ACCB9FCC;
    v5[3] = &block_descriptor_95;
    id v4 = _Block_copy(v5);
    swift_retain();
    swift_release();
  }
  else
  {
    id v4 = 0;
  }
  objc_msgSend(v3, sel_finish_, v4);
  _Block_release(v4);
}

uint64_t sub_1ACE41A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t sub_1ACE41A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1ACE41A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

id sub_1ACE41AB0(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    goto LABEL_8;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_1ACA50D4C(0, &qword_1EB76E378);
    uint64_t v3 = qword_1EB76AC10;
    swift_bridgeObjectRetain();
    if (v3 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    return sub_1ACE416BC(16);
  }
  else
  {
LABEL_8:
    sub_1ACA50D4C(0, &qword_1EB76E378);
    if (qword_1EB76AC10 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    return sub_1ACE417DC(16);
  }
}

ValueMetadata *_s11KoaProviderVMa()
{
  return &_s11KoaProviderVN;
}

uint64_t AlignmentRequest.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E498);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84820;
  *(void *)(inited + 32) = 0xD000000000000010;
  *(void *)(inited + 40) = 0x80000001ACECDB80;
  Swift::String_optional v5 = URL.md5()();
  *(Swift::String_optional *)(inited + 48) = v5;
  id v6 = sub_1ACA41EA0(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v8 = v6[2];
  unint64_t v7 = v6[3];
  unint64_t v9 = v8 + 1;
  if (v8 >= v7 >> 1) {
    id v6 = sub_1ACA41EA0((void *)(v7 > 1), v8 + 1, 1, v6);
  }
  void v6[2] = v9;
  long long v10 = &v6[2 * v8];
  _OWORD v10[4] = 0xD000000000000010;
  v10[5] = 0x80000001ACECDB80;
  if (v5.value._object)
  {
    unint64_t v11 = v6[3];
    swift_bridgeObjectRetain();
    if (v9 >= v11 >> 1) {
      id v6 = sub_1ACA41EA0((void *)(v11 > 1), v8 + 2, 1, v6);
    }
    void v6[2] = v8 + 2;
    *(Swift::String_optional *)&v6[2 * v9 + 4] = v5;
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
  sub_1ACA8B0C0();
  uint64_t v12 = sub_1ACE76138();
  uint64_t v14 = v13;
  uint64_t v15 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v12;
  a2[1] = v14;
  return result;
}

uint64_t AlignmentRequest.key.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AlignmentRequest.inMemorySize.getter()
{
  unint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1ACA5780C(v1, v2);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = *(void *)(v3 + 8 * v6 + 32);
      BOOL v9 = __OFADD__(v7, v8);
      v7 += v8;
      if (v9)
      {
        __break(1u);
        return result;
      }
      ++v6;
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
    if ((v7 & 0x8000000000000000) == 0) {
      return v7;
    }
    sub_1ACE77488();
    __break(1u);
  }
  swift_bridgeObjectRelease();
  return 0;
}

void AlignmentRequest.fileFormat.getter(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t AlignmentRequest.encode(_:)()
{
  sub_1ACE74CF8();
  swift_allocObject();
  sub_1ACE74CE8();
  type metadata accessor for AssetReaderTimelineAlignment();
  sub_1ACE42378(&qword_1E99F68F0);
  uint64_t v0 = sub_1ACE74CD8();
  swift_release();
  return v0;
}

uint64_t AlignmentRequest.decode(_:)()
{
  sub_1ACE74CB8();
  swift_allocObject();
  sub_1ACE74CA8();
  type metadata accessor for AssetReaderTimelineAlignment();
  sub_1ACE42378(&qword_1E99F68F8);
  sub_1ACE74C98();
  uint64_t result = swift_release();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1ACE421F0()
{
  sub_1ACE74CF8();
  swift_allocObject();
  sub_1ACE74CE8();
  type metadata accessor for AssetReaderTimelineAlignment();
  sub_1ACE42378(&qword_1E99F68F0);
  uint64_t v0 = sub_1ACE74CD8();
  swift_release();
  return v0;
}

uint64_t sub_1ACE422A8@<X0>(void *a1@<X8>)
{
  sub_1ACE74CB8();
  swift_allocObject();
  sub_1ACE74CA8();
  type metadata accessor for AssetReaderTimelineAlignment();
  sub_1ACE42378(&qword_1E99F68F8);
  sub_1ACE74C98();
  uint64_t result = swift_release();
  if (!v1) {
    *a1 = v4;
  }
  return result;
}

uint64_t sub_1ACE42378(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AssetReaderTimelineAlignment();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AlignmentRequest()
{
  return &type metadata for AlignmentRequest;
}

uint64_t DownloadConsistency.IssueResolution.init(issue:strategy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1ACE49A68(a1, a3, type metadata accessor for DownloadConsistency.Issue);
  uint64_t result = type metadata accessor for DownloadConsistency.IssueResolution(0);
  *(void *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for DownloadConsistency.Issue(uint64_t a1)
{
  return sub_1ACA31990(a1, qword_1EB76B7F0);
}

uint64_t type metadata accessor for DownloadConsistency.IssueResolution(uint64_t a1)
{
  return sub_1ACA31990(a1, qword_1EB76B760);
}

uint64_t sub_1ACE42460(uint64_t a1, void *a2)
{
  sub_1ACA3E158(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR___PFDownloadConsistency_identifier;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_0(v3);
  sub_1ACA3AABC(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1ACE424D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___PFDownloadConsistency_identifier;
  swift_beginAccess();
  return sub_1ACA3E158(v3, a1);
}

uint64_t DownloadConsistency.resolutionStrategy.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA3E158(v1 + OBJC_IVAR___PFDownloadConsistency_resolutionStrategy, a1);
}

uint64_t DownloadConsistency.effectApplicator.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA3E158(v1 + OBJC_IVAR___PFDownloadConsistency_effectApplicator, a1);
}

uint64_t DownloadConsistency.environment.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACAFA130(v1 + OBJC_IVAR___PFDownloadConsistency_environment, a1);
}

id DownloadConsistency.__allocating_init(issueIdentifier:resolutionStrategy:effectApplicator:downloadEnvironment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  long long v10 = (char *)objc_allocWithZone(v5);
  *(void *)&v10[OBJC_IVAR___PFDownloadConsistency_listener] = 0;
  sub_1ACA3E158(a1, (uint64_t)&v10[OBJC_IVAR___PFDownloadConsistency_identifier]);
  sub_1ACA3E158(a2, (uint64_t)&v10[OBJC_IVAR___PFDownloadConsistency_resolutionStrategy]);
  sub_1ACA3E158(a3, (uint64_t)&v10[OBJC_IVAR___PFDownloadConsistency_effectApplicator]);
  sub_1ACAFA130(a4, (uint64_t)&v10[OBJC_IVAR___PFDownloadConsistency_environment]);
  v13.receiver = v10;
  v13.super_class = v5;
  id v11 = objc_msgSendSuper2(&v13, sel_init);
  sub_1ACE42750(a4);
  __swift_destroy_boxed_opaque_existential_0(a3);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v11;
}

id DownloadConsistency.init(issueIdentifier:resolutionStrategy:effectApplicator:downloadEnvironment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&v4[OBJC_IVAR___PFDownloadConsistency_listener] = 0;
  sub_1ACA3E158(a1, (uint64_t)&v4[OBJC_IVAR___PFDownloadConsistency_identifier]);
  sub_1ACA3E158(a2, (uint64_t)&v4[OBJC_IVAR___PFDownloadConsistency_resolutionStrategy]);
  sub_1ACA3E158(a3, (uint64_t)&v4[OBJC_IVAR___PFDownloadConsistency_effectApplicator]);
  sub_1ACAFA130(a4, (uint64_t)&v4[OBJC_IVAR___PFDownloadConsistency_environment]);
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for DownloadConsistency();
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  sub_1ACE42750(a4);
  __swift_destroy_boxed_opaque_existential_0(a3);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v9;
}

uint64_t sub_1ACE42750(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for DownloadConsistency()
{
  return self;
}

uint64_t sub_1ACE427C8(uint64_t a1, uint64_t a2)
{
  uint64_t v63 = a2;
  uint64_t v62 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v3 - 8);
  id v59 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769578);
  uint64_t v49 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D9C8);
  uint64_t v53 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v47 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76DB48);
  uint64_t v55 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  unint64_t v50 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D9D8);
  uint64_t v58 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v51 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DCD0);
  uint64_t v61 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  int v56 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v11 = v2;
  uint64_t v12 = (uint64_t)v2 + OBJC_IVAR___PFDownloadConsistency_environment;
  uint64_t v45 = (uint64_t)v2 + OBJC_IVAR___PFDownloadConsistency_environment;
  uint64_t v13 = (uint64_t)v2 + OBJC_IVAR___PFDownloadConsistency_identifier;
  uint64_t v14 = v11;
  int v46 = v11;
  swift_beginAccess();
  sub_1ACA3E158(v13, (uint64_t)&v64);
  uint64_t v15 = *((void *)&v65 + 1);
  uint64_t v16 = v66;
  __swift_project_boxed_opaque_existential_1(&v64, *((uint64_t *)&v65 + 1));
  uint64_t v71 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 8))(v12, v15, v16);
  sub_1ACA3E158((uint64_t)v14 + OBJC_IVAR___PFDownloadConsistency_resolutionStrategy, (uint64_t)&v70);
  uint64_t v17 = swift_allocObject();
  sub_1ACA3AABC(&v70, v17 + 16);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1ACE4317C;
  *(void *)(v18 + 24) = v17;
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DD68);
  type metadata accessor for DownloadConsistency.IssueResolution(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DD58);
  sub_1ACA51EA4(&qword_1EB76DD60, &qword_1EB76DD68);
  sub_1ACA51EA4(&qword_1EB76DD50, &qword_1EB76DD58);
  sub_1ACE75C78();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v64);
  v44[1] = MEMORY[0x1E4F1AA40];
  sub_1ACA51EA4(&qword_1EB76DA80, &qword_1EB769578);
  uint64_t v19 = v47;
  uint64_t v20 = v48;
  sub_1ACE75C08();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v6, v20);
  uint64_t v21 = v45;
  sub_1ACAFA130(v45, (uint64_t)&v64);
  uint64_t v22 = swift_allocObject();
  os_log_type_t v23 = v46;
  *(void *)(v22 + 16) = v46;
  long long v24 = v67;
  *(_OWORD *)(v22 + 56) = v66;
  *(_OWORD *)(v22 + 72) = v24;
  *(_OWORD *)(v22 + 88) = v68;
  *(void *)(v22 + 104) = v69;
  long long v25 = v65;
  *(_OWORD *)(v22 + 24) = v64;
  *(_OWORD *)(v22 + 40) = v25;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1ACE43E28;
  *(void *)(v26 + 24) = v22;
  unint64_t v27 = v23;
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DDB8);
  sub_1ACA51EA4(&qword_1EB76D9C0, &qword_1EB76D9C8);
  sub_1ACA51EA4(&qword_1EB76DDB0, &qword_1EB76DDB8);
  unint64_t v28 = v50;
  uint64_t v29 = v52;
  sub_1ACE75C68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v19, v29);
  sub_1ACA51EA4(&qword_1EB76DB40, (uint64_t *)&unk_1EB76DB48);
  uint64_t v30 = v51;
  uint64_t v31 = v54;
  sub_1ACE75C08();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v28, v31);
  *(void *)&long long v64 = *(void *)(v21 + 80);
  char v32 = (void *)v64;
  uint64_t v33 = sub_1ACE76CA8();
  uint64_t v34 = (uint64_t)v59;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v59, 1, 1, v33);
  sub_1ACA51E1C();
  sub_1ACA51EA4(&qword_1EB76D9D0, &qword_1EB76D9D8);
  sub_1ACE473D0((unint64_t *)&qword_1EB7669D0, (void (*)(uint64_t))sub_1ACA51E1C);
  id v35 = v32;
  uint64_t v36 = v56;
  uint64_t v37 = v57;
  sub_1ACE75CA8();
  sub_1ACA50E78(v34, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v58 + 8))(v30, v37);
  uint64_t v38 = swift_allocObject();
  uint64_t v39 = v62;
  uint64_t v40 = v63;
  *(void *)(v38 + 16) = v62;
  *(void *)(v38 + 24) = v40;
  sub_1ACA6DEC8(v39);
  sub_1ACA51EA4(&qword_1EB76DCC8, &qword_1EB76DCD0);
  uint64_t v41 = v60;
  uint64_t v42 = sub_1ACE75B88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v36, v41);
  *(void *)&v27[OBJC_IVAR___PFDownloadConsistency_listener] = v42;
  return swift_release();
}

uint64_t sub_1ACE43144()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1ACE4317C(uint64_t a1)
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t sub_1ACE431D8()
{
  swift_release();
  return swift_deallocObject();
}

BOOL sub_1ACE43210(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + *(int *)(type metadata accessor for DownloadConsistency.IssueResolution(0) + 20))
                   + 16) != 0;
}

void sub_1ACE4324C(void **a1, void (*a2)(void *))
{
  uint64_t v3 = *a1;
  if (qword_1EB768C20 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1ACE754C8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB768C00);
  id v5 = v3;
  id v6 = v3;
  uint64_t v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76BC8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    id v11 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DD38);
    uint64_t v12 = sub_1ACE76228();
    sub_1ACA3189C(v12, v13, &v15);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AC9D5000, v7, v8, "Finished addressing consistency issues with completion: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v10, -1, -1);
    MEMORY[0x1AD11B340](v9, -1, -1);

    if (!a2) {
      return;
    }
  }
  else
  {

    if (!a2) {
      return;
    }
  }
  if (v3)
  {
    id v14 = v3;
    sub_1ACA6DEC8((uint64_t)a2);
    a2(v3);
    sub_1ACA76F34((uint64_t)a2);
  }
  else
  {
    swift_retain();
    a2(0);
    sub_1ACA76F34((uint64_t)a2);
  }
}

void sub_1ACE43494()
{
  if (qword_1EB768C20 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE754C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB768C00);
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_1ACE75498();
  os_log_type_t v2 = sub_1ACE76BD8();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v10 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    uint64_t v5 = type metadata accessor for DownloadedAssetEffect();
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = MEMORY[0x1AD118740](v6, v5);
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    sub_1ACA3189C(v7, v9, &v10);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v1, v2, "Applied corrective effects to environment: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v4, -1, -1);
    MEMORY[0x1AD11B340](v3, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1ACE43724()
{
  uint64_t v1 = OBJC_IVAR___PFDownloadConsistency_listener;
  if (*(void *)(v0 + OBJC_IVAR___PFDownloadConsistency_listener))
  {
    swift_retain();
    sub_1ACE75848();
    swift_release();
  }
  *(void *)(v0 + v1) = 0;
  return swift_release();
}

uint64_t sub_1ACE43808(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v32 = a3;
  uint64_t v33 = a2;
  uint64_t v4 = type metadata accessor for DownloadConsistency.IssueResolution(0);
  uint64_t v5 = v4 - 8;
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v31 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DBB8);
  uint64_t v8 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DAA0);
  uint64_t v37 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D650);
  uint64_t v39 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  id v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DA68);
  uint64_t v40 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v41[0] = *(void *)(a1 + *(int *)(v5 + 28));
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E068);
  sub_1ACA51EA4(&qword_1EB76E070, &qword_1EB76E068);
  sub_1ACE75728();
  sub_1ACE4976C(a1, (uint64_t)v7, type metadata accessor for DownloadConsistency.IssueResolution);
  sub_1ACAFA130(v32, (uint64_t)v41);
  unint64_t v17 = (*(unsigned __int8 *)(v31 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v18 = (v6 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v33;
  *(void *)(v19 + 16) = v33;
  sub_1ACE49A68((uint64_t)v7, v19 + v17, type metadata accessor for DownloadConsistency.IssueResolution);
  unint64_t v21 = v19 + v18;
  long long v22 = v41[3];
  *(_OWORD *)(v21 + 32) = v41[2];
  *(_OWORD *)(v21 + 48) = v22;
  *(_OWORD *)(v21 + 64) = v41[4];
  *(void *)(v21 + 80) = v42;
  long long v23 = v41[1];
  *(_OWORD *)unint64_t v21 = v41[0];
  *(_OWORD *)(v21 + 16) = v23;
  id v24 = v20;
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DD78);
  sub_1ACA51EA4(&qword_1EB76DBB0, &qword_1EB76DBB8);
  sub_1ACA51EA4(&qword_1EB76DD70, &qword_1EB76DD78);
  uint64_t v25 = v34;
  sub_1ACE75D98();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v25);
  type metadata accessor for DownloadedAssetEffect();
  sub_1ACA51EA4(&qword_1EB76DA98, &qword_1EB76DAA0);
  uint64_t v26 = v35;
  sub_1ACE75AE8();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v26);
  sub_1ACA51EA4(&qword_1EB76D648, &qword_1EB76D650);
  uint64_t v27 = v36;
  sub_1ACE75C48();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v27);
  sub_1ACA51EA4(&qword_1EB76DA60, &qword_1EB76DA68);
  uint64_t v28 = v38;
  uint64_t v29 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v28);
  return v29;
}

uint64_t sub_1ACE43DD8()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);

  return swift_deallocObject();
}

uint64_t sub_1ACE43E28(uint64_t a1)
{
  return sub_1ACE43808(a1, *(void **)(v1 + 16), v1 + 24);
}

uint64_t sub_1ACE43E34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_1ACE43E64()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return swift_deallocObject();
}

void sub_1ACE43EA4(void **a1)
{
  sub_1ACE4324C(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1ACE43EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACE49B78(a1, a2);
}

uint64_t sub_1ACE43EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D8B8);
  uint64_t v48 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v46 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D978);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v47 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DownloadConsistency.IssueResolution(0);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = type metadata accessor for DownloadedAssetEffect();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v37 - v18;
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1ACE754C8();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EB768C28);
  uint64_t v44 = a1;
  sub_1ACE4976C(a1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for DownloadedAssetEffect);
  sub_1ACE4976C(a2, (uint64_t)v13, type metadata accessor for DownloadConsistency.IssueResolution);
  unint64_t v21 = sub_1ACE75498();
  os_log_type_t v22 = sub_1ACE76BD8();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v38 = v8;
    uint64_t v25 = v24;
    uint64_t v50 = v24;
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v39 = v5;
    uint64_t v40 = v7;
    sub_1ACE4976C((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DownloadedAssetEffect);
    uint64_t v26 = sub_1ACE76228();
    uint64_t v49 = sub_1ACA3189C(v26, v27, &v50);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACE497D4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for DownloadedAssetEffect);
    *(_WORD *)(v23 + 12) = 2080;
    sub_1ACE4976C((uint64_t)v13, v41, type metadata accessor for DownloadConsistency.IssueResolution);
    uint64_t v28 = sub_1ACE76228();
    uint64_t v49 = sub_1ACA3189C(v28, v29, &v50);
    sub_1ACE76FF8();
    uint64_t v5 = v39;
    swift_bridgeObjectRelease();
    uint64_t v7 = v40;
    sub_1ACE497D4((uint64_t)v13, type metadata accessor for DownloadConsistency.IssueResolution);
    _os_log_impl(&dword_1AC9D5000, v21, v22, "Applying (%s for resolution: %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    uint64_t v30 = v25;
    uint64_t v8 = v38;
    MEMORY[0x1AD11B340](v30, -1, -1);
    MEMORY[0x1AD11B340](v23, -1, -1);
  }
  else
  {
    sub_1ACE497D4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for DownloadedAssetEffect);
    sub_1ACE497D4((uint64_t)v13, type metadata accessor for DownloadConsistency.IssueResolution);
  }

  uint64_t v31 = *(void *)(v43 + OBJC_IVAR___PFDownloadConsistency_effectApplicator + 24);
  uint64_t v32 = *(void *)(v43 + OBJC_IVAR___PFDownloadConsistency_effectApplicator + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v43 + OBJC_IVAR___PFDownloadConsistency_effectApplicator), v31);
  uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8))(v44, v45, v31, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DD88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76BDF0);
  sub_1ACA51EA4(&qword_1EB76DD80, &qword_1EB76DD88);
  uint64_t v33 = v46;
  sub_1ACE75B58();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEC0);
  sub_1ACA51EA4(&qword_1EB76D8B0, &qword_1EB76D8B8);
  sub_1ACA51EA4(&qword_1EB76DEB8, &qword_1EB76DEC0);
  uint64_t v34 = v47;
  sub_1ACE75B98();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v5);
  sub_1ACA51EA4(&qword_1EB76D970, &qword_1EB76D978);
  uint64_t v35 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v34, v7);
  return v35;
}

uint64_t sub_1ACE44538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1ACE4976C(a1, a2, (uint64_t (*)(void))type metadata accessor for DownloadedAssetEffect);
  uint64_t v3 = type metadata accessor for DownloadedAssetEffect();
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  return v4(a2, 0, 1, v3);
}

uint64_t sub_1ACE445C0@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76BDF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  if (qword_1EB768C20 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1ACE754C8();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EB768C00);
  id v9 = v7;
  id v10 = v7;
  uint64_t v11 = sub_1ACE75498();
  os_log_type_t v12 = sub_1ACE76BE8();
  if (os_log_type_enabled(v11, v12))
  {
    v20[1] = a2;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v21 = (uint64_t)v7;
    uint64_t v22 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    id v15 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    uint64_t v16 = sub_1ACE76228();
    uint64_t v21 = sub_1ACA3189C(v16, v17, &v22);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AC9D5000, v11, v12, "Failed to apply effect to the environment: %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v14, -1, -1);
    MEMORY[0x1AD11B340](v13, -1, -1);
  }
  else
  {
  }
  uint64_t v18 = type metadata accessor for DownloadedAssetEffect();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 1, 1, v18);
  return sub_1ACE759C8();
}

id DownloadConsistency.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DownloadConsistency.init()()
{
}

id DownloadConsistency.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DownloadConsistency();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t DownloadConsistency.Issue.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE75118();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DownloadConsistency.Issue(0);
  MEMORY[0x1F4188790](v10);
  os_log_type_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE4976C(v1, (uint64_t)v12, type metadata accessor for DownloadConsistency.Issue);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    uint64_t v14 = &v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v14, v2);
    sub_1ACE77B28();
    sub_1ACE473D0((unint64_t *)&qword_1EB766C80, MEMORY[0x1E4F27990]);
    sub_1ACE760F8();
    sub_1ACE473D0(&qword_1E99F1C88, MEMORY[0x1E4F276F0]);
    sub_1ACE760F8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    sub_1ACE77B28();
    sub_1ACE473D0((unint64_t *)&qword_1EB766C80, MEMORY[0x1E4F27990]);
    sub_1ACE760F8();
    sub_1ACE76108();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_1ACE44D64()
{
  unint64_t v1 = 0xD000000000000022;
  if (*v0 != 1) {
    unint64_t v1 = 0x4164656E776F6E75;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD00000000000001ELL;
  }
}

uint64_t sub_1ACE44DCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE49444(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE44DF4(uint64_t a1)
{
  unint64_t v2 = sub_1ACE47418();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE44E30(uint64_t a1)
{
  unint64_t v2 = sub_1ACE47418();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE44E6C()
{
  if (*v0) {
    return 0x5565646F73697065;
  }
  else {
    return 12383;
  }
}

uint64_t sub_1ACE44EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE495AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE44ECC(uint64_t a1)
{
  unint64_t v2 = sub_1ACE47514();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE44F08(uint64_t a1)
{
  unint64_t v2 = sub_1ACE47514();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE44F44(uint64_t a1)
{
  unint64_t v2 = sub_1ACE474C0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE44F80(uint64_t a1)
{
  unint64_t v2 = sub_1ACE474C0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACE44FBC()
{
  if (*v0) {
    return 1701603686;
  }
  else {
    return 12383;
  }
}

uint64_t sub_1ACE44FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE496A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE4500C(uint64_t a1)
{
  unint64_t v2 = sub_1ACE4746C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACE45048(uint64_t a1)
{
  unint64_t v2 = sub_1ACE4746C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DownloadConsistency.Issue.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6928);
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v53 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1ACE74F28();
  uint64_t v54 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v60 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6930);
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v52 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v50 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6938);
  uint64_t v49 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1ACE75118();
  uint64_t v62 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v57 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  os_log_type_t v12 = (char *)&v48 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v48 - v14;
  uint64_t v16 = type metadata accessor for DownloadConsistency.Issue(0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6940);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v63 = v19;
  uint64_t v64 = v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE47418();
  long long v67 = v22;
  sub_1ACE77C78();
  sub_1ACE4976C(v65, (uint64_t)v18, type metadata accessor for DownloadConsistency.Issue);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v65 = *(void *)&v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898) + 48)];
      uint64_t v24 = v62;
      uint64_t v25 = v66;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v12, v18, v66);
      char v73 = 1;
      sub_1ACE474C0();
      uint64_t v26 = v50;
      uint64_t v27 = v63;
      uint64_t v28 = v67;
      sub_1ACE776D8();
      char v72 = 0;
      sub_1ACE473D0(&qword_1E99F6958, MEMORY[0x1E4F27990]);
      uint64_t v29 = v52;
      uint64_t v30 = v61;
      sub_1ACE77788();
      if (v30)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v26, v29);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v25);
        return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v28, v27);
      }
      else
      {
        char v71 = 1;
        sub_1ACE77748();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v26, v29);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v66);
        return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v67, v27);
      }
    }
    else
    {
      uint64_t v37 = &v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48)];
      uint64_t v38 = v62;
      uint64_t v39 = v57;
      uint64_t v40 = v66;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v57, v18, v66);
      uint64_t v41 = v54;
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v60, v37, v58);
      char v76 = 2;
      sub_1ACE4746C();
      uint64_t v42 = v53;
      uint64_t v43 = v63;
      uint64_t v44 = v67;
      sub_1ACE776D8();
      char v75 = 0;
      sub_1ACE473D0(&qword_1E99F6958, MEMORY[0x1E4F27990]);
      uint64_t v45 = v56;
      uint64_t v46 = v61;
      sub_1ACE77788();
      if (v46)
      {
        (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v45);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v60, v58);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
      }
      else
      {
        char v74 = 1;
        sub_1ACE473D0(&qword_1E99F0E98, MEMORY[0x1E4F276F0]);
        uint64_t v47 = v58;
        sub_1ACE77788();
        (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v45);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v60, v47);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v57, v40);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v44, v43);
    }
  }
  else
  {
    uint64_t v65 = *(void *)&v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898) + 48)];
    uint64_t v32 = v62;
    uint64_t v33 = v66;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v15, v18, v66);
    char v70 = 0;
    sub_1ACE47514();
    uint64_t v34 = v63;
    uint64_t v35 = v67;
    sub_1ACE776D8();
    char v69 = 0;
    sub_1ACE473D0(&qword_1E99F6958, MEMORY[0x1E4F27990]);
    uint64_t v36 = v61;
    sub_1ACE77788();
    if (v36)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v8, v59);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v35, v34);
    }
    else
    {
      char v68 = 1;
      sub_1ACE77748();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v8, v59);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v67, v34);
    }
  }
}

uint64_t DownloadConsistency.Issue.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t DownloadConsistency.Issue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6970);
  uint64_t v70 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  char v71 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6978);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v68 = v4;
  uint64_t v69 = v5;
  MEMORY[0x1F4188790](v4);
  char v74 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6980);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v66 = v7;
  uint64_t v67 = v8;
  MEMORY[0x1F4188790](v7);
  char v73 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6988);
  uint64_t v72 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DownloadConsistency.Issue(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v59 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v59 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v59 - v22;
  uint64_t v24 = a1[3];
  uint64_t v77 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_1ACE47418();
  uint64_t v25 = v78;
  sub_1ACE77C48();
  if (v25) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v77);
  }
  uint64_t v63 = v20;
  uint64_t v64 = v17;
  uint64_t v26 = v73;
  uint64_t v27 = v74;
  uint64_t v61 = v23;
  uint64_t v62 = v14;
  uint64_t v28 = v75;
  uint64_t v29 = v76;
  uint64_t v78 = v12;
  uint64_t v30 = sub_1ACE776B8();
  uint64_t v31 = v11;
  if (*(void *)(v30 + 16) != 1)
  {
    uint64_t v33 = sub_1ACE77328();
    swift_allocError();
    uint64_t v35 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0EC8);
    *uint64_t v35 = v78;
    sub_1ACE775E8();
    sub_1ACE77308();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v33 - 8) + 104))(v35, *MEMORY[0x1E4FBBA70], v33);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v31, v29);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v77);
  }
  if (*(unsigned char *)(v30 + 32))
  {
    if (*(unsigned char *)(v30 + 32) == 1)
    {
      char v84 = 1;
      sub_1ACE474C0();
      sub_1ACE775D8();
      sub_1ACE75118();
      char v83 = 0;
      sub_1ACE473D0(&qword_1E99F6990, MEMORY[0x1E4F27990]);
      uint64_t v32 = v68;
      sub_1ACE77698();
      char v82 = 1;
      uint64_t v41 = sub_1ACE77658();
      uint64_t v42 = v27;
      uint64_t v60 = 0;
      uint64_t v43 = v69;
      uint64_t v48 = v41;
      uint64_t v75 = v49;
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898);
      uint64_t v51 = (uint64_t)v64;
      uint64_t v52 = (uint64_t *)&v64[*(int *)(v50 + 48)];
      (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v31, v29);
      uint64_t v53 = v75;
      *uint64_t v52 = v48;
      v52[1] = v53;
    }
    else
    {
      char v87 = 2;
      sub_1ACE4746C();
      sub_1ACE775D8();
      sub_1ACE75118();
      char v86 = 0;
      sub_1ACE473D0(&qword_1E99F6990, MEMORY[0x1E4F27990]);
      uint64_t v39 = (uint64_t)v62;
      uint64_t v40 = v28;
      sub_1ACE77698();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980);
      sub_1ACE74F28();
      char v85 = 1;
      sub_1ACE473D0(&qword_1E99F0ED0, MEMORY[0x1E4F276F0]);
      uint64_t v46 = v71;
      sub_1ACE77698();
      uint64_t v47 = v72;
      uint64_t v51 = v39;
      uint64_t v60 = 0;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v46, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v31, v76);
    }
  }
  else
  {
    char v81 = 0;
    sub_1ACE47514();
    sub_1ACE775D8();
    sub_1ACE75118();
    char v80 = 0;
    sub_1ACE473D0(&qword_1E99F6990, MEMORY[0x1E4F27990]);
    uint64_t v36 = v63;
    uint64_t v37 = v66;
    sub_1ACE77698();
    char v79 = 1;
    uint64_t v44 = sub_1ACE77658();
    uint64_t v60 = 0;
    uint64_t v45 = v67;
    uint64_t v54 = v44;
    uint64_t v75 = v55;
    uint64_t v56 = (uint64_t *)&v36[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898) + 48)];
    (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v37);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v11, v29);
    uint64_t v51 = (uint64_t)v63;
    uint64_t v57 = v75;
    *uint64_t v56 = v54;
    v56[1] = v57;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v58 = (uint64_t)v61;
  sub_1ACE49A68(v51, (uint64_t)v61, type metadata accessor for DownloadConsistency.Issue);
  sub_1ACE49A68(v58, v65, type metadata accessor for DownloadConsistency.Issue);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v77);
}

uint64_t sub_1ACE46540@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DownloadConsistency.Issue.init(from:)(a1, a2);
}

uint64_t sub_1ACE46558(void *a1)
{
  return DownloadConsistency.Issue.encode(to:)(a1);
}

uint64_t sub_1ACE46574()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACE465B8()
{
  return sub_1ACE77B78();
}

uint64_t DownloadConsistency.IssueResolution.issue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACE4976C(v1, a1, type metadata accessor for DownloadConsistency.Issue);
}

uint64_t DownloadConsistency.IssueResolution.strategy.getter()
{
  type metadata accessor for DownloadConsistency.IssueResolution(0);
  return swift_bridgeObjectRetain();
}

uint64_t DownloadConsistency.IssueResolution.hash(into:)(uint64_t a1)
{
  DownloadConsistency.Issue.hash(into:)();
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for DownloadConsistency.IssueResolution(0) + 20));
  swift_bridgeObjectRetain();
  sub_1ACE4693C(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t static DownloadConsistency.IssueResolution.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s18PodcastsFoundation19DownloadConsistencyC5IssueO2eeoiySbAE_AEtFZ_0(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for DownloadConsistency.IssueResolution(0) + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a2 + v4);
  return sub_1ACA87A38(v5, v6);
}

uint64_t DownloadConsistency.IssueResolution.hashValue.getter()
{
  sub_1ACE77B18();
  DownloadConsistency.Issue.hash(into:)();
  uint64_t v1 = type metadata accessor for DownloadConsistency.IssueResolution(0);
  sub_1ACE4693C((uint64_t)v3, *(void *)(v0 + *(int *)(v1 + 20)));
  return sub_1ACE77B78();
}

uint64_t sub_1ACE46770(uint64_t a1)
{
  sub_1ACE77B18();
  DownloadConsistency.Issue.hash(into:)();
  sub_1ACE4693C((uint64_t)v4, *(void *)(v1 + *(int *)(a1 + 20)));
  return sub_1ACE77B78();
}

uint64_t sub_1ACE467C4(uint64_t a1, uint64_t a2)
{
  DownloadConsistency.Issue.hash(into:)();
  uint64_t v5 = *(void *)(v2 + *(int *)(a2 + 20));
  return sub_1ACE4693C(a1, v5);
}

uint64_t sub_1ACE46810(uint64_t a1, uint64_t a2)
{
  sub_1ACE77B18();
  DownloadConsistency.Issue.hash(into:)();
  sub_1ACE4693C((uint64_t)v5, *(void *)(v2 + *(int *)(a2 + 20)));
  return sub_1ACE77B78();
}

uint64_t sub_1ACE46860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_s18PodcastsFoundation19DownloadConsistencyC5IssueO2eeoiySbAE_AEtFZ_0(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a2 + v6);
  return sub_1ACA87A38(v7, v8);
}

uint64_t static DownloadConsistency.IssueResolutionError.== infix(_:_:)()
{
  return 1;
}

uint64_t DownloadConsistency.IssueResolutionError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t DownloadConsistency.IssueResolutionError.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACE4693C(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v20 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DownloadedAssetEffect();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t result = sub_1ACE77B28();
  if (v12)
  {
    uint64_t v14 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v15 = *(void *)(v6 + 72);
    uint64_t v18 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v19 = (void (**)(char *, char *, uint64_t))(v3 + 32);
    do
    {
      sub_1ACE4976C(v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DownloadedAssetEffect);
      sub_1ACE4976C((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DownloadedAssetEffect);
      if (swift_getEnumCaseMultiPayload() > 1)
      {
        uint64_t v16 = v20;
        uint64_t v17 = v21;
        (*v19)(v20, v8, v21);
        sub_1ACE77B28();
        sub_1ACE473D0(&qword_1E99F1C88, MEMORY[0x1E4F276F0]);
        sub_1ACE760F8();
        (*v18)(v16, v17);
      }
      else
      {
        sub_1ACE77B28();
        sub_1ACE76108();
        swift_bridgeObjectRelease();
      }
      uint64_t result = sub_1ACE497D4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DownloadedAssetEffect);
      v14 += v15;
      --v12;
    }
    while (v12);
  }
  return result;
}

uint64_t _s18PodcastsFoundation19DownloadConsistencyC5IssueO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v75 = *(void *)(v4 - 8);
  uint64_t v76 = v4;
  MEMORY[0x1F4188790](v4);
  char v73 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v77 = (char *)&v72 - v7;
  uint64_t v8 = sub_1ACE75118();
  uint64_t v78 = *(void *)(v8 - 8);
  uint64_t v79 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v72 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  char v74 = (char *)&v72 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v72 - v13;
  uint64_t v15 = type metadata accessor for DownloadConsistency.Issue(0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v72 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v72 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(qword_1E99F6A10);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = (uint64_t)&v26[*(int *)(v27 + 56)];
  sub_1ACE4976C(a1, (uint64_t)v26, type metadata accessor for DownloadConsistency.Issue);
  sub_1ACE4976C(a2, v28, type metadata accessor for DownloadConsistency.Issue);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1ACE4976C((uint64_t)v26, (uint64_t)v23, type metadata accessor for DownloadConsistency.Issue);
    uint64_t v43 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898) + 48);
    uint64_t v45 = *(char **)&v23[v43];
    uint64_t v44 = *(void *)&v23[v43 + 8];
    if (swift_getEnumCaseMultiPayload())
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    uint64_t v61 = *(char **)(v28 + v43);
    uint64_t v62 = *(void *)(v28 + v43 + 8);
    uint64_t v77 = v61;
    uint64_t v63 = v78;
    uint64_t v64 = v28;
    uint64_t v65 = v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v14, v64, v79);
    char v66 = sub_1ACE750E8();
    uint64_t v67 = *(void (**)(char *, uint64_t))(v63 + 8);
    v67(v23, v65);
    if ((v66 & 1) == 0)
    {
      v67(v14, v65);
      swift_bridgeObjectRelease();
LABEL_29:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    if (v45 == v77 && v44 == v62)
    {
      swift_bridgeObjectRelease_n();
      v67(v14, v65);
      goto LABEL_35;
    }
    char v69 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v67(v14, v65);
    if (v69) {
      goto LABEL_35;
    }
LABEL_30:
    sub_1ACE497D4((uint64_t)v26, type metadata accessor for DownloadConsistency.Issue);
    goto LABEL_31;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1ACE4976C((uint64_t)v26, (uint64_t)v20, type metadata accessor for DownloadConsistency.Issue);
    uint64_t v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898) + 48);
    uint64_t v32 = *(char **)&v20[v30];
    uint64_t v31 = *(void *)&v20[v30 + 8];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v33 = *(char **)(v28 + v30);
      uint64_t v34 = *(void *)(v28 + v30 + 8);
      uint64_t v77 = v33;
      uint64_t v35 = v78;
      uint64_t v36 = v74;
      uint64_t v37 = v28;
      uint64_t v38 = v79;
      (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v74, v37, v79);
      char v39 = sub_1ACE750E8();
      uint64_t v40 = *(void (**)(char *, uint64_t))(v35 + 8);
      v40(v20, v38);
      if (v39)
      {
        if (v32 != v77 || v31 != v34)
        {
          char v42 = sub_1ACE77848();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v40(v74, v38);
          if (v42) {
            goto LABEL_35;
          }
          goto LABEL_30;
        }
        swift_bridgeObjectRelease_n();
        v40(v74, v38);
LABEL_35:
        sub_1ACE497D4((uint64_t)v26, type metadata accessor for DownloadConsistency.Issue);
        char v59 = 1;
        return v59 & 1;
      }
      v40(v36, v38);
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    swift_bridgeObjectRelease();
    uint64_t v23 = v20;
LABEL_18:
    (*(void (**)(char *, uint64_t))(v78 + 8))(v23, v79);
    sub_1ACA50E78((uint64_t)v26, qword_1E99F6A10);
LABEL_31:
    char v59 = 0;
    return v59 & 1;
  }
  sub_1ACE4976C((uint64_t)v26, (uint64_t)v17, type metadata accessor for DownloadConsistency.Issue);
  uint64_t v46 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48);
  uint64_t v47 = &v17[v46];
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(&v17[v46], v76);
    uint64_t v23 = v17;
    goto LABEL_18;
  }
  char v74 = (char *)(v28 + v46);
  uint64_t v48 = v78;
  uint64_t v49 = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v72, v28, v79);
  uint64_t v51 = v75;
  uint64_t v50 = v76;
  uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v75 + 32);
  v52(v77, v47, v76);
  uint64_t v53 = v73;
  v52(v73, v74, v50);
  uint64_t v54 = v49;
  char v55 = sub_1ACE750E8();
  uint64_t v56 = *(void (**)(char *, uint64_t))(v48 + 8);
  uint64_t v57 = v17;
  uint64_t v58 = v79;
  v56(v57, v79);
  if ((v55 & 1) == 0)
  {
    uint64_t v70 = *(void (**)(char *, uint64_t))(v51 + 8);
    v70(v53, v50);
    v70(v77, v50);
    v56(v54, v58);
    goto LABEL_30;
  }
  char v59 = MEMORY[0x1AD117040](v77, v53);
  uint64_t v60 = *(void (**)(char *, uint64_t))(v51 + 8);
  v60(v53, v50);
  v60(v77, v50);
  v56(v54, v58);
  sub_1ACE497D4((uint64_t)v26, type metadata accessor for DownloadConsistency.Issue);
  return v59 & 1;
}

uint64_t sub_1ACE473D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACE47418()
{
  unint64_t result = qword_1E99F6948;
  if (!qword_1E99F6948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6948);
  }
  return result;
}

unint64_t sub_1ACE4746C()
{
  unint64_t result = qword_1E99F6950;
  if (!qword_1E99F6950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6950);
  }
  return result;
}

unint64_t sub_1ACE474C0()
{
  unint64_t result = qword_1E99F6960;
  if (!qword_1E99F6960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6960);
  }
  return result;
}

unint64_t sub_1ACE47514()
{
  unint64_t result = qword_1E99F6968;
  if (!qword_1E99F6968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6968);
  }
  return result;
}

uint64_t sub_1ACE47568()
{
  return sub_1ACE473D0(&qword_1E99F6998, (void (*)(uint64_t))type metadata accessor for DownloadConsistency.Issue);
}

uint64_t sub_1ACE475B0()
{
  return sub_1ACE473D0(&qword_1E99F69A0, (void (*)(uint64_t))type metadata accessor for DownloadConsistency.IssueResolution);
}

unint64_t sub_1ACE475FC()
{
  unint64_t result = qword_1E99F69A8;
  if (!qword_1E99F69A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F69A8);
  }
  return result;
}

uint64_t sub_1ACE47650@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR___PFDownloadConsistency_identifier;
  swift_beginAccess();
  return sub_1ACA3E158(v3, a2);
}

uint64_t method lookup function for DownloadConsistency(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DownloadConsistency);
}

uint64_t dispatch thunk of DownloadConsistency.identifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of DownloadConsistency.__allocating_init(issueIdentifier:resolutionStrategy:effectApplicator:downloadEnvironment:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of DownloadConsistency.beginEnforcement(completionHandler:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of DownloadConsistency.endEnforcement()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t *initializeBufferWithCopyOfBuffer for DownloadConsistency.Issue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v12 = sub_1ACE75118();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      uint64_t v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_1ACE74F28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      uint64_t v6 = sub_1ACE75118();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898) + 48);
      uint64_t v8 = (uint64_t *)((char *)a1 + v7);
      uint64_t v9 = (uint64_t *)((char *)a2 + v7);
      uint64_t v10 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v10;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for DownloadConsistency.Issue(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v4 = sub_1ACE75118();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    uint64_t v5 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48);
    uint64_t v6 = sub_1ACE74F28();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else if (result <= 1)
  {
    uint64_t v3 = sub_1ACE75118();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DownloadConsistency.Issue(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v9 = sub_1ACE75118();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48);
    uint64_t v11 = a1 + v10;
    uint64_t v12 = a2 + v10;
    uint64_t v13 = sub_1ACE74F28();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    uint64_t v4 = sub_1ACE75118();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898) + 48);
    uint64_t v6 = (void *)(a1 + v5);
    uint64_t v7 = (void *)(a2 + v5);
    uint64_t v8 = v7[1];
    *uint64_t v6 = *v7;
    v6[1] = v8;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for DownloadConsistency.Issue(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1ACE497D4(a1, type metadata accessor for DownloadConsistency.Issue);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v8 = sub_1ACE75118();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48);
      uint64_t v10 = a1 + v9;
      uint64_t v11 = a2 + v9;
      uint64_t v12 = sub_1ACE74F28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      uint64_t v4 = sub_1ACE75118();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898) + 48);
      uint64_t v6 = (void *)(a1 + v5);
      uint64_t v7 = (void *)(a2 + v5);
      *uint64_t v6 = *v7;
      v6[1] = v7[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for DownloadConsistency.Issue(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_1ACE75118();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    uint64_t v10 = sub_1ACE74F28();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  }
  else
  {
    uint64_t v4 = sub_1ACE75118();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898);
    *(_OWORD *)(a1 + *(int *)(v5 + 48)) = *(_OWORD *)(a2 + *(int *)(v5 + 48));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for DownloadConsistency.Issue(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1ACE497D4(a1, type metadata accessor for DownloadConsistency.Issue);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_1ACE75118();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48);
      uint64_t v8 = a1 + v7;
      uint64_t v9 = a2 + v7;
      uint64_t v10 = sub_1ACE74F28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    }
    else
    {
      uint64_t v4 = sub_1ACE75118();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898);
      *(_OWORD *)(a1 + *(int *)(v5 + 48)) = *(_OWORD *)(a2 + *(int *)(v5 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1ACE4807C()
{
  uint64_t result = sub_1ACE75118();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v6 = &v5;
    swift_getTupleTypeLayout2();
    uint64_t v7 = &v4;
    uint64_t result = sub_1ACE74F28();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v8 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DownloadConsistency.IssueResolution(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for DownloadConsistency.Issue(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v13 = sub_1ACE75118();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_1ACE74F28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      uint64_t v7 = sub_1ACE75118();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898) + 48);
      uint64_t v9 = (uint64_t *)((char *)a1 + v8);
      uint64_t v10 = (uint64_t *)((char *)a2 + v8);
      uint64_t v11 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v11;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DownloadConsistency.IssueResolution(uint64_t a1)
{
  type metadata accessor for DownloadConsistency.Issue(0);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v4 = sub_1ACE75118();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    uint64_t v5 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48);
    uint64_t v6 = sub_1ACE74F28();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    uint64_t v3 = sub_1ACE75118();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DownloadConsistency.IssueResolution(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for DownloadConsistency.Issue(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v11 = sub_1ACE75118();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    uint64_t v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = a2 + v12;
    uint64_t v15 = sub_1ACE74F28();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    uint64_t v6 = sub_1ACE75118();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898) + 48);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    uint64_t v10 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v10;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DownloadConsistency.IssueResolution(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1ACE497D4(a1, type metadata accessor for DownloadConsistency.Issue);
    type metadata accessor for DownloadConsistency.Issue(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v10 = sub_1ACE75118();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48);
      uint64_t v12 = a1 + v11;
      uint64_t v13 = a2 + v11;
      uint64_t v14 = sub_1ACE74F28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      uint64_t v6 = sub_1ACE75118();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898) + 48);
      uint64_t v8 = (void *)(a1 + v7);
      uint64_t v9 = (void *)(a2 + v7);
      *uint64_t v8 = *v9;
      v8[1] = v9[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DownloadConsistency.IssueResolution(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for DownloadConsistency.Issue(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v8 = sub_1ACE75118();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = a2 + v9;
    uint64_t v12 = sub_1ACE74F28();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  }
  else
  {
    uint64_t v6 = sub_1ACE75118();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898);
    *(_OWORD *)(a1 + *(int *)(v7 + 48)) = *(_OWORD *)(a2 + *(int *)(v7 + 48));
  }
  swift_storeEnumTagMultiPayload();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for DownloadConsistency.IssueResolution(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1ACE497D4(a1, type metadata accessor for DownloadConsistency.Issue);
    type metadata accessor for DownloadConsistency.Issue(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v8 = sub_1ACE75118();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48);
      uint64_t v10 = a1 + v9;
      uint64_t v11 = a2 + v9;
      uint64_t v12 = sub_1ACE74F28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    }
    else
    {
      uint64_t v6 = sub_1ACE75118();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898);
      *(_OWORD *)(a1 + *(int *)(v7 + 48)) = *(_OWORD *)(a2 + *(int *)(v7 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadConsistency.IssueResolution(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACE48AFC);
}

uint64_t sub_1ACE48AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DownloadConsistency.Issue(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DownloadConsistency.IssueResolution(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACE48BD0);
}

uint64_t sub_1ACE48BD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for DownloadConsistency.Issue(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1ACE48C8C()
{
  uint64_t result = type metadata accessor for DownloadConsistency.Issue(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DownloadConsistency.IssueResolutionError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACE48DC0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadConsistency.IssueResolutionError()
{
  return &type metadata for DownloadConsistency.IssueResolutionError;
}

unsigned char *storeEnumTagSinglePayload for DownloadConsistency.Issue.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE48EC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadConsistency.Issue.CodingKeys()
{
  return &type metadata for DownloadConsistency.Issue.CodingKeys;
}

ValueMetadata *type metadata accessor for DownloadConsistency.Issue.MissingCoreDataEpisodeArtifactCodingKeys()
{
  return &type metadata for DownloadConsistency.Issue.MissingCoreDataEpisodeArtifactCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadConsistency.Issue.MissingMediaLibraryEpisodeArtifactCodingKeys()
{
  return &type metadata for DownloadConsistency.Issue.MissingMediaLibraryEpisodeArtifactCodingKeys;
}

unsigned char *_s18PodcastsFoundation19DownloadConsistencyC5IssueO40MissingCoreDataEpisodeArtifactCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE48FECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadConsistency.Issue.UnownedAssetCodingKeys()
{
  return &type metadata for DownloadConsistency.Issue.UnownedAssetCodingKeys;
}

unint64_t sub_1ACE49028()
{
  unint64_t result = qword_1E99F69B0;
  if (!qword_1E99F69B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F69B0);
  }
  return result;
}

unint64_t sub_1ACE49080()
{
  unint64_t result = qword_1E99F69B8;
  if (!qword_1E99F69B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F69B8);
  }
  return result;
}

unint64_t sub_1ACE490D8()
{
  unint64_t result = qword_1E99F69C0;
  if (!qword_1E99F69C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F69C0);
  }
  return result;
}

unint64_t sub_1ACE49130()
{
  unint64_t result = qword_1E99F69C8;
  if (!qword_1E99F69C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F69C8);
  }
  return result;
}

unint64_t sub_1ACE49188()
{
  unint64_t result = qword_1E99F69D0;
  if (!qword_1E99F69D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F69D0);
  }
  return result;
}

unint64_t sub_1ACE491E0()
{
  unint64_t result = qword_1E99F69D8;
  if (!qword_1E99F69D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F69D8);
  }
  return result;
}

unint64_t sub_1ACE49238()
{
  unint64_t result = qword_1E99F69E0;
  if (!qword_1E99F69E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F69E0);
  }
  return result;
}

unint64_t sub_1ACE49290()
{
  unint64_t result = qword_1E99F69E8;
  if (!qword_1E99F69E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F69E8);
  }
  return result;
}

unint64_t sub_1ACE492E8()
{
  unint64_t result = qword_1E99F69F0;
  if (!qword_1E99F69F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F69F0);
  }
  return result;
}

unint64_t sub_1ACE49340()
{
  unint64_t result = qword_1E99F69F8;
  if (!qword_1E99F69F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F69F8);
  }
  return result;
}

unint64_t sub_1ACE49398()
{
  unint64_t result = qword_1E99F6A00;
  if (!qword_1E99F6A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6A00);
  }
  return result;
}

unint64_t sub_1ACE493F0()
{
  unint64_t result = qword_1E99F6A08;
  if (!qword_1E99F6A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6A08);
  }
  return result;
}

uint64_t sub_1ACE49444(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ELL && a2 == 0x80000001ACED4610 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001ACED4630 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4164656E776F6E75 && a2 == 0xEC00000074657373)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1ACE495AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5565646F73697065 && a2 == 0xEB00000000646975)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACE496A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701603686 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACE4976C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACE497D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1ACE49838()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1ACE49870()
{
  uint64_t v1 = *(void *)(type metadata accessor for DownloadConsistency.IssueResolution(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);

  type metadata accessor for DownloadConsistency.Issue(0);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v6 = sub_1ACE75118();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v2, v6);
    unint64_t v7 = v0 + v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48);
    uint64_t v8 = sub_1ACE74F28();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    uint64_t v5 = sub_1ACE75118();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v2, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = v0 + ((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  __swift_destroy_boxed_opaque_existential_0(v9);
  __swift_destroy_boxed_opaque_existential_0(v9 + 40);

  return swift_deallocObject();
}

uint64_t sub_1ACE49A68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACE49AD0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for DownloadConsistency.IssueResolution(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t result = sub_1ACE43EB4(a1, v2 + v6, v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  *a2 = result;
  return result;
}

uint64_t sub_1ACE49B78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76BDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SettingTransition.init(originValue:newValue:transitionTime:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32);
  v9(a5, a1, a4);
  uint64_t v10 = type metadata accessor for SettingTransition();
  v9(a5 + *(int *)(v10 + 44), a2, a4);
  uint64_t v11 = a5 + *(int *)(v10 + 48);
  uint64_t v12 = sub_1ACE750A8();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  return v13(v11, a3, v12);
}

uint64_t type metadata accessor for SettingTransition()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t SettingTransition.originValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t SettingTransition.newValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t SettingTransition.transitionTime.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 48);
  uint64_t v5 = sub_1ACE750A8();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

BOOL sub_1ACE49DE8(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1ACE49DF8()
{
  return sub_1ACE77B28();
}

uint64_t sub_1ACE49E20(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61566E696769726FLL && a2 == 0xEB0000000065756CLL;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C615677656ELL && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697469736E617274 && a2 == 0xEE00656D69546E6FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1ACE49FB4(char a1)
{
  if (!a1) {
    return 0x61566E696769726FLL;
  }
  if (a1 == 1) {
    return 0x65756C615677656ELL;
  }
  return 0x697469736E617274;
}

BOOL sub_1ACE4A020(char *a1, char *a2)
{
  return sub_1ACE49DE8(*a1, *a2);
}

uint64_t sub_1ACE4A038()
{
  return _s18PodcastsFoundation26PlayButtonTimeFormatHelperV0F5StyleO9hashValueSivg_0();
}

uint64_t sub_1ACE4A048()
{
  return sub_1ACE49DF8();
}

uint64_t sub_1ACE4A058()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACE4A0A4()
{
  return sub_1ACE49FB4(*v0);
}

uint64_t sub_1ACE4A0B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACE49E20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACE4A0E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACE4B7DC();
  *a1 = result;
  return result;
}

uint64_t sub_1ACE4A11C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1ACE4A170(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t SettingTransition.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  v10[0] = a2;
  v10[1] = v3;
  type metadata accessor for SettingTransition.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_1ACE777A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)v10 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C78();
  char v13 = 0;
  uint64_t v8 = v10[3];
  sub_1ACE77788();
  if (!v8)
  {
    char v12 = 1;
    sub_1ACE77788();
    char v11 = 2;
    sub_1ACE750A8();
    sub_1ACA4F6F8(&qword_1E99F3A68);
    sub_1ACE77788();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t type metadata accessor for SettingTransition.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t SettingTransition.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v35 = a4;
  uint64_t v37 = sub_1ACE750A8();
  uint64_t v34 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v36 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v8);
  char v39 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v44 = (char *)&v31 - v11;
  type metadata accessor for SettingTransition.CodingKeys();
  swift_getWitnessTable();
  uint64_t v42 = sub_1ACE776C8();
  uint64_t v38 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  char v13 = (char *)&v31 - v12;
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  uint64_t v14 = type metadata accessor for SettingTransition();
  uint64_t v33 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v31 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v45 = v13;
  uint64_t v17 = (uint64_t)v46;
  sub_1ACE77C48();
  if (v17) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v19 = v38;
  uint64_t v18 = v39;
  uint64_t v32 = v16;
  uint64_t v20 = v43;
  uint64_t v46 = a1;
  char v49 = 0;
  uint64_t v21 = v40;
  uint64_t v22 = v42;
  sub_1ACE77698();
  uint64_t v23 = v44;
  uint64_t v44 = *(char **)(v20 + 32);
  ((void (*)(char *, char *, uint64_t))v44)(v32, v23, v21);
  char v48 = 1;
  sub_1ACE77698();
  uint64_t v41 = v14;
  uint64_t v24 = *(int *)(v14 + 44);
  uint64_t v25 = v32;
  ((void (*)(char *, char *, uint64_t))v44)(&v32[v24], v18, v21);
  char v47 = 2;
  sub_1ACA4F6F8(&qword_1EB770958);
  uint64_t v27 = v36;
  uint64_t v26 = v37;
  sub_1ACE77698();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v45, v22);
  uint64_t v28 = v41;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(&v25[*(int *)(v41 + 48)], v27, v26);
  uint64_t v29 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v35, v25, v28);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v25, v28);
}

uint64_t sub_1ACE4A950@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return SettingTransition.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1ACE4A974(void *a1, uint64_t a2)
{
  return SettingTransition.encode(to:)(a1, a2);
}

uint64_t sub_1ACE4A98C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1ACE750A8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1ACE4AA58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  uint64_t v10 = sub_1ACE750A8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v7 + v12;
  if ((v12 | (unint64_t)v8) > 7
    || ((*(_DWORD *)(v11 + 80) | v8) & 0x100000) != 0
    || ((v13 + (v9 & ~(unint64_t)v8)) & ~v12) + *(void *)(*(void *)(v10 - 8) + 64) > 0x18)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v12 | v8) + 16) & ~(v12 | v8)));
    swift_retain();
  }
  else
  {
    uint64_t v21 = ~v12;
    uint64_t v22 = v10;
    uint64_t v17 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v17(a1, a2, v5);
    unint64_t v18 = ((unint64_t)a1 + v9) & ~(unint64_t)v8;
    unint64_t v19 = ((unint64_t)a2 + v9) & ~(unint64_t)v8;
    v17((uint64_t *)v18, (uint64_t *)v19, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((v18 + v13) & v21, (v19 + v13) & v21, v22);
  }
  return a1;
}

uint64_t sub_1ACE4AC10(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
  v5(a1, v3);
  uint64_t v6 = *(void *)(v4 + 64);
  unint64_t v7 = (v6 + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v5(v7, v3);
  uint64_t v8 = sub_1ACE750A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
  uint64_t v11 = v8;
  unint64_t v12 = (v7 + v6 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return v10(v12, v11);
}

uint64_t sub_1ACE4ACEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  uint64_t v12 = sub_1ACE750A8();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16))((v8 + *(unsigned __int8 *)(v13 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (v8 + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), v12);
  return a1;
}

uint64_t sub_1ACE4ADDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  uint64_t v12 = sub_1ACE750A8();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 24))((v8 + *(unsigned __int8 *)(v13 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (v8 + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), v12);
  return a1;
}

uint64_t sub_1ACE4AECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  uint64_t v12 = sub_1ACE750A8();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 32))((v8 + *(unsigned __int8 *)(v13 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (v8 + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), v12);
  return a1;
}

uint64_t sub_1ACE4AFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  uint64_t v12 = sub_1ACE750A8();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 40))((v8 + *(unsigned __int8 *)(v13 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (v8 + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), v12);
  return a1;
}

uint64_t sub_1ACE4B0AC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = sub_1ACE750A8();
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v14 = v7;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v15 = v11 + v12;
  if (a2 <= v14) {
    goto LABEL_24;
  }
  uint64_t v16 = ((v11 + v13 + (v15 & ~v12)) & ~v13) + *(void *)(*(void *)(v8 - 8) + 64);
  char v17 = 8 * v16;
  if (v16 <= 3)
  {
    unsigned int v19 = ((a2 - v14 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      int v18 = *(_DWORD *)((char *)a1 + v16);
      if (!v18) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      int v18 = *(unsigned __int16 *)((char *)a1 + v16);
      if (!*(unsigned __int16 *)((char *)a1 + v16)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_24:
      if (v14)
      {
        if (v7 >= v10)
        {
          uint64_t v25 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
          return v25(a1, v7, v5);
        }
        else
        {
          uint64_t v23 = *(uint64_t (**)(unint64_t))(v9 + 48);
          return v23(((((unint64_t)a1 + v15) & ~v12) + v11 + v13) & ~v13);
        }
      }
      return 0;
    }
  }
  int v18 = *((unsigned __int8 *)a1 + v16);
  if (!*((unsigned char *)a1 + v16)) {
    goto LABEL_24;
  }
LABEL_14:
  int v20 = (v18 - 1) << v17;
  if (v16 > 3) {
    int v20 = 0;
  }
  if (v16)
  {
    if (v16 <= 3) {
      int v21 = v16;
    }
    else {
      int v21 = 4;
    }
    switch(v21)
    {
      case 2:
        int v22 = *a1;
        break;
      case 3:
        int v22 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v22 = *(_DWORD *)a1;
        break;
      default:
        int v22 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v22 = 0;
  }
  return v14 + (v22 | v20) + 1;
}

void sub_1ACE4B34C(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v27 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(sub_1ACE750A8() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = *(void *)(v8 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = v14 + v15;
  uint64_t v17 = *(unsigned __int8 *)(v10 + 80);
  size_t v18 = ((v14 + v17 + ((v14 + v15) & ~v15)) & ~v17) + *(void *)(v10 + 64);
  if (a3 <= v13)
  {
    int v19 = 0;
  }
  else if (v18 <= 3)
  {
    unsigned int v23 = ((a3 - v13 + ~(-1 << (8 * v18))) >> (8 * v18)) + 1;
    if (HIWORD(v23))
    {
      int v19 = 4;
    }
    else if (v23 >= 0x100)
    {
      int v19 = 2;
    }
    else
    {
      int v19 = v23 > 1;
    }
  }
  else
  {
    int v19 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v20 = ~v13 + a2;
    if (v18 < 4)
    {
      int v21 = (v20 >> (8 * v18)) + 1;
      if (v18)
      {
        int v24 = v20 & ~(-1 << (8 * v18));
        bzero(a1, v18);
        if (v18 == 3)
        {
          *(_WORD *)a1 = v24;
          a1[2] = BYTE2(v24);
        }
        else if (v18 == 2)
        {
          *(_WORD *)a1 = v24;
        }
        else
        {
          *a1 = v24;
        }
      }
    }
    else
    {
      bzero(a1, v18);
      *(_DWORD *)a1 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        a1[v18] = v21;
        return;
      case 2:
        *(_WORD *)&a1[v18] = v21;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v18] = v21;
        return;
      default:
        return;
    }
  }
  uint64_t v22 = ~v15;
  switch(v19)
  {
    case 1:
      a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1ACE4B66CLL);
    case 4:
      *(_DWORD *)&a1[v18] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v9 >= v12)
        {
          uint64_t v26 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
          v26(a1, a2, v9, v7);
        }
        else
        {
          uint64_t v25 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v25((((unint64_t)&a1[v16] & v22) + v14 + v17) & ~v17, a2);
        }
      }
      return;
  }
}

unsigned char *sub_1ACE4B694(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACE4B760);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1ACE4B788()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACE4B7A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACE4B7C0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACE4B7DC()
{
  return 3;
}

Swift::Void __swiftcall MTEpisode.resolveAvailabilityDate()()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_1ACE750A8();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = MEMORY[0x1F4188790](v2).n128_u64[0];
  unsigned int v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v1, sel_pubDate, v4);
  double v8 = v7;
  sub_1ACE75098();
  sub_1ACE74FB8();
  double v10 = v9;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  objc_msgSend(v1, sel_firstTimeAvailableAsFree);
  double v12 = v11;
  if (objc_msgSend(v1, sel_entitlementState) == (id)1)
  {
    objc_msgSend(v1, sel_firstTimeAvailableAsPaid);
    double v14 = v13;
    uint64_t v15 = &selRef_firstTimeAvailableAsFree;
    if (v12 <= 0.0) {
      uint64_t v15 = &selRef_pubDate;
    }
    [v1 *v15];
    if (v8 < v10) {
      objc_msgSend(v1, sel_pubDate);
    }
    double v17 = v16;
    if (v14 > 0.0) {
      objc_msgSend(v1, sel_firstTimeAvailableAsPaid);
    }
    if (v17 < v16) {
      double v16 = v17;
    }
  }
  else
  {
    size_t v18 = &selRef_firstTimeAvailableAsFree;
    if (v12 <= 0.0) {
      size_t v18 = &selRef_firstTimeAvailableAsPaid;
    }
    [v1 *v18];
    if (v8 < v10) {
      objc_msgSend(v1, sel_pubDate);
    }
  }
  objc_msgSend(v1, sel_setFirstTimeAvailable_, v16);
  objc_msgSend(v1, sel_firstTimeAvailable);
  if (v19 == 0.0)
  {
    objc_msgSend(v1, sel_pubDate);
    objc_msgSend(v1, sel_setFirstTimeAvailable_);
  }
}

uint64_t MTEpisode.isDownloadable.getter()
{
  return objc_msgSend(v0, sel_isExternalType) ^ 1;
}

uint64_t TranscriptRequestInformation.episodeAdamId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptRequestInformation.episodeTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptRequestInformation.ttmlIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptRequestInformation.selectedTextTimeInterval.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t TranscriptRequestInformation.selectedTextTimeInterval.setter(uint64_t result, uint64_t a2, char a3)
{
  *(void *)(v3 + 48) = result;
  *(void *)(v3 + 56) = a2;
  *(unsigned char *)(v3 + 64) = a3 & 1;
  return result;
}

uint64_t (*TranscriptRequestInformation.selectedTextTimeInterval.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptRequestInformation.showName.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptRequestInformation.showName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t (*TranscriptRequestInformation.showName.modify())()
{
  return nullsub_1;
}

void TranscriptRequestInformation.source.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 88);
}

unsigned char *TranscriptRequestInformation.source.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 88) = *result;
  return result;
}

uint64_t (*TranscriptRequestInformation.source.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptRequestInformation.init(episodeAdamId:episodeTitle:ttmlIdentifier:selectedTextTimeInterval:showName:source:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  char v13 = *a13;
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 64) = a10 & 1;
  *(void *)(a9 + 72) = a11;
  *(void *)(a9 + 80) = a12;
  *(unsigned char *)(a9 + 88) = v13;
  return result;
}

uint64_t destroy for TranscriptRequestInformation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TranscriptRequestInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TranscriptRequestInformation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for TranscriptRequestInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptRequestInformation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 89)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptRequestInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptRequestInformation()
{
  return &type metadata for TranscriptRequestInformation;
}

Swift::Bool __swiftcall AssetCache.containsAny(of:)(Swift::OpaquePointer of)
{
  sub_1ACE4BFF0(v3, v1, v2);
  swift_getAssociatedTypeWitness();
  sub_1ACE76688();
  swift_getWitnessTable();
  char v4 = sub_1ACE76468();
  swift_release();
  return v4 & 1;
}

uint64_t (*sub_1ACE4BFF0(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __n128 v7 = MEMORY[0x1F4188790](a1);
  double v8 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v5 + 16))(v8, v7);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, v8, a2);
  return sub_1ACE4C1FC;
}

uint64_t dispatch thunk of AssetCache.asset(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of AssetCache.store(asset:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of AssetCache.containsAsset(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of AssetCache.invalidate(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1ACE4C174()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1ACE4C1FC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 40))() & 1;
}

ValueMetadata *type metadata accessor for Dependencies()
{
  return &type metadata for Dependencies;
}

void ICContentFairPlayKeySession.__allocating_init(asset:)(void *a1)
{
  sub_1ACE4EC38();
  if (v1)
  {
  }
  else
  {
    char v4 = v3;
    swift_allocObject();
    sub_1ACE4C4D8((char *)a1, v4);
  }
}

void *ICContentFairPlayKeySession.__allocating_init(asset:account:)(char *a1, id a2)
{
  uint64_t v3 = v2;
  id v6 = objc_msgSend(a2, sel_ams_DSID);
  if (v6)
  {
    __n128 v7 = v6;
    id v8 = objc_msgSend(self, sel_specificAccountWithDSID_, v6);
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB8758]), sel_initWithIdentity_, v8);

    swift_allocObject();
    uint64_t v3 = sub_1ACE4C4D8(a1, v9);
  }
  else
  {
    sub_1ACE4ED54();
    swift_allocError();
    swift_willThrow();
  }
  return v3;
}

uint64_t ACAccount.storeRequestContext()()
{
  id v1 = objc_msgSend(v0, sel_ams_DSID);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(self, sel_specificAccountWithDSID_, v1);
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB8758]), sel_initWithIdentity_, v3);

    return (uint64_t)v4;
  }
  else
  {
    sub_1ACE4ED54();
    swift_allocError();
    return swift_willThrow();
  }
}

void *sub_1ACE4C4D8(char *a1, void *a2)
{
  id v3 = v2;
  uint64_t v30 = *v2;
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v29 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FairPlayServerURLConfiguration();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE75118();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  double v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((unsigned char *)v3 + 40) = 0;
  void v3[6] = 0;
  uint64_t v15 = (void *)((char *)v3
                 + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession_pendingProcessCompletion);
  *uint64_t v15 = 0;
  v15[1] = 0;
  *(void *)((char *)v3
            + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession____lazy_storage___delegateWrapper) = 0;
  double v16 = (void *)((char *)v3
                 + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession____lazy_storage___logPrefix);
  void *v16 = 0;
  v16[1] = 0;
  *(void *)((char *)v3 + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession____lazy_storage___session) = 0;
  sub_1ACE75108();
  uint64_t v17 = sub_1ACE750C8();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v3[2] = v17;
  v3[3] = v19;
  void v3[4] = a1;
  void v3[7] = *(void *)&a1[OBJC_IVAR___PFFairPlayAsset_keyStore];
  v3[8] = a2;
  swift_unknownObjectRetain();
  id v20 = a2;
  int v21 = a1;
  uint64_t v22 = v31;
  sub_1ACDD17C8((uint64_t)v10);
  if (v22)
  {

    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    sub_1ACA76F34(*(void *)((char *)v3
                            + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession_pendingProcessCompletion));
    objc_release(*(id *)((char *)v3
                       + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession____lazy_storage___delegateWrapper));
    swift_bridgeObjectRelease();
    objc_release(*(id *)((char *)v3
                       + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession____lazy_storage___session));
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v24 = v27;
    uint64_t v23 = v28;
    sub_1ACE4F43C((uint64_t)v10, (uint64_t)v3 + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession_urlConfiguration);
    sub_1ACDD1B38();
    uint64_t v25 = v29;
    sub_1ACE4C878(v29);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))((uint64_t)v3 + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession_keyCertificateURL, v25, v23);
  }
  return v3;
}

uint64_t sub_1ACE4C878@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_sharedInstance);
  id v6 = objc_msgSend(v5, sel_syncValueForKey_, @"fps-cert");

  if (v6)
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v13, 0, sizeof(v13));
  }
  sub_1ACA50E14((uint64_t)v13, (uint64_t)v14, qword_1EB7725E0);
  if (v15)
  {
    uint64_t v7 = sub_1ACE74F28();
    int v8 = swift_dynamicCast();
    uint64_t v9 = *(void *)(v7 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v4, v8 ^ 1u, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v7) != 1) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v4, v7);
    }
  }
  else
  {
    sub_1ACA50E78((uint64_t)v14, qword_1EB7725E0);
    uint64_t v11 = sub_1ACE74F28();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  }
  sub_1ACA50E78((uint64_t)v4, &qword_1EB7731B0);
  sub_1ACDD1DD4();
  swift_allocError();
  *uint64_t v12 = 5;
  return swift_willThrow();
}

uint64_t ICContentFairPlayKeySession.id.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id ICContentFairPlayKeySession.asset.getter()
{
  return *(id *)(v0 + 32);
}

uint64_t ICContentFairPlayKeySession.bypassCache.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 40);
}

void ICContentFairPlayKeySession.bypassCache.setter(char a1)
{
  swift_beginAccess();
  *(unsigned char *)(v1 + 40) = a1;
  id v3 = sub_1ACE4CD14();
  objc_msgSend(v3, sel_setBypassCache_, *(unsigned __int8 *)(v1 + 40));
}

void sub_1ACE4CCB4(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(unsigned char *)(v3 + 40) = v2;
  id v4 = sub_1ACE4CD14();
  objc_msgSend(v4, sel_setBypassCache_, *(unsigned __int8 *)(v3 + 40));
}

id sub_1ACE4CD14()
{
  uint64_t v1 = OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession____lazy_storage___session;
  char v2 = *(void **)((char *)v0
                + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession____lazy_storage___session);
  if (v2)
  {
    id v3 = *(id *)((char *)v0 + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession____lazy_storage___session);
  }
  else
  {
    id v4 = sub_1ACE4D9F0(v0);
    id v5 = *(void **)((char *)v0 + v1);
    *(void *)((char *)v0 + v1) = v4;
    id v3 = v4;

    char v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void (*ICContentFairPlayKeySession.bypassCache.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1ACE4CDD0;
}

void sub_1ACE4CDD0(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = *(void *)(a1 + 24);
    id v5 = sub_1ACE4CD14();
    objc_msgSend(v5, sel_setBypassCache_, *(unsigned __int8 *)(v4 + 40));
  }
}

void *ICContentFairPlayKeySession.keyStoreFilePath.getter()
{
  if (!*(void *)(v0 + 56)) {
    return 0;
  }
  self;
  uint64_t v1 = (void *)swift_dynamicCastObjCClass();
  if (v1)
  {
    swift_unknownObjectRetain();
    id v2 = objc_msgSend(v1, sel_filePath);
    uint64_t v1 = (void *)sub_1ACE761B8();
    swift_unknownObjectRelease();
  }
  return v1;
}

void *ICContentFairPlayKeySession.keyResponseData.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 48);
  id v2 = v1;
  return v1;
}

void ICContentFairPlayKeySession.keyResponseData.setter(uint64_t a1)
{
  swift_beginAccess();
  id v3 = *(void **)(v1 + 48);
  *(void *)(v1 + 48) = a1;
}

uint64_t (*ICContentFairPlayKeySession.keyResponseData.modify())()
{
  return j__swift_endAccess;
}

Swift::Void __swiftcall ICContentFairPlayKeySession.pauseAutomaticKeyRenewal()()
{
  id v0 = sub_1ACE4CD14();
  objc_msgSend(v0, sel_pauseAutomaticKeyRenewal);
}

Swift::Void __swiftcall ICContentFairPlayKeySession.resumeAutomaticKeyRenewal()()
{
  id v0 = sub_1ACE4CD14();
  objc_msgSend(v0, sel_resumeAutomaticKeyRenewal);
}

void sub_1ACE4D1D4(uint64_t a1, uint64_t a2, SEL *a3)
{
  swift_retain();
  id v4 = sub_1ACE4CD14();
  [v4 *a3];
  swift_release();
}

Swift::Void __swiftcall ICContentFairPlayKeySession.register()()
{
}

Swift::Void __swiftcall ICContentFairPlayKeySession.deregister()()
{
}

void sub_1ACE4D254(SEL *a1)
{
  id v3 = sub_1ACE4CD14();
  objc_msgSend(v3, *a1, *(void *)(*(void *)(v1 + 32) + OBJC_IVAR___PFFairPlayAsset_avAsset));
}

void sub_1ACE4D2C0(uint64_t a1, uint64_t a2, SEL *a3)
{
  swift_retain();
  id v5 = sub_1ACE4CD14();
  objc_msgSend(v5, *a3, *(void *)(*(void *)(a1 + 32) + OBJC_IVAR___PFFairPlayAsset_avAsset));
  swift_release();
}

void ICContentFairPlayKeySession.processKey(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5 = (void *)(v4 + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession_pendingProcessCompletion);
  uint64_t v6 = *(void *)(v4 + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession_pendingProcessCompletion);
  *id v5 = a3;
  v5[1] = a4;
  sub_1ACA76F34(v6);
  swift_retain();
  id v7 = sub_1ACE4CD14();
  id v8 = (id)sub_1ACE76178();
  objc_msgSend(v7, sel_processKeyWithIdentifier_, v8);
}

Swift::Void __swiftcall ICContentFairPlayKeySession.renewKey()()
{
  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE754C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB76D598);
  swift_retain_n();
  uint64_t v1 = sub_1ACE75498();
  os_log_type_t v2 = sub_1ACE76C08();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v8 = v4;
    *(_DWORD *)id v3 = 136315138;
    unint64_t v5 = sub_1ACE4D6A0();
    sub_1ACA3189C(v5, v6, &v8);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v4, -1, -1);
    MEMORY[0x1AD11B340](v3, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  id v7 = sub_1ACE4CD14();
  objc_msgSend(v7, sel_renewAllKeys);
}

unint64_t sub_1ACE4D6A0()
{
  uint64_t v1 = (unint64_t *)(v0
                          + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession____lazy_storage___logPrefix);
  if (*(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession____lazy_storage___logPrefix + 8))
  {
    unint64_t v2 = *v1;
  }
  else
  {
    unint64_t v2 = 0xD000000000000031;
    *uint64_t v1 = 0xD000000000000031;
    v1[1] = 0x80000001ACED4900;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

void ICContentFairPlayKeySession.stopAndInvalidateKeys(completion:)(uint64_t a1, uint64_t a2)
{
  id v4 = sub_1ACE4CD14();
  void v6[4] = a1;
  void v6[5] = a2;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  void v6[2] = sub_1ACCB9FCC;
  v6[3] = &block_descriptor_96;
  unint64_t v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_stopSessionInvalidatingKeys_withCompletion_, 1, v5);
  _Block_release(v5);
}

id sub_1ACE4D938()
{
  uint64_t v1 = OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession____lazy_storage___delegateWrapper;
  unint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession____lazy_storage___delegateWrapper);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession____lazy_storage___delegateWrapper);
  }
  else
  {
    id v4 = (objc_class *)type metadata accessor for ICContentKeySessionDelegateWrapper();
    unint64_t v5 = (char *)objc_allocWithZone(v4);
    *(void *)&v5[OBJC_IVAR____TtC18PodcastsFoundationP33_C5CCB7FDAA241CA13F97384CFFA3ACE334ICContentKeySessionDelegateWrapper_delegate
                 + 8] = 0;
    *(void *)(swift_unknownObjectWeakInit() + 8) = &off_1F03A3970;
    swift_unknownObjectWeakAssign();
    v10.receiver = v5;
    v10.super_class = v4;
    id v6 = objc_msgSendSuper2(&v10, sel_init);
    id v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    unint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1ACE4D9F0(void *a1)
{
  uint64_t v2 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[7];
  id v6 = (void *)a1[8];
  swift_unknownObjectRetain();
  id v8 = v6;
  id v9 = sub_1ACE4D938();
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB85F8]), sel_initWithRequestContext_keyStore_delegate_, v8, v7, v9);

  swift_unknownObjectRelease();
  uint64_t v11 = a1[4];
  uint64_t v12 = (void *)sub_1ACE77AF8();
  objc_msgSend(v10, sel_setAdamID_, v12);

  uint64_t v13 = (void *)sub_1ACE74E18();
  objc_msgSend(v10, sel_setKeyCertificateURL_, v13);

  objc_msgSend(v10, sel_setKeyServerProtocolType_, 2);
  objc_msgSend(v10, sel_setBypassCache_, 0);
  id v14 = *(id *)(v11 + OBJC_IVAR___PFFairPlayAsset_avAsset);
  id v15 = objc_msgSend(v14, sel_URL);
  sub_1ACE74E98();

  LOBYTE(v15) = sub_1ACE74D98();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

  objc_msgSend(v10, sel_setRequestOfflineKeys_, v15 & 1);
  double v16 = (void *)sub_1ACE74E18();
  objc_msgSend(v10, sel_setKeyServerURL_, v16);

  type metadata accessor for FairPlayServerURLConfiguration();
  uint64_t v17 = (void *)sub_1ACE74E18();
  objc_msgSend(v10, sel_setStreamingleaseStopURL_, v17);

  uint64_t v18 = (void *)sub_1ACE74E18();
  objc_msgSend(v10, sel_setOfflineLeaseStartURL_, v18);

  uint64_t v19 = (void *)sub_1ACE74E18();
  objc_msgSend(v10, sel_setOfflineLeaseStopURL_, v19);

  id v20 = (void *)sub_1ACE74E18();
  objc_msgSend(v10, sel_setOfflineLeaseStopNonceURL_, v20);

  return v10;
}

id *ICContentFairPlayKeySession.deinit()
{
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession_keyCertificateURL;
  uint64_t v2 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1ACE4EDA8((uint64_t)v0 + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession_urlConfiguration);
  sub_1ACA76F34(*(uint64_t *)((char *)v0
                           + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession_pendingProcessCompletion));
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession____lazy_storage___delegateWrapper));
  swift_bridgeObjectRelease();
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession____lazy_storage___session));
  return v0;
}

uint64_t ICContentFairPlayKeySession.__deallocating_deinit()
{
  ICContentFairPlayKeySession.deinit();
  return swift_deallocClassInstance();
}

void sub_1ACE4DE18(uint64_t a1, unint64_t a2, void *a3, id a4)
{
  uint64_t v5 = v4;
  id v9 = &unk_1EB76D000;
  if (a4)
  {
    id v11 = a4;
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1ACE754C8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EB76D598);
    id v13 = a4;
    id v14 = a3;
    swift_retain();
    swift_bridgeObjectRetain();
    id v15 = a4;
    swift_retain();
    swift_bridgeObjectRetain();
    id v16 = v14;
    uint64_t v17 = sub_1ACE75498();
    os_log_type_t v18 = sub_1ACE76BE8();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      v78[0] = v74;
      *(_DWORD *)uint64_t v19 = 136316419;
      unint64_t v20 = sub_1ACE4D6A0();
      sub_1ACA3189C(v20, v21, v78);
      sub_1ACE76FF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2160;
      sub_1ACE76FF8();
      *(_WORD *)(v19 + 22) = 2081;
      swift_bridgeObjectRetain();
      sub_1ACA3189C(a1, a2, v78);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 32) = 2160;
      sub_1ACE76FF8();
      *(_WORD *)(v19 + 42) = 2081;
      id v22 = v16;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F6BF0);
      uint64_t v23 = sub_1ACE76228();
      sub_1ACA3189C(v23, v24, v78);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 52) = 2082;
      swift_getErrorValue();
      uint64_t v25 = sub_1ACE77A98();
      uint64_t v77 = sub_1ACA3189C(v25, v26, v78);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AC9D5000, v17, v18, "%s ICContentKeySession failed to process key for: %{private,mask.hash}s, with delivery response %{private,mask.hash}s and error %{public}s", (uint8_t *)v19, 0x3Eu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v74, -1, -1);
      uint64_t v27 = v19;
      id v9 = (void *)&unk_1EB76D000;
      MEMORY[0x1AD11B340](v27, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
  }
  else
  {
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1ACE754C8();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EB76D598);
    id v29 = a3;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    id v30 = v29;
    uint64_t v31 = sub_1ACE75498();
    os_log_type_t v32 = sub_1ACE76C08();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      os_log_t log = (os_log_t)swift_slowAlloc();
      v78[0] = (uint64_t)log;
      *(_DWORD *)uint64_t v33 = 136316163;
      unint64_t v34 = sub_1ACE4D6A0();
      sub_1ACA3189C(v34, v35, v78);
      sub_1ACE76FF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2160;
      sub_1ACE76FF8();
      *(_WORD *)(v33 + 22) = 2081;
      swift_bridgeObjectRetain();
      sub_1ACA3189C(a1, a2, v78);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 32) = 2160;
      sub_1ACE76FF8();
      *(_WORD *)(v33 + 42) = 2081;
      id v36 = v30;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F6BF0);
      uint64_t v37 = sub_1ACE76228();
      uint64_t v77 = sub_1ACA3189C(v37, v38, v78);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v31, v32, "%s ICContentKeySession successfully processed key for: %{private,mask.hash}s, with delivery response %{private,mask.hash}s.", (uint8_t *)v33, 0x34u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](log, -1, -1);
      uint64_t v39 = v33;
      id v9 = (void *)&unk_1EB76D000;
      MEMORY[0x1AD11B340](v39, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
  }
  if (v9[183] != -1) {
    swift_once();
  }
  uint64_t v40 = sub_1ACE754C8();
  __swift_project_value_buffer(v40, (uint64_t)qword_1EB76D598);
  id v41 = a3;
  swift_retain_n();
  id v42 = v41;
  uint64_t v43 = sub_1ACE75498();
  os_log_type_t v44 = sub_1ACE76C08();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = swift_slowAlloc();
    uint64_t v46 = v5;
    uint64_t v47 = swift_slowAlloc();
    v78[0] = v47;
    *(_DWORD *)uint64_t v45 = 136315651;
    unint64_t v48 = sub_1ACE4D6A0();
    sub_1ACA3189C(v48, v49, v78);
    uint64_t v50 = a3;
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 12) = 2160;
    sub_1ACE76FF8();
    *(_WORD *)(v45 + 22) = 2081;
    id v51 = v42;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F6BF0);
    uint64_t v52 = sub_1ACE76228();
    uint64_t v77 = sub_1ACA3189C(v52, v53, v78);
    sub_1ACE76FF8();

    a3 = v50;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v43, v44, "%s Setting currentResponse=%{private,mask.hash}s.", (uint8_t *)v45, 0x20u);
    swift_arrayDestroy();
    uint64_t v54 = v47;
    uint64_t v5 = v46;
    MEMORY[0x1AD11B340](v54, -1, -1);
    MEMORY[0x1AD11B340](v45, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  id v55 = v42;
  id v56 = sub_1ACE4F114(a3);
  swift_beginAccess();
  uint64_t v57 = *(void **)(v5 + 48);
  *(void *)(v5 + 48) = v56;

  uint64_t v58 = (uint64_t *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession_pendingProcessCompletion);
  char v59 = *(void (**)(id))(v5
                                  + OBJC_IVAR____TtC18PodcastsFoundation27ICContentFairPlayKeySession_pendingProcessCompletion);
  if (v59)
  {
    swift_retain_n();
    sub_1ACA6DEC8((uint64_t)v59);
    uint64_t v60 = sub_1ACE75498();
    os_log_type_t v61 = sub_1ACE76BD8();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = (uint8_t *)swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      uint64_t v77 = v63;
      *(_DWORD *)uint64_t v62 = 136315138;
      unint64_t v64 = sub_1ACE4D6A0();
      sub_1ACA3189C(v64, v65, &v77);
      sub_1ACE76FF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v60, v61, "%s Calling completion handler.", v62, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v63, -1, -1);
      MEMORY[0x1AD11B340](v62, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    v59(a4);
    sub_1ACA76F34((uint64_t)v59);
    uint64_t v72 = *v58;
    *uint64_t v58 = 0;
    v58[1] = 0;
    sub_1ACA76F34(v72);
  }
  else
  {
    swift_retain_n();
    char v66 = sub_1ACE75498();
    os_log_type_t v67 = sub_1ACE76BD8();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      uint64_t v77 = v69;
      *(_DWORD *)uint64_t v68 = 136315138;
      unint64_t v70 = sub_1ACE4D6A0();
      sub_1ACA3189C(v70, v71, &v77);
      sub_1ACE76FF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v66, v67, "%s No completion handler found.", v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v69, -1, -1);
      MEMORY[0x1AD11B340](v68, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t ICContentFairPlayKeySession.description.getter()
{
  uint64_t v1 = v0;
  sub_1ACE77268();
  sub_1ACE762C8();
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  id v2 = *(id *)(v0 + 32);
  id v3 = objc_msgSend(v2, sel_description);
  sub_1ACE761B8();

  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  swift_beginAccess();
  id v4 = *(id *)(v1 + 48);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F6B58);
  sub_1ACE76228();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1ACE4EAD0()
{
  return ICContentFairPlayKeySession.description.getter();
}

void sub_1ACE4EC38()
{
  id v0 = objc_msgSend(self, sel_ams_sharedAccountStore);
  id v1 = objc_msgSend(v0, sel_ams_activeiTunesAccount);
  if (v1 && (id v2 = v1, v3 = objc_msgSend(v1, sel_ams_DSID), v2, v3))
  {

    id v4 = objc_msgSend(self, sel_specificAccountWithDSID_, v3);
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB8758]), sel_initWithIdentity_, v4);
  }
  else
  {
    sub_1ACDD1DD4();
    swift_allocError();
    *uint64_t v5 = 2;
    swift_willThrow();
  }
}

unint64_t sub_1ACE4ED54()
{
  unint64_t result = qword_1E99F6B20;
  if (!qword_1E99F6B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6B20);
  }
  return result;
}

uint64_t sub_1ACE4EDA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FairPlayServerURLConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ACE4EE04@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 40);
  return result;
}

uint64_t sub_1ACE4EE50()
{
  return type metadata accessor for ICContentFairPlayKeySession();
}

uint64_t type metadata accessor for ICContentFairPlayKeySession()
{
  uint64_t result = qword_1E99F6B68;
  if (!qword_1E99F6B68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACE4EEA4()
{
  uint64_t result = sub_1ACE74F28();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FairPlayServerURLConfiguration();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for ICContentFairPlayKeySession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ICContentFairPlayKeySession);
}

uint64_t type metadata accessor for ICContentKeySessionDelegateWrapper()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ICContentFairPlayKeySession.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACE4F084);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ICContentFairPlayKeySession.Errors()
{
  return &type metadata for ICContentFairPlayKeySession.Errors;
}

unint64_t sub_1ACE4F0C0()
{
  unint64_t result = qword_1E99F6BE8;
  if (!qword_1E99F6BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6BE8);
  }
  return result;
}

id sub_1ACE4F114(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = sub_1ACE750A8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v13 = MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v24 - v14;
  if (a1)
  {
    id v16 = objc_msgSend(a1, sel_renewalDate, v13.n128_f64[0]);
    if (v16)
    {
      uint64_t v17 = v16;
      sub_1ACE75078();

      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, 1, 1, v8);
    }
    sub_1ACA50E14((uint64_t)v4, (uint64_t)v7, (uint64_t *)&unk_1EB773140);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v7, v8);
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      v19(v11, v15, v8);
      unint64_t v20 = (objc_class *)type metadata accessor for FairPlayKeyResponseData();
      unint64_t v21 = (char *)objc_allocWithZone(v20);
      v19(&v21[OBJC_IVAR___PFFairPlayKeyResponseData_renewalDate], v11, v8);
      v24.receiver = v21;
      v24.super_class = v20;
      id v18 = objc_msgSendSuper2(&v24, sel_init);
      id v22 = *(void (**)(char *, uint64_t))(v9 + 8);
      v22(v11, v8);

      v22(v15, v8);
      return v18;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56))(v7, 1, 1, v8, v13);
  }
  sub_1ACA50E78((uint64_t)v7, (uint64_t *)&unk_1EB773140);
  return 0;
}

uint64_t sub_1ACE4F404()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1ACE4F43C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FairPlayServerURLConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static NSManagedObject.predicateForObjects(with:)(uint64_t a1)
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ACE843F0;
  *(void *)(v2 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705D0);
  *(void *)(v2 + 64) = sub_1ACC2A29C();
  *(void *)(v2 + 32) = a1;
  swift_bridgeObjectRetain();
  return sub_1ACE76B88();
}

id sub_1ACE4F55C()
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
  uint64_t v0 = sub_1ACE76578();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1ACE843F0;
  *(void *)(v1 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705D0);
  *(void *)(v1 + 64) = sub_1ACC2A29C();
  *(void *)(v1 + 32) = v0;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_1ACE76B88();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t InMemoryAssetCache.__allocating_init<A>(maxWeight:purgePublisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACE4FADC(a1, a2, a3, a4, (uint64_t (*)(void))sub_1ACE511B8);
}

void InMemoryAssetCache.asset(at:)(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = v1[2];
  uint64_t v5 = *(void *)(*v1 + 80);
  uint64_t v6 = v2[11];
  uint64_t v7 = v2[12];
  uint64_t v8 = v2[13];
  uint64_t v9 = v2[14];
  uint64_t v10 = a1;
  uint64_t v11 = v5;
  uint64_t v12 = v6;
  uint64_t v13 = v7;
  uint64_t v14 = v8;
  uint64_t v15 = v9;
  type metadata accessor for InMemoryAssetCache.SizedStore();
  sub_1ACE76FD8();
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACE5121C, (uint64_t)&v4, v3);
}

uint64_t InMemoryAssetCache.store(asset:at:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v22 = a2;
  uint64_t v5 = (void *)*v3;
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v5[11];
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v21 = v5[10];
  uint64_t v14 = v5[12];
  uint64_t v15 = v5[13];
  uint64_t v16 = v5[14];
  uint64_t v27 = v21;
  uint64_t v28 = v10;
  uint64_t v29 = v14;
  uint64_t v30 = v15;
  uint64_t v31 = v16;
  type metadata accessor for InMemoryAssetCache.Record();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v10, v15);
  sub_1ACE75088();
  swift_allocObject();
  uint64_t v18 = sub_1ACE50E38((uint64_t)v13, v17, (uint64_t)v9);
  uint64_t v19 = v3[2];
  uint64_t v24 = v22;
  uint64_t v25 = v3;
  uint64_t v26 = v18;
  uint64_t v27 = v21;
  uint64_t v28 = v10;
  uint64_t v29 = v14;
  uint64_t v30 = v15;
  uint64_t v31 = v16;
  type metadata accessor for InMemoryAssetCache.SizedStore();
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACE51270, (uint64_t)v23, v19);
  return swift_release();
}

void InMemoryAssetCache.invalidate(at:)(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = v1[2];
  uint64_t v5 = *(void *)(*v1 + 80);
  uint64_t v6 = v2[11];
  uint64_t v7 = v2[12];
  uint64_t v8 = v2[13];
  uint64_t v9 = v2[14];
  uint64_t v10 = a1;
  uint64_t v11 = v5;
  uint64_t v12 = v6;
  uint64_t v13 = v7;
  uint64_t v14 = v8;
  uint64_t v15 = v9;
  type metadata accessor for InMemoryAssetCache.SizedStore();
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACE51290, (uint64_t)&v4, v3);
}

uint64_t InMemoryAssetCache.init<A>(maxWeight:purgePublisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACE4FADC(a1, a2, a3, a4, (uint64_t (*)(void))sub_1ACE5104C);
}

uint64_t sub_1ACE4FADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v7 = a5();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a2, a3);
  return v7;
}

uint64_t sub_1ACE4FB48(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACE4FC1C(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)*a3;
  swift_release();
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = v8[10];
  v10[3] = v8[11];
  void v10[4] = a4;
  v10[5] = v8[12];
  void v10[6] = v8[13];
  void v10[7] = a5;
  v10[8] = v8[14];
  v10[9] = v9;
  swift_retain();
  uint64_t v11 = sub_1ACE75D58();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v11;
  return result;
}

uint64_t sub_1ACE4FD7C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1ACE4FDD4();
    return swift_release();
  }
  return result;
}

void sub_1ACE4FDD4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  type metadata accessor for InMemoryAssetCache.SizedStore();
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACE51658, v0, v1);
}

uint64_t InMemoryAssetCache.currentSize.getter()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = v0[2];
  uint64_t v5 = *(void *)(*v0 + 80);
  uint64_t v6 = v1[11];
  uint64_t v7 = v1[12];
  uint64_t v8 = v1[13];
  uint64_t v9 = v1[14];
  uint64_t v10 = v5;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  type metadata accessor for InMemoryAssetCache.SizedStore();
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACE512B4, (uint64_t)&v4, v2);
  return v10;
}

uint64_t InMemoryAssetCache.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t InMemoryAssetCache.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACE4FFF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v33 = a7;
  uint64_t v31 = a3;
  uint64_t v32 = a5;
  uint64_t v11 = sub_1ACE750A8();
  uint64_t v29 = *(void *)(v11 - 8);
  uint64_t v30 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v17 = (char *)&v28 - v16;
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a2, a4);
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v19 = v31;
  uint64_t v34 = a2;
  uint64_t v35 = v31;
  uint64_t v36 = a4;
  uint64_t v37 = v32;
  uint64_t v38 = a6;
  uint64_t v20 = type metadata accessor for InMemoryAssetCache.Record();
  MEMORY[0x1AD118260](&v39, v17, v18, AssociatedTypeWitness, v20, a6);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, AssociatedTypeWitness);
  uint64_t v21 = v39;
  if (v39)
  {
    sub_1ACE75088();
    uint64_t v22 = v21 + *(void *)(*(void *)v21 + 136);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 40))(v22, v13, v30);
    swift_endAccess();
    uint64_t v23 = *(void *)(v19 - 8);
    uint64_t v24 = v33;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v33, v21 + *(void *)(*(void *)v21 + 120), v19);
    swift_release();
    uint64_t v25 = 0;
    uint64_t v26 = v24;
  }
  else
  {
    uint64_t v23 = *(void *)(v19 - 8);
    uint64_t v25 = 1;
    uint64_t v26 = v33;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v26, v25, 1, v19);
}

uint64_t sub_1ACE502F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ACE50E38(a1, a2, a3);
}

uint64_t sub_1ACE50344(unint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v32 = a4;
  uint64_t v33 = a1;
  uint64_t v5 = *a3;
  uint64_t v6 = *(void *)(*a3 + 96);
  uint64_t v7 = *(void *)(*a3 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v11 = (char *)v27 - v10;
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v6 + 16);
  uint64_t v29 = a2;
  v28(v7, v6);
  uint64_t v12 = *(void *)(v5 + 88);
  uint64_t v13 = *(void *)(v5 + 104);
  uint64_t v14 = v5;
  uint64_t v15 = v33;
  uint64_t v16 = *(void *)(v14 + 112);
  uint64_t v34 = v7;
  uint64_t v35 = v12;
  uint64_t v30 = v13;
  uint64_t v31 = v12;
  uint64_t v36 = v6;
  uint64_t v37 = v13;
  uint64_t v38 = v16;
  type metadata accessor for InMemoryAssetCache.Record();
  v27[0] = sub_1ACE76088();
  v27[1] = v15 + 2;
  sub_1ACE76018();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
  if (v39)
  {
    unint64_t v17 = *(void *)(v39 + *(void *)(*(void *)v39 + 128));
    uint64_t result = swift_release();
    unint64_t v19 = v15[1];
    BOOL v20 = v19 >= v17;
    unint64_t v21 = v19 - v17;
    if (!v20)
    {
      __break(1u);
LABEL_9:
      __break(1u);
      return result;
    }
    v15[1] = v21;
  }
  uint64_t v22 = v32;
  uint64_t v23 = *(void *)(*(void *)v32 + 128);
  uint64_t result = sub_1ACE517A0(*(void *)(v32 + v23), v15, v7, v31, v6, v30, v16);
  if (result)
  {
    uint64_t v24 = *(void *)(v22 + v23);
    unint64_t v25 = v15[1];
    BOOL v20 = __CFADD__(v25, v24);
    unint64_t v26 = v25 + v24;
    if (v20) {
      goto LABEL_9;
    }
    v15[1] = v26;
    v28(v7, v6);
    uint64_t v34 = v22;
    swift_retain();
    return sub_1ACE760B8();
  }
  return result;
}

uint64_t InMemoryAssetCache.containsAsset(for:)(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = v1[2];
  uint64_t v6 = *(void *)(*v1 + 80);
  uint64_t v7 = v2[11];
  uint64_t v8 = v2[12];
  uint64_t v9 = v2[13];
  uint64_t v10 = v2[14];
  uint64_t v11 = a1;
  uint64_t v12 = v6;
  uint64_t v13 = v7;
  uint64_t v14 = v8;
  uint64_t v15 = v9;
  uint64_t v16 = v10;
  type metadata accessor for InMemoryAssetCache.SizedStore();
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACE512C0, (uint64_t)&v5, v3);
  return v12;
}

uint64_t sub_1ACE506D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unsigned char *a8@<X8>)
{
  v21[1] = a2;
  uint64_t v22 = a8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v17 = (char *)v21 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v27 = a7;
  type metadata accessor for InMemoryAssetCache.Record();
  uint64_t v23 = nullsub_1(v18);
  unint64_t v19 = *(void (**)(uint64_t, uint64_t))(a5 + 16);
  swift_bridgeObjectRetain();
  v19(a3, a5);
  sub_1ACE76048();
  swift_getWitnessTable();
  LOBYTE(a4) = sub_1ACE76488();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, AssociatedTypeWitness);
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v22 = a4 & 1;
  return result;
}

uint64_t sub_1ACE508A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v22 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v21 - v14;
  (*(void (**)(uint64_t, uint64_t))(a5 + 16))(a3, a5);
  uint64_t v21 = a1;
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t v26 = v22;
  uint64_t v27 = a7;
  type metadata accessor for InMemoryAssetCache.Record();
  sub_1ACE76088();
  sub_1ACE76018();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
  uint64_t result = v28;
  if (v28)
  {
    unint64_t v17 = *(void *)(v28 + *(void *)(*(void *)v28 + 128));
    uint64_t result = swift_release();
    unint64_t v18 = *(void *)(v21 + 8);
    BOOL v19 = v18 >= v17;
    unint64_t v20 = v18 - v17;
    if (v19) {
      *(void *)(v21 + 8) = v20;
    }
    else {
      __break(1u);
    }
  }
  return result;
}

void sub_1ACE50A48(uint64_t a1)
{
}

uint64_t sub_1ACE50A6C(uint64_t a1, uint64_t a2)
{
  return InMemoryAssetCache.store(asset:at:)(a1, a2);
}

uint64_t sub_1ACE50A90(uint64_t a1)
{
  return InMemoryAssetCache.containsAsset(for:)(a1) & 1;
}

void sub_1ACE50AB8(uint64_t a1)
{
}

uint64_t sub_1ACE50ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v45 = a2;
  uint64_t v44 = sub_1ACE750A8();
  uint64_t v53 = *(void *)(v44 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v44);
  uint64_t v46 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v47 = (char *)&v41 - v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v51 = a6;
  uint64_t v52 = a7;
  type metadata accessor for InMemoryAssetCache.Record();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v18 = TupleTypeMetadata2 - 8;
  uint64_t v19 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v41 - v22;
  uint64_t v42 = AssociatedTypeWitness;
  uint64_t v43 = (char *)&v41 - v22;
  uint64_t v24 = *(int *)(v18 + 56);
  uint64_t v25 = *(void *)(AssociatedTypeWitness - 8);
  id v41 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v41((char *)&v41 - v22, a1, AssociatedTypeWitness);
  uint64_t v26 = *(void *)(a1 + v24);
  *(void *)&v23[v24] = v26;
  uint64_t v27 = v26 + *(void *)(*(void *)v26 + 136);
  swift_beginAccess();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  uint64_t v29 = v27;
  uint64_t v30 = v44;
  v28(v47, v29, v44);
  uint64_t v31 = *(int *)(v18 + 56);
  uint64_t v32 = v45;
  v41(v21, v45, AssociatedTypeWitness);
  uint64_t v33 = *(void *)(v32 + v31);
  *(void *)&v21[v31] = v33;
  uint64_t v34 = v33 + *(void *)(*(void *)v33 + 136);
  swift_beginAccess();
  uint64_t v35 = v46;
  v28(v46, v34, v30);
  uint64_t v36 = v47;
  LOBYTE(v34) = sub_1ACE75028();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v53 + 8);
  v37(v35, v30);
  v37(v36, v30);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v39 = v42;
  v38(v21, v42);
  v38(v43, v39);
  return v34 & 1;
}

uint64_t sub_1ACE50E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v3 + 88) - 8) + 32))(v3 + *(void *)(*(void *)v3 + 120), a1);
  *(void *)(v3 + *(void *)(*(void *)v3 + 128)) = a2;
  uint64_t v6 = v3 + *(void *)(*(void *)v3 + 136);
  uint64_t v7 = sub_1ACE750A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, a3, v7);
  return v3;
}

uint64_t sub_1ACE50F30()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 88) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 120));
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 136);
  uint64_t v2 = sub_1ACE750A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1ACE50FF8()
{
  sub_1ACE50F30();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACE5104C(uint64_t a1)
{
  v10[0] = sub_1ACE4FB48(a1);
  v10[1] = v2;
  void v10[2] = v3;
  uint64_t v4 = type metadata accessor for InMemoryAssetCache.SizedStore();
  uint64_t v5 = sub_1ACA7989C(v10, v4);
  swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v5;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB772738);
  uint64_t v6 = swift_allocObject();
  *(void *)(v1 + 24) = v6;
  *(_DWORD *)(v6 + 24) = 0;
  uint64_t v7 = (os_unfair_lock_s *)(v6 + 24);
  *(void *)(v6 + 16) = 0;
  uint64_t v8 = (uint64_t *)(v6 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
  sub_1ACE51594(v8);
  os_unfair_lock_unlock(v7);
  return v1;
}

uint64_t sub_1ACE511B8(uint64_t a1)
{
  return sub_1ACE5104C(a1);
}

uint64_t sub_1ACE5121C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACE4FFF4(a1, v2[2], v2[3], v2[4], v2[5], v2[6], a2);
}

uint64_t type metadata accessor for InMemoryAssetCache.SizedStore()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for InMemoryAssetCache.Record()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1ACE51270(unint64_t *a1)
{
  return sub_1ACE50344(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1ACE51290(uint64_t a1)
{
  return sub_1ACE508A0(a1, v1[7], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1ACE512B4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 8);
  return result;
}

uint64_t sub_1ACE512C0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1ACE506D4(a1, v2[7], v2[2], v2[3], v2[4], v2[5], v2[6], a2);
}

uint64_t sub_1ACE512E4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for InMemoryAssetCache()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for InMemoryAssetCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InMemoryAssetCache);
}

uint64_t dispatch thunk of InMemoryAssetCache.__allocating_init<A>(maxWeight:purgePublisher:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1ACE51370()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1ACE750A8();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1ACE5144C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1ACE51484(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ACE514D0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ACE5150C(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1ACE51554(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1ACE51594(uint64_t *a1)
{
  return sub_1ACE4FC1C(a1, *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1ACE515B4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACE515EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACE51624()
{
  return sub_1ACE4FD7C();
}

uint64_t sub_1ACE51658(uint64_t a1)
{
  return sub_1ACE516E8(a1);
}

uint64_t sub_1ACE516E8(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for InMemoryAssetCache.Record();
  sub_1ACE76088();
  uint64_t result = sub_1ACE76078();
  *(void *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_1ACE517A0(unint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v69[0] = a3;
  v69[1] = a4;
  uint64_t v65 = a4;
  v69[2] = a5;
  v69[3] = a6;
  v69[4] = a7;
  type metadata accessor for InMemoryAssetCache.Record();
  uint64_t v63 = AssociatedTypeWitness;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v62 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  char v66 = (char *)&v52 - v20;
  MEMORY[0x1F4188790](v19);
  os_log_type_t v67 = (char *)&v52 - v22;
  unint64_t v23 = *a2;
  BOOL v24 = *a2 == a1;
  if (*a2 < a1) {
    return v23 >= a1;
  }
  unint64_t v61 = a1;
  if (v24)
  {
    sub_1ACE516E8((uint64_t)a2);
    a1 = v61;
    return v23 >= a1;
  }
  uint64_t v53 = v21;
  unint64_t v54 = v23;
  unint64_t v25 = a2[2];
  uint64_t v60 = a2 + 2;
  unint64_t v68 = v25;
  uint64_t v26 = sub_1ACE76088();
  uint64_t v59 = a6;
  uint64_t v27 = v26;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v29 = MEMORY[0x1AD1185B0](v69, v27, WitnessTable);
  unint64_t v64 = &v52;
  unint64_t v68 = v69[0];
  MEMORY[0x1F4188790](v29);
  uint64_t v30 = v65;
  *(&v52 - 6) = a3;
  *(&v52 - 5) = v30;
  uint64_t v31 = v59;
  *(&v52 - 4) = a5;
  *(&v52 - 3) = v31;
  *(&v52 - 2) = a7;
  uint64_t v59 = v27;
  sub_1ACE77298();
  swift_getWitnessTable();
  uint64_t v32 = sub_1ACE76448();
  swift_bridgeObjectRelease();
  if (!MEMORY[0x1AD118820](v32, TupleTypeMetadata2))
  {
LABEL_20:
    swift_bridgeObjectRelease();
    a1 = v61;
    unint64_t v23 = v54;
    return v23 >= a1;
  }
  uint64_t v33 = 0;
  uint64_t v34 = v63;
  uint64_t v57 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v58 = (void (**)(char *, void *, uint64_t))(v62 + 16);
  uint64_t v55 = v32;
  uint64_t v56 = v63 - 8;
  while (1)
  {
    char v35 = sub_1ACE76618();
    sub_1ACE765B8();
    if (v35)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v62 + 16))(v67, v32+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(void *)(v62 + 72) * v33, TupleTypeMetadata2);
      uint64_t v36 = (uint64_t *)(v33 + 1);
      if (__OFADD__(v33, 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t result = sub_1ACE772C8();
      if (v53 != 8) {
        goto LABEL_24;
      }
      v69[0] = result;
      (*v58)(v67, v69, TupleTypeMetadata2);
      swift_unknownObjectRelease();
      uint64_t v36 = (uint64_t *)(v33 + 1);
      if (__OFADD__(v33, 1))
      {
LABEL_17:
        __break(1u);
        goto LABEL_20;
      }
    }
    unint64_t v64 = v36;
    uint64_t v65 = v33;
    uint64_t v37 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v38 = v66;
    uint64_t v39 = *(void *)&v67[v57];
    uint64_t v40 = *(void *)(v34 - 8);
    id v41 = *(uint64_t (**)(char *))(v40 + 32);
    uint64_t result = v41(v66);
    *(void *)&v38[v37] = v39;
    uint64_t v43 = a2;
    unint64_t v44 = a2[1];
    if (__CFADD__(v44, v61)) {
      break;
    }
    uint64_t v45 = v43;
    if (*v43 >= v44 + v61)
    {
      (*(void (**)(char *, uint64_t))(v62 + 8))(v66, TupleTypeMetadata2);
      goto LABEL_20;
    }
    uint64_t v46 = v66;
    sub_1ACE76018();
    swift_release();
    uint64_t v47 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v48 = v46;
    uint64_t v34 = v63;
    ((void (*)(char *, char *, uint64_t))v41)(v18, v48, v63);
    *(void *)&v18[v47] = v39;
    unint64_t v49 = *(void *)(v39 + *(void *)(*(void *)v39 + 128));
    uint64_t result = swift_release();
    unint64_t v50 = v44 - v49;
    if (v44 < v49) {
      goto LABEL_23;
    }
    a2 = v45;
    v45[1] = v50;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v18, v34);
    uint64_t v32 = v55;
    uint64_t v51 = MEMORY[0x1AD118820](v55, TupleTypeMetadata2);
    uint64_t v33 = v65 + 1;
    if (v64 == (uint64_t *)v51) {
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1ACE51CE8(uint64_t a1, uint64_t a2)
{
  return sub_1ACE50ADC(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]) & 1;
}

uint64_t InterestModel.adamID.getter()
{
  return *(void *)v0;
}

double InterestModel.interestValue.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t InterestModel.interestValueUpdatedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InterestModel() + 24);
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for InterestModel()
{
  uint64_t result = qword_1EB76A318;
  if (!qword_1EB76A318) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t InterestModel.init(adamID:interestValue:interestValueUpdatedDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(void *)a3 = a1;
  *(double *)(a3 + 8) = a4;
  uint64_t v5 = a3 + *(int *)(type metadata accessor for InterestModel() + 24);
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  return v7(v5, a2, v6);
}

uint64_t static InterestModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  type metadata accessor for InterestModel();
  return sub_1ACE75068();
}

uint64_t sub_1ACE51EE4(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8)) {
    return sub_1ACE75068();
  }
  else {
    return 0;
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for InterestModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1ACE750A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for InterestModel(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_1ACE750A8();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

_OWORD *initializeWithCopy for InterestModel(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE750A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *assignWithCopy for InterestModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE750A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for InterestModel(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE750A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for InterestModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE750A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for InterestModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACE52264);
}

uint64_t sub_1ACE52264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_1ACE750A8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for InterestModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACE522E8);
}

uint64_t sub_1ACE522E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_1ACE5235C()
{
  uint64_t result = sub_1ACE750A8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void ServerPodcastEpisode.transcriptRequestInformation()(uint64_t a1@<X8>)
{
  uint64_t v4 = &v1[OBJC_IVAR___MTServerPodcastEpisode_relationships];
  swift_beginAccess();
  if (!*(void *)v4
    || (uint64_t v5 = (void *)(*(void *)v4 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast),
        swift_beginAccess(),
        !*v5))
  {
    uint64_t v2 = 0;
    goto LABEL_32;
  }
  uint64_t v6 = (unint64_t *)(*v5 + OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data);
  swift_beginAccess();
  unint64_t v7 = *v6;
  if (*v6 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1ACE77508())
    {
LABEL_5:
      if ((v7 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = (char *)MEMORY[0x1AD119490](0, v7);
      }
      else
      {
        if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_59;
        }
        uint64_t v9 = (char *)*(id *)(v7 + 32);
      }
      uint64_t v2 = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)&v2[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships];
      if (!v10) {
        goto LABEL_32;
      }
      uint64_t v11 = *(void *)(v10 + 16);
      if (!v11) {
        goto LABEL_32;
      }
      unint64_t v7 = *(void *)(v11 + 16);
      if (!(v7 >> 62))
      {
        uint64_t v12 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v12) {
          goto LABEL_12;
        }
        goto LABEL_31;
      }
LABEL_59:
      swift_bridgeObjectRetain();
      if (sub_1ACE77508())
      {
LABEL_12:
        if ((v7 & 0xC000000000000001) != 0)
        {
          uint64_t v13 = v2;
          uint64_t v14 = (char *)MEMORY[0x1AD119490](0, v7);
        }
        else
        {
          if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          uint64_t v13 = v2;
          uint64_t v14 = (char *)*(id *)(v7 + 32);
        }
        uint64_t v15 = v14;
        swift_bridgeObjectRelease();
        if (*(unsigned char *)(*(void *)&v15[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes] + 74))
        {
          id v21 = objc_msgSend(v1, sel_entitledTranscriptIdentifier);
          if (v21)
          {
            uint64_t v22 = v21;
            uint64_t v18 = sub_1ACE761B8();
            uint64_t v20 = v23;
          }
          else
          {
            uint64_t v18 = 0;
            uint64_t v20 = 0;
          }
          id v24 = objc_msgSend(v1, sel_entitledTranscriptProvider);
          if (v24)
          {
LABEL_23:
            unint64_t v25 = v24;
            sub_1ACE761B8();
            uint64_t v27 = v26;

            uint64_t v2 = v13;
            if (!v20) {
              goto LABEL_41;
            }
            goto LABEL_37;
          }
        }
        else
        {
          id v16 = objc_msgSend(v1, sel_freeTranscriptIdentifier);
          if (v16)
          {
            uint64_t v17 = v16;
            uint64_t v18 = sub_1ACE761B8();
            uint64_t v20 = v19;
          }
          else
          {
            uint64_t v18 = 0;
            uint64_t v20 = 0;
          }
          id v24 = objc_msgSend(v1, sel_freeTranscriptProvider);
          if (v24) {
            goto LABEL_23;
          }
        }

        uint64_t v27 = 0;
        uint64_t v2 = v13;
        if (!v20) {
          goto LABEL_41;
        }
        goto LABEL_37;
      }
      goto LABEL_31;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_5;
    }
  }
  uint64_t v2 = 0;
LABEL_31:
  swift_bridgeObjectRelease();
LABEL_32:
  id v28 = objc_msgSend(v1, sel_freeTranscriptIdentifier);
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v18 = sub_1ACE761B8();
    uint64_t v20 = v30;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v20 = 0;
  }
  id v31 = objc_msgSend(v1, sel_freeTranscriptProvider);
  if (v31)
  {
    uint64_t v32 = v31;
    sub_1ACE761B8();
    uint64_t v27 = v33;

    if (!v20)
    {
LABEL_41:
      swift_bridgeObjectRelease();

      *(_OWORD *)(a1 + 73) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      return;
    }
  }
  else
  {
    uint64_t v27 = 0;
    if (!v20) {
      goto LABEL_41;
    }
  }
LABEL_37:
  if (!v27) {
    goto LABEL_41;
  }
  uint64_t v49 = v18;
  id v34 = objc_msgSend(v1, sel_episodeStoreId);
  if (v34)
  {
    char v35 = v34;
    uint64_t v36 = sub_1ACE761B8();
    unint64_t v48 = v37;
  }
  else
  {
    unint64_t v48 = 0xE100000000000000;
    uint64_t v36 = 48;
  }
  id v38 = objc_msgSend(v1, sel_title);
  if (v38)
  {
    uint64_t v39 = v38;
    uint64_t v40 = sub_1ACE761B8();
    uint64_t v42 = v41;

    if (v2) {
      goto LABEL_45;
    }
LABEL_48:
    uint64_t v43 = v2;
LABEL_50:
    uint64_t v45 = 0;
    goto LABEL_51;
  }
  uint64_t v40 = 0;
  uint64_t v42 = 0;
  if (!v2) {
    goto LABEL_48;
  }
LABEL_45:
  uint64_t v43 = v2;
  uint64_t v44 = *(void *)&v2[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes];
  if (!v44)
  {
    uint64_t v2 = 0;
    goto LABEL_50;
  }
  uint64_t v2 = *(char **)(v44 + 88);
  uint64_t v45 = *(void *)(v44 + 96);
  swift_bridgeObjectRetain();
LABEL_51:
  uint64_t v46 = sub_1ACE775B8();

  swift_bridgeObjectRelease();
  if (v46 == 1) {
    char v47 = 1;
  }
  else {
    char v47 = 2;
  }
  *(void *)a1 = v36;
  *(void *)(a1 + 8) = v48;
  if (!v46) {
    char v47 = 0;
  }
  *(void *)(a1 + 16) = v40;
  *(void *)(a1 + 24) = v42;
  *(void *)(a1 + 32) = v49;
  *(void *)(a1 + 40) = v20;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 1;
  *(void *)(a1 + 72) = v2;
  *(void *)(a1 + 80) = v45;
  *(unsigned char *)(a1 + 88) = v47;
}

double Double.roundedDownToNearestMillisecond.getter(double a1)
{
  return floor(a1 * 1000.0) / 1000.0;
}

uint64_t static ModelError.== infix(_:_:)()
{
  return 1;
}

uint64_t ModelError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t ModelError.hashValue.getter()
{
  return sub_1ACE77B78();
}

unint64_t sub_1ACE52954()
{
  unint64_t result = qword_1E99F6C08;
  if (!qword_1E99F6C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6C08);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ModelError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACE52A44);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelError()
{
  return &type metadata for ModelError;
}

uint64_t TranscriptsBackgroundSessionDescriptor.init(caches:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACE52A84(a1, a2);
}

uint64_t sub_1ACE52A84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t TranscriptsBackgroundSessionDescriptor.caches.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACE52AF8(v1, a1);
}

uint64_t sub_1ACE52AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id TranscriptsBackgroundSessionDescriptor.create(session:delegate:)(void *a1, uint64_t a2)
{
  swift_getObjectType();
  return sub_1ACDCCFF4(a1, a2);
}

uint64_t TranscriptsBackgroundSessionDescriptor.load(data:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEB0);
  uint64_t v9 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DC50);
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6C10);
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  id v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6C18);
  uint64_t v32 = *(void *)(v34 - 8);
  __n128 v17 = MEMORY[0x1F4188790](v34);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, a1, v5, v17);
  sub_1ACE759C8();
  if (qword_1E99EFEA8 != -1) {
    swift_once();
  }
  uint64_t v20 = (void *)qword_1E99F2630;
  id v36 = (id)qword_1E99F2630;
  uint64_t v21 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v4, 1, 1, v21);
  sub_1ACA51E1C();
  sub_1ACA51EA4(&qword_1EB76DEA8, &qword_1EB76DEB0);
  sub_1ACE53934((unint64_t *)&qword_1EB7669D0, (void (*)(uint64_t))sub_1ACA51E1C);
  id v22 = v20;
  uint64_t v23 = v29;
  sub_1ACE75CA8();
  sub_1ACAFA0D0((uint64_t)v4);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v23);
  sub_1ACA51EA4(&qword_1EB76DC48, &qword_1EB76DC50);
  uint64_t v24 = v31;
  sub_1ACE75C28();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F6C20);
  sub_1ACA51EA4(&qword_1E99F6C28, &qword_1E99F6C10);
  sub_1ACA51EA4(&qword_1E99F6C30, &qword_1E99F6C20);
  uint64_t v25 = v35;
  sub_1ACE75B98();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v25);
  sub_1ACA51EA4(&qword_1E99F6C38, &qword_1E99F6C18);
  uint64_t v26 = v34;
  uint64_t v27 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v26);
  return v27;
}

uint64_t sub_1ACE531A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1ACE74F38();
  if (!v1)
  {
    uint64_t v5 = result;
    unint64_t v6 = v4;
    TranscriptParser.parse(ttmlData:)(result, v4, a1);
    return sub_1ACA50850(v5, v6);
  }
  return result;
}

uint64_t sub_1ACE53204(void **a1)
{
  uint64_t v1 = *a1;
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1ACE754C8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB768C28);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1ACE75498();
  os_log_type_t v6 = sub_1ACE76BE8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    id v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    uint64_t v10 = sub_1ACE76228();
    sub_1ACA3189C(v10, v11, &v13);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AC9D5000, v5, v6, "Received background wakeup for non-transcript (or malformed) content from transcript session; error: %s",
      v7,
      0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v8, -1, -1);
    MEMORY[0x1AD11B340](v7, -1, -1);
  }
  else
  {
  }
  return sub_1ACE759D8();
}

uint64_t TranscriptsBackgroundSessionDescriptor.stash(asset:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771708);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5C98);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *(_OWORD *)(a1 + 16);
  v15[0] = *(_OWORD *)a1;
  v15[1] = v12;
  _OWORD v15[2] = *(_OWORD *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  sub_1ACDC6BC4((uint64_t)v15, a2);
  sub_1ACE759C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
  sub_1ACE75998();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1ACA51EA4(&qword_1E99F5CA0, &qword_1E99F5C98);
  uint64_t v13 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

uint64_t sub_1ACE53638(uint64_t a1)
{
  return TranscriptsBackgroundSessionDescriptor.load(data:)(a1);
}

uint64_t sub_1ACE53650(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771708);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5C98);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *(_OWORD *)(a1 + 16);
  v15[0] = *(_OWORD *)a1;
  v15[1] = v12;
  _OWORD v15[2] = *(_OWORD *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  sub_1ACDC6BC4((uint64_t)v15, a2);
  sub_1ACE759C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
  sub_1ACE75998();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1ACA51EA4(&qword_1E99F5CA0, &qword_1E99F5C98);
  uint64_t v13 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

_UNKNOWN **sub_1ACE5388C()
{
  return &protocol witness table for TTMLRequest;
}

_UNKNOWN **sub_1ACE53898()
{
  return &protocol witness table for TTMLRequest;
}

uint64_t sub_1ACE538A4()
{
  return sub_1ACE53934(&qword_1E99F5CD8, (void (*)(uint64_t))type metadata accessor for TTMLRequest);
}

uint64_t sub_1ACE538EC()
{
  return sub_1ACE53934(&qword_1E99F5CE0, (void (*)(uint64_t))type metadata accessor for TTMLRequest);
}

uint64_t sub_1ACE53934(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptsBackgroundSessionDescriptor(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = *(int *)(v4 + 60);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1ACE74F28();
    unint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
    long long v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
    *(void *)&v8[v12[15]] = *(void *)&v9[v12[15]];
    *(void *)&v8[v12[16]] = *(void *)&v9[v12[16]];
    *(void *)&v8[v12[17]] = *(void *)&v9[v12[17]];
    *(void *)&v8[v12[18]] = *(void *)&v9[v12[18]];
    *(void *)&v8[v12[19]] = *(void *)&v9[v12[19]];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptsBackgroundSessionDescriptor(uint64_t a1)
{
  swift_release();
  uint64_t v2 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038) + 60);
  uint64_t v3 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for TranscriptsBackgroundSessionDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038) + 60);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  uint64_t v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  *(void *)&v5[v8[15]] = *(void *)&v6[v8[15]];
  *(void *)&v5[v8[16]] = *(void *)&v6[v8[16]];
  *(void *)&v5[v8[17]] = *(void *)&v6[v8[17]];
  *(void *)&v5[v8[18]] = *(void *)&v6[v8[18]];
  *(void *)&v5[v8[19]] = *(void *)&v6[v8[19]];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for TranscriptsBackgroundSessionDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038) + 60);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  uint64_t v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  *(void *)&v5[v8[15]] = *(void *)&v6[v8[15]];
  swift_retain();
  swift_release();
  *(void *)&v5[v8[16]] = *(void *)&v6[v8[16]];
  swift_retain();
  swift_release();
  *(void *)&v5[v8[17]] = *(void *)&v6[v8[17]];
  swift_retain();
  swift_release();
  *(void *)&v5[v8[18]] = *(void *)&v6[v8[18]];
  swift_retain();
  swift_release();
  *(void *)&v5[v8[19]] = *(void *)&v6[v8[19]];
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for TranscriptsBackgroundSessionDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038) + 60);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  *(void *)&v5[v8[15]] = *(void *)&v6[v8[15]];
  *(void *)&v5[v8[16]] = *(void *)&v6[v8[16]];
  *(void *)&v5[v8[17]] = *(void *)&v6[v8[17]];
  *(void *)&v5[v8[18]] = *(void *)&v6[v8[18]];
  *(void *)&v5[v8[19]] = *(void *)&v6[v8[19]];
  return a1;
}

void *assignWithTake for TranscriptsBackgroundSessionDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038) + 60);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  uint64_t v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  *(void *)&v5[v8[15]] = *(void *)&v6[v8[15]];
  swift_release();
  *(void *)&v5[v8[16]] = *(void *)&v6[v8[16]];
  swift_release();
  *(void *)&v5[v8[17]] = *(void *)&v6[v8[17]];
  swift_release();
  *(void *)&v5[v8[18]] = *(void *)&v6[v8[18]];
  swift_release();
  *(void *)&v5[v8[19]] = *(void *)&v6[v8[19]];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptsBackgroundSessionDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACE53FDC);
}

uint64_t sub_1ACE53FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TranscriptsBackgroundSessionDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACE54060);
}

uint64_t sub_1ACE54060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TranscriptsBackgroundSessionDescriptor()
{
  uint64_t result = qword_1EB770098;
  if (!qword_1EB770098) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1ACE54120()
{
  sub_1ACDB58CC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1ACE541AC(uint64_t a1, void *a2)
{
  *(void *)(swift_allocObject() + 16) = a2;
  uint64_t v23 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v24 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v25 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  do
  {
    do
    {
LABEL_4:
      while (v6)
      {
        unint64_t v9 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        unint64_t v10 = v9 | (i << 6);
        uint64_t v11 = a2[2];
        if (v11) {
          goto LABEL_22;
        }
      }
      int64_t v12 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_41;
      }
      if (v12 >= v24)
      {
LABEL_39:
        swift_release();
        uint64_t v16 = 0;
        goto LABEL_38;
      }
      unint64_t v13 = *(void *)(v23 + 8 * v12);
      ++i;
      if (!v13)
      {
        int64_t i = v12 + 1;
        if (v12 + 1 >= v24) {
          goto LABEL_39;
        }
        unint64_t v13 = *(void *)(v23 + 8 * i);
        if (!v13)
        {
          int64_t i = v12 + 2;
          if (v12 + 2 >= v24) {
            goto LABEL_39;
          }
          unint64_t v13 = *(void *)(v23 + 8 * i);
          if (!v13)
          {
            int64_t i = v12 + 3;
            if (v12 + 3 >= v24) {
              goto LABEL_39;
            }
            unint64_t v13 = *(void *)(v23 + 8 * i);
            if (!v13)
            {
              int64_t v14 = v12 + 4;
              if (v14 >= v24) {
                goto LABEL_39;
              }
              unint64_t v13 = *(void *)(v23 + 8 * v14);
              for (int64_t i = v14; !v13; ++v14)
              {
                int64_t i = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_42;
                }
                if (i >= v24) {
                  goto LABEL_39;
                }
                unint64_t v13 = *(void *)(v23 + 8 * i);
              }
            }
          }
        }
      }
      unint64_t v6 = (v13 - 1) & v13;
      unint64_t v10 = __clz(__rbit64(v13)) + (i << 6);
      uint64_t v11 = a2[2];
    }
    while (!v11);
LABEL_22:
    uint64_t v15 = (uint64_t *)(*(void *)(v25 + 48) + 16 * v10);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    if (a2[4] != *v15 || a2[5] != v17)
    {
      uint64_t result = sub_1ACE77848();
      if ((result & 1) == 0) {
        continue;
      }
    }
LABEL_37:
    swift_bridgeObjectRetain();
    swift_release();
LABEL_38:
    swift_bridgeObjectRelease();
    swift_release();
    return v16;
  }
  while (v11 == 1);
  uint64_t v19 = a2 + 7;
  uint64_t v20 = 1;
  while (1)
  {
    uint64_t v21 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (*(v19 - 1) == v16 && *v19 == v17) {
      goto LABEL_37;
    }
    uint64_t result = sub_1ACE77848();
    if (result) {
      goto LABEL_37;
    }
    v19 += 2;
    ++v20;
    if (v21 == v11) {
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t CoreDataEpisodeAndShowStorage.__allocating_init(context:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  CoreDataEpisodeAndShowStorage.init(context:)(a1);
  return v2;
}

uint64_t sub_1ACE5447C(uint64_t a1)
{
  uint64_t v1 = a1 + 56;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 56);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v8 >= v5) {
      return swift_release();
    }
    uint64_t v9 = *(void *)(v1 + 8 * v8);
    ++v7;
    if (!v9)
    {
      int64_t v7 = v8 + 1;
      if (v8 + 1 >= v5) {
        return swift_release();
      }
      uint64_t v9 = *(void *)(v1 + 8 * v7);
      if (!v9)
      {
        int64_t v7 = v8 + 2;
        if (v8 + 2 >= v5) {
          return swift_release();
        }
        uint64_t v9 = *(void *)(v1 + 8 * v7);
        if (!v9)
        {
          int64_t v7 = v8 + 3;
          if (v8 + 3 >= v5) {
            return swift_release();
          }
          uint64_t v9 = *(void *)(v1 + 8 * v7);
          if (!v9) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v4 = (v9 - 1) & v9;
LABEL_5:
    swift_bridgeObjectRetain();
    sub_1ACE75898();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v10 = v8 + 4;
  if (v10 >= v5) {
    return swift_release();
  }
  uint64_t v9 = *(void *)(v1 + 8 * v10);
  if (v9)
  {
    int64_t v7 = v10;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v7 >= v5) {
      return swift_release();
    }
    uint64_t v9 = *(void *)(v1 + 8 * v7);
    ++v10;
    if (v9) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t CoreDataEpisodeAndShowStorage.episodeChanges.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

uint64_t CoreDataEpisodeAndShowStorage.showChanges.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *a1 = *(void *)(v1 + 32);
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

id CoreDataEpisodeAndShowStorage.context.getter()
{
  return *(id *)(v0 + 64);
}

void *CoreDataEpisodeAndShowStorage.init(context:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v18 = a1;
  uint64_t v19 = sub_1ACE76E78();
  uint64_t v3 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  int64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE48);
  swift_allocObject();
  uint64_t v6 = sub_1ACE758B8();
  uint64_t v20 = v6;
  sub_1ACA51EA4(&qword_1EB76DE40, &qword_1EB76DE48);
  swift_retain();
  uint64_t v20 = sub_1ACE75BE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D998);
  sub_1ACA51EA4(&qword_1EB76D990, &qword_1EB76D998);
  uint64_t v7 = sub_1ACE75AD8();
  swift_release();
  swift_release();
  v2[2] = v6;
  v2[3] = v7;
  swift_allocObject();
  uint64_t v8 = sub_1ACE758B8();
  uint64_t v20 = v8;
  swift_retain();
  uint64_t v20 = sub_1ACE75BE8();
  uint64_t v9 = sub_1ACE75AD8();
  swift_release();
  swift_release();
  void v2[4] = v8;
  v2[5] = v9;
  v2[6] = 0;
  v2[7] = 0;
  int64_t v10 = v18;
  v2[8] = v18;
  v2[9] = 0;
  uint64_t v11 = self;
  id v12 = v10;
  id v13 = objc_msgSend(v11, sel_defaultCenter);
  sub_1ACE76E88();

  sub_1ACB779B8();
  swift_retain();
  uint64_t v14 = v19;
  uint64_t v15 = sub_1ACE75D58();

  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v14);
  v2[9] = v15;
  swift_release();
  return v2;
}

uint64_t sub_1ACE54950(uint64_t a1)
{
  return sub_1ACE54B24(a1);
}

void sub_1ACE54980(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a3;
  v9[3] = a4;
  v9[4] = sub_1ACCA53B8;
  v9[5] = v8;
  void v13[4] = sub_1ACE56A5C;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  _OWORD v13[2] = sub_1ACA6DA9C;
  v13[3] = &block_descriptor_39_2;
  int64_t v10 = _Block_copy(v13);
  swift_retain();
  id v11 = a3;
  id v12 = a4;
  swift_release();
  objc_msgSend(v11, sel_performBlock_, v10);
  _Block_release(v10);
}

uint64_t sub_1ACE54AAC()
{
  return swift_deallocObject();
}

void sub_1ACE54AEC(uint64_t a1, uint64_t a2)
{
  sub_1ACE54980(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1ACE54AF4(uint64_t a1)
{
  return sub_1ACE54B24(a1);
}

uint64_t sub_1ACE54B24(uint64_t a1)
{
  sub_1ACE761B8();
  id v3 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v4 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);

  objc_msgSend(v5, sel_setPredicate_, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769598);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1ACE84820;
  uint64_t v7 = sub_1ACE761B8();
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v9;
  uint64_t v10 = sub_1ACE761B8();
  *(void *)(v6 + 88) = v8;
  *(void *)(v6 + 64) = v10;
  *(void *)(v6 + 72) = v11;
  id v12 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setPropertiesToFetch_, v12);

  objc_msgSend(v5, sel_setResultType_, 2);
  id v13 = *(void **)(v1 + 64);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76DF98);
  swift_allocObject();
  id v15 = v13;
  id v16 = v5;
  sub_1ACE75A18();
  sub_1ACA51EA4(&qword_1EB76DF90, (uint64_t *)&unk_1EB76DF98);
  uint64_t v17 = sub_1ACE75AD8();
  swift_release();

  return v17;
}

void sub_1ACE54D30(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a3;
  v9[3] = a4;
  v9[4] = sub_1ACCA53B8;
  v9[5] = v8;
  void v13[4] = sub_1ACE56A38;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  _OWORD v13[2] = sub_1ACA6DA9C;
  v13[3] = &block_descriptor_97;
  uint64_t v10 = _Block_copy(v13);
  swift_retain();
  id v11 = a3;
  id v12 = a4;
  swift_release();
  objc_msgSend(v11, sel_performBlock_, v10);
  _Block_release(v10);
}

void sub_1ACE54E5C(uint64_t a1, uint64_t a2)
{
  sub_1ACE54D30(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1ACE54E64(uint64_t a1, uint64_t a2, void (*a3)(void *, void))
{
  sub_1ACA50D4C(0, &qword_1EB76E0F0);
  unint64_t v4 = sub_1ACE76EE8();
  unint64_t v5 = v4;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1ACE77508();
    uint64_t v6 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    a3((void *)MEMORY[0x1E4FBC860], 0);
LABEL_26:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_25;
  }
LABEL_3:
  if (v6 >= 1)
  {
    uint64_t v19 = a3;
    uint64_t v8 = 0;
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      id v11 = (v5 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AD119490](v8, v5) : *(id *)(v5 + 8 * v8 + 32);
      id v12 = v11;
      *(void *)&v20[0] = sub_1ACE761B8();
      *((void *)&v20[0] + 1) = v13;
      swift_bridgeObjectRetain();
      id v14 = objc_msgSend(v12, sel___swift_objectForKeyedSubscript_, sub_1ACE77A28());
      swift_unknownObjectRelease();
      if (v14)
      {
        sub_1ACE770C8();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v20, 0, sizeof(v20));
      }
      sub_1ACA9D6FC((uint64_t)v20, (uint64_t)v21);
      if (v22) {
        break;
      }
      swift_bridgeObjectRelease();
      sub_1ACA65828((uint64_t)v21);
      uint64_t v23 = 0;
      uint64_t v24 = 0;

      uint64_t v15 = v24;
      if (v24) {
        goto LABEL_19;
      }
LABEL_6:
      if (v6 == ++v8)
      {
        swift_bridgeObjectRelease();
        v19(v9, 0);
        goto LABEL_26;
      }
    }
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v23 = 0;
      uint64_t v24 = 0;
    }

    swift_bridgeObjectRelease();
    uint64_t v15 = v24;
    if (!v24) {
      goto LABEL_6;
    }
LABEL_19:
    uint64_t v16 = v23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1ACA41EA0(0, v9[2] + 1, 1, v9);
    }
    unint64_t v18 = v9[2];
    unint64_t v17 = v9[3];
    if (v18 >= v17 >> 1) {
      uint64_t v9 = sub_1ACA41EA0((void *)(v17 > 1), v18 + 1, 1, v9);
    }
    void v9[2] = v18 + 1;
    uint64_t v10 = &v9[2 * v18];
    void v10[4] = v16;
    v10[5] = v15;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACE55188(uint64_t a1)
{
  sub_1ACE761B8();
  id v3 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  unint64_t v4 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);

  objc_msgSend(v5, sel_setPredicate_, a1);
  objc_msgSend(v5, sel_setResultType_, 1);
  uint64_t v6 = *(void **)(v1 + 64);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  uint64_t v8 = (void *)swift_allocObject();
  id v8[2] = v6;
  _OWORD v8[3] = sub_1ACE553D0;
  v8[4] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770568);
  swift_allocObject();
  id v9 = v5;
  id v10 = v6;
  sub_1ACE75A18();
  sub_1ACA51EA4(&qword_1EB770560, &qword_1EB770568);
  uint64_t v11 = sub_1ACE75AD8();
  swift_release();

  return v11;
}

uint64_t sub_1ACE55330@<X0>(uint64_t *a1@<X8>)
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
  uint64_t result = sub_1ACE76EE8();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1ACE55398()
{
  return swift_deallocObject();
}

uint64_t sub_1ACE553D0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACE55330(a1);
}

uint64_t sub_1ACE553EC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACE5542C(uint64_t a1, uint64_t a2)
{
  sub_1ACAC1BA4(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1ACE55438()
{
  uint64_t result = sub_1ACE749D8();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v17 = sub_1ACE761B8();
    sub_1ACE771F8();
    if (*(void *)(v1 + 16) && (unint64_t v2 = sub_1ACA65B48((uint64_t)v20), (v3 & 1) != 0))
    {
      sub_1ACA33128(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v21);
    }
    else
    {
      long long v21 = 0u;
      long long v22 = 0u;
    }
    sub_1ACA6A0F8((uint64_t)v20);
    if (*((void *)&v22 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E0C0);
      if (swift_dynamicCast())
      {
        swift_retain_n();
        swift_retain_n();
        swift_retain();
        swift_retain();
        sub_1ACE558E4(v17, 0);
        uint64_t v6 = v5;
        if (*(void *)(v4 + 16)) {
          sub_1ACE5447C(v4);
        }
        swift_bridgeObjectRelease();
        if (*(void *)(v6 + 16)) {
          sub_1ACE5447C(v6);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release_n();
        swift_release_n();
      }
    }
    else
    {
      sub_1ACA65828((uint64_t)&v21);
    }
    uint64_t v18 = sub_1ACE761B8();
    sub_1ACE771F8();
    if (*(void *)(v1 + 16) && (unint64_t v7 = sub_1ACA65B48((uint64_t)v20), (v8 & 1) != 0))
    {
      sub_1ACA33128(*(void *)(v1 + 56) + 32 * v7, (uint64_t)&v21);
    }
    else
    {
      long long v21 = 0u;
      long long v22 = 0u;
    }
    sub_1ACA6A0F8((uint64_t)v20);
    if (*((void *)&v22 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E0C0);
      if (swift_dynamicCast())
      {
        swift_retain_n();
        swift_retain_n();
        swift_retain();
        swift_retain();
        sub_1ACE558E4(v18, 1);
        uint64_t v11 = v10;
        if (*(void *)(v9 + 16)) {
          sub_1ACE5447C(v9);
        }
        swift_bridgeObjectRelease();
        if (*(void *)(v11 + 16)) {
          sub_1ACE5447C(v11);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release_n();
        swift_release_n();
      }
    }
    else
    {
      sub_1ACA65828((uint64_t)&v21);
    }
    uint64_t v19 = sub_1ACE761B8();
    sub_1ACE771F8();
    if (*(void *)(v1 + 16) && (unint64_t v12 = sub_1ACA65B48((uint64_t)v20), (v13 & 1) != 0))
    {
      sub_1ACA33128(*(void *)(v1 + 56) + 32 * v12, (uint64_t)&v21);
    }
    else
    {
      long long v21 = 0u;
      long long v22 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1ACA6A0F8((uint64_t)v20);
    if (*((void *)&v22 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E0C0);
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        swift_retain_n();
        swift_retain_n();
        swift_retain();
        swift_retain();
        sub_1ACE558E4(v19, 1);
        uint64_t v16 = v15;
        if (*(void *)(v14 + 16)) {
          sub_1ACE5447C(v14);
        }
        swift_bridgeObjectRelease();
        if (*(void *)(v16 + 16)) {
          sub_1ACE5447C(v16);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release_n();
        return swift_release_n();
      }
    }
    else
    {
      return sub_1ACA65828((uint64_t)&v21);
    }
  }
  return result;
}

void sub_1ACE558E4(uint64_t a1, char a2)
{
  uint64_t v3 = a1;
  v68[2] = MEMORY[0x1E4FBC870];
  v68[3] = MEMORY[0x1E4FBC870];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1ACE77138();
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
    sub_1ACE5695C();
    char v4 = a2;
    sub_1ACE76A28();
    uint64_t v3 = v68[4];
    uint64_t v65 = v68[5];
    uint64_t v5 = v68[6];
    uint64_t v6 = v68[7];
    unint64_t v7 = v68[8];
  }
  else
  {
    char v4 = a2;
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v65 = a1 + 56;
    uint64_t v9 = ~v8;
    uint64_t v10 = -v8;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v7 = v11 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v5 = v9;
    uint64_t v6 = 0;
  }
  int64_t v64 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v63 = (void **)(v2 + 48);
  uint64_t v61 = v3;
  if ((v3 & 0x8000000000000000) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  if (!sub_1ACE771A8()) {
    goto LABEL_62;
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v12 = (id)v68[0];
  swift_unknownObjectRelease();
  int64_t v13 = v6;
  uint64_t v14 = v7;
  if (!v12) {
    goto LABEL_62;
  }
  while (1)
  {
    self;
    uint64_t v18 = swift_dynamicCastObjCClass();
    if (v18)
    {
      uint64_t v19 = (void *)v18;
      id v20 = v12;
      id v21 = objc_msgSend(v19, sel_uuid);
      if (v21)
      {
        long long v22 = v21;
        uint64_t v66 = sub_1ACE761B8();
        uint64_t v24 = v23;

        if ((v4 & 1) == 0) {
          goto LABEL_49;
        }
        swift_beginAccess();
        uint64_t v25 = *v63;
        if (!*v63) {
          goto LABEL_49;
        }
        swift_bridgeObjectRetain();
        id v26 = objc_msgSend(v19, sel_changedValues);
        uint64_t v27 = sub_1ACE75FF8();

        swift_bridgeObjectRetain_n();
        uint64_t v28 = sub_1ACE541AC(v27, v25);
        unint64_t v30 = v29;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v30)
        {
          os_log_t v59 = (os_log_t)v28;
          uint64_t v31 = qword_1EB768C20;
          swift_bridgeObjectRetain();
          if (v31 != -1) {
            swift_once();
          }
          uint64_t v32 = sub_1ACE754C8();
          __swift_project_value_buffer(v32, (uint64_t)qword_1EB768C00);
          swift_bridgeObjectRetain();
          uint64_t v33 = sub_1ACE75498();
          os_log_type_t v34 = sub_1ACE76BC8();
          if (os_log_type_enabled(v33, v34))
          {
            uint64_t v35 = (uint8_t *)swift_slowAlloc();
            os_log_t log = v33;
            uint64_t v36 = swift_slowAlloc();
            v68[0] = v36;
            *(_DWORD *)uint64_t v35 = 136315138;
            swift_bridgeObjectRetain();
            sub_1ACA3189C((uint64_t)v59, v30, v68);
            sub_1ACE76FF8();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1AC9D5000, log, v34, "Found requested key in notification: %s", v35, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1AD11B340](v36, -1, -1);
            MEMORY[0x1AD11B340](v35, -1, -1);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease_n();
          }
          uint64_t v3 = v61;
          char v4 = a2;
LABEL_49:
          uint64_t v55 = v66;
LABEL_55:
          sub_1ACD3007C(v68, v55, v24);

          swift_bridgeObjectRelease();
LABEL_12:
          uint64_t v6 = v13;
          unint64_t v7 = v14;
          if (v3 < 0) {
            goto LABEL_8;
          }
          goto LABEL_13;
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v3 = v61;
        char v4 = a2;
      }
      else
      {
      }
    }
    self;
    uint64_t v37 = swift_dynamicCastObjCClass();
    if (!v37)
    {

      goto LABEL_12;
    }
    id v38 = (void *)v37;
    id v20 = v12;
    id v39 = objc_msgSend(v38, sel_uuid);
    if (!v39)
    {

      goto LABEL_12;
    }
    uint64_t v40 = v39;
    uint64_t v41 = sub_1ACE761B8();
    uint64_t v24 = v42;

    if ((v4 & 1) == 0) {
      goto LABEL_54;
    }
    swift_beginAccess();
    uint64_t v43 = *v63;
    if (!*v63) {
      goto LABEL_54;
    }
    uint64_t v67 = v41;
    swift_bridgeObjectRetain();
    id v44 = objc_msgSend(v38, sel_changedValues);
    uint64_t v45 = sub_1ACE75FF8();

    swift_bridgeObjectRetain_n();
    uint64_t v46 = sub_1ACE541AC(v45, v43);
    unint64_t v48 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v48)
    {
      uint64_t v49 = qword_1EB768C20;
      swift_bridgeObjectRetain();
      if (v49 != -1) {
        swift_once();
      }
      uint64_t v50 = sub_1ACE754C8();
      __swift_project_value_buffer(v50, (uint64_t)qword_1EB768C00);
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_1ACE75498();
      os_log_type_t v52 = sub_1ACE76BC8();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v60 = v51;
        uint64_t v53 = (uint8_t *)swift_slowAlloc();
        uint64_t v57 = v46;
        uint64_t v54 = swift_slowAlloc();
        v68[0] = v54;
        *(_DWORD *)uint64_t v53 = 136315138;
        swift_bridgeObjectRetain();
        sub_1ACA3189C(v57, v48, v68);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1AC9D5000, v60, v52, "Found requested key in notification: %s", v53, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v54, -1, -1);
        MEMORY[0x1AD11B340](v53, -1, -1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease_n();
      }
      uint64_t v3 = v61;
      char v4 = a2;
      uint64_t v41 = v67;
LABEL_54:
      uint64_t v55 = v41;
      goto LABEL_55;
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v6 = v13;
    unint64_t v7 = v14;
    uint64_t v3 = v61;
    char v4 = a2;
    if (v61 < 0) {
      goto LABEL_8;
    }
LABEL_13:
    if (!v7) {
      break;
    }
    uint64_t v14 = (v7 - 1) & v7;
    unint64_t v15 = __clz(__rbit64(v7)) | (v6 << 6);
    int64_t v13 = v6;
LABEL_24:
    id v12 = *(id *)(*(void *)(v3 + 48) + 8 * v15);
    if (!v12) {
      goto LABEL_62;
    }
  }
  int64_t v13 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    return;
  }
  if (v13 >= v64) {
    goto LABEL_62;
  }
  unint64_t v16 = *(void *)(v65 + 8 * v13);
  if (v16) {
    goto LABEL_23;
  }
  uint64_t v17 = v6 + 2;
  if (v6 + 2 >= v64) {
    goto LABEL_62;
  }
  unint64_t v16 = *(void *)(v65 + 8 * v17);
  if (v16) {
    goto LABEL_22;
  }
  uint64_t v17 = v6 + 3;
  if (v6 + 3 >= v64) {
    goto LABEL_62;
  }
  unint64_t v16 = *(void *)(v65 + 8 * v17);
  if (v16)
  {
LABEL_22:
    int64_t v13 = v17;
LABEL_23:
    uint64_t v14 = (v16 - 1) & v16;
    unint64_t v15 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_24;
  }
  int64_t v13 = v6 + 4;
  if (v6 + 4 >= v64) {
    goto LABEL_62;
  }
  unint64_t v16 = *(void *)(v65 + 8 * v13);
  if (v16) {
    goto LABEL_23;
  }
  uint64_t v56 = v6 + 5;
  while (v64 != v56)
  {
    unint64_t v16 = *(void *)(v65 + 8 * v56++);
    if (v16)
    {
      int64_t v13 = v56 - 1;
      goto LABEL_23;
    }
  }
LABEL_62:
  sub_1ACA50A70();
}

uint64_t sub_1ACE561B8(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACE56214(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t CoreDataEpisodeAndShowStorage.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t CoreDataEpisodeAndShowStorage.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACE56348@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 24);
  *a1 = *(void *)(*(void *)v1 + 16);
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

uint64_t sub_1ACE56388@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40);
  *a1 = *(void *)(*(void *)v1 + 32);
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

uint64_t sub_1ACE563C8(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  *(void *)(v3 + 48) = a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACE56428(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  *(void *)(v3 + 56) = a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACE56488(uint64_t a1)
{
  return sub_1ACE54950(a1);
}

uint64_t sub_1ACE564AC(uint64_t a1)
{
  return sub_1ACE54AF4(a1);
}

uint64_t sub_1ACE564D0(uint64_t a1)
{
  return sub_1ACE55188(a1);
}

uint64_t sub_1ACE564F4(void *a1, void *a2)
{
  if (!a2) {
    return 1;
  }
  id v3 = objc_msgSend(a1, sel_changedValues);
  uint64_t v4 = sub_1ACE75FF8();

  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1ACE541AC(v4, a2);
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v7) {
    return 0;
  }
  uint64_t v8 = qword_1EB768C20;
  swift_bridgeObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1ACE754C8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB768C00);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1ACE75498();
  os_log_type_t v11 = sub_1ACE76BC8();
  if (!os_log_type_enabled(v10, v11))
  {

    swift_bridgeObjectRelease_n();
    return 1;
  }
  id v12 = (uint8_t *)swift_slowAlloc();
  uint64_t v13 = swift_slowAlloc();
  uint64_t v16 = v13;
  *(_DWORD *)id v12 = 136315138;
  swift_bridgeObjectRetain();
  sub_1ACA3189C(v5, v7, &v16);
  sub_1ACE76FF8();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_1AC9D5000, v10, v11, "Found requested key in notification: %s", v12, 0xCu);
  uint64_t v14 = 1;
  swift_arrayDestroy();
  MEMORY[0x1AD11B340](v13, -1, -1);
  MEMORY[0x1AD11B340](v12, -1, -1);
  swift_bridgeObjectRelease();

  return v14;
}

uint64_t sub_1ACE56734@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACE56784@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for CoreDataEpisodeAndShowStorage()
{
  return self;
}

uint64_t method lookup function for CoreDataEpisodeAndShowStorage(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CoreDataEpisodeAndShowStorage);
}

uint64_t dispatch thunk of CoreDataEpisodeAndShowStorage.showPropertyLimiters.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of CoreDataEpisodeAndShowStorage.episodePropertyLimitiers.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of CoreDataEpisodeAndShowStorage.__allocating_init(context:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of CoreDataEpisodeAndShowStorage.fetchShowIDs(matching:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of CoreDataEpisodeAndShowStorage.fetchEpisodeIDs(matching:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of CoreDataEpisodeAndShowStorage.fetchEpisodeManagedIDs(matching:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of CoreDataEpisodeAndShowStorage.managed(object:didChange:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of CoreDataEpisodeAndShowStorage.limitShowNotifications(on:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of CoreDataEpisodeAndShowStorage.limitEpisodeNotifications(on:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

unint64_t sub_1ACE5695C()
{
  unint64_t result = qword_1E99F6C40;
  if (!qword_1E99F6C40)
  {
    sub_1ACA50D4C(255, (unint64_t *)&qword_1EB772590);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6C40);
  }
  return result;
}

uint64_t sub_1ACE569C4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACE569FC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACE56A38()
{
  return sub_1ACE54E64(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void *, void))(v0 + 32));
}

unint64_t static FeedUpdateMetricsAction.error.getter()
{
  return 0xD000000000000011;
}

unint64_t static FeedUpdateMetricsAction.finishedWithoutURL.getter()
{
  return 0xD000000000000020;
}

unint64_t static FeedUpdateMetricsAction.notificationReceived.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t static FeedUpdateMetricsAction.notificationScheduled.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static FeedUpdateMetricsAction.notificationTapped.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static FeedUpdateMetricsAction.podcastDataSource.getter()
{
  return 0xD000000000000013;
}

unint64_t static FeedUpdateMetricsAction.notificationSetRetryFlag.getter()
{
  return 0xD000000000000022;
}

unint64_t static FeedUpdateMetricsAction.notificationScheduledViaCarousel.getter()
{
  return 0xD00000000000002ALL;
}

unint64_t static FeedUpdateMetricsAction.pageParser.getter()
{
  return 0xD000000000000014;
}

unint64_t static FeedUpdateMetricsAction.parser.getter()
{
  return 0xD000000000000010;
}

unint64_t static FeedUpdateMetricsAction.fetchFeedsExpectedToUpdate.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t static FeedUpdateMetricsAction.processCarouselTask.getter()
{
  return 0xD000000000000013;
}

id FeedUpdateMetricsAction.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id FeedUpdateMetricsAction.init()()
{
  return sub_1ACE57ABC(type metadata accessor for FeedUpdateMetricsAction);
}

uint64_t type metadata accessor for FeedUpdateMetricsAction()
{
  return self;
}

id FeedUpdateMetricsAction.__deallocating_deinit()
{
  return sub_1ACE57B8C(type metadata accessor for FeedUpdateMetricsAction);
}

uint64_t static FeedUpdateMetricsDataKey.actionType.getter()
{
  return 0x79546E6F69746361;
}

unint64_t static FeedUpdateMetricsDataKey.hasPendingCarouselTask.getter()
{
  return 0xD000000000000016;
}

uint64_t static FeedUpdateMetricsDataKey.backgroundFetch.getter()
{
  return 0x756F72676B636162;
}

unint64_t static FeedUpdateMetricsDataKey.carouselTaskUserString.getter()
{
  return 0xD000000000000016;
}

uint64_t static FeedUpdateMetricsDataKey.backgroundTask.getter()
{
  return 0x756F72676B636162;
}

unint64_t static FeedUpdateMetricsDataKey.deletedEpisodeCount.getter()
{
  return 0xD000000000000013;
}

uint64_t static FeedUpdateMetricsDataKey.episodeCount.getter()
{
  return 0x4365646F73697065;
}

uint64_t static FeedUpdateMetricsDataKey.error.getter()
{
  return 0x726F727265;
}

unint64_t static FeedUpdateMetricsDataKey.eventId.getter()
{
  return 0xD000000000000011;
}

uint64_t static FeedUpdateMetricsDataKey.fetchInterval.getter()
{
  return 0x746E496863746566;
}

uint64_t static FeedUpdateMetricsDataKey.foreground.getter()
{
  return 0x756F726765726F66;
}

uint64_t static FeedUpdateMetricsDataKey.needsBootstrap.getter()
{
  return 0x6F6F42736465656ELL;
}

uint64_t static FeedUpdateMetricsDataKey.newEpisodeCount.getter()
{
  return 0x6F7369704577656ELL;
}

unint64_t static FeedUpdateMetricsDataKey.notificationEpisodesCount.getter()
{
  return 0xD000000000000019;
}

unint64_t static FeedUpdateMetricsDataKey.notificationType.getter()
{
  return 0xD000000000000010;
}

uint64_t static FeedUpdateMetricsDataKey.pageCount.getter()
{
  return 0x6E756F4365676170;
}

uint64_t static FeedUpdateMetricsDataKey.pcrFallback.getter()
{
  return 0x6C6C61665F726370;
}

uint64_t static FeedUpdateMetricsDataKey.podcastCount.getter()
{
  return 0x4374736163646F70;
}

uint64_t static FeedUpdateMetricsDataKey.podcastStoreId.getter()
{
  return 0x5374736163646F70;
}

uint64_t static FeedUpdateMetricsDataKey.podcastUuid.getter()
{
  return 0x5574736163646F70;
}

unint64_t static FeedUpdateMetricsDataKey.source.getter()
{
  return 0xD000000000000010;
}

uint64_t static FeedUpdateMetricsDataKey.statusCode.getter()
{
  return 0x635F737574617473;
}

unint64_t static FeedUpdateMetricsDataKey.totalEpisodeCount.getter()
{
  return 0xD000000000000011;
}

unint64_t static FeedUpdateMetricsDataKey.uniquePodcastUuidCount.getter()
{
  return 0xD000000000000016;
}

unint64_t static FeedUpdateMetricsDataKey.updatedEpisodeCount.getter()
{
  return 0xD000000000000013;
}

uint64_t static FeedUpdateMetricsDataKey.updaterType.getter()
{
  return 0x5472657461647075;
}

uint64_t static FeedUpdateMetricsDataKey.userInitiated.getter()
{
  return 0x74696E4972657375;
}

unint64_t static FeedUpdateMetricsDataKey.detectedSyncLoop.getter()
{
  return 0xD000000000000010;
}

id FeedUpdateMetricsDataKey.init()()
{
  return sub_1ACE57ABC(type metadata accessor for FeedUpdateMetricsDataKey);
}

uint64_t type metadata accessor for FeedUpdateMetricsDataKey()
{
  return self;
}

id FeedUpdateMetricsDataKey.__deallocating_deinit()
{
  return sub_1ACE57B8C(type metadata accessor for FeedUpdateMetricsDataKey);
}

uint64_t static FeedUpdateMetricsDataUpdaterValue.sync.getter()
{
  return 1668184435;
}

uint64_t static FeedUpdateMetricsDataUpdaterValue.rss.getter()
{
  return 7566194;
}

id FeedUpdateMetricsDataUpdaterValue.init()()
{
  return sub_1ACE57ABC(type metadata accessor for FeedUpdateMetricsDataUpdaterValue);
}

id sub_1ACE57ABC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for FeedUpdateMetricsDataUpdaterValue()
{
  return self;
}

id sub_1ACE57B30(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  v4.receiver = a1;
  v4.super_class = (Class)a3();
  return objc_msgSendSuper2(&v4, sel_init);
}

id FeedUpdateMetricsDataUpdaterValue.__deallocating_deinit()
{
  return sub_1ACE57B8C(type metadata accessor for FeedUpdateMetricsDataUpdaterValue);
}

id sub_1ACE57B8C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void *static MAPIContentType.allCases.getter()
{
  return &unk_1F0380718;
}

unint64_t MAPIContentType.init(rawValue:)(unint64_t a1)
{
  return sub_1ACE57F18(a1);
}

uint64_t MediaRequest.ContentType.mapiContentType.getter()
{
  return qword_1ACEAB668[*v0];
}

unint64_t MAPIContentType.mediaRequestContentType.getter@<X0>(unint64_t result@<X0>, unsigned char *a2@<X8>)
{
  if (result >= 6)
  {
    unint64_t result = sub_1ACE77A18();
    __break(1u);
  }
  else
  {
    *a2 = 0x50402030001uLL >> (8 * result);
  }
  return result;
}

unint64_t sub_1ACE57C70@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1ACE57F18(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_1ACE57CA4(void *a1@<X8>)
{
  *a1 = &unk_1F0380718;
}

uint64_t MAPIContentType.description.getter(uint64_t a1)
{
  uint64_t result = 0x74736163646F70;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x4574736163646F70;
      break;
    case 2:
      uint64_t result = 0x4374736163646F70;
      break;
    case 3:
      uint64_t result = 0x5374736163646F70;
      break;
    case 4:
      uint64_t result = 0x697263736E617274;
      break;
    case 5:
      uint64_t result = 0x69726F6765746163;
      break;
    default:
      sub_1ACE77A18();
      __break(1u);
      JUMPOUT(0x1ACE57DD0);
  }
  return result;
}

uint64_t sub_1ACE57DE8()
{
  uint64_t result = 0x74736163646F70;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      return 0x4574736163646F70;
    case 2:
      return 0x4374736163646F70;
    case 3:
      return 0x5374736163646F70;
    case 4:
      uint64_t v2 = 0x63736E617274;
      return v2 & 0xFFFFFFFFFFFFLL | 0x6972000000000000;
    case 5:
      uint64_t v2 = 0x6F6765746163;
      return v2 & 0xFFFFFFFFFFFFLL | 0x6972000000000000;
    default:
      sub_1ACE77A18();
      __break(1u);
      JUMPOUT(0x1ACE57F00);
  }
}

unint64_t sub_1ACE57F18(unint64_t result)
{
  if (result > 5) {
    return 0;
  }
  return result;
}

unint64_t sub_1ACE57F2C()
{
  unint64_t result = qword_1E99F6C48;
  if (!qword_1E99F6C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6C48);
  }
  return result;
}

unint64_t sub_1ACE57F84()
{
  unint64_t result = qword_1E99F6C50;
  if (!qword_1E99F6C50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F6C58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6C50);
  }
  return result;
}

ValueMetadata *type metadata accessor for MAPIContentType()
{
  return &type metadata for MAPIContentType;
}

uint64_t FloatingPoint.clamped(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE76158();
  sub_1ACE77A48();
  sub_1ACE77A38();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, a2);
}

uint64_t FloatingPoint.clamped(to:)()
{
  return sub_1ACE77A38();
}

{
  return sub_1ACE77A48();
}

uint64_t sub_1ACE58138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACE581E0, 0, 0);
}

uint64_t sub_1ACE581E0()
{
  unint64_t v1 = *(void *)(v0 + 80);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1ACE77508();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_18;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  unint64_t v22 = v1 & 0xC000000000000001;
  uint64_t v21 = *(void *)(v0 + 80) + 32;
  do
  {
    uint64_t v23 = v4;
    if (v22)
    {
      uint64_t v6 = MEMORY[0x1AD119490](v4, *(void *)(v0 + 80));
    }
    else
    {
      uint64_t v6 = *(void *)(v21 + 8 * v4);
      swift_retain();
    }
    uint64_t v7 = *(void *)(v0 + 104);
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v9 = *(void *)(v0 + 88);
    uint64_t v10 = *(void *)(v0 + 96);
    uint64_t v11 = sub_1ACE767F8();
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v8, 1, 1, v11);
    uint64_t v13 = (void *)swift_allocObject();
    _OWORD v13[2] = 0;
    v13[3] = 0;
    void v13[4] = v6;
    v13[5] = v9;
    void v13[6] = v10;
    sub_1ACBBE50C(v8, v7);
    LODWORD(v7) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11);
    swift_retain();
    uint64_t v14 = *(void *)(v0 + 104);
    if (v7 == 1)
    {
      sub_1ACBBE574(*(void *)(v0 + 104));
    }
    else
    {
      sub_1ACE767E8();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v11);
    }
    if (v13[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v15 = sub_1ACE766D8();
      uint64_t v17 = v16;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v15 = 0;
      uint64_t v17 = 0;
    }
    uint64_t v18 = **(void **)(v0 + 72);
    uint64_t v19 = v17 | v15;
    if (v17 | v15)
    {
      uint64_t v19 = v0 + 16;
      *(void *)(v0 + 16) = 0;
      *(void *)(v0 + 24) = 0;
      *(void *)(v0 + 32) = v15;
      *(void *)(v0 + 40) = v17;
    }
    uint64_t v4 = v23 + 1;
    uint64_t v5 = *(void *)(v0 + 112);
    *(void *)(v0 + 48) = 1;
    *(void *)(v0 + 56) = v19;
    *(void *)(v0 + 64) = v18;
    swift_task_create();
    swift_release();
    sub_1ACBBE574(v5);
  }
  while (v2 != v23 + 1);
LABEL_18:
  swift_bridgeObjectRelease();
  uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E99F6C90 + dword_1E99F6C90);
  id v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v20;
  *id v20 = v0;
  v20[1] = sub_1ACE58538;
  return v24(0, 0);
}

uint64_t sub_1ACE58538()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1ACE5866C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770650);
  v5[13] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[14] = v7;
  v5[15] = *(void *)(v7 + 64);
  v5[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACE5877C, 0, 0);
}

uint64_t sub_1ACE5877C()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 112);
    unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v5 = v1 + v4;
    uint64_t v31 = (void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    uint64_t v32 = *(void *)(v3 + 72);
    unint64_t v33 = v4;
    unint64_t v30 = (*(void *)(v0 + 120) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v29 = (void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    uint64_t v6 = sub_1ACE767F8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    uint64_t v27 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    id v26 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v35 = v2;
      uint64_t v9 = *(void *)(v0 + 136);
      uint64_t v10 = *(void *)(v0 + 144);
      uint64_t v11 = *(void *)(v0 + 128);
      uint64_t v13 = *(void *)(v0 + 96);
      uint64_t v12 = *(void *)(v0 + 104);
      uint64_t v14 = *(void *)(v0 + 88);
      v28(v10, 1, 1, v6);
      uint64_t v34 = v5;
      (*v31)(v11, v5, v12);
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = 0;
      uint64_t v16 = (void *)(v15 + 16);
      *(void *)(v15 + 24) = 0;
      (*v29)(v15 + v33, v11, v12);
      uint64_t v17 = (void *)(v15 + v30);
      *uint64_t v17 = v14;
      v17[1] = v13;
      sub_1ACBBE50C(v10, v9);
      LODWORD(v9) = (*v27)(v9, 1, v6);
      swift_retain();
      uint64_t v18 = *(void *)(v0 + 136);
      if (v9 == 1)
      {
        sub_1ACBBE574(*(void *)(v0 + 136));
        if (!*v16) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_1ACE767E8();
        (*v26)(v18, v6);
        if (!*v16)
        {
LABEL_8:
          uint64_t v19 = 0;
          uint64_t v21 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v19 = sub_1ACE766D8();
      uint64_t v21 = v20;
      swift_unknownObjectRelease();
LABEL_9:
      uint64_t v22 = **(void **)(v0 + 72);
      uint64_t v23 = v21 | v19;
      if (v21 | v19)
      {
        uint64_t v23 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v19;
        *(void *)(v0 + 40) = v21;
      }
      uint64_t v8 = *(void *)(v0 + 144);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v23;
      *(void *)(v0 + 64) = v22;
      swift_task_create();
      swift_release();
      sub_1ACBBE574(v8);
      uint64_t v5 = v34 + v32;
      uint64_t v2 = v35 - 1;
      if (v35 == 1)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  uint64_t v36 = (char *)&dword_1E99F6C90 + dword_1E99F6C90;
  uint64_t v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_1ACE58AF8;
  return ((uint64_t (*)(void, void))v36)(0, 0);
}

uint64_t sub_1ACE58AF8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1ACE58C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[4] = a5;
  void v6[5] = a6;
  v6[3] = a4;
  uint64_t v7 = sub_1ACE749E8();
  void v6[6] = v7;
  v6[7] = *(void *)(v7 - 8);
  v6[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EF90);
  v6[9] = swift_task_alloc();
  uint64_t v8 = sub_1ACE76E38();
  v6[10] = v8;
  v6[11] = *(void *)(v8 - 8);
  v6[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACE58D98, 0, 0);
}

uint64_t sub_1ACE58D98()
{
  v0[2] = v0[3];
  sub_1ACE76E48();
  sub_1ACE5AC74(&qword_1EB7706D8, MEMORY[0x1E4F27FB0]);
  swift_retain();
  sub_1ACE768F8();
  uint64_t v1 = sub_1ACE5AC74(&qword_1EB7706D0, MEMORY[0x1E4F27FA0]);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1ACE58EF4;
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[10];
  return MEMORY[0x1F4187C80](v4, 0, 0, v2, v5, v1);
}

uint64_t sub_1ACE58EF4()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1ACE591C0;
  }
  else {
    uint64_t v1 = sub_1ACE59004;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1ACE59004()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
LABEL_4:
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[8], v1, v2);
  if (sub_1ACE76868())
  {
    (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
    goto LABEL_4;
  }
  uint64_t v8 = (uint64_t (*)(uint64_t))(v0[4] + *(int *)v0[4]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[14] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1ACE59290;
  uint64_t v7 = v0[8];
  return v8(v7);
}

uint64_t sub_1ACE591C0()
{
  if (!sub_1ACE777F8()) {
    swift_allocError();
  }
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1ACE59290()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1ACE5949C;
  }
  else {
    uint64_t v2 = sub_1ACE593A4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACE593A4()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  uint64_t v1 = sub_1ACE5AC74(&qword_1EB7706D0, MEMORY[0x1E4F27FA0]);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1ACE58EF4;
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[10];
  return MEMORY[0x1F4187C80](v4, 0, 0, v2, v5, v1);
}

uint64_t sub_1ACE5949C()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1ACE59550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  void v6[6] = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770650);
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770638);
  v6[12] = v8;
  v6[13] = *(void *)(v8 - 8);
  v6[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACE59678, 0, 0);
}

uint64_t sub_1ACE59678()
{
  (*(void (**)(void, void, void))(v0[10] + 16))(v0[11], v0[6], v0[9]);
  sub_1ACA51EA4(&qword_1EB770658, &qword_1EB770650);
  sub_1ACE768F8();
  uint64_t v1 = sub_1ACA51EA4(&qword_1EB770630, &qword_1EB770638);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[15] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1ACE597C4;
  uint64_t v4 = v0[12];
  return MEMORY[0x1F4187C80](v0 + 2, 0, 0, v2, v4, v1);
}

uint64_t sub_1ACE597C4()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1ACE59A60;
  }
  else {
    uint64_t v1 = sub_1ACE598D4;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1ACE598D4()
{
  uint64_t v1 = v0[3];
  if (!v1)
  {
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
    goto LABEL_5;
  }
  v0[4] = v0[2];
  v0[5] = v1;
  if (sub_1ACE76868())
  {
    uint64_t v3 = v0[13];
    uint64_t v2 = v0[14];
    uint64_t v4 = v0[12];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  uint64_t v8 = (uint64_t (*)(void *))(v0[7] + *(int *)v0[7]);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[16] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1ACE59B1C;
  return v8(v0 + 4);
}

uint64_t sub_1ACE59A60()
{
  if (!sub_1ACE777F8()) {
    swift_allocError();
  }
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1ACE59B1C()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1ACE59D1C;
  }
  else {
    uint64_t v2 = sub_1ACE59C30;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACE59C30()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1ACA51EA4(&qword_1EB770630, &qword_1EB770638);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1ACE597C4;
  uint64_t v4 = *(void *)(v0 + 96);
  return MEMORY[0x1F4187C80](v0 + 16, 0, 0, v2, v4, v1);
}

uint64_t sub_1ACE59D1C()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1ACE59DBC(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  v3[2] = a1;
  if (a1)
  {
    swift_getObjectType();
    uint64_t v4 = sub_1ACE766D8();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  void v3[5] = v4;
  void v3[6] = v6;
  return MEMORY[0x1F4188298](sub_1ACE59E5C, v4, v6);
}

uint64_t sub_1ACE59E5C()
{
  v0[7] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
  if (sub_1ACE768B8())
  {
    uint64_t v1 = (uint64_t (*)(void))v0[1];
    return v1();
  }
  else
  {
    v0[8] = 0;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[9] = v3;
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770660);
    *uint64_t v3 = v0;
    v3[1] = sub_1ACE59F90;
    uint64_t v5 = v0[3];
    uint64_t v6 = v0[2];
    return MEMORY[0x1F4187E30](v0 + 11, v6, v5, v4);
  }
}

uint64_t sub_1ACE59F90()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_1ACE5A1DC;
  }
  else
  {
    *(unsigned char *)(v2 + 89) = *(unsigned char *)(v2 + 88);
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_1ACE5A0AC;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_1ACE5A0AC()
{
  if (*(unsigned char *)(v0 + 89))
  {
    uint64_t v1 = *(void *)(v0 + 64);
    if (sub_1ACE768B8())
    {
      if (v1) {
        swift_willThrow();
      }
      uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
      return v2();
    }
    *(void *)(v0 + 64) = v1;
  }
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770660);
  *uint64_t v4 = v0;
  v4[1] = sub_1ACE59F90;
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = *(void *)(v0 + 16);
  return MEMORY[0x1F4187E30](v0 + 88, v7, v6, v5);
}

uint64_t sub_1ACE5A1DC()
{
  uint64_t v1 = (void *)v0[10];
  if (v0[8])
  {

    uint64_t v1 = (void *)v0[8];
  }
  if (sub_1ACE768B8())
  {
    if (v1) {
      swift_willThrow();
    }
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    v0[8] = v1;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[9] = v4;
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770660);
    *uint64_t v4 = v0;
    v4[1] = sub_1ACE59F90;
    uint64_t v6 = v0[3];
    uint64_t v7 = v0[2];
    return MEMORY[0x1F4187E30](v0 + 11, v7, v6, v5);
  }
}

uint64_t NSNotificationCenter.respond(to:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  void v4[6] = v3;
  _OWORD v4[3] = a1;
  void v4[4] = a2;
  return MEMORY[0x1F4188298](sub_1ACE5A340, 0, 0);
}

uint64_t sub_1ACE5A340()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  id v4 = *(id *)(v0 + 48);
  uint64_t v5 = sub_1ACE5A648(v2);
  *(void *)(v0 + 56) = v5;

  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 64) = v6;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v1;
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v7;
  id v7[2] = v5;
  v7[3] = &unk_1E99F34E8;
  void v7[4] = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1ACC1605C;
  uint64_t v9 = MEMORY[0x1E4FBC848] + 8;
  uint64_t v10 = MEMORY[0x1E4FBC848] + 8;
  uint64_t v11 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188080](v8, v9, v10, 0, 0, &unk_1E99F34F0, v7, v11);
}

uint64_t sub_1ACE5A4A0(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_1ACA51034;
  return v6(a1);
}

uint64_t sub_1ACE5A578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *a4;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1ACA50B84;
  return sub_1ACE58C48(a1, a2, a3, v12, a5, a6);
}

uint64_t sub_1ACE5A648(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    sub_1ACE773D8();
    id v4 = (void **)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      id v6 = v5;
      sub_1ACE76E58();

      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1ACE5A710()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACE5A748(uint64_t a1)
{
  id v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1ACA51034;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  id v6 = (void *)swift_task_alloc();
  long long v5[2] = v6;
  *id v6 = v5;
  v6[1] = sub_1ACA51034;
  return v8(a1);
}

uint64_t sub_1ACE5A86C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1ACA50B84;
  return sub_1ACE58138(a1, a2, v6, v7, v8);
}

uint64_t sub_1ACE5A930()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770650);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACE5AA20(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB770650) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_1ACA51034;
  return sub_1ACE59550(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_1ACE5AB50()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACE5AB98(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1 + 4;
  uint64_t v8 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1ACA51034;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))((char *)&dword_1E99F6C98
                                                                                       + dword_1E99F6C98);
  return v10(a1, v4, v5, v6, v8, v7);
}

uint64_t sub_1ACE5AC74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACE5ACBC(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void *)(a2 + 16);
    if ((uint64_t)v3 >= result) {
      unint64_t v4 = result;
    }
    else {
      unint64_t v4 = *(void *)(a2 + 16);
    }
    if (result) {
      unint64_t v5 = v4;
    }
    else {
      unint64_t v5 = 0;
    }
    if (v3 >= v5)
    {
      type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
      return a2;
    }
  }
  __break(1u);
  return result;
}

BOOL String.containsVisibleText.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE74988();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = a1;
  v13[1] = a2;
  sub_1ACE74958();
  sub_1ACA4F4AC();
  uint64_t v8 = sub_1ACE77048();
  unint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  return v11 != 0;
}

BOOL Optional<A>.containsVisibleText.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE74988();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2) {
    return 0;
  }
  v13[0] = a1;
  v13[1] = a2;
  sub_1ACE74958();
  sub_1ACA4F4AC();
  uint64_t v8 = sub_1ACE77048();
  unint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  return v11 != 0;
}

uint64_t String.init(playedOn:dateString:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE75208();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE751D8();
  char v10 = sub_1ACE75178();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    swift_bridgeObjectRelease();
    if (qword_1EB7730A8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1ACE74C48();
  }
  else
  {
    uint64_t v12 = (void *)sub_1ACE75008();
    unsigned int v13 = objc_msgSend(v12, sel_isLessThanWeekOld);

    if (v13)
    {
      if (qword_1EB7730A8 != -1) {
        swift_once();
      }
    }
    else if (qword_1EB7730A8 != -1)
    {
      swift_once();
    }
    sub_1ACE74C48();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1ACE843F0;
    *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v14 + 64) = sub_1ACADC3A8();
    *(void *)(v14 + 32) = a2;
    *(void *)(v14 + 40) = a3;
    uint64_t v11 = sub_1ACE761F8();
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = sub_1ACE750A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
  return v11;
}

uint64_t String.capitalizedFirstLetter.getter(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_1ACE5B45C(1);
  swift_bridgeObjectRelease();
  sub_1ACD28E48();
  uint64_t v4 = sub_1ACE77058();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1ACE5B3AC(1uLL, a1, a2);
  swift_bridgeObjectRelease();
  sub_1ACE5B4F8();
  swift_bridgeObjectRetain();
  sub_1ACE762B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1ACE5B3AC(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = sub_1ACE762A8();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }
  return sub_1ACE76388();
}

uint64_t sub_1ACE5B45C(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1ACE762A8();
    return sub_1ACE76388();
  }
  return result;
}

unint64_t sub_1ACE5B4F8()
{
  unint64_t result = qword_1EB76E010;
  if (!qword_1EB76E010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76E010);
  }
  return result;
}

uint64_t MTPodcast.identifier.getter()
{
  id v1 = objc_msgSend(v0, sel_uuid);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = sub_1ACE761B8();

    if (objc_msgSend(self, sel_isEmpty_, objc_msgSend(v0, sel_storeCollectionId))) {
      return v3;
    }
    unint64_t v4 = (unint64_t)objc_msgSend(v0, sel_storeCollectionId);
    if ((v4 & 0x8000000000000000) != 0) {
      return v3;
    }
    unint64_t v5 = v4;
    if (!v4 || v4 == 1000000000000) {
      return v3;
    }
    else {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_1EB768C20 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1ACE754C8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EB768C00);
    id v7 = v0;
    uint64_t v8 = sub_1ACE75498();
    os_log_type_t v9 = sub_1ACE76BE8();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = 0x3E7974706D653CLL;
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v25 = v12;
      *(_DWORD *)uint64_t v11 = 136381187;
      id v13 = objc_msgSend(v7, sel_title);
      if (v13)
      {
        uint64_t v14 = v13;
        uint64_t v15 = sub_1ACE761B8();
        unint64_t v17 = v16;
      }
      else
      {
        unint64_t v17 = 0xE700000000000000;
        uint64_t v15 = 0x3E7974706D653CLL;
      }
      uint64_t v24 = sub_1ACA3189C(v15, v17, &v25);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2049;
      id v18 = objc_msgSend(v7, sel_storeCollectionId, v24);

      sub_1ACE76FF8();
      *(_WORD *)(v11 + 22) = 2081;
      id v19 = objc_msgSend(v7, sel_feedURL, v18);
      if (v19)
      {
        uint64_t v20 = v19;
        uint64_t v10 = sub_1ACE761B8();
        unint64_t v22 = v21;
      }
      else
      {
        unint64_t v22 = 0xE700000000000000;
      }
      sub_1ACA3189C(v10, v22, &v25);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v8, v9, "MTPodcast with nil UUID, this doesn't make much sense. Podcast title %{private}s, adamID %{private}lld, feedURL %{private}s", (uint8_t *)v11, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v12, -1, -1);
      MEMORY[0x1AD11B340](v11, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  return v5;
}

uint64_t PodcastIdentifier.description.getter(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    if (a3 == 1) {
      uint64_t v3 = 0x2864697575;
    }
    else {
      uint64_t v3 = 0x284C525564656566;
    }
    uint64_t v5 = v3;
    sub_1ACE762C8();
  }
  else
  {
    uint64_t v5 = 0x28444965726F7473;
    sub_1ACE777C8();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
  }
  sub_1ACE762C8();
  return v5;
}

uint64_t PodcastIdentifier.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    sub_1ACE77B28();
    return sub_1ACE76108();
  }
  else
  {
    sub_1ACE77B28();
    return sub_1ACE77B58();
  }
}

uint64_t PodcastIdentifier.hashValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    sub_1ACE76108();
  }
  else {
    sub_1ACE77B58();
  }
  return sub_1ACE77B78();
}

uint64_t sub_1ACE5BADC()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1ACE77B18();
  sub_1ACE77B28();
  if (v1) {
    sub_1ACE76108();
  }
  else {
    sub_1ACE77B58();
  }
  return sub_1ACE77B78();
}

uint64_t sub_1ACE5BB74()
{
  if (*(unsigned char *)(v0 + 16))
  {
    sub_1ACE77B28();
    return sub_1ACE76108();
  }
  else
  {
    sub_1ACE77B28();
    return sub_1ACE77B58();
  }
}

uint64_t sub_1ACE5BC08()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1ACE77B18();
  sub_1ACE77B28();
  if (v1) {
    sub_1ACE76108();
  }
  else {
    sub_1ACE77B58();
  }
  return sub_1ACE77B78();
}

uint64_t sub_1ACE5BC9C()
{
  return PodcastIdentifier.description.getter(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1ACE5BCA8(uint64_t a1, uint64_t a2)
{
  return _s18PodcastsFoundation17PodcastIdentifierO2eeoiySbAC_ACtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

void *RemoteNonFollowedShow.prioritizedIDs.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  unint64_t v3 = v0[2];
  if (objc_msgSend(self, sel_isNotEmpty_, *v0))
  {
    unint64_t v4 = sub_1ACA44490(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v6 = v4[2];
    unint64_t v5 = v4[3];
    if (v6 >= v5 >> 1) {
      unint64_t v4 = sub_1ACA44490((void *)(v5 > 1), v6 + 1, 1, v4);
    }
    id v4[2] = v6 + 1;
    id v7 = &v4[3 * v6];
    void v7[4] = v2;
    v7[5] = 0;
    *((unsigned char *)v7 + 48) = 0;
  }
  else
  {
    unint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v8 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v8 = v1 & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v4 = sub_1ACA44490(0, v4[2] + 1, 1, v4);
    }
    unint64_t v10 = v4[2];
    unint64_t v9 = v4[3];
    if (v10 >= v9 >> 1) {
      unint64_t v4 = sub_1ACA44490((void *)(v9 > 1), v10 + 1, 1, v4);
    }
    id v4[2] = v10 + 1;
    uint64_t v11 = &v4[3 * v10];
    void v11[4] = v1;
    v11[5] = v3;
    *((unsigned char *)v11 + 48) = 2;
  }
  else if (!v4[2])
  {
    if (qword_1EB768C20 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1ACE754C8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EB768C00);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v13 = sub_1ACE75498();
    os_log_type_t v14 = sub_1ACE76BF8();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t type = v14;
      uint64_t v15 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v21 = v19;
      *(_DWORD *)uint64_t v15 = 134218498;
      sub_1ACE76FF8();
      *(_WORD *)(v15 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_1ACA3189C(v1, v3, &v21);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 22) = 2080;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E0B0);
      uint64_t v16 = sub_1ACE76228();
      sub_1ACA3189C(v16, v17, &v21);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v13, type, "We shouldn't be here: RemoteNonFollowedShow must at least have a non empty feedURL. AdamID %lld, feedURL %s, lastDatePlayed %s.", (uint8_t *)v15, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v19, -1, -1);
      MEMORY[0x1AD11B340](v15, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
  return v4;
}

uint64_t _s18PodcastsFoundation17PodcastIdentifierO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if (a3 == 1)
    {
      if (a6 == 1)
      {
        if (a1 == a4 && a2 == a5) {
          return 1;
        }
        return sub_1ACE77848();
      }
    }
    else if (a6 == 2)
    {
      if (a1 == a4 && a2 == a5) {
        return 1;
      }
      return sub_1ACE77848();
    }
    return 0;
  }
  return !a6 && a1 == a4;
}

unint64_t sub_1ACE5C0D8()
{
  unint64_t result = qword_1E99F6CB0;
  if (!qword_1E99F6CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F6CB0);
  }
  return result;
}

uint64_t destroy for PodcastIdentifier(uint64_t a1)
{
  return sub_1ACADC6D8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s18PodcastsFoundation17PodcastIdentifierOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1ACA3AA28(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PodcastIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1ACA3AA28(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1ACADC6D8(v6, v7, v8);
  return a1;
}